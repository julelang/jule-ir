// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 5/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _21a6d30de_acceptRange;
struct _200880c8a_StrBuilder;
struct _1d9654602_Range16;
struct _1d9654b30_Range32;
struct _1d96550a3_RangeTable;
struct _1d96a7369_lazyBuff;
struct _21a5ccb54_DirEntry;
struct _21a5ccdda_Directory;
struct _21a5ce0d9_File;
struct _21a5d121d_Status;
struct _1d7cdba05_cmdAttrs;
struct _1d974c80a_Log;
struct _1bd80633b_floatInfo;
struct _1bd806eb8_decimalSlice;
struct _1bd81920b_leftCheat;
struct _1bd819c23_decimal;
struct _1bd82c384_Const;
struct _1a795c013_Token;
struct _1a7962799_File;
struct _1a7964900_kindPair;
struct _1a796a8d4_lex;
struct _1a79705a9_Ast;
struct _1a79714bc_Node;
struct _1a79718da_Directive;
struct _1a79724bd_TypeDecl;
struct _1a7972ac8_IdentTypeDecl;
struct _1a7972d92_SubIdentTypeDecl;
struct _1a797326b_NamespaceTypeDecl;
struct _1a7973568_SptrTypeDecl;
struct _1a79738ed_SlcTypeDecl;
struct _1a7973bea_TupleTypeDecl;
struct _1a7973ee7_PtrTypeDecl;
struct _1a7974789_ArrTypeDecl;
struct _1a7974ed7_MapTypeDecl;
struct _1a79753b1_RetTypeDecl;
struct _1a7976802_Expr;
struct _1a7976abb_RangeExpr;
struct _1a79771c6_UseExpr;
struct _1a79773e6_TupleExpr;
struct _1a797778c_LitExpr;
struct _1a7977b66_UnsafeExpr;
struct _1a797811c_IdentExpr;
struct _1a79788ae_UnaryExpr;
struct _1a7978c88_VariadicExpr;
struct _1a7979162_CastExpr;
struct _1a797953b_NsSelectionExpr;
struct _1a7979915_SubIdentExpr;
struct _1a7979dbb_BinaryExpr;
struct _1a797a52b_FnCallExpr;
struct _1a797b021_FieldExprPair;
struct _1a797b84b_StructLit;
struct _1a797bd02_BraceLit;
struct _1a797c62c_KeyValPair;
struct _1a797cd58_SliceExpr;
struct _1a797d7b5_IndexingExpr;
struct _1a797de25_SlicingExpr;
struct _1a797e222_Constraint;
struct _1a797e6c8_GenericDecl;
struct _1a797eaa2_LabelSt;
struct _1a797ee7b_GotoSt;
struct _1a7980278_FallSt;
struct _1a79808d8_AssignLeft;
struct _1a7980e6b_AssignSt;
struct _1a7981d7e_Stmt;
struct _1a79824de_ScopeTree;
struct _1a7982c2b_ParamDecl;
struct _1a798417d_FnDecl;
struct _1a7985338_VarDecl;
struct _1a7985712_RetSt;
struct _1a7985e82_Iter;
struct _1a79867ac_WhileKind;
struct _1a79871b4_RangeKind;
struct _1a798758d_BreakSt;
struct _1a7987967_ContSt;
struct _1a7987e1d_If;
struct _1a79882e7_Else;
struct _1a798879d_Conditional;
struct _1a7988eda_TypeAliasDecl;
struct _1a7989491_Case;
struct _1a7989caa_MatchCase;
struct _1a798a5c4_UseDecl;
struct _1a798aa7a_EnumItemDecl;
struct _1a798b63b_EnumDecl;
struct _1a798be66_TypeEnumItemDecl;
struct _1a798c5c6_TypeEnumDecl;
struct _1a798c890_FieldDecl;
struct _1a798d286_StructDecl;
struct _1a798d9c3_TraitDecl;
struct _1a798e133_Impl;
struct _1a7990431_Field;
struct _1a7992444_Operators;
struct _1a7993357_Struct;
struct _1a7995535_FieldIns;
struct _1a79960d5_StructIns;
struct _1a7999eda_OperandExprModel;
struct _1a799a4d5_BinaryExprModel;
struct _1a799a8ae_UnaryExprModel;
struct _1a799addc_StructArgExprModel;
struct _1a799b283_StructLitExprModel;
struct _1a799b580_AllocStructLitExprModel;
struct _1a799bb13_CastingExprModel;
struct _1a799c4b5_FnCallExprModel;
struct _1a799c88e_SliceExprModel;
struct _1a799cd45_IndexingExprModel;
struct _1a799d2eb_AnonFnExprModel;
struct _1a799d6c5_KeyValPairExprModel;
struct _1a799db7b_MapExprModel;
struct _1a799e20e_SlicingExprModel;
struct _1a799e792_TraitSubIdentExprModel;
struct _1a79a0133_StructSubIdentExprModel;
struct _1a79a04c9_StructStaticIdentExprModel;
struct _1a79a08a3_ArrayExprModel;
struct _1a79a0ba0_TupleExprModel;
struct _1a79a1079_BuiltinOutCallExprModel;
struct _1a79a1453_BuiltinOutlnCallExprModel;
struct _1a79a182c_BuiltinNewCallExprModel;
struct _1a79a1c06_BuiltinPanicCallExprModel;
struct _1a79a21ac_BuiltinAssertCallExprModel;
struct _1a79a2663_BuiltinMakeCallExprModel;
struct _1a79a2a3c_BuiltinAppendCallExprModel;
struct _1a79a2d39_BuiltinLenCallExprModel;
struct _1a79a3136_BuiltinCapCallExprModel;
struct _1a79a3510_BuiltinDeleteCallExprModel;
struct _1a79a38d9_BuiltinCopyCallExprModel;
struct _1a79a3cb3_BuiltinErrorCallExprModel;
struct _1a79a4467_SizeofExprModel;
struct _1a79a4654_AlignofExprModel;
struct _1a79a48eb_RuneExprModel;
struct _1a79a4be8_IntegratedToStrExprModel;
struct _1a79a50c2_BackendEmitExprModel;
struct _1a79a53be_FreeExprModel;
struct _1a79a60c3_RetType;
struct _1a79a6854_Param;
struct _1a79a8328_Fn;
struct _1a79aa281_ParamIns;
struct _1a79ab309_FnIns;
struct _1a79ae4d8_ReferenceStack;
struct _1a79b09e5_Pass;
struct _1a79b549a_symbolBuilder;
struct _1a79bb6d2_Trait;
struct _1a79bd371_EnumItem;
struct _1a79bdddd_Enum;
struct _1a79c0021_TypeEnumItem;
struct _1a79c05e8_TypeEnum;
struct _1a79c3750_comptimeRange;
struct _1a79c4223_comptimeStructField;
struct _1a79c5dd4_comptimeStructFields;
struct _1a79c74ce_comptimeStatic;
struct _1a79c9190_comptimeStatics;
struct _1a79ca78a_comptimeEnumField;
struct _1a79cbb32_comptimeEnumFields;
struct _1a79cd22c_comptimeParam;
struct _1a79d03b6_comptimeParams;
struct _1a79d197d_comptimeTypeInfos;
struct _1a79d3078_comptimeTypeInfo;
struct _1a67ecc40_comptimeValue;
struct _1a680058e_comptimeFiles;
struct _1a6801b89_comptimeFile;
struct _1a68063ec_constraintChecker;
struct _1a6808751_Impl;
struct _1a680dba7_Scope;
struct _1a680e0c5_If;
struct _1a680e3c2_Else;
struct _1a680e7e0_Conditional;
struct _1a680eadc_InfIter;
struct _1a6810093_WhileIter;
struct _1a68109de_RangeIter;
struct _1a636e581_ContSt;
struct _1a79d947a_BreakSt;
struct _1a79d96de_Label;
struct _1a79d9aa7_GotoSt;
struct _1a79d9e81_Postfix;
struct _1a79da437_Assign;
struct _1a79da8dd_MultiAssign;
struct _1a79db04d_Match;
struct _1a79dbb97_Case;
struct _1a79dc3a1_FallSt;
struct _1a79dc77a_RetSt;
struct _1a79dcdda_scopeLabel;
struct _1a79dd46d_scopeGoto;
struct _1a79de45d_scopeChecker;
struct _1a6810e2e_directiveChecker;
struct _1a6817474_ImportInfo;
struct _1a681a39a_Package;
struct _1a6836c13_commonSemaMeta;
struct _1a6837818_Sema;
struct _1a68574d6_missingRetChecker;
struct _1a685a682_Var;
struct _1a685b50c_FuncPattern;
struct _1a7a381bb_typeCompatibilityChecker;
struct _1a7a39e6a_assignTypeChecker;
struct _1a7a3b840_dynamicTypeAnnotation;
struct _1a7a4169c_fnCallArgChecker;
struct _1a7a445d4_structLitChecker;
struct _1a7a463b6_rangeChecker;
struct _1a7a48b27_retTypeChecker;
struct _1a7a4b18a_SymbolTable;
struct _1a7a51503_Data;
struct _1a7a5267a_Value;
struct _1a7a5322a_Eval;
struct _1a7a71952_unaryEval;
struct _1a7a738dd_binaryEval;
struct _1a7a81016_InsGeneric;
struct _1a7a81b0a_TypeAlias;
struct _1a7a828ec_TypeKind;
struct _1a7a89abe_TypeSymbol;
struct _1a7a8a4c6_Prim;
struct _1a7a8e002_Sptr;
struct _1a7a8e9c5_Slc;
struct _1a7a905b9_Tuple;
struct _1a7a91169_Map;
struct _1a7a91ce6_Arr;
struct _1a7a927b9_Ptr;
struct _1a7a937ba_referencer;
struct _1a7a947aa_typeChecker;
struct _1a7a9c461_identTypeLookup;
struct _1a63ee644_FileInfo;
struct _1a64020a3_stmt;
struct _1a6402944_scopeParser;
struct _1a6410369_exprBuilder;
struct _1a641cac4_assignInfo;
struct _1a6420ec3_parser;
struct _1a64330e5_typeBuilder;
struct _1a7d13cc1_CompileInfo;
struct _1a7d1529a_directiveEval;
struct _1a643722b_JuleImporter;
struct _1a643d96e_ExprInspector;
struct _1a6448ced_OrderedDefines;
struct _1a86c2151_liveTable;
struct _1a86c256e_ObjectDeadCode;
struct _1a86c61bb_scopeDeadCode;
struct _1a86ca852_exprDeadCode;
struct _1a7b76194_ExceptionalForwardingExprModel;
struct _1a7b76518_SwapExprModel;
struct _1a7b768e2_EmptyCompareExprModel;
struct _1a7b76c66_RefExprModel;
struct _1a7b771d9_StrCompExprModel;
struct _1a7b7776c_MutSlicingExprModel;
struct _1a7b77a69_UnsafeBinaryExprModel;
struct _1a7b77dee_UnsafeIndexingExprModel;
struct _1a7b782c8_PushToSliceExprModel;
struct _1a7b786a2_AppendToSliceExprModel;
struct _1a7b78a7b_StrRuneIter;
struct _1a7b78d78_UnsafeDerefExprModel;
struct _1a7b79175_UnsafeCastingExprModel;
struct _1a7b79d57_nilVar;
struct _1a7b7a198_nils;
struct _1a644a519_scopeOptimizer;
struct _1a6452015_exprOptimizer;
struct _1a6457405_dynamicVar;
struct _1a6457746_dynamic;
struct _1a645a3c5_data;
struct _1a645ba14_boundaryVar;
struct _1a645bd55_boundary;
struct _1a86cba51_Optimizer;
struct _1a87030a5_AnsiEscape;
struct _1a8704628_Logger;
struct _1a9e3c810_AbsTime;
struct _1a9e3ced6_Time;
struct _1a9d6c6eb_scopeCoder;
struct _1a9d77d33_exprCoder;
struct _1a9d8863a_TestCoder;
struct _1a9d8b5b6_identCoder;
struct _1a9e467b4_SerializationInfo;
struct _1a9e46bd2_traitCast;
struct _1a9e470ab_anonHash;
struct _1a9e48563_ObjectCoder;
struct _1a9e576e8_customType;
struct _1a9e58331_typeCoder;
struct _1a9e60e1b_resultCoder;
struct _1ad74b78b_Flag;
struct _1ad75033e_Flag;
struct _1ad7539a2_Flag;
struct _1ad757159_Flag;
struct _1ad75a7bc_Flag;
struct _1a9a609a5_FlagSet;
struct _1a9a8c927_argParser;
struct _1d7cd778c_Cmd;
struct _1a6459dca_dataCheckpoint;
struct _1a6439bac_IR;
struct _21a6d30de_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_21a6d30de_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_21a6d30de_acceptRange _other) { return !this->operator==(_other); }


};
struct _200880c8a_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1d9654602_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1d9654602_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1d9654602_Range16 _other) { return !this->operator==(_other); }


};
struct _1d9654b30_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1d9654b30_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1d9654b30_Range32 _other) { return !this->operator==(_other); }


};
struct _1d96550a3_RangeTable {
	jule::Slice<_1d9654602_Range16> _field_R16;
	jule::Slice<_1d9654b30_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1d96a7369_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _21a5ccb54_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_21a5d121d_Status> _field_Stat;
	

	inline bool operator==(_21a5ccb54_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_21a5ccb54_DirEntry _other) { return !this->operator==(_other); }


};
struct _21a5ccdda_Directory {
	

	inline bool operator==(_21a5ccdda_Directory _other) { return true; }

	inline bool operator!=(_21a5ccdda_Directory _other) { return !this->operator==(_other); }


};
struct _21a5ce0d9_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_21a5ce0d9_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_21a5ce0d9_File _other) { return !this->operator==(_other); }


};
struct _21a5d121d_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_21a5d121d_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_21a5d121d_Status _other) { return !this->operator==(_other); }


};
struct _1d7cdba05_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_1d7cdba05_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1d7cdba05_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1d974c80a_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1d974c80a_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1d974c80a_Log _other) { return !this->operator==(_other); }


};
struct _1bd80633b_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1bd80633b_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1bd80633b_floatInfo _other) { return !this->operator==(_other); }


};
struct _1bd806eb8_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1bd81920b_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1bd81920b_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1bd81920b_leftCheat _other) { return !this->operator==(_other); }


};
struct _1bd819c23_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1bd819c23_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1bd819c23_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bd832e39_Eq(_1bd82c384_Const* _self_, _1bd82c384_Const _26014_x);
inline jule::Bool _1bd83327a_Lt(_1bd82c384_Const* _self_, _1bd82c384_Const _28714_x);
inline jule::Bool _1bd8335bb_LtEq(_1bd82c384_Const* _self_, _1bd82c384_Const _31016_x);
inline jule::Bool _1bd83390c_Gt(_1bd82c384_Const* _self_, _1bd82c384_Const _33314_x);
inline jule::Bool _1bd833c4d_GtEq(_1bd82c384_Const* _self_, _1bd82c384_Const _35616_x);
struct _1bd82c384_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1bd82c384_Const _other) { return _1bd832e39_Eq(this, _other); }

	inline bool operator!=(_1bd82c384_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1bd82c384_Const _other) { return _1bd83390c_Gt(this, _other); }

	inline jule::Bool operator>=(_1bd82c384_Const _other) { return _1bd833c4d_GtEq(this, _other); }

	inline jule::Bool operator<(_1bd82c384_Const _other) { return _1bd83327a_Lt(this, _other); }

	inline jule::Bool operator<=(_1bd82c384_Const _other) { return _1bd8335bb_LtEq(this, _other); }


};
struct _1a795c013_Token {
	jule::Ptr<_1a7962799_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1a795c013_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1a795c013_Token _other) { return !this->operator==(_other); }


};
struct _1a7962799_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Tokens;
	


};
struct _1a7964900_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1a7964900_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a7964900_kindPair _other) { return !this->operator==(_other); }


};
struct _1a796a8d4_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_tokens;
	jule::Ptr<_1a7962799_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1d974c80a_Log> _field_errors;
	


};
struct _1a79705a9_Ast {
	jule::Ptr<_1a7962799_File> _field_File;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a798a5c4_UseDecl>> _field_UseDecls;
	jule::Slice<_1a79714bc_Node> _field_Nodes;
	


};
struct _1a79714bc_Node {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a79714bc_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a79714bc_Node _other) { return !this->operator==(_other); }


};
struct _1a79718da_Directive {
	jule::Ptr<_1a795c013_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Args;
	


};
struct _1a79724bd_TypeDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a79724bd_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a79724bd_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1a7972ac8_IdentTypeDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _field_Generics;
	


};
struct _1a7972d92_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a7972ac8_IdentTypeDecl>> _field_Idents;
	


};
struct _1a797326b_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Idents;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	


};
struct _1a7973568_SptrTypeDecl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a7973568_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a7973568_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a79738ed_SlcTypeDecl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a79738ed_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a79738ed_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a7973bea_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _field_Types;
	


};
struct _1a7973ee7_PtrTypeDecl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a7973ee7_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a7973ee7_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a7974789_ArrTypeDecl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Elem;
	jule::Ptr<_1a7976802_Expr> _field_Size;
	

	inline bool operator==(_1a7974789_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a7974789_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a7974ed7_MapTypeDecl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Key;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Val;
	

	inline bool operator==(_1a7974ed7_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a7974ed7_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a79753b1_RetTypeDecl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Idents;
	


};
struct _1a7976802_Expr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a7976802_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a7976802_Expr _other) { return !this->operator==(_other); }


};
struct _1a7976abb_RangeExpr {
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a7976abb_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a7976abb_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a79771c6_UseExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a79771c6_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79771c6_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a79773e6_TupleExpr {
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_Expr;
	


};
struct _1a797778c_LitExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1a797778c_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a797778c_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a7977b66_UnsafeExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a7977b66_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a7977b66_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a797811c_IdentExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1a797811c_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1a797811c_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a79788ae_UnaryExpr {
	jule::Ptr<_1a795c013_Token> _field_Op;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a79788ae_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79788ae_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a7978c88_VariadicExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a7978c88_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a7978c88_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a7979162_CastExpr {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a7979162_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a7979162_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a797953b_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Ns;
	jule::Ptr<_1a795c013_Token> _field_Ident;
	


};
struct _1a7979915_SubIdentExpr {
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Ptr<_1a795c013_Token> _field_Ident;
	

	inline bool operator==(_1a7979915_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a7979915_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a7979dbb_BinaryExpr {
	jule::Ptr<_1a7976802_Expr> _field_Left;
	jule::Ptr<_1a7976802_Expr> _field_Right;
	jule::Ptr<_1a795c013_Token> _field_Op;
	

	inline bool operator==(_1a7979dbb_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a7979dbb_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1a797a52b_FnCallExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_Args;
	jule::Ptr<_1a79824de_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1a797b021_FieldExprPair {
	jule::Ptr<_1a795c013_Token> _field_Field;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a797b021_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a797b021_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a797b84b_StructLit {
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_Exprs;
	


};
struct _1a797bd02_BraceLit {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_Exprs;
	


};
struct _1a797c62c_KeyValPair {
	jule::Ptr<_1a7976802_Expr> _field_Key;
	jule::Ptr<_1a7976802_Expr> _field_Val;
	jule::Ptr<_1a795c013_Token> _field_Colon;
	

	inline bool operator==(_1a797c62c_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a797c62c_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1a797cd58_SliceExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_Exprs;
	


};
struct _1a797d7b5_IndexingExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Ptr<_1a7976802_Expr> _field_Index;
	

	inline bool operator==(_1a797d7b5_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a797d7b5_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a797de25_SlicingExpr {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Ptr<_1a7976802_Expr> _field_Start;
	jule::Ptr<_1a7976802_Expr> _field_To;
	

	inline bool operator==(_1a797de25_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a797de25_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a797e222_Constraint {
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _field_Mask;
	


};
struct _1a797e6c8_GenericDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a797e222_Constraint> _field_Constraint;
	

	inline bool operator==(_1a797e6c8_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a797e6c8_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a797eaa2_LabelSt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a797eaa2_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a797eaa2_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a797ee7b_GotoSt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_Label;
	

	inline bool operator==(_1a797ee7b_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a797ee7b_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a7980278_FallSt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	

	inline bool operator==(_1a7980278_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a7980278_FallSt _other) { return !this->operator==(_other); }


};
struct _1a79808d8_AssignLeft {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a79808d8_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79808d8_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a7980e6b_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1a795c013_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a79808d8_AssignLeft>> _field_Left;
	jule::Ptr<_1a7976802_Expr> _field_Right;
	


};
struct _1a7981d7e_Stmt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a7981d7e_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a7981d7e_Stmt _other) { return !this->operator==(_other); }


};
struct _1a79824de_ScopeTree {
	jule::Ptr<_1a79824de_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a7981d7e_Stmt> _field_Stmts;
	jule::Ptr<_1a795c013_Token> _field_End;
	


};
struct _1a7982c2b_ParamDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a7982c2b_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a7982c2b_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1a798417d_FnDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_Directives;
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _field_Generics;
	jule::Ptr<_1a79753b1_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>> _field_Params;
	


};
struct _1a7985338_VarDecl {
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_Directives;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	


};
struct _1a7985712_RetSt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a7985712_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a7985712_RetSt _other) { return !this->operator==(_other); }


};
struct _1a7985e82_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a7985e82_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a7985e82_Iter _other) { return !this->operator==(_other); }


};
struct _1a79867ac_WhileKind {
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a795c013_Token> _field_NextToken;
	

	inline bool operator==(_1a79867ac_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a79867ac_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a79871b4_RangeKind {
	jule::Ptr<_1a795c013_Token> _field_InToken;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Ptr<_1a7985338_VarDecl> _field_KeyA;
	jule::Ptr<_1a7985338_VarDecl> _field_KeyB;
	

	inline bool operator==(_1a79871b4_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a79871b4_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a798758d_BreakSt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_Label;
	

	inline bool operator==(_1a798758d_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a798758d_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a7987967_ContSt {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_Label;
	

	inline bool operator==(_1a7987967_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a7987967_ContSt _other) { return !this->operator==(_other); }


};
struct _1a7987e1d_If {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a7987e1d_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a7987e1d_If _other) { return !this->operator==(_other); }


};
struct _1a79882e7_Else {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a79882e7_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a79882e7_Else _other) { return !this->operator==(_other); }


};
struct _1a798879d_Conditional {
	jule::Ptr<_1a7987e1d_If> _field_Head;
	jule::Slice<jule::Ptr<_1a7987e1d_If>> _field_Tail;
	jule::Ptr<_1a79882e7_Else> _field_Default;
	


};
struct _1a7988eda_TypeAliasDecl {
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a7988eda_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a7988eda_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a7989491_Case {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_Exprs;
	


};
struct _1a7989caa_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a7989491_Case>> _field_Cases;
	jule::Ptr<_1a79882e7_Else> _field_Default;
	


};
struct _1a798a5c4_UseDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1a798aa7a_EnumItemDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	

	inline bool operator==(_1a798aa7a_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a798aa7a_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a798b63b_EnumDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a795c013_Token> _field_End;
	


};
struct _1a798be66_TypeEnumItemDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a798be66_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a798be66_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a798c5c6_TypeEnumDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a795c013_Token> _field_End;
	


};
struct _1a798c890_FieldDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Kind;
	jule::Ptr<_1a7976802_Expr> _field_Default;
	

	inline bool operator==(_1a798c890_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a798c890_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a798d286_StructDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a798c890_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _field_Generics;
	


};
struct _1a798d9c3_TraitDecl {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a798417d_FnDecl>> _field_Methods;
	


};
struct _1a798e133_Impl {
	jule::Ptr<_1a795c013_Token> _field_End;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Base;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a798417d_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _field_Statics;
	


};
struct _1a7990431_Field {
	jule::Ptr<_1a7993357_Struct> _field_Owner;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	jule::Ptr<_1a7976802_Expr> _field_Default;
	

	inline bool operator==(_1a7990431_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a7990431_Field _other) { return !this->operator==(_other); }


};
struct _1a7992444_Operators {
	jule::Ptr<_1a79ab309_FnIns> _field_Eq;
	jule::Ptr<_1a79ab309_FnIns> _field_Gt;
	jule::Ptr<_1a79ab309_FnIns> _field_GtEq;
	jule::Ptr<_1a79ab309_FnIns> _field_Lt;
	jule::Ptr<_1a79ab309_FnIns> _field_LtEq;
	jule::Ptr<_1a79ab309_FnIns> _field_Shl;
	jule::Ptr<_1a79ab309_FnIns> _field_Shr;
	jule::Ptr<_1a79ab309_FnIns> _field_Add;
	jule::Ptr<_1a79ab309_FnIns> _field_Sub;
	jule::Ptr<_1a79ab309_FnIns> _field_Div;
	jule::Ptr<_1a79ab309_FnIns> _field_Mul;
	jule::Ptr<_1a79ab309_FnIns> _field_Mod;
	jule::Ptr<_1a79ab309_FnIns> _field_BitAnd;
	jule::Ptr<_1a79ab309_FnIns> _field_BitOr;
	jule::Ptr<_1a79ab309_FnIns> _field_BitXor;
	jule::Ptr<_1a79ab309_FnIns> _field_Neg;
	jule::Ptr<_1a79ab309_FnIns> _field_Pos;
	jule::Ptr<_1a79ab309_FnIns> _field_BitNot;
	jule::Ptr<_1a79ab309_FnIns> _field_AddAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_SubAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_DivAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_MulAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_ModAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_ShlAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_ShrAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a79ab309_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1a7992444_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a7992444_Operators _other) { return !this->operator==(_other); }


};
struct _1a7993357_Struct {
	jule::Ptr<_1a6837818_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a7993357_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a7993357_Struct>> _field_Uses;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a7990431_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a79a8328_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a79bb6d2_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a79960d5_StructIns>> _field_Instances;
	


};
struct _1a7995535_FieldIns {
	jule::Ptr<_1a7990431_Field> _field_Decl;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Ptr<_1a7a51503_Data> _field_Default;
	

	inline bool operator==(_1a7995535_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a7995535_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a79960d5_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a7993357_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a7995535_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a79a8328_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a79ae4d8_ReferenceStack> _field_Refers;
	_1a7992444_Operators _field_Operators;
	


};
struct _1a7999eda_OperandExprModel {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1a7999eda_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a7999eda_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a799a4d5_BinaryExprModel {
	jule::Ptr<_1a7999eda_OperandExprModel> _field_Left;
	jule::Ptr<_1a7999eda_OperandExprModel> _field_Right;
	jule::Ptr<_1a795c013_Token> _field_Op;
	

	inline bool operator==(_1a799a4d5_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a799a4d5_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a799a8ae_UnaryExprModel {
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Ptr<_1a795c013_Token> _field_Op;
	

	inline bool operator==(_1a799a8ae_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a799a8ae_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a799addc_StructArgExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7995535_FieldIns> _field_Field;
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	

	inline bool operator==(_1a799addc_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a799addc_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a799b283_StructLitExprModel {
	jule::Ptr<_1a79960d5_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a799addc_StructArgExprModel>> _field_Args;
	


};
struct _1a799b580_AllocStructLitExprModel {
	jule::Ptr<_1a799b283_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1a799b580_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a799b580_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a799bb13_CastingExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Ptr<_1a7a828ec_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1a799bb13_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a799bb13_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a799c4b5_FnCallExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a79ab309_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a680dba7_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1a799c88e_SliceExprModel {
	jule::Ptr<_1a7a828ec_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a799cd45_IndexingExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Ptr<_1a7a51503_Data> _field_Index;
	

	inline bool operator==(_1a799cd45_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a799cd45_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a799d2eb_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Captured;
	jule::Ptr<_1a79ab309_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	


};
struct _1a799d6c5_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1a799d6c5_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a799d6c5_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a799db7b_MapExprModel {
	jule::Ptr<_1a7a828ec_TypeKind> _field_KeyKind;
	jule::Ptr<_1a7a828ec_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a799d6c5_KeyValPairExprModel>> _field_Entries;
	


};
struct _1a799e20e_SlicingExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a799e20e_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a799e20e_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a799e792_TraitSubIdentExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a79a8328_Fn> _field_Method;
	jule::Ptr<_1a79bb6d2_Trait> _field_Trt;
	

	inline bool operator==(_1a799e792_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a799e792_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a0133_StructSubIdentExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Ptr<_1a79ab309_FnIns> _field_Method;
	jule::Ptr<_1a7995535_FieldIns> _field_Field;
	jule::Ptr<_1a79960d5_StructIns> _field_Owner;
	

	inline bool operator==(_1a79a0133_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a79a0133_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a04c9_StructStaticIdentExprModel {
	jule::Ptr<_1a79960d5_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a79ab309_FnIns> _field_Method;
	

	inline bool operator==(_1a79a04c9_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a79a04c9_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a08a3_ArrayExprModel {
	jule::Ptr<_1a7a91ce6_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a79a0ba0_TupleExprModel {
	jule::Slice<jule::Ptr<_1a7a51503_Data>> _field_Datas;
	


};
struct _1a79a1079_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a79a1079_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a79a1079_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a1453_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a79a1453_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a79a1453_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a182c_BuiltinNewCallExprModel {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1a79a182c_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a79a182c_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a1c06_BuiltinPanicCallExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a79a1c06_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a1c06_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a21ac_BuiltinAssertCallExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1a79a21ac_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a79a21ac_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a2663_BuiltinMakeCallExprModel {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1a79a2663_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a79a2663_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a2a3c_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1a79a2a3c_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a79a2a3c_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a2d39_BuiltinLenCallExprModel {
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	

	inline bool operator==(_1a79a2d39_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a2d39_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a3136_BuiltinCapCallExprModel {
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	

	inline bool operator==(_1a79a3136_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a3136_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a3510_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a7a51503_Data> _field_Dest;
	jule::Ptr<_1a7a51503_Data> _field_Key;
	

	inline bool operator==(_1a79a3510_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1a79a3510_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a38d9_BuiltinCopyCallExprModel {
	jule::Ptr<_1a7a51503_Data> _field_Dest;
	jule::Ptr<_1a7a51503_Data> _field_Src;
	

	inline bool operator==(_1a79a38d9_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a79a38d9_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a3cb3_BuiltinErrorCallExprModel {
	jule::Ptr<_1a79ab309_FnIns> _field_Func;
	jule::Ptr<_1a7a51503_Data> _field_Err;
	

	inline bool operator==(_1a79a3cb3_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a79a3cb3_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a4467_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a79a4467_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a4467_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a4654_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a79a4654_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a4654_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a48eb_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1a79a48eb_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a79a48eb_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a4be8_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a79a4be8_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a4be8_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a50c2_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1a79a53be_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a79a53be_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79a53be_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a79a60c3_RetType {
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Idents;
	


};
struct _1a79a6854_Param {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a79a6854_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a79a6854_Param _other) { return !this->operator==(_other); }


};
struct _1a79a8328_Fn {
	jule::Ptr<_1a6837818_Sema> _field_sema;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_Directives;
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _field_Generics;
	jule::Ptr<_1a79a60c3_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a79a6854_Param>> _field_Params;
	jule::Ptr<_1a7993357_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a79ab309_FnIns>> _field_Instances;
	


};
struct _1a79aa281_ParamIns {
	jule::Ptr<_1a79a6854_Param> _field_Decl;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	

	inline bool operator==(_1a79aa281_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a79aa281_ParamIns _other) { return !this->operator==(_other); }


};
struct _1a79ab309_FnIns {
	jule::Ptr<_1a79960d5_StructIns> _field_Owner;
	jule::Ptr<_1a79a8328_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _field_Params;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Result;
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	jule::Ptr<_1a79ae4d8_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Bool _field_AsAnon = false;
	jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1a79ae4d8_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1a79b09e5_Pass {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1a79b09e5_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a79b09e5_Pass _other) { return !this->operator==(_other); }


};
struct _1a79b549a_symbolBuilder {
	jule::Ptr<_1a79b549a_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1d974c80a_Log> _field_errors;
	jule::Ptr<_1a79705a9_Ast> _field_ast;
	jule::Ptr<_1a7a4b18a_SymbolTable> _field_table;
	


};
struct _1a79bb6d2_Trait {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a7a89abe_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a79a8328_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a7993357_Struct>> _field_Implemented;
	


};
struct _1a79bd371_EnumItem {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7a5267a_Value> _field_Value;
	

	inline bool operator==(_1a79bd371_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a79bd371_EnumItem _other) { return !this->operator==(_other); }


};
struct _1a79bdddd_Enum {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _field_Items;
	


};
struct _1a79c0021_TypeEnumItem {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1a79c0021_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a79c0021_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1a79c05e8_TypeEnum {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> _field_Items;
	


};
struct _1a79c3750_comptimeRange {
	jule::Trait _field_kind;
	

	inline bool operator==(_1a79c3750_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a79c3750_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1a79c4223_comptimeStructField {
	jule::Ptr<_1a7995535_FieldIns> _field_field;
	

	inline bool operator==(_1a79c4223_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a79c4223_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1a79c5dd4_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a7995535_FieldIns>> _field_fields;
	


};
struct _1a79c74ce_comptimeStatic {
	jule::Ptr<_1a685a682_Var> _field_field;
	

	inline bool operator==(_1a79c74ce_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a79c74ce_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1a79c9190_comptimeStatics {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_fields;
	


};
struct _1a79ca78a_comptimeEnumField {
	jule::Ptr<_1a79bd371_EnumItem> _field_field;
	

	inline bool operator==(_1a79ca78a_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a79ca78a_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1a79cbb32_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _field_fields;
	


};
struct _1a79cd22c_comptimeParam {
	jule::Ptr<_1a79aa281_ParamIns> _field_param;
	

	inline bool operator==(_1a79cd22c_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1a79cd22c_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1a79d03b6_comptimeParams {
	jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _field_params;
	


};
struct _1a79d197d_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a79d3078_comptimeTypeInfo>> _field_types;
	


};
struct _1a79d3078_comptimeTypeInfo {
	jule::Ptr<_1a7a828ec_TypeKind> _field_base;
	

	inline bool operator==(_1a79d3078_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1a79d3078_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1a67ecc40_comptimeValue {
	jule::Ptr<_1a7a51503_Data> _field_data;
	

	inline bool operator==(_1a67ecc40_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a67ecc40_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1a680058e_comptimeFiles {
	jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>> _field_files;
	


};
struct _1a6801b89_comptimeFile {
	jule::Ptr<_1a7a4b18a_SymbolTable> _field_file;
	

	inline bool operator==(_1a6801b89_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1a6801b89_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1a68063ec_constraintChecker {
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a79ab309_FnIns> _field_fi;
	jule::Ptr<_1a79960d5_StructIns> _field_si;
	jule::Ptr<_1a795c013_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1a6808751_Impl {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Base;
	jule::Ptr<_1a79724bd_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a79a8328_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Statics;
	


};
struct _1a680dba7_Scope {
	jule::Ptr<_1a680dba7_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1a680e0c5_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	

	inline bool operator==(_1a680e0c5_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a680e0c5_If _other) { return !this->operator==(_other); }


};
struct _1a680e3c2_Else {
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	

	inline bool operator==(_1a680e3c2_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a680e3c2_Else _other) { return !this->operator==(_other); }


};
struct _1a680e7e0_Conditional {
	jule::Slice<jule::Ptr<_1a680e0c5_If>> _field_Elifs;
	jule::Ptr<_1a680e3c2_Else> _field_Default;
	


};
struct _1a680eadc_InfIter {
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	

	inline bool operator==(_1a680eadc_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a680eadc_InfIter _other) { return !this->operator==(_other); }


};
struct _1a6810093_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	

	inline bool operator==(_1a6810093_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a6810093_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a68109de_RangeIter {
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	jule::Ptr<_1a685a682_Var> _field_KeyA;
	jule::Ptr<_1a685a682_Var> _field_KeyB;
	

	inline bool operator==(_1a68109de_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a68109de_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a636e581_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1a636e581_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a636e581_ContSt _other) { return !this->operator==(_other); }


};
struct _1a79d947a_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1a79d947a_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a79d947a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a79d96de_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a79d96de_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a79d96de_Label _other) { return !this->operator==(_other); }


};
struct _1a79d9aa7_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a79d96de_Label> _field_Label;
	

	inline bool operator==(_1a79d9aa7_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a79d9aa7_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a79d9e81_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1a79d9e81_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a79d9e81_Postfix _other) { return !this->operator==(_other); }


};
struct _1a79da437_Assign {
	jule::Ptr<_1a7999eda_OperandExprModel> _field_Left;
	jule::Ptr<_1a7999eda_OperandExprModel> _field_Right;
	jule::Ptr<_1a795c013_Token> _field_Op;
	

	inline bool operator==(_1a79da437_Assign _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a79da437_Assign _other) { return !this->operator==(_other); }


};
struct _1a79da8dd_MultiAssign {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a7a51503_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	


};
struct _1a79db04d_Match {
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1a79dbb97_Case>> _field_Cases;
	jule::Ptr<_1a79dbb97_Case> _field_Default;
	


};
struct _1a79dbb97_Case {
	jule::Ptr<_1a79db04d_Match> _field_Owner;
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a7a51503_Data>> _field_Exprs;
	jule::Ptr<_1a79dbb97_Case> _field_Next;
	


};
struct _1a79dc3a1_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1a79dc3a1_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a79dc3a1_FallSt _other) { return !this->operator==(_other); }


};
struct _1a79dc77a_RetSt {
	jule::Ptr<_1a79ab309_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a79dc77a_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a79dc77a_RetSt _other) { return !this->operator==(_other); }


};
struct _1a79dcdda_scopeLabel {
	jule::Ptr<_1a795c013_Token> _field_token;
	jule::Ptr<_1a79d96de_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1a79de45d_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1a79dcdda_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a79dcdda_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a79dd46d_scopeGoto {
	jule::Ptr<_1a79d9aa7_GotoSt> _field_st;
	jule::Ptr<_1a797ee7b_GotoSt> _field_gt;
	jule::Ptr<_1a79de45d_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1a79dd46d_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a79dd46d_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1a79de45d_scopeChecker {
	jule::Ptr<_1a795c013_Token> _field_calledFrom;
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Ptr<_1a79ab309_FnIns> _field_owner;
	jule::Ptr<_1a79de45d_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1a7a4b18a_SymbolTable> _field_table;
	jule::Ptr<_1a680dba7_Scope> _field_scope;
	jule::Ptr<_1a79824de_ScopeTree> _field_tree;
	jule::Ptr<_1a79ab309_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a685a682_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a79dcdda_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a79dd46d_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a79de45d_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_captured == _other._field_captured &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a79de45d_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1a6810e2e_directiveChecker {
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a79718da_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1a6810e2e_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a6810e2e_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1a6817474_ImportInfo {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_Selected;
	jule::Ptr<_1a681a39a_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1a681a39a_Package {
	jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>> _field_Files;
	


};
struct _1a6836c13_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a79d3078_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1a6837818_Sema {
	jule::Slice<_1d974c80a_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>> _field_files;
	jule::Ptr<_1a7a4b18a_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1a6836c13_commonSemaMeta> _field_meta;
	


};
struct _1a68574d6_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1a685a682_Var {
	jule::Ptr<_1a680dba7_Scope> _field_Scope;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	jule::Ptr<_1a7a5267a_Value> _field_Value;
	jule::Ptr<_1a79ae4d8_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_Directives;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Depends;
	


};
struct _1a685b50c_FuncPattern {
	


};
struct _1a7a381bb_typeCompatibilityChecker {
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Ptr<_1a7a828ec_TypeKind> _field_dest;
	jule::Ptr<_1a7a828ec_TypeKind> _field_src;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	

	inline bool operator==(_1a7a381bb_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a7a381bb_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1a7a39e6a_assignTypeChecker {
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Ptr<_1a7a828ec_TypeKind> _field_dest;
	jule::Ptr<_1a7a51503_Data> _field_d;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	

	inline bool operator==(_1a7a39e6a_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a7a39e6a_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1a7a3b840_dynamicTypeAnnotation {
	jule::Ptr<_1a7a5322a_Eval> _field_e;
	jule::Ptr<_1a79ab309_FnIns> _field_f;
	jule::Ptr<_1a79aa281_ParamIns> _field_p;
	jule::Ptr<_1a7a51503_Data> _field_a;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	jule::Ptr<_1a7a828ec_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a79724bd_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_ignored;
	


};
struct _1a7a4169c_fnCallArgChecker {
	jule::Ptr<_1a7a5322a_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_args;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	jule::Ptr<_1a79ab309_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_ignored;
	


};
struct _1a7a445d4_structLitChecker {
	jule::Ptr<_1a7a5322a_Eval> _field_e;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	jule::Ptr<_1a79960d5_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a799addc_StructArgExprModel>> _field_args;
	


};
struct _1a7a463b6_rangeChecker {
	jule::Ptr<_1a79de45d_scopeChecker> _field_sc;
	jule::Ptr<_1a79871b4_RangeKind> _field_rang;
	jule::Ptr<_1a68109de_RangeIter> _field_Kind;
	jule::Ptr<_1a7a51503_Data> _field_d;
	

	inline bool operator==(_1a7a463b6_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a7a463b6_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1a7a48b27_retTypeChecker {
	jule::Ptr<_1a79de45d_scopeChecker> _field_sc;
	jule::Ptr<_1a79ab309_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _field_exprs;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1a7a4b18a_SymbolTable {
	jule::Ptr<_1a7962799_File> _field_File;
	jule::Slice<_1a79b09e5_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a7993357_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a79a8328_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a79bb6d2_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a79bdddd_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a79c05e8_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a6808751_Impl>> _field_Impls;
	


};
struct _1a7a51503_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1bd82c384_Const> _field_Constant;
	

	inline bool operator==(_1a7a51503_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a7a51503_Data _other) { return !this->operator==(_other); }


};
struct _1a7a5267a_Value {
	jule::Ptr<_1a7976802_Expr> _field_Expr;
	jule::Ptr<_1a7a51503_Data> _field_Data;
	

	inline bool operator==(_1a7a5267a_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a7a5267a_Value _other) { return !this->operator==(_other); }


};
struct _1a7a5322a_Eval {
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a7a828ec_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a685a682_Var> _field_owner;
	jule::Ptr<_1a7995535_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1a7a5322a_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a7a5322a_Eval _other) { return !this->operator==(_other); }


};
struct _1a7a71952_unaryEval {
	jule::Ptr<_1a7a5322a_Eval> _field_e;
	jule::Ptr<_1a7a51503_Data> _field_d;
	jule::Ptr<_1a79788ae_UnaryExpr> _field_u;
	

	inline bool operator==(_1a7a71952_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a7a71952_unaryEval _other) { return !this->operator==(_other); }


};
struct _1a7a738dd_binaryEval {
	jule::Ptr<_1a7a5322a_Eval> _field_e;
	jule::Ptr<_1a7a51503_Data> _field_l;
	jule::Ptr<_1a7a51503_Data> _field_r;
	jule::Ptr<_1a795c013_Token> _field_op;
	

	inline bool operator==(_1a7a738dd_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a7a738dd_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a7a81016_InsGeneric {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_Constraint;
	


};
struct _1a7a81b0a_TypeAlias {
	jule::Ptr<_1a79824de_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a7a89abe_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _field_Generics;
	


};
struct _1a7a828ec_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait _field_Kind;
	

	inline bool operator==(_1a7a828ec_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a7a828ec_TypeKind _other) { return !this->operator==(_other); }


};
struct _1a7a89abe_TypeSymbol {
	jule::Ptr<_1a79724bd_TypeDecl> _field_Decl;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Kind;
	

	inline bool operator==(_1a7a89abe_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a7a89abe_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1a7a8a4c6_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1a7a8a4c6_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a7a8a4c6_Prim _other) { return !this->operator==(_other); }


};
struct _1a7a8e002_Sptr {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Elem;
	

	inline bool operator==(_1a7a8e002_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a7a8e002_Sptr _other) { return !this->operator==(_other); }


};
struct _1a7a8e9c5_Slc {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Elem;
	

	inline bool operator==(_1a7a8e9c5_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a7a8e9c5_Slc _other) { return !this->operator==(_other); }


};
struct _1a7a905b9_Tuple {
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_Types;
	


};
struct _1a7a91169_Map {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Key;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Val;
	

	inline bool operator==(_1a7a91169_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a7a91169_Map _other) { return !this->operator==(_other); }


};
struct _1a7a91ce6_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1a7a828ec_TypeKind> _field_Elem;
	

	inline bool operator==(_1a7a91ce6_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a7a91ce6_Arr _other) { return !this->operator==(_other); }


};
struct _1a7a927b9_Ptr {
	jule::Ptr<_1a7a828ec_TypeKind> _field_Elem;
	

	inline bool operator==(_1a7a927b9_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a7a927b9_Ptr _other) { return !this->operator==(_other); }


};
struct _1a7a937ba_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1a7a937ba_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a7a937ba_referencer _other) { return !this->operator==(_other); }


};
struct _1a7a947aa_typeChecker {
	jule::Ptr<_1a6837818_Sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a7a937ba_referencer> _field_referencer;
	jule::Ptr<_1a79ae4d8_ReferenceStack> _field_refers;
	jule::Ptr<_1a795c013_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a7a81b0a_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1a7a9c461_identTypeLookup {
	

	inline bool operator==(_1a7a9c461_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a7a9c461_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a63ee644_FileInfo {
	jule::Ptr<_1a79705a9_Ast> _field_Ast;
	jule::Slice<_1d974c80a_Log> _field_Errors;
	


};
struct _1a64020a3_stmt {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1a6402944_scopeParser {
	jule::Ptr<_1a6420ec3_parser> _field_p;
	jule::Ptr<_1a79824de_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a64020a3_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1a6410369_exprBuilder {
	jule::Ptr<_1a6420ec3_parser> _field_p;
	

	inline bool operator==(_1a6410369_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a6410369_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a641cac4_assignInfo {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_r;
	jule::Ptr<_1a795c013_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1a6420ec3_parser {
	jule::Ptr<_1a79705a9_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a79718da_Directive>> _field_directives;
	jule::Slice<_1d974c80a_Log> _field_errors;
	jule::Ptr<_1a6410369_exprBuilder> _field_ep;
	


};
struct _1a64330e5_typeBuilder {
	jule::Ptr<_1a6420ec3_parser> _field_p;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1a7d13cc1_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1a7d13cc1_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1a7d13cc1_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1a7d1529a_directiveEval {
	jule::Slice<_1d974c80a_Log> _field_logs;
	jule::Ptr<_1a79718da_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a643722b_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a643d96e_ExprInspector {
	jule::Bool _field_SkipChild = false;
	jule::Fn<void,jule::Any*> _field_handler;
	


};
struct _1a6448ced_OrderedDefines {
	jule::Slice<jule::Ptr<_1a7993357_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_Globals;
	


};
struct _1a86c2151_liveTable {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a79ab309_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a79960d5_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a79bb6d2_Trait>> _field_traits;
	


};
struct _1a86c256e_ObjectDeadCode {
	_1a86c2151_liveTable _field_live;
	jule::Ptr<_1a6439bac_IR> _field_ir;
	


};
struct _1a86c61bb_scopeDeadCode {
	jule::Ptr<_1a86c61bb_scopeDeadCode> _field_parent;
	jule::Ptr<_1a680dba7_Scope> _field_s;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a79d96de_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a79d9aa7_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1a86c61bb_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a86c61bb_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1a86ca852_exprDeadCode {
	jule::Ptr<_1a86c61bb_scopeDeadCode> _field_s;
	

	inline bool operator==(_1a86ca852_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a86ca852_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1a7b76194_ExceptionalForwardingExprModel {
	jule::Ptr<_1a799c4b5_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1a7b76194_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a7b76194_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b76518_SwapExprModel {
	jule::Ptr<_1a7a51503_Data> _field_Left;
	jule::Ptr<_1a7a51503_Data> _field_Right;
	

	inline bool operator==(_1a7b76518_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a7b76518_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b768e2_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1a7b768e2_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1a7b768e2_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b76c66_RefExprModel {
	jule::Ptr<_1a685a682_Var> _field_Var;
	

	inline bool operator==(_1a7b76c66_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1a7b76c66_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b771d9_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1bd82c384_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1a7b771d9_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1a7b771d9_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b7776c_MutSlicingExprModel {
	jule::Ptr<_1a795c013_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a7b7776c_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a7b7776c_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b77a69_UnsafeBinaryExprModel {
	jule::Ptr<_1a799a4d5_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1a7b77a69_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a7b77a69_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b77dee_UnsafeIndexingExprModel {
	jule::Ptr<_1a799cd45_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1a7b77dee_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a7b77dee_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b782c8_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a799c88e_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1a7b782c8_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a7b782c8_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b786a2_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1a7b786a2_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1a7b786a2_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b78a7b_StrRuneIter {
	jule::Ptr<_1a7a51503_Data> _field_Expr;
	jule::Ptr<_1a68109de_RangeIter> _field_Base;
	

	inline bool operator==(_1a7b78a7b_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a7b78a7b_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1a7b78d78_UnsafeDerefExprModel {
	jule::Ptr<_1a799a8ae_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1a7b78d78_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a7b78d78_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b79175_UnsafeCastingExprModel {
	jule::Ptr<_1a799bb13_CastingExprModel> _field_Base;
	

	inline bool operator==(_1a7b79175_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1a7b79175_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a7b79d57_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1a7b79d57_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1a7b79d57_nilVar _other) { return !this->operator==(_other); }


};
struct _1a7b7a198_nils {
	jule::Slice<_1a7b79d57_nilVar> _field_vars;
	


};
struct _1a644a519_scopeOptimizer {
	jule::Ptr<_1a644a519_scopeOptimizer> _field_parent;
	jule::I64 _field_i = 0;
	jule::Ptr<_1a680dba7_Scope> _field_scope;
	jule::Ptr<_1a645a3c5_data> _field_data;
	

	inline bool operator==(_1a644a519_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a644a519_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1a6452015_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a645a3c5_data> _field_data;
	jule::Ptr<_1a643d96e_ExprInspector> _field_inspector;
	

	inline bool operator==(_1a6452015_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data &&
			this->_field_inspector == _other._field_inspector;
	}

	inline bool operator!=(_1a6452015_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1a6457405_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1a7a828ec_TypeKind> _field_kind;
	

	inline bool operator==(_1a6457405_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a6457405_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1a6457746_dynamic {
	jule::Slice<_1a6457405_dynamicVar> _field_vars;
	


};
struct _1a645a3c5_data {
	jule::Ptr<_1a645bd55_boundary> _field_boundary;
	jule::Ptr<_1a7b7a198_nils> _field_nils;
	jule::Ptr<_1a6457746_dynamic> _field_dynamic;
	

	inline bool operator==(_1a645a3c5_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1a645a3c5_data _other) { return !this->operator==(_other); }


};
struct _1a645ba14_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1a645bd55_boundary {
	jule::Slice<_1a645ba14_boundaryVar> _field_vars;
	


};
struct _1a86cba51_Optimizer {
	jule::Ptr<_1a6439bac_IR> _field_ir;
	

	inline bool operator==(_1a86cba51_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a86cba51_Optimizer _other) { return !this->operator==(_other); }


};
struct _1a87030a5_AnsiEscape {
	

	inline bool operator==(_1a87030a5_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a87030a5_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1a8704628_Logger {
	

	inline bool operator==(_1a8704628_Logger _other) { return true; }

	inline bool operator!=(_1a8704628_Logger _other) { return !this->operator==(_other); }


};
struct _1a9e3c810_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a9e3c810_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a9e3c810_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a9e3ced6_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a9e3ced6_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a9e3ced6_Time _other) { return !this->operator==(_other); }


};
struct _1a9d6c6eb_scopeCoder {
	jule::Ptr<_1a9e48563_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a9d6c6eb_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9d6c6eb_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1a9d77d33_exprCoder {
	jule::Ptr<_1a9e48563_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a685a682_Var>>> _field_varPrefixes;
	


};
struct _1a9d8863a_TestCoder {
	jule::Ptr<_1a79960d5_StructIns> _field_t;
	jule::Ptr<_1a79a8328_Fn> _field_tmReset;
	jule::Ptr<_1a79a8328_Fn> _field_tmFailed;
	jule::Ptr<_1a79a8328_Fn> _field_tmSkipped;
	jule::Ptr<_1a9e48563_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a9d8863a_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9d8863a_TestCoder _other) { return !this->operator==(_other); }


};
struct _1a9d8b5b6_identCoder {
	

	inline bool operator==(_1a9d8b5b6_identCoder _other) { return true; }

	inline bool operator!=(_1a9d8b5b6_identCoder _other) { return !this->operator==(_other); }


};
struct _1a9e467b4_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a9e467b4_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a9e467b4_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a9e46bd2_traitCast {
	jule::Ptr<_1a79bb6d2_Trait> _field_t1;
	jule::Ptr<_1a79bb6d2_Trait> _field_t2;
	

	inline bool operator==(_1a9e46bd2_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a9e46bd2_traitCast _other) { return !this->operator==(_other); }


};
struct _1a9e470ab_anonHash {
	jule::Ptr<_1a799d2eb_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

	inline bool operator==(_1a9e470ab_anonHash _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a9e470ab_anonHash _other) { return !this->operator==(_other); }


};
struct _1a9e48563_ObjectCoder {
	_200880c8a_StrBuilder _field_Buf;
	_200880c8a_StrBuilder _field_resultDecls;
	_200880c8a_StrBuilder _field_anyObj;
	_200880c8a_StrBuilder _field_anonObj;
	_200880c8a_StrBuilder _field_deallocObj;
	jule::Ptr<_1a6439bac_IR> _field_ir;
	_1a9e467b4_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a9e470ab_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a9e46bd2_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1a79ab309_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1a9d77d33_exprCoder> _field_ec;
	jule::Ptr<_1a9d6c6eb_scopeCoder> _field_sc;
	jule::Ptr<_1a9e58331_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	jule::I64 _field_wrapPos = 0;
	


};
struct _1a9e576e8_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a9e576e8_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9e576e8_customType _other) { return !this->operator==(_other); }


};
struct _1a9e58331_typeCoder {
	jule::Ptr<_1a9e48563_ObjectCoder> _field_oc;
	jule::Ptr<_1a9e60e1b_resultCoder> _field_rc;
	

	inline bool operator==(_1a9e58331_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a9e58331_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a9e60e1b_resultCoder {
	jule::Ptr<_1a9e58331_typeCoder> _field_tc;
	

	inline bool operator==(_1a9e60e1b_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a9e60e1b_resultCoder _other) { return !this->operator==(_other); }


};
struct _1ad74b78b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1ad74b78b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ad74b78b_Flag _other) { return !this->operator==(_other); }


};struct _1ad75033e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1ad75033e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ad75033e_Flag _other) { return !this->operator==(_other); }


};struct _1ad7539a2_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1ad7539a2_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ad7539a2_Flag _other) { return !this->operator==(_other); }


};struct _1ad757159_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1ad757159_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ad757159_Flag _other) { return !this->operator==(_other); }


};struct _1ad75a7bc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1ad75a7bc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ad75a7bc_Flag _other) { return !this->operator==(_other); }


};
struct _1a9a609a5_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	


};
struct _1a9a8c927_argParser {
	_1a9a609a5_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1d7cd778c_Cmd {
	_1d7cdba05_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct _1a6459dca_dataCheckpoint {
	_1a645bd55_boundary _field_boundary;
	_1a7b7a198_nils _field_nils;
	_1a6457746_dynamic _field_dynamic;
	


};
struct _1a6439bac_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a681a39a_Package> _field_Main;
	jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _field_Used;
	_1a6448ced_OrderedDefines _field_Ordered;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7a51503_Data__jule_tuple_x_1a7a51503_Data {
	jule::Ptr<_1a7a51503_Data> __jule_result_arg0;
	jule::Ptr<_1a7a51503_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a7a51503_Data__jule_tuple_bool {
	jule::Ptr<_1a7a51503_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7976802_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a7976802_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7989491_Case__jule_tuple_bool {
	jule::Ptr<_1a7989491_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a7989491_Case__jule_tuple_x_1a79882e7_Else {
	jule::Slice<jule::Ptr<_1a7989491_Case>> __jule_result_arg0;
	jule::Ptr<_1a79882e7_Else> __jule_result_arg1;
};
struct __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7980e6b_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a7980e6b_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a79724bd_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a79753b1_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log {
	jule::Slice<jule::Ptr<_1a79705a9_Ast>> __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1d974c80a_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a79ab309_FnIns__jule_tuple_bool {
	jule::Ptr<_1a79ab309_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a6439bac_IR__jule_tuple_s_1d974c80a_Log {
	jule::Ptr<_1a6439bac_IR> __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a51ddb82_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a51ddb82_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a51ddb82_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a7a4b18a_SymbolTable__jule_tuple_s_1d974c80a_Log {
	jule::Ptr<_1a7a4b18a_SymbolTable> __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log {
	jule::Ptr<_1a681a39a_Package> __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log {
	jule::Ptr<_1a79705a9_Ast> __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a795c013_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a795c013_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token {
	jule::Slice<jule::Ptr<_1a795c013_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a795c013_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a795c013_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a795c013_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> __jule_result_arg0;
	jule::Slice<_1d974c80a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _200880c8a_StrBuilder static__2008811b9_New(jule::I64 _1516_cap);
inline void _200881472_Write(_200880c8a_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _20088172a_WriteStr(_200880c8a_StrBuilder* _self_, jule::Str _3024_s);
inline void _2008819d3_WriteByte(_200880c8a_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _200882022_Str(_200880c8a_StrBuilder* _self_);
inline void _200882220_Clear(_200880c8a_StrBuilder* _self_);
inline jule::I64 _2008824a6_Len(_200880c8a_StrBuilder* _self_);
inline jule::Slice<jule::U8> _2008829c3_Buf(_200880c8a_StrBuilder* _self_);
inline void _200882c7b_SetBuf(_200880c8a_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1d96a77ba_index(_1d96a7369_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1d96a7a73_append(_1d96a7369_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1d96a7d09_string(_1d96a7369_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>> static__1d96aa0a3_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1d96aa2d4_Create(jule::Str _3919_path);
inline jule::VoidExceptional static__1d96aa515_Remove(jule::Str _5319_path);
inline jule::Ptr<_21a5ce0d9_File> static__21a5ce507_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_21a5ce0d9_File>> static__21a5ce7c1_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__21a5cea8a_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__21a5cee31_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _21a5d066d_Close(_21a5ce0d9_File* _self_);
inline jule::Exceptional<jule::Ptr<_21a5ce0d9_File>> static__21a6ddced_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode);
inline jule::VoidExceptional static__21a6de02e_Remove(jule::Str _3519_path);
inline jule::Exceptional<jule::I64> _21a6de3a3_Write(_21a5ce0d9_File* _self_, jule::Slice<jule::U8> _5021_buf);
inline jule::Exceptional<jule::I64> _21a6de6e4_Read(_21a5ce0d9_File* _self_, jule::Slice<jule::U8> _8124_buf);
inline jule::Bool _21a5d15e7_IsDir(_21a5d121d_Status* _self_);
inline jule::Bool _21a5d187d_IsReg(_21a5d121d_Status* _self_);
inline jule::U64 _21a5d1b14_Size(_21a5d121d_Status* _self_);
inline jule::Exceptional<jule::Ptr<_21a5d121d_Status>> static__1d96aadc8_Of(jule::Str _1215_path);
inline jule::Bool _1bd811654_set(_1bd819c23_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1bd811995_floatBits(_1bd819c23_decimal* _self_, _1bd80633b_floatInfo* _33226_flt);
inline void _1bd81a0ca_assign(_1bd819c23_decimal* _self_, jule::U64 _15126_v);
inline void _1bd81a383_shift(_1bd819c23_decimal* _self_, jule::I64 _17625_k);
inline void _1bd81a63b_roundDown(_1bd819c23_decimal* _self_, jule::I64 _19625_nd);
inline void _1bd81a8e4_roundUp(_1bd819c23_decimal* _self_, jule::I64 _20523_nd);
inline void _1bd81ab9c_round(_1bd819c23_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1bd81ae33_roundedInteger(_1bd819c23_decimal* _self_);
inline jule::Ptr<_1bd82c384_Const> static__1bd82c7c4_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1bd82c384_Const> static__1bd82ca8d_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1bd82c384_Const> static__1bd82cd57_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1bd82c384_Const> static__1bd82d121_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1bd82c384_Const> static__1bd82d3da_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1bd82c384_Const> static__1bd82d5e9_NewNil(void);
inline jule::I64 _1bd82dc59_ReadI64(_1bd82c384_Const* _self_);
inline jule::U64 _1bd82dee0_ReadU64(_1bd82c384_Const* _self_);
inline jule::Bool _1bd82e276_ReadBool(_1bd82c384_Const* _self_);
inline jule::Str _1bd82e50c_ReadStr(_1bd82c384_Const* _self_);
inline jule::F64 _1bd82e793_ReadF64(_1bd82c384_Const* _self_);
inline jule::I64 _1bd82ea29_AsI64(_1bd82c384_Const* _self_);
inline jule::U64 _1bd82ecb0_AsU64(_1bd82c384_Const* _self_);
inline jule::F64 _1bd830046_AsF64(_1bd82c384_Const* _self_);
inline void _1bd8302ee_SetI64(_1bd82c384_Const* _self_, jule::I64 _13822_x);
inline void _1bd8305a7_SetU64(_1bd82c384_Const* _self_, jule::U64 _14122_x);
inline void _1bd830860_SetBool(_1bd82c384_Const* _self_, jule::Bool _14423_x);
inline void _1bd830b18_SetStr(_1bd82c384_Const* _self_, jule::Str _14722_x);
inline void _1bd830dc1_SetF64(_1bd82c384_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1bd831355_IsI64(_1bd82c384_Const* _self_);
inline jule::Bool _1bd8315db_IsU64(_1bd82c384_Const* _self_);
inline jule::Bool _1bd831872_IsBool(_1bd82c384_Const* _self_);
inline jule::Bool _1bd831b08_IsStr(_1bd82c384_Const* _self_);
inline jule::Bool _1bd831d8e_IsF64(_1bd82c384_Const* _self_);
inline jule::Bool _1bd832125_IsNil(_1bd82c384_Const* _self_);
inline jule::Bool _1bd8327a7_And(_1bd82c384_Const* _self_, _1bd82c384_Const _23815_x);
inline jule::Bool _1bd832ae8_Or(_1bd82c384_Const* _self_, _1bd82c384_Const _24914_x);
inline jule::Bool _1bd83408e_Add(_1bd82c384_Const* _self_, _1bd82c384_Const _37719_x);
inline jule::Bool _1bd8343d0_Sub(_1bd82c384_Const* _self_, _1bd82c384_Const _40619_x);
inline jule::Bool _1bd834721_Mul(_1bd82c384_Const* _self_, _1bd82c384_Const _43019_x);
inline jule::Bool _1bd834a62_Div(_1bd82c384_Const* _self_, _1bd82c384_Const _45819_x);
inline jule::Bool _1bd834da3_Mod(_1bd82c384_Const* _self_, _1bd82c384_Const _48719_x);
inline jule::Bool _1bd8351e4_BitwiseAnd(_1bd82c384_Const* _self_, _1bd82c384_Const _50926_x);
inline jule::Bool _1bd835535_BitwiseOr(_1bd82c384_Const* _self_, _1bd82c384_Const _52325_x);
inline jule::Bool _1bd835876_Xor(_1bd82c384_Const* _self_, _1bd82c384_Const _53719_x);
inline jule::Bool _1bd835bb7_Lshift(_1bd82c384_Const* _self_, _1bd82c384_Const _55122_x);
inline jule::Bool _1bd836008_Rshift(_1bd82c384_Const* _self_, _1bd82c384_Const _57122_x);
inline jule::U8 _1a795c387_Prec(_1a795c013_Token* _self_);
inline void _1a7962bb7_Fill(_1a7962799_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1a7962e4d_Dir(_1a7962799_File* _self_);
inline jule::Str _1a79631d4_Name(_1a7962799_File* _self_);
inline jule::Str _1a79637ab_GetRow(_1a7962799_File* _self_, jule::I64 _3818_row);
inline void _1a796ae67_pushErr(_1a796a8d4_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1a796b4c8_lex(_1a796a8d4_lex* _self_);
inline jule::Str _1a796b819_id(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1a796baa0_resume(_1a796a8d4_lex* _self_);
inline void _1a796bd58_lexLineComment(_1a796a8d4_lex* _self_, jule::Ptr<_1a795c013_Token>* _52135_token);
inline void _1a796c111_lexRangeComment(_1a796a8d4_lex* _self_, jule::Ptr<_1a795c013_Token>* _53636_token);
inline jule::Str _1a796c452_num(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1a796c793_escapeSeq(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1a796cb8e_getRune(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1a796ced0_lexRune(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1a796d266_lexStr(_1a796a8d4_lex* _self_);
inline void _1a796d6ea_newLine(_1a796a8d4_lex* _self_);
inline jule::Bool _1a796dc5b_isOp(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1a795c013_Token>* _70763_t);
inline jule::Bool _1a796e157_lexBasicOps(_1a796a8d4_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1a795c013_Token>* _71745_tok);
inline jule::Bool _1a796e553_lexId(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1a795c013_Token>* _72640_t);
inline jule::Bool _1a796e94e_lexNum(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1a795c013_Token>* _73641_t);
inline jule::Ptr<_1a795c013_Token> _1a796ebd5_token(_1a796a8d4_lex* _self_);
inline jule::Bool _1a797435a_IsUnsafe(_1a7973ee7_PtrTypeDecl* _self_);
inline jule::Bool _1a7974aec_AutoSized(_1a7974789_ArrTypeDecl* _self_);
inline jule::Bool _1a797a8a0_Unhandled(_1a797a52b_FnCallExpr* _self_);
inline jule::Bool _1a797ab36_Ignored(_1a797a52b_FnCallExpr* _self_);
inline jule::Bool _1a79830a0_IsSelf(_1a7982c2b_ParamDecl* _self_);
inline jule::Bool _1a79844e1_IsAnon(_1a798417d_FnDecl* _self_);
inline jule::Bool _1a79862e5_IsInf(_1a7985e82_Iter* _self_);
inline jule::Bool _1a7986b20_IsWhileNext(_1a79867ac_WhileKind* _self_);
inline jule::Ptr<_1a7995535_FieldIns> _1a79907d8_instance(jule::Ptr<_1a7990431_Field> _self_);
inline jule::Ptr<_1a79960d5_StructIns> _1a79937b9_instance(jule::Ptr<_1a7993357_Struct> _self_);
inline jule::Ptr<_1a79960d5_StructIns> _1a7993ac7_appendInstance(_1a7993357_Struct* _self_, jule::Ptr<_1a79960d5_StructIns>* _13435_ins);
inline jule::Ptr<_1a79a8328_Fn> _1a7993ec3_FindMethod(_1a7993357_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically);
inline jule::Ptr<_1a685a682_Var> _1a7994314_FindStatic(_1a7993357_Struct* _self_, jule::Str _16326_ident);
inline jule::Ptr<_1a7990431_Field> _1a7994655_FindField(_1a7993357_Struct* _self_, jule::Str _17425_ident);
inline jule::Bool _1a7994996_IsImplements(_1a7993357_Struct* _self_, jule::Ptr<_1a79bb6d2_Trait> _18424_t);
inline jule::Bool _1a7994cd7_IsUses(_1a7993357_Struct* _self_, jule::Ptr<_1a7993357_Struct> _19418_s);
inline jule::Str _1a7996459_Str(_1a79960d5_StructIns* _self_);
inline jule::Bool _1a799679a_Equal(jule::Ptr<_1a79960d5_StructIns> _self_, jule::Ptr<_1a7a828ec_TypeKind> _25518_other);
inline jule::Bool _1a7996c51_Same(_1a79960d5_StructIns* _self_, jule::Ptr<_1a79960d5_StructIns> _28316_s);
inline jule::Ptr<_1a79a8328_Fn> _1a799714c_FindMethod(_1a79960d5_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically);
inline jule::Ptr<_1a7995535_FieldIns> _1a799748d_FindField(_1a79960d5_StructIns* _self_, jule::Str _30925_ident);
inline jule::Ptr<_1a685a682_Var> _1a79977ce_FindStatic(_1a79960d5_StructIns* _self_, jule::Str _32026_ident);
inline jule::Ptr<_1a79aa281_ParamIns> _1a79a6bd9_instance(jule::Ptr<_1a79a6854_Param> _self_);
inline jule::Bool _1a79a6e70_IsSelf(_1a79a6854_Param* _self_);
inline jule::Bool _1a79a7206_IsRef(_1a79a6854_Param* _self_);
inline jule::Bool _1a79a879b_IsVoid(_1a79a8328_Fn* _self_);
inline jule::Bool _1a79a8a32_IsMethod(_1a79a8328_Fn* _self_);
inline jule::Bool _1a79a8cb8_IsEntryPoint(_1a79a8328_Fn* _self_);
inline jule::Bool _1a79a904e_IsInit(_1a79a8328_Fn* _self_);
inline jule::Bool _1a79a92d5_IsAnon(_1a79a8328_Fn* _self_);
inline jule::Bool _1a79a956b_AnyVar(_1a79a8328_Fn* _self_);
inline jule::Ptr<_1a79ab309_FnIns> _1a79a9802_instanceForce(jule::Ptr<_1a79a8328_Fn> _self_);
inline jule::Ptr<_1a79ab309_FnIns> _1a79a9a88_instance(jule::Ptr<_1a79a8328_Fn> _self_);
inline jule::Ptr<_1a79ab309_FnIns> _1a79a9d96_appendInstance(_1a79a8328_Fn* _self_, jule::Ptr<_1a79ab309_FnIns>* _12935_ins);
inline jule::Str _1a79aa5e4_Str(_1a79aa281_ParamIns* _self_);
inline jule::Str _1a79ab64a_Str(_1a79ab309_FnIns* _self_);
inline jule::Bool _1a79ab98b_Equal(jule::Ptr<_1a79ab309_FnIns> _self_, jule::Ptr<_1a7a828ec_TypeKind> _21918_other);
inline jule::Bool _1a79abe31_EqualFn(jule::Ptr<_1a79ab309_FnIns> _self_, jule::Ptr<_1a79ab309_FnIns>* _23021_f);
inline jule::Bool _1a79ac272_equalTrait(jule::Ptr<_1a79ab309_FnIns> _self_, jule::Ptr<_1a79ab309_FnIns>* _28924_other);
inline jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _1a79ac508_Types(_1a79ab309_FnIns* _self_);
inline jule::Bool _1a79ac78e_IsBuiltin(_1a79ab309_FnIns* _self_);
inline jule::Bool _1a79aca25_IsAnon(_1a79ab309_FnIns* _self_);
inline jule::Bool _1a79acd66_Same(_1a79ab309_FnIns* _self_, jule::Ptr<_1a79ab309_FnIns> _33216_f);
inline jule::Str _1a79ad1a7_GetKindStr(_1a79ab309_FnIns* _self_, jule::Bool _34922_ident);
inline jule::Ptr<_1a79ae4d8_ReferenceStack> static__1a79ae7c4_new(void);
inline jule::I64 _1a79aebc0_Len(_1a79ae4d8_ReferenceStack* _self_);
inline jule::Any _1a79b0011_At(_1a79ae4d8_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1a79b02b9_Push(_1a79ae4d8_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1ac1c857c_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a79ab309_FnIns> _7820_t);
inline jule::Bool _1ac1de461_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a685a682_Var> _7820_t);
inline jule::Bool _1ac323c27_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a79960d5_StructIns> _7820_t);
inline jule::Bool _1ac5ed52e_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a79bb6d2_Trait> _7820_t);
inline void _1a79b5e4b_pushErr(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a795c013_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1a79b66cc_pushSuggestion(_1a79b549a_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1a79b6ac8_checkCppUseDeclPath(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1a6817474_ImportInfo> _1a79b6dd6_buildCppHeaderImport(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _36541_decl);
inline jule::Ptr<_1a6817474_ImportInfo> _1a79b7227_buildStdImport(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _39335_decl);
inline jule::Ptr<_1a6817474_ImportInfo> _1a79b7568_buildIdentImport(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _43338_decl);
inline jule::Ptr<_1a6817474_ImportInfo> _1a79b78a9_buildImport(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _48733_decl);
inline jule::Bool _1a79b7bea_checkDuplicateUseDecl(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a6817474_ImportInfo>* _49838_pkg);
inline void _1a79b805d_implImportSelections(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a6817474_ImportInfo>* _51241_imp, jule::Ptr<_1a798a5c4_UseDecl>* _51264_decl);
inline jule::Str _1a79b839e_getAsLinkPath(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Str _52734_path);
inline void _1a79b87bc_pushCycleError(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a79b549a_symbolBuilder>* _54132_sb, jule::Str _54152_path, _200880c8a_StrBuilder* _54168_message);
inline void _1a79b8bda_pushCrossCycleError(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a79b549a_symbolBuilder>* _55437_target, jule::Ptr<_1a6817474_ImportInfo>* _55462_imp, jule::Ptr<_1a795c013_Token>* _55481_errorToken);
inline jule::Bool _1a79b90d6_checkImportCycles(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a6817474_ImportInfo> _57734_imp, jule::Ptr<_1a798a5c4_UseDecl>* _57753_decl);
inline void _1a79b9504_checkPackageAccessibility(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _60842_decl, jule::Str* _60859_mod, jule::Str* _60870_path);
inline jule::Bool _1a79b9900_importPackage(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a6817474_ImportInfo>* _61435_imp, jule::Ptr<_1a798a5c4_UseDecl>* _61458_decl);
inline jule::Ptr<_1a6817474_ImportInfo> _1a79b9c41_importUseDecl(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _66135_decl);
inline void _1a79b9e3e_importUseDecls(jule::Ptr<_1a79b549a_symbolBuilder> _self_);
inline void _1a79ba1e7_appendNode(_1a79b549a_symbolBuilder* _self_, _1a79714bc_Node* _69231_node);
inline void _1a79ba3e5_appendNodes(_1a79b549a_symbolBuilder* _self_);
inline void _1a79ba69d_pushDirectivePass(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a79718da_Directive>* _72838_d);
inline void _1a79ba89b_appendTopDirectives(_1a79b549a_symbolBuilder* _self_);
inline void _1a79baa99_build(jule::Ptr<_1a79b549a_symbolBuilder> _self_);
inline jule::Str _1a79bba9a_Str(_1a79bb6d2_Trait* _self_);
inline jule::Bool _1a79bbddb_Equal(jule::Ptr<_1a79bb6d2_Trait> _self_, jule::Ptr<_1a7a828ec_TypeKind> _2518_other);
inline jule::Ptr<_1a79a8328_Fn> _1a79bc381_FindMethod(_1a79bb6d2_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a79a8328_Fn> _1a79bca13_findMethodInherit(_1a79bb6d2_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a79bd728_AutoExpr(_1a79bd371_EnumItem* _self_);
inline jule::Str _1a79be262_Str(_1a79bdddd_Enum* _self_);
inline jule::Bool _1a79be5a3_Equal(jule::Ptr<_1a79bdddd_Enum> _self_, jule::Ptr<_1a7a828ec_TypeKind> _3818_other);
inline jule::Ptr<_1a79bd371_EnumItem> _1a79be9d2_FindItem(_1a79bdddd_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a79c0939_Str(_1a79c05e8_TypeEnum* _self_);
inline jule::Bool _1a79c0c7a_Equal(jule::Ptr<_1a79c05e8_TypeEnum> _self_, jule::Ptr<_1a7a828ec_TypeKind> _8018_other);
inline jule::Ptr<_1a79c0021_TypeEnumItem> _1a79c11a9_FindItem(_1a79c05e8_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a79c3ac4_Str(_1a79c3750_comptimeRange* _self_);
inline jule::Bool _1a79c3e15_Equal(jule::Ptr<_1a79c3750_comptimeRange> _self_, jule::Ptr<_1a7a828ec_TypeKind> _3618_other);
inline jule::Str _1a79c45db_Str(_1a79c4223_comptimeStructField* _self_);
inline jule::Bool _1a79c492c_Equal(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a828ec_TypeKind> _4618_other);
inline jule::Ptr<_1a7a51503_Data> _1a79c4ec1__Name(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a5322a_Eval>* _5023_e, jule::Ptr<_1a797a52b_FnCallExpr>* _5038_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79c53bc__Type(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a5322a_Eval>* _6327_e, jule::Ptr<_1a797a52b_FnCallExpr>* _6342_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79c57b8__Public(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a5322a_Eval>* _7129_e, jule::Ptr<_1a797a52b_FnCallExpr>* _7144_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79c5ac6_subIdent(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Str* _8426_ident);
inline jule::Str _1a79c6258_Str(_1a79c5dd4_comptimeStructFields* _self_);
inline jule::Bool _1a79c6599_Equal(jule::Ptr<_1a79c5dd4_comptimeStructFields> _self_, jule::Ptr<_1a7a828ec_TypeKind> _12018_other);
inline void _1a79c6a1c_ready(_1a79c5dd4_comptimeStructFields* _self_, jule::Ptr<_1a685a682_Var>* _12426_keyA, jule::Ptr<_1a685a682_Var>* _12443_keyB);
inline void _1a79c6e3a_step(_1a79c5dd4_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1a685a682_Var>* _14533_keyA, jule::Ptr<_1a685a682_Var>* _14550_keyB);
inline jule::I64 _1a79c71c1_len(_1a79c5dd4_comptimeStructFields* _self_);
inline jule::Str _1a79c7853_Str(_1a79c74ce_comptimeStatic* _self_);
inline jule::Bool _1a79c7b94_Equal(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a828ec_TypeKind> _16918_other);
inline jule::Ptr<_1a7a51503_Data> _1a79c82c1__Name(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a5322a_Eval>* _17323_e, jule::Ptr<_1a797a52b_FnCallExpr>* _17338_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79c86bc__Type(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a5322a_Eval>* _18627_e, jule::Ptr<_1a797a52b_FnCallExpr>* _18642_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79c8ab8__Public(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a5322a_Eval>* _19429_e, jule::Ptr<_1a797a52b_FnCallExpr>* _19444_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79c8e09_subIdent(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Str* _20726_ident);
inline jule::Str _1a79c9514_Str(_1a79c9190_comptimeStatics* _self_);
inline jule::Bool _1a79c9855_Equal(jule::Ptr<_1a79c9190_comptimeStatics> _self_, jule::Ptr<_1a7a828ec_TypeKind> _24318_other);
inline void _1a79c9cc8_ready(_1a79c9190_comptimeStatics* _self_, jule::Ptr<_1a685a682_Var>* _24726_keyA, jule::Ptr<_1a685a682_Var>* _24743_keyB);
inline void _1a79ca1e6_step(_1a79c9190_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1a685a682_Var>* _26833_keyA, jule::Ptr<_1a685a682_Var>* _26850_keyB);
inline jule::I64 _1a79ca47c_len(_1a79c9190_comptimeStatics* _self_);
inline jule::Str _1a79cac1e_Str(_1a79ca78a_comptimeEnumField* _self_);
inline jule::Bool _1a79cb060_Equal(jule::Ptr<_1a79ca78a_comptimeEnumField> _self_, jule::Ptr<_1a7a828ec_TypeKind> _29218_other);
inline jule::Ptr<_1a7a51503_Data> _1a79cb4d3__Name(jule::Ptr<_1a79ca78a_comptimeEnumField> _self_, jule::Ptr<_1a7a5322a_Eval>* _29623_e, jule::Ptr<_1a797a52b_FnCallExpr>* _29638_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79cb824_subIdent(jule::Ptr<_1a79ca78a_comptimeEnumField> _self_, jule::Str* _30926_ident);
inline jule::Str _1a79cbea6_Str(_1a79cbb32_comptimeEnumFields* _self_);
inline jule::Bool _1a79cc2e7_Equal(jule::Ptr<_1a79cbb32_comptimeEnumFields> _self_, jule::Ptr<_1a7a828ec_TypeKind> _33118_other);
inline void _1a79cc76a_ready(_1a79cbb32_comptimeEnumFields* _self_, jule::Ptr<_1a685a682_Var>* _33526_keyA, jule::Ptr<_1a685a682_Var>* _33543_keyB);
inline void _1a79ccb88_step(_1a79cbb32_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1a685a682_Var>* _35633_keyA, jule::Ptr<_1a685a682_Var>* _35650_keyB);
inline jule::I64 _1a79cce1e_len(_1a79cbb32_comptimeEnumFields* _self_);
inline jule::Str _1a79cd5a1_Str(_1a79cd22c_comptimeParam* _self_);
inline jule::Bool _1a79cd8e2_Equal(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a828ec_TypeKind> _38018_other);
inline jule::Ptr<_1a7a51503_Data> _1a79ce151__Name(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _38423_e, jule::Ptr<_1a797a52b_FnCallExpr>* _38438_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79ce54c__Type(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _39727_e, jule::Ptr<_1a797a52b_FnCallExpr>* _39742_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79ce948__Variadic(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _40531_e, jule::Ptr<_1a797a52b_FnCallExpr>* _40546_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79ced44__Reference(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _41832_e, jule::Ptr<_1a797a52b_FnCallExpr>* _41847_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d0185_subIdent(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Str* _43126_ident);
inline jule::Str _1a79d0707_Str(_1a79d03b6_comptimeParams* _self_);
inline jule::Bool _1a79d0a48_Equal(jule::Ptr<_1a79d03b6_comptimeParams> _self_, jule::Ptr<_1a7a828ec_TypeKind> _47418_other);
inline void _1a79d0ebb_ready(_1a79d03b6_comptimeParams* _self_, jule::Ptr<_1a685a682_Var>* _47826_keyA, jule::Ptr<_1a685a682_Var>* _47843_keyB);
inline void _1a79d13d9_step(_1a79d03b6_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1a685a682_Var>* _49933_keyA, jule::Ptr<_1a685a682_Var>* _49950_keyB);
inline jule::I64 _1a79d1670_len(_1a79d03b6_comptimeParams* _self_);
inline jule::Str _1a79d1d02_Str(_1a79d197d_comptimeTypeInfos* _self_);
inline jule::Bool _1a79d2143_Equal(jule::Ptr<_1a79d197d_comptimeTypeInfos> _self_, jule::Ptr<_1a7a828ec_TypeKind> _52318_other);
inline void _1a79d25b6_ready(_1a79d197d_comptimeTypeInfos* _self_, jule::Ptr<_1a685a682_Var>* _52726_keyA, jule::Ptr<_1a685a682_Var>* _52743_keyB);
inline void _1a79d29d4_step(_1a79d197d_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1a685a682_Var>* _54833_keyA, jule::Ptr<_1a685a682_Var>* _54850_keyB);
inline jule::I64 _1a79d2c6a_len(_1a79d197d_comptimeTypeInfos* _self_);
inline jule::Str _1a79d33ec_Str(_1a79d3078_comptimeTypeInfo* _self_);
inline jule::Bool _1a79d373d_Equal(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a828ec_TypeKind> _57218_other);
inline jule::Ptr<_1a7a51503_Data> _1a79d3d8c__Str(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _57622_e, jule::Ptr<_1a797a52b_FnCallExpr>* _57637_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d4288__Kind(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _58927_e, jule::Ptr<_1a797a52b_FnCallExpr>* _58942_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d4684__Bits(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _66727_e, jule::Ptr<_1a797a52b_FnCallExpr>* _66742_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d4a80__Elem(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _69027_e, jule::Ptr<_1a797a52b_FnCallExpr>* _69042_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d4e7b__Size(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _72327_e, jule::Ptr<_1a797a52b_FnCallExpr>* _72342_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d5377__Key(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _74126_e, jule::Ptr<_1a797a52b_FnCallExpr>* _74141_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d5773__Value(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _75428_e, jule::Ptr<_1a797a52b_FnCallExpr>* _75443_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d5b6e__Fields(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _76729_e, jule::Ptr<_1a797a52b_FnCallExpr>* _76744_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d606a__Statics(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _79630_e, jule::Ptr<_1a797a52b_FnCallExpr>* _79645_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d6466__Public(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _81529_e, jule::Ptr<_1a797a52b_FnCallExpr>* _81544_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d6862__Binded(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _84229_e, jule::Ptr<_1a797a52b_FnCallExpr>* _84244_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d6c5d__Ordered(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _85526_e, jule::Ptr<_1a797a52b_FnCallExpr>* _85541_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d7159__Comparable(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _86829_e, jule::Ptr<_1a797a52b_FnCallExpr>* _86844_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d7555__Mutable(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _88126_e, jule::Ptr<_1a797a52b_FnCallExpr>* _88141_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d7951__Types(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _89428_e, jule::Ptr<_1a797a52b_FnCallExpr>* _89443_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d7d4c__Exceptional(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _91734_e, jule::Ptr<_1a797a52b_FnCallExpr>* _91749_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d8248__CanNil(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _93529_e, jule::Ptr<_1a797a52b_FnCallExpr>* _93544_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d8644__RC(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _94825_e, jule::Ptr<_1a797a52b_FnCallExpr>* _94840_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d8a40__Result(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _96129_e, jule::Ptr<_1a797a52b_FnCallExpr>* _96144_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d8e3b__Params(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _97729_e, jule::Ptr<_1a797a52b_FnCallExpr>* _97744_fc);
inline jule::Ptr<_1a7a51503_Data> _1a79d927c_subIdent(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Str* _99426_ident);
inline jule::Str _1a67ed0b4_Str(_1a67ecc40_comptimeValue* _self_);
inline jule::Bool _1a67ed405_Equal(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a828ec_TypeKind> _114918_other);
inline jule::Ptr<_1a7a51503_Data> _1a67ed955__Unwrap(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _115329_e, jule::Ptr<_1a797a52b_FnCallExpr>* _115344_fc);
inline jule::Ptr<_1a7a51503_Data> _1a67edd51__Type(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _116127_e, jule::Ptr<_1a797a52b_FnCallExpr>* _116142_fc);
inline jule::Ptr<_1a7a51503_Data> _1a67ee24c__Lvalue(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _116929_e, jule::Ptr<_1a797a52b_FnCallExpr>* _116944_fc);
inline jule::Ptr<_1a7a51503_Data> _1a67ee648__Mutable(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _118230_e, jule::Ptr<_1a797a52b_FnCallExpr>* _118245_fc);
inline jule::Ptr<_1a7a51503_Data> _1a67eea44__Const(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _119528_e, jule::Ptr<_1a797a52b_FnCallExpr>* _119543_fc);
inline jule::Ptr<_1a7a51503_Data> _1a67eee40__Field(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _120828_e, jule::Ptr<_1a797a52b_FnCallExpr>* _120843_fc);
inline jule::Ptr<_1a7a51503_Data> _1a6800281_subIdent(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Str* _124326_ident);
inline jule::Str _1a6800913_Str(_1a680058e_comptimeFiles* _self_);
inline jule::Bool _1a6800c54_Equal(jule::Ptr<_1a680058e_comptimeFiles> _self_, jule::Ptr<_1a7a828ec_TypeKind> _130018_other);
inline void _1a68011c7_ready(_1a680058e_comptimeFiles* _self_, jule::Ptr<_1a685a682_Var>* _130426_keyA, jule::Ptr<_1a685a682_Var>* _130443_keyB);
inline void _1a68015e5_step(_1a680058e_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1a685a682_Var>* _132533_keyA, jule::Ptr<_1a685a682_Var>* _132550_keyB);
inline jule::I64 _1a680187b_len(_1a680058e_comptimeFiles* _self_);
inline jule::Str _1a6802250_Str(_1a6801b89_comptimeFile* _self_);
inline jule::Bool _1a6802591_Equal(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a828ec_TypeKind> _134918_other);
inline jule::Ptr<_1a7a51503_Data> _1a6802aad__Path(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a5322a_Eval>* _135327_e, jule::Ptr<_1a797a52b_FnCallExpr>* _135342_fc);
inline jule::Ptr<_1a7a51503_Data> _1a6802ea9__Name(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a5322a_Eval>* _136627_e, jule::Ptr<_1a797a52b_FnCallExpr>* _136642_fc);
inline jule::Ptr<_1a7a51503_Data> _1a68033a5__Dir(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a5322a_Eval>* _137926_e, jule::Ptr<_1a797a52b_FnCallExpr>* _137941_fc);
inline jule::Ptr<_1a7a51503_Data> _1a68036e6_subIdent(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Str* _139226_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a6837818_Sema>*,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>*> _1a68067e8_readyFn(jule::Ptr<_1a68063ec_constraintChecker> _self_);
inline jule::Bool _1a6806a7e_readyFi(jule::Ptr<_1a68063ec_constraintChecker> _self_);
inline jule::Bool _1a6806d15_readySi(jule::Ptr<_1a68063ec_constraintChecker> _self_);
inline jule::Bool _1a680709b_ready(jule::Ptr<_1a68063ec_constraintChecker> _self_);
inline jule::Bool _1a6807332_check(jule::Ptr<_1a68063ec_constraintChecker> _self_);
inline jule::Bool _1a6808b19_IsTraitImpl(_1a6808751_Impl* _self_);
inline jule::Bool _1a6808da0_IsStructImpl(_1a6808751_Impl* _self_);
inline jule::Ptr<_1a6817474_ImportInfo> _1a79de903_SelectPackage(_1a79de45d_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _46029_selector);
inline jule::Ptr<_1a685a682_Var> _1a79decee_FindVar(_1a79de45d_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a79e01ea_FindTypeAlias(_1a79de45d_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded);
inline jule::Ptr<_1a7993357_Struct> _1a79e05e6_FindStruct(_1a79de45d_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded);
inline jule::Ptr<_1a79a8328_Fn> _1a79e09e2_FindFn(_1a79de45d_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded);
inline jule::Ptr<_1a79bb6d2_Trait> _1a79e0d33_FindTrait(_1a79de45d_scopeChecker* _self_, jule::Str _53125_ident);
inline jule::Ptr<_1a79bdddd_Enum> _1a79e1174_FindEnum(_1a79de45d_scopeChecker* _self_, jule::Str _54024_ident);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a79e14b5_FindTypeEnum(_1a79de45d_scopeChecker* _self_, jule::Str _54928_ident);
inline jule::Bool _1a79e1817_isUnsafe(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline jule::Bool _1a79e1a9d_isRoot(_1a79de45d_scopeChecker* _self_);
inline void _1a79e1c9b_stop(_1a79de45d_scopeChecker* _self_);
inline jule::Bool _1a79e2032_stopped(_1a79de45d_scopeChecker* _self_);
inline jule::Bool _1a79e22b8_isDeferred(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline void _1a79e2571_pushCaptured(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a685a682_Var>* _61134_v);
inline jule::Ptr<_1a79de45d_scopeChecker> _1a79e2807_getRoot(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline jule::Ptr<_1a79de45d_scopeChecker> _1a79e2a8d_getHardRoot(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline jule::Ptr<_1a685a682_Var> _1a79e2dce_findVar(_1a79de45d_scopeChecker* _self_, jule::Str _65423_ident);
inline jule::Ptr<_1a79d96de_Label> _1a79e3220_findLabel(_1a79de45d_scopeChecker* _self_, jule::Str* _67526_ident);
inline jule::Ptr<_1a79dcdda_scopeLabel> _1a79e3561_findLabelScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Str* _69132_ident);
inline jule::Ptr<_1a79dcdda_scopeLabel> _1a79e38a2_findLabelAll(_1a79de45d_scopeChecker* _self_, jule::Str* _70329_ident);
inline jule::Bool _1a79e3c9d_isDuplicatedIdent(_1a79de45d_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident);
inline void _1a79e4056_checkVarDecl(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985338_VarDecl> _73533_decl);
inline void _1a79e430e_checkTypeAlias(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _76636_ta);
inline void _1a79e45b7_checkTypeAliasDecl(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7988eda_TypeAliasDecl> _78239_decl);
inline jule::Ptr<_1a680dba7_Scope> _1a79e484d_getChild(_1a79de45d_scopeChecker* _self_);
inline void _1a79e4c6b_checkChildSsc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _79335_tree, jule::Ptr<_1a680dba7_Scope>* _79358_s, jule::Ptr<_1a79de45d_scopeChecker>* _79374_ssc);
inline jule::Ptr<_1a680dba7_Scope> _1a79e5167_checkChildSc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _79834_tree, jule::Ptr<_1a79de45d_scopeChecker>* _79857_ssc);
inline jule::Ptr<_1a680dba7_Scope> _1a79e54a8_checkChild(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _80432_tree);
inline void _1a79e5761_checkAnonScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree> _80935_tree);
inline void _1a79e5ac4_processErrorCall(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1a795c013_Token> _81469_err);
inline void _1a79e5d7c_checkExpr(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7976802_Expr> _82730_expr);
inline jule::Ptr<_1a680e0c5_If> _1a79e61bd_checkIf(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7987e1d_If> _85828_i);
inline jule::Ptr<_1a680e3c2_Else> _1a79e650e_checkElse(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79882e7_Else> _87830_e);
inline void _1a79e67b7_checkConditional(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798879d_Conditional> _88437_conditional);
inline void _1a79e6c90_checkIterScopeSsc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1a79824de_ScopeTree> _90051_tree, jule::Ptr<_1a680dba7_Scope>* _90074_s, jule::Ptr<_1a79de45d_scopeChecker> _90089_ssc);
inline jule::Ptr<_1a680dba7_Scope> _1a79e7246_checkIterScopeSc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1a79824de_ScopeTree> _90550_tree, jule::Ptr<_1a79de45d_scopeChecker> _90572_ssc);
inline jule::Ptr<_1a680dba7_Scope> _1a79e7642_checkIterScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1a79824de_ScopeTree>* _91149_tree);
inline void _1a79e78ea_checkInfIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _91634_it);
inline void _1a79e7ba3_checkWhileIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _92236_it);
inline void _1a79e80c1_checkComptimeRangeIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _97244_it, jule::Ptr<_1a68109de_RangeIter>* _97260_kind, jule::Ptr<_1a7a51503_Data>* _97283_d);
inline void _1a79e8379_checkRangeIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _102936_it);
inline void _1a79e8632_checkIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter> _108930_it);
inline jule::Bool _1a79e8973_checkValidContLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _111336_it);
inline jule::Bool _1a79e8cb4_checkValidBreakLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _112937_ptr);
inline jule::Ptr<_1a636e581_ContSt> _1a79e9105_checkContValidScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7987967_ContSt> _115236_c);
inline void _1a79e93ad_checkCont(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7987967_ContSt> _117626_c);
inline void _1a79e9666_checkLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a797eaa2_LabelSt> _122331_l);
inline void _1a79e991e_pushGoto(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a797ee7b_GotoSt> _124229_gt);
inline void _1a6362585_checkPostfix(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt> _125633_a);
inline jule::Bool _1a636ae95_isNewAssignIdent(_1a79de45d_scopeChecker* _self_, jule::Str _128932_ident);
inline void _1a6370186_removeInteriorMutRisk(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7a51503_Data>* _130243_d);
inline jule::Bool _1a637063c_checkStructureAssignOp(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79960d5_StructIns>* _131644_s, jule::Ptr<_1a7980e6b_AssignSt>* _131664_a, jule::Ptr<_1a7a51503_Data>* _131683_r);
inline void _1a63708e5_checkSingleAssign(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt>* _135539_a);
inline void _1a6370e78_processEndPartOfMultiAssign(_1a79de45d_scopeChecker* _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _143348_st, jule::Ptr<_1a7980e6b_AssignSt>* _14348_a, jule::Ptr<_1a79808d8_AssignLeft>* _143427_lexpr, jule::Ptr<_1a7a51503_Data>* _143452_l, jule::Ptr<_1a7a51503_Data>* _143467_r);
inline void _1a6371231_checkMultiAssign(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt>* _150338_a);
inline void _1a63714d9_checkAssignSt(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt> _155134_a);
inline jule::Ptr<_1a680dba7_Scope> _1a63718d5_checkCaseScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79dbb97_Case>* _156232_c, jule::Ptr<_1a79824de_ScopeTree>* _156247_tree);
inline jule::Ptr<_1a79dbb97_Case> _1a6371e46_checkCase(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79db04d_Match> _156830_m, jule::I64 _156841_i, jule::Ptr<_1a7989491_Case> _156853_c, jule::Ptr<_1a7a51503_Data> _156872_expr);
inline void _1a6372364_checkCases(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase>* _164332_m, jule::Ptr<_1a79db04d_Match> _164351_rm, jule::Ptr<_1a7a51503_Data> _164367_expr);
inline jule::Ptr<_1a79dbb97_Case> _1a6372760_checkDefault(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79db04d_Match> _166433_m, jule::Ptr<_1a79882e7_Else> _166448_d);
inline void _1a6372ac3_checkComptimePanic(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a795c013_Token> _167239_callToken, jule::Ptr<_1a680dba7_Scope>* _167259_s);
inline void _1a6372e36_processConstMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79db04d_Match>* _170439_tm, jule::Ptr<_1a7989caa_MatchCase>* _170456_m);
inline void _1a63731de_checkTypeMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase>* _173336_m);
inline void _1a6373497_checkCommonMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase>* _177538_m);
inline void _1a6373750_checkMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase> _182531_m);
inline void _1a6373a08_checkFall(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980278_FallSt> _183326_f);
inline jule::Ptr<_1a79d947a_BreakSt> _1a6373d49_checkBreakWithLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798758d_BreakSt> _185636_b);
inline jule::Ptr<_1a79d947a_BreakSt> _1a637418a_checkPlainBreak(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798758d_BreakSt> _191432_b);
inline void _1a6374443_checkBreak(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798758d_BreakSt> _193627_b);
inline void _1a63746eb_checkRet(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985712_RetSt> _194729_r);
inline void _1a63749a4_checkUseExpr(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79771c6_UseExpr> _197229_ue);
inline void _1a6374c5c_checkNode(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Any* _198831_node);
inline void _1a6374e5a_checkResult(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline void _1a6375158_checkTree(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline void _1a63754bb_checkGoto(_1a79de45d_scopeChecker* _self_, jule::Ptr<_1a79dd46d_scopeGoto>* _209030_gt, jule::Ptr<_1a79dcdda_scopeLabel>* _209051_label);
inline void _1a63756b9_checkGotos(_1a79de45d_scopeChecker* _self_);
inline void _1a63758b7_checkLabels(_1a79de45d_scopeChecker* _self_);
inline void _1a6375ab5_checkVars(_1a79de45d_scopeChecker* _self_);
inline void _1a6375cb3_checkAliases(_1a79de45d_scopeChecker* _self_);
inline void _1a6376126_check(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _216827_tree, jule::Ptr<_1a680dba7_Scope>* _216850_s);
inline jule::Ptr<_1a79de45d_scopeChecker> _1a63763ac_newChildChecker(jule::Ptr<_1a79de45d_scopeChecker> _self_);
inline void _1a681133b_checkCdef(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _1626_d);
inline void _1a68115e4_checkTypedef(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _3229_d);
inline void _1a681189c_checkNamespace(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _4835_d);
inline void _1a6811b55_checkDeprecated(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _9936_d);
inline void _1a6811e0d_checkTest(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _13926_d);
inline void _1a68121b6_checkDirective(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _16035_d);
inline void _1a68123b4_check(_1a6810e2e_directiveChecker* _self_);
inline jule::Ptr<_1a6817474_ImportInfo> _1a681795d_SelectPackage(_1a6817474_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> );
inline jule::Ptr<_1a685a682_Var> _1a6817d59_FindVar(_1a6817474_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a6818255_FindTypeAlias(_1a6817474_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a7993357_Struct> _1a6818651_FindStruct(_1a6817474_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1a79a8328_Fn> _1a6818a4c_FindFn(_1a6817474_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1a79bb6d2_Trait> _1a6818d8d_FindTrait(_1a6817474_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1a79bdddd_Enum> _1a68191ce_FindEnum(_1a6817474_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a6819520_FindTypeEnum(_1a6817474_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1a68199b5_isLookupable(_1a6817474_ImportInfo* _self_, jule::Str* _26725_ident);
inline jule::Bool _1a6819d06_existIdent(_1a6817474_ImportInfo* _self_, jule::Str _28722_ident);
inline jule::Bool _1a681a08c_isAccessibleViaSelection(_1a6817474_ImportInfo* _self_);
inline jule::Ptr<_1a6817474_ImportInfo> _1a681a840_SelectPackage(_1a681a39a_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> );
inline jule::Ptr<_1a685a682_Var> _1a681ac3b_FindVar(_1a681a39a_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a681b137_FindTypeAlias(_1a681a39a_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded);
inline jule::Ptr<_1a7993357_Struct> _1a681b533_FindStruct(_1a681a39a_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1a79a8328_Fn> _1a681b92e_FindFn(_1a681a39a_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded);
inline jule::Ptr<_1a79bb6d2_Trait> _1a681bc70_FindTrait(_1a681a39a_Package* _self_, jule::Str _33825_ident);
inline jule::Ptr<_1a79bdddd_Enum> _1a681c0b1_FindEnum(_1a681a39a_Package* _self_, jule::Str _34424_ident);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a681c402_FindTypeEnum(_1a681a39a_Package* _self_, jule::Str _35028_ident);
inline jule::Ptr<_1a79d3078_comptimeTypeInfo> _1a6837153_pushComptimeTypeInfo(_1a6836c13_commonSemaMeta* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _21441_t);
inline jule::Ptr<_1a6817474_ImportInfo> _1a6837cad_SelectPackage(_1a6837818_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _24329_selector);
inline jule::Ptr<_1a685a682_Var> _1a68381a9_FindVar(_1a6837818_Sema* _self_, jule::Str _25323_ident, jule::Bool _25335_binded);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a68385a5_FindTypeAlias(_1a6837818_Sema* _self_, jule::Str _28529_ident, jule::Bool _28541_binded);
inline jule::Ptr<_1a7993357_Struct> _1a68389a1_FindStruct(_1a6837818_Sema* _self_, jule::Str _31726_ident, jule::Bool _31738_binded);
inline jule::Ptr<_1a79a8328_Fn> _1a6838d9c_FindFn(_1a6837818_Sema* _self_, jule::Str _34822_ident, jule::Bool _34834_binded);
inline jule::Ptr<_1a79bb6d2_Trait> _1a68391dd_FindTrait(_1a6837818_Sema* _self_, jule::Str _38025_ident);
inline jule::Ptr<_1a79bdddd_Enum> _1a683952e_FindEnum(_1a6837818_Sema* _self_, jule::Str _41224_ident);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a6839870_FindTypeEnum(_1a6837818_Sema* _self_, jule::Str _44428_ident);
inline jule::Bool _1a6839c7c_isFlag(_1a6837818_Sema* _self_, jule::I64 _47318_flags);
inline void _1a683a035_setCurrentFile(_1a6837818_Sema* _self_, jule::Ptr<_1a7a4b18a_SymbolTable> _47534_f);
inline void _1a683a453_pushErr(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token> _47723_token, jule::Str _47738_fmt, jule::Slice<jule::Any> _47751_args);
inline void _1a683a7b6_pushSuggestion(_1a6837818_Sema* _self_, jule::Str _48230_fmt, jule::Slice<jule::Any> _48243_args);
inline jule::Bool _1a683abb2_isAccessibleDefine(_1a6837818_Sema* _self_, jule::Bool _48730_public, jule::Ptr<_1a795c013_Token> _48744_token);
inline jule::Bool _1a683b168_isDuplicatedIdent(_1a6837818_Sema* _self_, jule::Uintptr _49429_itself, jule::Str* _49447_ident, jule::Bool _49459_binded);
inline void _1a683b4cb_checkDirectives(jule::Ptr<_1a6837818_Sema> _self_, jule::Slice<jule::Ptr<_1a79718da_Directive>>* _51137_d, jule::Any _51163_o);
inline jule::Bool _1a683b982_checkGenericQuantity(_1a6837818_Sema* _self_, jule::I64 _52036_required, jule::I64 _52051_given, jule::Ptr<_1a795c013_Token> _52063_token);
inline jule::Bool _1a683bd7d_isDuplicatedImportSelection(_1a6837818_Sema* _self_, jule::Uintptr _53939_itself, jule::Str* _53957_ident);
inline jule::Any _1a683c279_getImportDef(_1a6837818_Sema* _self_, jule::Str* _55225_ident, jule::Ptr<_1a6817474_ImportInfo>* _55242_imp);
inline jule::Bool _1abcaa46c_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a685a682_Var>* _56756_s);
inline jule::Bool _1abcae75c_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a7a81b0a_TypeAlias>* _56756_s);
inline jule::Bool _1abcb39d6_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a7993357_Struct>* _56756_s);
inline jule::Bool _1abcb804b_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79bb6d2_Trait>* _56756_s);
inline jule::Bool _1abcbc2e7_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79bdddd_Enum>* _56756_s);
inline jule::Bool _1abcc1593_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79c05e8_TypeEnum>* _56756_s);
inline jule::Bool _1abcc581c_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79a8328_Fn>* _56756_s);
inline jule::Bool _1a683c9b6_checkImportSelectedSelections(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _58150_imp);
inline jule::Bool _1abcca0d5_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a685a682_Var>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1abccac73_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1abccde63_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a7993357_Struct>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1abcd0272_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1abbc9336_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79bb6d2_Trait>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1abbcabb7_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79bdddd_Enum>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1abbcd36d_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79c05e8_TypeEnum>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et);
inline jule::Bool _1a683d203_checkImportAllSelections(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _64041_imp);
inline jule::Bool _1a683d544_checkImportSelections(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _65442_imp);
inline jule::Bool _1a683d885_isUseAliasDuplication(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _66338_imp);
inline jule::Bool _1a683dbc6_checkImport(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _67932_imp);
inline void _1a683ddc4_checkImports(_1a6837818_Sema* _self_);
inline void _1a683e0c2_implFileImpls(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a683e2c0_implImpls(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a683e4bd_checkEnums(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a683e6bb_checkFileInherits(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a683e8b9_checkInherits(jule::Ptr<_1a6837818_Sema> _self_);
inline _1a7a947aa_typeChecker _1a683ed70_typeChecker(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _76832_l, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _76847_generics, jule::Ptr<_1a7a937ba_referencer> _7697_referencer);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a68403d1_buildTypeWithRefers(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _79541_t, jule::Trait _79564_l, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _7967_generics, jule::Ptr<_1a7a937ba_referencer> _79635_referencer);
inline jule::Bool _1a6840942_checkTypeWithRefers(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a89abe_TypeSymbol>* _80241_t, jule::Trait _80261_l, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _8037_generics, jule::Ptr<_1a7a937ba_referencer> _80335_referencer);
inline jule::Ptr<_1a68063ec_constraintChecker> _1a6840bc8_constraintChecker(jule::Ptr<_1a6837818_Sema> _self_);
inline jule::Bool _1a68410c4_checkType(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a89abe_TypeSymbol>* _81731_t, jule::Trait _81751_l);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a684157a_buildTypeWithGenerics(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _82343_t, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _8247_generics, jule::Ptr<_1a79ae4d8_ReferenceStack> _82435_refers);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a6841c0c_selectType(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _84132_t);
inline jule::Ptr<_1a7a5322a_Eval> _1a68421b3_evalpd(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _85327_l, jule::Ptr<_1a7a828ec_TypeKind> _85342_p, jule::Ptr<_1a685a682_Var> _85360_owner);
inline jule::Ptr<_1a7a5322a_Eval> _1a68425ae_evalp(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _86826_l, jule::Ptr<_1a7a828ec_TypeKind> _86841_p);
inline jule::Ptr<_1a7a5322a_Eval> _1a6842900_eval(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _87325_l);
inline jule::Bool _1a6842e61_checkAssignType(jule::Ptr<_1a6837818_Sema> _self_, jule::Bool _87732_destIsRef, jule::Ptr<_1a7a828ec_TypeKind>* _87754_dest, jule::Ptr<_1a7a51503_Data>* _8788_d, jule::Ptr<_1a795c013_Token> _87822_errorToken);
inline jule::Bool _1a6843417__checkTypeCompatibility(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _91945_dest, jule::Ptr<_1a7a828ec_TypeKind>* _91967_src, jule::Ptr<_1a795c013_Token> _9207_errorToken);
inline jule::Bool _1a68438bd_checkTypeCompatibility(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _93744_dest, jule::Ptr<_1a7a828ec_TypeKind>* _9388_src, jule::Ptr<_1a795c013_Token>* _93829_errorToken);
inline void _1a6843cdb_pushCompatiblityError(_1a6837818_Sema* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _94642_dest, jule::Ptr<_1a7a51503_Data>* _94664_src, jule::Ptr<_1a795c013_Token>* _9478_errorToken);
inline jule::Bool _1a6844292_checkTypeCompatibility1(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _96445_dest, jule::Ptr<_1a7a51503_Data>* _96467_src, jule::Ptr<_1a795c013_Token>* _9658_errorToken);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a6844748_buildNonGenericTypeKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _97945_ast, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _9808_generics, jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>* _98044_ignored);
inline jule::Bool _1a6844b44_buildFnNonGenericTypeKinds(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _99148_f, jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>* _99164_ignored);
inline jule::Ptr<_1a79ab309_FnIns> _1a6844e85_getTraitCheckFnKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _101341_f);
inline jule::Bool _1a684543b_checkConstraintsFn(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _103640_f, jule::Ptr<_1a795c013_Token>* _103656_et, jule::Ptr<_1a79ab309_FnIns> _103672_exist);
inline jule::Bool _1a68458e2_checkConstraintsStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _105044_s, jule::Ptr<_1a795c013_Token>* _105064_et, jule::Ptr<_1a79960d5_StructIns> _105080_exist);
inline jule::Bool _1a6845cdd_fnEnvironment(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _106735_f, jule::Fn<jule::Bool,jule::Ptr<_1a6837818_Sema>*,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>*> _106746_algo);
inline void _1a6846096_checkFnParamKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79aa281_ParamIns>* _109438_p);
inline jule::Bool _1a68463d7_reloadFnInsTypes(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns> _110137_f);
inline jule::Bool _1a684688d_checkRefValidityForInitExpr(jule::Ptr<_1a6837818_Sema> _self_, jule::Bool _113744_leftMut, jule::Ptr<_1a7a51503_Data>* _113764_d, jule::Ptr<_1a795c013_Token>* _113779_errorToken);
inline jule::Bool _1a6846bce_isMutRiskyStruct(_1a6837818_Sema* _self_, jule::Ptr<_1a79960d5_StructIns>* _115429_s);
inline jule::Bool _1a68472ea_checkValidityForInitExpr(jule::Ptr<_1a6837818_Sema> _self_, jule::Bool _118141_leftMut, jule::Bool _118156_leftRef, jule::Ptr<_1a7a828ec_TypeKind>* _11824_leftKind, jule::Ptr<_1a7a51503_Data>* _118230_d, jule::Ptr<_1a795c013_Token>* _118245_errorToken);
inline jule::Bool _1a68476e6_checkTypeAliasDeclKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _120944_ta, jule::Trait _120964_l);
inline void _1a6847a59_checkTypeAliasDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _123240_ta, jule::Trait _123260_l);
inline void _1a6847d12_checkTypeAliasDeclDup(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _124043_ta);
inline jule::Bool _1a6848098_checkTypeAliasDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1abde27e6_checkEnumItemsDup(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _126436_items);
inline void _1abdeeb00_checkEnumItemsDup(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> _126436_items);
inline void _1a6848609_checkEnumItemsStr(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bdddd_Enum>* _128439_e);
inline void _1abdc3266_checkEnumItemInt(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a5322a_Eval>* _131043_eval, jule::Ptr<_1a79bdddd_Enum>* _131061_e, jule::Ptr<_1a7a8a4c6_Prim>* _131072_prim, jule::Ptr<_1a79bd371_EnumItem>* _131090_item, jule::U64* _1310112_n);
inline void _1abdd32dc_checkEnumItemInt(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a5322a_Eval>* _131043_eval, jule::Ptr<_1a79bdddd_Enum>* _131061_e, jule::Ptr<_1a7a8a4c6_Prim>* _131072_prim, jule::Ptr<_1a79bd371_EnumItem>* _131090_item, jule::I64* _1310112_n);
inline void _1abdbe3d8_checkEnumItemsInt1(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a8a4c6_Prim>* _134541_prim, jule::Ptr<_1a79bdddd_Enum>* _134559_e);
inline void _1abdce9e2_checkEnumItemsInt1(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a8a4c6_Prim>* _134541_prim, jule::Ptr<_1a79bdddd_Enum>* _134559_e);
inline void _1a68492a8_checkEnumItemsInt(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bdddd_Enum>* _138039_e);
inline void _1a6849561_checkEnumDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bdddd_Enum>* _139035_e);
inline void _1a6849819_checkTypeEnumDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79c05e8_TypeEnum>* _143139_e);
inline jule::Bool _1a6849aa0_checkEnumDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline jule::Bool _1a6849d36_checkTypeEnumDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline jule::Bool _1a684a177_checkDeclGenerics(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _149434_generics);
inline jule::Bool _1a684a4b8_checkFnDeclParamsDup(_1a6837818_Sema* _self_, jule::Ptr<_1a79a8328_Fn>* _152137_f);
inline jule::Bool _1a684a809_checkFnDeclResultDup(_1a6837818_Sema* _self_, jule::Ptr<_1a79a8328_Fn>* _155837_f);
inline jule::Bool _1a684ab4a_checkFnVariadicParam(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _160342_f);
inline void _1a684ae03_checkFnDeclPrototype(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _161642_f);
inline jule::Bool _1a684b3a9_catchTraitInheritCycle(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait> _163839_t1, jule::Ptr<_1a79bb6d2_Trait> _163855_t2, _200880c8a_StrBuilder* _163872_message);
inline jule::Bool _1a684b6ea__checkTraitDeclInherits(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _165745_t);
inline void _1a684b9a3_checkTraitDeclInherits(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _169844_t);
inline void _1a684bc5b_checkTraitDeclMethod(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _172342_f);
inline void _1a684c014_checkTraitDeclMethods(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _173743_t);
inline void _1a684c2bc_checkTraitDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _177336_t);
inline jule::Bool _1a684c553_checkTraitDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline jule::Bool _1a684c94e_checkTraitImplMethods(_1a6837818_Sema* _self_, jule::Ptr<_1a79bb6d2_Trait>* _179742_base, jule::Ptr<_1a6808751_Impl>* _179757_ipl);
inline jule::Bool _1a684cd4a_implToStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _180834_dest, jule::Ptr<_1a6808751_Impl>* _180854_ipl);
inline void _1a684d103_implTrait(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a6808751_Impl>* _185031_decl);
inline void _1a684d3ab_implStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a6808751_Impl>* _189332_decl);
inline void _1a684d664_implImpl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a6808751_Impl>* _191730_decl);
inline void _1a684d9c7_checkVarDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _192834_decl, jule::Trait _192850_l);
inline void _1a684dc80_checkGlobalVarDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _196540_decl);
inline jule::Bool _1a684e016_checkGlobalDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline jule::Bool _1a684e412_checkStructTraitImpl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _199342_strct, jule::Ptr<_1a79bb6d2_Trait>* _199363_trt);
inline jule::Bool _1a684e753_checkStructImpls(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _201738_s);
inline jule::Bool _1a684ea94_checkStructFields(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _202539_st);
inline void _1a684ed4c_checkStructDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _204237_s);
inline jule::Bool _1a68500d3_checkStructDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a685038b_checkAnonFuncDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _207239_f);
inline void _1a6850644_checkFuncDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _207735_f);
inline jule::Bool _1a6850985_checkFuncDeclsBy(jule::Ptr<_1a6837818_Sema> _self_, jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _209938_funcs);
inline jule::Bool _1a6850c1b_checkFuncDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6851139_pushCycleError(_1a6837818_Sema* _self_, jule::Str* _211527_st1, jule::Str* _211538_st2, _200880c8a_StrBuilder* _211553_message);
inline void _1a68517dd_checkPackageDecls(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6851b51_checkDataForTypeInference(_1a6837818_Sema* _self_, jule::Ptr<_1a7a51503_Data>* _217542_d, jule::Ptr<_1a795c013_Token>* _217553_err_token);
inline void _1a6851e09_checkVarValue(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _218735_v);
inline void _1a685226c_evalVarValue(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _224034_decl, jule::Trait _224050_l);
inline void _1a68525d0_checkVar(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _225730_decl, jule::Trait _225746_l);
inline void _1a68527cd_checkGlobals(jule::Ptr<_1a6837818_Sema> _self_);
inline jule::Ptr<_1a79ab309_FnIns> _1a6852bc9_readyToCheckFn(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _228136_s, jule::Ptr<_1a79a8328_Fn>* _228156_f);
inline void _1a685303c_checkTypeMethod(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _229537_s, jule::Ptr<_1a79a8328_Fn>* _229557_f);
inline jule::Ptr<_1a79ab309_FnIns> _1a68534e3_checkStructInsOp(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _230838_s, jule::Ptr<_1a79a8328_Fn>* _230858_f, jule::Fn<jule::Bool,jule::Ptr<_1a79a8328_Fn>> _230866_p);
inline jule::Bool _1a68538de_checkStructEnv(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _231836_s, jule::Ptr<_1a795c013_Token> _231855_errorToken);
inline jule::Bool _1a6853cda_precheckStructIns(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _241539_s, jule::Ptr<_1a795c013_Token> _241558_errorToken);
inline void _1a6854093_checkStructIns(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _243036_s);
inline void _1a685434b_checkTypeStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _243637_s);
inline void _1a6854549_checkStructTypes(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6854802_checkStructInsOperators(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns> _246044_s);
inline void _1a6854aaa_precheckStructType(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _252440_s);
inline void _1a6854ca8_precheckStructTypes(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6855061_checkRets(_1a6837818_Sema* _self_, jule::Ptr<_1a79ab309_FnIns>* _255030_f);
inline void _1a68553c4_checkFnInsSc(_1a6837818_Sema* _self_, jule::Ptr<_1a79ab309_FnIns>* _256133_f, jule::Ptr<_1a79de45d_scopeChecker>* _256149_sc);
inline void _1a6855737_checkFnInsCaller(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _257438_f, jule::Ptr<_1a795c013_Token> _257453_caller);
inline void _1a68559e0_checkFnIns(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _259632_f);
inline void _1a6855c98_checkFunc(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _260031_f);
inline void _1a6856051_checkTestFn(_1a6837818_Sema* _self_, jule::Ptr<_1a79ab309_FnIns>* _261532_f);
inline void _1a6856309_precheckFunc(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _264834_f);
inline void _1a6856507_precheckFuncs(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6856705_checkFuncs(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6856903_checkPackageTypes(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6856b01_setFileSemaFields(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a6856cee_setSemaFields(jule::Ptr<_1a6837818_Sema> _self_);
inline void _1a68570a7_check(jule::Ptr<_1a6837818_Sema> _self_, jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _272627_files);
inline _1a68574d6_missingRetChecker static__1a685789e_new(void);
inline jule::Bool _1a6857bac_checkConditional(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680e7e0_Conditional> _277432_c);
inline jule::Bool _1a6857eed_checkMatch(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a79db04d_Match> _278626_m);
inline jule::Bool _1a685833e_checkInfIter(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680eadc_InfIter> _281228_it);
inline jule::Bool _1a6858680_checkScope(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680dba7_Scope> _283126_s);
inline jule::Bool _1a68589c1_check(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680dba7_Scope> _287721_s);
inline jule::Bool _1a685aa5b_IsInitialized(_1a685a682_Var* _self_);
inline jule::Bool _1a685ace2_IsTypeInferred(_1a685a682_Var* _self_);
inline jule::Bool _1a685b078_untypedConstant(_1a685a682_Var* _self_);
inline jule::Bool static__1a685bb28_Dispose(jule::Ptr<_1a79a8328_Fn> _1020_f);
inline jule::Bool static__1a685bde2_Str(jule::Ptr<_1a79a8328_Fn> _2416_f);
inline jule::Bool static__1a685c266_logical(jule::Ptr<_1a79a8328_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1a685c530_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _7215_f);
inline jule::Bool static__1a685c7e9_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _7715_f);
inline jule::Bool static__1a685cab3_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _8217_f);
inline jule::Bool static__1a685cd7c_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _8715_f);
inline jule::Bool static__1a685d146_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _9217_f);
inline jule::Bool static__1a685d4ba_result(jule::Ptr<_1a79a8328_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1a685d784_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _11816_f);
inline jule::Bool static__1a685da4d_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _12316_f);
inline jule::Bool static__1a685dd17_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _12816_f);
inline jule::Bool static__1a685e0d1_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _13316_f);
inline jule::Bool static__1a685e39a_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _13816_f);
inline jule::Bool static__1a685e664_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _14316_f);
inline jule::Bool static__1a685e92d_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _14816_f);
inline jule::Bool static__1a685ebe7_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _15319_f);
inline jule::Bool static__1a685eeb1_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _15818_f);
inline jule::Bool static__1a686027a_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _16319_f);
inline jule::Bool static__1a68605ee_unary(jule::Ptr<_1a79a8328_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1a68608b8_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _18716_f);
inline jule::Bool static__1a6860b82_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _19216_f);
inline jule::Bool static__1a6860e4b_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _19719_f);
inline jule::Bool static__1a68612c0_assign(jule::Ptr<_1a79a8328_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1a6861589_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _22122_f);
inline jule::Bool static__1a6861853_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _22622_f);
inline jule::Bool static__1a6861b1c_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _23122_f);
inline jule::Bool static__1a6861dd6_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _23622_f);
inline jule::Bool static__1a68621a0_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _24122_f);
inline jule::Bool static__1a6862469_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _24622_f);
inline jule::Bool static__1a6862733_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _25122_f);
inline jule::Bool static__1a68629ec_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _25624_f);
inline jule::Bool static__1a6862cb6_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _26125_f);
inline jule::Bool static__1a6863080_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _26625_f);
inline void _1a7a386b6_pushErr(_1a7a381bb_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1a7a3894c_checkTrait(_1a7a381bb_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7a38bd3_checkPtr(_1a7a381bb_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7a38e69_checkPrim(_1a7a381bb_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7a39365_typeEnum(_1a7a381bb_typeCompatibilityChecker* _self_, jule::Ptr<_1a79c05e8_TypeEnum>* _19925_e, jule::Ptr<_1a7a828ec_TypeKind>* _19944_t2);
inline jule::Bool _1a7a395eb_checkTypeEnum(_1a7a381bb_typeCompatibilityChecker* _self_);
inline jule::Bool _1a7a39882_check(_1a7a381bb_typeCompatibilityChecker* _self_);
inline void _1a7a3a3ee_pushErr(_1a7a39e6a_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args);
inline jule::Bool _1a7a3a685_checkValidity(_1a7a39e6a_assignTypeChecker* _self_);
inline jule::Bool _1a7a3a91b_checkConst(_1a7a39e6a_assignTypeChecker* _self_);
inline jule::Bool _1a7a3aba2_checkCompatibility(_1a7a39e6a_assignTypeChecker* _self_);
inline jule::Bool _1a7a3ae38_check(_1a7a39e6a_assignTypeChecker* _self_);
inline jule::Bool _1ac045cac_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k);
inline jule::Bool _1ac0478a2_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k);
inline jule::Bool _1ac04697d_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k);
inline jule::Bool _1ac04ee3c_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k);
inline jule::Bool _1a7a3c236_annotateConstraintMap(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _37742_k);
inline jule::Bool _1a7a3c577_annotateConstraintTup(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _39242_k);
inline jule::Bool _1a7a3c8b8_annotateConstraintFn(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _40941_k);
inline jule::Bool _1a7a3cc09_annotateConstraintIdent(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _43044_k);
inline jule::Bool _1a7a3d04a_annotateConstraint(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _45939_k);
inline void _1a7a3d3ad_pushGeneric(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _48432_k, jule::I64 _48446_i);
inline jule::Bool _1a7a3d6ee_annotatePrim(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _49940_k);
inline jule::Bool _1a7a3da40_annotateArr(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _50339_k);
inline jule::Bool _1a7a3dd81_annotateSlc(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _51339_k);
inline jule::Bool _1a7a3e27c_checkMapKey(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _52338_k, jule::Ptr<_1a7a828ec_TypeKind>* _52358_ck);
inline jule::Bool _1a7a3e5bd_annotateMap(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _53139_k);
inline jule::Bool _1a7a3e90e_annotateFn(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _54138_k);
inline jule::Bool _1a7a3ec50_annotatePtr(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _57039_k);
inline jule::Bool _1a7a40091_annotateSptr(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _58040_k);
inline jule::Bool _1a7a403d2_annotateStruct(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _59042_k);
inline jule::Bool _1a7a40723_annotateAny(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _61239_k);
inline jule::Bool _1a7a40a64_annotateKind(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _63340_k);
inline jule::Bool _1a7a40cea_annotate(_1a7a3b840_dynamicTypeAnnotation* _self_);
inline void _1a7a41c0d_pushErrToken(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a795c013_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args);
inline void _1a7a42071_pushErr(_1a7a4169c_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args);
inline jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _1a7a42307_getParams(_1a7a4169c_fnCallArgChecker* _self_);
inline jule::Bool _1a7a42648_checkCounts(_1a7a4169c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a79aa281_ParamIns>>* _69528_params);
inline jule::Bool _1a7a42aee_checkArg(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a79aa281_ParamIns>* _72729_p, jule::Ptr<_1a7a51503_Data>* _72748_arg, jule::Ptr<_1a795c013_Token>* _72765_errorToken);
inline jule::Bool _1a7a42eea_push(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a79aa281_ParamIns>* _75625_p, jule::Ptr<_1a7976802_Expr> _75643_arg);
inline jule::Bool _1a7a433e6_pushVariadic(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a79aa281_ParamIns>* _78033_p, jule::I64 _78051_i);
inline jule::Bool _1a7a43737_checkArgs(_1a7a4169c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a79aa281_ParamIns>>* _86130_params);
inline jule::Bool _1a7a439bd_checkDynamicTypeAnnotation(_1a7a4169c_fnCallArgChecker* _self_);
inline jule::Bool _1a7a43c54_check(_1a7a4169c_fnCallArgChecker* _self_);
inline void _1a7a44b34_pushErr(_1a7a445d4_structLitChecker* _self_, jule::Ptr<_1a795c013_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args);
inline void _1a7a44e97_pushSuggestion(_1a7a445d4_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args);
inline void _1a7a453b5_pushMatch(_1a7a445d4_structLitChecker* _self_, jule::Ptr<_1a7995535_FieldIns>* _95030_f, jule::Ptr<_1a7a51503_Data>* _95049_d, jule::Ptr<_1a795c013_Token>* _95064_errorToken);
inline void _1a7a45728_checkPair(_1a7a445d4_structLitChecker* _self_, jule::Ptr<_1a797b021_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _96957_exprs);
inline jule::Bool _1a7a45a69_readyExprs(_1a7a445d4_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _100831_exprs);
inline void _1a7a45d22_check(_1a7a445d4_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _103226_exprs);
inline jule::Ptr<_1a685a682_Var> _1a7a468a0_buildVar(_1a7a463b6_rangeChecker* _self_, jule::Ptr<_1a7985338_VarDecl>* _110825_decl);
inline void _1a7a46a9d_setSizeKey(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a46ebb_checkRangeExprValidity(_1a7a463b6_rangeChecker* _self_, jule::Ptr<_1a7a51503_Data>* _112743_d, jule::Ptr<_1a685a682_Var>* _112754_key, jule::Ptr<_1a7a828ec_TypeKind>* _112770_k);
inline void _1a7a471b9_checkSlice(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a473b7_checkArray(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a475b5_checkMapKeyA(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a477b3_checkMapKeyB(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a479b1_checkMap(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a47bae_checkStr(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a47dac_checkComptime(_1a7a463b6_rangeChecker* _self_);
inline jule::Bool _1a7a48143_checkComptimeRange(_1a7a463b6_rangeChecker* _self_);
inline jule::Bool _1a7a483c9_check(_1a7a463b6_rangeChecker* _self_);
inline void _1a7a49056_prepareTypes(_1a7a48b27_retTypeChecker* _self_);
inline void _1a7a4930e_prepareExprs(_1a7a48b27_retTypeChecker* _self_, jule::Ptr<_1a7976802_Expr>* _128533_e);
inline void _1a7a4950c_checkExprs(_1a7a48b27_retTypeChecker* _self_);
inline jule::Bool _1a7a49793_tryFuncMultiRetForward(_1a7a48b27_retTypeChecker* _self_);
inline jule::Bool _1a7a49ad4_check(_1a7a48b27_retTypeChecker* _self_, jule::Ptr<_1a7976802_Expr>* _138426_e);
inline jule::Ptr<_1a6817474_ImportInfo> _1a7a4b674_SelectPackage(_1a7a4b18a_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a685a682_Var> _1a7a4ba70_FindVar(_1a7a4b18a_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7a4be6b_FindTypeAlias(_1a7a4b18a_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a7993357_Struct> _1a7a4c367_FindStruct(_1a7a4b18a_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a79a8328_Fn> _1a7a4c763_FindFn(_1a7a4b18a_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a79bb6d2_Trait> _1a7a4caa4_FindTrait(_1a7a4b18a_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a79bdddd_Enum> _1a7a4cde5_FindEnum(_1a7a4b18a_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a7a4d236_FindTypeEnum(_1a7a4b18a_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::Ptr<_1a685a682_Var> _1a7a4d852_findVar(_1a7a4b18a_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7a4dd08_findTypeAlias(_1a7a4b18a_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse);
inline jule::Any _1a7a4e204_defByIdent(_1a7a4b18a_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded);
inline jule::Bool _1a7a4e6aa_isDuplicatedIdent(_1a7a4b18a_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded);
inline jule::Bool _1a7a518dd_IsNil(_1a7a51503_Data* _self_);
inline jule::Bool _1a7a51b74_IsVoid(_1a7a51503_Data* _self_);
inline jule::Bool _1a7a51e0a_IsConst(_1a7a51503_Data* _self_);
inline jule::Bool _1a7a5224b_GoodOperand(_1a7a51503_Data* _self_, jule::Ptr<_1a7a51503_Data>* _10528_other);
inline void _1a7a5377a_pushErr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args);
inline void _1a7a53add_pushSuggestion(_1a7a5322a_Eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args);
inline void _1a7a53cdb_allowBuiltin(_1a7a5322a_Eval* _self_);
inline void _1a7a53ed9_disallowBuiltin(_1a7a5322a_Eval* _self_);
inline jule::Bool _1a7a54270_isUnsafe(_1a7a5322a_Eval* _self_);
inline jule::Bool _1a7a54506_isGlobal(_1a7a5322a_Eval* _self_);
inline jule::Bool _1a7a54814_applyNumericPrefix(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _16839_d);
inline jule::Ptr<_1a7a51503_Data> _1a7a54b55_litStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _20319_l);
inline jule::Ptr<_1a7a51503_Data> _1a7a54e96_litRune(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _22020_l);
inline jule::Ptr<_1a7a51503_Data> _1a7a552d7_litFloat(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _23921_l);
inline jule::Ptr<_1a7a51503_Data> _1a7a55628_litInt(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _25123_l);
inline jule::Ptr<_1a7a51503_Data> _1a7a55969_litNum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _30623_l);
inline jule::Ptr<_1a7a51503_Data> _1a7a55caa_evalLit(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr> _31523_lit);
inline jule::Any _1a7a560eb_findBuiltins(_1a7a5322a_Eval* _self_, jule::Str* _32829_ident);
inline jule::Any _1a7a564e7_getDef(_1a7a5322a_Eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded);
inline jule::Ptr<_1a79ae4d8_ReferenceStack> _1a7a5677d_getOwnerRefers(_1a7a5322a_Eval* _self_);
inline void _1ac1c6239_pushReference(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns>* _41037_ref);
inline void _1ac1dc195_pushReference(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _41037_ref);
inline void _1ac32187e_pushReference(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns>* _41037_ref);
inline jule::Ptr<_1a7a51503_Data> _1a7a56d77__evalEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79bdddd_Enum> _41725_enm);
inline jule::Ptr<_1a7a51503_Data> _1a7a57273_evalEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79bdddd_Enum> _42628_enm, jule::Ptr<_1a795c013_Token> _42640_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a575b4__evalTypeEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c05e8_TypeEnum> _43529_enm);
inline jule::Ptr<_1a7a51503_Data> _1a7a579b0_evalTypeEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c05e8_TypeEnum> _44432_enm, jule::Ptr<_1a795c013_Token> _44448_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a57d01__evalStruct(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns> _45327_s);
inline jule::Ptr<_1a7a51503_Data> _1a7a581ec_evalStruct(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns> _46730_s, jule::Ptr<_1a795c013_Token> _46745_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a5853d_evalFnIns(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns> _47725_f);
inline void _1a7a588a1_checkDeprecated(_1a7a5322a_Eval* _self_, jule::Slice<jule::Ptr<_1a79718da_Directive>>* _48636_directives, jule::Ptr<_1a795c013_Token> _48667_tok);
inline jule::Ptr<_1a7a51503_Data> _1a7a58c9c_evalFn(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79a8328_Fn> _50226_f, jule::Ptr<_1a795c013_Token> _50234_errorToken);
inline void _1a7a591ba_pushIllegalCycleError(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _51638_v1, jule::Ptr<_1a685a682_Var>* _51649_v2, _200880c8a_StrBuilder* _51664_message);
inline jule::Bool _1a7a595b6_checkCrossCycle(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _52632_v, _200880c8a_StrBuilder* _52646_message);
inline jule::Bool _1a7a599b2_checkIllegalCycles(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _54339_v, jule::Ptr<_1a795c013_Token> _54348_declToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a59dad_evalVar(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var> _57127_v, jule::Ptr<_1a795c013_Token> _57136_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a5a2a9_evalTypeAlias(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a81b0a_TypeAlias> _67033_ta, jule::Ptr<_1a795c013_Token> _67049_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a5a6a5_evalDef(_1a7a5322a_Eval* _self_, jule::Any* _70628_def, jule::Ptr<_1a795c013_Token> _70638_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a5a9e6_evalIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797811c_IdentExpr> _73025_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a5ad37_evalUnary(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79788ae_UnaryExpr> _73530_u);
inline jule::Ptr<_1a7a51503_Data> _1a7a5b178_evalVariadic(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7978c88_VariadicExpr> _74033_v);
inline jule::Ptr<_1a7a51503_Data> _1a7a5b4b9_evalUnsafe(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7977b66_UnsafeExpr> _76231_u);
inline jule::Ptr<_1a7a51503_Data> _1a7a5b80a_evalArr(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797cd58_SliceExpr> _77028_s);
inline jule::Ptr<_1a7a51503_Data> _1a7a5bcb1_evalExpSlc(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797cd58_SliceExpr> _84731_s, jule::Ptr<_1a7a828ec_TypeKind> _84750_t, jule::Any _84768_first);
inline jule::Ptr<_1a7a51503_Data> _1a7a5c102_evalSliceExpr(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797cd58_SliceExpr> _88534_s);
inline void _1a7a5c465_checkIntegerIndexingByData(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _92047_d, jule::Ptr<_1a795c013_Token> _92061_token);
inline void _1a7a5c883_indexingPtr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _93232_d, jule::Ptr<_1a7a51503_Data>* _93247_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _93266_i);
inline void _1a7a5cca1_indexingArr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _94832_d, jule::Ptr<_1a7a51503_Data>* _94847_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _94866_i);
inline void _1a7a5d1be_indexingSlc(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _95832_d, jule::Ptr<_1a7a51503_Data>* _95847_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _95866_i);
inline void _1a7a5d5dc_indexingMap(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _98132_d, jule::Ptr<_1a7a51503_Data>* _98147_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _98166_i);
inline void _1a7a5da0a_indexingStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _99732_d, jule::Ptr<_1a7a51503_Data>* _99747_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _99766_i);
inline void _1a7a5de28_toIndexing(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _102631_d, jule::Ptr<_1a7a51503_Data>* _102646_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _102665_i);
inline jule::Bool _1a7a5e3ce_pushGenericsFromExprSubIdent(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979915_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>* _10528_generics, jule::Ptr<_1a7976802_Expr>* _105236_expr);
inline jule::Bool _1a7a5e7ca_pushGenericsFromData(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>* _106242_generics, jule::Ptr<_1a7976802_Expr>* _106270_expr);
inline void _1a7a5eb3d_evalIdentDeclFromIndexing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a51503_Data>* _113247_d, jule::Ptr<_1a797d7b5_IndexingExpr>* _113262_i);
inline jule::Bool _1a7a600e4_checkGenericFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79ab309_FnIns>* _117536_f, jule::Ptr<_1a795c013_Token>* _117552_et, jule::Any* _117569_model);
inline void _1a7a60457_evalFnGenericFromIndexing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a51503_Data>* _120447_d, jule::Ptr<_1a797d7b5_IndexingExpr>* _120462_i);
inline jule::Ptr<_1a7a51503_Data> _1a7a60798_evalIndexing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797d7b5_IndexingExpr> _124333_i);
inline __jule_tuple_x_1a7a51503_Data__jule_tuple_x_1a7a51503_Data _1a7a60ad9_evalSlicingExprs(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797de25_SlicingExpr>* _129738_s);
inline void _1a7a60d92_slicingArr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _133327_d);
inline void _1a7a612b0_slicingStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _134827_d, jule::Ptr<_1a7a51503_Data>* _134838_l, jule::Ptr<_1a7a51503_Data>* _134849_r);
inline void _1a7a61788_checkSlicing(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _138633_d, jule::Ptr<_1a7a51503_Data>* _138644_l, jule::Ptr<_1a7a51503_Data>* _138655_r, jule::Ptr<_1a797de25_SlicingExpr>* _138666_s);
inline jule::Ptr<_1a7a51503_Data> _1a7a61ac9_evalSlicing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797de25_SlicingExpr> _140532_s);
inline void _1a7a61ee7_castPtr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _144227_t, jule::Ptr<_1a7a51503_Data> _144245_d, jule::Ptr<_1a795c013_Token> _144255_errorToken);
inline void _1a7a62415_castStruct(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _146430_t, jule::Ptr<_1a7a51503_Data> _146448_d, jule::Ptr<_1a795c013_Token> _146458_errorToken);
inline void _1a7a62833_castRef(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _148127_t, jule::Ptr<_1a7a51503_Data> _148145_d, jule::Ptr<_1a795c013_Token> _148155_errorToken);
inline void _1a7a62c51_castSlc(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _150427_t, jule::Ptr<_1a7a51503_Data> _150445_d, jule::Ptr<_1a795c013_Token> _150455_errorToken);
inline void _1a7a630b4_castStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _155927_d, jule::Ptr<_1a795c013_Token> _155937_errorToken);
inline void _1a7a634d2_castInt(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _160627_t, jule::Ptr<_1a7a51503_Data> _160645_d, jule::Ptr<_1a795c013_Token> _160655_errorToken);
inline void _1a7a63900_castNum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _165227_t, jule::Ptr<_1a7a51503_Data> _165245_d, jule::Ptr<_1a795c013_Token> _165255_errorToken);
inline void _1a7a63d1d_castPrim(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _168328_t, jule::Ptr<_1a7a51503_Data> _168346_d, jule::Ptr<_1a795c013_Token> _168356_errorToken);
inline void _1a7a64181_castConstant(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _170133_t, jule::Ptr<_1a7a51503_Data>* _170152_d);
inline void _1a7a6459e_castTypeEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _171033_t, jule::Ptr<_1a7a51503_Data>* _171052_d, jule::Ptr<_1a795c013_Token>* _171067_errorToken);
inline void _1a7a649bc_castTypeEnumT(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _172034_t, jule::Ptr<_1a7a51503_Data>* _172053_d, jule::Ptr<_1a795c013_Token>* _172068_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a64e73_evalCastByTypeNData(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _173039_t, jule::Ptr<_1a7a51503_Data> _173057_d, jule::Ptr<_1a795c013_Token> _173071_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a65429_evalCastT(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _180331_t, jule::Ptr<_1a7976802_Expr>* _180350_e, jule::Ptr<_1a795c013_Token>* _180365_et);
inline jule::Ptr<_1a7a51503_Data> _1a7a6576a_evalCast(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979162_CastExpr> _182029_c);
inline jule::Ptr<_1a7a51503_Data> _1a7a65aab_evalNsSelection(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797953b_NsSelectionExpr> _182931_s);
inline jule::Ptr<_1a7a51503_Data> _1a7a66062_evalStructLitExplicit(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79960d5_StructIns> _185542_s, jule::Slice<jule::Ptr<_1a7976802_Expr>> _18567_exprs, jule::Ptr<_1a795c013_Token> _185627_errorToken);
inline jule::Ptr<_1a7a51503_Data> _1a7a663a3_evalStructLit(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797b84b_StructLit> _189334_lit);
inline _1a7a947aa_typeChecker _1a7a66639_typeChecker(_1a7a5322a_Eval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a6697a_evalType(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79724bd_TypeDecl> _192528_t);
inline void _1a7a66cdd_callTypeFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr>* _193832_fc, jule::Ptr<_1a7a51503_Data>* _193854_d);
inline void _1a7a67151_callBuiltinFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr>* _196435_fc, jule::Ptr<_1a7a51503_Data>* _196457_d);
inline void _1a7a674b4_checkFnOfConcurrentCall(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns>* _197640_f, jule::Ptr<_1a795c013_Token> _197651_errorToken);
inline void _1a7a678d2_processExceptionalHandler(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns>* _199546_f, jule::Ptr<_1a797a52b_FnCallExpr>* _199562_fc, jule::Ptr<_1a7a51503_Data>* _199584_d);
inline void _1a7a67c45_callFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr>* _202228_fc, jule::Ptr<_1a7a51503_Data>* _202250_d);
inline jule::Ptr<_1a7a51503_Data> _1a7a68086_evalFnCall(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr> _217431_fc);
inline jule::Ptr<_1a7a51503_Data> _1a7a68482_evalEnumStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79bdddd_Enum> _220734_enm, jule::Ptr<_1a795c013_Token> _220750_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6887d_evalTypeEnumStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c05e8_TypeEnum> _221538_enm, jule::Ptr<_1a795c013_Token> _221554_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a68c79_evalStructStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns> _223836_s, jule::Ptr<_1a795c013_Token> _223851_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a69230_evalTraitSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _227337_d, jule::Ptr<_1a79bb6d2_Trait> _227351_trt, jule::Ptr<_1a795c013_Token> _227368_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a69791_evalStructSubIdentField(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _229344_d, jule::Ptr<_1a79960d5_StructIns>* _229359_s, jule::Ptr<_1a795c013_Token>* _229379_tok, jule::Ptr<_1a7995535_FieldIns>* _229397_f);
inline jule::Ptr<_1a7a51503_Data> _1a7a69d02_evalStructSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _231638_d, jule::Ptr<_1a79960d5_StructIns> _231652_s, jule::Ptr<_1a7979915_SubIdentExpr> _231671_si, jule::Bool _231690_ref);
inline jule::Ptr<_1a7a51503_Data> _1a7a6a143_evalIntTypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _235733_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6a484_evalUintTypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _238434_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6a7c5_evalI8TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _240232_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6ab16_evalI16TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _243133_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6ae57_evalI32TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _246033_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6b298_evalI64TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _248933_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6b5d9_evalU8TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _251832_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6b92a_evalU16TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _253733_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6bc6b_evalU32TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _255633_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6c0ac_evalU64TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _257533_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6c3ed_evalF32TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _259433_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6c73e_evalF64TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _263333_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6cb3a_evalPrimStatic(_1a7a5322a_Eval* _self_, jule::Str _267230_kind, jule::Ptr<_1a795c013_Token> _267241_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7a6d036_evalTypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _270434_d, jule::Ptr<_1a7979915_SubIdentExpr> _270448_si);
inline jule::Ptr<_1a7a51503_Data> _1ac44bd94_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79d3078_comptimeTypeInfo>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a7a51503_Data> _1ac4514e7_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c4223_comptimeStructField>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a7a51503_Data> _1ac455b06_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ca78a_comptimeEnumField>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a7a51503_Data> _1ac45a259_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79cd22c_comptimeParam>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a7a51503_Data> _1ac45e9ab_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c74ce_comptimeStatic>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a7a51503_Data> _1ac4640ba_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a67ecc40_comptimeValue>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a7a51503_Data> _1ac4686c9_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a6801b89_comptimeFile>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si);
inline __jule_tuple_x_1a7a51503_Data__jule_tuple_bool _1a7a6d8d8_tryComptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _272843_d, jule::Ptr<_1a7979915_SubIdentExpr> _272857_si);
inline jule::Ptr<_1a7a51503_Data> _1a7a6dcd4_evalObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _275635_d, jule::Ptr<_1a7979915_SubIdentExpr> _275649_si);
inline jule::Ptr<_1a7a51503_Data> _1a7a6e125_evalSubIdent(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979915_SubIdentExpr> _280033_si);
inline jule::Ptr<_1a7a51503_Data> _1a7a6e466_evalTuple(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79773e6_TupleExpr> _281430_tup);
inline jule::Ptr<_1a7a51503_Data> _1a7a6e862_evalMap(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a91169_Map> _284328_m, jule::Ptr<_1a797bd02_BraceLit> _284341_lit);
inline jule::Ptr<_1a7a51503_Data> _1a7a6eba3_evalBraceLit(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797bd02_BraceLit> _289233_lit);
inline jule::Ptr<_1a7a51503_Data> _1a7a6eee4_evalAnonFunc(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a798417d_FnDecl> _290733_decl);
inline jule::Ptr<_1a7a51503_Data> _1a7a70335_evalBinary(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979dbb_BinaryExpr> _294531_op);
inline jule::Ptr<_1a7a51503_Data> _1a7a70676_evalExprKind(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Any _296033_kind);
inline jule::Ptr<_1a7a51503_Data> _1a7a709b7_eval1(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _300826_expr);
inline jule::Ptr<_1a7a51503_Data> _1a7a70d08_eval(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _303625_expr);
inline jule::Ptr<_1a7a51503_Data> _1a7a71149_evalExpr1(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _305130_expr);
inline jule::Ptr<_1a7a51503_Data> _1a7a7148a_evalExpr(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _306729_expr);
inline _1a7a71952_unaryEval static__1a7a71d92_new(jule::Ptr<_1a7a5322a_Eval> _308820_e);
inline void _1a7a72090_minus(_1a7a71952_unaryEval* _self_);
inline void _1a7a7228d_plus(_1a7a71952_unaryEval* _self_);
inline void _1a7a7248b_caret(_1a7a71952_unaryEval* _self_);
inline void _1a7a72689_excl(_1a7a71952_unaryEval* _self_);
inline void _1a7a72887_star(_1a7a71952_unaryEval* _self_);
inline void _1a7a72a85_amper(_1a7a71952_unaryEval* _self_);
inline void _1a7a72c83_typeDecl(_1a7a71952_unaryEval* _self_);
inline void _1a7a72e81_evalData(_1a7a71952_unaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a732c2_eval(_1a7a71952_unaryEval* _self_, jule::Ptr<_1a79788ae_UnaryExpr> _334824_u);
inline _1a7a738dd_binaryEval static__1a7a73e93_newPlain(jule::Ptr<_1a7a5322a_Eval> _339625_e);
inline _1a7a738dd_binaryEval static__1a7a74317_new(jule::Ptr<_1a7a5322a_Eval> _340220_e, jule::Ptr<_1a795c013_Token> _340234_op);
inline jule::Bool _1a7a7459d_checkTypeCompatibility(_1a7a738dd_binaryEval* _self_);
inline jule::Bool _1a7a74834_checkStructCommonOperatorCompatibility(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a74aba_evalComptimeTypeInfo(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a74d51_evalNil(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a750d7_evalEnum(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a7536d_evalTypeEnum(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a75604_evalSptr(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a7588a_evalPtr(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a75b21_evalArr(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a75da7_evalSlc(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a7613d_evalStruct(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a763c4_evalTrait(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a7665a_evalAny(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a768e1_evalBool(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a76b77_evalStr(_1a7a738dd_binaryEval* _self_);
inline void _1a7a76d75_setTypeToGreater(_1a7a738dd_binaryEval* _self_);
inline void _1a7a7712d_checkModData(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _382333_d);
inline void _1a7a7732b_mod(_1a7a738dd_binaryEval* _self_);
inline jule::Bool _1a7a77727_numbersAreCompatibile(_1a7a738dd_binaryEval* _self_, jule::Str* _384534_lk, jule::Str* _384544_rk);
inline jule::Ptr<_1a7a51503_Data> _1a7a779ad_evalFloat(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a77c44_evalInt(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a77eca_evalPrim(_1a7a738dd_binaryEval* _self_);
inline void _1a7a781c8_checkSpecialCases(_1a7a738dd_binaryEval* _self_);
inline jule::Ptr<_1a7a51503_Data> _1a7a7845e_evalOp(_1a7a738dd_binaryEval* _self_);
inline void _1a7a78717_evalConst(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _408330_d);
inline void _1a7a789c0_checkData(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _416130_d);
inline void _1a7a78bbd_checkDatas(_1a7a738dd_binaryEval* _self_);
inline void _1a7a78e76_setModel(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _417329_d);
inline void _1a7a7922e_postEval(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _420029_d);
inline jule::Ptr<_1a7a51503_Data> _1a7a7962a_solveExplicit(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _420534_l, jule::Ptr<_1a7a51503_Data>* _420549_r);
inline jule::Ptr<_1a7a51503_Data> _1a7a7996b_eval(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7979dbb_BinaryExpr>* _422525_op);
inline jule::Str _1a7a82cb5_Str(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a83106_Equal(jule::Ptr<_1a7a828ec_TypeKind> _self_, jule::Ptr<_1a7a828ec_TypeKind> _9018_other);
inline jule::Bool _1a7a83744_Binded(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a839ca_IsNil(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a83c61_Void(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a83ee7_Comparable(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a8427d_Mutable(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a84514_Ordered(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a8479a_NilCompatible(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a84a31_PerformsRC(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a84cb7_Variadicable(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a8a4c6_Prim> _1a7a8504d_Prim(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a8e002_Sptr> _1a7a852d4_Sptr(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a927b9_Ptr> _1a7a8556a_Ptr(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79bdddd_Enum> _1a7a85801_Enum(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a7a85a87_TypeEnum(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a91ce6_Arr> _1a7a85d1d_Arr(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a8e9c5_Slc> _1a7a860a4_Slc(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79ab309_FnIns> _1a7a8633a_Fn(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79960d5_StructIns> _1a7a865c1_Struct(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79bb6d2_Trait> _1a7a86857_Trait(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a91169_Map> _1a7a86add_Map(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a7a905b9_Tuple> _1a7a86d74_Tup(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a8710a_comptime(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79c5dd4_comptimeStructFields> _1a7a87391_comptimeStructFields(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79c4223_comptimeStructField> _1a7a87627_comptimeStructField(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79cbb32_comptimeEnumFields> _1a7a878ad_comptimeEnumFields(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79ca78a_comptimeEnumField> _1a7a87b44_comptimeEnumField(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79d03b6_comptimeParams> _1a7a87dca_comptimeParams(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79cd22c_comptimeParam> _1a7a88161_comptimeParam(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79c3750_comptimeRange> _1a7a883e7_comptimeRange(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79d197d_comptimeTypeInfos> _1a7a8867d_comptimeTypeInfos(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79d3078_comptimeTypeInfo> _1a7a88914_comptimeTypeInfo(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79c9190_comptimeStatics> _1a7a88b9a_comptimeStatics(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a79c74ce_comptimeStatic> _1a7a88e31_comptimeStatic(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a67ecc40_comptimeValue> _1a7a891b7_comptimeValue(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a6801b89_comptimeFile> _1a7a8944d_comptimeFile(_1a7a828ec_TypeKind* _self_);
inline jule::Ptr<_1a680058e_comptimeFiles> _1a7a896d4_comptimeFiles(_1a7a828ec_TypeKind* _self_);
inline jule::Bool _1a7a89e43_checked(_1a7a89abe_TypeSymbol* _self_);
inline jule::Str _1a7a8a817_Str(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8ab58_Equal(jule::Ptr<_1a7a8a4c6_Prim> _self_, jule::Ptr<_1a7a828ec_TypeKind> _50818_other);
inline jule::Bool _1a7a8b0ed_IsConstraint(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8b384_IsI8(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8b61a_IsI16(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8b8a1_IsI32(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8bb37_IsI64(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8bdbd_IsU8(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8c154_IsU16(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8c3da_IsU32(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8c671_IsU64(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8c907_IsF32(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8cb8d_IsF64(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8ce24_IsInt(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8d1aa_IsUint(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8d441_IsUintptr(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8d6c7_IsBool(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8d95d_IsStr(_1a7a8a4c6_Prim* _self_);
inline jule::Bool _1a7a8dbe4_IsAny(_1a7a8a4c6_Prim* _self_);
inline jule::Str _1a7a8e376_Str(_1a7a8e002_Sptr* _self_);
inline jule::Bool _1a7a8e6b7_Equal(jule::Ptr<_1a7a8e002_Sptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _58518_other);
inline jule::Str _1a7a8ee59_Str(_1a7a8e9c5_Slc* _self_);
inline jule::Bool _1a7a9029a_Equal(jule::Ptr<_1a7a8e9c5_Slc> _self_, jule::Ptr<_1a7a828ec_TypeKind> _60418_other);
inline jule::Str _1a7a9093d_Str(_1a7a905b9_Tuple* _self_);
inline jule::Bool _1a7a90c7e_Equal(jule::Ptr<_1a7a905b9_Tuple> _self_, jule::Ptr<_1a7a828ec_TypeKind> _63318_other);
inline jule::Str _1a7a914dd_Str(_1a7a91169_Map* _self_);
inline jule::Bool _1a7a9182e_Equal(jule::Ptr<_1a7a91169_Map> _self_, jule::Ptr<_1a7a828ec_TypeKind> _67018_other);
inline jule::Str _1a7a9216a_Str(_1a7a91ce6_Arr* _self_);
inline jule::Bool _1a7a924ab_Equal(jule::Ptr<_1a7a91ce6_Arr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _69818_other);
inline jule::Str _1a7a92b3d_Str(_1a7a927b9_Ptr* _self_);
inline jule::Bool _1a7a92e7e_Equal(jule::Ptr<_1a7a927b9_Ptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _72218_other);
inline jule::Bool _1a7a93303_IsUnsafe(_1a7a927b9_Ptr* _self_);
inline void _1a7a94ee7_pushErr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a795c013_Token> _81223_token, jule::Str _81238_fmt, jule::Slice<jule::Any> _81251_args);
inline void _1a7a951e5_allowBuiltin(_1a7a947aa_typeChecker* _self_);
inline void _1a7a953e3_disallowBuiltin(_1a7a947aa_typeChecker* _self_);
inline void _1ac5e8ded_pushReference(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79960d5_StructIns>* _82437_t);
inline void _1ac5eb7e6_pushReference(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79bb6d2_Trait>* _82437_t);
inline void _1a7a95954_pushReferenceByKind(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _83440_k);
inline void _1a7a95d72_pushCycleError(_1a7a947aa_typeChecker* _self_, jule::Any _84526_def1, jule::Any _84537_def2, _200880c8a_StrBuilder* _84553_message);
inline jule::Bool _1a7a9626d_checkCrossCycle(_1a7a947aa_typeChecker* _self_, jule::Any _86727_decl, _200880c8a_StrBuilder* _86743_message);
inline jule::Bool _1a7a96669_checkIllegalCycles(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _90135_ident, jule::Any _90162_decl);
inline jule::Trait _1a7a96a65_fromTypeAlias(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _95130_decl, jule::Ptr<_1a7a81b0a_TypeAlias>* _95157_ta);
inline jule::Ptr<_1a79bdddd_Enum> _1a7a96e61_fromEnum(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _102525_decl, jule::Ptr<_1a79bdddd_Enum>* _102552_e);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a7a9735c_fromTypeEnum(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _103729_decl, jule::Ptr<_1a79c05e8_TypeEnum>* _103756_e);
inline jule::Ptr<_1a79bb6d2_Trait> _1a7a97758_fromTrait(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _104926_decl, jule::Ptr<_1a79bb6d2_Trait>* _104953_t);
inline jule::Bool _1a7a97b54_checkStructIns(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79960d5_StructIns>* _106235_ins, jule::Ptr<_1a795c013_Token>* _106257_errorToken);
inline void _1a7a97e0c_appendUsedStructReference(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7993357_Struct>* _108346_s);
inline jule::Ptr<_1a79960d5_StructIns> _1a7a98308_buildStructInstance(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _109640_decl, jule::Ptr<_1a7993357_Struct>* _109667_s);
inline jule::Ptr<_1a79960d5_StructIns> _1a7a98704_fromStruct(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _114431_decl, jule::Ptr<_1a7993357_Struct>* _114458_s);
inline jule::Trait _1a7a98a45_getDef(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _120227_decl);
inline jule::Trait _1a7a98d86_buildIdent(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl> _126330_decl);
inline jule::Trait _1a7a991c7_buildSubIdent(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972d92_SubIdentTypeDecl> _126733_decl);
inline jule::Ptr<_1a7a8e002_Sptr> _1a7a99518_buildSptrFromType(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _130138_elem);
inline jule::Ptr<_1a7a8e002_Sptr> _1a7a99859_buildSptr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7973568_SptrTypeDecl> _132129_decl);
inline jule::Ptr<_1a7a927b9_Ptr> _1a7a99b9a_buildPtrFromType(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _133037_elem);
inline jule::Ptr<_1a7a927b9_Ptr> _1a7a99edb_buildPtr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7973ee7_PtrTypeDecl> _134528_decl);
inline jule::Ptr<_1a7a8e9c5_Slc> _1a7a9a32c_buildSlc(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79738ed_SlcTypeDecl> _136228_decl);
inline jule::Ptr<_1a7a91ce6_Arr> _1a7a9a66d_buildArr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7974789_ArrTypeDecl> _138328_decl);
inline jule::Ptr<_1a7a91169_Map> _1a7a9a9ae_buildMap(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7974ed7_MapTypeDecl> _143228_decl);
inline jule::Ptr<_1a7a905b9_Tuple> _1a7a9ad00_buildTuple(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7973bea_TupleTypeDecl> _145630_decl);
inline jule::Bool _1a7a9b141_checkFuncTypes(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79ab309_FnIns>* _146935_f);
inline jule::Ptr<_1a79ab309_FnIns> _1a7a9b482_buildFunc(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a798417d_FnDecl> _148729_decl);
inline jule::Trait _1a7a9b7c3_buildByNamespace(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a797326b_NamespaceTypeDecl> _151736_decl);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a7a9bb14_build(_1a7a947aa_typeChecker* _self_, jule::Any* _154126_declKind);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a7a9be55_checkDecl(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79724bd_TypeDecl>* _162930_decl);
inline jule::Bool static__1a7a9c8a1_prim(jule::Str* _165618_ident, jule::Ptr<_1a7a8a4c6_Prim> _165630_t);
inline jule::Bool static__1a7a9cc25_exist(jule::Str* _166019_ident, jule::Ptr<_1a7a828ec_TypeKind>* _166036_k);
inline void _1a64030b5_stop(_1a6402944_scopeParser* _self_);
inline jule::Bool _1a640334b_stopped(_1a6402944_scopeParser* _self_);
inline jule::Bool _1a64035d2_finished(_1a6402944_scopeParser* _self_);
inline jule::Bool _1a6403868_isLastSt(_1a6402944_scopeParser* _self_);
inline void _1a6403bcb_pushErr(_1a6402944_scopeParser* _self_, jule::Ptr<_1a795c013_Token> _18823_token, jule::Str _18838_fmt);
inline void _1a640403e_pushSuggestion(_1a6402944_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1a64042e7_insertAsNext(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _19733_tokens);
inline jule::Ptr<_1a64020a3_stmt> _1a640457d_next(_1a6402944_scopeParser* _self_);
inline jule::Ptr<_1a79824de_ScopeTree> _1a6404979_buildScope(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _20731_tokens, jule::Ptr<_1a795c013_Token> _20753_end);
inline jule::Ptr<_1a7985338_VarDecl> _1a6404cba_buildVarSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _21831_tokens);
inline jule::Ptr<_1a7985712_RetSt> _1a640510b_buildRetSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _22430_tokens);
inline jule::Ptr<_1a7985e82_Iter> _1a640544c_buildWhileNextIter(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _23539_s);
inline jule::Ptr<_1a79867ac_WhileKind> _1a640578d_buildWhileIterKind(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _28039_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a6405ace_getRangeKindKeysTokens(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _28643_toks);
inline jule::Ptr<_1a7985338_VarDecl> _1a6405e20_buildRangeKindKey(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _29238_tokens);
inline jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _1a6406261_buildRangeKindKeys(_1a6402944_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _31839_parts);
inline void _1a64065c4_setupRangeKindKeysPlain(_1a6402944_scopeParser* _self_, jule::Ptr<_1a79871b4_RangeKind>* _32644_rng, jule::Slice<jule::Ptr<_1a795c013_Token>>* _32666_tokens);
inline void _1a6406937_setupRangeKindKeysExplicit(_1a6402944_scopeParser* _self_, jule::Ptr<_1a79871b4_RangeKind>* _34147_rng, jule::Slice<jule::Ptr<_1a795c013_Token>>* _34169_tokens);
inline void _1a6406c9a_setupRangeKindKeys(_1a6402944_scopeParser* _self_, jule::Ptr<_1a79871b4_RangeKind>* _35039_rng, jule::Slice<jule::Ptr<_1a795c013_Token>>* _35061_tokens);
inline jule::Ptr<_1a79871b4_RangeKind> _1a6407251_buildRangeIterKind(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _35839_var_tokens, jule::Slice<jule::Ptr<_1a795c013_Token>>* _3598_exprTokens, jule::Ptr<_1a795c013_Token>* _35935_inToken);
inline jule::Any _1a640764c_buildCommonIterKind(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37440_tokens, jule::Ptr<_1a795c013_Token>* _37459_err_tok);
inline jule::Ptr<_1a7985e82_Iter> _1a640798d_buildCommonIter(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _40135_tokens);
inline jule::Ptr<_1a7985e82_Iter> _1a6407cce_buildIterSt(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _43132_st);
inline jule::Ptr<_1a798758d_BreakSt> _1a6408120_buildBreakSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _43833_tokens);
inline jule::Ptr<_1a7987967_ContSt> _1a6408461_buildContSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _45632_tokens);
inline jule::Ptr<_1a7987e1d_If> _1a64087a2_buildIf(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _47428_tokens);
inline jule::Ptr<_1a79882e7_Else> _1a6408ae3_buildElse(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _50730_tokens);
inline jule::Ptr<_1a798879d_Conditional> _1a6408e34_buildIfElseChain(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _53136_tokens);
inline jule::Ptr<_1a7976802_Expr> _1a6409275_buildCoCallSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _55433_tokens);
inline jule::Ptr<_1a797ee7b_GotoSt> _1a64095b6_buildGotoSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _57032_tokens);
inline jule::Ptr<_1a7980278_FallSt> _1a6409907_buildFallSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _59032_tokens);
inline jule::Ptr<_1a7988eda_TypeAliasDecl> _1a6409c48_buildTypeAliasSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _60037_tokens);
inline void _1a640a221_pushCaseExpr(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _60632_tokens, jule::Ptr<_1a795c013_Token> _60654_token, jule::Bool _6073_typeMatch, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _60725_exprs);
inline __jule_tuple_sx_1a7976802_Expr__jule_tuple_bool _1a640a6c7_buildCaseExprs(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _62935_tokens, jule::Ptr<_1a795c013_Token>* _62958_colon, jule::Bool _62973_typeMatch);
inline jule::Ptr<_1a79824de_ScopeTree> _1a640aa18_buildCaseScope(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _67135_tokens);
inline __jule_tuple_x_1a7989491_Case__jule_tuple_bool _1a640ae14_buildCase(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _69830_tokens, jule::Bool _69848_typeMatch);
inline __jule_tuple_sx_1a7989491_Case__jule_tuple_x_1a79882e7_Else _1a640b310_buildCases(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _71330_tokens, jule::Bool _71348_typeMatch);
inline jule::Ptr<_1a7989caa_MatchCase> _1a640b651_buildMatchCase(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _74734_tokens);
inline jule::Ptr<_1a79824de_ScopeTree> _1a640b992_buildScopeSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _78032_tokens);
inline jule::Ptr<_1a797eaa2_LabelSt> _1a640bcd3_buildLabelSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _82333_tokens);
inline __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool _1a640c124_buildIdSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _83830_tokens);
inline jule::Ptr<_1a641cac4_assignInfo> _1a640c465_buildAssignInfo(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _85236_tokens);
inline jule::Ptr<_1a79808d8_AssignLeft> _1a640c7a6_buildAssignL(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _89733_tokens);
inline jule::Slice<jule::Ptr<_1a79808d8_AssignLeft>> _1a640cae7_buildAssignLs(_1a6402944_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _90834_parts);
inline __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool _1a640ce38_buildPlainAssign(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _91737_tokens);
inline jule::Bool _1a640d334_buildDeclAssign1(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _96737_lefts, jule::Ptr<_1a7980e6b_AssignSt>* _96759_assign);
inline __jule_tuple_x_1a7980e6b_AssignSt__jule_tuple_bool _1a640d675_buildDeclAssign(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _101235_tokens);
inline __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool _1a640d9b6_buildAssignSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _104634_tokens);
inline jule::Ptr<_1a79771c6_UseExpr> _1a640dd07_buildUseExpr(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _105933_tokens);
inline jule::Any _1a640e148_buildConstSt(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _107233_st);
inline jule::Any _1a640e489_buildSt(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _109728_st);
inline void _1a640e7ec_build(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _116126_tokens, jule::Ptr<_1a79824de_ScopeTree>* _116149_s);
inline void _1a6410b50_pushErr(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1a6410eb3_pushSuggestion(_1a6410369_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1a79773e6_TupleExpr> _1a6411304_buildTuple(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _5431_parts);
inline jule::Ptr<_1a797778c_LitExpr> _1a6411645_buildLit(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token> _6424_token);
inline jule::Any _1a6411cc7_buildSingle(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token> _7531_token);
inline jule::Ptr<_1a797811c_IdentExpr> _1a6412118_buildBindIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _9235_tokens);
inline jule::Ptr<_1a79788ae_UnaryExpr> _1a6412459_buildUnary(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _11130_tokens);
inline jule::Ptr<_1a7979915_SubIdentExpr> _1a641279a_buildObjSubIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _13236_tokens);
inline jule::Ptr<_1a797953b_NsSelectionExpr> _1a6412adb_buildNsSubIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _14736_tokens);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6412e2c_buildType(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _17230_tokens);
inline jule::Any _1a641326d_buildSubIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _18634_tokens);
inline jule::Ptr<_1a7978c88_VariadicExpr> _1a64135ae_buildVariadic(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _20833_tokens);
inline jule::Ptr<_1a7976abb_RangeExpr> _1a6413900_buildBetweenParentheses(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _21743_tokens);
inline jule::Ptr<_1a7979162_CastExpr> _1a6413c41_tryBuildCast(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _22933_tokens);
inline void _1a641415e_pushArg(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1a795c013_Token>> _30347_tokens, jule::Ptr<_1a795c013_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1a7976802_Expr>> _1a64144a0_buildArgs(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _31229_tokens);
inline jule::Ptr<_1a797a52b_FnCallExpr> _1a6414c97_buildFnCall(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token>* _37832_token, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37873_args);
inline jule::Any _1a64150d8_buildParenthesesRange(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _38642_tokens);
inline jule::Ptr<_1a7977b66_UnsafeExpr> _1a6415429_buildUnsafeExpr(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _40835_tokens);
inline jule::Ptr<_1a798417d_FnDecl> _1a641576a_buildAnonFn(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _42332_tokens);
inline jule::Any _1a6415aab_buildUnsafe(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _43232_tokens);
inline void _1a6415ec9_pushRangeLitPart(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _44236_part, jule::Ptr<_1a795c013_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a641631a_getBraceRangeLitExprParts(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _45345_tokens);
inline jule::Ptr<_1a797b021_FieldExprPair> _1a641665b_buildFieldExprPair(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _49538_tokens);
inline jule::Ptr<_1a7976802_Expr> _1a641699c_buildStructLitExpr(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1a7976802_Expr>> _1a6416cdd_buildStructLitExprs(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _52340_tokens);
inline jule::Ptr<_1a797b84b_StructLit> _1a641712e_buildTypedStructLiteral(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _53643_tokens);
inline jule::Ptr<_1a7976802_Expr> _1a6417470_buildBraceLitPart(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _56038_tokens);
inline jule::Ptr<_1a797bd02_BraceLit> _1a64177b1_buildBraceLit(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _57734_tokens);
inline jule::Any _1a6417b02_buildBraceRange(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a6417e43_getEnumerableParts(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _64838_tokens);
inline jule::Ptr<_1a797cd58_SliceExpr> _1a6418284_buildSlice(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _65530_tokens);
inline jule::Ptr<_1a797d7b5_IndexingExpr> _1a641873a_buildIndexing(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1a795c013_Token>> _6787_tokens, jule::Ptr<_1a795c013_Token> _67829_errorToken);
inline jule::Ptr<_1a797de25_SlicingExpr> _1a6418d56_buildSlicing(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1a795c013_Token>>* _70160_start, jule::Slice<jule::Ptr<_1a795c013_Token>>* _7028_to, jule::Ptr<_1a795c013_Token>* _70227_errorToken, jule::Ptr<_1a795c013_Token> _70251_end);
inline jule::Any _1a6419197_buildBracketRange(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _71737_tokens);
inline jule::Any _1a64194d8_buildExclRight(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _74235_tokens);
inline jule::Any _1a6419829_buildData(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _76030_tokens);
inline jule::Any _1a6419c25_buildBinary(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1a641a066_build(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _85426_tokens);
inline jule::Any _1a641a3a7_buildKind(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _86530_tokens);
inline jule::Ptr<_1a7976802_Expr> _1a641a6e8_buildFromTokens(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _87635_tokens);
inline void _1a64212c0_stop(_1a6420ec3_parser* _self_);
inline jule::Bool _1a6421556_stopped(_1a6420ec3_parser* _self_);
inline void _1a6421974_pushErr(_1a6420ec3_parser* _self_, jule::Ptr<_1a795c013_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1a6421cd7_pushSuggestion(_1a6420ec3_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1a7976802_Expr> _1a6422128_buildExpr(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _21731_tokens);
inline jule::Ptr<_1a79718da_Directive> _1a6422469_buildDirective(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _22134_tokens);
inline void _1a6422722_pushDirective(_1a6420ec3_parser* _self_, jule::Ptr<_1a79718da_Directive> _23633_d);
inline jule::Ptr<_1a79824de_ScopeTree> _1a6422b1d_buildScope(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _24932_tokens, jule::Ptr<_1a795c013_Token> _24954_end);
inline __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool _1a64230c4__buildType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool _1a642357a_buildType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1a7988eda_TypeAliasDecl> _1a64238bb_buildTypeAliasDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _28140_tokens);
inline void _1a6423c2e_buildVarTypeAndExpr(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7985338_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1a795c013_Token>>* _32159_tokens);
inline void _1a6424092_buildVarCommon(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7985338_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1a795c013_Token>> _35453_tokens);
inline void _1a6424405_buildVarBegin(_1a6420ec3_parser* _self_, jule::Ptr<_1a7985338_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37052_tokens);
inline jule::Ptr<_1a7985338_VarDecl> _1a6424746_buildVar(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _39829_tokens);
inline jule::Ptr<_1a797e6c8_GenericDecl> _1a6424a87_buildGeneric(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _1a6424e83_buildGenerics(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _45435_tokens, jule::Ptr<_1a795c013_Token>* _45454_errorToken);
inline jule::Ptr<_1a7982c2b_ParamDecl> _1a64252c4_buildSelfParam(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _47434_tokens);
inline void _1a64256e2_paramTypeBegin(_1a6420ec3_parser* _self_, jule::Ptr<_1a7982c2b_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1a795c013_Token>>* _51468_tokens);
inline void _1a6425a55_buildParamType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7982c2b_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1a795c013_Token>>* _52960_tokens);
inline void _1a6425db8_buildParamBody(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7982c2b_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1a795c013_Token>> _54259_tokens);
inline jule::Ptr<_1a7982c2b_ParamDecl> _1a6426209_buildParam(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _56231_tokens);
inline void _1a64264b2_checkParams(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>> _1a64268ad_buildParams(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool _1a6426ca9_buildMultiRetType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool _1a64271a5_buildRetType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1a798417d_FnDecl> _1a642765b_buildFnPrototype(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1a798417d_FnDecl> _1a6427b12_buildFn(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1a795c013_Token>> _1a6427e53_getUseDeclSelectors(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _87639_tokens);
inline void _1a64282b6_buildBindUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1a795c013_Token>>* _90154_tokens);
inline jule::Str _1a6428607_useDeclTokstoa(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _91431_tokens);
inline void _1a642896a_buildStdUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1a795c013_Token>> _92956_tokens);
inline void _1a6428ccd_buildIdentUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1a795c013_Token>> _98758_tokens);
inline void _1a6429141_parseUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1a795c013_Token>> _103553_tokens);
inline jule::Ptr<_1a798a5c4_UseDecl> _1a642953c_buildUseDecl(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6429938_buildTypeEnumItemKind(jule::Ptr<_1a6420ec3_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1a795c013_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>> _1a6429c79_buildTypeEnumItems(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _112040_tokens);
inline jule::Ptr<_1a798c5c6_TypeEnumDecl> _1a642a0ba_buildTypeEnumDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _114439_tokens);
inline jule::Ptr<_1a7976802_Expr> _1a642a4b6_buildEnumItemExpr(jule::Ptr<_1a6420ec3_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1a795c013_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>> _1a642a807_buildEnumItems(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _120336_tokens);
inline jule::Ptr<_1a798b63b_EnumDecl> _1a642ab48_buildEnumDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _124035_tokens);
inline jule::Any _1a642ae89_buildNodeEnumDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _128539_tokens);
inline jule::Ptr<_1a798c890_FieldDecl> _1a642b2ca_buildField(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1a798c890_FieldDecl>> _1a642b61b_buildStructDeclFields(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _134342_tokens);
inline jule::Ptr<_1a798d286_StructDecl> _1a642b95c_buildStructDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _135437_tokens);
inline void _1a642bc15_checkMethodReceiver(_1a6420ec3_parser* _self_, jule::Ptr<_1a798417d_FnDecl>* _140236_f);
inline void _1a642c078_buildTraitBody(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a798d9c3_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1a795c013_Token>> _142155_tokens);
inline jule::Ptr<_1a798d9c3_TraitDecl> _1a642c3b9_buildTraitDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _145336_tokens);
inline jule::Ptr<_1a798417d_FnDecl> _1a642c70a_buildBindFn(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _148332_tokens);
inline jule::Ptr<_1a7985338_VarDecl> _1a642ca4b_buildBindVar(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _149333_tokens);
inline jule::Ptr<_1a798d286_StructDecl> _1a642cd8c_buildBindStruct(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _150636_tokens);
inline jule::Ptr<_1a7988eda_TypeAliasDecl> _1a642d1cd_buildBindTypeAlias(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _152039_tokens);
inline jule::Ptr<_1a798a5c4_UseDecl> _1a642d51e_buildBindUse(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _153033_tokens);
inline jule::Any _1a642d860_buildBind(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _154131_tokens);
inline jule::Ptr<_1a798417d_FnDecl> _1a642dba1_getMethod(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _156531_tokens);
inline void _1a642e014_parseImplBody(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a798e133_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1a795c013_Token>>* _159452_tokens);
inline jule::Ptr<_1a798e133_Impl> _1a642e355_buildImpl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _162730_tokens);
inline jule::Any _1a642e696_buildNodeData(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _169835_tokens);
inline void _1a642e94e_applyFnMeta(_1a6420ec3_parser* _self_, jule::Ptr<_1a798417d_FnDecl>* _173132_f);
inline void _1a642ec07_applyMeta(_1a6420ec3_parser* _self_, _1a79714bc_Node* _173630_node);
inline void _1a642eeb0_pushUseDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _176133_decl);
inline jule::Bool _1a6430301_pushMetaNodes(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _176935_tokens);
inline _1a79714bc_Node _1a6430642_parseNode(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _178931_st);
inline void _1a64308ea_appendNode(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _181332_st);
inline void _1a6430dc3_removeRange(_1a6420ec3_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1a795c013_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1a64312e1_pushWrongOrderCloseErr(_1a6420ec3_parser* _self_, jule::Ptr<_1a795c013_Token>* _183539_t, jule::Slice<jule::Ptr<_1a795c013_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1a64317b9_pushRangeClose(_1a6420ec3_parser* _self_, jule::Ptr<_1a795c013_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1a795c013_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1a6431a72_checkRanges(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _186428_tokens);
inline void _1a6431d2a_parse(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7962799_File>* _189527_f);
inline void _1a6433689_pushErr(_1a64330e5_typeBuilder* _self_, jule::Ptr<_1a795c013_Token> _4123_token, jule::Str _4138_fmt);
inline void _1a64339ec_pushSuggestion(_1a64330e5_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6433c83_buildNamespace(_1a64330e5_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _1a6434019_buildGenerics(_1a64330e5_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a64342a0_identGenerics(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6434536_buildIdent(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a64347bc_buildCppLink(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6434a53_buildFn(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6434cd9_buildPtr(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435070_buildSptr(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435306_buildSlc(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a643558c_buildArr(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435823_buildMap(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435aa9_buildEnumerable(_1a64330e5_typeBuilder* _self_);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435d40_step(_1a64330e5_typeBuilder* _self_);
inline __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool _1a64360c6_build(_1a64330e5_typeBuilder* _self_);
inline void _1a7d157ea_pushErr(_1a7d1529a_directiveEval* _self_, jule::Ptr<_1a795c013_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a7d15be6_splitOperans(_1a7d1529a_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a795c013_Token>>* _3346_tokens);
inline jule::Bool _1a7d16037_evalDirectiveIdent(_1a7d1529a_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a7d16378_evalDirectivePart(_1a7d1529a_directiveEval* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _7837_part);
inline jule::Bool _1a7d1660e_eval(_1a7d1529a_directiveEval* _self_);
inline jule::Ptr<_1a643722b_JuleImporter> static__1a6437627_New(_1a7d13cc1_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _1a64378ad_AllPackages(_1a643722b_JuleImporter* _self_);
inline void _1a6437ced_SetModPath(_1a643722b_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1a6438084_GetModPath(_1a643722b_JuleImporter* _self_);
inline jule::Str _1a64383c5_ModById(_1a643722b_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1a6817474_ImportInfo> _1a6438716_GetImport(_1a643722b_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log _1a6438b12_ImportPackage(_1a643722b_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_update_mod);
inline void _1a6438dba_Imported(_1a643722b_JuleImporter* _self_, jule::Ptr<_1a6817474_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_1d974c80a_Log _1a64392e9_isPassBuildDirectives(_1a643722b_JuleImporter* _self_, jule::Ptr<_1a79705a9_Ast>* _17942_file);
inline jule::Ptr<_1a643d96e_ExprInspector> static__1a643dcd2_New(void);
inline void _1a643e08a_args(_1a643d96e_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args);
inline void _1a643e343_inspect(_1a643d96e_ExprInspector* _self_, jule::Any* _6328_m);
inline void _1a643e6a6_Inspect(_1a643d96e_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f);
inline jule::Ptr<_1a86c256e_ObjectDeadCode> static__1a86c2a14_new(jule::Ptr<_1a6439bac_IR>* _3521_ir);
inline jule::Bool _1ace1bca3_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79bb6d2_Trait>* _4127_t);
inline jule::Bool _1ace22704_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79ab309_FnIns>* _4127_t);
inline jule::Bool _1ace28551_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79960d5_StructIns>* _4127_t);
inline jule::Bool _1ace3079a_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a685a682_Var>* _4127_t);
inline void _1ace1c149_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79bb6d2_Trait> _6132_t);
inline void _1ace22a9a_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79ab309_FnIns> _6132_t);
inline void _1ace28b06_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79960d5_StructIns> _6132_t);
inline void _1ace30b41_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a685a682_Var> _6132_t);
inline void _1a86c33b6_setReferencesAsLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79ae4d8_ReferenceStack>* _7441_rs);
inline void _1a86c366e_inits(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a681a39a_Package>* _15627_pkg);
inline void _1a86c3927_collectLivePackage(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a681a39a_Package>* _16840_pkg);
inline void _1a86c3b25_collectLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_);
inline void _1a86c3dcd_removeDeadGlobals(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a685a682_Var>>* _20139_vars);
inline void _1a86c4186_removeDeadFns(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _21335_funcs);
inline void _1a86c443e_removeDeadStructs(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7993357_Struct>>* _23439_structs);
inline void _1a86c46e7_removeDeadTraits(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a79bb6d2_Trait>>* _25638_traits);
inline void _1a86c49a0_removeDeadsFile(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a7a4b18a_SymbolTable>* _27737_file);
inline void _1a86c4c58_removeDeadsPackage(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a681a39a_Package>* _28440_pkg);
inline void _1a86c4e56_removeDeads(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_);
inline void _1a86c5154_elimanate(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_);
inline void _1a86c66a5_optimizeChild(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680dba7_Scope>* _3935_s);
inline void _1a86c695d_optimizeBodyChildExceptional(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680dba7_Scope>* _4950_s);
inline void _1a86c6c16_optimizeBodyChild(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680dba7_Scope>* _5939_s);
inline void _1a86c6ebe_optimizeExprModel(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1a86c71bc_eliminateFollowed(_1a86c61bb_scopeDeadCode* _self_);
inline void _1a86c7475_pushGoto(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79d9aa7_GotoSt> _8929_gt);
inline void _1a86c772d_pushLabel(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79d96de_Label> _9930_l);
inline void _1a86c79d6_optimizeRangeIter(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a68109de_RangeIter> _11238_it);
inline void _1a86c7c8e_optimizeWhileIter(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a6810093_WhileIter> _11738_it);
inline void _1a86c8047_optimizeInfIter(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680eadc_InfIter> _12536_it);
inline void _1a86c8300_optimizeConditional(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680e7e0_Conditional> _12940_c);
inline void _1a86c85a8_optimizeMatch(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79db04d_Match> _14734_m);
inline void _1a86c8861_optimizeAssign(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79da437_Assign> _16535_assign);
inline void _1a86c8b19_optimizeMultiAssign(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79da8dd_MultiAssign> _17040_assign);
inline void _1a86c8dc2_optimizeStmt(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1a86c90c0_optimizeStmts(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_);
inline _1a86ca852_exprDeadCode static__1a86cabe8_new(jule::Ptr<_1a86c61bb_scopeDeadCode>* _1821_s);
inline void _1a86caea1_optimize(_1a86ca852_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1a7b7a60a_pushVar(_1a7b7a198_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1a7b7a94b_removeVar(_1a7b7a198_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1a7b7ac8c_isSafe(_1a7b7a198_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1a644a519_scopeOptimizer> static__1a644aa8b_new(jule::Ptr<_1a680dba7_Scope> _5120_scope);
inline void _1a644ad44_setCurrentStmt(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1a644b042_removeCurrent(jule::Ptr<_1a644a519_scopeOptimizer> _self_);
inline jule::Bool _1a644b2c8_isLastStmt(jule::Ptr<_1a644a519_scopeOptimizer> _self_);
inline jule::Bool _1a644b55e_isIter(jule::Ptr<_1a644a519_scopeOptimizer> _self_);
inline void _1a644b817_optimizeData(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a7a51503_Data> _9533_d);
inline void _1a644bac0_optimizeVar(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a685a682_Var> _12132_v);
inline void _1a644bd78_optimizeConditional(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a680e7e0_Conditional> _14240_c);
inline void _1a644c296_buildDefaultConstantTrueCase(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79dbb97_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a79db04d_Match>* _21680_m);
inline void _1a644c54e_optimizeMatch(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79db04d_Match> _24234_m);
inline void _1a644c807_optimizeRangeIter(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a68109de_RangeIter> _32438_it);
inline void _1a644cab0_optimizeWhileIter(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a6810093_WhileIter> _36938_it);
inline jule::Bool _1a644ce01_substr(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _37527_a);
inline jule::Bool _1a644d242_strAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _39530_a);
inline jule::Bool _1a644d583_sliceAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _40632_a);
inline void _1a644d83b_optimizePostfix(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79d9e81_Postfix> _41436_postfix);
inline void _1a644dae4_optimizeAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _42135_assign);
inline jule::Bool _1a644de35_tryOptimizeSwap(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _53037_assign);
inline void _1a644e1dd_optimizeMultiAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da8dd_MultiAssign> _56740_assign);
inline void _1a644e496_optimizeRet(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79dc77a_RetSt> _61332_r);
inline void _1a644e74e_optimizeStmt(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Any _63733_stmt);
inline void _1a644ea07_optimizeChild(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a680dba7_Scope> _66634_child);
inline void _1a644ec05_optimize(jule::Ptr<_1a644a519_scopeOptimizer> _self_);
inline void static__1a64524aa_optimize(jule::Any* _3626_model);
inline void static__1a6452796_optimizeData(jule::Any* _4030_model, jule::Ptr<_1a645a3c5_data>* _4053_d);
inline jule::Bool _1a6452ad7_selfCmpCond(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _5228_m);
inline jule::Bool _1a6452e28_boolCond(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _7625_m);
inline jule::Bool _1a6453269_strCond(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _12923_m);
inline jule::Bool _1a6453720_tryNeutralElement1(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _18635_m, jule::Ptr<_1bd82c384_Const> _18660_c, jule::Ptr<_1a7999eda_OperandExprModel>* _18672_nc);
inline jule::Bool _1a6453a61_tryNeutralElement(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _23034_m);
inline void _1a6453d19_checkBinaryForBoundary(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _24539_m);
inline void _1a64540c2_checkBinaryForNil(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _29734_m);
inline void _1a645437a_binary(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _32922_m);
inline void _1a6454633_unary(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a8ae_UnaryExprModel> _41421_m);
inline void _1a64548db_structureLit(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799b283_StructLitExprModel> _45728_m);
inline void _1a6454b94_casting(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799bb13_CastingExprModel> _47323_m);
inline void _1a6455007_args(_1a6452015_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _48720_params, jule::Slice<jule::Any>* _48746_args);
inline void _1a64552b0_scope(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a680dba7_Scope>* _50922_s);
inline void _1a6455568_funcCall(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799c4b5_FnCallExprModel> _51524_m);
inline void _1a6455821_indexing(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799cd45_IndexingExprModel> _52224_m);
inline void _1a6455ac9_anonFunc(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel> _54624_m);
inline void _1a6455cc7_do(_1a6452015_exprOptimizer* _self_);
inline void _1a6457ba8_pushVar(jule::Ptr<_1a6457746_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a7a828ec_TypeKind> _3242_kind);
inline jule::Bool _1a6457ee9_removeVar(_1a6457746_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1a64583e5_isFits(_1a6457746_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a7a828ec_TypeKind> _6936_kind);
inline _1a6459dca_dataCheckpoint _1a645a749_getCheckpoint(_1a645a3c5_data* _self_);
inline void _1a645aa02_loadCheckpoint(_1a645a3c5_data* _self_, _1a6459dca_dataCheckpoint* _3535_c);
inline void _1a645c2b7_pushVar(_1a645bd55_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1a645ca04_fitsMaxSize(_1a645bd55_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1a86cba51_Optimizer> static__1a86cbec4_New(jule::Ptr<_1a6439bac_IR>* _2621_ir);
inline void _1a86cc27c_optimizeGlobal(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a685a682_Var>* _3235_v);
inline void _1a86cc535_optimizeFunction(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a79a8328_Fn>* _3837_func);
inline void _1a86cc7dd_optimizeStruct(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a7993357_Struct>* _4835_s);
inline void _1a86cca96_optimizeGlobals(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _6436_p);
inline void _1a86ccd4e_optimizeFunctions(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _7238_p);
inline void _1a86cd107_optimizeStructs(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _8036_p);
inline void _1a86cd3b0_optimizePackage(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _8836_p);
inline void _1a86cd5ad_Optimize(_1a86cba51_Optimizer* _self_);
inline void static__1a86cdda5_Reset(void);
inline void static__1a8701e2d_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a8704903_LogFlat(_1d974c80a_Log* _1421_l);
inline void static__1a8704b34_LogError(_1d974c80a_Log* _1922_l);
inline void static__1a8704d65_Log(_1d974c80a_Log* _6417_l);
inline void static__1a8705096_PrintLogs(jule::Slice<_1d974c80a_Log>* _7423_logs);
inline _1a9e3ced6_Time static__1a9e3d38d_Unix(jule::U64 _9117_sec);
inline _1a9e3ced6_Time static__1a9e3d59c_Now(void);
inline _1a9e3c810_AbsTime _1a9e3ec85_Abs(_1a9e3ced6_Time* _self_);
inline jule::Ptr<_1a9d6c6eb_scopeCoder> static__1a9d6cd5b_new(jule::Ptr<_1a9e48563_ObjectCoder>* _7321_oc);
inline void _1ad2497c8_iterHead(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1a9d6d532_rangeIndexIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter>* _12936_it);
inline void _1a9d6d7da_rangeHashmapIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter>* _19638_it);
inline void _1a9d6da93_strRuneIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b78a7b_StrRuneIter> _24332_it);
inline void _1a9d6dd4b_ifCase(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680e0c5_If> _35127_i);
inline void _1a9d6e104_conditional(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680e7e0_Conditional> _36032_c);
inline void _1a9d6e3ac_infIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680eadc_InfIter> _38028_it);
inline void _1a9d6e665_whileIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a6810093_WhileIter> _39730_it);
inline void _1a9d6e91d_rangeIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter> _43630_it);
inline void _1a9d6ebc6_cont(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a636e581_ContSt> _44921_c);
inline void _1a9d6ee7e_label(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d96de_Label> _45422_l);
inline void _1a9d70237_gotoSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d9aa7_GotoSt> _45923_gt);
inline void _1a9d704e0_postfix(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d9e81_Postfix> _46428_p);
inline void _1a9d70798_assign(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da437_Assign> _47127_a);
inline void _1a9d70a51_mapLookupAssign(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _47737_a);
inline void _1a9d70d09_multiAssignTup(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _50036_a);
inline void _1a9d710b2_multiAssignFn(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _54935_a);
inline void _1a9d7136a_multiAssign(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign> _60732_a);
inline jule::Fn<void> _1a9d716ab_matchExpr(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79db04d_Match> _63330_m);
inline void _1a9d71a1e_case(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79db04d_Match> _64325_m, jule::Ptr<_1a79dbb97_Case> _64340_c);
inline void _1a9d71cc7_matchSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79db04d_Match> _71328_m);
inline void _1a9d72080_fallSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79dc3a1_FallSt> _76823_f);
inline void _1a9d72338_breakSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d947a_BreakSt> _77324_b);
inline void _1a9d725e1_setResult(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79dc77a_RetSt> _78230_r);
inline void _1a9d72899_retSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79dc77a_RetSt> _81026_r);
inline void _1a9d72b52_var(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a685a682_Var> _84624_v);
inline void _1a9d72e0a_mutSlicing(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b7776c_MutSlicingExprModel> _85231_m);
inline void _1a9d731b3_swap(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b76518_SwapExprModel> _86925_m);
inline void _1a9d7346b_exceptionalForwarding(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b76194_ExceptionalForwardingExprModel> _87742_m);
inline void _1a9d73724_st(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Any _88323_st);
inline void _1a9d739cc_scopeStmts(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680dba7_Scope>* _93932_s);
inline void _1a9d73c85_scope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680dba7_Scope> _94826_s);
inline void _1a9d7403d_commonFuncScope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _96337_f);
inline void _1a9d743a1_anonFuncScope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel> _100334_m, jule::Str _100355_ident);
inline void _1a9d74659_funcScope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _103530_f);
inline jule::Ptr<_1a9d77d33_exprCoder> static__1a9d781eb_new(jule::Ptr<_1a9e48563_ObjectCoder>* _11421_oc);
inline void _1a9d784a4_string(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const>* _12024_c);
inline void _1a9d7875c_boolean(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Bool _13524_b);
inline void _1a9d7895a_nilLit(jule::Ptr<_1a9d77d33_exprCoder> _self_);
inline jule::Bool _1a9d78c9b_ftoaSpecialCases(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::F64* _14734_x);
inline void _1a9d79054_float32(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const>* _16125_c);
inline void _1a9d7930c_float64(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const>* _18025_c);
inline void _1a9d795b5_constant(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const> _19829_c);
inline void _1a9d799d3_divByZeroBinary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a795c013_Token>* _22233_op, jule::Ptr<_1a7999eda_OperandExprModel>* _22250_l, jule::Ptr<_1a7999eda_OperandExprModel>* _22277_r);
inline void _1a9d79c8b_unsafeBinary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _24433_m);
inline void _1a9d7a044_binary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _27527_m);
inline void _1a9d7a2ec_var(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a685a682_Var> _28724_m);
inline void _1a9d7a5a5_structureIns(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79960d5_StructIns> _30333_m);
inline void _1a9d7a85d_unary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799a8ae_UnaryExprModel> _30726_m);
inline void _1a9d7ab16_structureLit(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799b283_StructLitExprModel> _33133_m);
inline void _1a9d7adbe_allocStructure(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799b580_AllocStructLitExprModel> _36235_m);
inline void _1a9d7b177_possibleRefExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _37032_expr);
inline void _1a9d7b595_castTraitFromTrait(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799bb13_CastingExprModel>* _38440_m, jule::Ptr<_1a79bb6d2_Trait> _38466_t1, jule::Ptr<_1a79bb6d2_Trait> _38482_t2);
inline void _1a9d7b84d_casting(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799bb13_CastingExprModel> _39728_m);
inline void _1a9d7bb06_models(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Slice<jule::Any> _51327_args);
inline void _1a9d7bdae_args(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _52526_m);
inline void _1a9d7c167_modelForCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _55633_expr);
inline void _1a9d7c420_pushCallInf(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _57129_m);
inline jule::Bool _1a9d7c761_isWrapped(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _59431_m);
inline jule::Bool _1a9d7caa2_writeReceiver(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _61834_m);
inline void _1a9d7cd5a_pureFuncCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _63134_m);
inline void _1a9d7d113_coFuncCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _72132_m);
inline void _1a9d7d476_writeUseExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _77234_f, jule::Ptr<_1a7a51503_Data> _77249_d);
inline void _1a9d7d72e_funcCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel> _79329_m);
inline void _1a9d7d9d7_slice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c88e_SliceExprModel> _86626_m);
inline void _1a9d7dc90_indexing(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799cd45_IndexingExprModel> _87829_m);
inline void _1a9d7e048_unsafeIndexing(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b77dee_UnsafeIndexingExprModel> _91835_m);
inline void _1a9d7e301_anonFunc(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel> _93529_m);
inline void _1a9d7e5a9_mapExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799db7b_MapExprModel> _96628_m);
inline void _1a9d7e862_slicing(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799e20e_SlicingExprModel> _98728_m);
inline void _1a9d7eb1a_traitSub(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799e792_TraitSubIdentExprModel> _100329_m);
inline void _1a9d7edc3_structureSub(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a0133_StructSubIdentExprModel> _101933_m);
inline void _1a9d8017b_array(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a08a3_ArrayExprModel> _102826_m);
inline void _1a9d80434_funcInsCommon(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _105134_m);
inline void _1a9d806dc_funcIns(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _105828_m);
inline void _1a9d80995_tuple(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a0ba0_TupleExprModel> _106926_m);
inline void _1a9d80c4d_newCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a182c_BuiltinNewCallExprModel> _108028_m);
inline void _1a9d81006_outCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a1079_BuiltinOutCallExprModel> _109028_m);
inline void _1a9d812ae_outlnCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a1453_BuiltinOutlnCallExprModel> _109930_m);
inline void _1a9d81567_panicCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a1c06_BuiltinPanicCallExprModel> _110830_m);
inline void _1a9d81820_assertCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a21ac_BuiltinAssertCallExprModel> _111631_m);
inline void _1a9d81ac8_errorCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel> _112930_m);
inline void _1a9d81d81_copyCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a38d9_BuiltinCopyCallExprModel> _116129_m);
inline void _1a9d82139_lenCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2d39_BuiltinLenCallExprModel> _116928_m);
inline void _1a9d823e2_capCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a3136_BuiltinCapCallExprModel> _117428_m);
inline void _1a9d8269a_deleteCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a3510_BuiltinDeleteCallExprModel> _117931_m);
inline void _1a9d82953_makeCallSlice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel>* _119035_m);
inline void _1a9d82c0b_makeCallStr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel>* _120833_m);
inline void _1a9d82eb4_makeCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel> _121929_m);
inline void _1a9d8326c_pushToSlice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b782c8_PushToSliceExprModel> _122732_m);
inline void _1a9d83525_appendToSlice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b786a2_AppendToSliceExprModel> _128734_m);
inline void _1a9d837cd_appendCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2a3c_BuiltinAppendCallExprModel> _129531_m);
inline void _1a9d83a86_sizeof(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a4467_SizeofExprModel> _130327_m);
inline void _1a9d83d3e_alignof(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a4654_AlignofExprModel> _130928_m);
inline void _1a9d840e7_runeLit(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a48eb_RuneExprModel> _131524_m);
inline void _1a9d843a0_structureStatic(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a04c9_StructStaticIdentExprModel> _132936_m);
inline void _1a9d84658_integratedToStr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a4be8_IntegratedToStrExprModel> _133336_m);
inline void _1a9d84911_backendEmit(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a50c2_BackendEmitExprModel> _133932_m);
inline void _1a9d84bb9_free(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a53be_FreeExprModel> _135525_m);
inline void _1a9d84e72_strComp(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b771d9_StrCompExprModel> _136428_m);
inline void _1a9d8522a_emptyCompare(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b768e2_EmptyCompareExprModel> _138033_m);
inline void _1a9d854d3_unsafeDeref(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b78d78_UnsafeDerefExprModel> _138932_m);
inline void _1a9d8578b_unsafeCasting(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b79175_UnsafeCastingExprModel> _140034_m);
inline void _1a9d85a44_model(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _141726_m);
inline void _1a9d85cec_initExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind> _151829_t);
inline jule::Ptr<_1a9d8863a_TestCoder> static__1a9d88aad_New(jule::Ptr<_1a9e48563_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1a6817474_ImportInfo> _1a9d88d44_findTestingPackage(jule::Ptr<_1a9d8863a_TestCoder> _self_);
inline void _1a9d890ec_appendTest(jule::Ptr<_1a9d8863a_TestCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _4431_f);
inline void _1a9d893a5_appendPackageTests(jule::Ptr<_1a9d8863a_TestCoder> _self_, jule::Ptr<_1a681a39a_Package>* _5940_p);
inline jule::Bool _1a9d8963b_readyTestingPackage(jule::Ptr<_1a9d8863a_TestCoder> _self_);
inline void _1a9d89839_callTmReset(jule::Ptr<_1a9d8863a_TestCoder> _self_);
inline void _1a9d89a37_callTmFailed(jule::Ptr<_1a9d8863a_TestCoder> _self_);
inline void _1a9d89c35_callTmSkipped(jule::Ptr<_1a9d8863a_TestCoder> _self_);
inline void _1a9d89e33_Serialize(jule::Ptr<_1a9d8863a_TestCoder> _self_);
inline void static__1a9d8bac2_writeIdentTo(_200880c8a_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1a9d8be68_toOut(_200880c8a_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1a9d8c3b9_toLocal(_200880c8a_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1a9d8c6a5_func(_200880c8a_StrBuilder* _8622_buf, jule::Ptr<_1a79a8328_Fn>* _8640_f);
inline void static__1a9d8c991_funcIns(_200880c8a_StrBuilder* _10225_buf, jule::Ptr<_1a79ab309_FnIns>* _10243_f);
inline void static__1a9d8cc7c_traitDecl(_200880c8a_StrBuilder* _11727_buf, jule::Ptr<_1a79bb6d2_Trait> _11744_t);
inline void static__1a9d8d068_param(_200880c8a_StrBuilder* _12123_buf, jule::Ptr<_1a79a6854_Param>* _12141_p);
inline void static__1a9d8d354_structure(_200880c8a_StrBuilder* _13627_buf, jule::Ptr<_1a7993357_Struct>* _13645_s);
inline void static__1a9d8d640_structureIns(_200880c8a_StrBuilder* _14730_buf, jule::Ptr<_1a79960d5_StructIns>* _14748_s);
inline void static__1a9d8d92b_field(_200880c8a_StrBuilder* _15523_buf, jule::Ptr<_1a7990431_Field>* _15541_f);
inline void static__1a9d8dc17_var(_200880c8a_StrBuilder* _16521_buf, jule::Ptr<_1a685a682_Var> _16542_v);
inline void static__1a9d8e003_iterBegin(_200880c8a_StrBuilder* _18727_buf, jule::Uintptr _18744_it);
inline void static__1a9d8e2de_iterEnd(_200880c8a_StrBuilder* _19225_buf, jule::Uintptr _19242_it);
inline void static__1a9d8e5ca_iterNext(_200880c8a_StrBuilder* _19726_buf, jule::Uintptr _19743_it);
inline void static__1a9d8e8b6_label(_200880c8a_StrBuilder* _20223_buf, jule::Uintptr _20240_u);
inline void static__1a9d8eba2_matchEnd(_200880c8a_StrBuilder* _20726_buf, jule::Uintptr _20743_m);
inline void static__1a9d8ee8d_caseBegin(_200880c8a_StrBuilder* _21227_buf, jule::Uintptr _21244_c);
inline jule::Ptr<_1a9e48563_ObjectCoder> static__1a9e4895e_New(jule::Ptr<_1a6439bac_IR>* _11521_ir, _1a9e467b4_SerializationInfo _11530_info);
inline void _1a9e48c17_write(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Str _12622_s);
inline void _1a9e48ec0_writeBytes(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b);
inline void _1a9e491bd_addIndent(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e493bb_doneIndent(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e495b9_indent(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline jule::I64 _1a9e4990a_findAnyType(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _14933_t);
inline jule::I64 _1a9e49c4b_pushDealloc(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind> _15832_t);
inline jule::Str _1a9e4a08c_pushAnonFn(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _17432_m);
inline jule::I64 _1a9e4a3cd_pushAnyType(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind> _21432_t);
inline void _1a9e4a686_pushResultIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _31335_f);
inline void _1a9e4a93e_pushResult(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _33432_f);
inline void _1a9e4aca2_pushAndWriteMaskMapper(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait> _34743_t1, jule::Ptr<_1a79bb6d2_Trait> _34759_t2);
inline void _1a9e4b05a_locInfo(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a795c013_Token>* _39825_t);
inline void _1a9e4b258_head(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e4b456_links(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e4b70e_prepareStructure(_1a9e48563_ObjectCoder* _self_, jule::Ptr<_1a7993357_Struct>* _47937_s);
inline void _1a9e4b90c_prepareStructures(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e4bbb5_structurePlainDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7993357_Struct>* _51040_s);
inline void _1a9e4bdb3_structurePlainDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e4c16b_fieldDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7995535_FieldIns>* _52631_f);
inline void _1a9e4c424_structureDestructor(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _54441_s);
inline void _1a9e4c787_structureOperatorEq(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _56036_ident, jule::Ptr<_1a79960d5_StructIns>* _56056_s);
inline void _1a9e4caea_structureOperatorNotEq(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _61739_ident, jule::Ptr<_1a79960d5_StructIns>* _61759_s);
inline void _1a9e4d018_structureOperator(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _63134_ident, jule::Ptr<_1a79ab309_FnIns>* _63154_f, jule::Str _63165_op);
inline void _1a9e4d2c1_structureOperators(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _68040_s);
inline void _1a9e4d579_structureInsDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _72138_s);
inline void _1a9e4d832_structureDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7993357_Struct>* _75135_s);
inline void _1a9e4da30_structureDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e4dc2d_structureMethodDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e4e206_funcHead(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _78530_buf, jule::Ptr<_1a79ab309_FnIns>* _78552_f, jule::Bool _78563_ptr, jule::Str _78574_ident);
inline void _1a9e4e569_funcDeclIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _80433_f, jule::Bool _80444_ptr);
inline void _1a9e4e8cc_funcDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _81130_f, jule::Bool _81138_ptr);
inline void _1a9e4eb85_funcDeclTrait(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _81735_f);
inline void _1a9e4ed83_funcDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e5013b_traitDataTypeMethods(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _83942_t);
inline void _1a9e50339_traitDataTypes(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e5069c_paramIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _87530_buf, jule::Ptr<_1a79aa281_ParamIns>* _87552_p);
inline void _1a9e50a10_paramsIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _88131_buf, jule::Ptr<_1a79ab309_FnIns>* _88153_f);
inline void _1a9e50d73_varInitExpr(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a685a682_Var>* _90233_v, jule::Fn<void> _90242_init);
inline void _1a9e5112b_var(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a685a682_Var> _92024_v);
inline void _1a9e5148e_anonFuncInsDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _95137_m, jule::Str _95158_ident);
inline void _1a9e51802_anonFuncIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _95733_m, jule::Str _95754_ident);
inline void _1a9e51b65_funcIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _96729_f, jule::Str _96740_ident);
inline void _1a9e51e1d_func(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _97726_f);
inline void _1a9e52281_funcTrait(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _98327_s, jule::Ptr<_1a79ab309_FnIns>* _98347_f);
inline __jule_tuple_x_1a79ab309_FnIns__jule_tuple_bool _1a9e525c2_findTraitMetMap(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _99837_m);
inline void _1a9e52935_traitWrapper(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _101034_t, jule::Ptr<_1a79a8328_Fn>* _101050_m);
inline void _1a9e52b33_traitWrappers(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e52e96_traitDataMethods(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _107638_t, jule::Ptr<_1a79960d5_StructIns> _107649_s);
inline void _1a9e533b4_traitData(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _109331_t, jule::I64 _109342_i, jule::Ptr<_1a79960d5_StructIns>* _109355_s);
inline void _1a9e535b2_traitDatas(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e537b0_globals(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e539ad_decls(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e53c66_structureMethods(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _115838_s);
inline void _1a9e5401e_structureOstream(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _116538_s);
inline void _1a9e542c7_structureIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _121634_s);
inline void _1a9e54580_structure(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7993357_Struct>* _122231_s);
inline void _1a9e5477d_structures(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e5497b_funcs(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e54c34_pushInit(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a681a39a_Package>* _125430_pkg);
inline void _1a9e54e32_anonHashes(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e55130_initCaller(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e5532d_end(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e55691_insertBuf(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _131131_buf, jule::I64 _131148_pos);
inline void _1a9e5588e_serializeHead(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline void _1a9e55a8c_Serialize(jule::Ptr<_1a9e48563_ObjectCoder> _self_);
inline jule::Str _1a9e57ab1_Str(_1a9e576e8_customType* _self_);
inline jule::Bool _1a9e57e02_Equal(jule::Ptr<_1a9e576e8_customType> _self_, jule::Ptr<_1a7a828ec_TypeKind> _4418_k);
inline jule::Ptr<_1a9e58331_typeCoder> static__1a9e5884d_new(jule::Ptr<_1a9e48563_ObjectCoder>* _6921_oc);
inline void _1a9e58bb1_toType(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1a9e59024_prim(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _9025_buf, jule::Ptr<_1a7a8a4c6_Prim> _9042_p);
inline void _1a9e59387_tuple(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _9526_buf, jule::Ptr<_1a7a905b9_Tuple> _9547_t);
inline void _1a9e596ea_asSptr(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1a9e59a5d_sptr(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _11425_buf, jule::Ptr<_1a7a8e002_Sptr> _11446_sptr);
inline void _1a9e59dc1_ptr(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _12124_buf, jule::Ptr<_1a7a927b9_Ptr> _12145_p);
inline void _1a9e5a234_enumDecl(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _13229_buf, jule::Ptr<_1a79bdddd_Enum> _13250_e);
inline void _1a9e5a597_typeEnumDecl(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _13733_buf, jule::Ptr<_1a79c05e8_TypeEnum> _13754_e);
inline void _1a9e5a90a_asSlice(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _14128_buf, jule::Ptr<_1a7a828ec_TypeKind> _14149_elem);
inline void _1a9e5ac6d_slice(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _14826_buf, jule::Ptr<_1a7a8e9c5_Slc> _14847_s);
inline void _1a9e5b0d1_mapType(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _15328_buf, jule::Ptr<_1a7a91169_Map> _15349_m);
inline void _1a9e5b7a7_structureIns(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _16733_buf, jule::Ptr<_1a79960d5_StructIns> _16754_s);
inline void _1a9e5bb1a_array(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _19126_buf, jule::Ptr<_1a7a91ce6_Arr> _19147_a);
inline void _1a9e5c2e1_paramIns(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _21429_buf, jule::Ptr<_1a79aa281_ParamIns>* _21451_p);
inline void _1a9e5c9b7_funcInsResult(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _24634_s, jule::Ptr<_1a79ab309_FnIns>* _24654_f);
inline void _1a9e5cd2a_anonFunc(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _26429_buf, jule::Ptr<_1a79ab309_FnIns> _26450_f);
inline void _1a9e5d18d_func(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _28525_buf, jule::Ptr<_1a79ab309_FnIns> _28546_f);
inline void _1a9e5d501_kind(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _29225_buf, jule::Ptr<_1a7a828ec_TypeKind> _29246_k);
inline jule::Ptr<_1a9e60e1b_resultCoder> static__1a9e613e4_new(jule::Ptr<_1a9e58331_typeCoder>* _35921_tc);
inline void _1a9e61757_ptr(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _36324_s, jule::Ptr<_1a7a927b9_Ptr> _36343_p);
inline void _1a9e61aba_sptr(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _36825_s, jule::Ptr<_1a7a8e002_Sptr> _36844_p);
inline void _1a9e61e2d_mapType(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _37328_s, jule::Ptr<_1a7a91169_Map> _37347_p);
inline void _1a9e62291_slice(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _37926_s, jule::Ptr<_1a7a8e9c5_Slc> _37945_slc);
inline void _1a9e62604_arr(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _38424_s, jule::Ptr<_1a7a91ce6_Arr> _38443_arr);
inline void _1a9e62967_func(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _39025_s, jule::Ptr<_1a79ab309_FnIns> _39044_f);
inline void _1a9e62cca_tup(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _40324_s, jule::Ptr<_1a7a905b9_Tuple> _40343_tup);
inline void _1a9e6313d_codeMut(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _41028_s, jule::Ptr<_1a7a828ec_TypeKind>* _41048_t);
inline void _1a9e634a1_codeMut1(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _44529_s, jule::Ptr<_1a7a828ec_TypeKind>* _44549_t);
inline jule::Slice<jule::U8> _1a9e637ae_code(_1a9e60e1b_resultCoder* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _45425_t);
inline jule::Str _1ad74bba9_Name(_1ad74b78b_Flag* _self_);
inline jule::Str _1ad74bd0d_What(_1ad74b78b_Flag* _self_);
inline void _1ad74be62_Reset(_1ad74b78b_Flag* _self_);
inline jule::I32 _1ad74c0b6_Short(_1ad74b78b_Flag* _self_);
inline jule::Str _1ad74eeba_Name(_1ad75033e_Flag* _self_);
inline jule::Str _1ad75062a_What(_1ad75033e_Flag* _self_);
inline void _1ad75076d_Reset(_1ad75033e_Flag* _self_);
inline jule::I32 _1ad7508b1_Short(_1ad75033e_Flag* _self_);
inline jule::Str _1ad75362d_Name(_1ad7539a2_Flag* _self_);
inline jule::Str _1ad753c8d_What(_1ad7539a2_Flag* _self_);
inline void _1ad753dd1_Reset(_1ad7539a2_Flag* _self_);
inline jule::I32 _1ad754024_Short(_1ad7539a2_Flag* _self_);
inline jule::Str _1ad756cd5_Name(_1ad757159_Flag* _self_);
inline jule::Str _1ad757445_What(_1ad757159_Flag* _self_);
inline void _1ad757588_Reset(_1ad757159_Flag* _self_);
inline jule::I32 _1ad7576cb_Short(_1ad757159_Flag* _self_);
inline jule::Str _1ad75a448_Name(_1ad75a7bc_Flag* _self_);
inline jule::Str _1ad75aaa8_What(_1ad75a7bc_Flag* _self_);
inline void _1ad75abeb_Reset(_1ad75a7bc_Flag* _self_);
inline jule::I32 _1ad75ad3e_Short(_1ad75a7bc_Flag* _self_);
inline jule::Ptr<_1a9a609a5_FlagSet> static__1a9a60c91_New(void);
inline jule::Trait _1a9a7e74e_FindFlag(_1a9a609a5_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1a9a8aa46_FindFlagShort(_1a9a609a5_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a9a8b11d_Parse(_1a9a609a5_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1ad75a7bc_Flag> _1ad7c5d76_addFlagCommon(_1a9a609a5_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1ad757159_Flag> _1ad7cd17a_addFlagCommon(_1a9a609a5_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1ad7c3648_AddVar(_1a9a609a5_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1ad7ca991_AddVar(_1a9a609a5_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1ad76d4a0_parseInteger(_1a9a8c927_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1ad775e25_parseInteger(_1a9a8c927_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1a9a8d241_getData(_1a9a8c927_argParser* _self_);
inline jule::VoidExceptional _1a9a8d4b6_processFlag(_1a9a8c927_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1a9a8d76e_singleDash(_1a9a8c927_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1a9a8da27_doubleDash(_1a9a8c927_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1a9a8dc25_tryArg(_1a9a8c927_argParser* _self_);
inline jule::VoidExceptional _1a9a8de23_parse(_1a9a8c927_argParser* _self_);
inline jule::Ptr<_1d7cd778c_Cmd> static__1d7cd7baa_New(jule::Str _2616_path);
inline jule::VoidExceptional _1d7cd7da8_Spawn(_1d7cd778c_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1d7cd833c_Wait(_1d7cd778c_Cmd* _self_);
inline jule::VoidExceptional _1d7cdbd79_spawn(_1d7cd778c_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1d7cdc30d_wait(_1d7cd778c_Cmd* _self_);
inline __jule_tuple_x_1a6439bac_IR__jule_tuple_s_1d974c80a_Log static__1a643a152_Build(jule::Str _2718_path, jule::I64 _2729_flags);
inline void _1a643a63b_appendStructs(_1a6439bac_IR* _self_, jule::Ptr<_1a681a39a_Package>* _5630_p, jule::Slice<jule::Ptr<_1a7993357_Struct>>* _5654_buffer);
inline jule::Slice<jule::Ptr<_1a7993357_Struct>> _1a643a8c2_GetAllStructures(_1a6439bac_IR* _self_);
inline void _1a643ac35_appendGlobals(_1a6439bac_IR* _self_, jule::Ptr<_1a681a39a_Package>* _7930_p, jule::Slice<jule::Ptr<_1a685a682_Var>>* _7954_buffer);
inline jule::Slice<jule::Ptr<_1a685a682_Var>> _1a643aebb_GetAllGlobals(_1a6439bac_IR* _self_);
inline void _1a643b1b9_Order(_1a6439bac_IR* _self_);
inline jule::I32 _21a585ac9_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _21a585d93_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _21a5861d4_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _21a58646a_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _21a5867de_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _21a586a42_UTF16FromStr(jule::Str _1417_s);
inline jule::Str _21a586d50_UTF16ToStr(jule::Slice<jule::U16> _3415_s);
inline jule::Str _21a587119_U16PtrToStr(jule::U16* _5023_s);
inline jule::I64 _21a280c7a_GetLastErrno(void);
inline jule::Uintptr _21a5b5620_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _21a5b58d9_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I64 _21a5b5c5d_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I64 _21a5b618c_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode);
inline jule::U32 _21a5b639b_GetLastError(void);
inline jule::U32 _21a5b6720_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _21a5b6ca3_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _21a5b706c_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _21a5b7336_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _21a5b7820_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname);
inline jule::Bool _21a5b7b94_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode);
inline jule::Bool _21a5b829e_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode);
inline jule::Bool _21a5b87ee_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved);
inline jule::Bool _21a5b8cd8_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed);
inline jule::Uintptr _21a5b936b_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I64 _21a5b96e0_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I64 _21a5b99a9_FindClose(jule::Uintptr _15414_h);
inline jule::I64 _21a5bba88_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _21a5bbe62_Close(jule::I64 _2510_handle);
inline jule::I64 _21a5bc319_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _21a5bc54a_Exit(jule::I64 _339_code);
inline __jule_tuple_i32__jule_tuple_int _21a6d3cc1_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _21a6d4112_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _21a6d4662_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I64 _21a6d492b_RuneLen(jule::I32 _35212_r);
inline jule::I64 _21a6d4db0_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _21a6d51ac_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _21a6d5531_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _21a6d5ab4_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _21a6d5d7d_RuneStart(jule::U8 _51714_b);
inline void _21a6d6e28_handleRW(jule::Slice<jule::U8>* _514_b);
inline void _21a6dcb87_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _200874278_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1aa04cab8_Slice(jule::U8* _2316_e, jule::I64 _2326_n);
inline jule::Slice<jule::U8> _200880020_StrBytes(jule::Str _4113_s);
inline jule::Str _2008802a6_BytesStr(jule::Slice<jule::U8> _5013_b);
inline jule::Str _200880570_StrFromBytes(jule::Slice<jule::U8> _5817_b);
inline jule::I64 _2008ae6e2_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2008b076a_Args(void);
inline jule::Exceptional<jule::Str> _2008b0bcc_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2008b1617_getwd(void);
inline jule::Bool _1d95e0d52_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1d9656390_is16(jule::Slice<_1d9654602_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1d9656714_is32(jule::Slice<_1d9654b30_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1d965701c_isExcludingLatin(jule::Ptr<_1d96550a3_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1d965725e_IsUpper(jule::I32 _29512_r);
inline jule::I64 _1d969c848_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1d969ce75_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1d969d2e9_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1d969d5e6_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1d969d9ae_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1d969dd33_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1d969e2d9_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1d969e62a_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1d969ea59_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1d969edcd_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1d96a16b5_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1d96a1a39_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1d96a2463_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1d96a2b06_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1d96a2e7a_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1d96a39e7_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1d96a3d6b_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1d96a4355_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1d96a50d1_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1d96a5455_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1d96a57c9_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _2008837d7_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _200883ae5_isSlash(jule::U8 _5312_c);
inline jule::U8 _200883dae_toUpper(jule::U8 _5512_c);
inline jule::I64 _200884486_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _200884750_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _200884a19_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _200884de3_abs(jule::Str _14612_path);
inline jule::Str _200885135_join(jule::Slice<jule::Str> _16013_elem);
inline jule::Str _1d96a81c2_Clean(jule::Str _10914_path);
inline jule::Str _1d96a8799_FromSlash(jule::Str _21214_path);
inline jule::Str _1d96a8ada_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1d96a8d71_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1d96a913a_Abs(jule::Str _2468_path);
inline jule::Str _1d96a9404_Base(jule::Str _25213_path);
inline jule::Str _1d96a97cd_Dir(jule::Str _2838_path);
inline jule::Str _1d96a9a20_VolumeName(jule::Str _30115_path);
inline jule::I64 _21a5cc59e_getLastFsError(void);
inline jule::Bool _21a6dea68_isConsoleHandle(jule::Uintptr _11620_handle);
inline void _1d7cdc6b5_appendEscapeArg(_200880c8a_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _1d7cdc97e_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _1d7cdcd58_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I64 _1d7cddd59_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _1d7cde079_getLastProcessError(void);
inline void _1d7cde893_Exit(jule::I64 _129_code);
inline jule::Str _1d7cdeaa2_Executable(void);
inline jule::Bool _1d97401e3_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1d97404bd_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1d9740787_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1d974cc6c_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _1d974d07a_argToStr(jule::Any _32713_arg);
inline jule::I64 _1d974d344_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _1d974d70c_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _1d974e565_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _1d9750984_IsWindows(jule::Str _3714_os);
inline jule::Bool _1d9750c92_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1d975105b_IsLinux(jule::Str _4312_os);
inline jule::Bool _1d975139c_IsI386(jule::Str _4611_arch);
inline jule::Bool _1d9751633_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1d97518ec_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1d9751bb6_IsUnix(jule::Str _5511_os);
inline jule::Bool _1d9752090_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1d97522d2_Is64Bit(jule::Str _6112_arch);
inline void _1d7ce0d7d_init(void);
inline jule::I64 _1bd7b1307_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1bd7b224d_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1bd7b2b33_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1bd7b2dec_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1bd7b88c5_Len32(jule::U32 _35214_x);
inline jule::I64 _1bd7b8b8e_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1bd7b992b_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1bd7bb235_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1a567bdcd_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1a567c1db_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1a567c4a5_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1a567c7e6_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1a567ed59_Frexp(jule::F64 _4714_f);
inline jule::F64 _1bd7c3490_NaN(void);
inline jule::Bool _1bd7c379d_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1bd7c3a67_Inf(jule::I64 _618_sign);
inline jule::Bool _1bd7c3e30_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1bd7c41e9_normalize(jule::F64 _8214_x);
inline jule::F64 _1bd7c5bce_Log(jule::F64 _1118_x);
inline jule::F64 _1bd7c66c4_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1bd7cd29c_Modf(jule::F64 _449_f);
inline jule::F64 _1bd7cdaa5_Log2(jule::F64 _449_x);
inline jule::Str _1bd80754b_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1bd807b34_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1bd80833d_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1bd80633b_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1bd808a14_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1bd806eb8_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1bd808e32_roundShortest(_1bd819c23_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1bd80633b_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1bd8094c6_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1bd806eb8_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1bd8099b0_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1bd806eb8_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1bd80a164_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1bd80633b_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1bd80a7e6_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1bd80633b_floatInfo* _51232_flt);
inline jule::I64 _1bd80ab6a_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1bd80aede_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1bd80bb7c_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a51ddb82_ConvError _1bd80c100_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1bd80c52e_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1bd80c9d5_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1bd80d695_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1bd80db18_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1bd8108ea_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1bd810c08_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1bd810ec2_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1bd812a1d_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1bd812e4c_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a51ddb82_ConvError _1bd8134e1_atofHex(_1bd80633b_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a51ddb82_ConvError _1bd8138ba_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError _1bd813b0c_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError _1bd813e81_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1bd814305_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1bd814b85_ryuFtoaFixed32(_1bd806eb8_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1bd81512a_ryuFtoaFixed64(_1bd806eb8_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1bd815966_formatDecimal(_1bd806eb8_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1bd815e3e_ryuFtoaShortest(_1bd806eb8_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1bd80633b_floatInfo* _26168_flt);
inline jule::I64 _1bd8161c5_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1bd81648e_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1bd8168bd_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1bd80633b_floatInfo* _3963_flt);
inline void _1bd81701c_ryuDigits(_1bd806eb8_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1bd81768d_ryuDigits32(_1bd806eb8_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1bd817abc_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1bd817eeb_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1bd818370_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1bd818639_divmod1e9(jule::U64 _60214_x);
inline void _1bd81b571_trim(_1bd819c23_decimal* _27414_a);
inline void _1bd81b85c_rightShift(_1bd819c23_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1bd81bd13_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1bd81c0bb_leftShift(_1bd819c23_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1bd81c440_shouldRoundUp(_1bd819c23_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1bd81dbc2_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1bd81e08a_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1bd81e354_Itoa(jule::I64 _819_i);
inline jule::Str _1bd81e695_small(jule::I64 _8610_i);
inline jule::Bool _1bd81e92b_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1bd81eec0_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1bd8214bb_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1bd821785_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1bd821ac6_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1bd821d5c_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1bd822126_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1bd822c2b_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1bd822ee5_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1bd8232ae_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1bd823578_BitsizeOfUint(jule::U64 _19718_x);
inline void _1bd823721_UpdateTarget(void);
inline void _1bd823897_init(void);
inline jule::I64 _1bd827505_MinI(jule::Str _6113_k);
inline jule::I64 _1bd827813_MaxI(jule::Str _7913_k);
inline jule::U64 _1bd827acc_MaxU(jule::Str _9713_k);
inline jule::F64 _1bd827e1d_Min(jule::Str _11512_k);
inline jule::F64 _1bd8281a4_Max(jule::Str _13312_k);
inline jule::Bool _1bd82865a_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1bd828968_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1bd828c32_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1bd829073_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1bd829309_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1bd8295c3_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1bd82988c_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1bd829c66_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1bd82a063_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1bd82b1c9_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1bd82b4d7_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1bd82b7a1_IsInt(jule::Str _4610_k);
inline jule::Bool _1bd82bae2_IsFloat(jule::Str _5112_k);
inline jule::Bool _1bd82bd78_IsNum(jule::Str _5610_k);
inline jule::Bool _1bd82c142_IsSigNum(jule::Str _6113_k);
inline void _1bd83639e_lshiftUnsig(_1bd82c384_Const* _59021_c, _1bd82c384_Const* _59032_x);
inline void _1bd8366ce_rshiftUnsig(_1bd82c384_Const* _59621_c, _1bd82c384_Const* _59632_x);
inline jule::Bool _1a795c750_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1a795ca5d_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1a795d168_IsStr(jule::Str _36410_k);
inline jule::Bool _1a795d3ee_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1a795d6b8_IsRune(jule::Str _37111_k);
inline jule::Bool _1a795e09d_IsFloat(jule::Str _38012_k);
inline jule::Bool _1a795e367_IsNum(jule::Str _38810_k);
inline jule::Bool _1a795e8ea_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1a795ebb4_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1a7960247_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1a7960742_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1a7960bb5_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1a7960e7e_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1a7961248_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1a7961512_IsHex(jule::U8 _45810_b);
inline jule::Bool _1a79617cb_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1a7961a95_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1a7961d5e_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1a7962799_File> _1a7963b74_NewFileSet(jule::Str _5715_path);
inline _1d974c80a_Log _1a796569d_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a7962799_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1a7965a66_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1a7965dda_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1a79662a3_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1a7966627_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1a796699b_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1a7966d20_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1a79672a4_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1a79674e6_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1a79677b0_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1a7967b34_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1a7967ea8_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1a796832c_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1a79686a1_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1a7968a25_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1a7969020_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1a79691eb_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1a796954d_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1a7969817_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1a7969ad1_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1a7969d9a_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1a796a164_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1d974c80a_Log> _1a7970158_Lex(jule::Ptr<_1a7962799_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1a6833a12_FindModuleFile(jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>* _1320_dirents);
inline jule::Str _1a6833cba_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1d974c80a_Log> _1a6834084_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1a68348d1_IsPub(jule::Str _910_ident);
inline jule::Bool _1a687c242_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a7a354d7_ToRune(jule::Str _2015_lit);
inline jule::Str _1a7a356e6_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a7a35a37_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a7a35cbd_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a7a36142_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1a7a364d8_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1a7b60788_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i);
inline jule::Slice<jule::U8> _1a7b60ab8_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1a7b60da4_FmtByDefault(_200880c8a_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1a7b612c2_applyFmtByDefault(_200880c8a_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1a7b616e0_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _200880c8a_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1a7b61a64_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1a7b63a88_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Bool _1a79ad5d6_parameterUsesGenerics(jule::Ptr<_1a79aa281_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1a7a89abe_TypeSymbol> _1a79b0d58_buildType(jule::Ptr<_1a79724bd_TypeDecl> _9418_t);
inline jule::Ptr<_1a7a5267a_Value> _1a79b1166_buildExpr(jule::Ptr<_1a7976802_Expr> _10318_expr);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a79b1430_buildTypeAlias(jule::Ptr<_1a7988eda_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1a7990431_Field> _1a79b1771_buildField(jule::Ptr<_1a798c890_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1a7990431_Field>> _1a79b1a07_buildFields(jule::Slice<jule::Ptr<_1a798c890_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1a7993357_Struct> _1a79b1cc1_buildStruct(jule::Ptr<_1a798d286_StructDecl> _14220_decl);
inline jule::Ptr<_1a79a6854_Param> _1a79b208a_buildParam(jule::Ptr<_1a7982c2b_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1a79a6854_Param>> _1a79b2464_buildParams(jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1a79a60c3_RetType> _1a79b26a6_buildRetType(jule::Ptr<_1a79753b1_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1a79a8328_Fn> _1a79b2970_buildFunc(jule::Ptr<_1a798417d_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1a79a8328_Fn>> _1a79b2c39_buildMethods(jule::Slice<jule::Ptr<_1a798417d_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1a7a89abe_TypeSymbol>> _1a79b3003_buildTraitInherits(jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1a79bb6d2_Trait> _1a79b32bc_buildTrait(jule::Ptr<_1a798d9c3_TraitDecl> _21719_decl);
inline jule::Ptr<_1a79bd371_EnumItem> _1a79b3586_buildEnumItem(jule::Ptr<_1a798aa7a_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _1a79b3850_buildEnumItems(jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1a79bdddd_Enum> _1a79b3d4a_buildEnum(jule::Ptr<_1a798b63b_EnumDecl> _24318_decl);
inline jule::Ptr<_1a79c0021_TypeEnumItem> _1a79b4026_buildTypeEnumItem(jule::Ptr<_1a798be66_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> _1a79b42bd_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a79b4587_buildTypeEnum(jule::Ptr<_1a798c5c6_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1a685a682_Var> _1a79b4851_buildVar(jule::Ptr<_1a7985338_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1a685a682_Var>> _1a79b4b1a_buildVars(jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _29518_decls);
inline jule::Ptr<_1a6808751_Impl> _1a79b4dd4_buildImpl(jule::Ptr<_1a798e133_Impl> _30318_decl);
inline jule::Ptr<_1a7a51503_Data> _1a6803a6a_buildAsComptimeMethodData(jule::Ptr<_1a79ab309_FnIns>* _142135_f);
inline jule::Ptr<_1a6817474_ImportInfo> _1a6803d78_findComptimePackage(jule::Ptr<_1a6837818_Sema>* _142929_s);
inline jule::Ptr<_1a7a51503_Data> _1a68041ec_buildComptimeTypeInfoData(jule::Ptr<_1a6837818_Sema>* _143535_s, jule::Ptr<_1a7a828ec_TypeKind>* _143550_t);
inline jule::Ptr<_1a7a51503_Data> _1a680453d_buildComptimeValue(jule::Ptr<_1a7a51503_Data>* _144328_d);
inline jule::Str _1a68076ea_toStrConstraints(jule::Ptr<_1a7a81016_InsGeneric> _14321_g);
inline jule::Bool _1a6807ab3_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a7a828ec_TypeKind>* _15434_g);
inline jule::Bool _1a6807d7c_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a79de45d_scopeChecker> _1a680a984_newScopeCheckerBase(jule::Ptr<_1a6837818_Sema>* _5829_s, jule::Ptr<_1a79ab309_FnIns> _5843_owner);
inline jule::Ptr<_1a79de45d_scopeChecker> _1a680ad4c_newScopeChecker(jule::Ptr<_1a6837818_Sema>* _6625_s, jule::Ptr<_1a79ab309_FnIns> _6639_owner);
inline jule::Ptr<_1a79dcdda_scopeLabel> _1a680b1c1_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a79de45d_scopeChecker> _7637_scope);
inline jule::Bool _1a680b589_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a680dba7_Scope>* _9034_sc);
inline jule::Bool _1a680b90d_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a680dba7_Scope>* _10434_sc);
inline jule::I64 _1a680bc82_countMatchType(jule::Ptr<_1a79db04d_Match>* _14720_m, jule::Ptr<_1a7a828ec_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1a7a51503_Data>> _1a680c04b_getDatasFromTupleData(jule::Ptr<_1a7a51503_Data>* _17131_d);
inline jule::Bool _1a680c887_checkMut(jule::Ptr<_1a6837818_Sema>* _20618_s, jule::Ptr<_1a7a51503_Data>* _20629_left, jule::Ptr<_1a7a51503_Data> _20646_right, jule::Ptr<_1a795c013_Token> _20660_op);
inline jule::Bool _1a680cd71_checkAssign(jule::Ptr<_1a6837818_Sema>* _22521_s, jule::Ptr<_1a7a51503_Data>* _22536_left, jule::Ptr<_1a7a51503_Data> _22553_right, jule::Ptr<_1a795c013_Token> _22567_op);
inline jule::Bool _1a680d13a_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1a680d404_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1a680d6bd_stmtIsDef(jule::Any* _27615_st);
inline jule::U64 _1a6376731_removeEqFromOp(jule::U64 _220119_op);
inline void _1a6376962_makeComptimeRange(jule::Ptr<_1a7a51503_Data>* _223027_d);
inline jule::Bool _1a6376e6d_canComptimeMatch(jule::Ptr<_1a7a51503_Data>* _225126_d);
inline jule::Ptr<_1a685a682_Var> _1a681495a_findVarInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a6814dcd_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1a7993357_Struct> _1a681530c_findStructInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1a79a8328_Fn> _1a68157b3_findFnInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1a79bb6d2_Trait> _1a6815b04_findTraitInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1a79bdddd_Enum> _1a6815e78_findEnumInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1a79c05e8_TypeEnum> _1a68162ec_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1a681683b_defByIdentPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1a681c875_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1a6834ea8_isValidModelForRef(jule::Any* _1328_m);
inline _1d974c80a_Log _1a683545e_compilerErr(jule::Ptr<_1a795c013_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1a68357d3_impIsLookupable(jule::Ptr<_1a6817474_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1a6835b13_appendRetVars(jule::Slice<jule::Ptr<_1a685a682_Var>>* _6823_dest, jule::Ptr<_1a79ab309_FnIns>* _6842_f);
inline void _1a6835dee_appendParamVars(jule::Slice<jule::Ptr<_1a685a682_Var>>* _9825_dest, jule::Ptr<_1a79ab309_FnIns>* _9844_f);
inline void _1a68361da_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _15834_dest, jule::Ptr<_1a79ab309_FnIns>* _15859_f);
inline jule::Ptr<_1a7a4b18a_SymbolTable> _1a683655e_findFile(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _19618_files, jule::Ptr<_1a7962799_File>* _19642_handler);
inline void _1a6836a15_pushSuggestion(_1d974c80a_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1a6858d67_pushImplemented(jule::Ptr<_1a79bb6d2_Trait> _288224_t, jule::Ptr<_1a7993357_Struct>* _288240_d);
inline void _1a6859153_pushImplements(jule::Ptr<_1a7993357_Struct>* _290024_s, jule::Ptr<_1a79bb6d2_Trait> _290040_t);
inline jule::Bool _1a7a36c69_traitHasReferenceReceiver(jule::Ptr<_1a79bb6d2_Trait>* _2831_t);
inline jule::Bool _1a7a37121_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a7a51503_Data>* _4333_d);
inline jule::Bool _1a7a37495_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a7a51503_Data>* _4830_d);
inline jule::Bool _1a7a3785d_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a7a51503_Data>* _7132_d);
inline jule::Bool _1a7a37bd2_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a7a51503_Data>* _10030_d);
inline void _1a7a440ea_checkMutRiskOfStructLit(jule::Ptr<_1a6837818_Sema>* _92033_s, jule::Ptr<_1a799b283_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a7a49e36_lenKind(void);
inline jule::Bool _1a7a4a288_isGoodValueToInfer(jule::Ptr<_1a7a51503_Data>* _142124_d);
inline jule::Ptr<_1a79718da_Directive> _1a7a79d9a_findDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _425923_directives, jule::Str _425954_d);
inline jule::Any _1a7a7a263_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1a6817474_ImportInfo> _426836_imp);
inline void _1a7a7a494_fitBitsize(jule::Ptr<_1a7a51503_Data>* _427720_d);
inline void _1a7a7a7c4_makeStructLitAlloc(jule::Ptr<_1a7a51503_Data>* _430628_d, jule::Ptr<_1a799b283_StructLitExprModel>* _430643_lit);
inline jule::Ptr<_1a685a682_Var> _1a7a7ab48_buildErrorVar(jule::Ptr<_1a680dba7_Scope>* _431723_s, jule::Ptr<_1a797a52b_FnCallExpr>* _431739_fc);
inline jule::Any _1a7a7aebc_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1a6837818_Sema> _433238_s);
inline jule::Bool _1a7a7b286_isOkForShifting(jule::Ptr<_1a7a51503_Data>* _435725_d);
inline jule::Bool _1a7a7b660_isInstancedStruct(jule::Ptr<_1a79960d5_StructIns> _437422_s);
inline jule::Bool _1a7a7b95c_isPtrArithmeticCompatible(jule::Ptr<_1a7a51503_Data>* _437835_l, jule::Ptr<_1a7a51503_Data>* _437850_r);
inline void _1a7a7bd03_applyCastKindModel(jule::Ptr<_1a7a51503_Data>* _439928_d, jule::Ptr<_1a7a828ec_TypeKind>* _439943_t, jule::Ptr<_1a795c013_Token>* _439962_token);
inline void _1a7a7c199_applyCastKind(jule::Ptr<_1a7a51503_Data>* _440823_d, jule::Ptr<_1a7a828ec_TypeKind>* _440838_t, jule::Ptr<_1a795c013_Token>* _440857_token);
inline jule::Ptr<_1a7a51503_Data> _1a7a7c3a8_buildVoidData(void);
inline jule::Str _1a7a7c72c_checkDataForIntegerIndexing(jule::Ptr<_1a7a51503_Data>* _441937_d, jule::Ptr<_1a795c013_Token>* _441952_token);
inline void _1a7a7cac3_applyCastModelByEnum(jule::Ptr<_1a7a51503_Data>* _444430_d, jule::Ptr<_1a79bdddd_Enum> _444444_e, jule::Ptr<_1a795c013_Token>* _444459_token);
inline void _1a7a7cdae_castConstByType(jule::Str* _445521_t, jule::Ptr<_1a7a51503_Data>* _445534_d);
inline void _1a7a7d3cb_updateModelToGenericIns(jule::Any* _448933_m, jule::Ptr<_1a79ab309_FnIns>* _448952_f);
inline jule::Bool _1a7a7d640_pushSubIdentFromExpr(jule::Any _450029_expr, jule::Ptr<_1a7972d92_SubIdentTypeDecl>* _450050_t);
inline jule::Str _1a7a7d909_constoa(jule::Ptr<_1bd82c384_Const>* _452313_c);
inline jule::Ptr<_1a7a51503_Data> _1a7a7dd38_evalEnumStatic(jule::Ptr<_1a79bdddd_Enum>* _453424_enm, jule::Ptr<_1a79bd371_EnumItem>* _453441_item, jule::Ptr<_1a795c013_Token>* _453463_token);
inline jule::Ptr<_1a799b283_StructLitExprModel> _1a7a7e102_isLitBased(jule::Any* _455120_m);
inline void _1a7a7e3dd_makeImplicitDeref(jule::Ptr<_1a7a51503_Data>* _456827_d, jule::Ptr<_1a795c013_Token> _456841_baseToken);
inline void _1ac2dad32_updateRefer(jule::Ptr<_1a79ae4d8_ReferenceStack> _457923_ref, jule::Ptr<_1a79ab309_FnIns>* _457946_old, jule::Ptr<_1a79ab309_FnIns>* _457959_new);
inline void _1a7a7ea70_makeVariadic(jule::Ptr<_1a7a51503_Data>* _458722_d, jule::Ptr<_1a7a828ec_TypeKind> _458736_elem);
inline jule::Bool _1a7a7ee9e_isVarCaptured(jule::Ptr<_1a79de45d_scopeChecker> _460118_r, jule::Ptr<_1a79de45d_scopeChecker> _460140_s, jule::Ptr<_1a685a682_Var> _460158_v);
inline jule::Bool _1a7a9d154_kindUsesGenerics(jule::Ptr<_1a7a828ec_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _171641_generics);
inline jule::Bool _1a7a9d51c_hasDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _172622_directives, jule::Str _172653_tag);
inline jule::Bool _1a7a9d7d6_canGetPtr(jule::Ptr<_1a7a51503_Data>* _173519_d);
inline jule::Bool _1a7a9db27_isValidForSptrType(jule::Ptr<_1a7a828ec_TypeKind>* _174728_t);
inline jule::Bool _1a7a9ddad_isValidForRef(jule::Ptr<_1a7a828ec_TypeKind>* _175623_t);
inline jule::Bool _1a7a9e177_isBuiltinStrConvertable(jule::Ptr<_1a7a828ec_TypeKind>* _175933_t);
inline jule::Str _1a7a9e441_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a795c013_Token>>* _176327_tokens);
inline jule::Ptr<_1a7a8a4c6_Prim> _1a7a9e81a_buildPrimType(jule::Str _178218_kind);
inline void _1a7a9ee03_applyImplicitCast(jule::Ptr<_1a7a828ec_TypeKind>* _181027_dest, jule::Ptr<_1a7a51503_Data>* _181049_d, jule::Ptr<_1a795c013_Token>* _181064_token);
inline jule::Bool _1a7aa01bc_validTypeForXof(jule::Ptr<_1a7a828ec_TypeKind>* _183825_t);
inline __jule_tuple_x_1a7a4b18a_SymbolTable__jule_tuple_s_1d974c80a_Log _1a7aa32d0_buildSymbols(jule::Ptr<_1a79705a9_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a79b549a_symbolBuilder> _1662_owner);
inline __jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log _1a7aa3753_analyzePackage(jule::Slice<jule::Ptr<_1a79705a9_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I64* _3065_flags);
inline __jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log _1a7aa3b82_AnalyzePackage(jule::Slice<jule::Ptr<_1a79705a9_Ast>> _7423_files, jule::Trait _7442_importer, jule::I64 _7462_flags);
inline jule::Ptr<_1a79ab309_FnIns> _1a7b64528_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7b64836_primTypeAlias(jule::Ptr<_1a7a828ec_TypeKind>* _6623_k);
inline jule::Ptr<_1a685a682_Var> _1a7b681db_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7b6852c_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1a7b687b3_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1a7b68a7c_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1a7b68d46_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1a7b69220_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1a7b69462_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1a7b697d6_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1a7a51503_Data> _1a7b69b5a_builtinCallerError(jule::Ptr<_1a7a5322a_Eval>* _30028_e, jule::Ptr<_1a797a52b_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1a7a51503_Data> _1a7b6a089_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _32226_e, jule::Ptr<_1a797a52b_FnCallExpr>* _32241_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b6a4b8_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _34628_e, jule::Ptr<_1a797a52b_FnCallExpr>* _34643_fc, jule::Ptr<_1a7a51503_Data>* _34665_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6a8e7_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _35826_e, jule::Ptr<_1a797a52b_FnCallExpr>* _35841_fc, jule::Ptr<_1a7a51503_Data>* _35863_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6ad26_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _42028_e, jule::Ptr<_1a797a52b_FnCallExpr>* _42043_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b6b486_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _44627_e, jule::Ptr<_1a797a52b_FnCallExpr>* _44642_fc, jule::Ptr<_1a7a51503_Data>* _44664_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6b7a5_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _49729_e, jule::Ptr<_1a797a52b_FnCallExpr>* _49744_fc, jule::Ptr<_1a7a51503_Data>* _49766_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6bc8e_callerCopySlice(jule::Ptr<_1a7a51503_Data>* _60625_dest, jule::Ptr<_1a7a5322a_Eval>* _60643_e, jule::Ptr<_1a797a52b_FnCallExpr>* _60658_fc, jule::Ptr<_1a7a51503_Data>* _60680_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6c1bd_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _64027_e, jule::Ptr<_1a797a52b_FnCallExpr>* _64042_fc, jule::Ptr<_1a7a51503_Data>* _64064_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6c542_callerLenSlice(jule::Ptr<_1a7a51503_Data>* _66524_expr, jule::Ptr<_1a7a51503_Data>* _66542_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6c8b6_callerLenMap(jule::Ptr<_1a7a51503_Data>* _67322_expr, jule::Ptr<_1a7a51503_Data>* _67340_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6cc3a_callerLenArr(jule::Ptr<_1a7a51503_Data>* _68122_expr, jule::Ptr<_1a7a51503_Data>* _68140_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6d0ae_callerLenStr(jule::Ptr<_1a7a51503_Data>* _68822_expr, jule::Ptr<_1a7a51503_Data>* _68840_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6d433_callerLenComptime(jule::Ptr<_1a7a51503_Data>* _70127_d, jule::I64 _70137_n);
inline jule::Ptr<_1a7a51503_Data> _1a7b6d862_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _70826_e, jule::Ptr<_1a797a52b_FnCallExpr>* _70841_fc, jule::Ptr<_1a7a51503_Data>* _70863_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6dbd6_callerCapSlice(jule::Ptr<_1a7a51503_Data>* _74624_expr, jule::Ptr<_1a7a51503_Data>* _74642_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6e115_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _75426_e, jule::Ptr<_1a797a52b_FnCallExpr>* _75441_fc, jule::Ptr<_1a7a51503_Data>* _75463_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6e5ee_callerDeleteMap(jule::Ptr<_1a7a5322a_Eval>* _77725_e, jule::Ptr<_1a797a52b_FnCallExpr>* _77740_fc, jule::Ptr<_1a7a51503_Data>* _77762_expr, jule::Ptr<_1a7a51503_Data>* _77780_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6ea2d_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _80629_e, jule::Ptr<_1a797a52b_FnCallExpr>* _80644_fc, jule::Ptr<_1a7a51503_Data>* _80666_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b6ee5c_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _82929_e, jule::Ptr<_1a797a52b_FnCallExpr>* _82944_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b7038b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _87340_e, jule::Ptr<_1a797a52b_FnCallExpr>* _87355_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b70a0c_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _90941_e, jule::Ptr<_1a797a52b_FnCallExpr>* _90956_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b70e3b_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _92938_e, jule::Ptr<_1a797a52b_FnCallExpr>* _92953_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b7136a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _94138_e, jule::Ptr<_1a797a52b_FnCallExpr>* _94153_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b71799_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _95439_e, jule::Ptr<_1a797a52b_FnCallExpr>* _95454_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b71bc8_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _96743_e, jule::Ptr<_1a797a52b_FnCallExpr>* _96758_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b72107_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _102735_e, jule::Ptr<_1a797a52b_FnCallExpr>* _102750_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b72536_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _105236_e, jule::Ptr<_1a797a52b_FnCallExpr>* _105251_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b72965_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _107733_e, jule::Ptr<_1a797a52b_FnCallExpr>* _107748_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b72d94_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _110045_e, jule::Ptr<_1a797a52b_FnCallExpr>* _110060_fc, jule::Ptr<_1a7a51503_Data>* );
inline jule::Ptr<_1a7a51503_Data> _1a7b732c3_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _112744_e, jule::Ptr<_1a797a52b_FnCallExpr>* _112759_fc, jule::Ptr<_1a7a51503_Data>* _112781_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b73702_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _117834_e, jule::Ptr<_1a797a52b_FnCallExpr>* _117849_fc, jule::Ptr<_1a7a51503_Data>* _117871_d);
inline jule::Ptr<_1a7a51503_Data> _1a7b73b31_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _118736_e, jule::Ptr<_1a797a52b_FnCallExpr>* _118751_fc, jule::Ptr<_1a7a51503_Data>* _118773_d);
inline jule::Ptr<_1a63ee644_FileInfo> _1a63eecb5_ParseFile(jule::Ptr<_1a7962799_File> _2318_f);
inline __jule_tuple_x_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log _1a640038c_parseFileset(jule::Ptr<_1a7962799_File> _5521_f);
inline jule::Ptr<_1a79824de_ScopeTree> _1a6400d2c_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a64011b2_isSt(jule::Ptr<_1a795c013_Token> _499_current, jule::Ptr<_1a795c013_Token> _4926_prev);
inline jule::Bool _1a6401536_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a795c013_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1a64018ee_nextStPos(jule::Slice<jule::Ptr<_1a795c013_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1a795c013_Token__jule_tuple_bool _1a6401c73_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a795c013_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1a64020a3_stmt>> _1a640245a_splitStmts(jule::Slice<jule::Ptr<_1a795c013_Token>>* _15120_tokens);
inline jule::Bool _1a641aab1_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1a641adbe_isTypeRange(jule::Slice<jule::Ptr<_1a795c013_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1a795c013_Token>> _1a641b188_getBlockExpr(jule::Slice<jule::Ptr<_1a795c013_Token>>* _93322_tokens);
inline __jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token _1a641b551_splitDelim(jule::Slice<jule::Ptr<_1a795c013_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1a641b81a_findLowestPrecOp(jule::Slice<jule::Ptr<_1a795c013_Token>>* _100422_tokens);
inline jule::Ptr<_1a797811c_IdentExpr> _1a641bad4_buildIdentExpr(jule::Ptr<_1a795c013_Token>* _106924_token);
inline __jule_tuple_sx_1a795c013_Token__jule_tuple_int _1a641bd9d_getRangeExprTokens(jule::Slice<jule::Ptr<_1a795c013_Token>>* _107728_tokens);
inline jule::Bool _1a641c277_isAnonFnHead(jule::Slice<jule::Ptr<_1a795c013_Token>>* _110018_tokens);
inline jule::Bool _1a641ce7b_checkAssignTokens(jule::Slice<jule::Ptr<_1a795c013_Token>>* _1623_tokens);
inline _1d974c80a_Log _1a641e147_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a7962799_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1a795c013_Token>> _1a641e675_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a795c013_Token>>* _6959_tokens);
inline __jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token _1a641e93e_rangeLast(jule::Slice<jule::Ptr<_1a795c013_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log _1a641ede5_parts(jule::Slice<jule::Ptr<_1a795c013_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1a642017b_getCloseOfBrace(jule::U64 _16720_left);
inline _1d974c80a_Log _1a64205aa_compilerErr(jule::Ptr<_1a795c013_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1a6420951_pushSuggestion(_1d974c80a_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1a79724bd_TypeDecl> _1a6432831_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a7ce846a_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a7ce85ad_checkArch(jule::Str _2814_arg);
inline jule::Bool _1a7ce8756_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a7d140e0_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a7d14365_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a7d14651_initVars(jule::Slice<jule::Str>* _5518_vars, _1a7d13cc1_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1a6436934_readBuff(jule::Str _3013_path);
inline _1d974c80a_Log _1a6436c42_flatCompilerErr(jule::Str _4120_text);
inline void _1a643b560_pushPasses(jule::Ptr<_1a681a39a_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes);
inline jule::Slice<jule::Str> _1a643b928_getAllUniquePasses(jule::Ptr<_1a681a39a_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _12853_uses);
inline _1a7d13cc1_CompileInfo _1a643bb37_buildCompileInfo(void);
inline void _1a643c3eb_IterPackages(jule::Ptr<_1a6439bac_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a681a39a_Package>*> _731_f);
inline void _1a643c72b_IterFiles(jule::Ptr<_1a681a39a_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a7a4b18a_SymbolTable>*> _1634_f);
inline void _1a643cac2_iterTraitInheritMethods(jule::Ptr<_1a79bb6d2_Trait>* _2233_base, jule::Ptr<_1a79bb6d2_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a79a8328_Fn>*> _2263_f);
inline void _1a643cee0_iterTraitInheritMethods1(jule::Ptr<_1a79bb6d2_Trait>* _3134_base, jule::Ptr<_1a79bb6d2_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a79a8328_Fn>*> _3164_f);
inline void _1a643d298_IterTraitMethods(jule::Ptr<_1a79bb6d2_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a79a8328_Fn>*> _3937_f);
inline jule::Bool _1a64455e1_IsForwarded(jule::Ptr<_1a680dba7_Scope>* _2317_s);
inline jule::Bool _1a64458ee_IsExprComesFromBind(jule::Ptr<_1a7a51503_Data>* _3925_d);
inline jule::Bool _1a6445bb8_IsAny(jule::Ptr<_1a7a828ec_TypeKind>* _5115_t);
inline jule::Bool _1a6446009_IsClosure(jule::Ptr<_1a799d2eb_AnonFnExprModel>* _6015_m);
inline jule::Bool _1a6446290_IsOpMethod(jule::Ptr<_1a79a8328_Fn>* _6316_m);
inline jule::Bool _1a6446614_IsTraitMethod(jule::Ptr<_1a79960d5_StructIns>* _7923_owner, jule::Ptr<_1a79ab309_FnIns>* _7943_f);
inline jule::Bool _1a6446988_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p);
inline jule::Ptr<_1a79718da_Directive> _1a64473a1_FindDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _1a6447769_HasDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::Bool _1a6447add_ContainsTraitMethod(jule::Ptr<_1a79bb6d2_Trait>* _2429_t, jule::Str* _2441_ident);
inline jule::I64 _1a64482a3_FindTraitTypeOffsetS(jule::Ptr<_1a79bb6d2_Trait> _3725_t, jule::Ptr<_1a79960d5_StructIns> _3740_s);
inline jule::I64 _1a6448627_FindTraitTypeOffset(jule::Ptr<_1a79bb6d2_Trait> _6024_t, jule::Ptr<_1a7a828ec_TypeKind> _6039_k);
inline jule::Bool _1ac559534_isOrdered(jule::Ptr<_1a7993357_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a7993357_Struct>> _1425_s);
inline jule::Bool _1ac560ace_isOrdered(jule::Ptr<_1a685a682_Var>* _1418_t, jule::Slice<jule::Ptr<_1a685a682_Var>> _1425_s);
inline void _1ac556311_order(jule::Slice<jule::Ptr<_1a7993357_Struct>>* _3718_s);
inline void _1ac55b965_order(jule::Slice<jule::Ptr<_1a685a682_Var>>* _3718_s);
inline void _1a86c5484_EliminateDefines(jule::Ptr<_1a6439bac_IR>* _30526_ir);
inline void _1a86c9400_eliminateDeadCodeOfScope(jule::Ptr<_1a680dba7_Scope> _23833_s);
inline void _1a86c9675_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _25033_funcs);
inline void _1a86c98a6_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a7993357_Struct>>* _25937_structs);
inline void _1a86c9b5e_eliminateFunctionsScopePackage(jule::Ptr<_1a681a39a_Package>* _26740_pkg);
inline void _1a86c9d5c_eliminateScopePackage(jule::Ptr<_1a681a39a_Package>* _27431_pkg);
inline void _1a86ca08d_EliminateScopes(jule::Ptr<_1a6439bac_IR>* _27925_ir);
inline jule::Uintptr _1a7b73dd9_typeData(jule::Any* _1714_m);
inline jule::Bool _1a7b742a2_equalConst(jule::Ptr<_1bd82c384_Const> _2115_l, jule::Ptr<_1bd82c384_Const> _2126_r);
inline jule::Bool _1a7b74626_equalCasting(jule::Ptr<_1a799bb13_CastingExprModel> _4017_l, jule::Ptr<_1a799bb13_CastingExprModel> _4039_r);
inline jule::Bool _1a7b749de_equalUnary(jule::Ptr<_1a799a8ae_UnaryExprModel> _4715_l, jule::Ptr<_1a799a8ae_UnaryExprModel> _4735_r);
inline jule::Bool _1a7b74d63_equalIndexing(jule::Ptr<_1a799cd45_IndexingExprModel> _5418_l, jule::Ptr<_1a799cd45_IndexingExprModel> _5441_r);
inline jule::Bool _1a7b751d7_equalBinary(jule::Ptr<_1a799a4d5_BinaryExprModel> _5916_l, jule::Ptr<_1a799a4d5_BinaryExprModel> _5937_r);
inline jule::Bool _1a7b7555b_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1a7b7b177_possibleNilRemove(jule::Ptr<_1a7b7a198_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1a7b7b540_isGuaranteedNonNilExpr(jule::Ptr<_1a7b7a198_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1a7b7b809_isNilValidType(jule::Ptr<_1a7a828ec_TypeKind> _9223_t);
inline jule::Uintptr _1a7b7bb4a_getNilVar(jule::Any _9414_m);
inline jule::Bool _1a64500bd_isConstantValidConditionalCase(jule::Ptr<_1a680e0c5_If>* _68236_i);
inline jule::Bool _1a64503cb_isUnreachableExpr(jule::Any* _69123_expr);
inline jule::Bool _1a6450695_isConstantValidMatchCase(jule::Ptr<_1a79dbb97_Case>* _70630_case);
inline jule::Bool _1a64509d6_isUnreachableConditionalCase(jule::Ptr<_1a680e0c5_If>* _71534_i);
inline jule::Bool _1a6450c6c_isUnreachableMatchCase(jule::Ptr<_1a79dbb97_Case>* _71928_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a645624a_checkForBitShiftOpt(jule::Ptr<_1a7999eda_OperandExprModel>* _58325_l, jule::Ptr<_1a7999eda_OperandExprModel>* _58348_r);
inline jule::Bool _1a6456613_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r);
inline void _1a64587d0_possibleDynamicRemove(jule::Ptr<_1a6457746_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1a6458add_isDynamicValidType(jule::Ptr<_1a7a828ec_TypeKind> _8727_t);
inline jule::Ptr<_1a7a828ec_TypeKind> _1a645901c_isTypeGuaranteedDynamicData(jule::Ptr<_1a6457746_dynamic>* _8937_dy, jule::Ptr<_1a7a828ec_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1a645935d_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1a645cdbc_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1a645d285_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1a645d609_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1a645d939_possibleBoundaryRemove(jule::Ptr<_1a645bd55_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a645dc03_isBoundaryRiskyType(jule::Ptr<_1a7a828ec_TypeKind> _13628_t);
inline jule::Bool _1a645debc_isBoundaryValidType(jule::Ptr<_1a7a828ec_TypeKind> _14128_t);
inline jule::Uintptr _1a645e286_getBoundaryVar(jule::Any _14319_m);
inline void _1a6462311_PushOptLevel(jule::I64 _3217_level);
inline void _1a86cd855_detectEnabled(void);
inline void _1a8705a58_Throw(jule::Str _910_msg);
inline jule::U64 _1a9e400c6_unix(void);
inline jule::Bool _1a9d74a22_isCopyOptimizable(jule::Ptr<_1a7a51503_Data>* _104823_expr);
inline jule::Bool _1a9d74dda_isIterCopyOptimizable(jule::Ptr<_1a7a51503_Data>* _105927_expr, jule::Ptr<_1a685a682_Var>* _105941_v);
inline jule::Bool _1a9d75319_captureVarHandling(jule::Ptr<_1a9e48563_ObjectCoder>* _106628_oc, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _106651_m, jule::Ptr<_1a685a682_Var>* _106677_v);
inline jule::Str _1a9d861b5_decomposeCommonEsq(jule::U8 _158323_b);
inline jule::Str _1a9d864c3_sbtoa(jule::U8 _161010_b);
inline void _1a9d867ae_cstrBytes(_200880c8a_StrBuilder* _163019_s, jule::Str _163034_ctx);
inline void _1a9d86ade_cstrLit(_200880c8a_StrBuilder* _163617_s, jule::Str _163632_ctx);
inline void _1a9d86e85_ftoa(_200880c8a_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I64 _164237_bitsize);
inline void _1a9d87271_itoa(_200880c8a_StrBuilder* _166014_s, jule::I64 _166029_x);
inline void _1a9d8755c_utoa(_200880c8a_StrBuilder* _167714_s, jule::U64 _167729_x);
inline jule::Slice<jule::U8> _1a9e55e55_concatAllParts(jule::Slice<jule::Ptr<_1a795c013_Token>> _135719_parts);
inline jule::Bool _1a9e56263_isHeadDecl(jule::Ptr<_1a79a8328_Fn>* _137320_m);
inline jule::Bool _1a9e6511d_shouldInitialized(jule::Ptr<_1a7a828ec_TypeKind>* _46427_t);
inline void _1d7ce3de7_printErrorMessage(jule::Str _3022_msg);
inline void _1d7ce416c_help(jule::Slice<jule::Str>* _3510_args);
inline void _1d7ce439d_version(jule::Slice<jule::Str>* _6313_args);
inline void _1d7ce45ac_toolDistos(void);
inline void _1d7ce4722_toolDistarch(void);
inline void _1d7ce4920_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1d7ce4b51_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1d7ce4e92_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1d7ce51d4_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1d7ce537c_showInfo(void);
void entry_point(void);
inline void _1d7ce5da5_enableVtp(void);
inline void _1d7ce6070_init(void);
inline void _1a9a9072c_init(void);
inline jule::Ptr<_21a5ce0d9_File> _1a9a909e6_openOutput(jule::Str* _4316_path);
inline void _1a9a90b8e_clearObjects(void);
inline void _1a9a90e9c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1a9a91266_isCppSourceFile(jule::Str _9920_path);
inline void _1a9a91497_pushCompCmdClang(_200880c8a_StrBuilder* _10726_cmd);
inline void _1a9a916c8_pushCompCmdGcc(_200880c8a_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1a9a91b5c_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a6439bac_IR>* _15936_ir);
inline jule::Str _1a9a91ce4_getCompilePath(void);
inline void _1a9a92025_applyTargetIndependentOptimizations(jule::Ptr<_1a6439bac_IR>* _20545_ir);
inline void _1a9a921bd_checkCompilerFlag(void);
inline void _1a9a923cc_checkTargetArch(jule::Str _22720_arch);
inline void _1a9a9260d_checkTargetOs(jule::Str _23518_os);
inline void _1a9a9283e_checkTargetFlag(jule::Str* _24321_target);
inline void _1a9a92a70_checkOptFlag(jule::Str* _26618_opt);
inline void _1a9a92e38_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a9a93103_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1a9a93312_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1a6439bac_IR> _1a9a935cb_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1a9a9380c_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1a79c3530_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a79c2c27_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB);
	void(*_1a79c3145_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB);
	jule::I64(*_1a79c33cb_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a681455e_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a681333d_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a68135c4_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a6813915_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1a6817474_ImportInfo>(*_1a6813c56_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log(*_1a6814152_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1a681440a_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a6817474_ImportInfo> _4128__0);
};

struct _1a7a82446_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a7a81ea1_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a7a822e2_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other);
};

struct _1a7aa24dd_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a6817474_ImportInfo>(*_1a7aa07c7_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _929_selector);
	jule::Ptr<_1a685a682_Var>(*_1a7aa0bc3_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a7a81b0a_TypeAlias>(*_1a7aa10be_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a7993357_Struct>(*_1a7aa14ba_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a79a8328_Fn>(*_1a7aa18b6_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a79bb6d2_Trait>(*_1a7aa1c07_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a79bdddd_Enum>(*_1a7aa2048_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a79c05e8_TypeEnum>(*_1a7aa2389_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1a9a75a86_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a9a8878b_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a9a78a23_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a9a75800_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a9a75943_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79c5dd4_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79c9190_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79cbb32_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d03b6_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d197d_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a680058e_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a643722b_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79960d5_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79ab309_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79bb6d2_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79bdddd_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79c05e8_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79c3750_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79c4223_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79c74ce_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79ca78a_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79cd22c_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d3078_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a67ecc40_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6801b89_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a828ec_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a8a4c6_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a8e002_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a8e9c5_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a905b9_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a91169_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a91ce6_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a927b9_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a9e576e8_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79de45d_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6817474_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a681a39a_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6837818_Sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a4b18a_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad74b78b_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad75033e_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7539a2_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad757159_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad75a7bc_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a685a682_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798e133_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7988eda_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798d286_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798417d_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798d9c3_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7985338_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798b63b_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798c5c6_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bd82c384_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d96de_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a680dba7_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a3cb3_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a51503_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a50c2_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a2a3c_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a1079_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a1453_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a1c06_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a21ac_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a38d9_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a3510_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a53be_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799c4b5_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a680e7e0_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a680eadc_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79867ac_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a6810093_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79871b4_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a68109de_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a636e581_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d9aa7_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d9e81_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79da437_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799cd45_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79da8dd_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79db04d_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79dc3a1_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79d947a_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79dc77a_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79824de_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7976802_Expr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798879d_Conditional>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7985e82_Iter>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7987967_ContSt>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797eaa2_LabelSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797ee7b_GotoSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7980e6b_AssignSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7989caa_MatchCase>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7980278_FallSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a798758d_BreakSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7985712_RetSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79771c6_UseExpr>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a8328_Fn>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7993357_Struct>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7a81b0a_TypeAlias>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7974789_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79738ed_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7973ee7_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7973568_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7974ed7_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7973bea_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7972ac8_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7978c88_VariadicExpr>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799c88e_SliceExprModel>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797b021_FieldExprPair>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797c62c_KeyValPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797811c_IdentExpr>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79773e6_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a0ba0_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797a52b_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a48eb_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a08a3_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7979915_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7972d92_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79788ae_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79724bd_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797953b_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797326b_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799e20e_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799bb13_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797cd58_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799b283_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a04c9_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799e792_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a0133_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799db7b_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799d2eb_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7976abb_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797778c_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7977b66_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797d7b5_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797de25_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7979162_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797b84b_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a797bd02_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7979dbb_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799a8ae_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799a4d5_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799b580_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a182c_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a2663_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a2d39_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a3136_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a4467_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a4654_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a79a4be8_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b76194_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b78a7b_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b7776c_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b77a69_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b782c8_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b786a2_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b76518_SwapExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b768e2_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b771d9_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b78d78_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b76c66_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a799addc_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b79175_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a7b77dee_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1aaeae9a2_1aae6623e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB) {
	_1a79c6a1c_ready(_self_.as<_1a79c5dd4_comptimeStructFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aaeae9a2_1aae7e004(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB) {
	_1a79c9cc8_ready(_self_.as<_1a79c9190_comptimeStatics>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aaeae9a2_1aae6c685(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB) {
	_1a79cc76a_ready(_self_.as<_1a79cbb32_comptimeEnumFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aaeae9a2_1aae729ba(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB) {
	_1a79d0ebb_ready(_self_.as<_1a79d03b6_comptimeParams>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aaeae9a2_1aae7adbe(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB) {
	_1a79d25b6_ready(_self_.as<_1a79d197d_comptimeTypeInfos>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aaeae9a2_1aae8deae(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a685a682_Var>* _2426_keyA, jule::Ptr<_1a685a682_Var>* _2443_keyB) {
	_1a68011c7_ready(_self_.as<_1a680058e_comptimeFiles>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aaeb00e0_1aae6623e(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB) {
	_1a79c6e3a_step(_self_.as<_1a79c5dd4_comptimeStructFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aaeb00e0_1aae7e004(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB) {
	_1a79ca1e6_step(_self_.as<_1a79c9190_comptimeStatics>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aaeb00e0_1aae6c685(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB) {
	_1a79ccb88_step(_self_.as<_1a79cbb32_comptimeEnumFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aaeb00e0_1aae729ba(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB) {
	_1a79d13d9_step(_self_.as<_1a79d03b6_comptimeParams>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aaeb00e0_1aae7adbe(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB) {
	_1a79d29d4_step(_self_.as<_1a79d197d_comptimeTypeInfos>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aaeb00e0_1aae8deae(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a685a682_Var>* _2533_keyA, jule::Ptr<_1a685a682_Var>* _2550_keyB) {
	_1a68015e5_step(_self_.as<_1a680058e_comptimeFiles>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline jule::I64 __jule_trait_method_1aaeb082c_1aae6623e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c71c1_len(_self_.as<_1a79c5dd4_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aaeb082c_1aae7e004(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79ca47c_len(_self_.as<_1a79c9190_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1aaeb082c_1aae6c685(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79cce1e_len(_self_.as<_1a79cbb32_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aaeb082c_1aae729ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79d1670_len(_self_.as<_1a79d03b6_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1aaeb082c_1aae7adbe(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79d2c6a_len(_self_.as<_1a79d197d_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1aaeb082c_1aae8deae(jule::Ptr<jule::Uintptr> _self_) {
	return _1a680187b_len(_self_.as<_1a680058e_comptimeFiles>().alloc);
}
inline void __jule_trait_method_1aaeb0ca0_1ac29d80b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a6437ced_SetModPath(_self_.as<_1a643722b_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1aaeb1256_1ac29d80b(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6438084_GetModPath(_self_.as<_1a643722b_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb16b8_1ac29d80b(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1a64383c5_ModById(_self_.as<_1a643722b_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1a6817474_ImportInfo> __jule_trait_method_1aaeb1bd5_1ac29d80b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a6438716_GetImport(_self_.as<_1a643722b_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log __jule_trait_method_1aaeb2246_1ac29d80b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1a6438b12_ImportPackage(_self_.as<_1a643722b_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1aaeb2b81_1ac29d80b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a6817474_ImportInfo> _4128__0) {
	_1a6438dba_Imported(_self_.as<_1a643722b_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab734017(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7996459_Str(_self_.as<_1a79960d5_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab7334ab(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79ab64a_Str(_self_.as<_1a79ab309_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab74ac54(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79bba9a_Str(_self_.as<_1a79bb6d2_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab725833(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79be262_Str(_self_.as<_1a79bdddd_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab72c719(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c0939_Str(_self_.as<_1a79c05e8_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae7972a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c3ac4_Str(_self_.as<_1a79c3750_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae68d79(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c45db_Str(_self_.as<_1a79c4223_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae6623e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c6258_Str(_self_.as<_1a79c5dd4_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae81b3e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c7853_Str(_self_.as<_1a79c74ce_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae7e004(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79c9514_Str(_self_.as<_1a79c9190_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae702e2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79cac1e_Str(_self_.as<_1a79ca78a_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae6c685(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79cbea6_Str(_self_.as<_1a79cbb32_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae75605(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79cd5a1_Str(_self_.as<_1a79cd22c_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae729ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79d0707_Str(_self_.as<_1a79d03b6_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae7adbe(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79d1d02_Str(_self_.as<_1a79d197d_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1a8555512(jule::Ptr<jule::Uintptr> _self_) {
	return _1a79d33ec_Str(_self_.as<_1a79d3078_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae8544a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a67ed0b4_Str(_self_.as<_1a67ecc40_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae8deae(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6800913_Str(_self_.as<_1a680058e_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aae8a6a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a6802250_Str(_self_.as<_1a6801b89_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab7164d3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a82cb5_Str(_self_.as<_1a7a828ec_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab71ac02(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a8a817_Str(_self_.as<_1a7a8a4c6_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab72238a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a8e376_Str(_self_.as<_1a7a8e002_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab731b80(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a8ee59_Str(_self_.as<_1a7a8e9c5_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aadb1684(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a9093d_Str(_self_.as<_1a7a905b9_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1aadaeb49(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a914dd_Str(_self_.as<_1a7a91169_Map>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab730299(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a9216a_Str(_self_.as<_1a7a91ce6_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ab723b0b(jule::Ptr<jule::Uintptr> _self_) {
	return _1a7a92b3d_Str(_self_.as<_1a7a927b9_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1aaeb31c0_1ad241924(jule::Ptr<jule::Uintptr> _self_) {
	return _1a9e57ab1_Str(_self_.as<_1a9e576e8_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab734017(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a799679a_Equal(_self_.as<_1a79960d5_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab7334ab(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79ab98b_Equal(_self_.as<_1a79ab309_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab74ac54(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79bbddb_Equal(_self_.as<_1a79bb6d2_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab725833(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79be5a3_Equal(_self_.as<_1a79bdddd_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab72c719(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79c0c7a_Equal(_self_.as<_1a79c05e8_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae7972a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79c3e15_Equal(_self_.as<_1a79c3750_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae68d79(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79c492c_Equal(_self_.as<_1a79c4223_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae6623e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79c6599_Equal(_self_.as<_1a79c5dd4_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae81b3e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79c7b94_Equal(_self_.as<_1a79c74ce_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae7e004(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79c9855_Equal(_self_.as<_1a79c9190_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae702e2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79cb060_Equal(_self_.as<_1a79ca78a_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae6c685(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79cc2e7_Equal(_self_.as<_1a79cbb32_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae75605(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79cd8e2_Equal(_self_.as<_1a79cd22c_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae729ba(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79d0a48_Equal(_self_.as<_1a79d03b6_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae7adbe(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79d2143_Equal(_self_.as<_1a79d197d_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1a8555512(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a79d373d_Equal(_self_.as<_1a79d3078_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae8544a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a67ed405_Equal(_self_.as<_1a67ecc40_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae8deae(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a6800c54_Equal(_self_.as<_1a680058e_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aae8a6a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a6802591_Equal(_self_.as<_1a6801b89_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab7164d3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a83106_Equal(_self_.as<_1a7a828ec_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab71ac02(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a8ab58_Equal(_self_.as<_1a7a8a4c6_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab72238a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a8e6b7_Equal(_self_.as<_1a7a8e002_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab731b80(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a9029a_Equal(_self_.as<_1a7a8e9c5_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aadb1684(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a90c7e_Equal(_self_.as<_1a7a905b9_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1aadaeb49(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a9182e_Equal(_self_.as<_1a7a91169_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab730299(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a924ab_Equal(_self_.as<_1a7a91ce6_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ab723b0b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a7a92e7e_Equal(_self_.as<_1a7a927b9_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aaeb3676_1ad241924(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _5618_other) {
	return _1a9e57e02_Equal(_self_.as<_1a9e576e8_customType>(), _5618_other);
}
inline jule::Ptr<_1a6817474_ImportInfo> __jule_trait_method_1aaeb3c3c_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _929_selector) {
	return _1a79de903_SelectPackage(_self_.as<_1a79de45d_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a6817474_ImportInfo> __jule_trait_method_1aaeb3c3c_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _929_selector) {
	return _1a681795d_SelectPackage(_self_.as<_1a6817474_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a6817474_ImportInfo> __jule_trait_method_1aaeb3c3c_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _929_selector) {
	return _1a681a840_SelectPackage(_self_.as<_1a681a39a_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a6817474_ImportInfo> __jule_trait_method_1aaeb3c3c_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _929_selector) {
	return _1a6837cad_SelectPackage(_self_.as<_1a6837818_Sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a6817474_ImportInfo> __jule_trait_method_1aaeb3c3c_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _929_selector) {
	return _1a7a4b674_SelectPackage(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1a685a682_Var> __jule_trait_method_1aaeb4ac8_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a79decee_FindVar(_self_.as<_1a79de45d_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a685a682_Var> __jule_trait_method_1aaeb4ac8_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a6817d59_FindVar(_self_.as<_1a6817474_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a685a682_Var> __jule_trait_method_1aaeb4ac8_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a681ac3b_FindVar(_self_.as<_1a681a39a_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a685a682_Var> __jule_trait_method_1aaeb4ac8_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a68381a9_FindVar(_self_.as<_1a6837818_Sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a685a682_Var> __jule_trait_method_1aaeb4ac8_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a7a4ba70_FindVar(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a7a81b0a_TypeAlias> __jule_trait_method_1aaeb5205_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a79e01ea_FindTypeAlias(_self_.as<_1a79de45d_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7a81b0a_TypeAlias> __jule_trait_method_1aaeb5205_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a6818255_FindTypeAlias(_self_.as<_1a6817474_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7a81b0a_TypeAlias> __jule_trait_method_1aaeb5205_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a681b137_FindTypeAlias(_self_.as<_1a681a39a_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7a81b0a_TypeAlias> __jule_trait_method_1aaeb5205_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a68385a5_FindTypeAlias(_self_.as<_1a6837818_Sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7a81b0a_TypeAlias> __jule_trait_method_1aaeb5205_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a7a4be6b_FindTypeAlias(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a7993357_Struct> __jule_trait_method_1aaeb5865_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a79e05e6_FindStruct(_self_.as<_1a79de45d_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7993357_Struct> __jule_trait_method_1aaeb5865_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a6818651_FindStruct(_self_.as<_1a6817474_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7993357_Struct> __jule_trait_method_1aaeb5865_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a681b533_FindStruct(_self_.as<_1a681a39a_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7993357_Struct> __jule_trait_method_1aaeb5865_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a68389a1_FindStruct(_self_.as<_1a6837818_Sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a7993357_Struct> __jule_trait_method_1aaeb5865_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a7a4c367_FindStruct(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a79a8328_Fn> __jule_trait_method_1aaeb5ec5_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a79e09e2_FindFn(_self_.as<_1a79de45d_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a79a8328_Fn> __jule_trait_method_1aaeb5ec5_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a6818a4c_FindFn(_self_.as<_1a6817474_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a79a8328_Fn> __jule_trait_method_1aaeb5ec5_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a681b92e_FindFn(_self_.as<_1a681a39a_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a79a8328_Fn> __jule_trait_method_1aaeb5ec5_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a6838d9c_FindFn(_self_.as<_1a6837818_Sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a79a8328_Fn> __jule_trait_method_1aaeb5ec5_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a7a4c763_FindFn(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a79bb6d2_Trait> __jule_trait_method_1aaeb6635_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a79e0d33_FindTrait(_self_.as<_1a79de45d_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a79bb6d2_Trait> __jule_trait_method_1aaeb6635_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a6818d8d_FindTrait(_self_.as<_1a6817474_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a79bb6d2_Trait> __jule_trait_method_1aaeb6635_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a681bc70_FindTrait(_self_.as<_1a681a39a_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a79bb6d2_Trait> __jule_trait_method_1aaeb6635_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a68391dd_FindTrait(_self_.as<_1a6837818_Sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a79bb6d2_Trait> __jule_trait_method_1aaeb6635_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a7a4caa4_FindTrait(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1a79bdddd_Enum> __jule_trait_method_1aaeb6bda_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a79e1174_FindEnum(_self_.as<_1a79de45d_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a79bdddd_Enum> __jule_trait_method_1aaeb6bda_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a68191ce_FindEnum(_self_.as<_1a6817474_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a79bdddd_Enum> __jule_trait_method_1aaeb6bda_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a681c0b1_FindEnum(_self_.as<_1a681a39a_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a79bdddd_Enum> __jule_trait_method_1aaeb6bda_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a683952e_FindEnum(_self_.as<_1a6837818_Sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a79bdddd_Enum> __jule_trait_method_1aaeb6bda_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a7a4cde5_FindEnum(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1a79c05e8_TypeEnum> __jule_trait_method_1aaeb7290_1aae2123d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a79e14b5_FindTypeEnum(_self_.as<_1a79de45d_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a79c05e8_TypeEnum> __jule_trait_method_1aaeb7290_1ab737658(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a6819520_FindTypeEnum(_self_.as<_1a6817474_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a79c05e8_TypeEnum> __jule_trait_method_1aaeb7290_1ab738758(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a681c402_FindTypeEnum(_self_.as<_1a681a39a_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a79c05e8_TypeEnum> __jule_trait_method_1aaeb7290_1ab735678(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a6839870_FindTypeEnum(_self_.as<_1a6837818_Sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1a79c05e8_TypeEnum> __jule_trait_method_1aaeb7290_1ab736118(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a7a4d236_FindTypeEnum(_self_.as<_1a7a4b18a_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1ad75c6d1_1ad74b78b(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad74bba9_Name(_self_.as<_1ad74b78b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75c6d1_1ad75033e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad74eeba_Name(_self_.as<_1ad75033e_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75c6d1_1ad7539a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad75362d_Name(_self_.as<_1ad7539a2_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75c6d1_1ad757159(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad756cd5_Name(_self_.as<_1ad757159_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75c6d1_1ad75a7bc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad75a448_Name(_self_.as<_1ad75a7bc_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad75de30_1ad74b78b(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad74c0b6_Short(_self_.as<_1ad74b78b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad75de30_1ad75033e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad7508b1_Short(_self_.as<_1ad75033e_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad75de30_1ad7539a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad754024_Short(_self_.as<_1ad7539a2_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad75de30_1ad757159(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad7576cb_Short(_self_.as<_1ad757159_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad75de30_1ad75a7bc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad75ad3e_Short(_self_.as<_1ad75a7bc_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75e33c_1ad74b78b(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad74bd0d_What(_self_.as<_1ad74b78b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75e33c_1ad75033e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad75062a_What(_self_.as<_1ad75033e_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75e33c_1ad7539a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad753c8d_What(_self_.as<_1ad7539a2_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75e33c_1ad757159(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad757445_What(_self_.as<_1ad757159_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad75e33c_1ad75a7bc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad75aaa8_What(_self_.as<_1ad75a7bc_Flag>().alloc);
}
inline void __jule_trait_method_1ad75e78d_1ad74b78b(jule::Ptr<jule::Uintptr> _self_) {
	_1ad74be62_Reset(_self_.as<_1ad74b78b_Flag>().alloc);
}
inline void __jule_trait_method_1ad75e78d_1ad75033e(jule::Ptr<jule::Uintptr> _self_) {
	_1ad75076d_Reset(_self_.as<_1ad75033e_Flag>().alloc);
}
inline void __jule_trait_method_1ad75e78d_1ad7539a2(jule::Ptr<jule::Uintptr> _self_) {
	_1ad753dd1_Reset(_self_.as<_1ad7539a2_Flag>().alloc);
}
inline void __jule_trait_method_1ad75e78d_1ad757159(jule::Ptr<jule::Uintptr> _self_) {
	_1ad757588_Reset(_self_.as<_1ad757159_Flag>().alloc);
}
inline void __jule_trait_method_1ad75e78d_1ad75a7bc(jule::Ptr<jule::Uintptr> _self_) {
	_1ad75abeb_Reset(_self_.as<_1ad75a7bc_Flag>().alloc);
}


static _1a79c3530_comptimeRangeKindMptrData _1a79c3530_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a79c2c27_ready=__jule_trait_method_1aaeae9a2_1aae6623e,
	._1a79c3145_step=__jule_trait_method_1aaeb00e0_1aae6623e,
	._1a79c33cb_len=__jule_trait_method_1aaeb082c_1aae6623e,
};
static _1a79c3530_comptimeRangeKindMptrData _1a79c3530_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a79c2c27_ready=__jule_trait_method_1aaeae9a2_1aae7e004,
	._1a79c3145_step=__jule_trait_method_1aaeb00e0_1aae7e004,
	._1a79c33cb_len=__jule_trait_method_1aaeb082c_1aae7e004,
};
static _1a79c3530_comptimeRangeKindMptrData _1a79c3530_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a79c2c27_ready=__jule_trait_method_1aaeae9a2_1aae6c685,
	._1a79c3145_step=__jule_trait_method_1aaeb00e0_1aae6c685,
	._1a79c33cb_len=__jule_trait_method_1aaeb082c_1aae6c685,
};
static _1a79c3530_comptimeRangeKindMptrData _1a79c3530_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a79c2c27_ready=__jule_trait_method_1aaeae9a2_1aae729ba,
	._1a79c3145_step=__jule_trait_method_1aaeb00e0_1aae729ba,
	._1a79c33cb_len=__jule_trait_method_1aaeb082c_1aae729ba,
};
static _1a79c3530_comptimeRangeKindMptrData _1a79c3530_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a79c2c27_ready=__jule_trait_method_1aaeae9a2_1aae7adbe,
	._1a79c3145_step=__jule_trait_method_1aaeb00e0_1aae7adbe,
	._1a79c33cb_len=__jule_trait_method_1aaeb082c_1aae7adbe,
};
static _1a79c3530_comptimeRangeKindMptrData _1a79c3530_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a79c2c27_ready=__jule_trait_method_1aaeae9a2_1aae8deae,
	._1a79c3145_step=__jule_trait_method_1aaeb00e0_1aae8deae,
	._1a79c33cb_len=__jule_trait_method_1aaeb082c_1aae8deae,
};
static _1a681455e_ImporterMptrData _1a681455e_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1a681333d_SetModPath=__jule_trait_method_1aaeb0ca0_1ac29d80b,
	._1a68135c4_GetModPath=__jule_trait_method_1aaeb1256_1ac29d80b,
	._1a6813915_ModById=__jule_trait_method_1aaeb16b8_1ac29d80b,
	._1a6813c56_GetImport=__jule_trait_method_1aaeb1bd5_1ac29d80b,
	._1a6814152_ImportPackage=__jule_trait_method_1aaeb2246_1ac29d80b,
	._1a681440a_Imported=__jule_trait_method_1aaeb2b81_1ac29d80b,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab734017,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab734017,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab7334ab,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab7334ab,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab74ac54,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab74ac54,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab725833,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab725833,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab72c719,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab72c719,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae7972a,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae7972a,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae68d79,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae68d79,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae6623e,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae6623e,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae81b3e,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae81b3e,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae7e004,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae7e004,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae702e2,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae702e2,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae6c685,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae6c685,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae75605,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae75605,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae729ba,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae729ba,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae7adbe,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae7adbe,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1a8555512,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1a8555512,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae8544a,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae8544a,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae8deae,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae8deae,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aae8a6a3,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aae8a6a3,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab7164d3,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab7164d3,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab71ac02,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab71ac02,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab72238a,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab72238a,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab731b80,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab731b80,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aadb1684,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aadb1684,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1aadaeb49,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1aadaeb49,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab730299,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab730299,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ab723b0b,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ab723b0b,
};
static _1a7a82446_KindMptrData _1a7a82446_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a7a81ea1_Str=__jule_trait_method_1aaeb31c0_1ad241924,
	._1a7a822e2_Equal=__jule_trait_method_1aaeb3676_1ad241924,
};
static _1a7aa24dd_LookupMptrData _1a7aa24dd_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1a7aa07c7_SelectPackage=__jule_trait_method_1aaeb3c3c_1aae2123d,
	._1a7aa0bc3_FindVar=__jule_trait_method_1aaeb4ac8_1aae2123d,
	._1a7aa10be_FindTypeAlias=__jule_trait_method_1aaeb5205_1aae2123d,
	._1a7aa14ba_FindStruct=__jule_trait_method_1aaeb5865_1aae2123d,
	._1a7aa18b6_FindFn=__jule_trait_method_1aaeb5ec5_1aae2123d,
	._1a7aa1c07_FindTrait=__jule_trait_method_1aaeb6635_1aae2123d,
	._1a7aa2048_FindEnum=__jule_trait_method_1aaeb6bda_1aae2123d,
	._1a7aa2389_FindTypeEnum=__jule_trait_method_1aaeb7290_1aae2123d,
};
static _1a7aa24dd_LookupMptrData _1a7aa24dd_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1a7aa07c7_SelectPackage=__jule_trait_method_1aaeb3c3c_1ab737658,
	._1a7aa0bc3_FindVar=__jule_trait_method_1aaeb4ac8_1ab737658,
	._1a7aa10be_FindTypeAlias=__jule_trait_method_1aaeb5205_1ab737658,
	._1a7aa14ba_FindStruct=__jule_trait_method_1aaeb5865_1ab737658,
	._1a7aa18b6_FindFn=__jule_trait_method_1aaeb5ec5_1ab737658,
	._1a7aa1c07_FindTrait=__jule_trait_method_1aaeb6635_1ab737658,
	._1a7aa2048_FindEnum=__jule_trait_method_1aaeb6bda_1ab737658,
	._1a7aa2389_FindTypeEnum=__jule_trait_method_1aaeb7290_1ab737658,
};
static _1a7aa24dd_LookupMptrData _1a7aa24dd_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1a7aa07c7_SelectPackage=__jule_trait_method_1aaeb3c3c_1ab738758,
	._1a7aa0bc3_FindVar=__jule_trait_method_1aaeb4ac8_1ab738758,
	._1a7aa10be_FindTypeAlias=__jule_trait_method_1aaeb5205_1ab738758,
	._1a7aa14ba_FindStruct=__jule_trait_method_1aaeb5865_1ab738758,
	._1a7aa18b6_FindFn=__jule_trait_method_1aaeb5ec5_1ab738758,
	._1a7aa1c07_FindTrait=__jule_trait_method_1aaeb6635_1ab738758,
	._1a7aa2048_FindEnum=__jule_trait_method_1aaeb6bda_1ab738758,
	._1a7aa2389_FindTypeEnum=__jule_trait_method_1aaeb7290_1ab738758,
};
static _1a7aa24dd_LookupMptrData _1a7aa24dd_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1a7aa07c7_SelectPackage=__jule_trait_method_1aaeb3c3c_1ab735678,
	._1a7aa0bc3_FindVar=__jule_trait_method_1aaeb4ac8_1ab735678,
	._1a7aa10be_FindTypeAlias=__jule_trait_method_1aaeb5205_1ab735678,
	._1a7aa14ba_FindStruct=__jule_trait_method_1aaeb5865_1ab735678,
	._1a7aa18b6_FindFn=__jule_trait_method_1aaeb5ec5_1ab735678,
	._1a7aa1c07_FindTrait=__jule_trait_method_1aaeb6635_1ab735678,
	._1a7aa2048_FindEnum=__jule_trait_method_1aaeb6bda_1ab735678,
	._1a7aa2389_FindTypeEnum=__jule_trait_method_1aaeb7290_1ab735678,
};
static _1a7aa24dd_LookupMptrData _1a7aa24dd_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1a7aa07c7_SelectPackage=__jule_trait_method_1aaeb3c3c_1ab736118,
	._1a7aa0bc3_FindVar=__jule_trait_method_1aaeb4ac8_1ab736118,
	._1a7aa10be_FindTypeAlias=__jule_trait_method_1aaeb5205_1ab736118,
	._1a7aa14ba_FindStruct=__jule_trait_method_1aaeb5865_1ab736118,
	._1a7aa18b6_FindFn=__jule_trait_method_1aaeb5ec5_1ab736118,
	._1a7aa1c07_FindTrait=__jule_trait_method_1aaeb6635_1ab736118,
	._1a7aa2048_FindEnum=__jule_trait_method_1aaeb6bda_1ab736118,
	._1a7aa2389_FindTypeEnum=__jule_trait_method_1aaeb7290_1ab736118,
};
static _1a9a75a86_CommonFlagMptrData _1a9a75a86_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1a9a8878b_Name=__jule_trait_method_1ad75c6d1_1ad74b78b,
	._1a9a78a23_Short=__jule_trait_method_1ad75de30_1ad74b78b,
	._1a9a75800_What=__jule_trait_method_1ad75e33c_1ad74b78b,
	._1a9a75943_Reset=__jule_trait_method_1ad75e78d_1ad74b78b,
};
static _1a9a75a86_CommonFlagMptrData _1a9a75a86_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1a9a8878b_Name=__jule_trait_method_1ad75c6d1_1ad75033e,
	._1a9a78a23_Short=__jule_trait_method_1ad75de30_1ad75033e,
	._1a9a75800_What=__jule_trait_method_1ad75e33c_1ad75033e,
	._1a9a75943_Reset=__jule_trait_method_1ad75e78d_1ad75033e,
};
static _1a9a75a86_CommonFlagMptrData _1a9a75a86_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1a9a8878b_Name=__jule_trait_method_1ad75c6d1_1ad7539a2,
	._1a9a78a23_Short=__jule_trait_method_1ad75de30_1ad7539a2,
	._1a9a75800_What=__jule_trait_method_1ad75e33c_1ad7539a2,
	._1a9a75943_Reset=__jule_trait_method_1ad75e78d_1ad7539a2,
};
static _1a9a75a86_CommonFlagMptrData _1a9a75a86_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1a9a8878b_Name=__jule_trait_method_1ad75c6d1_1ad757159,
	._1a9a78a23_Short=__jule_trait_method_1ad75de30_1ad757159,
	._1a9a75800_What=__jule_trait_method_1ad75e33c_1ad757159,
	._1a9a75943_Reset=__jule_trait_method_1ad75e78d_1ad757159,
};
static _1a9a75a86_CommonFlagMptrData _1a9a75a86_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1a9a8878b_Name=__jule_trait_method_1ad75c6d1_1ad75a7bc,
	._1a9a78a23_Short=__jule_trait_method_1ad75de30_1ad75a7bc,
	._1a9a75800_What=__jule_trait_method_1ad75e33c_1ad75a7bc,
	._1a9a75943_Reset=__jule_trait_method_1ad75e78d_1ad75a7bc,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a79ab309_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a685a682_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a79960d5_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a79bb6d2_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a798e133_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a7988eda_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a798d286_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a798417d_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a798d9c3_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a7985338_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a798b63b_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a798c5c6_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1bd82c384_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a79d96de_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a680dba7_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a7a51503_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a79a50c2_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a79a2a3c_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a79a1079_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a79a1453_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a79a1c06_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a79a21ac_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a79a38d9_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a79a3510_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a79a53be_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a799c4b5_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a680e7e0_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a680eadc_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a79867ac_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a6810093_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a79871b4_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a68109de_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a636e581_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a79d9aa7_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a79d9e81_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a79da437_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a799cd45_IndexingExprModel> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a79da8dd_MultiAssign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a79db04d_Match> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a79dc3a1_FallSt> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a79d947a_BreakSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a79dc77a_RetSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a79824de_ScopeTree> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a7976802_Expr> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a798879d_Conditional> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a7985e82_Iter> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a7987967_ContSt> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a797eaa2_LabelSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a797ee7b_GotoSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a7980e6b_AssignSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a7989caa_MatchCase> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a7980278_FallSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a798758d_BreakSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a7985712_RetSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a79771c6_UseExpr> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a79a8328_Fn> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a7993357_Struct> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a7a81b0a_TypeAlias> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a79bdddd_Enum> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a79c05e8_TypeEnum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a7974789_ArrTypeDecl> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a79738ed_SlcTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a7973ee7_PtrTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a7973568_SptrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a7974ed7_MapTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a7973bea_TupleTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a7972ac8_IdentTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a7978c88_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a799c88e_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a797b021_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a797c62c_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a797811c_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a79773e6_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a79a0ba0_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a797a52b_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a79a48eb_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a7a828ec_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a79a08a3_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a7979915_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a7972d92_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a79788ae_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a79724bd_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a797953b_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a797326b_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a799e20e_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a799bb13_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a797cd58_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a799b283_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a79a04c9_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a799e792_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a79a0133_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a799db7b_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a799d2eb_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a7976abb_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a797778c_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a7977b66_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a797d7b5_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a797de25_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a7979162_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a797b84b_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a797bd02_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a7979dbb_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a799a8ae_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a799a4d5_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a799b580_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a79a182c_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a79a2d39_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a79a3136_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a79a4467_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a79a4654_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a79a4be8_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a7b76194_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a7b78a7b_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a7b7776c_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a7b77a69_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a7b782c8_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a7b786a2_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a7b76518_SwapExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a7b768e2_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a7b771d9_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a7b78d78_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a7b76c66_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a799addc_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a7b79175_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a7b77dee_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1ab8e5ea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79aa281_ParamIns> _24021_p1, jule::Ptr<_1a79aa281_ParamIns> _24036_p2);
struct __jule_anon_1ab23e00b_ctx{
	jule::Ptr<_1a6817474_ImportInfo> *_49838_pkg;
};
static void __jule_anon_1ab23e00b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab23e00b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab23e00b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _50039_spkg);
struct __jule_anon_1ab798730_ctx{
	jule::Ptr<_1a79c4223_comptimeStructField> _self_;
};
static void __jule_anon_1ab798730_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab798730_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab798730(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _8821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _8836_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab79a6cc_ctx{
	jule::Ptr<_1a79c4223_comptimeStructField> _self_;
};
static void __jule_anon_1ab79a6cc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab79a6cc_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab79a6cc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _9521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _9536_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab79c635_ctx{
	jule::Ptr<_1a79c4223_comptimeStructField> _self_;
};
static void __jule_anon_1ab79c635_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab79c635_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab79c635(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _10221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _10236_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7ae3d3_ctx{
	jule::Ptr<_1a79c74ce_comptimeStatic> _self_;
};
static void __jule_anon_1ab7ae3d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7ae3d3_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7ae3d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _21121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _21136_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7b133b_ctx{
	jule::Ptr<_1a79c74ce_comptimeStatic> _self_;
};
static void __jule_anon_1ab7b133b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7b133b_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7b133b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _21821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _21836_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7b3294_ctx{
	jule::Ptr<_1a79c74ce_comptimeStatic> _self_;
};
static void __jule_anon_1ab7b3294_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7b3294_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7b3294(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _22521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _22536_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7c00b4_ctx{
	jule::Ptr<_1a79ca78a_comptimeEnumField> _self_;
};
static void __jule_anon_1ab7c00b4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7c00b4_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7c00b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _31321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _31336_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7d4b34_ctx{
	jule::Ptr<_1a79cd22c_comptimeParam> _self_;
};
static void __jule_anon_1ab7d4b34_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7d4b34_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7d4b34(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _43521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _43536_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7d6a8c_ctx{
	jule::Ptr<_1a79cd22c_comptimeParam> _self_;
};
static void __jule_anon_1ab7d6a8c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7d6a8c_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7d6a8c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _44221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _44236_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7d89e5_ctx{
	jule::Ptr<_1a79cd22c_comptimeParam> _self_;
};
static void __jule_anon_1ab7d89e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7d89e5_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7d89e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _44921_e, jule::Ptr<_1a797a52b_FnCallExpr>* _44936_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab7da94d_ctx{
	jule::Ptr<_1a79cd22c_comptimeParam> _self_;
};
static void __jule_anon_1ab7da94d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7da94d_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7da94d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _45621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _45636_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9c684d_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9c684d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9c684d_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9c684d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _99821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _99836_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9c87ea_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9c87ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9c87ea_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9c87ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _100521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _100536_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9ca753_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9ca753_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9ca753_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9ca753(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _101221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _101236_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9cc6ab_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9cc6ab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9cc6ab_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9cc6ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _101921_e, jule::Ptr<_1a797a52b_FnCallExpr>* _101936_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9ce614_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9ce614_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9ce614_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9ce614(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _102621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _102636_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9d156c_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9d156c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d156c_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d156c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _103321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _103336_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9d34c5_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9d34c5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d34c5_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d34c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _104021_e, jule::Ptr<_1a797a52b_FnCallExpr>* _104036_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9d542d_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9d542d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d542d_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d542d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _104721_e, jule::Ptr<_1a797a52b_FnCallExpr>* _104736_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9d74c9_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9d74c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d74c9_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d74c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _105421_e, jule::Ptr<_1a797a52b_FnCallExpr>* _105436_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9d9432_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9d9432_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9d9432_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d9432(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _106121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _106136_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9db38a_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9db38a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9db38a_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9db38a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _106821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _106836_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9dd2e3_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9dd2e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9dd2e3_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9dd2e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _107521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _107536_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9e024b_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9e024b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9e024b_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e024b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _108221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _108236_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9e21a4_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9e21a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9e21a4_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e21a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _108921_e, jule::Ptr<_1a797a52b_FnCallExpr>* _108936_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9e410c_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9e410c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9e410c_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e410c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _109621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _109636_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9e6065_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9e6065_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9e6065_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e6065(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _110321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _110336_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9e7ebd_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9e7ebd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9e7ebd_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e7ebd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _111021_e, jule::Ptr<_1a797a52b_FnCallExpr>* _111036_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9e9e26_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9e9e26_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9e9e26_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e9e26(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _111721_e, jule::Ptr<_1a797a52b_FnCallExpr>* _111736_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9ebd7e_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9ebd7e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9ebd7e_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9ebd7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _112421_e, jule::Ptr<_1a797a52b_FnCallExpr>* _112436_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1ab9edcd7_ctx{
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab9edcd7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab9edcd7_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9edcd7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _113121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _113136_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba18d9b_ctx{
	jule::Ptr<_1a67ecc40_comptimeValue> _self_;
};
static void __jule_anon_1aba18d9b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba18d9b_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba18d9b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _124721_e, jule::Ptr<_1a797a52b_FnCallExpr>* _124736_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba1ad04_ctx{
	jule::Ptr<_1a67ecc40_comptimeValue> _self_;
};
static void __jule_anon_1aba1ad04_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba1ad04_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba1ad04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _125421_e, jule::Ptr<_1a797a52b_FnCallExpr>* _125436_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba1cc5c_ctx{
	jule::Ptr<_1a67ecc40_comptimeValue> _self_;
};
static void __jule_anon_1aba1cc5c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba1cc5c_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba1cc5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _126121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _126136_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba1ebb5_ctx{
	jule::Ptr<_1a67ecc40_comptimeValue> _self_;
};
static void __jule_anon_1aba1ebb5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba1ebb5_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba1ebb5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _126821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _126836_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba21b1d_ctx{
	jule::Ptr<_1a67ecc40_comptimeValue> _self_;
};
static void __jule_anon_1aba21b1d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba21b1d_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba21b1d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _127521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _127536_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba23a76_ctx{
	jule::Ptr<_1a67ecc40_comptimeValue> _self_;
};
static void __jule_anon_1aba23a76_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba23a76_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba23a76(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _128221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _128236_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba3654a_ctx{
	jule::Ptr<_1a6801b89_comptimeFile> _self_;
};
static void __jule_anon_1aba3654a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba3654a_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba3654a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _139621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _139636_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba384a3_ctx{
	jule::Ptr<_1a6801b89_comptimeFile> _self_;
};
static void __jule_anon_1aba384a3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba384a3_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba384a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _140321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _140336_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba3a40b_ctx{
	jule::Ptr<_1a6801b89_comptimeFile> _self_;
};
static void __jule_anon_1aba3a40b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba3a40b_ctx>().dealloc(); }
inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba3a40b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _141021_e, jule::Ptr<_1a797a52b_FnCallExpr>* _141036_fc, jule::Ptr<_1a7a51503_Data>* );
struct __jule_anon_1aba45e3e_ctx{
	jule::Ptr<_1a68063ec_constraintChecker> _self_;
};
static void __jule_anon_1aba45e3e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aba45e3e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aba45e3e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6837818_Sema>* _6415_sema, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _6433_generics);
struct __jule_anon_1abc37c68_ctx{
	jule::Ptr<_1a79ab309_FnIns> _110137_f;
	jule::Ptr<_1a6837818_Sema> _self_;
};
static void __jule_anon_1abc37c68_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abc37c68_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1abc37c68(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6837818_Sema>* _110537_sema, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _110555_generics);
struct __jule_anon_1ac3844d5_ctx{
	jule::Ptr<_1a797953b_NsSelectionExpr> _182931_s;
	jule::Str _18303_path;
};
static void __jule_anon_1ac3844d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac3844d5_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac3844d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _183143_imp);
inline jule::Str __jule_anon1ac60082d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84719_def);
struct __jule_anon_1ac67b931_ctx{
	jule::Ptr<_1a797326b_NamespaceTypeDecl> _151736_decl;
	jule::Str _15183_path;
};
static void __jule_anon_1ac67b931_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac67b931_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac67b931(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _151943_imp);
struct __jule_anon_1acea3279_ctx{
	_1a86ca852_exprDeadCode *_self_;
};
static void __jule_anon_1acea3279_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acea3279_ctx>().dealloc(); }
inline void __jule_anon_1acea3279(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1ad125770_ctx{
	_1a6452015_exprOptimizer *_self_;
};
static void __jule_anon_1ad125770_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad125770_ctx>().dealloc(); }
inline void __jule_anon_1ad125770(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55147_m);
struct __jule_anon_1ad25a278_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1ad25a278_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad25a278_ctx>().dealloc(); }
inline void __jule_anon_1ad25a278(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad25dc3d_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
	jule::Ptr<_1a68109de_RangeIter> *_12936_it;
};
static void __jule_anon_1ad25dc3d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad25dc3d_ctx>().dealloc(); }
inline void __jule_anon_1ad25dc3d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad26d214_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
};
static void __jule_anon_1ad26d214_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad26d214_ctx>().dealloc(); }
inline void __jule_anon_1ad26d214(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad270689_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
};
static void __jule_anon_1ad270689_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad270689_ctx>().dealloc(); }
inline void __jule_anon_1ad270689(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad2893b7_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
};
static void __jule_anon_1ad2893b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad2893b7_ctx>().dealloc(); }
inline void __jule_anon_1ad2893b7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad308c3e_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
};
static void __jule_anon_1ad308c3e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad308c3e_ctx>().dealloc(); }
inline void __jule_anon_1ad308c3e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad30a04d_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
	jule::Ptr<_1a79db04d_Match> _63330_m;
};
static void __jule_anon_1ad30a04d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad30a04d_ctx>().dealloc(); }
inline void __jule_anon_1ad30a04d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad37a1de_ctx{
	jule::Ptr<_1a9d6c6eb_scopeCoder> _self_;
	jule::Ptr<_1a799d2eb_AnonFnExprModel> _100334_m;
};
static void __jule_anon_1ad37a1de_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad37a1de_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ad37a1de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a685a682_Var> _100967_v);
struct __jule_anon_1ad668433_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad668433_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad668433_ctx>().dealloc(); }
inline void __jule_anon_1ad668433(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _82738_pkg);
struct __jule_anon_1ad66990c_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad66990c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad66990c_ctx>().dealloc(); }
inline void __jule_anon_1ad66990c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn>* _84036_m);
struct __jule_anon_1ad66eeea_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad66eeea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad66eeea_ctx>().dealloc(); }
inline void __jule_anon_1ad66eeea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _85338_pkg);
struct __jule_anon_1ad680a55_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
	jule::Ptr<_1a685a682_Var> _92024_v;
};
static void __jule_anon_1ad680a55_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad680a55_ctx>().dealloc(); }
inline void __jule_anon_1ad680a55(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad682b56_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
	jule::Ptr<_1a685a682_Var> _92024_v;
};
static void __jule_anon_1ad682b56_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad682b56_ctx>().dealloc(); }
inline void __jule_anon_1ad682b56(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad685373_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad685373_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad685373_ctx>().dealloc(); }
inline void __jule_anon_1ad685373(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad6864ea_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
	jule::Ptr<_1a685a682_Var> _92024_v;
};
static void __jule_anon_1ad6864ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6864ea_ctx>().dealloc(); }
inline void __jule_anon_1ad6864ea(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ad6a4639_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6a4639_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6a4639_ctx>().dealloc(); }
inline void __jule_anon_1ad6a4639(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _106238_pkg);
struct __jule_anon_1ad6a59c0_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
	jule::Ptr<_1a79960d5_StructIns> _107649_s;
};
static void __jule_anon_1ad6a59c0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6a59c0_ctx>().dealloc(); }
inline void __jule_anon_1ad6a59c0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn>* _107736_m);
struct __jule_anon_1ad6b32c4_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6b32c4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6b32c4_ctx>().dealloc(); }
inline void __jule_anon_1ad6b32c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _111438_pkg);
struct __jule_anon_1ad6d1259_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6d1259_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6d1259_ctx>().dealloc(); }
inline void __jule_anon_1ad6d1259(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _123938_pkg);
struct __jule_anon_1ad6d2733_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6d2733_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6d2733_ctx>().dealloc(); }
inline void __jule_anon_1ad6d2733(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _125531_file);
struct __jule_anon_1ad6da50a_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6da50a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6da50a_ctx>().dealloc(); }
inline void __jule_anon_1ad6da50a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _128438_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1ad76d7e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1ad7766a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1ab78badb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _143025_pkg);
struct __jule_anon_1ad669335_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad669335_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad669335_ctx>().dealloc(); }
inline void __jule_anon_1ad669335(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _82832_file);
struct __jule_anon_1ad670dec_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad670dec_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad670dec_ctx>().dealloc(); }
inline void __jule_anon_1ad670dec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _85432_file);
struct __jule_anon_1ad6a553b_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6a553b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6a553b_ctx>().dealloc(); }
inline void __jule_anon_1ad6a553b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _106332_file);
struct __jule_anon_1ad6b41c6_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6b41c6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6b41c6_ctx>().dealloc(); }
inline void __jule_anon_1ad6b41c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _111532_file);
struct __jule_anon_1ad6d215b_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
};
static void __jule_anon_1ad6d215b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6d215b_ctx>().dealloc(); }
inline void __jule_anon_1ad6d215b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _124032_file);
struct __jule_anon_1ad6a74d8_ctx{
	jule::Ptr<_1a9e48563_ObjectCoder> _self_;
	jule::Ptr<_1a79bb6d2_Trait> _106417_t;
};
static void __jule_anon_1ad6a74d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad6a74d8_ctx>().dealloc(); }
inline void __jule_anon_1ad6a74d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn>* _106839_m);
jule::Array<jule::Array<jule::Str,2>,5> _1d7ce3c1b_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1a9a8eece_OutDir = jule::Str::lit("dist", 4);
jule::Str _1a9a902ba_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1a9a90573_Out = jule::Str();
jule::Str _21a1ba19d_Compiler = jule::Str();
jule::Str _21a1bb59a_CompilerPath = jule::Str();
jule::Str _21a1bb7a9_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _21a1bb9da_Shadowing = false;
jule::Bool _21a1bbc93_Transpilation = false;
jule::Bool _21a1bc04b_Test = false;
jule::Bool _21a1bc304_RC = true;
jule::Bool _21a1bc6bc_Safety = true;
jule::Bool _21a1bc90e_Production = false;
jule::Uintptr _21a5b4d17_STDIN = _21a5b5620_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _21a5b50ae_STDOUT = _21a5b5620_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _21a5b53ab_STDERR = _21a5b5620_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _21a6d2a39_first = jule::Array<jule::U8,256>({});
jule::Array<_21a6d30de_acceptRange,16> _21a6d3485_acceptRanges = jule::Array<_21a6d30de_acceptRange,16>({_21a6d30de_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_21a6d30de_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_21a6d30de_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_21a6d30de_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_21a6d30de_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1d96550a3_RangeTable> _1d95e2e31__L = jule::new_ptr<_1d96550a3_RangeTable>(_1d96550a3_RangeTable{._field_R16=jule::Slice<_1d9654602_Range16>::make({_1d9654602_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1d9654602_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1d9654602_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1d9654602_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1d9654602_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1d9654602_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1d9654602_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1d9654602_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1d9654602_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1d9654602_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1d9654602_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1d9654602_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1d9654602_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1d9654602_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1d9654602_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1d9654602_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1d9654602_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1d9654602_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1d9654602_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1d9654602_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1d9654602_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1d9654602_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1d9654602_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1d9654602_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1d9654602_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1d9654602_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1d9654602_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1d9654602_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1d9654602_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1d9654602_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1d9654602_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1d9654602_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1d9654602_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1d9654602_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1d9654602_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1d9654602_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1d9654602_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1d9654602_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1d9654602_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1d9654602_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1d9654602_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1d9654602_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1d9654b30_Range32>::make({_1d9654b30_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1d9654b30_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1d9654b30_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1d9654b30_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1d9654b30_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1d9654b30_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1d9654b30_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1d9654b30_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1d9654b30_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1d9654b30_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1d9654b30_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1d9654b30_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1d9654b30_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1d9654b30_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1d9654b30_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1d9654b30_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1d9654b30_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1d9654b30_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1d9654b30_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1d9654b30_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1d9654b30_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1d9654b30_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1d9654b30_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1d9654b30_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1d96550a3_RangeTable> _1d95e3d44__LU = jule::new_ptr<_1d96550a3_RangeTable>(_1d96550a3_RangeTable{._field_R16=jule::Slice<_1d9654602_Range16>::make({_1d9654602_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1d9654602_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1d9654602_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1d9654602_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1d9654602_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1d9654602_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1d9654602_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1d9654602_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1d9654602_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1d9654602_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1d9654602_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1d9654602_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1d9654b30_Range32>::make({_1d9654b30_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1d9654b30_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1d9654b30_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1d9654b30_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1d9654b30_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1d9654b30_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Ptr<_1d96550a3_RangeTable> _1d95e9d28_Letter = _1d95e2e31__L;
jule::Ptr<_1d96550a3_RangeTable> _1d96010e8_Upper = _1d95e3d44__LU;
jule::Array<jule::U8,256> _1d964dac4__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1d973e6ed_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1d96ac9ac_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1d973d565_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1d7cdedd2_PathStdlib = jule::Str();
jule::Str _1d7ce0124_PathExec = jule::Str();
jule::Str _1d7ce03cc_PathWd = jule::Str();
jule::Str _1d7ce06c9_PathApi = jule::Str();
jule::Str _1d7ce0982_Os = jule::Str::lit("windows", 7);
jule::Str _1d7ce0c3a_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1bd7b1945__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1bd7b1ed9__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1bd80633b_floatInfo _1bd806737_f32info = _1bd80633b_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1bd80633b_floatInfo _1bd806a34_f64info = _1bd80633b_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1bd80e50e_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1bd811324_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1bd811dd5_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1bd812215_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1bd81546b_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1bd81920b_leftCheat> _1bd81963a_leftCheats = jule::Slice<_1bd81920b_leftCheat>::make({_1bd81920b_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1bd81920b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1bd81920b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1bd81920b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1bd81920b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1bd81920b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1bd81920b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1bd81920b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1bd81920b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1bd81920b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1bd81920b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1bd81920b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1bd81920b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1bd81920b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1bd81920b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1bd81920b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1bd81920b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1bd81920b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1bd81920b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1bd81920b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1bd81920b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1bd81920b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1bd81920b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1bd81920b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1bd81920b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1bd81920b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1bd81920b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1bd81920b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1bd81920b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1bd81920b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1bd81920b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1bd81920b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1bd81920b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1bd81920b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1bd81920b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1bd81920b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1bd81920b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1bd81920b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1bd81920b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1bd81920b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1bd81920b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1bd81920b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1bd81920b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1bd81920b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1bd81920b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1bd81920b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1bd81920b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1bd81920b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1bd81920b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1bd81920b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1bd81920b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1bd81920b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1bd81920b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1bd81920b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1bd81920b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1bd81920b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1bd81920b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1bd81920b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1bd81920b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1bd81920b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1bd81920b_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1bd8206da_BitSize = 0LL;
jule::Str _1bd8209d7_SysInt = jule::Str();
jule::Str _1bd820c90_SysUint = jule::Str();
jule::Array<jule::I32,5> _1a78ad2a5_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1a78ad4b4_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1a78ad706_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1a79564e6_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1a79567d2_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1a7964900_kindPair,28> _1a7964d2e_keywords = jule::Array<_1a7964900_kindPair,28>({_1a7964900_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1a7964900_kindPair,46> _1a796515e_basicOps = jule::Array<_1a7964900_kindPair,46>({_1a7964900_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1a7964900_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1a6805ab1_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b64b44_primNil = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b64e41_primVoid = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b651e9_primAny = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b654e6_primStr = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b6579e_primBool = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b65a57_primUintptr = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b65d10_primUint = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b661c8_primInt = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b6641a_primI8 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b666b2_primI16 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b6696a_primI32 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b66c23_primI64 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b66ecb_primU8 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b67284_primU16 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b6753c_primU32 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b67a26_primU64 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b67c68_primF32 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a7a828ec_TypeKind> _1a7b67e77_primF64 = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
jule::Ptr<_1a645a3c5_data> _1a64599ce_emptyData = jule::new_ptr<_1a645a3c5_data>();
jule::Bool _1a645e9e5_Copy = false;
jule::Bool _1a645ece2_Deadcode = false;
jule::Bool _1a646009a_Append = false;
jule::Bool _1a6460397_Math = false;
jule::Bool _1a6460650_Access = false;
jule::Bool _1a6460908_Inline = false;
jule::Bool _1a6460bb1_Ptr = false;
jule::Bool _1a6461079_Cond = false;
jule::Bool _1a64612bb_Str = false;
jule::Bool _1a6461563_Slice = false;
jule::Bool _1a646181b_Assign = false;
jule::Bool _1a6461ac4_Exceptional = false;
jule::Bool _1a6461d7c_Iter = false;
jule::Bool _1a6462135_Dynamic = false;
jule::Bool _1a86cb567_exprEnabled = false;
jule::Bool _1a86cb853_scopeEnabled = false;
jule::Array<jule::U64,12> _1a9e3bc71_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a9d6be8c_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1a7a828ec_TypeKind> _1a9e46561_generalGCPtr = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e002_Sptr>(_1a7a8e002_Sptr{._field_Elem=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8a4c6_Prim>(_1a7a8a4c6_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)});



std::ostream &operator<<(std::ostream &_Stream, _21a6d30de_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _200880c8a_StrBuilder static__2008811b9_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _200880c8a_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1516_cap, 0)};;
}



inline void _200881472_Write(_200880c8a_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _20088172a_WriteStr(_200880c8a_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _2008819d3_WriteByte(_200880c8a_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _200882022_Str(_200880c8a_StrBuilder* _self_) {
	jule::Str _507_s = _200880570_StrFromBytes((*(_self_))._field_buf);;
	_200882220_Clear(_self_);
	return _507_s;;
}



inline void _200882220_Clear(_200880c8a_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _2008824a6_Len(_200880c8a_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _2008829c3_Buf(_200880c8a_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _200882c7b_SetBuf(_200880c8a_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _200880c8a_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d9654602_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d9654b30_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d96550a3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d96a77ba_index(_1d96a7369_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1d96a7a73_append(_1d96a7369_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1d96a7d09_string(_1d96a7369_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _2008802a6_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d96a7369_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21a5ccb54_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>> static__1d96aa0a3_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _163_utf16Path = _21a586a42_UTF16FromStr(_1d96a8ada_Join(jule::Slice<jule::Str>::make({_1517_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _177_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _183_handle = _21a5b936b_FindFirstFile((&(_163_utf16Path[0LL])), (&(_177_data)));;
	if ((_183_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_21a5ccb54_DirEntry> _238_entry = jule::new_ptr<_21a5ccb54_DirEntry>(_21a5ccb54_DirEntry{._field_Name=_21a587119_U16PtrToStr(((jule::U16*)(_177_data.cFileName))), });;
			(*(_238_entry))._field_Stat=({
				auto except = static__1d96aadc8_Of(_1d96a8ada_Join(jule::Slice<jule::Str>::make({_1517_path,(*_238_entry.alloc)._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>>{.error=except.error};
				} jule::Ptr<_21a5d121d_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_238_entry); };
			if ((_21a5b96e0_FindNextFile(_183_handle, (&(_177_data))) == 0LL)) {
				goto _iter_end_1aa90b90a;
			};
		}
	_iter_next_1aa90b90a:;
	}
	_iter_end_1aa90b90a:;;
	_21a5b99a9_FindClose(_183_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1d96aa2d4_Create(jule::Str _3919_path) {
	jule::Slice<jule::U16> _443_utf16Path = _21a586a42_UTF16FromStr(_3919_path);;
	if ((!(_21a5b706c_CreateDirectory((&(_443_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1d96aa515_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U16> _543_utf16Path = _21a586a42_UTF16FromStr(_5319_path);;
	if ((!(_21a5b7336_RemoveDirectory((&(_543_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _21a5ccdda_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21a5ce0d9_File> static__21a5ce507_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_21a5ce0d9_File>(_21a5ce0d9_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_21a5ce0d9_File>> static__21a5ce7c1_Create(jule::Str _5519_path) {
	return static__21a6ddced_Open(_5519_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__21a5cea8a_Read(jule::Str _6717_path) {
	jule::Ptr<_21a5d121d_Status> _683_s = ({
		auto except = static__1d96aadc8_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_21a5d121d_Status>(nullptr);});
	});;
	if ((!(_21a5d187d_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_21a5d1b14_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_21a5d1b14_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_21a5ce0d9_File> _867_f = ({
		auto except = static__21a6ddced_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_21a5ce0d9_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz, 0);;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _21a6de6e4_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1aa9133b2;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1aa9133b2:;
	}
	_iter_end_1aa9133b2:;;
	({
		auto except = _21a5d066d_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__21a5cee31_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_21a5ce0d9_File> _1067_f = ({
		auto except = static__21a6ddced_Open(_10518_path, static_cast<jule::I64>(769LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_21a5ce0d9_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _21a6de3a3_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1aa91820d:;
	}
	_iter_end_1aa91820d:;;
	return _21a5d066d_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _21a5d066d_Close(_21a5ce0d9_File* _self_) {
	if ((_21a5bbe62_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_21a5ce0d9_File>> static__21a6ddced_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode) {
	jule::Slice<jule::U16> _233_utf16Path = _21a586a42_UTF16FromStr(_2217_path);;
	jule::I64 _243_handle = _21a5b618c_Wopen((&(_233_utf16Path[0LL])), _2228_flag, _2241_mode);;
	if ((_243_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21a5ce0d9_File>>{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_21a5ce0d9_File>>{.result=static__21a5ce507_New(static_cast<jule::Uintptr>(_243_handle))};;
}



inline jule::VoidExceptional static__21a6de02e_Remove(jule::Str _3519_path) {
	jule::Slice<jule::U16> _363_utf16Path = _21a586a42_UTF16FromStr(_3519_path);;
	if ((!(_21a5b6ca3_DeleteFile((&(_363_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21a6de3a3_Write(_21a5ce0d9_File* _self_, jule::Slice<jule::U8> _5021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_21a6dea68_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _564_utf16Buf = _21a586a42_UTF16FromStr(static_cast<jule::Str>(_5021_buf));;
		jule::Bool _574_ok = _21a5b87ee_WriteConsole((*(_self_))._field_handle, (&(_564_utf16Buf[0LL])), _564_utf16Buf.len(), &(__jule_func_result), nullptr);;
		if ((!(_574_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21a6dcb87_HandleRW(&(_5021_buf));
	__jule_func_result=_21a5bc319_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5021_buf[0LL])), static_cast<jule::U64>(_5021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21a6de6e4_Read(_21a5ce0d9_File* _self_, jule::Slice<jule::U8> _8124_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_8124_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_21a6dea68_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _878_codepage = jule::Slice<jule::U16>::alloc(_8124_buf.len(), _8124_buf.len(), 0);;
		jule::Bool _884_ok = _21a5b8cd8_ReadConsole((*(_self_))._field_handle, (&(_878_codepage[0LL])), _8124_buf.len(), &(__jule_func_result));;
		if ((!(_884_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _934_runes = _21a58646a_Decode(_878_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_934_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa925061:;
			if (it != expr_end) {
				jule::I32 *_9511_r = it;
				{
					jule::I64 _965_size = _21a6d492b_RuneLen((*(_9511_r)));;
					if (((__jule_func_result + _965_size) > _8124_buf.len())) {
						goto _iter_end_1aa925061;
					};
					_21a6d4db0_EncodeRune(_8124_buf.slice(__jule_func_result), (*(_9511_r)));
					__jule_func_result+=_965_size;
				}
				_iter_next_1aa925061:;
				++it;
				goto _iter_begin_1aa925061;
			}
			_iter_end_1aa925061:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21a6dcb87_HandleRW(&(_8124_buf));
	__jule_func_result=_21a5bba88_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_8124_buf[0LL])), static_cast<jule::U64>(_8124_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _21a5ce0d9_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21a5d15e7_IsDir(_21a5d121d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _21a5d187d_IsReg(_21a5d121d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _21a5d1b14_Size(_21a5d121d_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_21a5d121d_Status>> static__1d96aadc8_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_21a5d121d_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _163_utf16Path = _21a586a42_UTF16FromStr(_1215_path);;
	struct _stat _177_handle = (struct _stat){};;
	jule::I64 _183_code = _21a5b5c5d_Wstat((&(_163_utf16Path[0LL])), (&(_177_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21a5d121d_Status>>{.error=jule::Any(_21a5cc59e_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_21a5d121d_Status> _227_stat = jule::new_ptr<_21a5d121d_Status>();;
	(*_227_stat.alloc)._field_size=_177_handle.st_size;
	if (((_177_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_177_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_21a5d121d_Status>>{.result=_227_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _21a5d121d_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7cdba05_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d974c80a_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd80633b_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd806eb8_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd81920b_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bd811654_set(_1bd819c23_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1ab22020c:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1ab22031c:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1ab220174:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1ab221c47:;
					{
						goto _iter_next_1ab2215e8;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1ab221ce1:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ab2215e8;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1ab221d57:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ab2215e8;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ab2215e8;
					}
				}
				_match_end_1ab221b26:;
			};
			goto _iter_end_1ab2215e8;
		}
	_iter_next_1ab2215e8:;
	}
	_iter_end_1ab2215e8:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1bd80bb7c_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1ab22719d;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1ab22719d:;
		}
		_iter_end_1ab22719d:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1bd811995_floatBits(_1bd819c23_decimal* _self_, _1bd80633b_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1ab4b6041;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1ab4b4acd;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1ab4b6041;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1bd811324_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1bd811324_powtab[(*(_self_))._field_dp];
			};
			_1bd81a383_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1ab22d88b:;
	}
	_iter_end_1ab22d88b:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1bd811324_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1bd811324_powtab[(-((*(_self_))._field_dp))];
			};
			_1bd81a383_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1ab22e282:;
	}
	_iter_end_1ab22e282:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1bd81a383_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1ab4b4acd;
	};
	_1bd81a383_shift(_self_, static_cast<jule::I64>((1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1bd81ae33_roundedInteger(_self_);
	if ((_3347_mant == (2LLU << (*(_33226_flt))._field_mantbits))) {
		_3347_mant>>=1LLU;
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1ab4b4acd;
		};
	};
	if (((_3347_mant & (1LLU << (*(_33226_flt))._field_mantbits)) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1ab4b6041;
	_julec_label_1ab4b4acd:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33226_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1ab4b6041:;
	jule::U64 _4227_bits = (_3347_mant & ((1LLU << (*(_33226_flt))._field_mantbits) - 1LLU));;
	_4227_bits|=(static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) << (*(_33226_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_4227_bits|=((1LLU << (*(_33226_flt))._field_mantbits) << (*(_33226_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1bd81a0ca_assign(_1bd819c23_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1ab4b9011:;
	}
	_iter_end_1ab4b9011:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ab4b9b5a:;
	}
	_iter_end_1ab4b9b5a:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1bd81b571_trim(_self_);
}



inline void _1bd81a383_shift(_1bd819c23_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ab4bbac4:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1ab4bbb6d:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1bd81c0bb_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1ab4bc740:;
				}
				_iter_end_1ab4bc740:;;
				_1bd81c0bb_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1ab4bbbd4:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1bd81b85c_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1ab4bc663:;
				}
				_iter_end_1ab4bc663:;;
				_1bd81b85c_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1ab4bb970:;
	};
}



inline void _1bd81a63b_roundDown(_1bd819c23_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1bd81b571_trim(_self_);
}



inline void _1bd81a8e4_roundUp(_1bd819c23_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1ab4c0ba5:;
	}
	_iter_end_1ab4c0ba5:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1bd81ab9c_round(_1bd819c23_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1bd81c440_shouldRoundUp(_self_, _23221_nd)) {
		_1bd81a8e4_roundUp(_self_, _23221_nd);
	} else {
		_1bd81a63b_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1bd81ae33_roundedInteger(_1bd819c23_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=((_2507_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1ab4c3a65:;
	}
	_iter_end_1ab4c3a65:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1ab4c4d85:;
	}
	_iter_end_1ab4c4d85:;;
	if (_1bd81c440_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd819c23_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bd82c384_Const> static__1bd82c7c4_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1bd82c384_Const>(_1bd82c384_Const{._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1bd82c384_Const> static__1bd82ca8d_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1bd82c384_Const>(_1bd82c384_Const{._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1bd82c384_Const> static__1bd82cd57_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1bd82c384_Const>(_1bd82c384_Const{._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1bd82c384_Const> static__1bd82d121_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1bd82c384_Const>(_1bd82c384_Const{._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1bd82c384_Const> static__1bd82d3da_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1bd82c384_Const>(_1bd82c384_Const{._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1bd82c384_Const> static__1bd82d5e9_NewNil(void) {
	return jule::new_ptr<_1bd82c384_Const>(_1bd82c384_Const{._field_data=nullptr});;
}



inline jule::I64 _1bd82dc59_ReadI64(_1bd82c384_Const* _self_) {
	if ((!(_1bd831355_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1bd82dee0_ReadU64(_1bd82c384_Const* _self_) {
	if ((!(_1bd8315db_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1bd82e276_ReadBool(_1bd82c384_Const* _self_) {
	if ((!(_1bd831872_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1bd82e50c_ReadStr(_1bd82c384_Const* _self_) {
	if ((!(_1bd831b08_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1bd82e793_ReadF64(_1bd82c384_Const* _self_) {
	if ((!(_1bd831d8e_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1bd82ea29_AsI64(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab53bccb:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab53ba9a:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab53bb11:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ab53b649:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab53b4a1:;
	};
}



inline jule::U64 _1bd82ecb0_AsU64(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab53c56d:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab53d393:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab53d409:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ab53b825:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab53b7c0:;
	};
}



inline jule::F64 _1bd830046_AsF64(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab53edbc:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab53dd66:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab53eb8b:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1ab53d1d9:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab53d184:;
	};
}



inline void _1bd8302ee_SetI64(_1bd82c384_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1bd8305a7_SetU64(_1bd82c384_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1bd830860_SetBool(_1bd82c384_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1bd830b18_SetStr(_1bd82c384_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1bd830dc1_SetF64(_1bd82c384_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1bd831355_IsI64(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab54373e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab5439a3:;
			{
				return false;;
			}
		}
		_match_end_1ab54394d:;
	};
}



inline jule::Bool _1bd8315db_IsU64(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab5443ee:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab543c06:;
			{
				return false;;
			}
		}
		_match_end_1ab543ba1:;
	};
}



inline jule::Bool _1bd831872_IsBool(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab544d4a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab5446b8:;
			{
				return false;;
			}
		}
		_match_end_1ab544663:;
	};
}



inline jule::Bool _1bd831b08_IsStr(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab545796:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab545114:;
			{
				return false;;
			}
		}
		_match_end_1ab5450ae:;
	};
}



inline jule::Bool _1bd831d8e_IsF64(_1bd82c384_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab5461e2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab545a60:;
			{
				return false;;
			}
		}
		_match_end_1ab545a0a:;
	};
}



inline jule::Bool _1bd832125_IsNil(_1bd82c384_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1bd8327a7_And(_1bd82c384_Const* _self_, _1bd82c384_Const _23815_x) {
	{
		
		if ((_1bd831872_IsBool(_self_) && _1bd831872_IsBool(&_23815_x))) {
			_case_begin_1ab54a45a:;
			{
				return (_1bd82e276_ReadBool(_self_) && _1bd82e276_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1ab54a3e4:;
			{
				return false;;
			}
		}
		_match_end_1ab54a009:;
	};
}



inline jule::Bool _1bd832ae8_Or(_1bd82c384_Const* _self_, _1bd82c384_Const _24914_x) {
	{
		
		if ((_1bd831872_IsBool(_self_) && _1bd831872_IsBool(&_24914_x))) {
			_case_begin_1ab54b725:;
			{
				return (_1bd82e276_ReadBool(_self_) || _1bd82e276_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1ab54ae0b:;
			{
				return false;;
			}
		}
		_match_end_1ab54ad2e:;
	};
}



inline jule::Bool _1bd832e39_Eq(_1bd82c384_Const* _self_, _1bd82c384_Const _26014_x) {
	{
		
		if (_1bd832125_IsNil(_self_)) {
			_case_begin_1ab54ca56:;
			{
				return _1bd832125_IsNil(&_26014_x);;
			}
		}
		else if (_1bd831872_IsBool(_self_)) {
			_case_begin_1ab54cabc:;
			{
				return (_1bd831872_IsBool(&_26014_x) && (_1bd82e276_ReadBool(_self_) == _1bd82e276_ReadBool(&_26014_x)));;
			}
		}
		else if (_1bd831b08_IsStr(_self_)) {
			_case_begin_1ab54cb33:;
			{
				return (_1bd831b08_IsStr(&_26014_x) && (_1bd82e50c_ReadStr(_self_) == _1bd82e50c_ReadStr(&_26014_x)));;
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab54cbaa:;
			{
				return (_1bd82dc59_ReadI64(_self_) == _1bd82ea29_AsI64(&_26014_x));;
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab54cc32:;
			{
				return (_1bd82dee0_ReadU64(_self_) == _1bd82ecb0_AsU64(&_26014_x));;
			}
		}
		else if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab54cda8:;
			{
				return (_1bd82e793_ReadF64(_self_) == _1bd830046_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1ab54c1b5:;
			{
				return false;;
			}
		}
		_match_end_1ab54c0d8:;
	};
}



inline jule::Bool _1bd83327a_Lt(_1bd82c384_Const* _self_, _1bd82c384_Const _28714_x) {
	{
		
		if (_1bd831b08_IsStr(_self_)) {
			_case_begin_1ab5516e7:;
			{
				return (_1bd831b08_IsStr(&_28714_x) && (_1bd82e50c_ReadStr(_self_) < _1bd82e50c_ReadStr(&_28714_x)));;
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab55175d:;
			{
				return (_1bd82dc59_ReadI64(_self_) < _1bd82ea29_AsI64(&_28714_x));;
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab5517c4:;
			{
				return (_1bd82dee0_ReadU64(_self_) < _1bd82ecb0_AsU64(&_28714_x));;
			}
		}
		else if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab55184b:;
			{
				return (_1bd82e793_ReadF64(_self_) < _1bd830046_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1ab54d4d5:;
			{
				return false;;
			}
		}
		_match_end_1ab54d419:;
	};
}



inline jule::Bool _1bd8335bb_LtEq(_1bd82c384_Const* _self_, _1bd82c384_Const _31016_x) {
	{
		
		if (_1bd831b08_IsStr(_self_)) {
			_case_begin_1ab554387:;
			{
				return (_1bd831b08_IsStr(&_31016_x) && (_1bd82e50c_ReadStr(_self_) <= _1bd82e50c_ReadStr(&_31016_x)));;
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab5543ed:;
			{
				return (_1bd82dc59_ReadI64(_self_) <= _1bd82ea29_AsI64(&_31016_x));;
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab554464:;
			{
				return (_1bd82dee0_ReadU64(_self_) <= _1bd82ecb0_AsU64(&_31016_x));;
			}
		}
		else if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab5544db:;
			{
				return (_1bd82e793_ReadF64(_self_) <= _1bd830046_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1ab552077:;
			{
				return false;;
			}
		}
		_match_end_1ab551eab:;
	};
}



inline jule::Bool _1bd83390c_Gt(_1bd82c384_Const* _self_, _1bd82c384_Const _33314_x) {
	{
		
		if (_1bd831b08_IsStr(_self_)) {
			_case_begin_1ab557027:;
			{
				return (_1bd831b08_IsStr(&_33314_x) && (_1bd82e50c_ReadStr(_self_) > _1bd82e50c_ReadStr(&_33314_x)));;
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab55708d:;
			{
				return (_1bd82dc59_ReadI64(_self_) > _1bd82ea29_AsI64(&_33314_x));;
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab557104:;
			{
				return (_1bd82dee0_ReadU64(_self_) > _1bd82ecb0_AsU64(&_33314_x));;
			}
		}
		else if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab55717b:;
			{
				return (_1bd82e793_ReadF64(_self_) > _1bd830046_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1ab554c17:;
			{
				return false;;
			}
		}
		_match_end_1ab554b4b:;
	};
}



inline jule::Bool _1bd833c4d_GtEq(_1bd82c384_Const* _self_, _1bd82c384_Const _35616_x) {
	{
		
		if (_1bd831b08_IsStr(_self_)) {
			_case_begin_1ab559bb7:;
			{
				return (_1bd831b08_IsStr(&_35616_x) && (_1bd82e50c_ReadStr(_self_) >= _1bd82e50c_ReadStr(&_35616_x)));;
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab559c2d:;
			{
				return (_1bd82dc59_ReadI64(_self_) >= _1bd82ea29_AsI64(&_35616_x));;
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab559c94:;
			{
				return (_1bd82dee0_ReadU64(_self_) >= _1bd82ecb0_AsU64(&_35616_x));;
			}
		}
		else if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab559d1b:;
			{
				return (_1bd82e793_ReadF64(_self_) >= _1bd830046_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1ab5578a7:;
			{
				return false;;
			}
		}
		_match_end_1ab5577db:;
	};
}



inline jule::Bool _1bd83408e_Add(_1bd82c384_Const* _self_, _1bd82c384_Const _37719_x) {
	{
		
		if (_1bd831b08_IsStr(_self_)) {
			_case_begin_1ab5626c5:;
			{
				if ((!(_1bd831b08_IsStr(&_37719_x)))) {
					return false;;
				};
				_1bd830b18_SetStr(_self_, (_1bd82e50c_ReadStr(_self_) + _1bd82e50c_ReadStr(&_37719_x)));
			}
		}
		else if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab56273b:;
			{
				_1bd830dc1_SetF64(_self_, (_1bd82e793_ReadF64(_self_) + _1bd830046_AsF64(&_37719_x)));
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab5627a2:;
			{
				if (_1bd831d8e_IsF64(&_37719_x)) {
					_1bd830dc1_SetF64(_self_, (_1bd830046_AsF64(_self_) + _1bd82e793_ReadF64(&_37719_x)));
				} else {
					_1bd8302ee_SetI64(_self_, (_1bd82dc59_ReadI64(_self_) + _1bd82ea29_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab562829:;
			{
				if (_1bd831d8e_IsF64(&_37719_x)) {
					_1bd830dc1_SetF64(_self_, (_1bd830046_AsF64(_self_) + _1bd82e793_ReadF64(&_37719_x)));
				} else {
					_1bd8305a7_SetU64(_self_, (_1bd82dee0_ReadU64(_self_) + _1bd82ecb0_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1ab55a536:;
			{
				return false;;
			}
		}
		_match_end_1ab55a437:;
	};
	return true;;
}



inline jule::Bool _1bd8343d0_Sub(_1bd82c384_Const* _self_, _1bd82c384_Const _40619_x) {
	{
		
		if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab5673cd:;
			{
				_1bd830dc1_SetF64(_self_, (_1bd82e793_ReadF64(_self_) - _1bd830046_AsF64(&_40619_x)));
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab567477:;
			{
				if (_1bd831d8e_IsF64(&_40619_x)) {
					_1bd830dc1_SetF64(_self_, (_1bd830046_AsF64(_self_) - _1bd82e793_ReadF64(&_40619_x)));
				} else {
					_1bd8302ee_SetI64(_self_, (_1bd82dc59_ReadI64(_self_) - _1bd82ea29_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab5674ee:;
			{
				if (_1bd831d8e_IsF64(&_40619_x)) {
					_1bd830dc1_SetF64(_self_, (_1bd830046_AsF64(_self_) - _1bd82e793_ReadF64(&_40619_x)));
				} else {
					_1bd8305a7_SetU64(_self_, (_1bd82dee0_ReadU64(_self_) - _1bd82ecb0_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1ab566b2a:;
			{
				return false;;
			}
		}
		_match_end_1ab566a3c:;
	};
	return true;;
}



inline jule::Bool _1bd834721_Mul(_1bd82c384_Const* _self_, _1bd82c384_Const _43019_x) {
	{
		
		if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab56b239:;
			{
				_1bd830dc1_SetF64(_self_, (_1bd82e793_ReadF64(_self_) * _1bd830046_AsF64(&_43019_x)));
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab56b2d3:;
			{
				if (_1bd831d8e_IsF64(&_43019_x)) {
					_1bd830dc1_SetF64(_self_, (_1bd830046_AsF64(_self_) * _1bd82e793_ReadF64(&_43019_x)));
				} else {
					_1bd8302ee_SetI64(_self_, (_1bd82dc59_ReadI64(_self_) * _1bd82ea29_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab56b35a:;
			{
				if (_1bd831d8e_IsF64(&_43019_x)) {
					_1bd830dc1_SetF64(_self_, (_1bd830046_AsF64(_self_) * _1bd82e793_ReadF64(&_43019_x)));
				} else {
					_1bd8305a7_SetU64(_self_, (_1bd82dee0_ReadU64(_self_) * _1bd82ecb0_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1ab56a843:;
			{
				return false;;
			}
		}
		_match_end_1ab56a755:;
	};
	return true;;
}



inline jule::Bool _1bd834a62_Div(_1bd82c384_Const* _self_, _1bd82c384_Const _45819_x) {
	{
		
		if (_1bd831d8e_IsF64(_self_)) {
			_case_begin_1ab570095:;
			{
				jule::F64 _4614_l = _1bd830046_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1bd830dc1_SetF64(_self_, jule::div(_1bd82e793_ReadF64(_self_),_4614_l));
			}
		}
		else if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab57013e:;
			{
				jule::F64 _4674_l = _1bd830046_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1bd830dc1_SetF64(_self_, jule::div(_1bd830046_AsF64(_self_),_4674_l));
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab5701b6:;
			{
				jule::F64 _4734_l = _1bd830046_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1bd830dc1_SetF64(_self_, jule::div(_1bd830046_AsF64(_self_),_4734_l));
			}
		}
		else {
			_case_begin_1ab56e69e:;
			{
				return false;;
			}
		}
		_match_end_1ab56e5b1:;
	};
	return true;;
}



inline jule::Bool _1bd834da3_Mod(_1bd82c384_Const* _self_, _1bd82c384_Const _48719_x) {
	{
		
		if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab574077:;
			{
				jule::I64 _4904_l = _1bd82ea29_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1bd8302ee_SetI64(_self_, jule::mod(_1bd82dc59_ReadI64(_self_),_4904_l));
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab574473:;
			{
				jule::U64 _4964_l = _1bd82ecb0_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1bd8305a7_SetU64(_self_, jule::mod(_1bd82dee0_ReadU64(_self_),_4964_l));
			}
		}
		else {
			_case_begin_1ab574000:;
			{
				return false;;
			}
		}
		_match_end_1ab573e01:;
	};
	return true;;
}



inline jule::Bool _1bd8351e4_BitwiseAnd(_1bd82c384_Const* _self_, _1bd82c384_Const _50926_x) {
	{
		
		if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab576d7c:;
			{
				_1bd8302ee_SetI64(_self_, (_1bd82dc59_ReadI64(_self_) & _1bd82ea29_AsI64(&_50926_x)));
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab577278:;
			{
				_1bd8305a7_SetU64(_self_, (_1bd82dee0_ReadU64(_self_) & _1bd82ecb0_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1ab576d05:;
			{
				return false;;
			}
		}
		_match_end_1ab576c06:;
	};
	return true;;
}



inline jule::Bool _1bd835535_BitwiseOr(_1bd82c384_Const* _self_, _1bd82c384_Const _52325_x) {
	{
		
		if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab578b09:;
			{
				_1bd8302ee_SetI64(_self_, (_1bd82dc59_ReadI64(_self_) | _1bd82ea29_AsI64(&_52325_x)));
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab579005:;
			{
				_1bd8305a7_SetU64(_self_, (_1bd82dee0_ReadU64(_self_) | _1bd82ecb0_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1ab578a82:;
			{
				return false;;
			}
		}
		_match_end_1ab578983:;
	};
	return true;;
}



inline jule::Bool _1bd835876_Xor(_1bd82c384_Const* _self_, _1bd82c384_Const _53719_x) {
	{
		
		if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab57a886:;
			{
				_1bd8302ee_SetI64(_self_, (_1bd82dc59_ReadI64(_self_) ^ _1bd82ea29_AsI64(&_53719_x)));
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab57ac82:;
			{
				_1bd8305a7_SetU64(_self_, (_1bd82dee0_ReadU64(_self_) ^ _1bd82ecb0_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1ab57a80e:;
			{
				return false;;
			}
		}
		_match_end_1ab57a710:;
	};
	return true;;
}



inline jule::Bool _1bd835bb7_Lshift(_1bd82c384_Const* _self_, _1bd82c384_Const _55122_x) {
	{
		
		if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab57c613:;
			{
				jule::I64 _5544_l = _1bd82ea29_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1bd82ecb0_AsU64(&_55122_x);;
					_1bd8302ee_SetI64(_self_, (_5544_l << _5565_r));
				} else {
					_1bd83639e_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab57ca0e:;
			{
				_1bd83639e_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1ab57c58b:;
			{
				return false;;
			}
		}
		_match_end_1ab57c48c:;
	};
	return true;;
}



inline jule::Bool _1bd836008_Rshift(_1bd82c384_Const* _self_, _1bd82c384_Const _57122_x) {
	{
		
		if (_1bd831355_IsI64(_self_)) {
			_case_begin_1ab57eb32:;
			{
				jule::I64 _5744_l = _1bd82ea29_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1bd82ecb0_AsU64(&_57122_x);;
					_1bd8302ee_SetI64(_self_, (_5744_l >> _5765_r));
				} else {
					_1bd8366ce_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1bd8315db_IsU64(_self_)) {
			_case_begin_1ab58002d:;
			{
				_1bd8366ce_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1ab57eaaa:;
			{
				return false;;
			}
		}
		_match_end_1ab57e9ab:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1bd82c384_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a795c387_Prec(_1a795c013_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab5dacd1:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab5da808:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab5da86e:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab5dad47:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab5dadbe:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ab5da31e:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab5da72b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a795c013_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1a7962bb7_Fill(_1a7962799_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1a7962e4d_Dir(_1a7962799_File* _self_) {
	return _1d96a97cd_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a79631d4_Name(_1a7962799_File* _self_) {
	return _1d96a9404_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a79637ab_GetRow(_1a7962799_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1ab5e1545;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1ab5e1545:;
	}
	_iter_end_1ab5e1545:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7962799_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7964900_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a796ae67_pushErr(_1a796a8d4_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_1d974c80a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a796569d_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1a796b4c8_lex(_1a796a8d4_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a796d6ea_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1a795c013_Token> _4628_token = _1a796ebd5_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a795c013_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1ab620651:;
	}
	_iter_end_1ab620651:;;
}



inline jule::Str _1a796b819_id(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d3cc1_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1a7960742_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d3cc1_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1a7960bb5_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1a7960742_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return static_cast<jule::Str>((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1ab623a61:;
	}
	_iter_end_1ab623a61:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return static_cast<jule::Str>((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1a796baa0_resume(_1a796a8d4_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1a7960247_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ab627cc9:;
						{
							_1a796d6ea_newLine(_self_);
						}
					}
					else {
						_case_begin_1ab6275d1:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ab62789a:;
				};
				goto _iter_next_1ab6264ae;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1ab626a97;
					};
				}
			_iter_next_1ab626a97:;
			}
			_iter_end_1ab626a97:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1ab6264ae:;
	}
	_iter_end_1ab6264ae:;;
	return nullptr;;
}



inline void _1a796bd58_lexLineComment(_1a796a8d4_lex* _self_, jule::Ptr<_1a795c013_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1ab62a3e7;
			};
		}
	_iter_next_1ab62a3e7:;
	}
	_iter_end_1ab62a3e7:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1a796c111_lexRangeComment(_1a796a8d4_lex* _self_, jule::Ptr<_1a795c013_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1ab62da5a;
			};
			if ((_5404_r == '\n')) {
				_1a796d6ea_newLine(_self_);
				goto _iter_next_1ab62da5a;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ab62da5a:;
	}
	_iter_end_1ab62da5a:;;
	_1a796ae67_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1a796c452_num(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a79691eb_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab63648b;
	};
	__jule_func_result=_1a7969020_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab63648b;
	};
	__jule_func_result=_1a79677b0_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab63648b;
	};
	__jule_func_result=_1a79674e6_commonNum(_56420_txt);
	_julec_label_1ab63648b:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a796c793_escapeSeq(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1ab63a1e8;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ab638328:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab63848d:;
			{
				_5877_seq=_1a7969817_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ab63805e:;
			{
				_5877_seq=_1a7969ad1_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab6380c5:;
			{
				_5877_seq=_1a7969d9a_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1ab6379a9:;
			{
				_5877_seq=_1a796a164_byteEscape(_58626_txt);
			}
		}
		_match_end_1ab637de9:;
	};
	_julec_label_1ab63a1e8:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a796ae67_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1a796cb8e_getRune(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1a796c793_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d3cc1_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return jule::Str::from_rune(_6203_r);;
}



inline jule::Str _1a796ced0_lexRune(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_200880c8a_StrBuilder _6267_run = static__2008811b9_New(8LL);;
	_2008819d3_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1ab63e5c6;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1a796ae67_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a796d6ea_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1a796cb8e_getRune(_self_, &(_6424_part), false);;
			_20088172a_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_21a6d5ab4_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1ab63e5c6;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1ab63e5c6:;
	}
	_iter_end_1ab63e5c6:;;
	if ((_6297_n == 0LL)) {
		_1a796ae67_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1a796ae67_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _200882022_Str(&_6267_run);;
}



inline jule::Str _1a796d266_lexStr(_1a796a8d4_lex* _self_) {
	_200880c8a_StrBuilder _6667_s = static__2008811b9_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_2008819d3_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1ab64490b;
			};
			if ((_6744_ch == '\n')) {
				_1a796d6ea_newLine(_self_);
				if ((!(_6693_raw))) {
					_1a796ae67_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1a796cb8e_getRune(_self_, &(_6868_part), _6693_raw);;
			_20088172a_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_21a6d5ab4_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1ab64490b;
			};
		}
	_iter_next_1ab64490b:;
	}
	_iter_end_1ab64490b:;;
	return _200882022_Str(&_6667_s);;
}



inline void _1a796d6ea_newLine(_1a796a8d4_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a796dc5b_isOp(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1a795c013_Token>* _70763_t) {
	if ((!(_1a7965a66_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1a796e157_lexBasicOps(_1a796a8d4_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1a795c013_Token>* _71745_tok) {
	{
		auto expr = &(_1a796515e_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab64b6e3:;
		if (it != expr_end) {
			_1a7964900_kindPair *_71810_pair = it;
			{
				if (_1a796dc5b_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1ab64b6e3:;
			++it;
			goto _iter_begin_1ab64b6e3;
		}
		_iter_end_1ab64b6e3:;
	};
	return false;;
}



inline jule::Bool _1a796e553_lexId(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1a795c013_Token>* _72640_t) {
	jule::Str _7273_lex = _1a796b819_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a796e94e_lexNum(_1a796a8d4_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1a795c013_Token>* _73641_t) {
	jule::Str _7373_lex = _1a796c452_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1a795c013_Token> _1a796ebd5_token(_1a796a8d4_lex* _self_) {
	jule::Ptr<_1a795c013_Token> _7487_t = jule::new_ptr<_1a795c013_Token>(_1a795c013_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1a796baa0_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a796e94e_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1ab65383d:;
			{
				goto _match_end_1ab651709;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1ab6538a4:;
			{
				(*_7487_t.alloc)._field_Kind=_1a796ced0_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1ab65391a:;
			{
				(*_7487_t.alloc)._field_Kind=_1a796d266_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1a7965a66_bytesHasPrefix(&(_7533_txt), jule::Str::lit("//", 2))) {
			_case_begin_1ab652364:;
			{
				_1a796bd58_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a7965a66_bytesHasPrefix(&(_7533_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1ab6523ca:;
			{
				_1a796c111_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a796e157_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1ab652441:;
			{
				goto _match_end_1ab651709;
			}
		}
		else if (_1a796e553_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1ab6524a7:;
			{
				{
					auto expr = &(_1a7964d2e_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab655400:;
					if (it != expr_end) {
						_1a7964900_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1ab655400;
							};
						}
						_iter_next_1ab655400:;
						++it;
						goto _iter_begin_1ab655400;
					}
					_iter_end_1ab655400:;
				};
			}
		}
		else {
			_case_begin_1ab6522ed:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d3cc1_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a796ae67_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_7924_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1ab651709:;
	};
	(*(_self_))._field_column+=_21a6d5ab4_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a796a8d4_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79705a9_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79714bc_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79718da_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79724bd_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7972ac8_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7972d92_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797326b_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7973568_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79738ed_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7973bea_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a797435a_IsUnsafe(_1a7973ee7_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7973ee7_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7974aec_AutoSized(_1a7974789_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7974789_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7974ed7_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79753b1_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7976802_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7976abb_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79771c6_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79773e6_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797778c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7977b66_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797811c_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79788ae_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7978c88_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7979162_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797953b_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7979915_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7979dbb_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a797a8a0_Unhandled(_1a797a52b_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a797ab36_Ignored(_1a797a52b_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797a52b_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797b021_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797b84b_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797bd02_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797c62c_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797cd58_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797d7b5_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797de25_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797e222_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797e6c8_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797eaa2_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a797ee7b_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7980278_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79808d8_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7980e6b_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7981d7e_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79824de_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a79830a0_IsSelf(_1a7982c2b_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7982c2b_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a79844e1_IsAnon(_1a798417d_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798417d_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7985338_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7985712_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a79862e5_IsInf(_1a7985e82_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7985e82_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7986b20_IsWhileNext(_1a79867ac_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79867ac_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79871b4_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798758d_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7987967_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7987e1d_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79882e7_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798879d_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7988eda_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7989491_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7989caa_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798a5c4_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798aa7a_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798b63b_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798be66_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798c5c6_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798c890_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798d286_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798d9c3_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a798e133_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a7995535_FieldIns> _1a79907d8_instance(jule::Ptr<_1a7990431_Field> _self_) {
	return jule::new_ptr<_1a7995535_FieldIns>(_1a7995535_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7990431_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7992444_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a79960d5_StructIns> _1a79937b9_instance(jule::Ptr<_1a7993357_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a79960d5_StructIns> _1007_ins = jule::new_ptr<_1a79960d5_StructIns>(_1a79960d5_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a7995535_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a685a682_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1a79ae7c4_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b142a:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({jule::new_ptr<_1a685a682_Var>((*(_10715_s)))}));
			}
			_iter_next_1ab8b142a:;
			++it;
			goto _iter_begin_1ab8b142a;
		}
		_iter_end_1ab8b142a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b16e4:;
		if (it != expr_end) {
			jule::Ptr<_1a7990431_Field> _11115_f = *it;
			{
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1a7995535_FieldIns>>::make({_1a79907d8_instance(_11115_f)}));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a7a8427d_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1ab8b16e4:;
			++it;
			goto _iter_begin_1ab8b16e4;
		}
		_iter_end_1ab8b16e4:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1a79a8328_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8b5e57:;
			if (it != expr_end) {
				jule::Ptr<_1a79a8328_Fn> _12216_f = *it;
				{
					jule::Ptr<_1a79a8328_Fn> _1239_fins = jule::new_ptr<_1a79a8328_Fn>((*(_12216_f)));;
					(*_1239_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1a79a8328_Fn>>::make({_1239_fins}));
				}
				_iter_next_1ab8b5e57:;
				++it;
				goto _iter_begin_1ab8b5e57;
			}
			_iter_end_1ab8b5e57:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1a79960d5_StructIns> _1a7993ac7_appendInstance(_1a7993357_Struct* _self_, jule::Ptr<_1a79960d5_StructIns>* _13435_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b62ba:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _14015_ains = *it;
			{
				if (_1a7996c51_Same(_14015_ains.ptr(), (*(_13435_ins)))) {
					return _14015_ains;;
				};
			}
			_iter_next_1ab8b62ba:;
			++it;
			goto _iter_begin_1ab8b62ba;
		}
		_iter_end_1ab8b62ba:;
	};
	{ jule::Slice<jule::Ptr<_1a79960d5_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13435_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a79a8328_Fn> _1a7993ec3_FindMethod(_1a7993357_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b87d9:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _15315_f = *it;
			{
				if ((((*(_15315_f))._field_Statically == _15238_statically) && ((*_15315_f.alloc)._field_Ident == _15226_ident))) {
					return _15315_f;;
				};
			}
			_iter_next_1ab8b87d9:;
			++it;
			goto _iter_begin_1ab8b87d9;
		}
		_iter_end_1ab8b87d9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a685a682_Var> _1a7994314_FindStatic(_1a7993357_Struct* _self_, jule::Str _16326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b9d7e:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _16415_v = *it;
			{
				if (((*(_16415_v))._field_Ident == _16326_ident)) {
					return _16415_v;;
				};
			}
			_iter_next_1ab8b9d7e:;
			++it;
			goto _iter_begin_1ab8b9d7e;
		}
		_iter_end_1ab8b9d7e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7990431_Field> _1a7994655_FindField(_1a7993357_Struct* _self_, jule::Str _17425_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bbac8:;
		if (it != expr_end) {
			jule::Ptr<_1a7990431_Field> _17515_f = *it;
			{
				if (((*(_17515_f))._field_Ident == _17425_ident)) {
					return _17515_f;;
				};
			}
			_iter_next_1ab8bbac8:;
			++it;
			goto _iter_begin_1ab8bbac8;
		}
		_iter_end_1ab8bbac8:;
	};
	return nullptr;;
}



inline jule::Bool _1a7994996_IsImplements(_1a7993357_Struct* _self_, jule::Ptr<_1a79bb6d2_Trait> _18424_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bca96:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> *_18510_it = it;
			{
				if ((_18424_t == (*(_18510_it)))) {
					return true;;
				};
			}
			_iter_next_1ab8bca96:;
			++it;
			goto _iter_begin_1ab8bca96;
		}
		_iter_end_1ab8bca96:;
	};
	return false;;
}



inline jule::Bool _1a7994cd7_IsUses(_1a7993357_Struct* _self_, jule::Ptr<_1a7993357_Struct> _19418_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bd536:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> *_19510_u = it;
			{
				while ((_19418_s == (*(_19510_u)))) {
					{
						return true;;
					}
				_iter_next_1ab8be03c:;
				}
				_iter_end_1ab8be03c:;;
			}
			_iter_next_1ab8bd536:;
			++it;
			goto _iter_begin_1ab8bd536;
		}
		_iter_end_1ab8bd536:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7993357_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7995535_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7996459_Str(_1a79960d5_StructIns* _self_) {
	_200880c8a_StrBuilder _2397_kind = static__2008811b9_New(32LL);;
	_20088172a_WriteStr(&_2397_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2008819d3_WriteByte(&_2397_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8c1e1e:;
			if (it != expr_end) {
				jule::I64 _2438_i = it - expr->begin();
				jule::Ptr<_1a7a81016_InsGeneric> *_24311_g = it;
				{
					_20088172a_WriteStr(&_2397_kind, _1a7a82cb5_Str((*((*(_24311_g))))._field_Kind.ptr()));
					if ((_2438_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2008819d3_WriteByte(&_2397_kind, ',');
					};
				}
				_iter_next_1ab8c1e1e:;
				++it;
				_2438_i++;
				goto _iter_begin_1ab8c1e1e;
			}
			_iter_end_1ab8c1e1e:;
		};
		_2008819d3_WriteByte(&_2397_kind, ']');
	};
	return _200882022_Str(&_2397_kind);;
}



inline jule::Bool _1a799679a_Equal(jule::Ptr<_1a79960d5_StructIns> _self_, jule::Ptr<_1a7a828ec_TypeKind> _25518_other) {
	jule::Ptr<_1a79960d5_StructIns> _2563_s = _1a7a865c1_Struct(_25518_other.ptr());;
	if ((_2563_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2563_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2563_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2697_i = 0LL;;
	for (; (_2697_i < (*_self_.alloc)._field_Generics.len()); (_2697_i)++) {
		{
			if ((!(_1a7a83106_Equal((*((*(_self_))._field_Generics[_2697_i]))._field_Kind, (*((*(_2563_s))._field_Generics[_2697_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ab8c54e9:;
	}
	_iter_end_1ab8c54e9:;;
	return true;;
}



inline jule::Bool _1a7996c51_Same(_1a79960d5_StructIns* _self_, jule::Ptr<_1a79960d5_StructIns> _28316_s) {
	if ((((*(_self_))._field_Decl != (*(_28316_s))._field_Decl) || ((*_28316_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c8a2a:;
		if (it != expr_end) {
			jule::I64 _2877_i = it - expr->begin();
			jule::Ptr<_1a7a81016_InsGeneric> *_28710_g = it;
			{
				jule::Ptr<_1a7a81016_InsGeneric> _2884_g2 = (*(_28316_s))._field_Generics[_2877_i];;
				if ((((*((*((*(_28710_g))))._field_Kind))._field_BindIdent != (*(*(_2884_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a7a83106_Equal((*((*(_28710_g))))._field_Kind, (*(_2884_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ab8c8a2a:;
			++it;
			_2877_i++;
			goto _iter_begin_1ab8c8a2a;
		}
		_iter_end_1ab8c8a2a:;
	};
	return true;;
}



inline jule::Ptr<_1a79a8328_Fn> _1a799714c_FindMethod(_1a79960d5_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8cb555:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _29915_f = *it;
			{
				if ((((*(_29915_f))._field_Statically == _29838_statically) && ((*_29915_f.alloc)._field_Ident == _29826_ident))) {
					return _29915_f;;
				};
			}
			_iter_next_1ab8cb555:;
			++it;
			goto _iter_begin_1ab8cb555;
		}
		_iter_end_1ab8cb555:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7995535_FieldIns> _1a799748d_FindField(_1a79960d5_StructIns* _self_, jule::Str _30925_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8cbac7:;
		if (it != expr_end) {
			jule::Ptr<_1a7995535_FieldIns> _31015_f = *it;
			{
				if (((*((*(_31015_f))._field_Decl))._field_Ident == _30925_ident)) {
					return _31015_f;;
				};
			}
			_iter_next_1ab8cbac7:;
			++it;
			goto _iter_begin_1ab8cbac7;
		}
		_iter_end_1ab8cbac7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a685a682_Var> _1a79977ce_FindStatic(_1a79960d5_StructIns* _self_, jule::Str _32026_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8cda30:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _32115_v = *it;
			{
				if (((*(_32115_v))._field_Ident == _32026_ident)) {
					return _32115_v;;
				};
			}
			_iter_next_1ab8cda30:;
			++it;
			goto _iter_begin_1ab8cda30;
		}
		_iter_end_1ab8cda30:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79960d5_StructIns _Src) {
	_Stream << _1a7996459_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7999eda_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799a4d5_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799a8ae_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799addc_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799b283_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799b580_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799bb13_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799c4b5_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799c88e_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799cd45_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799d2eb_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799d6c5_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799db7b_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799e20e_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a799e792_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a0133_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a04c9_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a08a3_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a0ba0_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a1079_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a1453_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a182c_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a1c06_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a21ac_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a2663_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a2a3c_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a2d39_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a3136_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a3510_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a38d9_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a3cb3_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a4467_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a4654_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a48eb_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a4be8_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a50c2_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a53be_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a60c3_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a79aa281_ParamIns> _1a79a6bd9_instance(jule::Ptr<_1a79a6854_Param> _self_) {
	return jule::new_ptr<_1a79aa281_ParamIns>(_1a79aa281_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a79a6e70_IsSelf(_1a79a6854_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a79a7206_IsRef(_1a79a6854_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a6854_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a79a879b_IsVoid(_1a79a8328_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a79a8a32_IsMethod(_1a79a8328_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a79a8cb8_IsEntryPoint(_1a79a8328_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a79a904e_IsInit(_1a79a8328_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a79a92d5_IsAnon(_1a79a8328_Fn* _self_) {
	return _1a795ebb4_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a79a956b_AnyVar(_1a79a8328_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a79ab309_FnIns> _1a79a9802_instanceForce(jule::Ptr<_1a79a8328_Fn> _self_) {
	jule::Ptr<_1a79ab309_FnIns> _1017_ins = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a680dba7_Scope>(), ._field_Refers=static__1a79ae7c4_new(), });;
	(*(_1017_ins))._field_Params=jule::Slice<jule::Ptr<_1a79aa281_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d5a04:;
		if (it != expr_end) {
			jule::Ptr<_1a79a6854_Param> _10815_p = *it;
			{
				(*_1017_ins.alloc)._field_Params=jule::append((*_1017_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1a79aa281_ParamIns>>::make({_1a79a6bd9_instance(_10815_p)}));
			}
			_iter_next_1ab8d5a04:;
			++it;
			goto _iter_begin_1ab8d5a04;
		}
		_iter_end_1ab8d5a04:;
	};
	if (((*((*_1017_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1017_ins.alloc)._field_Result=(*((*(*((*(_1017_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1017_ins;;
}



inline jule::Ptr<_1a79ab309_FnIns> _1a79a9a88_instance(jule::Ptr<_1a79a8328_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1a79a9802_instanceForce(_self_);;
}



inline jule::Ptr<_1a79ab309_FnIns> _1a79a9d96_appendInstance(_1a79a8328_Fn* _self_, jule::Ptr<_1a79ab309_FnIns>* _12935_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a79ab309_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a79ab309_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8db224:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _14515_ains = *it;
			{
				if (_1a79acd66_Same(_14515_ains.ptr(), (*(_12935_ins)))) {
					return _14515_ains;;
				};
			}
			_iter_next_1ab8db224:;
			++it;
			goto _iter_begin_1ab8db224;
		}
		_iter_end_1ab8db224:;
	};
	{ jule::Slice<jule::Ptr<_1a79ab309_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79a8328_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a79aa5e4_Str(_1a79aa281_ParamIns* _self_) {
	_200880c8a_StrBuilder _1677_s = static__2008811b9_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_20088172a_WriteStr(&_1677_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_20088172a_WriteStr(&_1677_s, jule::Str::lit("&_:", 3));
	};
	if (_1a79a6e70_IsSelf((*(_self_))._field_Decl)) {
		if (_1a79a7206_IsRef((*(_self_))._field_Decl)) {
			_2008819d3_WriteByte(&_1677_s, '&');
		};
		_20088172a_WriteStr(&_1677_s, jule::Str::lit("self", 4));
		return _200882022_Str(&_1677_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_20088172a_WriteStr(&_1677_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_20088172a_WriteStr(&_1677_s, _1a7a82cb5_Str((*(_self_))._field_Kind));
	};
	return _200882022_Str(&_1677_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79aa281_ParamIns _Src) {
	_Stream << _1a79aa5e4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79ab64a_Str(_1a79ab309_FnIns* _self_) {
	;
	return _1a79ad1a7_GetKindStr(_self_, false);;
}



inline jule::Bool _1a79ab98b_Equal(jule::Ptr<_1a79ab309_FnIns> _self_, jule::Ptr<_1a7a828ec_TypeKind> _21918_other) {
	jule::Ptr<_1a79ab309_FnIns> _2203_f = _1a7a8633a_Fn(_21918_other.ptr());;
	if ((_2203_f == nullptr)) {
		return false;;
	};
	return _1a79abe31_EqualFn(_self_, &(_2203_f));;
}



inline jule::Bool _1a79abe31_EqualFn(jule::Ptr<_1a79ab309_FnIns> _self_, jule::Ptr<_1a79ab309_FnIns>* _23021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a79a879b_IsVoid((*(_self_))._field_Decl) != _1a79a879b_IsVoid((*((*(_23021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a79aa281_ParamIns>,jule::Ptr<_1a79aa281_ParamIns>> _2403_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a79aa281_ParamIns>,jule::Ptr<_1a79aa281_ParamIns>>((void*)__jule_anon1ab8e5ea9, nullptr, nullptr);;
	if (((*((*(_23021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Params.len()); (_2727_i)++) {
		{
			if ((!(_2403_checkParams((*(_self_))._field_Params[_2727_i], (*((*(_23021_f))))._field_Params[_2727_i])))) {
				return false;;
			};
		}
	_iter_next_1ab8eb652:;
	}
	_iter_end_1ab8eb652:;;
	if ((!(_1a79a879b_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1a7a83106_Equal((*_self_.alloc)._field_Result, (*((*(_23021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a79ac272_equalTrait(jule::Ptr<_1a79ab309_FnIns> _self_, jule::Ptr<_1a79ab309_FnIns>* _28924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a79abe31_EqualFn(_self_, _28924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _1a79ac508_Types(_1a79ab309_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ab902878:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7a86d74_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ab9028de:;
			{
				return jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1ab902416:;
			{
				return (*(_1a7a86d74_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1ab902317:;
	};
}



inline jule::Bool _1a79ac78e_IsBuiltin(_1a79ab309_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a79aca25_IsAnon(_1a79ab309_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a79a92d5_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a79acd66_Same(_1a79ab309_FnIns* _self_, jule::Ptr<_1a79ab309_FnIns> _33216_f) {
	if ((((*(_self_))._field_Decl != (*(_33216_f))._field_Decl) || ((*_33216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab905ccc:;
		if (it != expr_end) {
			jule::I64 _3377_i = it - expr->begin();
			jule::Ptr<_1a7a81016_InsGeneric> *_33710_g = it;
			{
				jule::Ptr<_1a7a81016_InsGeneric> _3384_g2 = (*(_33216_f))._field_Generics[_3377_i];;
				if ((((*((*((*(_33710_g))))._field_Kind))._field_BindIdent != (*(*(_3384_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a7a83106_Equal((*((*(_33710_g))))._field_Kind, (*(_3384_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ab905ccc:;
			++it;
			_3377_i++;
			goto _iter_begin_1ab905ccc;
		}
		_iter_end_1ab905ccc:;
	};
	return true;;
}



inline jule::Str _1a79ad1a7_GetKindStr(_1a79ab309_FnIns* _self_, jule::Bool _34922_ident) {
	_200880c8a_StrBuilder _3507_s = static__2008811b9_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_20088172a_WriteStr(&_3507_s, jule::Str::lit("unsafe ", 7));
	};
	_20088172a_WriteStr(&_3507_s, jule::Str::lit("fn", 2));
	if ((_34922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2008819d3_WriteByte(&_3507_s, ' ');
		_20088172a_WriteStr(&_3507_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_2008819d3_WriteByte(&_3507_s, '(');
	jule::I64 _3643_n = (*(_self_))._field_Params.len();;
	if ((_3643_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab90b101:;
			if (it != expr_end) {
				jule::I64 _3668_i = it - expr->begin();
				jule::Ptr<_1a79aa281_ParamIns> *_36611_p = it;
				{
					_20088172a_WriteStr(&_3507_s, _1a79aa5e4_Str((*(_36611_p)).ptr()));
					if ((_3668_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2008819d3_WriteByte(&_3507_s, ',');
					};
				}
				_iter_next_1ab90b101:;
				++it;
				_3668_i++;
				goto _iter_begin_1ab90b101;
			}
			_iter_end_1ab90b101:;
		};
	};
	_2008819d3_WriteByte(&_3507_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_2008819d3_WriteByte(&_3507_s, '!');
	};
	if ((!(_1a79a879b_IsVoid((*(_self_))._field_Decl)))) {
		_2008819d3_WriteByte(&_3507_s, ':');
		_20088172a_WriteStr(&_3507_s, _1a7a82cb5_Str((*(_self_))._field_Result.ptr()));
	};
	return _200882022_Str(&_3507_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79ab309_FnIns _Src) {
	_Stream << _1a79ab64a_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a79ae4d8_ReferenceStack> static__1a79ae7c4_new(void) {
	return jule::new_ptr<_1a79ae4d8_ReferenceStack>(_1a79ae4d8_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1a79aebc0_Len(_1a79ae4d8_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a79b0011_At(_1a79ae4d8_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1a79b02b9_Push(_1a79ae4d8_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1ac1c857c_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a79ab309_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1c9902:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1ac1c9902:;
			++it;
			goto _iter_begin_1ac1c9902;
		}
		_iter_end_1ac1c9902:;
	};
	return false;;
}

inline jule::Bool _1ac1de461_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a685a682_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1e0792:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1ac1e0792:;
			++it;
			goto _iter_begin_1ac1e0792;
		}
		_iter_end_1ac1e0792:;
	};
	return false;;
}

inline jule::Bool _1ac323c27_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a79960d5_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3250e1:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1ac3250e1:;
			++it;
			goto _iter_begin_1ac3250e1;
		}
		_iter_end_1ac3250e1:;
	};
	return false;;
}

inline jule::Bool _1ac5ed52e_Exist(_1a79ae4d8_ReferenceStack* _self_, jule::Ptr<_1a79bb6d2_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5ee82c:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1ac5ee82c:;
			++it;
			goto _iter_begin_1ac5ee82c;
		}
		_iter_end_1ac5ee82c:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79ae4d8_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79b09e5_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1a79b5e4b_pushErr(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a795c013_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_1d974c80a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a683545e_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1a79b66cc_pushSuggestion(_1a79b549a_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1a6836a15_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1a79b6ac8_checkCppUseDeclPath(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _1d96a8d71_Ext((*(_34553_path)));;
	if (((!(_1d97404bd_IsValidHeaderExt(_3463_ext))) && (!(_1d9740787_IsValidCppExt(_3463_ext))))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3463_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21a5d121d_Status> _3533_info = ({
		auto except = static__1d96aadc8_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1a79b5e4b_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_21a5d121d_Status>(nullptr);});
	});;
	if (_21a5d15e7_IsDir(_3533_info.ptr())) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a79b6dd6_buildCppHeaderImport(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_1d97401e3_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_1d96a8ada_Join(jule::Slice<jule::Str>::make({_1a7962e4d_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()),(*((*(_36541_decl))))._field_LinkPath}));
		jule::Bool _3708_ok = _1a79b6ac8_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d96a913a_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1a79b5e4b_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1a6817474_ImportInfo>(_1a6817474_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a79b7227_buildStdImport(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_1d96a4355_Replace(_3957_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_3957_path=_1d96a8ada_Join(jule::Slice<jule::Str>::make({_1d7cdedd2_PathStdlib,_3957_path}));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d96a913a_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_21a5d121d_Status> _4053_info = ({
		auto except = static__1d96aadc8_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1a79b5e4b_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_21a5d121d_Status>(nullptr);});
	});;
	if ((!(_21a5d15e7_IsDir(_4053_info.ptr())))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4153_i = (_1d969edcd_FindLast((*((*(_39335_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1a6817474_ImportInfo>(_1a6817474_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a681a39a_Package>(_1a681a39a_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a79b7568_buildIdentImport(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_1d969e62a_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1d969dd33_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1a79b5e4b_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a68135c4_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a79b66cc_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_1d96a4355_Replace(_4487_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_4487_path=_1d96a8ada_Join(jule::Slice<jule::Str>::make({_4413_modPath,_4487_path}));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d96a913a_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_21a5d121d_Status> _4593_info = ({
		auto except = static__1d96aadc8_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1a79b5e4b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_21a5d121d_Status>(nullptr);});
	});;
	if ((!(_21a5d15e7_IsDir(_4593_info.ptr())))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4693_i = (_1d969edcd_FindLast((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1a6817474_ImportInfo>(_1a6817474_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a681a39a_Package>(_1a681a39a_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a79b78a9_buildImport(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1ab23b943:;
			{
				return _1a79b6dd6_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1ab23bd3e:;
			{
				return _1a79b7227_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1ab23b8cc:;
			{
				return _1a79b7568_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1ab23b7cd:;
	};
}



inline jule::Bool _1a79b7bea_checkDuplicateUseDecl(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a6817474_ImportInfo>* _49838_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a6817474_ImportInfo> _5003_lpkg = _1a7a4b674_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>>((void*)__jule_anon_1ab23e00b, jule::Ptr<__jule_anon_1ab23e00b_ctx>::make(__jule_anon_1ab23e00b_ctx{._49838_pkg=_49838_pkg}).as<jule::Uintptr>(), __jule_anon_1ab23e00b_ctx_handler));;
	if ((_5003_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a79b5e4b_pushErr(_self_, &((*((*(_49838_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49838_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1a79b66cc_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a79b805d_implImportSelections(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a6817474_ImportInfo>* _51241_imp, jule::Ptr<_1a798a5c4_UseDecl>* _51264_decl) {
	(*((*(_51241_imp))))._field_Selected=(*((*(_51264_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51241_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2419c0:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> _51410_item = *it;
			{
				{
					auto expr = &((*((*(_51241_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab2423b6:;
					if (it != expr_end) {
						jule::Ptr<_1a795c013_Token> _51511_citem = *it;
						{
							if ((_51410_item == _51511_citem)) {
								goto _iter_end_1ab2423b6;
							} else if (((*(_51410_item))._field_Kind == (*(_51511_citem))._field_Kind)) {
								_1a79b5e4b_pushErr(_self_, &(_51410_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51410_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1a79b66cc_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1ab2423b6;
							};
						}
						_iter_next_1ab2423b6:;
						++it;
						goto _iter_begin_1ab2423b6;
					}
					_iter_end_1ab2423b6:;
				};
			}
			_iter_next_1ab2419c0:;
			++it;
			goto _iter_begin_1ab2419c0;
		}
		_iter_end_1ab2419c0:;
	};
}



inline jule::Str _1a79b839e_getAsLinkPath(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Str _52734_path) {
	if (_1d969d9ae_HasPrefix(_52734_path, _1d7cdedd2_PathStdlib)) {
		(_52734_path).mut_slice(_1d7cdedd2_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1d96a4355_Replace(_52734_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5333_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d96a913a_Abs(((_1a681455e_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a68135c4_GetModPath((*(_self_))._field_importer.data));
		_5333_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52734_path).mut_slice(_5333_root.len());;
	if ((_52734_path[0LL] == 92LLU)) {
		(_52734_path).mut_slice(1LL);;
	};
	return _1d96a4355_Replace(_52734_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1a79b87bc_pushCycleError(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a79b549a_symbolBuilder>* _54132_sb, jule::Str _54152_path, _200880c8a_StrBuilder* _54168_message) {
	;
	jule::Str _5433_refersTo = _1d974cc6c_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a79b839e_getAsLinkPath(_self_, _1a7962e4d_Dir((*((*((*(_54132_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1a79b839e_getAsLinkPath(_self_, _54152_path), &__jule_any_type4)}));;
	jule::Str _5473_m = _200882022_Str(_54168_message);;
	_20088172a_WriteStr(_54168_message, _1d969d5e6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20088172a_WriteStr(_54168_message, _5433_refersTo);
	_2008819d3_WriteByte(_54168_message, '\n');
	_20088172a_WriteStr(_54168_message, _5473_m);
}



inline void _1a79b8bda_pushCrossCycleError(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a79b549a_symbolBuilder>* _55437_target, jule::Ptr<_1a6817474_ImportInfo>* _55462_imp, jule::Ptr<_1a795c013_Token>* _55481_errorToken) {
	_200880c8a_StrBuilder _5557_message = static__2008811b9_New(32LL);;
	_1a79b87bc_pushCycleError(_self_, &(_self_), (*((*(_55462_imp))))._field_Path, &(_5557_message));
	jule::Ptr<_1a79b549a_symbolBuilder> _5597_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a79b549a_symbolBuilder> _5607_old = _self_;;
	while (((*(_5597_owner))._field_owner != nullptr)) {
		{
			_1a79b87bc_pushCycleError(_self_, &((*_5607_old.alloc)._field_owner), _1a7962e4d_Dir((*((*_5607_old.alloc)._field_table))._field_File.ptr()), &(_5557_message));
			if (((*_5597_owner.alloc)._field_owner == (*(_55437_target)))) {
				_1a79b87bc_pushCycleError(_self_, _55437_target, _1a7962e4d_Dir((*((*(_5597_owner))._field_table))._field_File), &(_5557_message));
				goto _iter_end_1ab751232;
			};
			_5607_old=_5597_owner;
			_5597_owner=(*_5597_owner.alloc)._field_owner;
		}
	_iter_next_1ab751232:;
	}
	_iter_end_1ab751232:;;
	_1a79b5e4b_pushErr(_self_, _55481_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_200882022_Str(&_5557_message), &__jule_any_type4)}));
}



inline jule::Bool _1a79b90d6_checkImportCycles(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a6817474_ImportInfo> _57734_imp, jule::Ptr<_1a798a5c4_UseDecl>* _57753_decl) {
	if (((*(_57734_imp))._field_Path == _1a7962e4d_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_57753_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a79b839e_getAsLinkPath(_self_, (*_57734_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a79b549a_symbolBuilder> _5877_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1ab756b72:;
	if ((_1a7962e4d_Dir((*((*(_5877_owner))._field_table))._field_File) == (*_57734_imp.alloc)._field_Path)) {
		_1a79b8bda_pushCrossCycleError(_self_, &(_5877_owner), &(_57734_imp), &((*((*(_57753_decl))))._field_Token));
		return false;;
	};
	if (((*(_5877_owner))._field_owner != nullptr)) {
		_5877_owner=(*_5877_owner.alloc)._field_owner;
		goto _julec_label_1ab756b72;
	};
	return true;;
}



inline void _1a79b9504_checkPackageAccessibility(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _60842_decl, jule::Str* _60859_mod, jule::Str* _60870_path) {
	if (((((_1a681455e_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a68135c4_GetModPath((*(_self_))._field_importer.data) != (*(_60859_mod))) && _1d96a2e7a_Contains((*(_60870_path)), jule::Str::lit("internal", 8)))) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_60842_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a79b9900_importPackage(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a6817474_ImportInfo>* _61435_imp, jule::Ptr<_1a798a5c4_UseDecl>* _61458_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61435_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a6817474_ImportInfo> _6197_port = ((_1a681455e_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a6813c56_GetImport((*(_self_))._field_importer.data, (*((*(_61435_imp))))._field_Path);;
	if ((_6197_port != nullptr)) {
		(*((*(_61435_imp))))._field_Package=(*_6197_port.alloc)._field_Package;
		(*((*(_61435_imp))))._field_Duplicate=true;
		jule::Str _6244_oldMod = ((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a68135c4_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a681333d_SetModPath((*_self_.alloc)._field_importer.data, ((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a6813915_ModById((*_self_.alloc)._field_importer.data, (*((*(_61435_imp))))._field_ModId));
		_1a79b9504_checkPackageAccessibility(_self_, _61458_decl, &(_6244_oldMod), &((*_6197_port.alloc)._field_Path));
		((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a681333d_SetModPath((*_self_.alloc)._field_importer.data, _6244_oldMod);
	} else {
		if ((!(_1a79b90d6_checkImportCycles(_self_, (*(_61435_imp)), _61458_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6334_oldMod = ((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a68135c4_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a681333d_SetModPath((*_self_.alloc)._field_importer.data, _6334_oldMod);
		});;
		if ((*((*(_61435_imp))))._field_Std) {
			((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a681333d_SetModPath((*_self_.alloc)._field_importer.data, _1d7cdedd2_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a79705a9_Ast>> _6388_asts;
		jule::Slice<_1d974c80a_Log> _63818_errors;
		({
			__jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log __jule_assign_result = ((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a6814152_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61435_imp))))._field_Path, (!((*((*(_61435_imp))))._field_Std)));
			_6388_asts = __jule_assign_result.__jule_result_arg0;
			_63818_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63818_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63818_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a79b9504_checkPackageAccessibility(_self_, _61458_decl, &(_6334_oldMod), &((*((*(_61435_imp))))._field_Path));
		{
			auto expr = &(_6388_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab763299:;
			if (it != expr_end) {
				jule::Ptr<_1a79705a9_Ast> _64616_ast = *it;
				{
					jule::Ptr<_1a7a4b18a_SymbolTable> _64713_table = nullptr;;
					({
						__jule_tuple_x_1a7a4b18a_SymbolTable__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a7aa32d0_buildSymbols(&(_64616_ast), &((*_self_.alloc)._field_importer), _self_);
						_64713_table = __jule_assign_result.__jule_result_arg0;
						_63818_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63818_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63818_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61435_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61435_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>::make({_64713_table}));
				}
				_iter_next_1ab763299:;
				++it;
				goto _iter_begin_1ab763299;
			}
			_iter_end_1ab763299:;
		};
	};
	_1a79b805d_implImportSelections(_self_, _61435_imp, _61458_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a79b9c41_importUseDecl(jule::Ptr<_1a79b549a_symbolBuilder> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _66135_decl) {
	jule::Ptr<_1a6817474_ImportInfo> _6627_imp = _1a79b78a9_buildImport(_self_, _66135_decl);;
	if ((_6627_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6687_ok = _1a79b7bea_checkDuplicateUseDecl(_self_, &(_6627_imp));;
	if ((!(_6687_ok))) {
		return nullptr;;
	};
	_6687_ok=_1a79b9900_importPackage(_self_, &(_6627_imp), _66135_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1a6817474_ImportInfo>>::make({_6627_imp}));
	if (_6687_ok) {
		((_1a681455e_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a681440a_Imported((*_self_.alloc)._field_importer.data, _6627_imp);
		return _6627_imp;;
	};
	return nullptr;;
}



inline void _1a79b9e3e_importUseDecls(jule::Ptr<_1a79b549a_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab768c50:;
		if (it != expr_end) {
			jule::Ptr<_1a798a5c4_UseDecl> _68315_decl = *it;
			{
				_1a79b9c41_importUseDecl(_self_, &(_68315_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1ab768c50;
				};
			}
			_iter_next_1ab768c50:;
			++it;
			goto _iter_begin_1ab768c50;
		}
		_iter_end_1ab768c50:;
	};
}



inline void _1a79ba1e7_appendNode(_1a79b549a_symbolBuilder* _self_, _1a79714bc_Node* _69231_node) {
	{
		auto &_match_expr{ (*(_69231_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ab7692a0:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1a6808751_Impl>>::make({_1a79b4dd4_buildImpl((*(_69231_node))._field_Data.cast_ptr<_1a798e133_Impl>(&__jule_any_type11))}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab76a2b2:;
			{
				jule::Ptr<_1a7a81b0a_TypeAlias> _6978_ta = _1a79b1430_buildTypeAlias((*(_69231_node))._field_Data.cast_ptr<_1a7988eda_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>::make({_6978_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ab76a328:;
			{
				jule::Ptr<_1a7993357_Struct> _7008_srct = _1a79b1cc1_buildStruct((*(_69231_node))._field_Data.cast_ptr<_1a798d286_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1a7993357_Struct>>::make({_7008_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab76a38e:;
			{
				jule::Ptr<_1a79a8328_Fn> _7038_f = _1a79b2970_buildFunc((*(_69231_node))._field_Data.cast_ptr<_1a798417d_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1a79a8328_Fn>>::make({_7038_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab76a405:;
			{
				jule::Ptr<_1a79bb6d2_Trait> _7068_t = _1a79b32bc_buildTrait((*(_69231_node))._field_Data.cast_ptr<_1a798d9c3_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1a79bb6d2_Trait>>::make({_7068_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab76a46b:;
			{
				jule::Ptr<_1a685a682_Var> _7098_v = _1a79b4851_buildVar((*(_69231_node))._field_Data.cast_ptr<_1a7985338_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({_7098_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ab76aaa9:;
			{
				jule::Ptr<_1a79bdddd_Enum> _7128_e = _1a79b3d4a_buildEnum((*(_69231_node))._field_Data.cast_ptr<_1a798b63b_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1a79bdddd_Enum>>::make({_7128_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ab76ab20:;
			{
				jule::Ptr<_1a79c05e8_TypeEnum> _7158_e = _1a79b4587_buildTypeEnum((*(_69231_node))._field_Data.cast_ptr<_1a798c5c6_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1a79c05e8_TypeEnum>>::make({_7158_e}));
			}
		}
		else {
			_case_begin_1ab76a1a2:;
			{
				_1a79b5e4b_pushErr(_self_, &((*(_69231_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab76a14c:;
	};
}



inline void _1a79ba3e5_appendNodes(_1a79b549a_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab775102:;
		if (it != expr_end) {
			_1a79714bc_Node _72315_node = *it;
			{
				_1a79ba1e7_appendNode(_self_, &(_72315_node));
			}
			_iter_next_1ab775102:;
			++it;
			goto _iter_begin_1ab775102;
		}
		_iter_end_1ab775102:;
	};
}



inline void _1a79ba69d_pushDirectivePass(_1a79b549a_symbolBuilder* _self_, jule::Ptr<_1a79718da_Directive>* _72838_d) {
	if (((*((*(_72838_d))))._field_Args.len() == 0LL)) {
		_1a79b5e4b_pushErr(_self_, &((*((*(_72838_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72838_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a795c013_Token> _7334_arg = (*((*(_72838_d))))._field_Args[1LL];;
		_1a79b5e4b_pushErr(_self_, &(_7334_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a795c013_Token> _7373_arg = (*((*(_72838_d))))._field_Args[0LL];;
	if (((*(_7373_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a79b5e4b_pushErr(_self_, &(_7373_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7373_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a79b5e4b_pushErr(_self_, &(_7373_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1a79b09e5_Pass>::make({_1a79b09e5_Pass{._field_Token=(*((*(_72838_d))))._field_Tag, ._field_Text=(*_7373_arg.alloc)._field_Kind.slice(1LL, ((*_7373_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1a79ba89b_appendTopDirectives(_1a79b549a_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab77a767:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _75515_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75515_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1ab77c219:;
						{
							_1a79ba69d_pushDirectivePass(_self_, &(_75515_d));
						}
					}
					_match_end_1ab77c14d:;
				};
			}
			_iter_next_1ab77a767:;
			++it;
			goto _iter_begin_1ab77a767;
		}
		_iter_end_1ab77a767:;
	};
}



inline void _1a79baa99_build(jule::Ptr<_1a79b549a_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a7a4b18a_SymbolTable>(_1a7a4b18a_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1a79ba89b_appendTopDirectives(_self_);
	_1a79b9e3e_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a79ba3e5_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a79b549a_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a79bba9a_Str(_1a79bb6d2_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a79bbddb_Equal(jule::Ptr<_1a79bb6d2_Trait> _self_, jule::Ptr<_1a7a828ec_TypeKind> _2518_other) {
	jule::Ptr<_1a79bb6d2_Trait> _263_trt = _1a7a86857_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a79a8328_Fn> _1a79bc381_FindMethod(_1a79bb6d2_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab780ae1:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1ab780ae1:;
			++it;
			goto _iter_begin_1ab780ae1;
		}
		_iter_end_1ab780ae1:;
	};
	return _1a79bca13_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a79a8328_Fn> _1a79bca13_findMethodInherit(_1a79bb6d2_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab782d13:;
		if (it != expr_end) {
			jule::Ptr<_1a7a89abe_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1ab782d13;
				};
				jule::Ptr<_1a79bb6d2_Trait> _608_t = _1a7a86857_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a79a8328_Fn> _629_f2 = _1a79bc381_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1ab782d13:;
			++it;
			goto _iter_begin_1ab782d13;
		}
		_iter_end_1ab782d13:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79bb6d2_Trait _Src) {
	_Stream << _1a79bba9a_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a79bd728_AutoExpr(_1a79bd371_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79bd371_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a79be262_Str(_1a79bdddd_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a79be5a3_Equal(jule::Ptr<_1a79bdddd_Enum> _self_, jule::Ptr<_1a7a828ec_TypeKind> _3818_other) {
	jule::Ptr<_1a79bdddd_Enum> _393_enm = _1a7a85801_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a79bd371_EnumItem> _1a79be9d2_FindItem(_1a79bdddd_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab787521:;
		if (it != expr_end) {
			jule::Ptr<_1a79bd371_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1ab787521:;
			++it;
			goto _iter_begin_1ab787521;
		}
		_iter_end_1ab787521:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79bdddd_Enum _Src) {
	_Stream << _1a79be262_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c0021_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a79c0939_Str(_1a79c05e8_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a79c0c7a_Equal(jule::Ptr<_1a79c05e8_TypeEnum> _self_, jule::Ptr<_1a7a828ec_TypeKind> _8018_other) {
	jule::Ptr<_1a79c05e8_TypeEnum> _813_tenm = _1a7a85a87_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a79c0021_TypeEnumItem> _1a79c11a9_FindItem(_1a79c05e8_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab789798:;
		if (it != expr_end) {
			jule::Ptr<_1a79c0021_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1ab789798:;
			++it;
			goto _iter_begin_1ab789798;
		}
		_iter_end_1ab789798:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c05e8_TypeEnum _Src) {
	_Stream << _1a79c0939_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79c3ac4_Str(_1a79c3750_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a79c3e15_Equal(jule::Ptr<_1a79c3750_comptimeRange> _self_, jule::Ptr<_1a7a828ec_TypeKind> _3618_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c3750_comptimeRange _Src) {
	_Stream << _1a79c3ac4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79c45db_Str(_1a79c4223_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a79c492c_Equal(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a828ec_TypeKind> _4618_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c4ec1__Name(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a5322a_Eval>* _5023_e, jule::Ptr<_1a797a52b_FnCallExpr>* _5038_fc) {
	if (((*((*(_5038_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_5023_e)).ptr(), (*((*((*(_5038_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _557_constant = static__1bd82d121_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_557_constant, &__jule_any_type19), ._field_Constant=_557_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c53bc__Type(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a5322a_Eval>* _6327_e, jule::Ptr<_1a797a52b_FnCallExpr>* _6342_fc) {
	if (((*((*(_6342_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_6327_e)).ptr(), (*((*((*(_6342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_6327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c57b8__Public(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Ptr<_1a7a5322a_Eval>* _7129_e, jule::Ptr<_1a797a52b_FnCallExpr>* _7144_fc) {
	if (((*((*(_7144_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_7129_e)).ptr(), (*((*((*(_7144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _767_constant = static__1bd82cd57_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_767_constant, &__jule_any_type19), ._field_Constant=_767_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c5ac6_subIdent(jule::Ptr<_1a79c4223_comptimeStructField> _self_, jule::Str* _8426_ident) {
	{
		auto &_match_expr{ (*(_8426_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab797421:;
			{
				jule::Ptr<_1a79ab309_FnIns> _878_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab798730, jule::Ptr<__jule_anon_1ab798730_ctx>::make(__jule_anon_1ab798730_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab798730_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ab7974ba:;
			{
				jule::Ptr<_1a79ab309_FnIns> _948_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab79a6cc, jule::Ptr<__jule_anon_1ab79a6cc_ctx>::make(__jule_anon_1ab79a6cc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab79a6cc_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab797542:;
			{
				jule::Ptr<_1a79ab309_FnIns> _1018_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab79c635, jule::Ptr<__jule_anon_1ab79c635_ctx>::make(__jule_anon_1ab79c635_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab79c635_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_1018_method));;
			}
		}
		else {
			_case_begin_1ab797135:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab7972ab:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c4223_comptimeStructField _Src) {
	_Stream << _1a79c45db_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79c6258_Str(_1a79c5dd4_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a79c6599_Equal(jule::Ptr<_1a79c5dd4_comptimeStructFields> _self_, jule::Ptr<_1a7a828ec_TypeKind> _12018_other) {
	return false;;
}



inline void _1a79c6a1c_ready(_1a79c5dd4_comptimeStructFields* _self_, jule::Ptr<_1a685a682_Var>* _12426_keyA, jule::Ptr<_1a685a682_Var>* _12443_keyB) {
	if (((*(_12426_keyA)) != nullptr)) {
		(*((*(_12426_keyA))))._field_Constant=true;
		(*((*(_12426_keyA))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_12426_keyA))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12443_keyB)) != nullptr)) {
		(*((*(_12443_keyB))))._field_Constant=true;
		(*((*(_12443_keyB))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_12443_keyB))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c4223_comptimeStructField>(), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data6)})});
	};
}



inline void _1a79c6e3a_step(_1a79c5dd4_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1a685a682_Var>* _14533_keyA, jule::Ptr<_1a685a682_Var>* _14550_keyB) {
	if (((*(_14533_keyA)) != nullptr)) {
		(*((*((*((*(_14533_keyA))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_14520_i));
		(*(*((*((*(_14533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_14533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14550_keyB)) != nullptr)) {
		(*(_1a7a87627_comptimeStructField((*((*((*(_14550_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14520_i];
	};
}



inline jule::I64 _1a79c71c1_len(_1a79c5dd4_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c5dd4_comptimeStructFields _Src) {
	_Stream << _1a79c6258_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79c7853_Str(_1a79c74ce_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a79c7b94_Equal(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a828ec_TypeKind> _16918_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c82c1__Name(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a5322a_Eval>* _17323_e, jule::Ptr<_1a797a52b_FnCallExpr>* _17338_fc) {
	if (((*((*(_17338_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_17323_e)).ptr(), (*((*((*(_17338_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _1787_constant = static__1bd82d121_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_1787_constant, &__jule_any_type19), ._field_Constant=_1787_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c86bc__Type(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a5322a_Eval>* _18627_e, jule::Ptr<_1a797a52b_FnCallExpr>* _18642_fc) {
	if (((*((*(_18642_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_18627_e)).ptr(), (*((*((*(_18642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_18627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c8ab8__Public(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Ptr<_1a7a5322a_Eval>* _19429_e, jule::Ptr<_1a797a52b_FnCallExpr>* _19444_fc) {
	if (((*((*(_19444_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_19429_e)).ptr(), (*((*((*(_19444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _1997_constant = static__1bd82cd57_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_1997_constant, &__jule_any_type19), ._field_Constant=_1997_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79c8e09_subIdent(jule::Ptr<_1a79c74ce_comptimeStatic> _self_, jule::Str* _20726_ident) {
	{
		auto &_match_expr{ (*(_20726_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab7ad0e6:;
			{
				jule::Ptr<_1a79ab309_FnIns> _2108_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7ae3d3, jule::Ptr<__jule_anon_1ab7ae3d3_ctx>::make(__jule_anon_1ab7ae3d3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7ae3d3_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_2108_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ab7ad190:;
			{
				jule::Ptr<_1a79ab309_FnIns> _2178_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7b133b, jule::Ptr<__jule_anon_1ab7b133b_ctx>::make(__jule_anon_1ab7b133b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7b133b_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_2178_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab7ad217:;
			{
				jule::Ptr<_1a79ab309_FnIns> _2248_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7b3294, jule::Ptr<__jule_anon_1ab7b3294_ctx>::make(__jule_anon_1ab7b3294_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7b3294_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_2248_method));;
			}
		}
		else {
			_case_begin_1ab7acd0a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab7ace81:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c74ce_comptimeStatic _Src) {
	_Stream << _1a79c7853_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79c9514_Str(_1a79c9190_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a79c9855_Equal(jule::Ptr<_1a79c9190_comptimeStatics> _self_, jule::Ptr<_1a7a828ec_TypeKind> _24318_other) {
	return false;;
}



inline void _1a79c9cc8_ready(_1a79c9190_comptimeStatics* _self_, jule::Ptr<_1a685a682_Var>* _24726_keyA, jule::Ptr<_1a685a682_Var>* _24743_keyB) {
	if (((*(_24726_keyA)) != nullptr)) {
		(*((*(_24726_keyA))))._field_Constant=true;
		(*((*(_24726_keyA))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_24726_keyA))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24743_keyB)) != nullptr)) {
		(*((*(_24743_keyB))))._field_Constant=true;
		(*((*(_24743_keyB))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_24743_keyB))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c74ce_comptimeStatic>(), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data8)})});
	};
}



inline void _1a79ca1e6_step(_1a79c9190_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1a685a682_Var>* _26833_keyA, jule::Ptr<_1a685a682_Var>* _26850_keyB) {
	if (((*(_26833_keyA)) != nullptr)) {
		(*((*((*((*(_26833_keyA))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_26820_i));
		(*(*((*((*(_26833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_26833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26850_keyB)) != nullptr)) {
		(*(_1a7a88e31_comptimeStatic((*((*((*(_26850_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26820_i];
	};
}



inline jule::I64 _1a79ca47c_len(_1a79c9190_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79c9190_comptimeStatics _Src) {
	_Stream << _1a79c9514_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79cac1e_Str(_1a79ca78a_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a79cb060_Equal(jule::Ptr<_1a79ca78a_comptimeEnumField> _self_, jule::Ptr<_1a7a828ec_TypeKind> _29218_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79cb4d3__Name(jule::Ptr<_1a79ca78a_comptimeEnumField> _self_, jule::Ptr<_1a7a5322a_Eval>* _29623_e, jule::Ptr<_1a797a52b_FnCallExpr>* _29638_fc) {
	if (((*((*(_29638_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_29623_e)).ptr(), (*((*((*(_29638_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _3017_constant = static__1bd82d121_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_3017_constant, &__jule_any_type19), ._field_Constant=_3017_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79cb824_subIdent(jule::Ptr<_1a79ca78a_comptimeEnumField> _self_, jule::Str* _30926_ident) {
	{
		auto &_match_expr{ (*(_30926_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab7bddd7:;
			{
				jule::Ptr<_1a79ab309_FnIns> _3128_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7c00b4, jule::Ptr<__jule_anon_1ab7c00b4_ctx>::make(__jule_anon_1ab7c00b4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7c00b4_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_3128_method));;
			}
		}
		else {
			_case_begin_1ab7bdb0c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab7bdc83:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a79ca78a_comptimeEnumField _Src) {
	_Stream << _1a79cac1e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79cbea6_Str(_1a79cbb32_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a79cc2e7_Equal(jule::Ptr<_1a79cbb32_comptimeEnumFields> _self_, jule::Ptr<_1a7a828ec_TypeKind> _33118_other) {
	return false;;
}



inline void _1a79cc76a_ready(_1a79cbb32_comptimeEnumFields* _self_, jule::Ptr<_1a685a682_Var>* _33526_keyA, jule::Ptr<_1a685a682_Var>* _33543_keyB) {
	if (((*(_33526_keyA)) != nullptr)) {
		(*((*(_33526_keyA))))._field_Constant=true;
		(*((*(_33526_keyA))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_33526_keyA))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33543_keyB)) != nullptr)) {
		(*((*(_33543_keyB))))._field_Constant=true;
		(*((*(_33543_keyB))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_33543_keyB))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79ca78a_comptimeEnumField>(), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data10)})});
	};
}



inline void _1a79ccb88_step(_1a79cbb32_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1a685a682_Var>* _35633_keyA, jule::Ptr<_1a685a682_Var>* _35650_keyB) {
	if (((*(_35633_keyA)) != nullptr)) {
		(*((*((*((*(_35633_keyA))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_35620_i));
		(*(*((*((*(_35633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_35633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35650_keyB)) != nullptr)) {
		(*(_1a7a87b44_comptimeEnumField((*((*((*(_35650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35620_i];
	};
}



inline jule::I64 _1a79cce1e_len(_1a79cbb32_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79cbb32_comptimeEnumFields _Src) {
	_Stream << _1a79cbea6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79cd5a1_Str(_1a79cd22c_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a79cd8e2_Equal(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a828ec_TypeKind> _38018_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79ce151__Name(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _38423_e, jule::Ptr<_1a797a52b_FnCallExpr>* _38438_fc) {
	if (((*((*(_38438_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_38423_e)).ptr(), (*((*((*(_38438_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _3897_constant = static__1bd82d121_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_3897_constant, &__jule_any_type19), ._field_Constant=_3897_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79ce54c__Type(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _39727_e, jule::Ptr<_1a797a52b_FnCallExpr>* _39742_fc) {
	if (((*((*(_39742_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_39727_e)).ptr(), (*((*((*(_39742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_39727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79ce948__Variadic(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _40531_e, jule::Ptr<_1a797a52b_FnCallExpr>* _40546_fc) {
	if (((*((*(_40546_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_40531_e)).ptr(), (*((*((*(_40546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _4107_constant = static__1bd82cd57_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_4107_constant, &__jule_any_type19), ._field_Constant=_4107_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79ced44__Reference(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Ptr<_1a7a5322a_Eval>* _41832_e, jule::Ptr<_1a797a52b_FnCallExpr>* _41847_fc) {
	if (((*((*(_41847_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_41832_e)).ptr(), (*((*((*(_41847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _4237_constant = static__1bd82cd57_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_4237_constant, &__jule_any_type19), ._field_Constant=_4237_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d0185_subIdent(jule::Ptr<_1a79cd22c_comptimeParam> _self_, jule::Str* _43126_ident) {
	{
		auto &_match_expr{ (*(_43126_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab7d3803:;
			{
				jule::Ptr<_1a79ab309_FnIns> _4348_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7d4b34, jule::Ptr<__jule_anon_1ab7d4b34_ctx>::make(__jule_anon_1ab7d4b34_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7d4b34_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_4348_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ab7d3869:;
			{
				jule::Ptr<_1a79ab309_FnIns> _4418_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7d6a8c, jule::Ptr<__jule_anon_1ab7d6a8c_ctx>::make(__jule_anon_1ab7d6a8c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7d6a8c_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_4418_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ab7d38e1:;
			{
				jule::Ptr<_1a79ab309_FnIns> _4488_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7d89e5, jule::Ptr<__jule_anon_1ab7d89e5_ctx>::make(__jule_anon_1ab7d89e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7d89e5_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_4488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab7d3968:;
			{
				jule::Ptr<_1a79ab309_FnIns> _4558_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab7da94d, jule::Ptr<__jule_anon_1ab7da94d_ctx>::make(__jule_anon_1ab7da94d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7da94d_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_4558_method));;
			}
		}
		else {
			_case_begin_1ab7d34c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab7d3649:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a79cd22c_comptimeParam _Src) {
	_Stream << _1a79cd5a1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79d0707_Str(_1a79d03b6_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a79d0a48_Equal(jule::Ptr<_1a79d03b6_comptimeParams> _self_, jule::Ptr<_1a7a828ec_TypeKind> _47418_other) {
	return false;;
}



inline void _1a79d0ebb_ready(_1a79d03b6_comptimeParams* _self_, jule::Ptr<_1a685a682_Var>* _47826_keyA, jule::Ptr<_1a685a682_Var>* _47843_keyB) {
	if (((*(_47826_keyA)) != nullptr)) {
		(*((*(_47826_keyA))))._field_Constant=true;
		(*((*(_47826_keyA))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_47826_keyA))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47843_keyB)) != nullptr)) {
		(*((*(_47843_keyB))))._field_Constant=true;
		(*((*(_47843_keyB))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_47843_keyB))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79cd22c_comptimeParam>(), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data12)})});
	};
}



inline void _1a79d13d9_step(_1a79d03b6_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1a685a682_Var>* _49933_keyA, jule::Ptr<_1a685a682_Var>* _49950_keyB) {
	if (((*(_49933_keyA)) != nullptr)) {
		(*((*((*((*(_49933_keyA))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_49920_i));
		(*(*((*((*(_49933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_49933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49950_keyB)) != nullptr)) {
		(*(_1a7a88161_comptimeParam((*((*((*(_49950_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49920_i];
	};
}



inline jule::I64 _1a79d1670_len(_1a79d03b6_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d03b6_comptimeParams _Src) {
	_Stream << _1a79d0707_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79d1d02_Str(_1a79d197d_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a79d2143_Equal(jule::Ptr<_1a79d197d_comptimeTypeInfos> _self_, jule::Ptr<_1a7a828ec_TypeKind> _52318_other) {
	return false;;
}



inline void _1a79d25b6_ready(_1a79d197d_comptimeTypeInfos* _self_, jule::Ptr<_1a685a682_Var>* _52726_keyA, jule::Ptr<_1a685a682_Var>* _52743_keyB) {
	if (((*(_52726_keyA)) != nullptr)) {
		(*((*(_52726_keyA))))._field_Constant=true;
		(*((*(_52726_keyA))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_52726_keyA))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52743_keyB)) != nullptr)) {
		(*((*(_52743_keyB))))._field_Constant=true;
		(*((*(_52743_keyB))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_52743_keyB))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79d3078_comptimeTypeInfo>(), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data15)})});
	};
}



inline void _1a79d29d4_step(_1a79d197d_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1a685a682_Var>* _54833_keyA, jule::Ptr<_1a685a682_Var>* _54850_keyB) {
	if (((*(_54833_keyA)) != nullptr)) {
		(*((*((*((*(_54833_keyA))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_54820_i));
		(*(*((*((*(_54833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_54833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54850_keyB)) != nullptr)) {
		(*((*((*((*(_54850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54820_i], (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data15);
	};
}



inline jule::I64 _1a79d2c6a_len(_1a79d197d_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d197d_comptimeTypeInfos _Src) {
	_Stream << _1a79d1d02_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a79d33ec_Str(_1a79d3078_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a7a82cb5_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a79d373d_Equal(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a828ec_TypeKind> _57218_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d3d8c__Str(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _57622_e, jule::Ptr<_1a797a52b_FnCallExpr>* _57637_fc) {
	if (((*((*(_57637_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_57622_e)).ptr(), (*((*((*(_57637_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _5817_constant = static__1bd82d121_NewStr(_1a7a82cb5_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_5817_constant, &__jule_any_type19), ._field_Constant=_5817_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d4288__Kind(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _58927_e, jule::Ptr<_1a797a52b_FnCallExpr>* _58942_fc) {
	if (((*((*(_58942_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_58927_e)).ptr(), (*((*((*(_58942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79bdddd_Enum> _5947_enm = _1a68191ce_FindEnum(_1a6803d78_findComptimePackage(&((*((*(_58927_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a79bd371_EnumItem> _59511_item = nullptr;;
	{
		
		if (_1a7a83c61_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1ab954ea2:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a7a865c1_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954db4:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a7a86857_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954a73:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a7a8556a_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954ad9:;
			{
				if (_1a7a93303_IsUnsafe(_1a7a8556a_Ptr((*(_self_))._field_base).ptr())) {
					_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a7a852d4_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954b50:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a7a85801_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab954bb6:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a7a86add_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab955711:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a7a860a4_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab955777:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a7a85d1d_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab9557dd:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a7a8633a_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab955854:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a7a86d74_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab9558ba:;
			{
				_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a7a8504d_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab955942:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _6244_prim = _1a7a8504d_Prim((*(_self_))._field_base);;
				{
					
					if (_1a7a8dbe4_IsAny(_6244_prim.ptr())) {
						_case_begin_1ab961871:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a7a8d6c7_IsBool(_6244_prim.ptr())) {
						_case_begin_1ab961783:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a7a8d95d_IsStr(_6244_prim.ptr())) {
						_case_begin_1ab961574:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a7a8c907_IsF32(_6244_prim.ptr())) {
						_case_begin_1ab9615da:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a7a8cb8d_IsF64(_6244_prim.ptr())) {
						_case_begin_1ab961651:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a7a8b384_IsI8(_6244_prim.ptr())) {
						_case_begin_1ab9616b7:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a7a8b61a_IsI16(_6244_prim.ptr())) {
						_case_begin_1ab9620d0:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a7a8b8a1_IsI32(_6244_prim.ptr())) {
						_case_begin_1ab962157:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a7a8bb37_IsI64(_6244_prim.ptr())) {
						_case_begin_1ab9621ce:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a7a8bdbd_IsU8(_6244_prim.ptr())) {
						_case_begin_1ab962256:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a7a8c154_IsU16(_6244_prim.ptr())) {
						_case_begin_1ab9622cd:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a7a8c3da_IsU32(_6244_prim.ptr())) {
						_case_begin_1ab962355:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a7a8c671_IsU64(_6244_prim.ptr())) {
						_case_begin_1ab9623cc:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a7a8ce24_IsInt(_6244_prim.ptr())) {
						_case_begin_1ab962454:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a7a8d1aa_IsUint(_6244_prim.ptr())) {
						_case_begin_1ab9624cb:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a7a8d441_IsUintptr(_6244_prim.ptr())) {
						_case_begin_1ab962553:;
						{
							_59511_item=_1a79be9d2_FindItem(_5947_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ab9613cb:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a7a82cb5_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:5"));;
						}
					}
					_match_end_1ab961365:;
				};
			}
		}
		else {
			_case_begin_1ab954a0c:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a7a82cb5_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:4"));;
			}
		}
		_match_end_1ab954963:;
	};
	return _1a7a7dd38_evalEnumStatic(&(_5947_enm), &(_59511_item), &((*((*(_58942_fc))))._field_Token));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d4684__Bits(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _66727_e, jule::Ptr<_1a797a52b_FnCallExpr>* _66742_fc) {
	if (((*((*(_66742_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_66727_e)).ptr(), (*((*((*(_66742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _6723_prim = _1a7a8504d_Prim((*(_self_))._field_base.ptr());;
	if ((_6723_prim == nullptr)) {
		_1a7a5377a_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6773_n = _1bd821785_BitsizeOf((*(_6723_prim))._field_Kind);;
	if ((_6773_n == -1LL)) {
		_1a7a5377a_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _6827_constant = static__1bd82c7c4_NewI64(static_cast<jule::I64>(_6773_n));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_6827_constant, &__jule_any_type19), ._field_Constant=_6827_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d4a80__Elem(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _69027_e, jule::Ptr<_1a797a52b_FnCallExpr>* _69042_fc) {
	if (((*((*(_69042_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_69027_e)).ptr(), (*((*((*(_69042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a927b9_Ptr> _6957_ptr = _1a7a8556a_Ptr((*(_self_))._field_base.ptr());;
	if ((_6957_ptr != nullptr)) {
		if (_1a7a93303_IsUnsafe(_6957_ptr)) {
			_1a7a5377a_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_6957_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7a8e002_Sptr> _7037_sptr = _1a7a852d4_Sptr((*(_self_))._field_base);;
	if ((_7037_sptr != nullptr)) {
		return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7037_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7a8e9c5_Slc> _7077_slice = _1a7a860a4_Slc((*(_self_))._field_base);;
	if ((_7077_slice != nullptr)) {
		return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7077_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a7a91ce6_Arr> _7117_array = _1a7a85d1d_Arr((*(_self_))._field_base);;
	if ((_7117_array != nullptr)) {
		return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7117_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a79bdddd_Enum> _7157_enm = _1a7a85801_Enum((*(_self_))._field_base);;
	if ((_7157_enm != nullptr)) {
		return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*((*_7157_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1a7a5377a_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d4e7b__Size(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _72327_e, jule::Ptr<_1a797a52b_FnCallExpr>* _72342_fc) {
	if (((*((*(_72342_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_72327_e)).ptr(), (*((*((*(_72342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a91ce6_Arr> _7287_arr = _1a7a85d1d_Arr((*(_self_))._field_base.ptr());;
	if ((_7287_arr == nullptr)) {
		_1a7a5377a_pushErr((*(_72327_e)).ptr(), (*((*(_72342_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _7337_constant = static__1bd82c7c4_NewI64(static_cast<jule::I64>((*(_7287_arr))._field_N));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b661c8_primInt, ._field_Model=jule::Any(_7337_constant, &__jule_any_type19), ._field_Constant=_7337_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d5377__Key(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _74126_e, jule::Ptr<_1a797a52b_FnCallExpr>* _74141_fc) {
	if (((*((*(_74141_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_74126_e)).ptr(), (*((*((*(_74141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a91169_Map> _7467_m = _1a7a86add_Map((*(_self_))._field_base.ptr());;
	if ((_7467_m == nullptr)) {
		_1a7a5377a_pushErr((*(_74126_e)).ptr(), (*((*(_74141_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_74126_e))))._field_s), &((*(_7467_m))._field_Key));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d5773__Value(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _75428_e, jule::Ptr<_1a797a52b_FnCallExpr>* _75443_fc) {
	if (((*((*(_75443_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_75428_e)).ptr(), (*((*((*(_75443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a91169_Map> _7597_m = _1a7a86add_Map((*(_self_))._field_base.ptr());;
	if ((_7597_m == nullptr)) {
		_1a7a5377a_pushErr((*(_75428_e)).ptr(), (*((*(_75443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_75428_e))))._field_s), &((*(_7597_m))._field_Val));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d5b6e__Fields(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _76729_e, jule::Ptr<_1a797a52b_FnCallExpr>* _76744_fc) {
	if (((*((*(_76744_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_76729_e)).ptr(), (*((*((*(_76744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79960d5_StructIns> _7727_s = _1a7a865c1_Struct((*(_self_))._field_base.ptr());;
	if ((_7727_s != nullptr)) {
		return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c5dd4_comptimeStructFields>(_1a79c5dd4_comptimeStructFields{._field_fields=(*_7727_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data7)}), });;
	};
	jule::Ptr<_1a79bdddd_Enum> _7827_enm = _1a7a85801_Enum((*(_self_))._field_base);;
	if ((_7827_enm != nullptr)) {
		return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79cbb32_comptimeEnumFields>(_1a79cbb32_comptimeEnumFields{._field_fields=(*_7827_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data11)}), });;
	};
	_1a7a5377a_pushErr((*(_76729_e)).ptr(), (*((*(_76744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d606a__Statics(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _79630_e, jule::Ptr<_1a797a52b_FnCallExpr>* _79645_fc) {
	if (((*((*(_79645_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_79630_e)).ptr(), (*((*((*(_79645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79960d5_StructIns> _8017_s = _1a7a865c1_Struct((*(_self_))._field_base.ptr());;
	if ((_8017_s == nullptr)) {
		_1a7a5377a_pushErr((*(_79630_e)).ptr(), (*((*(_79645_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c9190_comptimeStatics>(_1a79c9190_comptimeStatics{._field_fields=(*(_8017_s))._field_Statics}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data9)}), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d6466__Public(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _81529_e, jule::Ptr<_1a797a52b_FnCallExpr>* _81544_fc) {
	if (((*((*(_81544_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_81529_e)).ptr(), (*((*((*(_81544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _8207_public = false;;
	{
		
		if ((_1a7a865c1_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab999766:;
			{
				_8207_public=(*((*(_1a7a865c1_Struct((*(_self_))._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1a7a86857_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab99a855:;
			{
				_8207_public=(*(_1a7a86857_Trait((*(_self_))._field_base)))._field_Public;
			}
		}
		else if ((_1a7a85801_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab99a8bb:;
			{
				_8207_public=(*(_1a7a85801_Enum((*(_self_))._field_base)))._field_Public;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ab99949c:;
			{
				_8207_public=(*(_1a7a85a87_TypeEnum((*(_self_))._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1ab999436:;
			{
				_1a7a5377a_pushErr((*(_81529_e)).ptr(), (*((*(_81544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab999304:;
	};
	jule::Ptr<_1bd82c384_Const> _8347_constant = static__1bd82cd57_NewBool(_8207_public);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_8347_constant, &__jule_any_type19), ._field_Constant=_8347_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d6862__Binded(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _84229_e, jule::Ptr<_1a797a52b_FnCallExpr>* _84244_fc) {
	if (((*((*(_84244_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _8477_constant = static__1bd82cd57_NewBool(_1a7a83744_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_8477_constant, &__jule_any_type19), ._field_Constant=_8477_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d6c5d__Ordered(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _85526_e, jule::Ptr<_1a797a52b_FnCallExpr>* _85541_fc) {
	if (((*((*(_85541_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_85526_e)).ptr(), (*((*((*(_85541_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _8607_constant = static__1bd82cd57_NewBool(_1a7a84514_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_8607_constant, &__jule_any_type19), ._field_Constant=_8607_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d7159__Comparable(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _86829_e, jule::Ptr<_1a797a52b_FnCallExpr>* _86844_fc) {
	if (((*((*(_86844_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_86829_e)).ptr(), (*((*((*(_86844_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _8737_constant = static__1bd82cd57_NewBool(_1a7a83ee7_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_8737_constant, &__jule_any_type19), ._field_Constant=_8737_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d7555__Mutable(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _88126_e, jule::Ptr<_1a797a52b_FnCallExpr>* _88141_fc) {
	if (((*((*(_88141_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_88126_e)).ptr(), (*((*((*(_88141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _8867_constant = static__1bd82cd57_NewBool(_1a7a8427d_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_8867_constant, &__jule_any_type19), ._field_Constant=_8867_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d7951__Types(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _89428_e, jule::Ptr<_1a797a52b_FnCallExpr>* _89443_fc) {
	if (((*((*(_89443_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_89428_e)).ptr(), (*((*((*(_89443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a905b9_Tuple> _8997_tup = _1a7a86d74_Tup((*(_self_))._field_base.ptr());;
	if ((_8997_tup == nullptr)) {
		_1a7a5377a_pushErr((*(_89428_e)).ptr(), (*((*(_89443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79d197d_comptimeTypeInfos> _9047_infos = jule::new_ptr<_1a79d197d_comptimeTypeInfos>(_1a79d197d_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1a79d3078_comptimeTypeInfo>>::alloc(0LL, (*(_8997_tup))._field_Types.len())});;
	{
		auto expr = &((*(_8997_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9aed0e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a828ec_TypeKind> _90715_t = *it;
			{
				(*(_9047_infos))._field_types=jule::append((*_9047_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1a79d3078_comptimeTypeInfo>>::make({_1a6837153_pushComptimeTypeInfo((*((*((*(_89428_e))))._field_s))._field_meta.ptr(), &(_90715_t))}));
			}
			_iter_next_1ab9aed0e:;
			++it;
			goto _iter_begin_1ab9aed0e;
		}
		_iter_end_1ab9aed0e:;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_9047_infos, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data14)}), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d7d4c__Exceptional(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _91734_e, jule::Ptr<_1a797a52b_FnCallExpr>* _91749_fc) {
	if (((*((*(_91749_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_91734_e)).ptr(), (*((*((*(_91749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79ab309_FnIns> _9227_f = _1a7a8633a_Fn((*(_self_))._field_base.ptr());;
	if ((_9227_f == nullptr)) {
		_1a7a5377a_pushErr((*(_91734_e)).ptr(), (*((*(_91749_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _9277_constant = static__1bd82cd57_NewBool((((*(_9227_f))._field_Decl != nullptr) && (*(*(_9227_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_9277_constant, &__jule_any_type19), ._field_Constant=_9277_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d8248__CanNil(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _93529_e, jule::Ptr<_1a797a52b_FnCallExpr>* _93544_fc) {
	if (((*((*(_93544_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_93529_e)).ptr(), (*((*((*(_93544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _9407_constant = static__1bd82cd57_NewBool(_1a7a8479a_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_9407_constant, &__jule_any_type19), ._field_Constant=_9407_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d8644__RC(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _94825_e, jule::Ptr<_1a797a52b_FnCallExpr>* _94840_fc) {
	if (((*((*(_94840_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_94825_e)).ptr(), (*((*((*(_94840_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _9537_constant = static__1bd82cd57_NewBool(_1a7a84a31_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_9537_constant, &__jule_any_type19), ._field_Constant=_9537_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d8a40__Result(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _96129_e, jule::Ptr<_1a797a52b_FnCallExpr>* _96144_fc) {
	if (((*((*(_96144_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_96129_e)).ptr(), (*((*((*(_96144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79ab309_FnIns> _9667_f = _1a7a8633a_Fn((*(_self_))._field_base.ptr());;
	if ((_9667_f == nullptr)) {
		_1a7a5377a_pushErr((*(_96129_e)).ptr(), (*((*(_96144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_9667_f))._field_Result == nullptr)) {
		return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &(_1a7b64e41_primVoid));;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &((*(_9667_f))._field_Result));;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d8e3b__Params(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Ptr<_1a7a5322a_Eval>* _97729_e, jule::Ptr<_1a797a52b_FnCallExpr>* _97744_fc) {
	if (((*((*(_97744_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_97729_e)).ptr(), (*((*((*(_97744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79ab309_FnIns> _9827_f = _1a7a8633a_Fn((*(_self_))._field_base.ptr());;
	if ((_9827_f == nullptr)) {
		_1a7a5377a_pushErr((*(_97729_e)).ptr(), (*((*(_97744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79d03b6_comptimeParams>(_1a79d03b6_comptimeParams{._field_params=(*(_9827_f))._field_Params}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data13)}), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a79d927c_subIdent(jule::Ptr<_1a79d3078_comptimeTypeInfo> _self_, jule::Str* _99426_ident) {
	{
		auto &_match_expr{ (*(_99426_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1ab9c4e67:;
			{
				jule::Ptr<_1a79ab309_FnIns> _9978_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9c684d, jule::Ptr<__jule_anon_1ab9c684d_ctx>::make(__jule_anon_1ab9c684d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9c684d_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_9978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1ab9c4c25:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10048_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9c87ea, jule::Ptr<__jule_anon_1ab9c87ea_ctx>::make(__jule_anon_1ab9c87ea_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9c87ea_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1ab9c4c8b:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10118_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9ca753, jule::Ptr<__jule_anon_1ab9ca753_ctx>::make(__jule_anon_1ab9ca753_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9ca753_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1ab9c4ecd:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10188_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9cc6ab, jule::Ptr<__jule_anon_1ab9cc6ab_ctx>::make(__jule_anon_1ab9cc6ab_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9cc6ab_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10188_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1ab9c5044:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10258_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9ce614, jule::Ptr<__jule_anon_1ab9ce614_ctx>::make(__jule_anon_1ab9ce614_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9ce614_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10258_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1ab9c50aa:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10328_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9d156c, jule::Ptr<__jule_anon_1ab9d156c_ctx>::make(__jule_anon_1ab9d156c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d156c_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10328_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ab9c5121:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10398_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9d34c5, jule::Ptr<__jule_anon_1ab9d34c5_ctx>::make(__jule_anon_1ab9d34c5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d34c5_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10398_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ab9c51ed:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10468_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9d542d, jule::Ptr<__jule_anon_1ab9d542d_ctx>::make(__jule_anon_1ab9d542d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d542d_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ab9c5264:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10538_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9d74c9, jule::Ptr<__jule_anon_1ab9d74c9_ctx>::make(__jule_anon_1ab9d74c9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d74c9_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1ab9c52ca:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10608_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9d9432, jule::Ptr<__jule_anon_1ab9d9432_ctx>::make(__jule_anon_1ab9d9432_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9d9432_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ab9c5352:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10678_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9db38a, jule::Ptr<__jule_anon_1ab9db38a_ctx>::make(__jule_anon_1ab9db38a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9db38a_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ab9c53c9:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10748_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9dd2e3, jule::Ptr<__jule_anon_1ab9dd2e3_ctx>::make(__jule_anon_1ab9dd2e3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9dd2e3_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1ab9c5451:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10818_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9e024b, jule::Ptr<__jule_anon_1ab9e024b_ctx>::make(__jule_anon_1ab9e024b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9e024b_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10818_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1ab9c54c8:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10888_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9e21a4, jule::Ptr<__jule_anon_1ab9e21a4_ctx>::make(__jule_anon_1ab9e21a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9e21a4_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10888_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ab9c5550:;
			{
				jule::Ptr<_1a79ab309_FnIns> _10958_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9e410c, jule::Ptr<__jule_anon_1ab9e410c_ctx>::make(__jule_anon_1ab9e410c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9e410c_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_10958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1ab9c55c7:;
			{
				jule::Ptr<_1a79ab309_FnIns> _11028_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9e6065, jule::Ptr<__jule_anon_1ab9e6065_ctx>::make(__jule_anon_1ab9e6065_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9e6065_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_11028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1ab9c564e:;
			{
				jule::Ptr<_1a79ab309_FnIns> _11098_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9e7ebd, jule::Ptr<__jule_anon_1ab9e7ebd_ctx>::make(__jule_anon_1ab9e7ebd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9e7ebd_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_11098_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1ab9c56c6:;
			{
				jule::Ptr<_1a79ab309_FnIns> _11168_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9e9e26, jule::Ptr<__jule_anon_1ab9e9e26_ctx>::make(__jule_anon_1ab9e9e26_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9e9e26_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_11168_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1ab9c574d:;
			{
				jule::Ptr<_1a79ab309_FnIns> _11238_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9ebd7e, jule::Ptr<__jule_anon_1ab9ebd7e_ctx>::make(__jule_anon_1ab9ebd7e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9ebd7e_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_11238_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1ab9c57c5:;
			{
				jule::Ptr<_1a79ab309_FnIns> _11308_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1ab9edcd7, jule::Ptr<__jule_anon_1ab9edcd7_ctx>::make(__jule_anon_1ab9edcd7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab9edcd7_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_11308_method));;
			}
		}
		else {
			_case_begin_1ab9c2a03:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9c4a05:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d3078_comptimeTypeInfo _Src) {
	_Stream << _1a79d33ec_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a67ed0b4_Str(_1a67ecc40_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a67ed405_Equal(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a828ec_TypeKind> _114918_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a67ed955__Unwrap(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _115329_e, jule::Ptr<_1a797a52b_FnCallExpr>* _115344_fc) {
	if (((*((*(_115344_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_115329_e)).ptr(), (*((*((*(_115344_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a7a51503_Data> _1a67edd51__Type(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _116127_e, jule::Ptr<_1a797a52b_FnCallExpr>* _116142_fc) {
	if (((*((*(_116142_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_116127_e)).ptr(), (*((*((*(_116142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_116127_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1a7a51503_Data> _1a67ee24c__Lvalue(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _116929_e, jule::Ptr<_1a797a52b_FnCallExpr>* _116944_fc) {
	if (((*((*(_116944_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_116929_e)).ptr(), (*((*((*(_116944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _11747_constant = static__1bd82cd57_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_11747_constant, &__jule_any_type19), ._field_Constant=_11747_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a67ee648__Mutable(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _118230_e, jule::Ptr<_1a797a52b_FnCallExpr>* _118245_fc) {
	if (((*((*(_118245_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_118230_e)).ptr(), (*((*((*(_118245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _11877_constant = static__1bd82cd57_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_11877_constant, &__jule_any_type19), ._field_Constant=_11877_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a67eea44__Const(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _119528_e, jule::Ptr<_1a797a52b_FnCallExpr>* _119543_fc) {
	if (((*((*(_119543_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_119528_e)).ptr(), (*((*((*(_119543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _12007_constant = static__1bd82cd57_NewBool(_1a7a51e0a_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_12007_constant, &__jule_any_type19), ._field_Constant=_12007_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a67eee40__Field(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Ptr<_1a7a5322a_Eval>* _120828_e, jule::Ptr<_1a797a52b_FnCallExpr>* _120843_fc) {
	if (((*((*(_120843_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_120828_e)).ptr(), (*((*((*(_120843_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79960d5_StructIns> _12137_s = _1a7a865c1_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_12137_s == nullptr)) {
		_1a7a5377a_pushErr((*(_120828_e)).ptr(), (*((*(_120843_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7976802_Expr> _12187_arg = (*((*(_120843_fc))))._field_Args[0LL];;
	jule::Ptr<_1a7a51503_Data> _12197_d = _1a7a7148a_evalExpr((*(_120828_e)), _12187_arg);;
	if ((_12197_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7a51e0a_IsConst(_12197_d.ptr())))) {
		_1a7a5377a_pushErr((*(_120828_e)).ptr(), (*(_12187_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _12273_prim = _1a7a8504d_Prim((*(_12197_d))._field_Kind);;
	if (((_12273_prim == nullptr) || (!(_1a7a8d95d_IsStr(_12273_prim.ptr()))))) {
		_1a7a5377a_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_12197_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12323_ident = _1bd82e50c_ReadStr((*(_12197_d))._field_Constant.ptr());;
	jule::Ptr<_1a7995535_FieldIns> _12337_f = _1a799748d_FindField(_12137_s.ptr(), _12323_ident);;
	if ((_12337_f == nullptr)) {
		_1a7a5377a_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_12137_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12323_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_12197_d=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_data.alloc));
	_12197_d=_1a7a69791_evalStructSubIdentField((*(_120828_e)).ptr(), &(_12197_d), &(_12137_s), &((*_12187_arg.alloc)._field_Token), &(_12337_f));
	return _1a680453d_buildComptimeValue(&(_12197_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a6800281_subIdent(jule::Ptr<_1a67ecc40_comptimeValue> _self_, jule::Str* _124326_ident) {
	{
		auto &_match_expr{ (*(_124326_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1aba1798d:;
			{
				jule::Ptr<_1a79ab309_FnIns> _12468_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba18d9b, jule::Ptr<__jule_anon_1aba18d9b_ctx>::make(__jule_anon_1aba18d9b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba18d9b_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_12468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aba17a04:;
			{
				jule::Ptr<_1a79ab309_FnIns> _12538_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba1ad04, jule::Ptr<__jule_anon_1aba1ad04_ctx>::make(__jule_anon_1aba1ad04_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba1ad04_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_12538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1aba17a6a:;
			{
				jule::Ptr<_1a79ab309_FnIns> _12608_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba1cc5c, jule::Ptr<__jule_anon_1aba1cc5c_ctx>::make(__jule_anon_1aba1cc5c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba1cc5c_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_12608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1aba17ae2:;
			{
				jule::Ptr<_1a79ab309_FnIns> _12678_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba1ebb5, jule::Ptr<__jule_anon_1aba1ebb5_ctx>::make(__jule_anon_1aba1ebb5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba1ebb5_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_12678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1aba17b69:;
			{
				jule::Ptr<_1a79ab309_FnIns> _12748_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba21b1d, jule::Ptr<__jule_anon_1aba21b1d_ctx>::make(__jule_anon_1aba21b1d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba21b1d_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_12748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1aba17ce0:;
			{
				jule::Ptr<_1a79ab309_FnIns> _12818_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba23a76, jule::Ptr<__jule_anon_1aba23a76_ctx>::make(__jule_anon_1aba23a76_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba23a76_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_12818_method));;
			}
		}
		else {
			_case_begin_1aba1773a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba1786c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a67ecc40_comptimeValue _Src) {
	_Stream << _1a67ed0b4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a6800913_Str(_1a680058e_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a6800c54_Equal(jule::Ptr<_1a680058e_comptimeFiles> _self_, jule::Ptr<_1a7a828ec_TypeKind> _130018_other) {
	return false;;
}



inline void _1a68011c7_ready(_1a680058e_comptimeFiles* _self_, jule::Ptr<_1a685a682_Var>* _130426_keyA, jule::Ptr<_1a685a682_Var>* _130443_keyB) {
	if (((*(_130426_keyA)) != nullptr)) {
		(*((*(_130426_keyA))))._field_Constant=true;
		(*((*(_130426_keyA))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_130426_keyA))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130443_keyB)) != nullptr)) {
		(*((*(_130443_keyB))))._field_Constant=true;
		(*((*(_130443_keyB))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		(*((*(_130443_keyB))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a6801b89_comptimeFile>(), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data18)})});
	};
}



inline void _1a68015e5_step(_1a680058e_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1a685a682_Var>* _132533_keyA, jule::Ptr<_1a685a682_Var>* _132550_keyB) {
	if (((*(_132533_keyA)) != nullptr)) {
		(*((*((*((*(_132533_keyA))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_132520_i));
		(*(*((*((*(_132533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_132533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132550_keyB)) != nullptr)) {
		(*((*((*((*((*(_132550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a6801b89_comptimeFile>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132520_i];
	};
}



inline jule::I64 _1a680187b_len(_1a680058e_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a680058e_comptimeFiles _Src) {
	_Stream << _1a6800913_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a6802250_Str(_1a6801b89_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a6802591_Equal(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a828ec_TypeKind> _134918_other) {
	return false;;
}



inline jule::Ptr<_1a7a51503_Data> _1a6802aad__Path(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a5322a_Eval>* _135327_e, jule::Ptr<_1a797a52b_FnCallExpr>* _135342_fc) {
	if (((*((*(_135342_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_135327_e)).ptr(), (*((*((*(_135342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _13587_constant = static__1bd82d121_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_13587_constant, &__jule_any_type19), ._field_Constant=_13587_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a6802ea9__Name(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a5322a_Eval>* _136627_e, jule::Ptr<_1a797a52b_FnCallExpr>* _136642_fc) {
	if (((*((*(_136642_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_136627_e)).ptr(), (*((*((*(_136642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _13717_constant = static__1bd82d121_NewStr(_1a79631d4_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_13717_constant, &__jule_any_type19), ._field_Constant=_13717_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a68033a5__Dir(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Ptr<_1a7a5322a_Eval>* _137926_e, jule::Ptr<_1a797a52b_FnCallExpr>* _137941_fc) {
	if (((*((*(_137941_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_137926_e)).ptr(), (*((*((*(_137941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1bd82c384_Const> _13847_constant = static__1bd82d121_NewStr(_1a7962e4d_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(_13847_constant, &__jule_any_type19), ._field_Constant=_13847_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a68036e6_subIdent(jule::Ptr<_1a6801b89_comptimeFile> _self_, jule::Str* _139226_ident) {
	{
		auto &_match_expr{ (*(_139226_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1aba3525d:;
			{
				jule::Ptr<_1a79ab309_FnIns> _13958_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba3654a, jule::Ptr<__jule_anon_1aba3654a_ctx>::make(__jule_anon_1aba3654a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba3654a_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_13958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aba35307:;
			{
				jule::Ptr<_1a79ab309_FnIns> _14028_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba384a3, jule::Ptr<__jule_anon_1aba384a3_ctx>::make(__jule_anon_1aba384a3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba384a3_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_14028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1aba3537e:;
			{
				jule::Ptr<_1a79ab309_FnIns> _14098_method = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>((void*)__jule_anon_1aba3a40b, jule::Ptr<__jule_anon_1aba3a40b_ctx>::make(__jule_anon_1aba3a40b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba3a40b_ctx_handler), });;
				return _1a6803a6a_buildAsComptimeMethodData(&(_14098_method));;
			}
		}
		else {
			_case_begin_1aba34e72:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba350e8:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a6801b89_comptimeFile _Src) {
	_Stream << _1a6802250_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1a6837818_Sema>*,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>*> _1a68067e8_readyFn(jule::Ptr<_1a68063ec_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a6837818_Sema>*,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>*>((void*)__jule_anon_1aba45e3e, jule::Ptr<__jule_anon_1aba45e3e_ctx>::make(__jule_anon_1aba45e3e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aba45e3e_ctx_handler);;
}



inline jule::Bool _1a6806a7e_readyFi(jule::Ptr<_1a68063ec_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a6845cdd_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a68067e8_readyFn(_self_)));;
}



inline jule::Bool _1a6806d15_readySi(jule::Ptr<_1a68063ec_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a68067e8_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a680709b_ready(jule::Ptr<_1a68063ec_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a6806a7e_readyFi(_self_);;
	};
	return _1a6806d15_readySi(_self_);;
}



inline jule::Bool _1a6807332_check(jule::Ptr<_1a68063ec_constraintChecker> _self_) {
	if ((!(_1a680709b_ready(_self_)))) {
		return false;;
	};
	_julec_label_1aba5559c:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba55e71:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1a7a81016_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1aba55e71;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba5714d:;
					if (it != expr_end) {
						jule::Ptr<_1a7a828ec_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1a7a8a4c6_Prim> _1259_prim = _1a7a8504d_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a7a8b0ed_IsConstraint(_1259_prim))) {
								if (_1a6807ab3_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1aba55e71;
								};
								goto _iter_next_1aba5714d;
							};
							if (_1a7a83106_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1aba55e71;
							};
						}
						_iter_next_1aba5714d:;
						++it;
						goto _iter_begin_1aba5714d;
					}
					_iter_end_1aba5714d:;
				};
				_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4),jule::Any(_1a68076ea_toStrConstraints(_12015_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1aba55e71:;
			++it;
			_1208_i++;
			goto _iter_begin_1aba55e71;
		}
		_iter_end_1aba55e71:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68063ec_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a6808b19_IsTraitImpl(_1a6808751_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a6808da0_IsStructImpl(_1a6808751_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6808751_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a680dba7_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a680e0c5_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a680e3c2_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a680e7e0_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a680eadc_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6810093_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68109de_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a636e581_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d947a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d96de_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d9aa7_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79d9e81_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79da437_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79da8dd_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79db04d_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79dbb97_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79dc3a1_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79dc77a_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79dcdda_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79dd46d_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a79de903_SelectPackage(_1a79de45d_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _46029_selector) {
	return _1a6837cad_SelectPackage((*(_self_))._field_s.ptr(), _46029_selector);;
}



inline jule::Ptr<_1a685a682_Var> _1a79decee_FindVar(_1a79de45d_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded) {
	if ((!(_47135_binded))) {
		jule::Ptr<_1a685a682_Var> _4738_v = _1a79e2dce_findVar(_self_, _47123_ident);;
		if ((_4738_v != nullptr)) {
			return _4738_v;;
		};
	};
	return _1a68381a9_FindVar((*(_self_))._field_s.ptr(), _47123_ident, _47135_binded);;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a79e01ea_FindTypeAlias(_1a79de45d_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded) {
	;
	jule::Ptr<_1a7a81b0a_TypeAlias> _4917_ta = _1a7a4dd08_findTypeAlias((*(_self_))._field_table.ptr(), &(_48829_ident), _48841_binded, true);;
	if ((_4917_ta != nullptr)) {
		return _4917_ta;;
	};
	jule::Ptr<_1a79de45d_scopeChecker> _4967_parent = (*(_self_))._field_parent;;
	while ((_4967_parent != nullptr)) {
		{
			_4917_ta=_1a7a4dd08_findTypeAlias((*(_4967_parent))._field_table, &(_48829_ident), _48841_binded, true);
			if ((_4917_ta != nullptr)) {
				return _4917_ta;;
			};
			_4967_parent=(*_4967_parent.alloc)._field_parent;
		}
	_iter_next_1aba95e39:;
	}
	_iter_end_1aba95e39:;;
	return _1a68385a5_FindTypeAlias((*(_self_))._field_s.ptr(), _48829_ident, _48841_binded);;
}



inline jule::Ptr<_1a7993357_Struct> _1a79e05e6_FindStruct(_1a79de45d_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded) {
	return _1a68389a1_FindStruct((*(_self_))._field_s.ptr(), _51326_ident, _51338_binded);;
}



inline jule::Ptr<_1a79a8328_Fn> _1a79e09e2_FindFn(_1a79de45d_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded) {
	return _1a6838d9c_FindFn((*(_self_))._field_s.ptr(), _52222_ident, _52234_binded);;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a79e0d33_FindTrait(_1a79de45d_scopeChecker* _self_, jule::Str _53125_ident) {
	return _1a68391dd_FindTrait((*(_self_))._field_s.ptr(), _53125_ident);;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a79e1174_FindEnum(_1a79de45d_scopeChecker* _self_, jule::Str _54024_ident) {
	return _1a683952e_FindEnum((*(_self_))._field_s.ptr(), _54024_ident);;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a79e14b5_FindTypeEnum(_1a79de45d_scopeChecker* _self_, jule::Str _54928_ident) {
	return _1a6839870_FindTypeEnum((*(_self_))._field_s.ptr(), _54928_ident);;
}



inline jule::Bool _1a79e1817_isUnsafe(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	jule::Ptr<_1a79de45d_scopeChecker> _5577_scope = _self_;;
	_julec_label_1aba9ab31:;
	if ((*((*(_5577_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_5577_scope.alloc)._field_parent != nullptr)) {
		_5577_scope=(*_5577_scope.alloc)._field_parent;
		goto _julec_label_1aba9ab31;
	};
	return false;;
}



inline jule::Bool _1a79e1a9d_isRoot(_1a79de45d_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a79e1c9b_stop(_1a79de45d_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a79e2032_stopped(_1a79de45d_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a79e22b8_isDeferred(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	jule::Ptr<_1a79de45d_scopeChecker> _5907_scope = _self_;;
	_julec_label_1aba9de75:;
	if ((*((*(_5907_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5907_scope.alloc)._field_parent != nullptr)) {
		_5907_scope=(*_5907_scope.alloc)._field_parent;
		goto _julec_label_1aba9de75;
	};
	return false;;
}



inline void _1a79e2571_pushCaptured(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a685a682_Var>* _61134_v) {
	jule::Ptr<_1a79de45d_scopeChecker> _6127_sc = _self_;;
	for (;;) {
		{
			if (((*(_6127_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_6127_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abaa1d8a:;
					if (it != expr_end) {
						jule::Ptr<_1a685a682_Var> _61512_cv = *it;
						{
							if ((_61512_cv == (*(_61134_v)))) {
								goto _julec_label_1abaa2b49;
							};
						}
						_iter_next_1abaa1d8a:;
						++it;
						goto _iter_begin_1abaa1d8a;
					}
					_iter_end_1abaa1d8a:;
				};
				(*(*(_6127_sc))._field_captured.alloc)=jule::append((*(*(_6127_sc))._field_captured.alloc),jule::Slice<jule::Ptr<_1a685a682_Var>>::make({(*(_61134_v))}));
				_julec_label_1abaa2b49:;
			};
			if (((*_6127_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1aba9ec45;
			};
			_6127_sc=(*_6127_sc.alloc)._field_parent;
			if ((!(_1a7a7ee9e_isVarCaptured(_6127_sc, _6127_sc, (*(_61134_v)))))) {
				goto _iter_end_1aba9ec45;
			};
		}
	_iter_next_1aba9ec45:;
	}
	_iter_end_1aba9ec45:;;
}



inline jule::Ptr<_1a79de45d_scopeChecker> _1a79e2807_getRoot(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	jule::Ptr<_1a79de45d_scopeChecker> _6367_root = _self_;;
	while ((((*(_6367_root))._field_parent != nullptr) && ((*_6367_root.alloc)._field_owner == nullptr))) {
		{
			_6367_root=(*_6367_root.alloc)._field_parent;
		}
	_iter_next_1abaa507a:;
	}
	_iter_end_1abaa507a:;;
	return _6367_root;;
}



inline jule::Ptr<_1a79de45d_scopeChecker> _1a79e2a8d_getHardRoot(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	jule::Ptr<_1a79de45d_scopeChecker> _6467_root = _self_;;
	while (((*(_6467_root))._field_parent != nullptr)) {
		{
			_6467_root=(*_6467_root.alloc)._field_parent;
		}
	_iter_next_1abaa63ab:;
	}
	_iter_end_1abaa63ab:;;
	return _6467_root;;
}



inline jule::Ptr<_1a685a682_Var> _1a79e2dce_findVar(_1a79de45d_scopeChecker* _self_, jule::Str _65423_ident) {
	;
	;
	jule::Ptr<_1a685a682_Var> _6577_v = _1a7a4d852_findVar((*(_self_))._field_table.ptr(), &(_65423_ident), false, true);;
	if ((_6577_v != nullptr)) {
		return _6577_v;;
	};
	jule::Ptr<_1a79de45d_scopeChecker> _6617_parent = (*(_self_))._field_parent;;
	while ((_6617_parent != nullptr)) {
		{
			_6577_v=_1a7a4d852_findVar((*(_6617_parent))._field_table, &(_65423_ident), false, true);
			if ((_6577_v != nullptr)) {
				return _6577_v;;
			};
			_6617_parent=(*_6617_parent.alloc)._field_parent;
		}
	_iter_next_1abaa8369:;
	}
	_iter_end_1abaa8369:;;
	return nullptr;;
}



inline jule::Ptr<_1a79d96de_Label> _1a79e3220_findLabel(_1a79de45d_scopeChecker* _self_, jule::Str* _67526_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaaa39e:;
		if (it != expr_end) {
			jule::Any _67615_st = *it;
			{
				{
					auto &_match_expr{ _67615_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1abaaab74:;
						{
							jule::Ptr<_1a79d96de_Label> _6799_label = _67615_st.unsafe_cast_ptr<_1a79d96de_Label>();;
							if (((*(_6799_label))._field_Ident == (*(_67526_ident)))) {
								return _6799_label;;
							};
						}
					}
					_match_end_1abaaab1e:;
				};
			}
			_iter_next_1abaaa39e:;
			++it;
			goto _iter_begin_1abaaa39e;
		}
		_iter_end_1abaaa39e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79dcdda_scopeLabel> _1a79e3561_findLabelScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Str* _69132_ident) {
	jule::Ptr<_1a79dcdda_scopeLabel> _6927_label = _1a79e38a2_findLabelAll(_self_.ptr(), _69132_ident);;
	if (((_6927_label != nullptr) && ((*_6927_label.alloc)._field_scope == _self_))) {
		return _6927_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79dcdda_scopeLabel> _1a79e38a2_findLabelAll(_1a79de45d_scopeChecker* _self_, jule::Str* _70329_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaad23c:;
		if (it != expr_end) {
			jule::Ptr<_1a79dcdda_scopeLabel> _70415_lbl = *it;
			{
				if (((*((*(_70415_lbl))._field_label))._field_Ident == (*(_70329_ident)))) {
					return _70415_lbl;;
				};
			}
			_iter_next_1abaad23c:;
			++it;
			goto _iter_begin_1abaad23c;
		}
		_iter_end_1abaad23c:;
	};
	return nullptr;;
}



inline jule::Bool _1a79e3c9d_isDuplicatedIdent(_1a79de45d_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident) {
	jule::Ptr<_1a685a682_Var> _7163_v = _1a79decee_FindVar(_self_, (*(_71551_ident)), false);;
	if (((_7163_v != nullptr) && (static_cast<jule::Uintptr>(_7163_v) != _71533_itself))) {
		if (((*_7163_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7163_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a6839c7c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a7a81b0a_TypeAlias> _7243_ta = _1a79e01ea_FindTypeAlias(_self_, (*(_71551_ident)), false);;
	if (((_7243_ta != nullptr) && (static_cast<jule::Uintptr>(_7243_ta) != _71533_itself))) {
		if (((*_7243_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7243_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a6839c7c_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a79e4056_checkVarDecl(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985338_VarDecl> _73533_decl) {
	jule::Ptr<_1a685a682_Var> _7367_v = _1a79b4851_buildVar(_73533_decl);;
	(*(_7367_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({_7367_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_7367_v, &__jule_any_type8)}));
	});;
	if (_1a79e3c9d_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_7367_v), &((*_7367_v.alloc)._field_Ident))) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*_7367_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_7367_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a79e1c9b_stop(_self_);
		return;;
	};
	_1a684d9c7_checkVarDecl((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));
	if (((!(_1a685ace2_IsTypeInferred(_7367_v))) && (((*_7367_v.alloc)._field_Kind == nullptr) || ((*((*_7367_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1a685226c_evalVarValue((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));
	if (((!(_1a685aa5b_IsInitialized(_7367_v))) || ((*((*_7367_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a6370186_removeInteriorMutRisk(_self_, &((*(*(_7367_v))._field_Value.alloc)._field_Data));
	_1a6851e09_checkVarValue((*(_self_))._field_s, &(_7367_v));
}



inline void _1a79e430e_checkTypeAlias(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _76636_ta) {
	if (_1a79e3c9d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76636_ta))), &((*((*(_76636_ta))))._field_Ident))) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76636_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_76636_ta))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a79e1c9b_stop(_self_);
		return;;
	};
	_1a6847a59_checkTypeAliasDecl((*(_self_))._field_s, _76636_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>::make({(*(_76636_ta))}));
	if (((*((*((*(_76636_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1a79e1c9b_stop(_self_);
	};
}



inline void _1a79e45b7_checkTypeAliasDecl(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7988eda_TypeAliasDecl> _78239_decl) {
	jule::Ptr<_1a7a81b0a_TypeAlias> _7837_ta = _1a79b1430_buildTypeAlias(_78239_decl);;
	_1a79e430e_checkTypeAlias(_self_, &(_7837_ta));
}



inline jule::Ptr<_1a680dba7_Scope> _1a79e484d_getChild(_1a79de45d_scopeChecker* _self_) {
	return jule::new_ptr<_1a680dba7_Scope>(_1a680dba7_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a79e4c6b_checkChildSsc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _79335_tree, jule::Ptr<_1a680dba7_Scope>* _79358_s, jule::Ptr<_1a79de45d_scopeChecker>* _79374_ssc) {
	(*((*(_79374_ssc))))._field_parent=_self_;
	_1a6376126_check((*(_79374_ssc)), _79335_tree, _79358_s);
}



inline jule::Ptr<_1a680dba7_Scope> _1a79e5167_checkChildSc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _79834_tree, jule::Ptr<_1a79de45d_scopeChecker>* _79857_ssc) {
	jule::Ptr<_1a680dba7_Scope> _7997_s = _1a79e484d_getChild(_self_.ptr());;
	_1a79e4c6b_checkChildSsc(_self_, _79834_tree, &(_7997_s), _79857_ssc);
	return _7997_s;;
}



inline jule::Ptr<_1a680dba7_Scope> _1a79e54a8_checkChild(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _80432_tree) {
	jule::Ptr<_1a79de45d_scopeChecker> _8057_ssc = _1a63763ac_newChildChecker(_self_);;
	return _1a79e5167_checkChildSc(_self_, _80432_tree, &(_8057_ssc));;
}



inline void _1a79e5761_checkAnonScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree> _80935_tree) {
	jule::Ptr<_1a680dba7_Scope> _8107_s = _1a79e54a8_checkChild(_self_, &(_80935_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8107_s, &__jule_any_type21)}));
}



inline void _1a79e5ac4_processErrorCall(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1a795c013_Token> _81469_err) {
	if (_1a79e22b8_isDeferred(_self_)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), _81469_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a79de45d_scopeChecker> _8197_root = _1a79e2807_getRoot(_self_);;
	if ((!((*((*((*(_8197_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a683a453_pushErr((*(_self_))._field_s, _81469_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81438_m))))._field_Func=(*_8197_root.alloc)._field_owner;
}



inline void _1a79e5d7c_checkExpr(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7976802_Expr> _82730_expr) {
	jule::Ptr<_1a7a5322a_Eval> _8287_eval = _1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
	(*(_8287_eval))._field_ignored=true;
	jule::Ptr<_1a7a51503_Data> _8307_d = _1a7a7148a_evalExpr(_8287_eval, _82730_expr);;
	if (((_8307_d == nullptr) || ((*(_8307_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_8307_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1abaca963:;
			{
				jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel> _8398_m = (*(_8307_d))._field_Model.unsafe_cast_ptr<_1a79a3cb3_BuiltinErrorCallExprModel>();;
				_1a79e5ac4_processErrorCall(_self_, &(_8398_m), (*(_82730_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8307_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1abacb090:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8307_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1abacb029:;
			{
				_1a683a453_pushErr((*(_self_))._field_s, (*(_82730_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abacaec4:;
	};
}



inline jule::Ptr<_1a680e0c5_If> _1a79e61bd_checkIf(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7987e1d_If> _85828_i) {
	jule::Ptr<_1a680dba7_Scope> _8597_s = _1a79e54a8_checkChild(_self_, &((*(_85828_i))._field_Scope));;
	jule::Ptr<_1a7a51503_Data> _8617_d = _1a7a7148a_evalExpr(_1a6842900_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*_85828_i.alloc)._field_Expr);;
	if ((_8617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _8667_prim = _1a7a8504d_Prim((*(_8617_d))._field_Kind.ptr());;
	if (((_8667_prim == nullptr) || (!(_1a7a8d6c7_IsBool(_8667_prim.ptr()))))) {
		_1a683a453_pushErr((*(_self_))._field_s, (*((*_85828_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a680e0c5_If>(_1a680e0c5_If{._field_Expr=(*(_8617_d))._field_Model, ._field_Scope=_8597_s});;
}



inline jule::Ptr<_1a680e3c2_Else> _1a79e650e_checkElse(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79882e7_Else> _87830_e) {
	return jule::new_ptr<_1a680e3c2_Else>(_1a680e3c2_Else{._field_Scope=_1a79e54a8_checkChild(_self_, &((*(_87830_e))._field_Scope))});;
}



inline void _1a79e67b7_checkConditional(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798879d_Conditional> _88437_conditional) {
	jule::Ptr<_1a680e7e0_Conditional> _8857_c = jule::new_ptr<_1a680e7e0_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8857_c, &__jule_any_type34)}));
	(*_8857_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1a680e0c5_If>>::alloc(0LL, ((*(_88437_conditional))._field_Tail.len() + 1LL));
	(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a680e0c5_If>>::make({_1a79e61bd_checkIf(_self_, (*_88437_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_88437_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abad77c7:;
		if (it != expr_end) {
			jule::Ptr<_1a7987e1d_If> _89115_elif = *it;
			{
				(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a680e0c5_If>>::make({_1a79e61bd_checkIf(_self_, _89115_elif)}));
			}
			_iter_next_1abad77c7:;
			++it;
			goto _iter_begin_1abad77c7;
		}
		_iter_end_1abad77c7:;
	};
	if (((*_88437_conditional.alloc)._field_Default != nullptr)) {
		(*_8857_c.alloc)._field_Default=_1a79e650e_checkElse(_self_, (*_88437_conditional.alloc)._field_Default);
	};
}



inline void _1a79e6c90_checkIterScopeSsc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1a79824de_ScopeTree> _90051_tree, jule::Ptr<_1a680dba7_Scope>* _90074_s, jule::Ptr<_1a79de45d_scopeChecker> _90089_ssc) {
	(*(_90089_ssc))._field_it=_90034_it;
	_1a79e4c6b_checkChildSsc(_self_, &(_90051_tree), _90074_s, &(_90089_ssc));
}



inline jule::Ptr<_1a680dba7_Scope> _1a79e7246_checkIterScopeSc(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1a79824de_ScopeTree> _90550_tree, jule::Ptr<_1a79de45d_scopeChecker> _90572_ssc) {
	jule::Ptr<_1a680dba7_Scope> _9067_scope = _1a79e484d_getChild(_self_.ptr());;
	_1a79e6c90_checkIterScopeSsc(_self_, _90533_it, _90550_tree, &(_9067_scope), _90572_ssc);
	return _9067_scope;;
}



inline jule::Ptr<_1a680dba7_Scope> _1a79e7642_checkIterScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1a79824de_ScopeTree>* _91149_tree) {
	jule::Ptr<_1a79de45d_scopeChecker> _9127_ssc = _1a63763ac_newChildChecker(_self_);;
	return _1a79e7246_checkIterScopeSc(_self_, _91131_it, (*(_91149_tree)), _9127_ssc);;
}



inline void _1a79e78ea_checkInfIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _91634_it) {
	jule::Ptr<_1a680eadc_InfIter> _9177_kind = jule::new_ptr<_1a680eadc_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_9177_kind, &__jule_any_type35)}));
	(*_9177_kind.alloc)._field_Scope=_1a79e7642_checkIterScope(_self_, static_cast<jule::Uintptr>(_9177_kind), &((*((*(_91634_it))))._field_Scope));
}



inline void _1a79e7ba3_checkWhileIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _92236_it) {
	jule::Ptr<_1a79867ac_WhileKind> _9237_wh = (*((*(_92236_it))))._field_Kind.cast_ptr<_1a79867ac_WhileKind>(&__jule_any_type36);;
	if ((((*(_9237_wh))._field_Expr == nullptr) && ((*_9237_wh.alloc)._field_Next == nullptr))) {
		_1a79e78ea_checkInfIter(_self_, _92236_it);
		return;;
	};
	jule::Ptr<_1a6810093_WhileIter> _9297_kind = jule::new_ptr<_1a6810093_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_9297_kind, &__jule_any_type37)}));
	(*_9297_kind.alloc)._field_Scope=_1a79e7642_checkIterScope(_self_, static_cast<jule::Uintptr>(_9297_kind), &((*((*(_92236_it))))._field_Scope));
	if (((*_9237_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a7a51503_Data> _9348_d = _1a7a7148a_evalExpr(_1a6842900_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*_9237_wh.alloc)._field_Expr);;
		if ((_9348_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a7a8a4c6_Prim> _9394_prim = _1a7a8504d_Prim((*(_9348_d))._field_Kind.ptr());;
		if ((_9394_prim == nullptr)) {
			_1a683a453_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a7a8d6c7_IsBool(_9394_prim.ptr())))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_9297_kind.alloc)._field_Expr=(*(_9348_d))._field_Model;
	};
	if (_1a7986b20_IsWhileNext(_9237_wh)) {
		if ((!(_1a680d13a_isValidAstStForNextSt(&((*_9237_wh.alloc)._field_Next))))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _9594_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1a6374c5c_checkNode(_self_, &((*_9237_wh.alloc)._field_Next));
		if ((_9594_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _9629_st = (*((*(_self_))._field_scope))._field_Stmts[_9594_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _9594_n);;
			if ((!(_1a680d404_isValidStForNextSt(&(_9629_st))))) {
				_1a683a453_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_9297_kind.alloc)._field_Next=_9629_st;
		};
	};
}



inline void _1a79e80c1_checkComptimeRangeIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _97244_it, jule::Ptr<_1a68109de_RangeIter>* _97260_kind, jule::Ptr<_1a7a51503_Data>* _97283_d) {
	if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a6839c7c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a79e3c9d_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a6839c7c_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a79e3c9d_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a79871b4_RangeKind> _9867_rang = (*((*(_97244_it))))._field_Kind.cast_ptr<_1a79871b4_RangeKind>(&__jule_any_type38);;
	_1a6376962_makeComptimeRange(_97283_d);
	if ((*((*(_97283_d))))._field_Decl) {
		_1a683a453_pushErr((*(_self_))._field_s, (*((*(_9867_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_97283_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1a7a463b6_rangeChecker _9937_rc = _1a7a463b6_rangeChecker{._field_sc=_self_, ._field_rang=_9867_rang, ._field_Kind=(*(_97260_kind)), ._field_d=(*(_97283_d))};;
	jule::Bool _9993_ok = _1a7a483c9_check(&_9937_rc);;
	if ((!(_9993_ok))) {
		return;;
	};
	jule::Ptr<_1a79c3750_comptimeRange> _10047_comptime = _1a7a883e7_comptimeRange((*((*(_97283_d))))._field_Kind);;
	((_1a79c3530_comptimeRangeKindMptrData*)(*(_10047_comptime))._field_kind.safe_type())->_1a79c2c27_ready((*(_10047_comptime))._field_kind.data, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
	jule::I64 _10067_i = 0LL;;
	jule::I64 _10073_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_10067_i < ((_1a79c3530_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1a79c33cb_len((*_10047_comptime.alloc)._field_kind.data)); (_10067_i)++) {
		{
			jule::Ptr<_1a79de45d_scopeChecker> _10098_ssc = _1a63763ac_newChildChecker(_self_);;
			jule::Ptr<_1a680dba7_Scope> _10108_scope = _1a79e484d_getChild(_self_);;
			if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Scope=_10108_scope;
				(*((*(_10098_ssc))._field_table))._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({(*((*(_97260_kind))))._field_KeyA}));
			};
			if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Scope=_10108_scope;
				(*(*(_10098_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({(*((*(_97260_kind))))._field_KeyB}));
			};
			((_1a79c3530_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1a79c3145_step((*_10047_comptime.alloc)._field_kind.data, _10067_i, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
			_1a79e4c6b_checkChildSsc(_self_, &((*((*(_97244_it))))._field_Scope), &(_10108_scope), &(_10098_ssc));
			if ((_10073_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1aa44e8d2;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_10108_scope, &__jule_any_type21)}));
		}
	_iter_next_1aa44e8d2:;
	}
	_iter_end_1aa44e8d2:;;
}



inline void _1a79e8379_checkRangeIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter>* _102936_it) {
	jule::Ptr<_1a79871b4_RangeKind> _10307_rang = (*((*(_102936_it))))._field_Kind.cast_ptr<_1a79871b4_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1a7a51503_Data> _10327_d = _1a7a71149_evalExpr1(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*(_10307_rang))._field_Expr);;
	if ((_10327_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a68109de_RangeIter> _10377_kind = jule::new_ptr<_1a68109de_RangeIter>(_1a68109de_RangeIter{._field_Expr=_10327_d, });;
	if ((*((*(_102936_it))))._field_Comptime) {
		_1a79e80c1_checkComptimeRangeIter(_self_, _102936_it, &(_10377_kind), &(_10327_d));
		return;;
	};
	if (_1a7a8710a_comptime((*(_10327_d))._field_Kind.ptr())) {
		_1a683a453_pushErr((*(_self_))._field_s, (*((*_10307_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1a7a463b6_rangeChecker _10517_rc = _1a7a463b6_rangeChecker{._field_sc=_self_, ._field_rang=_10307_rang, ._field_Kind=_10377_kind, ._field_d=_10327_d};;
	jule::Bool _10573_ok = _1a7a483c9_check(&_10517_rc);;
	if ((!(_10573_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_10377_kind, &__jule_any_type39)}));
	jule::Ptr<_1a79de45d_scopeChecker> _10647_ssc = _1a63763ac_newChildChecker(_self_);;
	jule::Ptr<_1a680dba7_Scope> _10657_scope = _1a79e484d_getChild(_self_);;
	if (((*(_10377_kind))._field_KeyA != nullptr)) {
		if (((!(_1a6839c7c_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a79e3c9d_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyA.alloc)._field_Scope=_10657_scope;
		(*((*(_10647_ssc))._field_table))._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({(*_10377_kind.alloc)._field_KeyA}));
	};
	if (((*_10377_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a6839c7c_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a79e3c9d_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyB.alloc)._field_Scope=_10657_scope;
		(*(*(_10647_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({(*_10377_kind.alloc)._field_KeyB}));
	};
	_1a79e6c90_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_10377_kind), (*((*(_102936_it))))._field_Scope, &(_10657_scope), _10647_ssc);
	(*_10377_kind.alloc)._field_Scope=_10657_scope;
}



inline void _1a79e8632_checkIter(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985e82_Iter> _108930_it) {
	if (_1a79862e5_IsInf(_108930_it.ptr())) {
		if ((*_108930_it.alloc)._field_Comptime) {
			_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1a79e78ea_checkInfIter(_self_, &(_108930_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108930_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab803e0b:;
			{
				if ((*_108930_it.alloc)._field_Comptime) {
					_1a683a453_pushErr((*(_self_))._field_s, (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1a79e7ba3_checkWhileIter(_self_, &(_108930_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab80568d:;
			{
				_1a79e8379_checkRangeIter(_self_, &(_108930_it));
			}
		}
		else {
			_case_begin_1ab805193:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ab80513d:;
	};
}



inline jule::Bool _1a79e8973_checkValidContLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _111336_it) {
	jule::Ptr<_1a79de45d_scopeChecker> _11147_scope = _self_;;
	_julec_label_1ab8076a1:;
	if (((*(_11147_scope))._field_it == _111336_it)) {
		return true;;
	};
	if (((*_11147_scope.alloc)._field_parent != nullptr)) {
		_11147_scope=(*_11147_scope.alloc)._field_parent;
		goto _julec_label_1ab8076a1;
	};
	return false;;
}



inline jule::Bool _1a79e8cb4_checkValidBreakLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Uintptr _112937_ptr) {
	jule::Ptr<_1a79de45d_scopeChecker> _11307_scope = _self_;;
	_julec_label_1ab80974c:;
	if (((*(_11307_scope))._field_it == _112937_ptr)) {
		return true;;
	};
	if (((*_11307_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _11384_mtch = static_cast<jule::Uintptr>((*(((_1a79dbb97_Case*)((*_11307_scope.alloc)._field_cse))))._field_Owner);;
		if ((_11384_mtch == _112937_ptr)) {
			return true;;
		};
	};
	if (((*_11307_scope.alloc)._field_parent != nullptr)) {
		_11307_scope=(*_11307_scope.alloc)._field_parent;
		goto _julec_label_1ab80974c;
	};
	return false;;
}



inline jule::Ptr<_1a636e581_ContSt> _1a79e9105_checkContValidScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7987967_ContSt> _115236_c) {
	if (_1a79e22b8_isDeferred(_self_)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115236_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115236_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a636e581_ContSt>();;
	};
	jule::Ptr<_1a79de45d_scopeChecker> _11627_scope = _self_;;
	_julec_label_1ab80c6a6:;
	{
		
		if (((((*_11627_scope.alloc)._field_it == 0LLU) && ((*_11627_scope.alloc)._field_parent != nullptr)) && ((*_11627_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ab80e499:;
			{
				_11627_scope=(*_11627_scope.alloc)._field_parent;
				goto _julec_label_1ab80c6a6;
			}
		}
		else if (((*_11627_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ab80e532:;
			{
				return jule::new_ptr<_1a636e581_ContSt>(_1a636e581_ContSt{._field_It=(*_11627_scope.alloc)._field_it});;
			}
		}
		_match_end_1ab80e411:;
	};
	_1a683a453_pushErr((*(_self_))._field_s, (*_115236_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a79e93ad_checkCont(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7987967_ContSt> _117626_c) {
	jule::Ptr<_1a636e581_ContSt> _11777_cont = _1a79e9105_checkContValidScope(_self_, _117626_c);;
	if ((_11777_cont == nullptr)) {
		return;;
	};
	if (((*(_117626_c))._field_Label != nullptr)) {
		jule::Ptr<_1a79dcdda_scopeLabel> _11838_label = _1a680b1c1_findLabelParent(&((*(*(_117626_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11838_label == nullptr)) {
			_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*_117626_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_11838_label))._field_used=true;
		if ((((*(_11838_label))._field_pos + 1LL) >= (*((*((*(_11838_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _11964_i = ((*(_11838_label))._field_pos + 1LL);;
		if ((_11964_i >= (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _12009_st = (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts[_11964_i];;
			{
				auto &_match_expr{ _12009_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1ab819cbd:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a680eadc_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1ab819e99:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a68109de_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1ab81a010:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a6810093_WhileIter>());
					}
				}
				else {
					_case_begin_1ab819e33:;
					{
						_1a683a453_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1ab819dcd:;
			};
		};
	};
	if (((*(_11777_cont))._field_It != 0LLU)) {
		if ((!(_1a79e8973_checkValidContLabel(_self_, (*(_11777_cont))._field_It)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_11777_cont, &__jule_any_type40)}));
}



inline void _1a79e9666_checkLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a797eaa2_LabelSt> _122331_l) {
	if ((_1a79e3220_findLabel(_self_.ptr(), &((*(_122331_l))._field_Ident)) != nullptr)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*_122331_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_122331_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a79d96de_Label> _12297_label = jule::new_ptr<_1a79d96de_Label>(_1a79d96de_Label{._field_Ident=(*_122331_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_12297_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),jule::Slice<jule::Ptr<_1a79dcdda_scopeLabel>>::make({jule::new_ptr<_1a79dcdda_scopeLabel>(_1a79dcdda_scopeLabel{._field_token=(*_122331_l.alloc)._field_Token, ._field_label=_12297_label, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1a79e991e_pushGoto(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a797ee7b_GotoSt> _124229_gt) {
	jule::Ptr<_1a79d9aa7_GotoSt> _12437_st = jule::new_ptr<_1a79d9aa7_GotoSt>(_1a79d9aa7_GotoSt{._field_Ident=(*((*(_124229_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_12437_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),jule::Slice<jule::Ptr<_1a79dd46d_scopeGoto>>::make({jule::new_ptr<_1a79dd46d_scopeGoto>(_1a79dd46d_scopeGoto{._field_st=_12437_st, ._field_gt=_124229_gt, ._field_scope=_self_, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1a6362585_checkPostfix(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt> _125633_a) {
	if (((*(_125633_a))._field_Left.len() > 1LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*_125633_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7976802_Expr> _12627_expr = (*((*(_125633_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a7a51503_Data> _12637_d = _1a7a7148a_evalExpr(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), _12627_expr);;
	if ((_12637_d == nullptr)) {
		return;;
	};
	_1a680cd71_checkAssign(&((*_self_.alloc)._field_s), &(_12637_d), nullptr, (*_125633_a.alloc)._field_Setter);
	if ((_1a7a8556a_Ptr((*(_12637_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a7a927b9_Ptr> _12718_ptr = _1a7a8556a_Ptr((*(_12637_d))._field_Kind);;
		if (_1a7a93303_IsUnsafe(_12718_ptr.ptr())) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_12637_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1a7a8504d_Prim((*(_12637_d))._field_Kind.ptr()) == nullptr) || (!(_1bd82bd78_IsNum((*(_1a7a8504d_Prim((*(_12637_d))._field_Kind)))._field_Kind))))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_12637_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a79d9e81_Postfix>(_1a79d9e81_Postfix{._field_Expr=(*(_12637_d))._field_Model, ._field_Op=(*((*_125633_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1a636ae95_isNewAssignIdent(_1a79de45d_scopeChecker* _self_, jule::Str _128932_ident) {
	if ((_1a795e8ea_IsIgnoreIdent(_128932_ident) || (_128932_ident).empty())) {
		return false;;
	};
	return (_1a7a4e204_defByIdent((*(_self_))._field_table.ptr(), &(_128932_ident), false) == nullptr);;
}



inline void _1a6370186_removeInteriorMutRisk(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7a51503_Data>* _130243_d) {
	jule::Ptr<_1a79960d5_StructIns> _13033_s = _1a7a865c1_Struct((*((*(_130243_d))))._field_Kind.ptr());;
	if ((_13033_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a79de45d_scopeChecker> _13073_root = _1a79e2a8d_getHardRoot(_self_);;
	if (((*((*(_13073_root))._field_owner))._field_Owner != _13033_s)) {
		return;;
	};
	(*((*(_130243_d))))._field_Mutable=true;
}



inline jule::Bool _1a637063c_checkStructureAssignOp(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79960d5_StructIns>* _131644_s, jule::Ptr<_1a7980e6b_AssignSt>* _131664_a, jule::Ptr<_1a7a51503_Data>* _131683_r) {
	jule::Ptr<_1a79ab309_FnIns> _131911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131664_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1abb02902:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1abb025b1:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1abb02627:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1abb0268d:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1abb02704:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1abb0276a:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1abb027d1:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1abb03e53:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1abb03eb9:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1abb04030:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1abb01d74:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a7996459_Str((*(_131644_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1abb0254a:;
	};
	if ((_131911_overload == nullptr)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a7996459_Str((*(_131644_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a79aa281_ParamIns> _13517_p = (*(_131911_overload))._field_Params[1LL];;
	return _1a6842e61_checkAssignType((*(_self_))._field_s, (*((*(_13517_p))._field_Decl))._field_Reference, &((*_13517_p.alloc)._field_Kind), _131683_r, (*((*(_131664_a))))._field_Setter);;
}



inline void _1a63708e5_checkSingleAssign(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt>* _135539_a) {
	jule::Ptr<_1a7a51503_Data> _135611_l = nullptr;;
	if ((!(_1a795e8ea_IsIgnoreIdent((*((*((*(_135539_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a7976802_Expr> _13598_expr = (*((*((*(_135539_a))))._field_Left[0LL]))._field_Expr;;
		_135611_l=_1a7a7148a_evalExpr(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), _13598_expr);
		if ((_135611_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a7a5322a_Eval> _136611_eval = nullptr;;
	if ((_135611_l != nullptr)) {
		_136611_eval=_1a68425ae_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0), (*(_135611_l))._field_Kind);
	} else {
		_136611_eval=_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));
	};
	(*(_136611_eval))._field_unsafety=_1a79e1817_isUnsafe(_self_);
	jule::Ptr<_1a7a51503_Data> _13737_r = _1a7a7148a_evalExpr(_136611_eval, (*((*(_135539_a))))._field_Right);;
	if ((_13737_r == nullptr)) {
		return;;
	};
	_1a6370186_removeInteriorMutRisk(_self_, &(_13737_r));
	if ((_135611_l == nullptr)) {
		if (_1a7a83c61_Void((*(_13737_r))._field_Kind.ptr())) {
			_1a683a453_pushErr((*(_self_))._field_s, (*((*((*(_135539_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_13737_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1a680cd71_checkAssign(&((*_self_.alloc)._field_s), &(_135611_l), _13737_r, (*((*(_135539_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a7a86d74_Tup((*(_13737_r))._field_Kind) != nullptr)) {
		_1a683a453_pushErr((*(_self_))._field_s, (*((*(_135539_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7999eda_OperandExprModel> _13977_lm = jule::new_ptr<_1a7999eda_OperandExprModel>(_1a7999eda_OperandExprModel{._field_Kind=(*(_135611_l))._field_Kind, ._field_Model=(*(_135611_l))._field_Model});;
	jule::Ptr<_1a7999eda_OperandExprModel> _14017_rm = jule::new_ptr<_1a7999eda_OperandExprModel>(_1a7999eda_OperandExprModel{._field_Kind=(*(_13737_r))._field_Kind, ._field_Model=(*(_13737_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a79da437_Assign>(_1a79da437_Assign{._field_Left=_13977_lm, ._field_Right=_14017_rm, ._field_Op=(*((*(_135539_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_135539_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a7a39e6a_assignTypeChecker _14088_checker = _1a7a39e6a_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135611_l))._field_Kind, ._field_d=_13737_r, ._field_errorToken=(*((*(_135539_a))))._field_Setter};;
		if (_1a7a3ae38_check(&_14088_checker)) {
			(*(_14017_rm))._field_Model=(*(_13737_r))._field_Model;
			(*(_13977_lm))._field_Model=(*(_135611_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a79960d5_StructIns> _14207_strct = _1a7a865c1_Struct((*(_135611_l))._field_Kind);;
	if ((_14207_strct != nullptr)) {
		_1a637063c_checkStructureAssignOp(_self_, &(_14207_strct), _135539_a, &(_13737_r));
		return;;
	};
	jule::U64 _14253_id = (*(*((*(_135539_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_1a6376731_removeEqFromOp((*(*((*(_135539_a))))._field_Setter.alloc)._field_Id);
	_1a7a738dd_binaryEval _14277_solver = static__1a7a74317_new(_136611_eval, (*((*(_135539_a))))._field_Setter);;
	({
		jule::Ptr<_1a7a51503_Data> ___jule_assign_arg = _135611_l;
		jule::Ptr<_1a7a51503_Data> _1___jule_assign_arg = _13737_r;
		_14277_solver._field_l = ___jule_assign_arg;
		_14277_solver._field_r = _1___jule_assign_arg;
	});
	_1a7a7845e_evalOp(&_14277_solver);
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_14253_id;
}



inline void _1a6370e78_processEndPartOfMultiAssign(_1a79de45d_scopeChecker* _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _143348_st, jule::Ptr<_1a7980e6b_AssignSt>* _14348_a, jule::Ptr<_1a79808d8_AssignLeft>* _143427_lexpr, jule::Ptr<_1a7a51503_Data>* _143452_l, jule::Ptr<_1a7a51503_Data>* _143467_r) {
	if (((!((*((*(_143427_lexpr))))._field_Reference)) && _1a795e8ea_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident))) {
		if (_1a7a83c61_Void((*((*(_143467_r))))._field_Kind.ptr())) {
			_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_14348_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a7a51503_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_14348_a))))._field_Declarative && ((*((*(_143427_lexpr))))._field_Reference || _1a636ae95_isNewAssignIdent(_self_, (*((*(_143427_lexpr))))._field_Ident)))) {
		if (_1a79e3c9d_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143427_lexpr))))._field_Ident))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a79e1c9b_stop(_self_);
			return;;
		};
		if (_1a795e8ea_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident)) {
			_1a683a453_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a685a682_Var> _14558_v = jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143427_lexpr))))._field_Token, ._field_Ident=(*((*(_143427_lexpr))))._field_Ident, ._field_Mutable=(*((*(_143427_lexpr))))._field_Mutable, ._field_Reference=(*((*(_143427_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Expr=(*((*(_14348_a))))._field_Right, ._field_Data=(*(_143467_r))}), });;
		_1a6851e09_checkVarValue((*(_self_))._field_s, &(_14558_v));
		{ jule::Slice<jule::Ptr<_1a7a51503_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=(*((*_14558_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_14558_v.alloc)._field_Mutable, ._field_Reference=(*_14558_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_14558_v))._field_Constant)), ._field_Model=jule::Any(_14558_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = (*((*(_143348_st))))._field_Decls; __jule_push_dest.push(_14558_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({_14558_v}));
		return;;
	};
	if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
		_1a683a453_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a680cd71_checkAssign(&((*(_self_))._field_s), _143452_l, (*(_143467_r)), (*((*(_143427_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1a68472ea_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143452_l))))._field_Mutable, false, &((*((*(_143452_l))))._field_Kind), _143467_r, &((*((*(_14348_a))))._field_Setter));
	_1a7a39e6a_assignTypeChecker _14937_checker = _1a7a39e6a_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143452_l))))._field_Kind, ._field_d=(*(_143467_r)), ._field_errorToken=(*((*(_14348_a))))._field_Setter};;
	_1a7a3ae38_check(&_14937_checker);
	{ jule::Slice<jule::Ptr<_1a7a51503_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push((*(_143452_l))); };
}



inline void _1a6371231_checkMultiAssign(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt>* _150338_a) {
	jule::Ptr<_1a7a51503_Data> _15047_rd = _1a7a7148a_evalExpr(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*((*(_150338_a))))._field_Right);;
	if ((_15047_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7a51503_Data>> _15087_right = _1a680c04b_getDatasFromTupleData(&(_15047_rd));;
	if ((_15087_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_15087_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1abb30930:;
				{
					jule::Ptr<_1a799cd45_IndexingExprModel> _15129_iem = (*(_15087_right[0LL]))._field_Model.unsafe_cast_ptr<_1a799cd45_IndexingExprModel>();;
					if ((_1a7a86add_Map((*((*(_15129_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_15087_right=jule::Slice<jule::Ptr<_1a7a51503_Data>>::make({jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=(*(_1a7a86add_Map((*((*(_15129_iem))._field_Expr))._field_Kind)))._field_Val, }),jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, })});
					};
				}
			}
			_match_end_1abb30886:;
		};
	};
	{
		
		if (((*((*(_150338_a))))._field_Left.len() > _15087_right.len())) {
			_case_begin_1abb3037a:;
			{
				_1a683a453_pushErr((*(_self_))._field_s, (*((*(_150338_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_150338_a))))._field_Left.len() < _15087_right.len())) {
			_case_begin_1abb30c82:;
			{
				_1a683a453_pushErr((*(_self_))._field_s, (*((*(_150338_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1abb309da:;
	};
	jule::Ptr<_1a79da8dd_MultiAssign> _15317_st = jule::new_ptr<_1a79da8dd_MultiAssign>(_1a79da8dd_MultiAssign{._field_Right=(*(_15047_rd))._field_Model});;
	{
		auto expr = &((*((*(_150338_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb35957:;
		if (it != expr_end) {
			jule::I64 _15347_i = it - expr->begin();
			{
				jule::Ptr<_1a79808d8_AssignLeft> _15358_lexpr = (*((*(_150338_a))))._field_Left[_15347_i];;
				jule::Ptr<_1a7a51503_Data> _153612_l = nullptr;;
				if (((!(_1a795e8ea_IsIgnoreIdent((*(_15358_lexpr))._field_Ident))) && ((!((*((*(_150338_a))))._field_Declarative)) || (!(_1a636ae95_isNewAssignIdent(_self_, (*_15358_lexpr.alloc)._field_Ident)))))) {
					_153612_l=_1a7a7148a_evalExpr(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*_15358_lexpr.alloc)._field_Expr);
					if ((_153612_l == nullptr)) {
						goto _iter_next_1abb35957;
					};
				};
				jule::Ptr<_1a7a51503_Data> _15448_r = _15087_right[_15347_i];;
				_1a6370186_removeInteriorMutRisk(_self_, &(_15448_r));
				_1a6370e78_processEndPartOfMultiAssign(_self_, &(_15317_st), _150338_a, &(_15358_lexpr), &(_153612_l), &(_15448_r));
			}
			_iter_next_1abb35957:;
			++it;
			_15347_i++;
			goto _iter_begin_1abb35957;
		}
		_iter_end_1abb35957:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_15317_st, &__jule_any_type45)}));
}



inline void _1a63714d9_checkAssignSt(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980e6b_AssignSt> _155134_a) {
	{
		
		if (_1a7961a95_IsPostfixOp((*((*(_155134_a))._field_Setter))._field_Id)) {
			_case_begin_1abb3ad03:;
			{
				_1a6362585_checkPostfix(_self_, _155134_a);
			}
		}
		else if (((*(_155134_a))._field_Left.len() == 1LL)) {
			_case_begin_1abb3a9b2:;
			{
				_1a63708e5_checkSingleAssign(_self_, &(_155134_a));
			}
		}
		else {
			_case_begin_1abb3a94b:;
			{
				_1a6371231_checkMultiAssign(_self_, &(_155134_a));
			}
		}
		_match_end_1abb3a84c:;
	};
}



inline jule::Ptr<_1a680dba7_Scope> _1a63718d5_checkCaseScope(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79dbb97_Case>* _156232_c, jule::Ptr<_1a79824de_ScopeTree>* _156247_tree) {
	jule::Ptr<_1a79de45d_scopeChecker> _15637_ssc = _1a63763ac_newChildChecker(_self_);;
	(*(_15637_ssc))._field_cse=static_cast<jule::Uintptr>((*(_156232_c)));
	return _1a79e5167_checkChildSc(_self_, _156247_tree, &(_15637_ssc));;
}



inline jule::Ptr<_1a79dbb97_Case> _1a6371e46_checkCase(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79db04d_Match> _156830_m, jule::I64 _156841_i, jule::Ptr<_1a7989491_Case> _156853_c, jule::Ptr<_1a7a51503_Data> _156872_expr) {
	jule::Ptr<_1a79dbb97_Case> _15697_case = (*(_156830_m))._field_Cases[_156841_i];;
	(*(_15697_case))._field_Exprs=jule::Slice<jule::Ptr<_1a7a51503_Data>>::alloc(0LL, (*(_156853_c))._field_Exprs.len());
	jule::Bool _15717_constMatched = false;;
	jule::Ptr<_1a7a5322a_Eval> _15727_eval = _1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
	{
		auto expr = &((*_156853_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb41578:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _157315_e = *it;
			{
				jule::Ptr<_1a7a51503_Data> _15748_d = _1a7a70676_evalExprKind(_15727_eval, (*(_157315_e))._field_Kind);;
				if ((_15748_d == nullptr)) {
					goto _iter_next_1abb41578;
				};
				if ((*_156830_m.alloc)._field_TypeMatch) {
					(*_15697_case.alloc)._field_Exprs=jule::append((*_15697_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a7a51503_Data>>::make({_15748_d}));
					if ((_1a680bc82_countMatchType(&(_156830_m), &((*(_15748_d))._field_Kind)) > 1LL)) {
						_1a683a453_pushErr((*(_self_))._field_s, (*_157315_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_15748_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_156830_m.alloc)._field_Comptime) {
						_15717_constMatched=(_15717_constMatched || _1a7a83106_Equal((*(_156872_expr))._field_Kind, (*(_15748_d))._field_Kind));
					} else {
						if ((_1a7a85a87_TypeEnum((*(_156872_expr))._field_Kind) != nullptr)) {
							_1a68438bd_checkTypeCompatibility((*(_self_))._field_s, &((*(_156872_expr))._field_Kind), &((*(_15748_d))._field_Kind), &((*_157315_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a79bb6d2_Trait> _15937_trt = _1a7a86857_Trait((*(_156872_expr))._field_Kind);;
							if ((_15937_trt != nullptr)) {
								_1a68438bd_checkTypeCompatibility((*(_self_))._field_s, &((*(_156872_expr))._field_Kind), &((*(_15748_d))._field_Kind), &((*_157315_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1abb41578;
				};
				if ((*(_15748_d))._field_Decl) {
					_1a683a453_pushErr((*(_self_))._field_s, (*_157315_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1abb41578;
				};
				if ((*_156830_m.alloc)._field_Comptime) {
					if (((!(_1a7a51e0a_IsConst(_15748_d.ptr()))) && (_1a7a88914_comptimeTypeInfo((*(_15748_d))._field_Kind) == nullptr))) {
						_1a683a453_pushErr((*(_self_))._field_s, (*_157315_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1abb41578;
					};
					if ((!(_15717_constMatched))) {
						if (_1a7a51e0a_IsConst(_15748_d.ptr())) {
							_15717_constMatched=(_1a7a51e0a_IsConst(_156872_expr.ptr()) && _1bd832e39_Eq((*(_15748_d))._field_Constant.ptr(), (*((*(_156872_expr))._field_Constant))));
						} else {
							jule::Ptr<_1a79d3078_comptimeTypeInfo> _16187_exprCti = _1a7a88914_comptimeTypeInfo((*(_156872_expr))._field_Kind);;
							_15717_constMatched=((_16187_exprCti != nullptr) && _1a7a83106_Equal((*(_1a7a88914_comptimeTypeInfo((*(_15748_d))._field_Kind)))._field_base, (*_16187_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15697_case.alloc)._field_Exprs=jule::append((*_15697_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a7a51503_Data>>::make({_15748_d}));
				if ((((!((*_156830_m.alloc)._field_Comptime)) || (_1a7a88914_comptimeTypeInfo((*(_156872_expr))._field_Kind) == nullptr)) || (_1a7a88914_comptimeTypeInfo((*(_15748_d))._field_Kind) == nullptr))) {
					_1a7a39e6a_assignTypeChecker _16289_checker = _1a7a39e6a_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_156872_expr))._field_Kind, ._field_d=_15748_d, ._field_errorToken=(*_157315_e.alloc)._field_Token};;
					_1a7a3ae38_check(&_16289_checker);
				};
			}
			_iter_next_1abb41578:;
			++it;
			goto _iter_begin_1abb41578;
		}
		_iter_end_1abb41578:;
	};
	if (((!((*_156830_m.alloc)._field_Comptime)) || _15717_constMatched)) {
		(*_15697_case.alloc)._field_Scope=_1a63718d5_checkCaseScope(_self_, &(_15697_case), &((*_156853_c.alloc)._field_Scope));
	};
	return _15697_case;;
}



inline void _1a6372364_checkCases(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase>* _164332_m, jule::Ptr<_1a79db04d_Match> _164351_rm, jule::Ptr<_1a7a51503_Data> _164367_expr) {
	(*(_164351_rm))._field_Cases=jule::Slice<jule::Ptr<_1a79dbb97_Case>>::alloc(0LL, (*((*(_164332_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_164332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb53cb6:;
		if (it != expr_end) {
			jule::I64 _16457_i = it - expr->begin();
			{
				jule::Ptr<_1a79dbb97_Case> _16468_case = jule::new_ptr<_1a79dbb97_Case>(_1a79dbb97_Case{._field_Owner=_164351_rm, });;
				if ((_16457_i > 0LL)) {
					(*((*_164351_rm.alloc)._field_Cases[(_16457_i - 1LL)]))._field_Next=_16468_case;
				};
				(*_164351_rm.alloc)._field_Cases=jule::append((*_164351_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1a79dbb97_Case>>::make({_16468_case}));
			}
			_iter_next_1abb53cb6:;
			++it;
			_16457_i++;
			goto _iter_begin_1abb53cb6;
		}
		_iter_end_1abb53cb6:;
	};
	if ((((*_164351_rm.alloc)._field_Default != nullptr) && ((*((*(_164332_m))))._field_Cases.len() > 0LL))) {
		(*((*_164351_rm.alloc)._field_Cases[((*_164351_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_164351_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_164332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb57391:;
		if (it != expr_end) {
			jule::I64 _16598_i = it - expr->begin();
			jule::Ptr<_1a7989491_Case> _165915_c = *it;
			{
				_1a6371e46_checkCase(_self_, _164351_rm, _16598_i, _165915_c, _164367_expr);
			}
			_iter_next_1abb57391:;
			++it;
			_16598_i++;
			goto _iter_begin_1abb57391;
		}
		_iter_end_1abb57391:;
	};
}



inline jule::Ptr<_1a79dbb97_Case> _1a6372760_checkDefault(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79db04d_Match> _166433_m, jule::Ptr<_1a79882e7_Else> _166448_d) {
	jule::Ptr<_1a79dbb97_Case> _16657_def = jule::new_ptr<_1a79dbb97_Case>(_1a79dbb97_Case{._field_Owner=_166433_m, });;
	(*(_16657_def))._field_Scope=_1a63718d5_checkCaseScope(_self_, &(_16657_def), &((*(_166448_d))._field_Scope));
	return _16657_def;;
}



inline void _1a6372ac3_checkComptimePanic(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a795c013_Token> _167239_callToken, jule::Ptr<_1a680dba7_Scope>* _167259_s) {
	if (((*((*(_167259_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16763_stmt = (*((*(_167259_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16763_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1abb5aa9d:;
			{
				jule::Ptr<_1a7a51503_Data> _16794_d = _16763_stmt.unsafe_cast_ptr<_1a7a51503_Data>();;
				{
					auto &_match_expr{ (*(_16794_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1abb5ba27:;
						{
							jule::Ptr<_1a79a1c06_BuiltinPanicCallExprModel> _16829_m = (*(_16794_d))._field_Model.unsafe_cast_ptr<_1a79a1c06_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16829_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1abb5cbe3:;
									{
										jule::Ptr<_1bd82c384_Const> _16856_c = (*(_16829_m))._field_Expr.unsafe_cast_ptr<_1bd82c384_Const>();;
										if ((!(_1bd831b08_IsStr(_16856_c.ptr())))) {
											goto _match_end_1abb5cb7c;
										};
										if ((_167239_callToken == nullptr)) {
											jule::Ptr<_1a79de45d_scopeChecker> _169011_root = _1a79e2a8d_getHardRoot(_self_);;
											if (((*(_169011_root))._field_calledFrom == nullptr)) {
												_167239_callToken=(*(_16829_m))._field_Token;
											} else {
												_167239_callToken=(*(_169011_root))._field_calledFrom;
											};
										};
										_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), _167239_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1bd82e50c_ReadStr(_16856_c), &__jule_any_type4)}));
										_1a79e1c9b_stop(_self_);
									}
								}
								_match_end_1abb5cb7c:;
							};
						}
					}
					_match_end_1abb5b9b1:;
				};
			}
		}
		_match_end_1abb5aa48:;
	};
}



inline void _1a6372e36_processConstMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79db04d_Match>* _170439_tm, jule::Ptr<_1a7989caa_MatchCase>* _170456_m) {
	{
		auto expr = &((*((*(_170439_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb5d045:;
		if (it != expr_end) {
			jule::I64 _17058_i = it - expr->begin();
			jule::Ptr<_1a79dbb97_Case> _170515_c = *it;
			{
				if (((*(_170515_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a795c013_Token> _170713_token = nullptr;;
					if (((!((*((*(_170439_tm))))._field_TypeMatch)) && ((*(*(_170515_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_170713_token=(*((*((*((*(_170456_m))))._field_Cases[_17058_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a6372ac3_checkComptimePanic(_self_, _170713_token, &((*_170515_c.alloc)._field_Scope));
					(*((*(_170439_tm))))._field_Default=_170515_c;
					(*((*(_170439_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1abb5d045:;
			++it;
			_17058_i++;
			goto _iter_begin_1abb5d045;
		}
		_iter_end_1abb5d045:;
	};
	if (((*((*(_170456_m))))._field_Default != nullptr)) {
		(*((*(_170439_tm))))._field_Cases=nullptr;
		(*((*(_170439_tm))))._field_Default=_1a6372760_checkDefault(_self_, (*(_170439_tm)), (*((*(_170456_m))))._field_Default);
		if (((*((*(_170439_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a795c013_Token> _172113_token = nullptr;;
			if ((!((*((*(_170439_tm))))._field_TypeMatch))) {
				_172113_token=(*((*((*((*(_170456_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a6372ac3_checkComptimePanic(_self_, _172113_token, &((*(*((*(_170439_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_170439_tm))))._field_Cases=nullptr;
	};
}



inline void _1a63731de_checkTypeMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase>* _173336_m) {
	jule::Ptr<_1a7a51503_Data> _17347_d = _1a7a709b7_eval1(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*((*(_173336_m))))._field_Expr);;
	if ((_17347_d == nullptr)) {
		return;;
	};
	if ((*((*(_173336_m))))._field_Comptime) {
		jule::Ptr<_1a79d3078_comptimeTypeInfo> _17408_cti = _1a7a88914_comptimeTypeInfo((*(_17347_d))._field_Kind.ptr());;
		if ((_17408_cti == nullptr)) {
			if ((!((*(_17347_d))._field_Decl))) {
				_1a683a453_pushErr((*(_self_))._field_s, (*((*((*(_173336_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_17347_d))._field_Kind=(*(_17408_cti))._field_base;
		};
	} else if (((*(_17347_d))._field_Decl || (!(((((_1a7a8504d_Prim((*(_17347_d))._field_Kind.ptr()) != nullptr) && _1a7a8dbe4_IsAny(_1a7a8504d_Prim((*(_17347_d))._field_Kind).ptr())) || (_1a7a86857_Trait((*(_17347_d))._field_Kind) != nullptr)) || (_1a7a85a87_TypeEnum((*(_17347_d))._field_Kind) != nullptr)))))) {
		_1a683a453_pushErr((*(_self_))._field_s, (*((*((*(_173336_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a79db04d_Match> _17547_tm = jule::new_ptr<_1a79db04d_Match>(_1a79db04d_Match{._field_Expr=_17347_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_173336_m))))._field_Comptime, });;
	if (((!((*(_17547_tm))._field_Comptime)) && ((*((*(_173336_m))))._field_Default != nullptr))) {
		(*_17547_tm.alloc)._field_Default=_1a6372760_checkDefault(_self_, _17547_tm, (*((*(_173336_m))))._field_Default);
	};
	_1a6372364_checkCases(_self_, _173336_m, _17547_tm, _17347_d);
	if ((*_17547_tm.alloc)._field_Comptime) {
		_1a6372e36_processConstMatch(_self_, &(_17547_tm), _173336_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_17547_tm, &__jule_any_type46)}));
}



inline void _1a6373497_checkCommonMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase>* _177538_m) {
	jule::Ptr<_1a7a51503_Data> _177611_d = nullptr;;
	if (((*((*(_177538_m))))._field_Expr == nullptr)) {
		_177611_d=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Constant=static__1bd82cd57_NewBool(true)});
		(*(_177611_d))._field_Model=jule::Any((*_177611_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_177611_d=_1a7a71149_evalExpr1(_1a6842900_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*((*(_177538_m))))._field_Expr);
		if ((_177611_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_177538_m))))._field_Comptime) {
		if ((!(_1a6376e6d_canComptimeMatch(&(_177611_d))))) {
			_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177538_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a7a8710a_comptime((*(_177611_d))._field_Kind.ptr())) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177538_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a79db04d_Match> _18027_mc = jule::new_ptr<_1a79db04d_Match>(_1a79db04d_Match{._field_Expr=_177611_d, ._field_Comptime=(*((*(_177538_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_18027_mc, &__jule_any_type46)}));
	if (((!((*(_18027_mc))._field_Comptime)) && ((*((*(_177538_m))))._field_Default != nullptr))) {
		(*_18027_mc.alloc)._field_Default=_1a6372760_checkDefault(_self_, _18027_mc, (*((*(_177538_m))))._field_Default);
	};
	_1a6372364_checkCases(_self_, _177538_m, _18027_mc, _177611_d);
	if ((*_18027_mc.alloc)._field_Comptime) {
		_1a6372e36_processConstMatch(_self_, &(_18027_mc), _177538_m);
	};
}



inline void _1a6373750_checkMatch(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7989caa_MatchCase> _182531_m) {
	if ((*(_182531_m))._field_TypeMatch) {
		_1a63731de_checkTypeMatch(_self_, &(_182531_m));
		return;;
	};
	_1a6373497_checkCommonMatch(_self_, &(_182531_m));
}



inline void _1a6373a08_checkFall(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7980278_FallSt> _183326_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1a79e22b8_isDeferred(_self_))) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183326_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a79dbb97_Case* _18417_case = ((_1a79dbb97_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_18417_case))._field_Owner))._field_Comptime) {
		_1a683a453_pushErr((*(_self_))._field_s, (*_183326_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_18417_case))._field_Next == nullptr)) {
		_1a683a453_pushErr((*(_self_))._field_s, (*_183326_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a79dc3a1_FallSt>(_1a79dc3a1_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_18417_case))._field_Next)}), &__jule_any_type47)}));
}



inline jule::Ptr<_1a79d947a_BreakSt> _1a6373d49_checkBreakWithLabel(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798758d_BreakSt> _185636_b) {
	jule::Ptr<_1a79d947a_BreakSt> _18577_brk = _1a637418a_checkPlainBreak(_self_, _185636_b);;
	if ((_18577_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18577_brk))._field_It=0LLU;
	(*(_18577_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a79dcdda_scopeLabel> _18677_label = _1a680b1c1_findLabelParent(&((*((*(_185636_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18677_label == nullptr)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*_185636_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(_185636_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_18677_label))._field_used=true;
	if ((((*(_18677_label))._field_pos + 1LL) >= (*((*((*(_18677_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1a683a453_pushErr((*(_self_))._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_185636_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18803_i = ((*(_18677_label))._field_pos + 1LL);;
	if ((_18803_i >= (*(*((*(_18677_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
		_1a683a453_pushErr((*(_self_))._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_185636_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _18848_st = (*(*((*(_18677_label))._field_scope))._field_scope.alloc)._field_Stmts[_18803_i];;
		{
			auto &_match_expr{ _18848_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1abb8c1a6:;
				{
					(*(_18577_brk))._field_It=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a680eadc_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1abb8c382:;
				{
					(*(_18577_brk))._field_It=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a68109de_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1abb8c3e8:;
				{
					(*(_18577_brk))._field_It=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a6810093_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1abb8c45e:;
				{
					(*(_18577_brk))._field_Mtch=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a79db04d_Match>());
				}
			}
			else {
				_case_begin_1abb8c31b:;
				{
					_1a683a453_pushErr((*(_self_))._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_185636_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1abb8c2b6:;
		};
	};
	if (((*(_18577_brk))._field_It != 0LLU)) {
		if ((!(_1a79e8cb4_checkValidBreakLabel(_self_, (*(_18577_brk))._field_It)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_185636_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_18577_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a79e8cb4_checkValidBreakLabel(_self_, (*(_18577_brk))._field_Mtch)))) {
			_1a683a453_pushErr((*(_self_))._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_185636_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _18577_brk;;
}



inline jule::Ptr<_1a79d947a_BreakSt> _1a637418a_checkPlainBreak(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798758d_BreakSt> _191432_b) {
	if (_1a79e22b8_isDeferred(_self_)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191432_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a79de45d_scopeChecker> _19207_scope = _self_;;
	_julec_label_1abb945cb:;
	{
		
		if ((((((*_19207_scope.alloc)._field_it == 0LLU) && ((*_19207_scope.alloc)._field_cse == 0LLU)) && ((*_19207_scope.alloc)._field_parent != nullptr)) && ((*_19207_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1abb955dd:;
			{
				_19207_scope=(*_19207_scope.alloc)._field_parent;
				goto _julec_label_1abb945cb;
			}
		}
		else if (((*_19207_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1abb95676:;
			{
				return jule::new_ptr<_1a79d947a_BreakSt>(_1a79d947a_BreakSt{._field_It=(*_19207_scope.alloc)._field_it, });;
			}
		}
		else if (((*_19207_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1abb956dc:;
			{
				return jule::new_ptr<_1a79d947a_BreakSt>(_1a79d947a_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1a79dbb97_Case*)((*_19207_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1abb95511:;
	};
	_1a683a453_pushErr((*(_self_))._field_s, (*_191432_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a6374443_checkBreak(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a798758d_BreakSt> _193627_b) {
	if (((*(_193627_b))._field_Label != nullptr)) {
		jule::Ptr<_1a79d947a_BreakSt> _19388_brk = _1a6373d49_checkBreakWithLabel(_self_, _193627_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19388_brk, &__jule_any_type48)}));
		return;;
	};
	jule::Ptr<_1a79d947a_BreakSt> _19437_brk = _1a637418a_checkPlainBreak(_self_, _193627_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19437_brk, &__jule_any_type48)}));
}



inline void _1a63746eb_checkRet(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a7985712_RetSt> _194729_r) {
	if (_1a79e22b8_isDeferred(_self_)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*(_194729_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a79dc77a_RetSt> _19527_rt = jule::new_ptr<_1a79dc77a_RetSt>(_1a79dc77a_RetSt{._field_Func=(*(_1a79e2807_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19527_rt, &__jule_any_type49)}));
	jule::Ptr<_1a7a48b27_retTypeChecker> _19577_rtc = jule::new_ptr<_1a7a48b27_retTypeChecker>(_1a7a48b27_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19527_rt))._field_Func, ._field_errorToken=(*_194729_r.alloc)._field_Token, });;
	jule::Bool _19623_ok = _1a7a49ad4_check(_19577_rtc.ptr(), &((*_194729_r.alloc)._field_Expr));;
	if ((!(_19623_ok))) {
		return;;
	};
	if (((*_194729_r.alloc)._field_Expr != nullptr)) {
		(*_19527_rt.alloc)._field_Expr=(*_19577_rtc.alloc)._field_model;
	};
}



inline void _1a63749a4_checkUseExpr(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79771c6_UseExpr> _197229_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197229_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a79e22b8_isDeferred(_self_)) {
		_1a683a453_pushErr((*(_self_))._field_s, (*_197229_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a683a453_pushErr((*(_self_))._field_s, (*_197229_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a6374c5c_checkNode(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Any* _198831_node) {
	{
		auto &_match_expr{ (*(_198831_node)) };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1abba62be:;
			{
				_1a79e5761_checkAnonScope(_self_, (*(_198831_node)).cast_ptr<_1a79824de_ScopeTree>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1abba5b3c:;
			{
				_1a79e4056_checkVarDecl(_self_, (*(_198831_node)).cast_ptr<_1a7985338_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1abba5e8e:;
			{
				_1a79e45b7_checkTypeAliasDecl(_self_, (*(_198831_node)).cast_ptr<_1a7988eda_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1abba6005:;
			{
				_1a79e5d7c_checkExpr(_self_, (*(_198831_node)).cast_ptr<_1a7976802_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1abba606b:;
			{
				_1a79e67b7_checkConditional(_self_, (*(_198831_node)).cast_ptr<_1a798879d_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1abba63ce:;
			{
				_1a79e8632_checkIter(_self_, (*(_198831_node)).cast_ptr<_1a7985e82_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1abba6445:;
			{
				_1a79e93ad_checkCont(_self_, (*(_198831_node)).cast_ptr<_1a7987967_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1abba64ab:;
			{
				_1a79e9666_checkLabel(_self_, (*(_198831_node)).cast_ptr<_1a797eaa2_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1abba6522:;
			{
				_1a79e991e_pushGoto(_self_, (*(_198831_node)).cast_ptr<_1a797ee7b_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1abba6588:;
			{
				_1a63714d9_checkAssignSt(_self_, (*(_198831_node)).cast_ptr<_1a7980e6b_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1abba65ee:;
			{
				_1a6373750_checkMatch(_self_, (*(_198831_node)).cast_ptr<_1a7989caa_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1abba6665:;
			{
				_1a6373a08_checkFall(_self_, (*(_198831_node)).cast_ptr<_1a7980278_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1abba66cb:;
			{
				_1a6374443_checkBreak(_self_, (*(_198831_node)).cast_ptr<_1a798758d_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1abba6753:;
			{
				_1a63746eb_checkRet(_self_, (*(_198831_node)).cast_ptr<_1a7985712_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1abba67ca:;
			{
				_1a63749a4_checkUseExpr(_self_, (*(_198831_node)).cast_ptr<_1a79771c6_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1abba5d07:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1abba5ca2:;
	};
}



inline void _1a6374e5a_checkResult(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	_1a7981d7e_Stmt _20267_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _20267_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1abbb0592:;
			{
				jule::Ptr<_1a79771c6_UseExpr> _20298_ue = _20267_stmt._field_Data.unsafe_cast_ptr<_1a79771c6_UseExpr>();;
				jule::Ptr<_1a7a51503_Data> _20308_d = _1a7a7148a_evalExpr(_1a6842900_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), (*(_20298_ue))._field_Expr);;
				if ((_20308_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_20308_d, &__jule_any_type23)}));
				jule::Ptr<_1a7a48b27_retTypeChecker> _20358_rtc = jule::new_ptr<_1a7a48b27_retTypeChecker>(_1a7a48b27_retTypeChecker{._field_sc=_self_, ._field_types=_1a79ac508_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_20298_ue.alloc)._field_Expr))._field_Token, });;
				_1a7a49ad4_check(_20358_rtc.ptr(), &((*_20298_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1abbb1164:;
			{
				jule::Ptr<_1a7976802_Expr> _20428_expr = _20267_stmt._field_Data.unsafe_cast_ptr<_1a7976802_Expr>();;
				jule::Ptr<_1a7a51503_Data> _20438_d = _1a7a7148a_evalExpr(_1a6842900_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)), _20428_expr);;
				if ((_20438_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_20438_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1abbb6730:;
						{
							jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel> _20499_m = (*(_20438_d))._field_Model.unsafe_cast_ptr<_1a79a3cb3_BuiltinErrorCallExprModel>();;
							_1a79e5ac4_processErrorCall(_self_, &(_20499_m), (*(_20428_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_20438_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1abbb6c3b:;
						{
							return;;
						}
					}
					_match_end_1abbb6bd6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1abbb0828:;
			{
				_1a6374c5c_checkNode(_self_, &(_20267_stmt._field_Data));
			}
		}
		else {
			_case_begin_1abbb07b2:;
			{
				_1a6374c5c_checkNode(_self_, &(_20267_stmt._field_Data));
				return;;
			}
		}
		_match_end_1abbb075c:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a6375158_checkTree(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20717_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20717_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20717_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a7981d7e_Stmt _20798_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a6374c5c_checkNode(_self_, &(_20798_stmt._field_Data));
			if (_1a79e2032_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1abbbad50:;
	}
	_iter_end_1abbbad50:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a6374e5a_checkResult(_self_);
	};
}



inline void _1a63754bb_checkGoto(_1a79de45d_scopeChecker* _self_, jule::Ptr<_1a79dd46d_scopeGoto>* _209030_gt, jule::Ptr<_1a79dcdda_scopeLabel>* _209051_label) {
	jule::Ptr<_1a79de45d_scopeChecker> _20917_gtsc = (*((*(_209030_gt))))._field_scope;;
	while ((((*(_20917_gtsc))._field_childIndex - 1LL) > (*((*((*(_209051_label))))._field_scope))._field_childIndex)) {
		{
			_20917_gtsc=(*_20917_gtsc.alloc)._field_parent;
		}
	_iter_next_1abbbe54b:;
	}
	_iter_end_1abbbe54b:;;
	jule::I64 _20967_n = 0LL;;
	if (((*_20917_gtsc.alloc)._field_scope == (*(*((*(_209051_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_209030_gt))))._field_pos > (*((*(_209051_label))))._field_pos)) {
			return;;
		};
		_20967_n=(*((*(_209030_gt))))._field_pos;
	};
	jule::I64 _21097_i = ((*((*(_209051_label))))._field_pos - 1LL);;
	if ((_20967_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_209051_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abbc2b6a:;
			if (it != expr_end) {
				jule::I64 _21128_j = it - expr->begin();
				jule::Any _211211_stmt = *it;
				{
					if (_1a680b90d_stmtIsGotoScope(&(_211211_stmt), &((*_20917_gtsc.alloc)._field_scope))) {
						_20967_n=_21128_j;
						goto _iter_end_1abbc2b6a;
					};
				}
				_iter_next_1abbc2b6a:;
				++it;
				_21128_j++;
				goto _iter_begin_1abbc2b6a;
			}
			_iter_end_1abbc2b6a:;
		};
	};
	for (; (_21097_i >= _20967_n); (_21097_i)--) {
		{
			jule::Any _21228_stmt = (*(*((*((*(_209051_label))))._field_scope))._field_scope.alloc)._field_Stmts[_21097_i];;
			if (_1a680d6bd_stmtIsDef(&(_21228_stmt))) {
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_209030_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_209030_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1abbc21a8:;
	}
	_iter_end_1abbc21a8:;;
}



inline void _1a63756b9_checkGotos(_1a79de45d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbc33da:;
		if (it != expr_end) {
			jule::Ptr<_1a79dd46d_scopeGoto> _213115_gt = *it;
			{
				jule::Ptr<_1a79dcdda_scopeLabel> _21328_label = _1a79e38a2_findLabelAll(_self_, &((*((*((*(_213115_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_21328_label == nullptr)) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*(*(_213115_gt))._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_213115_gt))._field_gt))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1abbc33da;
				};
				(*((*_213115_gt.alloc)._field_st))._field_Label=(*(_21328_label))._field_label;
				(*(_21328_label))._field_used=true;
				_1a63754bb_checkGoto(_self_, &(_213115_gt), &(_21328_label));
			}
			_iter_next_1abbc33da:;
			++it;
			goto _iter_begin_1abbc33da;
		}
		_iter_end_1abbc33da:;
	};
}



inline void _1a63758b7_checkLabels(_1a79de45d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab249e5c:;
		if (it != expr_end) {
			jule::Ptr<_1a79dcdda_scopeLabel> _214410_l = *it;
			{
				if ((!((*(_214410_l))._field_used))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*_214410_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_214410_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ab249e5c:;
			++it;
			goto _iter_begin_1ab249e5c;
		}
		_iter_end_1ab249e5c:;
	};
}



inline void _1a6375ab5_checkVars(_1a79de45d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab24bce9:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _215210_v = *it;
			{
				if (((((!((*(_215210_v))._field_Used)) && (!((*_215210_v.alloc)._field_Constant))) && (!(_1a795e8ea_IsIgnoreIdent((*_215210_v.alloc)._field_Ident)))) && (!(_1a795ebb4_IsAnonIdent((*_215210_v.alloc)._field_Ident))))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*_215210_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_215210_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ab24bce9:;
			++it;
			goto _iter_begin_1ab24bce9;
		}
		_iter_end_1ab24bce9:;
	};
}



inline void _1a6375cb3_checkAliases(_1a79de45d_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab24e4a0:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81b0a_TypeAlias> _216010_a = *it;
			{
				if ((((!((*(_216010_a))._field_Used)) && (!(_1a795e8ea_IsIgnoreIdent((*_216010_a.alloc)._field_Ident)))) && (!(_1a795ebb4_IsAnonIdent((*_216010_a.alloc)._field_Ident))))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*_216010_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_216010_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1ab24e4a0:;
			++it;
			goto _iter_begin_1ab24e4a0;
		}
		_iter_end_1ab24e4a0:;
	};
}



inline void _1a6376126_check(jule::Ptr<_1a79de45d_scopeChecker> _self_, jule::Ptr<_1a79824de_ScopeTree>* _216827_tree, jule::Ptr<_1a680dba7_Scope>* _216850_s) {
	(*((*(_216850_s))))._field_Deferred=(*((*(_216827_tree))))._field_Deferred;
	(*((*(_216850_s))))._field_Unsafety=(*((*(_216827_tree))))._field_Unsafety;
	jule::I64 _21723_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_216827_tree));
	(*_self_.alloc)._field_scope=(*(_216850_s));
	_1a6375158_checkTree(_self_);
	if ((_21723_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1a6375ab5_checkVars(_self_);
		_1a6375cb3_checkAliases(_self_);
		if (_1a79e1a9d_isRoot(_self_)) {
			_1a63756b9_checkGotos(_self_);
			_1a63758b7_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a79de45d_scopeChecker> _1a63763ac_newChildChecker(jule::Ptr<_1a79de45d_scopeChecker> _self_) {
	jule::Ptr<_1a79de45d_scopeChecker> _21927_base = _1a680a984_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21927_base))._field_parent=_self_;
	(*_21927_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21927_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21927_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21927_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a79de45d_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a681133b_checkCdef(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab257233:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a79a8328_Fn>()))._field_Binded) {
					goto _match_end_1ab257464;
				};
				goto _case_begin_1ab2574b9;
			}
		}
		else {
			_case_begin_1ab2574b9:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab257464:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a68115e4_checkTypedef(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab25a18c:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7993357_Struct>()))._field_Binded) {
					goto _match_end_1ab25a3bd;
				};
				goto _case_begin_1ab25a423;
			}
		}
		else {
			_case_begin_1ab25a423:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab25a3bd:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a681189c_checkNamespace(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab25d0e6:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7993357_Struct>()))._field_Binded))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab25d3e3:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a79a8328_Fn>()))._field_Binded))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab25d459:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a685a682_Var>()))._field_Binded))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ab25d37c:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab25d327:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a795c013_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a683a453_pushErr((*(_self_))._field_s, _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab268de3:;
			{
				if ((_1a7a79d9a_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a79718da_Directive> _909_typedef = jule::new_ptr<_1a79718da_Directive>(_1a79718da_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, });;
					(*((*(_909_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1a79718da_Directive>>::make({_909_typedef}));
				};
			}
		}
		_match_end_1ab268d7c:;
	};
}



inline void _1a6811b55_checkDeprecated(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _9936_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab26b08d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a7993357_Struct>()))._field_Binded) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab26b324:;
			{
				jule::Ptr<_1a79a8328_Fn> _1068_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a79a8328_Fn>();;
				if ((((*(_1068_f))._field_Binded || _1a79a8cb8_IsEntryPoint(_1068_f)) || _1a79a904e_IsInit(_1068_f))) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab26b38a:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a685a682_Var>()))._field_Binded) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1ab26b2ad:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab26b258:;
	};
	if (((*((*(_9936_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9936_d))))._field_Args.len() > 1LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a795c013_Token> _1253_arg = (*((*(_9936_d))))._field_Args[0LL];;
	if (((*(_1253_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a683a453_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1253_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a683a453_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9936_d))))._field_Args[0LL]))._field_Kind=(*_1253_arg.alloc)._field_Kind.slice(1LL, ((*_1253_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a6811e0d_checkTest(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _13926_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab272913:;
			{
				jule::Ptr<_1a79a8328_Fn> _1424_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a79a8328_Fn>();;
				if ((((!((*(_1424_f))._field_Binded)) && (!(_1a79a904e_IsInit(_1424_f)))) && (!(_1a79a8cb8_IsEntryPoint(_1424_f))))) {
					goto _match_end_1ab2773eb;
				};
				if (_1a79a8a32_IsMethod(_1424_f)) {
					_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*_1424_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ab2773eb;
				};
				goto _case_begin_1ab277451;
			}
		}
		else {
			_case_begin_1ab277451:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13926_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab2773eb:;
	};
	if (((*((*(_13926_d))))._field_Args.len() > 0LL)) {
		_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a68121b6_checkDirective(_1a6810e2e_directiveChecker* _self_, jule::Ptr<_1a79718da_Directive>* _16035_d) {
	{
		auto &_match_expr{ (*((*((*(_16035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1ab27c0c1:;
			{
				_1a681133b_checkCdef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1ab27c137:;
			{
				_1a68115e4_checkTypedef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1ab27c19d:;
			{
				_1a681189c_checkNamespace(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1ab27c214:;
			{
				_1a6811b55_checkDeprecated(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1ab27c27a:;
			{
				_1a6811e0d_checkTest(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1ab27c2e1:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ab27ba0a:;
			{
				_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1ab27c005:;
	};
}



inline void _1a68123b4_check(_1a6810e2e_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab281092:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _18115_d = *it;
			{
				_1a68121b6_checkDirective(_self_, &(_18115_d));
			}
			_iter_next_1ab281092:;
			++it;
			goto _iter_begin_1ab281092;
		}
		_iter_end_1ab281092:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a6810e2e_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a681795d_SelectPackage(_1a6817474_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a685a682_Var> _1a6817d59_FindVar(_1a6817474_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_18923_ident))))) {
		return nullptr;;
	};
	return _1a681495a_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a6818255_FindTypeAlias(_1a6817474_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_20129_ident))))) {
		return nullptr;;
	};
	return _1a6814dcd_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a7993357_Struct> _1a6818651_FindStruct(_1a6817474_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_21326_ident))))) {
		return nullptr;;
	};
	return _1a681530c_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1a79a8328_Fn> _1a6818a4c_FindFn(_1a6817474_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_22522_ident))))) {
		return nullptr;;
	};
	return _1a68157b3_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a6818d8d_FindTrait(_1a6817474_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_23625_ident))))) {
		return nullptr;;
	};
	return _1a6815b04_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a68191ce_FindEnum(_1a6817474_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_24724_ident))))) {
		return nullptr;;
	};
	return _1a6815e78_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a6819520_FindTypeEnum(_1a6817474_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1a68199b5_isLookupable(_self_, &(_25828_ident))))) {
		return nullptr;;
	};
	return _1a68162ec_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1a68199b5_isLookupable(_1a6817474_ImportInfo* _self_, jule::Str* _26725_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a6819d06_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a6819d06_existIdent(_self_, (*(_26725_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a6819d06_existIdent(_1a6817474_ImportInfo* _self_, jule::Str _28722_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2960a7:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_28810_sident = it;
			{
				if (((*((*(_28810_sident))))._field_Kind == _28722_ident)) {
					return true;;
				};
			}
			_iter_next_1ab2960a7:;
			++it;
			goto _iter_begin_1ab2960a7;
		}
		_iter_end_1ab2960a7:;
	};
	return false;;
}



inline jule::Bool _1a681a08c_isAccessibleViaSelection(_1a6817474_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a6819d06_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6817474_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a681a840_SelectPackage(_1a681a39a_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a685a682_Var> _1a681ac3b_FindVar(_1a681a39a_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded) {
	return _1a681495a_findVarInPackage(&((*(_self_))._field_Files), &(_31423_ident), _31435_binded);;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a681b137_FindTypeAlias(_1a681a39a_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	return _1a6814dcd_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32029_ident), _32041_binded);;
}



inline jule::Ptr<_1a7993357_Struct> _1a681b533_FindStruct(_1a681a39a_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	return _1a681530c_findStructInPackage(&((*(_self_))._field_Files), &(_32626_ident), _32638_binded);;
}



inline jule::Ptr<_1a79a8328_Fn> _1a681b92e_FindFn(_1a681a39a_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded) {
	return _1a68157b3_findFnInPackage(&((*(_self_))._field_Files), &(_33222_ident), _33234_binded);;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a681bc70_FindTrait(_1a681a39a_Package* _self_, jule::Str _33825_ident) {
	return _1a6815b04_findTraitInPackage(&((*(_self_))._field_Files), &(_33825_ident));;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a681c0b1_FindEnum(_1a681a39a_Package* _self_, jule::Str _34424_ident) {
	return _1a6815e78_findEnumInPackage(&((*(_self_))._field_Files), &(_34424_ident));;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a681c402_FindTypeEnum(_1a681a39a_Package* _self_, jule::Str _35028_ident) {
	return _1a68162ec_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35028_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a681a39a_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a79d3078_comptimeTypeInfo> _1a6837153_pushComptimeTypeInfo(_1a6836c13_commonSemaMeta* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _21441_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc7c65e:;
		if (it != expr_end) {
			jule::Ptr<_1a79d3078_comptimeTypeInfo> _21515_t2 = *it;
			{
				if ((((*((*(_21515_t2))._field_base))._field_BindIdent == (*((*(_21441_t))))._field_BindIdent) && _1a7a83106_Equal((*(_21515_t2))._field_base, (*(_21441_t))))) {
					return _21515_t2;;
				};
			}
			_iter_next_1abc7c65e:;
			++it;
			goto _iter_begin_1abc7c65e;
		}
		_iter_end_1abc7c65e:;
	};
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _2207_t1 = jule::new_ptr<_1a79d3078_comptimeTypeInfo>(_1a79d3078_comptimeTypeInfo{._field_base=(*(_21441_t))});;
	{ jule::Slice<jule::Ptr<_1a79d3078_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2207_t1); };
	return _2207_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6836c13_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a6837cad_SelectPackage(_1a6837818_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _24329_selector) {
	return _1a7a4b674_SelectPackage((*(_self_))._field_file.ptr(), _24329_selector);;
}



inline jule::Ptr<_1a685a682_Var> _1a68381a9_FindVar(_1a6837818_Sema* _self_, jule::Str _25323_ident, jule::Bool _25335_binded) {
	jule::Ptr<_1a685a682_Var> _2557_v = _1a681495a_findVarInPackage(&((*(_self_))._field_files), &(_25323_ident), _25335_binded);;
	if ((_2557_v != nullptr)) {
		return _2557_v;;
	};
	if ((!(_1a68348d1_IsPub(_25323_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc8161e:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _26615_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_26615_imp), &(_25323_ident))))) {
					goto _iter_next_1abc8161e;
				};
				_2557_v=_1a6817d59_FindVar(_26615_imp.ptr(), _25323_ident, _25335_binded);
				if (((_2557_v != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_2557_v.alloc)._field_Public, (*_2557_v.alloc)._field_Token))) {
					return _2557_v;;
				};
			}
			_iter_next_1abc8161e:;
			++it;
			goto _iter_begin_1abc8161e;
		}
		_iter_end_1abc8161e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a68385a5_FindTypeAlias(_1a6837818_Sema* _self_, jule::Str _28529_ident, jule::Bool _28541_binded) {
	jule::Ptr<_1a7a81b0a_TypeAlias> _2877_ta = _1a6814dcd_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28529_ident), _28541_binded);;
	if ((_2877_ta != nullptr)) {
		return _2877_ta;;
	};
	if ((!(_1a68348d1_IsPub(_28529_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc84523:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _29815_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_29815_imp), &(_28529_ident))))) {
					goto _iter_next_1abc84523;
				};
				_2877_ta=_1a6818255_FindTypeAlias(_29815_imp.ptr(), _28529_ident, _28541_binded);
				if (((_2877_ta != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_2877_ta.alloc)._field_Public, (*_2877_ta.alloc)._field_Token))) {
					return _2877_ta;;
				};
			}
			_iter_next_1abc84523:;
			++it;
			goto _iter_begin_1abc84523;
		}
		_iter_end_1abc84523:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7993357_Struct> _1a68389a1_FindStruct(_1a6837818_Sema* _self_, jule::Str _31726_ident, jule::Bool _31738_binded) {
	jule::Ptr<_1a7993357_Struct> _3197_s = _1a681530c_findStructInPackage(&((*(_self_))._field_files), &(_31726_ident), _31738_binded);;
	if ((_3197_s != nullptr)) {
		return _3197_s;;
	};
	if ((!(_1a68348d1_IsPub(_31726_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc87427:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _33015_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_33015_imp), &(_31726_ident))))) {
					goto _iter_next_1abc87427;
				};
				_3197_s=_1a6818651_FindStruct(_33015_imp.ptr(), _31726_ident, _31738_binded);
				if (((_3197_s != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_3197_s.alloc)._field_Public, (*_3197_s.alloc)._field_Token))) {
					return _3197_s;;
				};
			}
			_iter_next_1abc87427:;
			++it;
			goto _iter_begin_1abc87427;
		}
		_iter_end_1abc87427:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79a8328_Fn> _1a6838d9c_FindFn(_1a6837818_Sema* _self_, jule::Str _34822_ident, jule::Bool _34834_binded) {
	jule::Ptr<_1a79a8328_Fn> _3507_f = _1a68157b3_findFnInPackage(&((*(_self_))._field_files), &(_34822_ident), _34834_binded);;
	if ((_3507_f != nullptr)) {
		return _3507_f;;
	};
	if ((!(_1a68348d1_IsPub(_34822_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc8a32b:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _36115_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_36115_imp), &(_34822_ident))))) {
					goto _iter_next_1abc8a32b;
				};
				_3507_f=_1a6818a4c_FindFn(_36115_imp.ptr(), _34822_ident, _34834_binded);
				if (((_3507_f != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_3507_f.alloc)._field_Public, (*_3507_f.alloc)._field_Token))) {
					return _3507_f;;
				};
			}
			_iter_next_1abc8a32b:;
			++it;
			goto _iter_begin_1abc8a32b;
		}
		_iter_end_1abc8a32b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a68391dd_FindTrait(_1a6837818_Sema* _self_, jule::Str _38025_ident) {
	jule::Ptr<_1a79bb6d2_Trait> _3827_t = _1a6815b04_findTraitInPackage(&((*(_self_))._field_files), &(_38025_ident));;
	if ((_3827_t != nullptr)) {
		return _3827_t;;
	};
	if ((!(_1a68348d1_IsPub(_38025_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc8cedd:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _39315_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_39315_imp), &(_38025_ident))))) {
					goto _iter_next_1abc8cedd;
				};
				_3827_t=_1a6818d8d_FindTrait(_39315_imp.ptr(), _38025_ident);
				if (((_3827_t != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_3827_t.alloc)._field_Public, (*_3827_t.alloc)._field_Token))) {
					return _3827_t;;
				};
			}
			_iter_next_1abc8cedd:;
			++it;
			goto _iter_begin_1abc8cedd;
		}
		_iter_end_1abc8cedd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a683952e_FindEnum(_1a6837818_Sema* _self_, jule::Str _41224_ident) {
	jule::Ptr<_1a79bdddd_Enum> _4147_e = _1a6815e78_findEnumInPackage(&((*(_self_))._field_files), &(_41224_ident));;
	if ((_4147_e != nullptr)) {
		return _4147_e;;
	};
	if ((!(_1a68348d1_IsPub(_41224_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc90ba0:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _42515_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_42515_imp), &(_41224_ident))))) {
					goto _iter_next_1abc90ba0;
				};
				_4147_e=_1a68191ce_FindEnum(_42515_imp.ptr(), _41224_ident);
				if (((_4147_e != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_4147_e.alloc)._field_Public, (*_4147_e.alloc)._field_Token))) {
					return _4147_e;;
				};
			}
			_iter_next_1abc90ba0:;
			++it;
			goto _iter_begin_1abc90ba0;
		}
		_iter_end_1abc90ba0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a6839870_FindTypeEnum(_1a6837818_Sema* _self_, jule::Str _44428_ident) {
	jule::Ptr<_1a79c05e8_TypeEnum> _4467_e = _1a68162ec_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44428_ident));;
	if ((_4467_e != nullptr)) {
		return _4467_e;;
	};
	if ((!(_1a68348d1_IsPub(_44428_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc93862:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _45715_imp = *it;
			{
				if ((!(_1a68357d3_impIsLookupable(&(_45715_imp), &(_44428_ident))))) {
					goto _iter_next_1abc93862;
				};
				_4467_e=_1a6819520_FindTypeEnum(_45715_imp.ptr(), _44428_ident);
				if (((_4467_e != nullptr) && _1a683abb2_isAccessibleDefine(_self_, (*_4467_e.alloc)._field_Public, (*_4467_e.alloc)._field_Token))) {
					return _4467_e;;
				};
			}
			_iter_next_1abc93862:;
			++it;
			goto _iter_begin_1abc93862;
		}
		_iter_end_1abc93862:;
	};
	return nullptr;;
}



inline jule::Bool _1a6839c7c_isFlag(_1a6837818_Sema* _self_, jule::I64 _47318_flags) {
	return (((*(_self_))._field_flags & _47318_flags) == _47318_flags);;
}



inline void _1a683a035_setCurrentFile(_1a6837818_Sema* _self_, jule::Ptr<_1a7a4b18a_SymbolTable> _47534_f) {
	(*(_self_))._field_file=_47534_f;
}



inline void _1a683a453_pushErr(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token> _47723_token, jule::Str _47738_fmt, jule::Slice<jule::Any> _47751_args) {
	{ jule::Slice<_1d974c80a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a683545e_compilerErr(&(_47723_token), true, _47738_fmt, _47751_args)); };
}



inline void _1a683a7b6_pushSuggestion(_1a6837818_Sema* _self_, jule::Str _48230_fmt, jule::Slice<jule::Any> _48243_args) {
	{
		_1a6836a15_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48230_fmt, _48243_args);
	};
}



inline jule::Bool _1a683abb2_isAccessibleDefine(_1a6837818_Sema* _self_, jule::Bool _48730_public, jule::Ptr<_1a795c013_Token> _48744_token) {
	return ((_48730_public || ((*(_48744_token))._field_File == nullptr)) || (_1a7962e4d_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1a7962e4d_Dir((*_48744_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1a683b168_isDuplicatedIdent(_1a6837818_Sema* _self_, jule::Uintptr _49429_itself, jule::Str* _49447_ident, jule::Bool _49459_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc9a061:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> *_49510_f = it;
			{
				if (_1a7a4e6aa_isDuplicatedIdent((*(_49510_f)).ptr(), _49429_itself, _49447_ident, _49459_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49510_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc9b062:;
					if (it != expr_end) {
						jule::Ptr<_1a6817474_ImportInfo> *_50011_imp = it;
						{
							{
								auto expr = &((*((*(_50011_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abc9b958:;
								if (it != expr_end) {
									jule::Ptr<_1a795c013_Token> *_50112_selected = it;
									{
										if (((*((*(_50112_selected))))._field_Kind == (*(_49447_ident)))) {
											return true;;
										};
									}
									_iter_next_1abc9b958:;
									++it;
									goto _iter_begin_1abc9b958;
								}
								_iter_end_1abc9b958:;
							};
						}
						_iter_next_1abc9b062:;
						++it;
						goto _iter_begin_1abc9b062;
					}
					_iter_end_1abc9b062:;
				};
			}
			_iter_next_1abc9a061:;
			++it;
			goto _iter_begin_1abc9a061;
		}
		_iter_end_1abc9a061:;
	};
	return false;;
}



inline void _1a683b4cb_checkDirectives(jule::Ptr<_1a6837818_Sema> _self_, jule::Slice<jule::Ptr<_1a79718da_Directive>>* _51137_d, jule::Any _51163_o) {
	_1a6810e2e_directiveChecker _5127_dc = _1a6810e2e_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a79718da_Directive>>>)(_51137_d)), ._field_o=_51163_o};;
	_1a68123b4_check(&_5127_dc);
}



inline jule::Bool _1a683b982_checkGenericQuantity(_1a6837818_Sema* _self_, jule::I64 _52036_required, jule::I64 _52051_given, jule::Ptr<_1a795c013_Token> _52063_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52036_required == 0LL) && (_52051_given > 0LL))) {
			_case_begin_1abc9de44:;
			{
				_1a683a453_pushErr(_self_, _52063_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52036_required > 0LL) && (_52051_given == 0LL))) {
			_case_begin_1abc9debb:;
			{
				_1a683a453_pushErr(_self_, _52063_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52036_required < _52051_given)) {
			_case_begin_1abc9e043:;
			{
				_1a683a453_pushErr(_self_, _52063_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52036_required > _52051_given)) {
			_case_begin_1abc9e0ba:;
			{
				_1a683a453_pushErr(_self_, _52063_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abc9dd78:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1abc9dcac:;
	};
}



inline jule::Bool _1a683bd7d_isDuplicatedImportSelection(_1a6837818_Sema* _self_, jule::Uintptr _53939_itself, jule::Str* _53957_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abca1cb0:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> *_54010_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54010_imp))) == _53939_itself)) {
					goto _iter_end_1abca1cb0;
				};
				if (_1a6819d06_existIdent((*(_54010_imp)).ptr(), (*(_53957_ident)))) {
					return true;;
				};
			}
			_iter_next_1abca1cb0:;
			++it;
			goto _iter_begin_1abca1cb0;
		}
		_iter_end_1abca1cb0:;
	};
	return false;;
}



inline jule::Any _1a683c279_getImportDef(_1a6837818_Sema* _self_, jule::Str* _55225_ident, jule::Ptr<_1a6817474_ImportInfo>* _55242_imp) {
	if ((_1a7b697d6_findPackageBuiltinDef(&((*((*(_55242_imp))))._field_LinkPath), _55225_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55242_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abca3e16:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _55615_f = *it;
			{
				;
				jule::Any _5598_def = _1a7a4e204_defByIdent(_55615_f.ptr(), _55225_ident, false);;
				if ((_5598_def != nullptr)) {
					return _5598_def;;
				};
			}
			_iter_next_1abca3e16:;
			++it;
			goto _iter_begin_1abca3e16;
		}
		_iter_end_1abca3e16:;
	};
	return nullptr;;
}



inline jule::Bool _1abcaa46c_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a685a682_Var>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1abcae75c_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a7a81b0a_TypeAlias>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1abcb39d6_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a7993357_Struct>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1abcb804b_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79bb6d2_Trait>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1abcbc2e7_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79bdddd_Enum>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1abcc1593_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79c05e8_TypeEnum>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1abcc581c_checkImportSelection(_1a6837818_Sema* _self_, jule::Ptr<_1a795c013_Token>* _56740_ident, jule::Ptr<_1a79a8328_Fn>* _56756_s) {
	if ((!(_1a683abb2_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a681683b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a683a453_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a683c9b6_checkImportSelectedSelections(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _58150_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58150_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abca5a50:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> _58310_ident = *it;
			{
				if ((*(_58310_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1abca5a50;
				};
				if (_1a683bd7d_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58150_imp))), &((*(_58310_ident))._field_Kind))) {
					_1a683a453_pushErr(_self_, _58310_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58310_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1abca5a50;
				};
				jule::Any _5958_def = _1a683c279_getImportDef(_self_, &((*_58310_ident.alloc)._field_Kind), _58150_imp);;
				{
					auto &_match_expr{ _5958_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1abca6b1c:;
						{
							goto _iter_next_1abca5a50;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1abca8536:;
						{
							jule::Ptr<_1a685a682_Var> _6019_v = _5958_def.unsafe_cast_ptr<_1a685a682_Var>();;
							__jule_func_result=(_1abcaa46c_checkImportSelection(_self_, &(_58310_ident), &(_6019_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1abca859c:;
						{
							jule::Ptr<_1a7a81b0a_TypeAlias> _6049_ta = _5958_def.unsafe_cast_ptr<_1a7a81b0a_TypeAlias>();;
							__jule_func_result=(_1abcae75c_checkImportSelection(_self_, &(_58310_ident), &(_6049_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1abca8613:;
						{
							jule::Ptr<_1a7993357_Struct> _6079_s = _5958_def.unsafe_cast_ptr<_1a7993357_Struct>();;
							__jule_func_result=(_1abcb39d6_checkImportSelection(_self_, &(_58310_ident), &(_6079_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1abca8679:;
						{
							jule::Ptr<_1a79bb6d2_Trait> _6109_t = _5958_def.unsafe_cast_ptr<_1a79bb6d2_Trait>();;
							__jule_func_result=(_1abcb804b_checkImportSelection(_self_, &(_58310_ident), &(_6109_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1abca86e0:;
						{
							jule::Ptr<_1a79bdddd_Enum> _6139_e = _5958_def.unsafe_cast_ptr<_1a79bdddd_Enum>();;
							__jule_func_result=(_1abcbc2e7_checkImportSelection(_self_, &(_58310_ident), &(_6139_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1abca9306:;
						{
							jule::Ptr<_1a79c05e8_TypeEnum> _6169_e = _5958_def.unsafe_cast_ptr<_1a79c05e8_TypeEnum>();;
							__jule_func_result=(_1abcc1593_checkImportSelection(_self_, &(_58310_ident), &(_6169_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type63) {
						_case_begin_1abca936c:;
						{
							jule::Ptr<_1a79a8328_Fn> _6199_f = _5958_def.unsafe_cast_ptr<_1a79a8328_Fn>();;
							__jule_func_result=(_1abcc581c_checkImportSelection(_self_, &(_58310_ident), &(_6199_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1abca8426:;
						{
							_1a683a453_pushErr(_self_, _58310_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58310_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1abca5a50;
						}
					}
					_match_end_1abca8091:;
				};
			}
			_iter_next_1abca5a50:;
			++it;
			goto _iter_begin_1abca5a50;
		}
		_iter_end_1abca5a50:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1abcca0d5_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a685a682_Var>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abccbd40:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcaa46c_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abccbd40:;
			++it;
			goto _iter_begin_1abccbd40;
		}
		_iter_end_1abccbd40:;
	};
	return _6317_ok;;
}

inline jule::Bool _1abccac73_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcce53a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81b0a_TypeAlias> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcae75c_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abcce53a:;
			++it;
			goto _iter_begin_1abcce53a;
		}
		_iter_end_1abcce53a:;
	};
	return _6317_ok;;
}

inline jule::Bool _1abccde63_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a7993357_Struct>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd1c24:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcb39d6_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abcd1c24:;
			++it;
			goto _iter_begin_1abcd1c24;
		}
		_iter_end_1abcd1c24:;
	};
	return _6317_ok;;
}

inline jule::Bool _1abcd0272_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbc8d4c:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcc581c_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abbc8d4c:;
			++it;
			goto _iter_begin_1abbc8d4c;
		}
		_iter_end_1abbc8d4c:;
	};
	return _6317_ok;;
}

inline jule::Bool _1abbc9336_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79bb6d2_Trait>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbcb79a:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcb804b_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abbcb79a:;
			++it;
			goto _iter_begin_1abbcb79a;
		}
		_iter_end_1abbcb79a:;
	};
	return _6317_ok;;
}

inline jule::Bool _1abbcabb7_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79bdddd_Enum>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbcde40:;
		if (it != expr_end) {
			jule::Ptr<_1a79bdddd_Enum> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcbc2e7_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abbcde40:;
			++it;
			goto _iter_begin_1abbcde40;
		}
		_iter_end_1abbcde40:;
	};
	return _6317_ok;;
}

inline jule::Bool _1abbcd36d_checkImportsAllSelectionsFromCollection(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79c05e8_TypeEnum>>* _63059_s, jule::Ptr<_1a795c013_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd1706:;
		if (it != expr_end) {
			jule::Ptr<_1a79c05e8_TypeEnum> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1abcc1593_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1abbd1706:;
			++it;
			goto _iter_begin_1abbd1706;
		}
		_iter_end_1abbd1706:;
	};
	return _6317_ok;;
}



inline jule::Bool _1a683d203_checkImportAllSelections(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _64041_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64041_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abca5dd5:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> *_64210_file = it;
			{
				__jule_func_result=(_1abcca0d5_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64210_file))))._field_Vars), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1abccac73_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_TypeAliases), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1abccde63_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Structs), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1abcd0272_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Funcs), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1abbc9336_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Traits), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1abbcabb7_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Enums), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1abbcd36d_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_TypeEnums), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1abca5dd5:;
			++it;
			goto _iter_begin_1abca5dd5;
		}
		_iter_end_1abca5dd5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a683d544_checkImportSelections(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _65442_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65442_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a683c9b6_checkImportSelectedSelections(_self_, _65442_imp);
		return __jule_func_result;;
	} else if ((*((*(_65442_imp))))._field_ImportAll) {
		__jule_func_result = _1a683d203_checkImportAllSelections(_self_, _65442_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a683d885_isUseAliasDuplication(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _66338_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd40ee:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _66415_imp2 = *it;
			{
				if ((_66415_imp2 == (*(_66338_imp)))) {
					goto _iter_end_1abbd40ee;
				};
				if (((*(_66415_imp2))._field_Alias == (*((*(_66338_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66415_imp2.alloc)._field_Ident == (*_66415_imp2.alloc)._field_LinkPath) && ((*_66415_imp2.alloc)._field_Ident == (*((*(_66338_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1abbd40ee:;
			++it;
			goto _iter_begin_1abbd40ee;
		}
		_iter_end_1abbd40ee:;
	};
	return false;;
}



inline jule::Bool _1a683dbc6_checkImport(_1a6837818_Sema* _self_, jule::Ptr<_1a6817474_ImportInfo>* _67932_imp) {
	if (((*((*(_67932_imp))))._field_Binded || ((*((*((*(_67932_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67932_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67932_imp))))._field_ImportAll || !((*((*(_67932_imp))))._field_Alias).empty()) || ((*((*(_67932_imp))))._field_Selected.len() > 0LL))) {
			_1a683a453_pushErr(_self_, (*((*(_67932_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67932_imp))))._field_Alias.len() != 0LL)) {
		if (_1a795e8ea_IsIgnoreIdent((*((*(_67932_imp))))._field_Alias)) {
			_1a683a453_pushErr(_self_, (*((*(_67932_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1a683d885_isUseAliasDuplication(_self_, _67932_imp)) {
			_1a683a453_pushErr(_self_, (*((*(_67932_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67932_imp))))._field_Alias, &__jule_any_type4)}));
			_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67932_imp))))._field_Duplicate))) {
		jule::Ptr<_1a6837818_Sema> _7028_sema = jule::new_ptr<_1a6837818_Sema>(_1a6837818_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a68570a7_check(_7028_sema, &((*(*((*(_67932_imp))))._field_Package.alloc)._field_Files));
		if (((*_7028_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7028_sema.alloc)._field_errors);;
			(*_7028_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1a683d544_checkImportSelections(_self_, _67932_imp);;
}



inline void _1a683ddc4_checkImports(_1a6837818_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbdd625:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _71715_file = *it;
			{
				_1a683a035_setCurrentFile(_self_, _71715_file);
				{
					auto expr = &((*(_71715_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abbde2d5:;
					if (it != expr_end) {
						jule::Ptr<_1a6817474_ImportInfo> _71916_imp = *it;
						{
							jule::Bool _7205_ok = _1a683dbc6_checkImport(_self_, &(_71916_imp));;
							if ((!(_7205_ok))) {
								return;;
							};
						}
						_iter_next_1abbde2d5:;
						++it;
						goto _iter_begin_1abbde2d5;
					}
					_iter_end_1abbde2d5:;
				};
			}
			_iter_next_1abbdd625:;
			++it;
			goto _iter_begin_1abbdd625;
		}
		_iter_end_1abbdd625:;
	};
}



inline void _1a683e0c2_implFileImpls(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbde747:;
		if (it != expr_end) {
			jule::Ptr<_1a6808751_Impl> _73015_imp = *it;
			{
				_1a684d664_implImpl(_self_, &(_73015_imp));
			}
			_iter_next_1abbde747:;
			++it;
			goto _iter_begin_1abbde747;
		}
		_iter_end_1abbde747:;
	};
}



inline void _1a683e2c0_implImpls(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe111c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _73615_file = *it;
			{
				_1a683a035_setCurrentFile(_self_.ptr(), _73615_file);
				_1a683e0c2_implFileImpls(_self_);
			}
			_iter_next_1abbe111c:;
			++it;
			goto _iter_begin_1abbe111c;
		}
		_iter_end_1abbe111c:;
	};
}



inline void _1a683e4bd_checkEnums(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe21b7:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _74315_file = *it;
			{
				_1a683a035_setCurrentFile(_self_.ptr(), _74315_file);
				{
					
					if ((!(_1a6849aa0_checkEnumDecls(_self_)))) {
						_case_begin_1abbe2805:;
					}
					else if ((!(_1a6849d36_checkTypeEnumDecls(_self_)))) {
						_case_begin_1abbe2dbb:;
					}
					_match_end_1abbe2d00:;
				};
			}
			_iter_next_1abbe21b7:;
			++it;
			goto _iter_begin_1abbe21b7;
		}
		_iter_end_1abbe21b7:;
	};
}



inline void _1a683e6bb_checkFileInherits(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe3c24:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _75315_t = *it;
			{
				jule::Bool _7544_ok = _1a684b6ea__checkTraitDeclInherits(_self_, &(_75315_t));;
				if ((!(_7544_ok))) {
					return;;
				};
			}
			_iter_next_1abbe3c24:;
			++it;
			goto _iter_begin_1abbe3c24;
		}
		_iter_end_1abbe3c24:;
	};
}



inline void _1a683e8b9_checkInherits(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe5066:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _76215_file = *it;
			{
				_1a683a035_setCurrentFile(_self_.ptr(), _76215_file);
				_1a683e6bb_checkFileInherits(_self_);
			}
			_iter_next_1abbe5066:;
			++it;
			goto _iter_begin_1abbe5066;
		}
		_iter_end_1abbe5066:;
	};
}



inline _1a7a947aa_typeChecker _1a683ed70_typeChecker(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _76832_l, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _76847_generics, jule::Ptr<_1a7a937ba_referencer> _7697_referencer) {
	_1a7a947aa_typeChecker _7707_tc = _1a7a947aa_typeChecker{._field_s=_self_, ._field_rootLookup=_76832_l, ._field_lookup=_76832_l, ._field_referencer=_7697_referencer, ._field_useGenerics=_76847_generics, };;
	{
		auto &_match_expr{ _76832_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
			_case_begin_1abbe6e03:;
			{
				jule::Ptr<_1a79de45d_scopeChecker> _7798_hard = _1a79e2a8d_getHardRoot(_76832_l.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
				_7707_tc._field_refers=(*((*(_7798_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1abbe6870:;
	};
	if (((_7697_referencer != nullptr) && ((*_7697_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7697_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1abbe8795:;
				{
					_7707_tc._field_ownerAlias=(*(_7697_referencer))._field_owner.unsafe_cast_ptr<_1a7a81b0a_TypeAlias>();
				}
			}
			_match_end_1abbe8740:;
		};
	};
	return _7707_tc;;
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a68403d1_buildTypeWithRefers(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _79541_t, jule::Trait _79564_l, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _7967_generics, jule::Ptr<_1a7a937ba_referencer> _79635_referencer) {
	return ({ auto _wrap_copy = _1a683ed70_typeChecker(_self_, _79564_l, _7967_generics, _79635_referencer); _1a7a9be55_checkDecl(&_wrap_copy, _79541_t); });;
}



inline jule::Bool _1a6840942_checkTypeWithRefers(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a89abe_TypeSymbol>* _80241_t, jule::Trait _80261_l, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _8037_generics, jule::Ptr<_1a7a937ba_referencer> _80335_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a7a89e43_checked((*(_80241_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80241_t))))._field_Kind=_1a68403d1_buildTypeWithRefers(_self_, &((*((*(_80241_t))))._field_Decl), _80261_l, _8037_generics, _80335_referencer);
	__jule_func_result = _1a7a89e43_checked((*(_80241_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a68063ec_constraintChecker> _1a6840bc8_constraintChecker(jule::Ptr<_1a6837818_Sema> _self_) {
	return jule::new_ptr<_1a68063ec_constraintChecker>(_1a68063ec_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a68410c4_checkType(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a89abe_TypeSymbol>* _81731_t, jule::Trait _81751_l) {
	return _1a6840942_checkTypeWithRefers(_self_, _81731_t, _81751_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a684157a_buildTypeWithGenerics(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _82343_t, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _8247_generics, jule::Ptr<_1a79ae4d8_ReferenceStack> _82435_refers) {
	jule::Ptr<_1a7a947aa_typeChecker> _8257_tc = jule::new_ptr<_1a7a947aa_typeChecker>(_1a7a947aa_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_refers=_82435_refers, ._field_useGenerics=_8247_generics, });;
	return _1a7a9be55_checkDecl(_8257_tc.ptr(), _82343_t);;
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a6841c0c_selectType(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _84132_t) {
	jule::Ptr<_1a7a947aa_typeChecker> _8427_tc = jule::new_ptr<_1a7a947aa_typeChecker>(_1a7a947aa_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_selection=true, });;
	return _1a7a9be55_checkDecl(_8427_tc.ptr(), _84132_t);;
}



inline jule::Ptr<_1a7a5322a_Eval> _1a68421b3_evalpd(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _85327_l, jule::Ptr<_1a7a828ec_TypeKind> _85342_p, jule::Ptr<_1a685a682_Var> _85360_owner) {
	jule::Ptr<_1a7a5322a_Eval> _8547_e = jule::new_ptr<_1a7a5322a_Eval>(_1a7a5322a_Eval{._field_s=_self_, ._field_lookup=_85327_l, ._field_owner=_85360_owner, });;
	{
		auto &_match_expr{ _85327_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
			_case_begin_1abc02aac:;
			{
				(*(_8547_e))._field_unsafety=_1a79e1817_isUnsafe(_85327_l.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));
			}
		}
		_match_end_1abc0286a:;
	};
	(*_8547_e.alloc)._field_prefix=_85342_p;
	return _8547_e;;
}



inline jule::Ptr<_1a7a5322a_Eval> _1a68425ae_evalp(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _86826_l, jule::Ptr<_1a7a828ec_TypeKind> _86841_p) {
	return _1a68421b3_evalpd(_self_, _86826_l, _86841_p, nullptr);;
}



inline jule::Ptr<_1a7a5322a_Eval> _1a6842900_eval(jule::Ptr<_1a6837818_Sema> _self_, jule::Trait _87325_l) {
	return _1a68425ae_evalp(_self_, _87325_l, nullptr);;
}



inline jule::Bool _1a6842e61_checkAssignType(jule::Ptr<_1a6837818_Sema> _self_, jule::Bool _87732_destIsRef, jule::Ptr<_1a7a828ec_TypeKind>* _87754_dest, jule::Ptr<_1a7a51503_Data>* _8788_d, jule::Ptr<_1a795c013_Token> _87822_errorToken) {
	if ((*((*(_8788_d))))._field_Decl) {
		_1a683a453_pushErr(_self_.ptr(), _87822_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87732_destIsRef) {
		if ((!(_1a7a83106_Equal((*(_87754_dest)), (*((*(_8788_d))))._field_Kind)))) {
			_1a683a453_pushErr(_self_, _87822_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_87754_dest)).ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_8788_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a7a39e6a_assignTypeChecker> _8898_atc = jule::new_ptr<_1a7a39e6a_assignTypeChecker>(_1a7a39e6a_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87754_dest)), ._field_d=(*(_8788_d)), ._field_errorToken=_87822_errorToken});;
		jule::Bool _8954_ok = _1a7a3ae38_check(_8898_atc.ptr());;
		if ((!(_8954_ok))) {
			return false;;
		};
	};
	if (((!(_1a7a51e0a_IsConst((*(_8788_d)).ptr()))) || (_1a7a8504d_Prim((*(_87754_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9057_kind = (*(_1a7a8504d_Prim((*(_87754_dest)).ptr())))._field_Kind;;
	{
		
		if (_1bd82b1c9_IsSigInt(_9057_kind)) {
			_case_begin_1abc0a3de:;
			{
				_1bd8302ee_SetI64((*((*(_8788_d))))._field_Constant.ptr(), _1bd82ea29_AsI64((*((*(_8788_d))))._field_Constant));
			}
		}
		else if (_1bd82b4d7_IsUnsigInt(_9057_kind)) {
			_case_begin_1abc0a488:;
			{
				_1bd8305a7_SetU64((*((*(_8788_d))))._field_Constant.ptr(), _1bd82ecb0_AsU64((*((*(_8788_d))))._field_Constant));
			}
		}
		else if (_1bd82bae2_IsFloat(_9057_kind)) {
			_case_begin_1abc0a4ee:;
			{
				_1bd830dc1_SetF64((*((*(_8788_d))))._field_Constant.ptr(), _1bd830046_AsF64((*((*(_8788_d))))._field_Constant));
			}
		}
		_match_end_1abc0a323:;
	};
	return true;;
}



inline jule::Bool _1a6843417__checkTypeCompatibility(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _91945_dest, jule::Ptr<_1a7a828ec_TypeKind>* _91967_src, jule::Ptr<_1a795c013_Token> _9207_errorToken) {
	if (((*(_91967_src)) == nullptr)) {
		return false;;
	};
	if ((_1a7a86d74_Tup((*(_91967_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a7a381bb_typeCompatibilityChecker _9287_tcc = _1a7a381bb_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91945_dest)), ._field_src=(*(_91967_src)), ._field_errorToken=_9207_errorToken};;
	return _1a7a39882_check(&_9287_tcc);;
}



inline jule::Bool _1a68438bd_checkTypeCompatibility(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _93744_dest, jule::Ptr<_1a7a828ec_TypeKind>* _9388_src, jule::Ptr<_1a795c013_Token>* _93829_errorToken) {
	if (_1a6843417__checkTypeCompatibility(_self_, _93744_dest, _9388_src, (*(_93829_errorToken)))) {
		return true;;
	};
	_1a683a453_pushErr(_self_, (*(_93829_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_93744_dest)).ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_9388_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1a6843cdb_pushCompatiblityError(_1a6837818_Sema* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _94642_dest, jule::Ptr<_1a7a51503_Data>* _94664_src, jule::Ptr<_1a795c013_Token>* _9478_errorToken) {
	if ((*((*(_94664_src))))._field_untyped) {
		{
			
			if (_1bd831355_IsI64((*((*(_94664_src))))._field_Constant.ptr())) {
				_case_begin_1abc12935:;
				{
					_1a683a453_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1bd8315db_IsU64((*((*(_94664_src))))._field_Constant.ptr())) {
				_case_begin_1abc129ce:;
				{
					_1a683a453_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1bd831d8e_IsF64((*((*(_94664_src))))._field_Constant.ptr())) {
				_case_begin_1abc12a45:;
				{
					_1a683a453_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1abc12814:;
		};
	};
	_1a683a453_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_94664_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a6844292_checkTypeCompatibility1(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _96445_dest, jule::Ptr<_1a7a51503_Data>* _96467_src, jule::Ptr<_1a795c013_Token>* _9658_errorToken) {
	if (_1a6843417__checkTypeCompatibility(_self_, _96445_dest, &((*((*(_96467_src))))._field_Kind), (*(_9658_errorToken)))) {
		return true;;
	};
	_1a6843cdb_pushCompatiblityError(_self_, _96445_dest, _96467_src, _9658_errorToken);
	return false;;
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a6844748_buildNonGenericTypeKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79724bd_TypeDecl>* _97945_ast, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _9808_generics, jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>* _98044_ignored) {
	jule::Ptr<_1a7a947aa_typeChecker> _9817_tc = jule::new_ptr<_1a7a947aa_typeChecker>(_1a7a947aa_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_ignoreGenerics=(*(_9808_generics)), ._field_ignoredGenerics=_98044_ignored, });;
	return _1a7a9be55_checkDecl(_9817_tc.ptr(), _97945_ast);;
}



inline jule::Bool _1a6844b44_buildFnNonGenericTypeKinds(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _99148_f, jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>* _99164_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _99311_generics = nullptr;;
	if (_1a79a8a32_IsMethod((*((*(_99148_f))))._field_Decl.ptr())) {
		_99311_generics=jule::append((*(*((*(_99148_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99148_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99311_generics=(*((*((*(_99148_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99148_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1bcb3:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> _100015_p = *it;
			{
				if ((!(_1a79a6e70_IsSelf((*(_100015_p))._field_Decl.ptr())))) {
					(*_100015_p.alloc)._field_Kind=_1a6844748_buildNonGenericTypeKind(_self_, &((*((*(*(_100015_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(_99311_generics), _99164_ignored);
					__jule_func_result=(__jule_func_result && ((*_100015_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1abc1bcb3:;
			++it;
			goto _iter_begin_1abc1bcb3;
		}
		_iter_end_1abc1bcb3:;
	};
	if ((!(_1a79a879b_IsVoid((*((*(_99148_f))))._field_Decl.ptr())))) {
		(*((*(_99148_f))))._field_Result=_1a6844748_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99148_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99311_generics), _99164_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99148_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a79ab309_FnIns> _1a6844e85_getTraitCheckFnKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _101341_f) {
	if (((*((*(_101341_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101341_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a79ab309_FnIns> _10177_ins = _1a79a9802_instanceForce((*(_101341_f)));;
	jule::Ptr<_1a7a947aa_typeChecker> _10197_tc = jule::new_ptr<_1a7a947aa_typeChecker>(_1a7a947aa_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), });;
	{
		auto expr = &((*(_10177_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc22dda:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> _102415_p = *it;
			{
				if ((!(_1a79a6e70_IsSelf((*(_102415_p))._field_Decl.ptr())))) {
					(*_102415_p.alloc)._field_Kind=_1a7a9be55_checkDecl(_10197_tc.ptr(), &((*((*(*(_102415_p))._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1abc22dda:;
			++it;
			goto _iter_begin_1abc22dda;
		}
		_iter_end_1abc22dda:;
	};
	if ((!(_1a79a879b_IsVoid((*(_101341_f)).ptr())))) {
		(*_10177_ins.alloc)._field_Result=_1a7a9be55_checkDecl(_10197_tc, &((*((*((*((*(_101341_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _10177_ins;;
}



inline jule::Bool _1a684543b_checkConstraintsFn(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _103640_f, jule::Ptr<_1a795c013_Token>* _103656_et, jule::Ptr<_1a79ab309_FnIns> _103672_exist) {
	jule::Ptr<_1a68063ec_constraintChecker> _10377_cc = _1a6840bc8_constraintChecker(_self_);;
	(*(_10377_cc))._field_et=(*(_103656_et));
	(*_10377_cc.alloc)._field_fi=(*(_103640_f));
	if ((_103672_exist != nullptr)) {
		{
			auto expr = &((*_103672_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc273ea:;
			if (it != expr_end) {
				jule::I64 _10419_i = it - expr->begin();
				jule::Ptr<_1a7a81016_InsGeneric> _104116_g = *it;
				{
					(*((*((*(_103640_f))))._field_Generics[_10419_i]))._field_Constraint=(*(_104116_g))._field_Constraint;
				}
				_iter_next_1abc273ea:;
				++it;
				_10419_i++;
				goto _iter_begin_1abc273ea;
			}
			_iter_end_1abc273ea:;
		};
	} else {
		(*_10377_cc.alloc)._field_uniq=true;
	};
	return _1a6807332_check(_10377_cc);;
}



inline jule::Bool _1a68458e2_checkConstraintsStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _105044_s, jule::Ptr<_1a795c013_Token>* _105064_et, jule::Ptr<_1a79960d5_StructIns> _105080_exist) {
	jule::Ptr<_1a68063ec_constraintChecker> _10517_cc = _1a6840bc8_constraintChecker(_self_);;
	(*(_10517_cc))._field_et=(*(_105064_et));
	(*_10517_cc.alloc)._field_si=(*(_105044_s));
	if ((_105080_exist != nullptr)) {
		{
			auto expr = &((*_105080_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc2a585:;
			if (it != expr_end) {
				jule::I64 _10559_i = it - expr->begin();
				jule::Ptr<_1a7a81016_InsGeneric> _105516_g = *it;
				{
					(*((*((*(_105044_s))))._field_Generics[_10559_i]))._field_Constraint=(*(_105516_g))._field_Constraint;
				}
				_iter_next_1abc2a585:;
				++it;
				_10559_i++;
				goto _iter_begin_1abc2a585;
			}
			_iter_end_1abc2a585:;
		};
	} else {
		(*_10517_cc.alloc)._field_uniq=true;
	};
	return _1a6807332_check(_10517_cc);;
}



inline jule::Bool _1a6845cdd_fnEnvironment(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _106735_f, jule::Fn<jule::Bool,jule::Ptr<_1a6837818_Sema>*,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>*> _106746_algo) {
	jule::Ptr<_1a6837818_Sema> _10687_sema = (*((*((*(_106735_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a7a4b18a_SymbolTable> _10697_old = (*((*(*((*(_106735_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a683a035_setCurrentFile((*((*((*(_106735_f))))._field_Decl))._field_sema, _10697_old);
	});;
	jule::Ptr<_1a7a4b18a_SymbolTable> _10717_file = _1a683655e_findFile(&((*(*((*((*(_106735_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_106735_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_10717_file != nullptr)) {
		_1a683a035_setCurrentFile((*((*((*(_106735_f))))._field_Decl))._field_sema, _10717_file);
	};
	jule::I64 _10767_size = (*((*(_106735_f))))._field_Generics.len();;
	if ((((*((*(_106735_f))))._field_Decl != nullptr) && ((*(*((*(_106735_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_10767_size+=(*(*((*((*(_106735_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _10817_generics = jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>::alloc(0LL, _10767_size);;
	_1a68361da_appendGenericTypeAliases(&(_10817_generics), _106735_f);
	jule::Bool _10843_ok = _106746_algo(&(_10687_sema), &(_10817_generics));;
	if ((_10687_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_10687_sema))._field_errors);
		(*_10687_sema.alloc)._field_errors=nullptr;
	};
	return _10843_ok;;
}



inline void _1a6846096_checkFnParamKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79aa281_ParamIns>* _109438_p) {
	(*((*((*(_109438_p))))._field_Kind))._field_Variadic=(*((*((*(_109438_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109438_p))))._field_Decl.alloc)._field_Reference && (!(_1a7a9ddad_isValidForRef(&((*((*(_109438_p))))._field_Kind)))))) {
		_1a683a453_pushErr(_self_.ptr(), (*(*((*(_109438_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_109438_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1a68463d7_reloadFnInsTypes(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns> _110137_f) {
	if ((_1a79ac78e_IsBuiltin(_110137_f.ptr()) || _1a79aca25_IsAnon(_110137_f))) {
		return true;;
	};
	return _1a6845cdd_fnEnvironment(_self_, &(_110137_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a6837818_Sema>*,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>*>((void*)__jule_anon_1abc37c68, jule::Ptr<__jule_anon_1abc37c68_ctx>::make(__jule_anon_1abc37c68_ctx{._110137_f=_110137_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1abc37c68_ctx_handler));;
}



inline jule::Bool _1a684688d_checkRefValidityForInitExpr(jule::Ptr<_1a6837818_Sema> _self_, jule::Bool _113744_leftMut, jule::Ptr<_1a7a51503_Data>* _113764_d, jule::Ptr<_1a795c013_Token>* _113779_errorToken) {
	if ((!(_1a6834ea8_isValidModelForRef(&((*((*(_113764_d))))._field_Model))))) {
		_1a683a453_pushErr(_self_.ptr(), (*(_113779_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113744_leftMut && (!((*((*(_113764_d))))._field_Mutable)))) {
		_1a683a453_pushErr(_self_, (*(_113779_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a6846bce_isMutRiskyStruct(_1a6837818_Sema* _self_, jule::Ptr<_1a79960d5_StructIns>* _115429_s) {
	{
		auto expr = &((*((*(_115429_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc426bd:;
		if (it != expr_end) {
			jule::Ptr<_1a7995535_FieldIns> *_115510_f = it;
			{
				if ((((*((*((*(_115510_f))))._field_Decl))._field_Mutable && _1a7a8427d_Mutable((*(*(_115510_f)).alloc)._field_Kind.ptr())) && _1a683abb2_isAccessibleDefine(_self_, (*(*((*(_115510_f))))._field_Decl.alloc)._field_Public, (*(*((*(_115510_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1abc426bd:;
			++it;
			goto _iter_begin_1abc426bd;
		}
		_iter_end_1abc426bd:;
	};
	return false;;
}



inline jule::Bool _1a68472ea_checkValidityForInitExpr(jule::Ptr<_1a6837818_Sema> _self_, jule::Bool _118141_leftMut, jule::Bool _118156_leftRef, jule::Ptr<_1a7a828ec_TypeKind>* _11824_leftKind, jule::Ptr<_1a7a51503_Data>* _118230_d, jule::Ptr<_1a795c013_Token>* _118245_errorToken) {
	if ((_118141_leftMut && (!((*((*(_118230_d))))._field_Mutable)))) {
		if (_1a7a8427d_Mutable((*((*(_118230_d))))._field_Kind.ptr())) {
			_1a683a453_pushErr(_self_.ptr(), (*(_118245_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_118230_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1a79960d5_StructIns> _11904_s = _1a7a865c1_Struct((*((*(_118230_d))))._field_Kind);;
		if (((_11904_s != nullptr) && _1a6846bce_isMutRiskyStruct(_self_, &(_11904_s)))) {
			_1a683a453_pushErr(_self_, (*(_118245_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_118230_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118156_leftRef) {
		if ((!(_1a684688d_checkRefValidityForInitExpr(_self_, _118141_leftMut, _118230_d, _118245_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a7a39e6a_assignTypeChecker> _12017_atc = jule::new_ptr<_1a7a39e6a_assignTypeChecker>(_1a7a39e6a_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118230_d)), ._field_errorToken=(*(_118245_errorToken))});;
	return _1a7a3a685_checkValidity(_12017_atc.ptr());;
}



inline jule::Bool _1a68476e6_checkTypeAliasDeclKind(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _120944_ta, jule::Trait _120964_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a4b18a_SymbolTable> _12107_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a683a035_setCurrentFile(_self_, _12107_old);
	});;
	if (((*((*(_120944_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a7a4b18a_SymbolTable> _12158_file = _1a683655e_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120944_ta))))._field_Token.alloc)._field_File));;
		if ((_12158_file != nullptr)) {
			_1a683a035_setCurrentFile(_self_, _12158_file);
		};
	};
	__jule_func_result=_1a6840942_checkTypeWithRefers(_self_, &((*((*(_120944_ta))))._field_Kind), _120964_l, nullptr, jule::new_ptr<_1a7a937ba_referencer>(_1a7a937ba_referencer{._field_ident=(*((*(_120944_ta))))._field_Ident, ._field_owner=jule::Any((*(_120944_ta)), &__jule_any_type65), ._field_refs=(&((*((*(_120944_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a7a85d1d_Arr((*((*((*(_120944_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a7a85d1d_Arr((*((*((*(_120944_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1a683a453_pushErr(_self_, (*((*(*((*(_120944_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a6847a59_checkTypeAliasDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _123240_ta, jule::Trait _123260_l) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_123240_ta))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_123240_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a68476e6_checkTypeAliasDeclKind(_self_, _123240_ta, _123260_l);
}



inline void _1a6847d12_checkTypeAliasDeclDup(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a81b0a_TypeAlias>* _124043_ta) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_124043_ta))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_124043_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a683b168_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124043_ta))), &((*((*(_124043_ta))))._field_Ident), (*((*(_124043_ta))))._field_Binded)) {
		_1a683a453_pushErr(_self_, (*((*(_124043_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124043_ta))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a68476e6_checkTypeAliasDeclKind(_self_, _124043_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));
}



inline jule::Bool _1a6848098_checkTypeAliasDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdb5c3c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81b0a_TypeAlias> _125315_ta = *it;
			{
				_1a6847d12_checkTypeAliasDeclDup(_self_, &(_125315_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abdb5c3c:;
			++it;
			goto _iter_begin_1abdb5c3c;
		}
		_iter_end_1abdb5c3c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abde27e6_checkEnumItemsDup(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _126436_items) {
	{
		auto expr = &(_126436_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abde3c04:;
		if (it != expr_end) {
			jule::Ptr<_1a79bd371_EnumItem> *_126510_item = it;
			{
				if (((*((*(_126510_item))))._field_Ident).empty()) {
					goto _iter_next_1abde3c04;
				} else if (_1a795e8ea_IsIgnoreIdent((*((*(_126510_item))))._field_Ident)) {
					_1a683a453_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126436_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abde56ea:;
						if (it != expr_end) {
							jule::Ptr<_1a79bd371_EnumItem> *_127112_citem = it;
							{
								if (((*(_126510_item)) == (*(_127112_citem)))) {
									goto _iter_end_1abde56ea;
								} else if (((*((*(_126510_item))))._field_Ident == (*((*(_127112_citem))))._field_Ident)) {
									_1a683a453_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126510_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1abde56ea;
								};
							}
							_iter_next_1abde56ea:;
							++it;
							goto _iter_begin_1abde56ea;
						}
						_iter_end_1abde56ea:;
					};
				};
			}
			_iter_next_1abde3c04:;
			++it;
			goto _iter_begin_1abde3c04;
		}
		_iter_end_1abde3c04:;
	};
}

inline void _1abdeeb00_checkEnumItemsDup(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> _126436_items) {
	{
		auto expr = &(_126436_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe00edb:;
		if (it != expr_end) {
			jule::Ptr<_1a79c0021_TypeEnumItem> *_126510_item = it;
			{
				if (((*((*(_126510_item))))._field_Ident).empty()) {
					goto _iter_next_1abe00edb;
				} else if (_1a795e8ea_IsIgnoreIdent((*((*(_126510_item))))._field_Ident)) {
					_1a683a453_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126436_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abe029d2:;
						if (it != expr_end) {
							jule::Ptr<_1a79c0021_TypeEnumItem> *_127112_citem = it;
							{
								if (((*(_126510_item)) == (*(_127112_citem)))) {
									goto _iter_end_1abe029d2;
								} else if (((*((*(_126510_item))))._field_Ident == (*((*(_127112_citem))))._field_Ident)) {
									_1a683a453_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126510_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1abe029d2;
								};
							}
							_iter_next_1abe029d2:;
							++it;
							goto _iter_begin_1abe029d2;
						}
						_iter_end_1abe029d2:;
					};
				};
			}
			_iter_next_1abe00edb:;
			++it;
			goto _iter_begin_1abe00edb;
		}
		_iter_end_1abe00edb:;
	};
}



inline void _1a6848609_checkEnumItemsStr(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bdddd_Enum>* _128439_e) {
	jule::Ptr<_1a7a5322a_Eval> _12857_eval = _1a6842900_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_128439_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdb79a8:;
		if (it != expr_end) {
			jule::Ptr<_1a79bd371_EnumItem> _128615_item = *it;
			{
				if (_1a79bd728_AutoExpr(_128615_item.ptr())) {
					(*_128615_item.alloc)._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Constant=static__1bd82d121_NewStr((*_128615_item.alloc)._field_Ident)})});
					(*((*((*_128615_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_128615_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1a7a51503_Data> _12959_d = _1a7a7148a_evalExpr(_12857_eval, (*((*(_128615_item))._field_Value))._field_Expr);;
					if ((_12959_d == nullptr)) {
						goto _iter_next_1abdb79a8;
					};
					if ((!(_1a7a51e0a_IsConst(_12959_d.ptr())))) {
						_1a683a453_pushErr(_self_, (*((*(*(_128615_item))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a6842e61_checkAssignType(_self_, false, &((*((*((*(_128439_e))))._field_Kind))._field_Kind), &(_12959_d), (*_128615_item.alloc)._field_Token);
					(*(*(_128615_item))._field_Value.alloc)._field_Data=_12959_d;
				};
			}
			_iter_next_1abdb79a8:;
			++it;
			goto _iter_begin_1abdb79a8;
		}
		_iter_end_1abdb79a8:;
	};
}



inline void _1abdc3266_checkEnumItemInt(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a5322a_Eval>* _131043_eval, jule::Ptr<_1a79bdddd_Enum>* _131061_e, jule::Ptr<_1a7a8a4c6_Prim>* _131072_prim, jule::Ptr<_1a79bd371_EnumItem>* _131090_item, jule::U64* _1310112_n) {
	if (_1a79bd728_AutoExpr((*(_131090_item)).ptr())) {
		(*((*(_131090_item))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		{
			
{
				_case_begin_1abdc5642:;
				{
					(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Constant=static__1bd82ca8d_NewU64((*(_1310112_n)));
				}
			}
			_match_end_1abdc59a5:;
		};
		(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_131090_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a7a51503_Data> _13258_d = _1a7a7148a_evalExpr((*(_131043_eval)), (*((*((*(_131090_item))))._field_Value))._field_Expr);;
		if ((_13258_d == nullptr)) {
			return;;
		};
		if ((!(_1a7a51e0a_IsConst(_13258_d.ptr())))) {
			_1a683a453_pushErr(_self_.ptr(), (*((*(*((*(_131090_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a6842e61_checkAssignType(_self_, false, &((*((*((*(_131061_e))))._field_Kind))._field_Kind), &(_13258_d), (*((*(_131090_item))))._field_Token);
		(*(*((*(_131090_item))))._field_Value.alloc)._field_Data=_13258_d;
		{
			
{
				_case_begin_1abdc8832:;
				{
					(*(_1310112_n))=_1bd82dee0_ReadU64((*((*(*((*(_131090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1abdcad0c:;
		};
	};
}

inline void _1abdd32dc_checkEnumItemInt(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a5322a_Eval>* _131043_eval, jule::Ptr<_1a79bdddd_Enum>* _131061_e, jule::Ptr<_1a7a8a4c6_Prim>* _131072_prim, jule::Ptr<_1a79bd371_EnumItem>* _131090_item, jule::I64* _1310112_n) {
	if (_1a79bd728_AutoExpr((*(_131090_item)).ptr())) {
		(*((*(_131090_item))))._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()});
		{
			
{
				_case_begin_1abdd6026:;
				{
					(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Constant=static__1bd82c7c4_NewI64((*(_1310112_n)));
				}
			}
			_match_end_1abdd59b5:;
		};
		(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_131090_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a7a51503_Data> _13258_d = _1a7a7148a_evalExpr((*(_131043_eval)), (*((*((*(_131090_item))))._field_Value))._field_Expr);;
		if ((_13258_d == nullptr)) {
			return;;
		};
		if ((!(_1a7a51e0a_IsConst(_13258_d.ptr())))) {
			_1a683a453_pushErr(_self_.ptr(), (*((*(*((*(_131090_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a6842e61_checkAssignType(_self_, false, &((*((*((*(_131061_e))))._field_Kind))._field_Kind), &(_13258_d), (*((*(_131090_item))))._field_Token);
		(*(*((*(_131090_item))))._field_Value.alloc)._field_Data=_13258_d;
		{
			
{
				_case_begin_1abddb01a:;
				{
					(*(_1310112_n))=_1bd82dc59_ReadI64((*((*(*((*(_131090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1abddaea4:;
		};
	};
}



inline void _1abdbe3d8_checkEnumItemsInt1(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a8a4c6_Prim>* _134541_prim, jule::Ptr<_1a79bdddd_Enum>* _134559_e) {
	jule::U64 _13467_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1abdc1121:;
			{
				_13467_max=_1bd827acc_MaxU(_1a7a8a817_Str((*(_134541_prim)).ptr()));
			}
		}
		_match_end_1abdc0e45:;
	};
	jule::Ptr<_1a7a5322a_Eval> _13567_eval = _1a6842900_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));;
	jule::U64 _13577_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a79bd371_EnumItem> _13587_first = (*((*(_134559_e))))._field_Items[0LL];;
	_1abdc3266_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_13587_first), &(_13577_n));
	if (((*((*(_13587_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1abdc094a:;
				{
					_13577_n=_1bd82ecb0_AsU64((*(*((*(_13587_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1abdcbe40:;
		};
	};
	{
		auto expr = (*((*(_134559_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abdc7aea:;
		if (it != expr_end) {
			jule::Ptr<_1a79bd371_EnumItem> _137015_item = *it;
			{
				if (((_1a79bd728_AutoExpr(_137015_item.ptr()) && (_13577_n > 0LLU)) && ((_13467_max - _13577_n) <= 0LLU))) {
					_1a683a453_pushErr(_self_, (*_137015_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1abdc7aea;
				};
				(_13577_n)++;
				_1abdc3266_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_137015_item), &(_13577_n));
			}
			_iter_next_1abdc7aea:;
			++it;
			goto _iter_begin_1abdc7aea;
		}
		_iter_end_1abdc7aea:;
	};
}

inline void _1abdce9e2_checkEnumItemsInt1(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7a8a4c6_Prim>* _134541_prim, jule::Ptr<_1a79bdddd_Enum>* _134559_e) {
	jule::I64 _13467_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1abdd1186:;
			{
				_13467_max=_1bd827813_MaxI(_1a7a8a817_Str((*(_134541_prim)).ptr()));
			}
		}
		_match_end_1abdd0d34:;
	};
	jule::Ptr<_1a7a5322a_Eval> _13567_eval = _1a6842900_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));;
	jule::I64 _13577_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a79bd371_EnumItem> _13587_first = (*((*(_134559_e))))._field_Items[0LL];;
	_1abdd32dc_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_13587_first), &(_13577_n));
	if (((*((*(_13587_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1abdd21cb:;
				{
					_13577_n=_1bd82ea29_AsI64((*(*((*(_13587_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1abddb59d:;
		};
	};
	{
		auto expr = (*((*(_134559_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abddcabb:;
		if (it != expr_end) {
			jule::Ptr<_1a79bd371_EnumItem> _137015_item = *it;
			{
				if (((_1a79bd728_AutoExpr(_137015_item.ptr()) && (_13577_n > 0LL)) && ((_13467_max - _13577_n) <= 0LL))) {
					_1a683a453_pushErr(_self_, (*_137015_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1abddcabb;
				};
				(_13577_n)++;
				_1abdd32dc_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_137015_item), &(_13577_n));
			}
			_iter_next_1abddcabb:;
			++it;
			goto _iter_begin_1abddcabb;
		}
		_iter_end_1abddcabb:;
	};
}



inline void _1a68492a8_checkEnumItemsInt(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bdddd_Enum>* _138039_e) {
	jule::Ptr<_1a7a8a4c6_Prim> _13813_prim = _1a7a8504d_Prim((*((*((*(_138039_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1bd82b1c9_IsSigInt((*(_13813_prim))._field_Kind)) {
			_case_begin_1abdcd24e:;
			{
				_1abdce9e2_checkEnumItemsInt1(_self_, &(_13813_prim), _138039_e);
			}
		}
		else {
			_case_begin_1abdbdb68:;
			{
				_1abdbe3d8_checkEnumItemsInt1(_self_, &(_13813_prim), _138039_e);
			}
		}
		_match_end_1abdbdb02:;
	};
}



inline void _1a6849561_checkEnumDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bdddd_Enum>* _139035_e) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_139035_e))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_139035_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a683b168_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139035_e))), &((*((*(_139035_e))))._field_Ident), false)) {
		_1a683a453_pushErr(_self_, (*((*(_139035_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139035_e))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139035_e))))._field_Items.len() == 0LL)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_139035_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139035_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1abde27e6_checkEnumItemsDup(_self_, (*((*(_139035_e))))._field_Items);
	if (((*((*(_139035_e))))._field_Kind != nullptr)) {
		if ((!(_1a68410c4_checkType(_self_, &((*((*(_139035_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139035_e))))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _14147_t = _1a7a8504d_Prim((*((*((*(_139035_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14147_t == nullptr)) {
		_1a683a453_pushErr(_self_, (*((*(_139035_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a7a8d95d_IsStr(_14147_t.ptr())) {
			_case_begin_1abde9457:;
			{
				_1a6848609_checkEnumItemsStr(_self_, _139035_e);
			}
		}
		else if (_1bd82b7a1_IsInt(_1a7a8a817_Str(_14147_t.ptr()))) {
			_case_begin_1abde8797:;
			{
				_1a68492a8_checkEnumItemsInt(_self_, _139035_e);
			}
		}
		else {
			_case_begin_1abde8731:;
			{
				_1a683a453_pushErr(_self_, (*((*(_139035_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abde9248:;
	};
}



inline void _1a6849819_checkTypeEnumDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79c05e8_TypeEnum>* _143139_e) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_143139_e))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_143139_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a683b168_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143139_e))), &((*((*(_143139_e))))._field_Ident), false)) {
		_1a683a453_pushErr(_self_, (*((*(_143139_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143139_e))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143139_e))))._field_Items.len() == 0LL)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_143139_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143139_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1abdeeb00_checkEnumItemsDup(_self_, (*((*(_143139_e))))._field_Items);
	{
		auto expr = &((*((*(_143139_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe00a8a:;
		if (it != expr_end) {
			jule::Ptr<_1a79c0021_TypeEnumItem> _144515_item = *it;
			{
				if (((*(_144515_item))._field_Kind == nullptr)) {
					_1a683a453_pushErr(_self_, (*_144515_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1abe00a8a;
				};
				jule::Bool _14504_ok = _1a68410c4_checkType(_self_, &((*_144515_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));;
				if ((!(_14504_ok))) {
					goto _iter_next_1abe00a8a;
				};
				jule::Ptr<_1a7a8a4c6_Prim> _14544_p = _1a7a8504d_Prim((*((*_144515_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_14544_p != nullptr) && _1a7a8dbe4_IsAny(_14544_p))) {
					_1a683a453_pushErr(_self_, (*_144515_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1abe00a8a:;
			++it;
			goto _iter_begin_1abe00a8a;
		}
		_iter_end_1abe00a8a:;
	};
	if (((*((*(_143139_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a79c0021_TypeEnumItem> _14608_item = (*((*(_143139_e))))._field_Items[0LL];;
		_1a7a828ec_TypeKind _14614_tk = _1a7a828ec_TypeKind{._field_Kind=jule::Trait((*(_143139_e)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4)};;
		if ((((*((*(_14608_item))._field_Kind))._field_Kind != nullptr) && _1a7a83106_Equal((*((*(_14608_item))._field_Kind))._field_Kind, ((jule::Ptr<_1a7a828ec_TypeKind>)((&(_14614_tk))))))) {
			_1a683a453_pushErr(_self_, (*_14608_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a79c0939_Str((*(_143139_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1a6849aa0_checkEnumDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe0ad92:;
		if (it != expr_end) {
			jule::Ptr<_1a79bdddd_Enum> _147215_e = *it;
			{
				_1a6849561_checkEnumDecl(_self_, &(_147215_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abe0ad92:;
			++it;
			goto _iter_begin_1abe0ad92;
		}
		_iter_end_1abe0ad92:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a6849d36_checkTypeEnumDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe0c547:;
		if (it != expr_end) {
			jule::Ptr<_1a79c05e8_TypeEnum> _148415_e = *it;
			{
				_1a6849819_checkTypeEnumDecl(_self_, &(_148415_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abe0c547:;
			++it;
			goto _iter_begin_1abe0c547;
		}
		_iter_end_1abe0c547:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a684a177_checkDeclGenerics(_1a6837818_Sema* _self_, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _149434_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149434_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe0d9ee:;
		if (it != expr_end) {
			jule::I64 _14967_i = it - expr->begin();
			jule::Ptr<_1a797e6c8_GenericDecl> *_149610_g = it;
			{
				if (_1a795e8ea_IsIgnoreIdent((*((*(_149610_g))))._field_Ident)) {
					_1a683a453_pushErr(_self_, (*(*(_149610_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1abe0d9ee;
				};
				_julec_label_1abe0ed96:;
				{
					auto expr = _149434_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe0e835:;
					if (it != expr_end) {
						jule::I64 _15058_j = it - expr->begin();
						jule::Ptr<_1a797e6c8_GenericDecl> *_150511_ct = it;
						{
							{
								
								if ((_15058_j >= _14967_i)) {
									_case_begin_1abe10e74:;
									{
										goto _iter_end_1abe0e835;
									}
								}
								else if (((*(*(_149610_g)).alloc)._field_Ident == (*((*(_150511_ct))))._field_Ident)) {
									_case_begin_1abe1100c:;
									{
										_1a683a453_pushErr(_self_, (*(*(_149610_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149610_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1abe0e835;
									}
								}
								_match_end_1abe10d75:;
							};
						}
						_iter_next_1abe0e835:;
						++it;
						_15058_j++;
						goto _iter_begin_1abe0e835;
					}
					_iter_end_1abe0e835:;
				};
			}
			_iter_next_1abe0d9ee:;
			++it;
			_14967_i++;
			goto _iter_begin_1abe0d9ee;
		}
		_iter_end_1abe0d9ee:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a684a4b8_checkFnDeclParamsDup(_1a6837818_Sema* _self_, jule::Ptr<_1a79a8328_Fn>* _152137_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1abe13273:;
	{
		auto expr = &((*((*(_152137_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe1355e:;
		if (it != expr_end) {
			jule::I64 _15247_i = it - expr->begin();
			jule::Ptr<_1a79a6854_Param> *_152410_p = it;
			{
				{
					auto expr = &((*((*(_152137_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe14241:;
					if (it != expr_end) {
						jule::Ptr<_1a797e6c8_GenericDecl> *_152611_g = it;
						{
							if (((*((*(_152410_p))))._field_Ident == (*((*(_152611_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a683a453_pushErr(_self_, (*(*(_152410_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152410_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1abe1355e;
							};
						}
						_iter_next_1abe14241:;
						++it;
						goto _iter_begin_1abe14241;
					}
					_iter_end_1abe14241:;
				};
				_julec_label_1abe15a7d:;
				{
					auto expr = &((*((*(_152137_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe14719:;
					if (it != expr_end) {
						jule::I64 _15368_j = it - expr->begin();
						jule::Ptr<_1a79a6854_Param> *_153611_jp = it;
						{
							{
								
								if ((_15368_j >= _15247_i)) {
									_case_begin_1abe16a4b:;
									{
										goto _iter_end_1abe14719;
									}
								}
								else if (_1a795e8ea_IsIgnoreIdent((*(*(_152410_p)).alloc)._field_Ident) || _1a795e8ea_IsIgnoreIdent((*((*(_153611_jp))))._field_Ident) || _1a795ebb4_IsAnonIdent((*(*(_152410_p)).alloc)._field_Ident) || _1a795ebb4_IsAnonIdent((*(*(_153611_jp)).alloc)._field_Ident)) {
									_case_begin_1abe16ad4:;
									{
										goto _iter_end_1abe14719;
									}
								}
								else if (((*(*(_152410_p)).alloc)._field_Ident == (*((*(_153611_jp))))._field_Ident)) {
									_case_begin_1abe16b4a:;
									{
										__jule_func_result=false;
										_1a683a453_pushErr(_self_, (*(*(_152410_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152410_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1abe1355e;
									}
								}
								_match_end_1abe16908:;
							};
						}
						_iter_next_1abe14719:;
						++it;
						_15368_j++;
						goto _iter_begin_1abe14719;
					}
					_iter_end_1abe14719:;
				};
			}
			_iter_next_1abe1355e:;
			++it;
			_15247_i++;
			goto _iter_begin_1abe1355e;
		}
		_iter_end_1abe1355e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a684a809_checkFnDeclResultDup(_1a6837818_Sema* _self_, jule::Ptr<_1a79a8328_Fn>* _155837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a79a879b_IsVoid((*(_155837_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155837_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe1a632:;
		if (it != expr_end) {
			jule::I64 _15657_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> *_156510_v = it;
			{
				if ((_1a795e8ea_IsIgnoreIdent((*((*(_156510_v))))._field_Kind) || _1a795ebb4_IsAnonIdent((*(*(_156510_v)).alloc)._field_Kind))) {
					goto _iter_next_1abe1a632;
				};
				{
					auto expr = &((*((*(_155837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe1bbc7:;
					if (it != expr_end) {
						jule::Ptr<_1a797e6c8_GenericDecl> *_157011_g = it;
						{
							if (((*(*(_156510_v)).alloc)._field_Kind == (*((*(_157011_g))))._field_Ident)) {
								goto _julec_label_1abe20a33;
							};
						}
						_iter_next_1abe1bbc7:;
						++it;
						goto _iter_begin_1abe1bbc7;
					}
					_iter_end_1abe1bbc7:;
				};
				{
					auto expr = &((*((*(_155837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe1d13a:;
					if (it != expr_end) {
						jule::Ptr<_1a79a6854_Param> *_157611_p = it;
						{
							if (((*(*(_156510_v)).alloc)._field_Kind == (*((*(_157611_p))))._field_Ident)) {
								goto _julec_label_1abe20a33;
							};
						}
						_iter_next_1abe1d13a:;
						++it;
						goto _iter_begin_1abe1d13a;
					}
					_iter_end_1abe1d13a:;
				};
				_julec_label_1abe1ddc7:;
				{
					auto expr = &((*((*((*(_155837_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe1e889:;
					if (it != expr_end) {
						jule::I64 _15848_j = it - expr->begin();
						jule::Ptr<_1a795c013_Token> *_158411_jv = it;
						{
							{
								
								if ((_15848_j >= _15657_i)) {
									_case_begin_1abe20406:;
									{
										goto _iter_end_1abe1e889;
									}
								}
								else if (((*((*(_158411_jv))))._field_Kind == (*(*(_156510_v)).alloc)._field_Kind)) {
									_case_begin_1abe2048e:;
									{
										goto _julec_label_1abe20a33;
									}
								}
								_match_end_1abe20307:;
							};
						}
						_iter_next_1abe1e889:;
						++it;
						_15848_j++;
						goto _iter_begin_1abe1e889;
					}
					_iter_end_1abe1e889:;
				};
				goto _iter_next_1abe1a632;
				_julec_label_1abe20a33:;
				_1a683a453_pushErr(_self_, (*(_156510_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156510_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1abe1a632:;
			++it;
			_15657_i++;
			goto _iter_begin_1abe1a632;
		}
		_iter_end_1abe1a632:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a684ab4a_checkFnVariadicParam(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _160342_f) {
	if (((*((*(_160342_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a79a6854_Param> _16077_param = (*((*(_160342_f))))._field_Params[((*((*(_160342_f))))._field_Params.len() - 1LL)];;
	if (((*(_16077_param))._field_Variadic && (*_16077_param.alloc)._field_Reference)) {
		_1a683a453_pushErr(_self_.ptr(), (*_16077_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a684ae03_checkFnDeclPrototype(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _161642_f) {
	if (((*((*(_161642_f))))._field_Exceptional && (*((*(_161642_f))))._field_Binded)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_161642_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161642_f))))._field_Exceptional) {
		if (_1a79a8cb8_IsEntryPoint((*(_161642_f)).ptr())) {
			_1a683a453_pushErr(_self_, (*((*(_161642_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a79a904e_IsInit((*(_161642_f)).ptr())) {
			_1a683a453_pushErr(_self_, (*((*(_161642_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a684a177_checkDeclGenerics(_self_, &((*((*(_161642_f))))._field_Generics))))) {
			_case_begin_1abe279b3:;
		}
		else if ((!(_1a684a4b8_checkFnDeclParamsDup(_self_, _161642_f)))) {
			_case_begin_1abe27a29:;
		}
		else if ((!(_1a684a809_checkFnDeclResultDup(_self_, _161642_f)))) {
			_case_begin_1abe27a90:;
		}
		else if ((!(_1a684ab4a_checkFnVariadicParam(_self_, _161642_f)))) {
			_case_begin_1abe27b06:;
		}
		_match_end_1abe26099:;
	};
}



inline jule::Bool _1a684b3a9_catchTraitInheritCycle(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait> _163839_t1, jule::Ptr<_1a79bb6d2_Trait> _163855_t2, _200880c8a_StrBuilder* _163872_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163855_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe2a147:;
		if (it != expr_end) {
			jule::Ptr<_1a7a89abe_TypeSymbol> _164015_i = *it;
			{
				if (((*(_164015_i))._field_Kind == nullptr)) {
					goto _iter_next_1abe2a147;
				};
				jule::Ptr<_1a79bb6d2_Trait> _16448_t3 = _1a7a86857_Trait((*_164015_i.alloc)._field_Kind.ptr());;
				if ((_163839_t1 == _16448_t3)) {
					_1a6851139_pushCycleError(_self_.ptr(), &((*(_163855_t2))._field_Ident), &((*(_16448_t3))._field_Ident), _163872_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a684b3a9_catchTraitInheritCycle(_self_, _163839_t1, _16448_t3, _163872_message)))) {
					_1a6851139_pushCycleError(_self_, &((*_163855_t2.alloc)._field_Ident), &((*_16448_t3.alloc)._field_Ident), _163872_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abe2a147:;
			++it;
			goto _iter_begin_1abe2a147;
		}
		_iter_end_1abe2a147:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a684b6ea__checkTraitDeclInherits(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _165745_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165745_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe2d8ba:;
		if (it != expr_end) {
			jule::I64 _16598_i = it - expr->begin();
			jule::Ptr<_1a7a89abe_TypeSymbol> _165915_it = *it;
			{
				if ((!(_1a68410c4_checkType(_self_, &(_165915_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1abe2d8ba;
				};
				jule::Ptr<_1a79bb6d2_Trait> _16648_t2 = _1a7a86857_Trait((*(_165915_it))._field_Kind.ptr());;
				if ((_16648_t2 == nullptr)) {
					_1a683a453_pushErr(_self_, (*((*_165915_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165745_t))))._field_Ident, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_165915_it))._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1abe2d8ba;
				};
				{
					auto expr = &((*((*(_165745_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe31d1e:;
					if (it != expr_end) {
						jule::I64 _16708_j = it - expr->begin();
						jule::Ptr<_1a7a89abe_TypeSymbol> _167011_it2 = *it;
						{
							if ((_16708_j >= _16598_i)) {
								goto _iter_end_1abe31d1e;
							};
							if ((((*(_167011_it2))._field_Kind != nullptr) && _1a7a83106_Equal((*(_165915_it))._field_Kind, (*_167011_it2.alloc)._field_Kind))) {
								_1a683a453_pushErr(_self_, (*(*(_165915_it))._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_16648_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1abe31d1e;
							};
						}
						_iter_next_1abe31d1e:;
						++it;
						_16708_j++;
						goto _iter_begin_1abe31d1e;
					}
					_iter_end_1abe31d1e:;
				};
				if (((*(_165745_t)) == _16648_t2)) {
					_1a683a453_pushErr(_self_, (*(*(_165915_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165745_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_200880c8a_StrBuilder _16849_message = static__2008811b9_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a684b3a9_catchTraitInheritCycle(_self_, (*(_165745_t)), _16648_t2, &(_16849_message)));
					if ((_2008824a6_Len(&_16849_message) > 0LL)) {
						jule::Str _168710_errMsg = _200882022_Str(&_16849_message);;
						_200882220_Clear(&_16849_message);
						_1a6851139_pushCycleError(_self_, &((*((*(_165745_t))))._field_Ident), &((*(_16648_t2))._field_Ident), &(_16849_message));
						_168710_errMsg+=_200882022_Str(&_16849_message);
						_1a683a453_pushErr(_self_, (*(*(_165915_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168710_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1abe2d8ba:;
			++it;
			_16598_i++;
			goto _iter_begin_1abe2d8ba;
		}
		_iter_end_1abe2d8ba:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a684b9a3_checkTraitDeclInherits(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _169844_t) {
	{
		auto expr = &((*((*(_169844_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe3882b:;
		if (it != expr_end) {
			jule::I64 _16998_i = it - expr->begin();
			jule::Ptr<_1a7a89abe_TypeSymbol> _169915_it = *it;
			{
				jule::Ptr<_1a79bb6d2_Trait> _17008_t1 = _1a7a86857_Trait((*(_169915_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169844_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe39d38:;
					if (it != expr_end) {
						jule::I64 _17019_j = it - expr->begin();
						jule::Ptr<_1a7a89abe_TypeSymbol> _170116_it2 = *it;
						{
							if ((_17019_j == _16998_i)) {
								goto _iter_next_1abe39d38;
							};
							jule::Ptr<_1a79bb6d2_Trait> _17059_t2 = _1a7a86857_Trait((*(_170116_it2))._field_Kind);;
							{
								auto expr = &((*(_17008_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abe3b5a9:;
								if (it != expr_end) {
									jule::Ptr<_1a79a8328_Fn> _170617_t1m = *it;
									{
										jule::Ptr<_1a79a8328_Fn> _170710_t2m = _1a79bc381_FindMethod(_17059_t2.ptr(), (*(_170617_t1m))._field_Ident);;
										if ((_170710_t2m == nullptr)) {
											goto _iter_next_1abe3b5a9;
										};
										jule::Ptr<_1a79ab309_FnIns> _17116_t1f = _1a6844e85_getTraitCheckFnKind(_self_, &(_170617_t1m));;
										jule::Ptr<_1a79ab309_FnIns> _17126_t2f = _1a6844e85_getTraitCheckFnKind(_self_, &(_170710_t2m));;
										if ((!(_1a79ac272_equalTrait(_17116_t1f, &(_17126_t2f))))) {
											_1a683a453_pushErr(_self_, (*((*_169915_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169844_t))))._field_Ident, &__jule_any_type4),jule::Any((*_17059_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a79ad1a7_GetKindStr(_17116_t1f, true), &__jule_any_type4),jule::Any(_1a79ad1a7_GetKindStr(_17126_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1abe3b5a9:;
									++it;
									goto _iter_begin_1abe3b5a9;
								}
								_iter_end_1abe3b5a9:;
							};
						}
						_iter_next_1abe39d38:;
						++it;
						_17019_j++;
						goto _iter_begin_1abe39d38;
					}
					_iter_end_1abe39d38:;
				};
			}
			_iter_next_1abe3882b:;
			++it;
			_16998_i++;
			goto _iter_begin_1abe3882b;
		}
		_iter_end_1abe3882b:;
	};
}



inline void _1a684bc5b_checkTraitDeclMethod(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _172342_f) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_172342_f))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_172342_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a795ebb4_IsAnonIdent((*((*(_172342_f))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_172342_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172342_f))))._field_sema=_self_;
	_1a684ae03_checkFnDeclPrototype(_self_, _172342_f);
	jule::Ptr<_1a79ab309_FnIns> _17317_ins = _1a79a9a88_instance((*(_172342_f)));;
	_1a68463d7_reloadFnInsTypes(_self_, _17317_ins);
	(*(_17317_ins))._field_reloaded=true;
	_1a79a9d96_appendInstance((*(_172342_f)).ptr(), &(_17317_ins));
}



inline void _1a684c014_checkTraitDeclMethods(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _173743_t) {
	{
		auto expr = &((*((*(_173743_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe436d2:;
		if (it != expr_end) {
			jule::I64 _17388_i = it - expr->begin();
			jule::Ptr<_1a79a8328_Fn> _173815_f = *it;
			{
				_1a684bc5b_checkTraitDeclMethod(_self_, &(_173815_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a79bca13_findMethodInherit((*(_173743_t)).ptr(), &((*(_173815_f))._field_Ident)) != nullptr)) {
					_1a683a453_pushErr(_self_, (*_173815_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173815_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1abe436d2;
				};
				_julec_label_1abe450eb:;
				{
					auto expr = &((*((*(_173743_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe466d5:;
					if (it != expr_end) {
						jule::I64 _17548_j = it - expr->begin();
						jule::Ptr<_1a79a8328_Fn> _175411_jf = *it;
						{
							{
								
								if ((_17548_j >= _17388_i)) {
									_case_begin_1abe47252:;
									{
										goto _iter_end_1abe466d5;
									}
								}
								else if (((*_173815_f.alloc)._field_Ident == (*(_175411_jf))._field_Ident)) {
									_case_begin_1abe472da:;
									{
										_1a683a453_pushErr(_self_, (*_173815_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173815_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1abe466d5;
									}
								}
								_match_end_1abe47153:;
							};
						}
						_iter_next_1abe466d5:;
						++it;
						_17548_j++;
						goto _iter_begin_1abe466d5;
					}
					_iter_end_1abe466d5:;
				};
			}
			_iter_next_1abe436d2:;
			++it;
			_17388_i++;
			goto _iter_begin_1abe436d2;
		}
		_iter_end_1abe436d2:;
	};
}



inline void _1a684c2bc_checkTraitDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79bb6d2_Trait>* _177336_t) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_177336_t))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_177336_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a683b168_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177336_t))), &((*((*(_177336_t))))._field_Ident), false)) {
		_1a683a453_pushErr(_self_, (*((*(_177336_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177336_t))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a684b9a3_checkTraitDeclInherits(_self_, _177336_t);
	_1a684c014_checkTraitDeclMethods(_self_, _177336_t);
}



inline jule::Bool _1a684c553_checkTraitDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe4c642:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _178715_t = *it;
			{
				_1a684c2bc_checkTraitDecl(_self_, &(_178715_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abe4c642:;
			++it;
			goto _iter_begin_1abe4c642;
		}
		_iter_end_1abe4c642:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a684c94e_checkTraitImplMethods(_1a6837818_Sema* _self_, jule::Ptr<_1a79bb6d2_Trait>* _179742_base, jule::Ptr<_1a6808751_Impl>* _179757_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179757_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe4e105:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> *_179910_f = it;
			{
				if ((_1a79bc381_FindMethod((*(_179742_base)).ptr(), (*((*(_179910_f))))._field_Ident) == nullptr)) {
					_1a683a453_pushErr(_self_, (*(*(_179910_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179742_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179910_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1abe4e105:;
			++it;
			goto _iter_begin_1abe4e105;
		}
		_iter_end_1abe4e105:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a684cd4a_implToStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _180834_dest, jule::Ptr<_1a6808751_Impl>* _180854_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180854_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe51822:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _181215_f = *it;
			{
				if (((_1a7993ec3_FindMethod((*(_180834_dest)).ptr(), (*(_181215_f))._field_Ident, (*_181215_f.alloc)._field_Statically) != nullptr) || (_1a7994655_FindField((*(_180834_dest)).ptr(), (*_181215_f.alloc)._field_Ident) != nullptr))) {
					_1a683a453_pushErr(_self_.ptr(), (*_181215_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180834_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181215_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1abe51822;
				};
				if ((((*((*(_180834_dest))))._field_Generics.len() > 0LL) && ((*_181215_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181215_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abe54715:;
						if (it != expr_end) {
							jule::Ptr<_1a797e6c8_GenericDecl> _182012_fg = *it;
							{
								{
									auto expr = &((*((*(_180834_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1abe55161:;
									if (it != expr_end) {
										jule::Ptr<_1a797e6c8_GenericDecl> _182113_dg = *it;
										{
											if (((*(_182012_fg))._field_Ident == (*(_182113_dg))._field_Ident)) {
												_1a683a453_pushErr(_self_, (*_182012_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1abe55161:;
										++it;
										goto _iter_begin_1abe55161;
									}
									_iter_end_1abe55161:;
								};
							}
							_iter_next_1abe54715:;
							++it;
							goto _iter_begin_1abe54715;
						}
						_iter_end_1abe54715:;
					};
				};
				_1a683b4cb_checkDirectives(_self_, &((*_181215_f.alloc)._field_Directives), jule::Any(_181215_f, &__jule_any_type63));
				(*_181215_f.alloc)._field_sema=_self_;
				(*_181215_f.alloc)._field_Owner=(*(_180834_dest));
				{ jule::Slice<jule::Ptr<_1a79a8328_Fn>> &__jule_push_dest = (*((*(_180834_dest))))._field_Methods; __jule_push_dest.push(_181215_f); };
			}
			_iter_next_1abe51822:;
			++it;
			goto _iter_begin_1abe51822;
		}
		_iter_end_1abe51822:;
	};
	{
		auto expr = &((*((*(_180854_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe51beb:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _183715_v = *it;
			{
				;
				if (((_1a7993ec3_FindMethod((*(_180834_dest)).ptr(), (*(_183715_v))._field_Ident, true) != nullptr) || (_1a7994314_FindStatic((*(_180834_dest)).ptr(), (*_183715_v.alloc)._field_Ident) != nullptr))) {
					_1a683a453_pushErr(_self_, (*_183715_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180834_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183715_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1abe51beb;
				};
				{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = (*((*(_180834_dest))))._field_Statics; __jule_push_dest.push(_183715_v); };
			}
			_iter_next_1abe51beb:;
			++it;
			goto _iter_begin_1abe51beb;
		}
		_iter_end_1abe51beb:;
	};
	return __jule_func_result;;
}



inline void _1a684d103_implTrait(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a6808751_Impl>* _185031_decl) {
	jule::Ptr<_1a7a828ec_TypeKind> _18517_base_t = _1a6841c0c_selectType(_self_, &((*((*(_185031_decl))))._field_Base));;
	if ((_18517_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a79bb6d2_Trait> _18557_base = _1a7a86857_Trait(_18517_base_t.ptr());;
	if ((_18557_base == nullptr)) {
		_1a683a453_pushErr(_self_, (*((*((*(_185031_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str(_18517_base_t.ptr()), &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _18627_destT = _1a6841c0c_selectType(_self_, &((*((*(_185031_decl))))._field_Dest));;
	if ((_18627_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a79960d5_StructIns> _18667_destS = _1a7a865c1_Struct(_18627_destT.ptr());;
	if ((_18667_destS == nullptr)) {
		_1a683a453_pushErr(_self_, (*((*((*(_185031_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str(_18627_destT.ptr()), &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7993357_Struct> _18737_dest = (*(_18667_destS))._field_Decl;;
	if ((_1a7962e4d_Dir((*((*(_18737_dest))._field_Token))._field_File.ptr()) != _1a7962e4d_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a683a453_pushErr(_self_, (*(*((*(_185031_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1a6858d67_pushImplemented(_18557_base, &(_18737_dest));
	_1a6859153_pushImplements(&(_18737_dest), _18557_base);
	if (((*((*(_185031_decl))))._field_Statics.len() > 0LL)) {
		_1a683a453_pushErr(_self_, (*((*((*(_185031_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a684c94e_checkTraitImplMethods(_self_, &(_18557_base), _185031_decl)))) {
			_case_begin_1abe64307:;
		}
		else if ((!(_1a684cd4a_implToStruct(_self_, &(_18737_dest), _185031_decl)))) {
			_case_begin_1abe64390:;
		}
		_match_end_1abe63070:;
	};
}



inline void _1a684d3ab_implStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a6808751_Impl>* _189332_decl) {
	jule::Ptr<_1a7a828ec_TypeKind> _18947_destT = _1a6841c0c_selectType(_self_, &((*((*(_189332_decl))))._field_Dest));;
	if ((_18947_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a79960d5_StructIns> _18987_destS = _1a7a865c1_Struct(_18947_destT.ptr());;
	if ((_18987_destS == nullptr)) {
		_1a683a453_pushErr(_self_, (*((*((*(_189332_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str(_18947_destT.ptr()), &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7993357_Struct> _19057_dest = (*(_18987_destS))._field_Decl;;
	if ((_1a7962e4d_Dir((*((*(_19057_dest))._field_Token))._field_File.ptr()) != _1a7962e4d_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a683a453_pushErr(_self_, (*(*((*(_189332_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a684cd4a_implToStruct(_self_, &(_19057_dest), _189332_decl)))) {
			_case_begin_1abe6a011:;
		}
		_match_end_1abe69d24:;
	};
}



inline void _1a684d664_implImpl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a6808751_Impl>* _191730_decl) {
	{
		
		if (_1a6808b19_IsTraitImpl((*(_191730_decl)).ptr())) {
			_case_begin_1abe6aa7d:;
			{
				_1a684d103_implTrait(_self_, _191730_decl);
			}
		}
		else if (_1a6808da0_IsStructImpl((*(_191730_decl)).ptr())) {
			_case_begin_1abe6ab27:;
			{
				_1a684d3ab_implStruct(_self_, _191730_decl);
			}
		}
		_match_end_1abe6a96d:;
	};
}



inline void _1a684d9c7_checkVarDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _192834_decl, jule::Trait _192850_l) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_192834_decl))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_192834_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a685ace2_IsTypeInferred((*(_192834_decl)).ptr())) {
		if ((!(_1a685aa5b_IsInitialized((*(_192834_decl)).ptr())))) {
			_1a683a453_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a68410c4_checkType(_self_, &((*((*(_192834_decl))))._field_Kind), _192850_l);
	};
	if ((*((*(_192834_decl))))._field_Reference) {
		if ((*((*(_192834_decl))))._field_Constant) {
			_1a683a453_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192834_decl))))._field_Statically) {
			_1a683a453_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a685aa5b_IsInitialized((*(_192834_decl)).ptr())))) {
		if ((*((*(_192834_decl))))._field_Constant) {
			_1a683a453_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192834_decl))))._field_Statically) {
			_1a683a453_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192834_decl))))._field_Reference) {
			_1a683a453_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a684dc80_checkGlobalVarDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _196540_decl) {
	if (_1a683b168_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196540_decl))), &((*((*(_196540_decl))))._field_Ident), (*((*(_196540_decl))))._field_Binded)) {
		_1a683a453_pushErr(_self_, (*((*(_196540_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196540_decl))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196540_decl))))._field_Binded && (*((*(_196540_decl))))._field_Constant)) {
		_1a683a453_pushErr(_self_, (*((*(_196540_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196540_decl))))._field_Binded)) && (!((*((*(_196540_decl))))._field_Constant))) && (!((*((*(_196540_decl))))._field_Statically)))) {
		_1a683a453_pushErr(_self_, (*((*(_196540_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a683b4cb_checkDirectives(_self_, &((*((*(_196540_decl))))._field_Directives), jule::Any((*(_196540_decl)), &__jule_any_type8));
	_1a684d9c7_checkVarDecl(_self_, _196540_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));
}



inline jule::Bool _1a684e016_checkGlobalDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe78c01:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _198315_decl = *it;
			{
				_1a684dc80_checkGlobalVarDecl(_self_, &(_198315_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abe78c01:;
			++it;
			goto _iter_begin_1abe78c01;
		}
		_iter_end_1abe78c01:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a684e412_checkStructTraitImpl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _199342_strct, jule::Ptr<_1a79bb6d2_Trait>* _199363_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199363_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe7a5b5:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _199415_tf = *it;
			{
				jule::Bool _19958_exist = false;;
				jule::Ptr<_1a79a8328_Fn> _19968_sf = _1a7993ec3_FindMethod((*(_199342_strct)).ptr(), (*(_199415_tf))._field_Ident, (*_199415_tf.alloc)._field_Statically);;
				jule::Ptr<_1a79ab309_FnIns> _19974_tfK = _1a6844e85_getTraitCheckFnKind(_self_, &(_199415_tf));;
				if ((_19968_sf != nullptr)) {
					jule::Ptr<_1a79ab309_FnIns> _19999_sfK = _1a6844e85_getTraitCheckFnKind(_self_, &(_19968_sf));;
					_19958_exist=_1a79ac272_equalTrait(_19974_tfK, &(_19999_sfK));
				};
				if (_19958_exist) {
					jule::Ptr<_1a79718da_Directive> _20035_d = _1a7a79d9a_findDirective(&((*_19968_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_20035_d != nullptr)) {
						_1a683a453_pushErr(_self_, (*_20035_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a683a453_pushErr(_self_, (*((*(_199342_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199363_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1a79ad1a7_GetKindStr(_19974_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1abe7a5b5:;
			++it;
			goto _iter_begin_1abe7a5b5;
		}
		_iter_end_1abe7a5b5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a684e753_checkStructImpls(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _201738_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201738_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe81302:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _201915_trt = *it;
			{
				__jule_func_result=(_1a684e412_checkStructTraitImpl(_self_, _201738_s, &(_201915_trt)) && __jule_func_result);
			}
			_iter_next_1abe81302:;
			++it;
			goto _iter_begin_1abe81302;
		}
		_iter_end_1abe81302:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a684ea94_checkStructFields(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _202539_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202539_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe82787:;
		if (it != expr_end) {
			jule::Ptr<_1a7990431_Field> _202715_f = *it;
			{
				(*(_202715_f))._field_Owner=(*(_202539_st));
				{
					auto expr = &((*((*(_202539_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe8349c:;
					if (it != expr_end) {
						jule::Ptr<_1a7990431_Field> _202911_cf = *it;
						{
							if ((_202715_f == _202911_cf)) {
								goto _iter_end_1abe8349c;
							} else if (((*_202715_f.alloc)._field_Ident == (*(_202911_cf))._field_Ident)) {
								_1a683a453_pushErr(_self_.ptr(), (*_202715_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202715_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1abe8349c:;
						++it;
						goto _iter_begin_1abe8349c;
					}
					_iter_end_1abe8349c:;
				};
			}
			_iter_next_1abe82787:;
			++it;
			goto _iter_begin_1abe82787;
		}
		_iter_end_1abe82787:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a684ed4c_checkStructDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _204237_s) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_204237_s))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_204237_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a683b168_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204237_s))), &((*((*(_204237_s))))._field_Ident), (*((*(_204237_s))))._field_Binded)) {
		_1a683a453_pushErr(_self_, (*((*(_204237_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204237_s))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a683b4cb_checkDirectives(_self_, &((*((*(_204237_s))))._field_Directives), jule::Any((*(_204237_s)), &__jule_any_type64));
	{
		
		if ((!(_1a684a177_checkDeclGenerics(_self_, &((*((*(_204237_s))))._field_Generics))))) {
			_case_begin_1abe8820a:;
		}
		else if ((!(_1a684ea94_checkStructFields(_self_, _204237_s)))) {
			_case_begin_1abe88271:;
		}
		else if ((!(_1a684e753_checkStructImpls(_self_, _204237_s)))) {
			_case_begin_1abe882d7:;
		}
		else if ((!(_1a6850985_checkFuncDeclsBy(_self_, &((*((*(_204237_s))))._field_Methods))))) {
			_case_begin_1abe8834d:;
		}
		_match_end_1abe880c8:;
	};
}



inline jule::Bool _1a68500d3_checkStructDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe8a51a:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _206215_s = *it;
			{
				_1a684ed4c_checkStructDecl(_self_, &(_206215_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abe8a51a:;
			++it;
			goto _iter_begin_1abe8a51a;
		}
		_iter_end_1abe8a51a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a685038b_checkAnonFuncDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _207239_f) {
	(*((*(_207239_f))))._field_sema=_self_;
	_1a684ae03_checkFnDeclPrototype(_self_, _207239_f);
}



inline void _1a6850644_checkFuncDecl(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _207735_f) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_207735_f))))._field_Ident)) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_207735_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a79a92d5_IsAnon((*(_207735_f)).ptr())) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_207735_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1a683b4cb_checkDirectives(_self_, &((*((*(_207735_f))))._field_Directives), jule::Any((*(_207735_f)), &__jule_any_type63));
	_1a685038b_checkAnonFuncDecl(_self_, _207735_f);
	if ((((*((*(_207735_f))))._field_Owner == nullptr) && _1a683b168_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207735_f))), &((*((*(_207735_f))))._field_Ident), (*((*(_207735_f))))._field_Binded))) {
		if ((*((*(_207735_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a79a8328_Fn> _20895_init = _1a6838d9c_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20895_init != nullptr)) {
				return;;
			};
		};
		_1a683a453_pushErr(_self_, (*((*(_207735_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207735_f))))._field_Ident, &__jule_any_type4)}));
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a6850985_checkFuncDeclsBy(jule::Ptr<_1a6837818_Sema> _self_, jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _209938_funcs) {
	{
		auto expr = _209938_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe92786:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _210015_f = *it;
			{
				_1a6850644_checkFuncDecl(_self_, &(_210015_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1abe92786:;
			++it;
			goto _iter_begin_1abe92786;
		}
		_iter_end_1abe92786:;
	};
	return true;;
}



inline jule::Bool _1a6850c1b_checkFuncDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a6850985_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a6851139_pushCycleError(_1a6837818_Sema* _self_, jule::Str* _211527_st1, jule::Str* _211538_st2, _200880c8a_StrBuilder* _211553_message) {
	;
	jule::Str _21173_refersTo = _1d974cc6c_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211527_st1)), &__jule_any_type4),jule::Any((*(_211538_st2)), &__jule_any_type4)}));;
	jule::Str _21183_m = _200882022_Str(_211553_message);;
	_20088172a_WriteStr(_211553_message, _1d969d5e6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20088172a_WriteStr(_211553_message, _21173_refersTo);
	_2008819d3_WriteByte(_211553_message, '\n');
	_20088172a_WriteStr(_211553_message, _21183_m);
}



inline void _1a68517dd_checkPackageDecls(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe993d6:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _214215_f = *it;
			{
				_1a683a035_setCurrentFile(_self_.ptr(), _214215_f);
				if ((!(_1a6848098_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abe993d6:;
			++it;
			goto _iter_begin_1abe993d6;
		}
		_iter_end_1abe993d6:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe9987b:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _214915_f = *it;
			{
				_1a683a035_setCurrentFile(_self_, _214915_f);
				if ((!(_1a684c553_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abe9987b:;
			++it;
			goto _iter_begin_1abe9987b;
		}
		_iter_end_1abe9987b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe9a85a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _215615_f = *it;
			{
				_1a683a035_setCurrentFile(_self_, _215615_f);
				if ((!(_1a684e016_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abe9a85a:;
			++it;
			goto _iter_begin_1abe9a85a;
		}
		_iter_end_1abe9a85a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe9b88e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _216315_f = *it;
			{
				_1a683a035_setCurrentFile(_self_, _216315_f);
				{
					
					if ((!(_1a6850c1b_checkFuncDecls(_self_)))) {
						_case_begin_1abe9ce9a:;
					}
					else if ((!(_1a68500d3_checkStructDecls(_self_)))) {
						_case_begin_1abe9d044:;
					}
					else {
						_case_begin_1abe9c906:;
						{
							goto _iter_next_1abe9b88e;
						}
					}
					_match_end_1abe9ce12:;
				};
				return;;
			}
			_iter_next_1abe9b88e:;
			++it;
			goto _iter_begin_1abe9b88e;
		}
		_iter_end_1abe9b88e:;
	};
}



inline void _1a6851b51_checkDataForTypeInference(_1a6837818_Sema* _self_, jule::Ptr<_1a7a51503_Data>* _217542_d, jule::Ptr<_1a795c013_Token>* _217553_err_token) {
	{
		
		if (_1a7a518dd_IsNil((*(_217542_d)).ptr())) {
			_case_begin_1abe9e100:;
			{
				_1a683a453_pushErr(_self_, (*(_217553_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a7a51b74_IsVoid((*(_217542_d)).ptr())) {
			_case_begin_1abe9e199:;
			{
				_1a683a453_pushErr(_self_, (*(_217553_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217542_d))))._field_Kind))._field_Variadic) {
			_case_begin_1abe9e210:;
			{
				_1a683a453_pushErr(_self_, (*(_217553_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abe9dece:;
	};
}



inline void _1a6851e09_checkVarValue(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _218735_v) {
	if (_1a685ace2_IsTypeInferred((*(_218735_v)).ptr())) {
		(*((*(_218735_v))))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*((*((*((*(_218735_v))))._field_Value))._field_Data))._field_Kind});
		_1a6851b51_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218735_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a68472ea_checkValidityForInitExpr(_self_, (*((*(_218735_v))))._field_Mutable, (*((*(_218735_v))))._field_Reference, &((*((*((*(_218735_v))))._field_Kind))._field_Kind), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_218735_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a7a91ce6_Arr> _22008_arr = _1a7a85d1d_Arr((*((*((*(_218735_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22008_arr != nullptr)) {
			if ((*_22008_arr.alloc)._field_Auto) {
				jule::Ptr<_1a7a91ce6_Arr> _22036_dataArr = _1a7a85d1d_Arr((*((*((*((*(_218735_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22036_dataArr != nullptr)) {
					(*_22008_arr.alloc)._field_N=(*_22036_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a6842e61_checkAssignType(_self_, (*((*(_218735_v))))._field_Reference, &((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218735_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1a68472ea_checkValidityForInitExpr(_self_, (*((*(_218735_v))))._field_Mutable, (*((*(_218735_v))))._field_Reference, &((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_218735_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218735_v))))._field_Reference && (!(_1a7a9ddad_isValidForRef(&((*((*((*(_218735_v))))._field_Kind))._field_Kind)))))) {
		_1a683a453_pushErr(_self_.ptr(), (*((*(_218735_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218735_v))))._field_Constant) {
		if (((!(_1a7a51e0a_IsConst((*((*((*(_218735_v))))._field_Value))._field_Data.ptr()))) && (!(_1a7a8710a_comptime((*(*((*((*(_218735_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1a683a453_pushErr(_self_, (*((*(*((*(_218735_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218735_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_218735_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a7a86d74_Tup((*((*((*(_218735_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1a685226c_evalVarValue(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _224034_decl, jule::Trait _224050_l) {
	if ((!(_1a685aa5b_IsInitialized((*(_224034_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a7a5322a_Eval> _224511_eval = nullptr;;
	if (((*((*(_224034_decl))))._field_Kind != nullptr)) {
		_224511_eval=_1a68421b3_evalpd(_self_, _224050_l, (*(*((*(_224034_decl))))._field_Kind.alloc)._field_Kind, (*(_224034_decl)));
	} else {
		_224511_eval=_1a68421b3_evalpd(_self_, _224050_l, nullptr, (*(_224034_decl)));
	};
	(*(_224511_eval))._field_immutable=(!((*((*(_224034_decl))))._field_Mutable));
	(*((*((*(_224034_decl))))._field_Value))._field_Data=_1a7a7148a_evalExpr(_224511_eval, (*(*((*(_224034_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a68525d0_checkVar(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a685a682_Var>* _225730_decl, jule::Trait _225746_l) {
	_1a685226c_evalVarValue(_self_, _225730_decl, _225746_l);
	if (((*((*((*(_225730_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a6851e09_checkVarValue(_self_, _225730_decl);
}



inline void _1a68527cd_checkGlobals(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeb5ba5:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _226715_decl = *it;
			{
				if ((*(_226715_decl))._field_Binded) {
					goto _iter_next_1abeb5ba5;
				};
				if (((_1a685aa5b_IsInitialized(_226715_decl) && ((*((*_226715_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1a685ace2_IsTypeInferred(_226715_decl) && ((*((*_226715_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1a68525d0_checkVar(_self_, &(_226715_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));
				};
			}
			_iter_next_1abeb5ba5:;
			++it;
			goto _iter_begin_1abeb5ba5;
		}
		_iter_end_1abeb5ba5:;
	};
}



inline jule::Ptr<_1a79ab309_FnIns> _1a6852bc9_readyToCheckFn(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _228136_s, jule::Ptr<_1a79a8328_Fn>* _228156_f) {
	jule::Ptr<_1a79ab309_FnIns> _22827_ins = _1a79a9a88_instance((*(_228156_f)));;
	if (((*((*(_228156_f))))._field_Instances.len() != 0LL)) {
		return _22827_ins;;
	};
	(*(_22827_ins))._field_Owner=(*(_228136_s));
	_1a79a9d96_appendInstance((*(_228156_f)).ptr(), &(_22827_ins));
	(*_22827_ins.alloc)._field_reloaded=true;
	if (_1a68463d7_reloadFnInsTypes(_self_, _22827_ins)) {
		return _22827_ins;;
	};
	return nullptr;;
}



inline void _1a685303c_checkTypeMethod(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _229537_s, jule::Ptr<_1a79a8328_Fn>* _229557_f) {
	if (((*((*(_229557_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a79ab309_FnIns> _23007_ins = (*((*(_229557_f))))._field_Instances[0LL];;
	if (((*((*(_23007_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a68559e0_checkFnIns(_self_, &(_23007_ins));
}



inline jule::Ptr<_1a79ab309_FnIns> _1a68534e3_checkStructInsOp(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _230838_s, jule::Ptr<_1a79a8328_Fn>* _230858_f, jule::Fn<jule::Bool,jule::Ptr<_1a79a8328_Fn>> _230866_p) {
	if (((((*(_230858_f)) == nullptr) || ((*((*(_230858_f))))._field_Generics.len() > 0LL)) || (!(_230866_p((*(_230858_f))))))) {
		return nullptr;;
	};
	return (*((*(_230858_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a68538de_checkStructEnv(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _231836_s, jule::Ptr<_1a795c013_Token> _231855_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a7a947aa_typeChecker _23197_tc = _1a7a947aa_typeChecker{._field_s=(*((*((*(_231836_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_231836_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_231836_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1a7a937ba_referencer>(_1a7a937ba_referencer{._field_ident=(*(*((*(_231836_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231836_s))))._field_Decl, &__jule_any_type64), }), ._field_refers=(*((*(_231836_s))))._field_Refers, };;
	if (((*((*(_231836_s))))._field_Generics.len() > 0LL)) {
		_23197_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>::alloc(0LL, (*((*(_231836_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231836_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abec2222:;
			if (it != expr_end) {
				jule::I64 _23329_i = it - expr->begin();
				jule::Ptr<_1a7a81016_InsGeneric> _233216_g = *it;
				{
					jule::Ptr<_1a797e6c8_GenericDecl> _23339_decl = (*(*((*(_231836_s))))._field_Decl.alloc)._field_Generics[_23329_i];;
					{ jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> &__jule_push_dest = _23197_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a7a81b0a_TypeAlias>(_1a7a81b0a_TypeAlias{._field_Token=(*_23339_decl.alloc)._field_Token, ._field_Ident=(*(_23339_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_233216_g))._field_Kind}), })); };
				}
				_iter_next_1abec2222:;
				++it;
				_23329_i++;
				goto _iter_begin_1abec2222;
			}
			_iter_end_1abec2222:;
		};
	};
	jule::Ptr<_1a7a4b18a_SymbolTable> _23427_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a683a035_setCurrentFile(_self_, _23427_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231836_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a7a4b18a_SymbolTable> _23468_file = _1a683655e_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_231836_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_23468_file != nullptr)) {
			_1a683a035_setCurrentFile(_self_, _23468_file);
		};
	};
	if (((*((*(_231836_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a68063ec_constraintChecker> _23538_cc = _1a6840bc8_constraintChecker(_self_);;
		(*(_23538_cc))._field_et=_231855_errorToken;
		(*_23538_cc.alloc)._field_si=(*(_231836_s));
		(*_23538_cc.alloc)._field_genericsA=_23197_tc._field_useGenerics;
		(*_23538_cc.alloc)._field_uniq=true;
		if ((!(_1a6807332_check(_23538_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231836_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _23668_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_23197_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231836_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abecaa33:;
			if (it != expr_end) {
				jule::Ptr<_1a685a682_Var> _236816_v = *it;
				{
					_1a684d9c7_checkVarDecl(_self_, &(_236816_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));
					_1a68525d0_checkVar(_self_, &(_236816_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _23668_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1abecaa33:;
				++it;
				goto _iter_begin_1abecaa33;
			}
			_iter_end_1abecaa33:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_23197_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a7a5322a_Eval> _23797_eval = _1a6842900_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));;
	(*((*(_231836_s))))._field_Comparable=(!((*(*((*(_231836_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231836_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abece77e:;
		if (it != expr_end) {
			jule::Ptr<_1a7995535_FieldIns> _238115_f = *it;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _23828_kind = _1a7a9be55_checkDecl(&_23197_tc, &((*((*((*(_238115_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_23828_kind != nullptr) && __jule_func_result);
				if ((_23828_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231836_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231836_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_231836_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_231836_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1abece77e;
				};
				(*_238115_f.alloc)._field_Kind=_23828_kind;
				(*((*(_231836_s))))._field_Mutable=((*((*(_231836_s))))._field_Mutable || ((!((*(*(_238115_f))._field_Decl.alloc)._field_Mutable)) && _1a7a8427d_Mutable((*(_238115_f))._field_Kind)));
				(*((*(_231836_s))))._field_Comparable=((*((*(_231836_s))))._field_Comparable && _1a7a83ee7_Comparable((*(_238115_f))._field_Kind));
				if (((*(*(_238115_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1abece77e;
				};
				(*(_23797_eval))._field_prefix=(*_238115_f.alloc)._field_Kind;
				(*_23797_eval.alloc)._field_field=_238115_f;
				(*_238115_f.alloc)._field_Default=_1a7a7148a_evalExpr(_23797_eval, (*(*(_238115_f))._field_Decl.alloc)._field_Default);
				if (((*_238115_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1abece77e;
				};
				;
				_1a6842e61_checkAssignType(_self_, false, &((*_238115_f.alloc)._field_Kind), &((*_238115_f.alloc)._field_Default), (*((*(*(_238115_f))._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1abece77e:;
			++it;
			goto _iter_begin_1abece77e;
		}
		_iter_end_1abece77e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a6853cda_precheckStructIns(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _241539_s, jule::Ptr<_1a795c013_Token> _241558_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a68538de_checkStructEnv(_self_, _241539_s, _241558_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241539_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abed937c:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _242015_f = *it;
			{
				if (((*(_242015_f))._field_Generics.len() == 0LL)) {
					if ((_1a6852bc9_readyToCheckFn(_self_, _241539_s, &(_242015_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1abed937c:;
			++it;
			goto _iter_begin_1abed937c;
		}
		_iter_end_1abed937c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a6854093_checkStructIns(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns>* _243036_s) {
	{
		auto expr = &((*((*(_243036_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abedac96:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _243115_f = *it;
			{
				_1a685303c_checkTypeMethod(_self_, _243036_s, &(_243115_f));
			}
			_iter_next_1abedac96:;
			++it;
			goto _iter_begin_1abedac96;
		}
		_iter_end_1abedac96:;
	};
}



inline void _1a685434b_checkTypeStruct(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _243637_s) {
	if ((*((*(_243637_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243637_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abedc759:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _244915_ins = *it;
			{
				_1a6854093_checkStructIns(_self_, &(_244915_ins));
			}
			_iter_next_1abedc759:;
			++it;
			goto _iter_begin_1abedc759;
		}
		_iter_end_1abedc759:;
	};
}



inline void _1a6854549_checkStructTypes(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abedd705:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _245515_s = *it;
			{
				_1a685434b_checkTypeStruct(_self_, &(_245515_s));
			}
			_iter_next_1abedd705:;
			++it;
			goto _iter_begin_1abedd705;
		}
		_iter_end_1abedd705:;
	};
}



inline void _1a6854802_checkStructInsOperators(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79960d5_StructIns> _246044_s) {
	{
		auto expr = &((*(_246044_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abede67e:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _246115_m = *it;
			{
				{
					auto &_match_expr{ (*(_246115_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1abeded00:;
						{
							(*(_246044_s))._field_Operators._field_Eq=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685c530_Eq);
							(*_246044_s.alloc)._field_Comparable=((*_246044_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1abee03d8:;
						{
							(*(_246044_s))._field_Operators._field_Gt=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685c7e9_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1abee044e:;
						{
							(*(_246044_s))._field_Operators._field_GtEq=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685cab3_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1abee04b5:;
						{
							(*(_246044_s))._field_Operators._field_Lt=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685cd7c_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1abee052b:;
						{
							(*(_246044_s))._field_Operators._field_LtEq=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685d146_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1abee05a3:;
						{
							(*(_246044_s))._field_Operators._field_Shl=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685d784_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1abee062a:;
						{
							(*(_246044_s))._field_Operators._field_Shr=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685da4d_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1abee06a2:;
						{
							(*(_246044_s))._field_Operators._field_Add=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685dd17_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1abee0729:;
						{
							(*(_246044_s))._field_Operators._field_Sub=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685e0d1_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1abee07a1:;
						{
							(*(_246044_s))._field_Operators._field_Div=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685e39a_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1abee0828:;
						{
							(*(_246044_s))._field_Operators._field_Mul=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685e664_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1abee08a0:;
						{
							(*(_246044_s))._field_Operators._field_Mod=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685e92d_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1abee0927:;
						{
							(*(_246044_s))._field_Operators._field_BitAnd=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685ebe7_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1abee099e:;
						{
							(*(_246044_s))._field_Operators._field_BitOr=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a685eeb1_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1abee0a26:;
						{
							(*(_246044_s))._field_Operators._field_BitXor=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a686027a_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1abee0a9d:;
						{
							(*(_246044_s))._field_Operators._field_Neg=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a68608b8_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1abee0b25:;
						{
							(*(_246044_s))._field_Operators._field_Pos=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6860b82_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1abee0b9c:;
						{
							(*(_246044_s))._field_Operators._field_BitNot=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6860e4b_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1abee0c24:;
						{
							(*(_246044_s))._field_Operators._field_AddAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6861589_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1abee0c9b:;
						{
							(*(_246044_s))._field_Operators._field_SubAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6861853_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1abee0d23:;
						{
							(*(_246044_s))._field_Operators._field_DivAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6861b1c_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1abee0d9a:;
						{
							(*(_246044_s))._field_Operators._field_MulAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6861dd6_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1abee0e22:;
						{
							(*(_246044_s))._field_Operators._field_ModAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a68621a0_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1abee0e99:;
						{
							(*(_246044_s))._field_Operators._field_ShlAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6862469_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1abee1021:;
						{
							(*(_246044_s))._field_Operators._field_ShrAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6862733_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1abee1098:;
						{
							(*(_246044_s))._field_Operators._field_BitOrAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a68629ec_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1abee1120:;
						{
							(*(_246044_s))._field_Operators._field_BitAndAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6862cb6_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1abee1197:;
						{
							(*(_246044_s))._field_Operators._field_BitXorAssign=_1a68534e3_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a6863080_BitXorAssign);
						}
					}
					_match_end_1abee00ca:;
				};
			}
			_iter_next_1abede67e:;
			++it;
			goto _iter_begin_1abede67e;
		}
		_iter_end_1abede67e:;
	};
}



inline void _1a6854aaa_precheckStructType(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a7993357_Struct>* _252440_s) {
	if ((*((*(_252440_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252440_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252440_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a79960d5_StructIns> _25358_ins = _1a79937b9_instance((*(_252440_s)));;
		(*(_25358_ins))._field_Checked=true;
		_1a7993ac7_appendInstance((*(_252440_s)).ptr(), &(_25358_ins));
		_1a6853cda_precheckStructIns(_self_, &(_25358_ins), nullptr);
	};
	_1a6854802_checkStructInsOperators(_self_, (*((*(_252440_s))))._field_Instances[0LL]);
}



inline void _1a6854ca8_precheckStructTypes(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0071d0:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _254515_s = *it;
			{
				_1a6854aaa_precheckStructType(_self_, &(_254515_s));
			}
			_iter_next_1ac0071d0:;
			++it;
			goto _iter_begin_1ac0071d0;
		}
		_iter_end_1ac0071d0:;
	};
}



inline void _1a6855061_checkRets(_1a6837818_Sema* _self_, jule::Ptr<_1a79ab309_FnIns>* _255030_f) {
	if (_1a79a879b_IsVoid((*((*(_255030_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a68574d6_missingRetChecker _25543_mrc = static__1a685789e_new();;
	jule::Bool _25553_ok = _1a68589c1_check(&_25543_mrc, (*((*(_255030_f))))._field_Scope);;
	if ((!(_25553_ok))) {
		_1a683a453_pushErr(_self_, (*(*((*(_255030_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a68553c4_checkFnInsSc(_1a6837818_Sema* _self_, jule::Ptr<_1a79ab309_FnIns>* _256133_f, jule::Ptr<_1a79de45d_scopeChecker>* _256149_sc) {
	_1a6835b13_appendRetVars(&((*((*((*(_256149_sc))))._field_table))._field_Vars), _256133_f);
	_1a6835dee_appendParamVars(&((*(*((*(_256149_sc))))._field_table.alloc)._field_Vars), _256133_f);
	_1a68361da_appendGenericTypeAliases(&((*(*((*(_256149_sc))))._field_table.alloc)._field_TypeAliases), _256133_f);
	_1a6376126_check((*(_256149_sc)), &((*((*((*(_256133_f))))._field_Decl))._field_Scope), &((*((*(_256133_f))))._field_Scope));
	if ((!(_1a79e2032_stopped((*(_256149_sc)).ptr())))) {
		_1a6855061_checkRets(_self_, _256133_f);
	};
}



inline void _1a6855737_checkFnInsCaller(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _257438_f, jule::Ptr<_1a795c013_Token> _257453_caller) {
	if ((*((*((*(_257438_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a7a4b18a_SymbolTable> _25797_old = (*((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a683a035_setCurrentFile((*((*((*(_257438_f))))._field_Decl))._field_sema, _25797_old);
	});;
	jule::Ptr<_1a7a4b18a_SymbolTable> _25817_file = _1a683655e_findFile(&((*(*((*((*(_257438_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_257438_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_25817_file != nullptr)) {
		_1a683a035_setCurrentFile((*((*((*(_257438_f))))._field_Decl))._field_sema, _25817_file);
	};
	jule::Ptr<_1a79de45d_scopeChecker> _25867_sc = _1a680ad4c_newScopeChecker(&((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema), (*(_257438_f)));;
	(*(_25867_sc))._field_calledFrom=_257453_caller;
	_1a68553c4_checkFnInsSc(_self_.ptr(), _257438_f, &(_25867_sc));
	if (((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_257438_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_257438_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a68559e0_checkFnIns(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79ab309_FnIns>* _259632_f) {
	_1a6855737_checkFnInsCaller(_self_, _259632_f, nullptr);
}



inline void _1a6855c98_checkFunc(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _260031_f) {
	if ((*((*(_260031_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260031_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260031_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac01a479:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _261015_ins = *it;
			{
				_1a68559e0_checkFnIns(_self_, &(_261015_ins));
			}
			_iter_next_1ac01a479:;
			++it;
			goto _iter_begin_1ac01a479;
		}
		_iter_end_1ac01a479:;
	};
}



inline void _1a6856051_checkTestFn(_1a6837818_Sema* _self_, jule::Ptr<_1a79ab309_FnIns>* _261532_f) {
	if ((*((*((*(_261532_f))))._field_Decl))._field_Public) {
		_1a683a453_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261532_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a79a879b_IsVoid((*((*(_261532_f))))._field_Decl)))) || ((*(*((*(_261532_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261532_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261532_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_261532_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1a683a453_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7a8e002_Sptr> _26337_sptr = _1a7a852d4_Sptr((*((*((*(_261532_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_26337_sptr == nullptr)) {
		_1a683a453_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a79960d5_StructIns> _26403_s = _1a7a865c1_Struct((*(_26337_sptr))._field_Elem.ptr());;
	if (((_26403_s == nullptr) || (!(_1a681c875_isStdPackage(&((*((*((*((*(_26403_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a683a453_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a683a7b6_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a6856309_precheckFunc(jule::Ptr<_1a6837818_Sema> _self_, jule::Ptr<_1a79a8328_Fn>* _264834_f) {
	if ((*((*(_264834_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264834_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264834_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a79ab309_FnIns> _26598_ins = _1a79a9802_instanceForce((*(_264834_f)));;
		{ jule::Slice<jule::Ptr<_1a79ab309_FnIns>> &__jule_push_dest = (*((*(_264834_f))))._field_Instances; __jule_push_dest.push(_26598_ins); };
		jule::Bool _26614_ok = _1a68463d7_reloadFnInsTypes(_self_, _26598_ins);;
		(*(_26598_ins))._field_reloaded=true;
		if ((_26614_ok && _1a7a9d51c_hasDirective(&((*((*(_264834_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1a6856051_checkTestFn(_self_, &(_26598_ins));
		};
	};
}



inline void _1a6856507_precheckFuncs(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcc9ce9:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _267215_decl = *it;
			{
				{
					auto expr = &((*(_267215_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abcd41ee:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _267316_m = *it;
						{
							_1a6856309_precheckFunc(_self_, &(_267316_m));
						}
						_iter_next_1abcd41ee:;
						++it;
						goto _iter_begin_1abcd41ee;
					}
					_iter_end_1abcd41ee:;
				};
			}
			_iter_next_1abcc9ce9:;
			++it;
			goto _iter_begin_1abcc9ce9;
		}
		_iter_end_1abcc9ce9:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd4573:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _267715_decl = *it;
			{
				_1a6856309_precheckFunc(_self_, &(_267715_decl));
			}
			_iter_next_1abcd4573:;
			++it;
			goto _iter_begin_1abcd4573;
		}
		_iter_end_1abcd4573:;
	};
}



inline void _1a6856705_checkFuncs(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd59b4:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _268415_decl = *it;
			{
				_1a6855c98_checkFunc(_self_, &(_268415_decl));
			}
			_iter_next_1abcd59b4:;
			++it;
			goto _iter_begin_1abcd59b4;
		}
		_iter_end_1abcd59b4:;
	};
}



inline void _1a6856903_checkPackageTypes(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd6795:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _269215_f = *it;
			{
				_1a683a035_setCurrentFile(_self_.ptr(), _269215_f);
				_1a68527cd_checkGlobals(_self_);
				_1a6856507_precheckFuncs(_self_);
				_1a6854ca8_precheckStructTypes(_self_);
			}
			_iter_next_1abcd6795:;
			++it;
			goto _iter_begin_1abcd6795;
		}
		_iter_end_1abcd6795:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd82e1:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _270315_f = *it;
			{
				_1a683a035_setCurrentFile(_self_, _270315_f);
				_1a6856705_checkFuncs(_self_);
				_1a6854549_checkStructTypes(_self_);
			}
			_iter_next_1abcd82e1:;
			++it;
			goto _iter_begin_1abcd82e1;
		}
		_iter_end_1abcd82e1:;
	};
}



inline void _1a6856b01_setFileSemaFields(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcd98b9:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _271115_f = *it;
			{
				(*(_271115_f))._field_sema=_self_;
			}
			_iter_next_1abcd98b9:;
			++it;
			goto _iter_begin_1abcd98b9;
		}
		_iter_end_1abcd98b9:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcda524:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _271415_st = *it;
			{
				(*(_271415_st))._field_sema=_self_;
			}
			_iter_next_1abcda524:;
			++it;
			goto _iter_begin_1abcda524;
		}
		_iter_end_1abcda524:;
	};
}



inline void _1a6856cee_setSemaFields(jule::Ptr<_1a6837818_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcdb1d4:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _272015_file = *it;
			{
				_1a683a035_setCurrentFile(_self_.ptr(), _272015_file);
				_1a6856b01_setFileSemaFields(_self_);
			}
			_iter_next_1abcdb1d4:;
			++it;
			goto _iter_begin_1abcdb1d4;
		}
		_iter_end_1abcdb1d4:;
	};
}



inline void _1a68570a7_check(jule::Ptr<_1a6837818_Sema> _self_, jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _272627_files) {
	(*(_self_))._field_files=(*(_272627_files));
	_1a683ddc4_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a6856cee_setSemaFields(_self_);
	_1a683e8b9_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a683e2c0_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a683e4bd_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a68517dd_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a6856903_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a6837818_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1a68574d6_missingRetChecker static__1a685789e_new(void) {
	return _1a68574d6_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a6857bac_checkConditional(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680e7e0_Conditional> _277432_c) {
	{
		auto expr = &((*(_277432_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abce1827:;
		if (it != expr_end) {
			jule::Ptr<_1a680e0c5_If> _277515_elif = *it;
			{
				if ((_277515_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a6858680_checkScope(_self_, (*(_277515_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1abce1827:;
			++it;
			goto _iter_begin_1abce1827;
		}
		_iter_end_1abce1827:;
	};
	return (((*_277432_c.alloc)._field_Default != nullptr) && _1a6858680_checkScope(_self_, (*(*(_277432_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a6857eed_checkMatch(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a79db04d_Match> _278626_m) {
	{
		auto expr = &((*(_278626_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abce38b2:;
		if (it != expr_end) {
			jule::Ptr<_1a79dbb97_Case> _278715_c = *it;
			{
				if ((_278715_c == nullptr)) {
					return false;;
				};
				jule::I64 _27914_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27924_ok = _1a6858680_checkScope(_self_, (*(_278715_c))._field_Scope);;
				{
					
					if ((_27914_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1abce5342:;
						{
							return false;;
						}
					}
					else if ((!(_27924_ok))) {
						_case_begin_1abce53db:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1abce5452;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1abce5452:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278715_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1abce38b2;
						}
					}
					_match_end_1abce5298:;
				};
			}
			_iter_next_1abce38b2:;
			++it;
			goto _iter_begin_1abce38b2;
		}
		_iter_end_1abce38b2:;
	};
	return (((*_278626_m.alloc)._field_Default != nullptr) && _1a6858680_checkScope(_self_, (*(*(_278626_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a685833e_checkInfIter(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680eadc_InfIter> _281228_it) {
	jule::I64 _28133_n = (*(_self_))._field_breaked.len();;
	if (_1a6858680_checkScope(_self_, (*(_281228_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28133_n);;
		return true;;
	};
	if ((_28133_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _28194_itaddr = static_cast<jule::Uintptr>(_281228_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28133_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1abce9203:;
			if (it != expr_end) {
				jule::Uintptr _282011_addr = *it;
				{
					if ((_28194_itaddr == _282011_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28133_n);;
						return false;;
					};
				}
				_iter_next_1abce9203:;
				++it;
				goto _iter_begin_1abce9203;
			}
			_iter_end_1abce9203:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28133_n);;
	};
	return true;;
}



inline jule::Bool _1a6858680_checkScope(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680dba7_Scope> _283126_s) {
	if ((_283126_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283126_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcea7ed:;
		if (it != expr_end) {
			jule::Any _283515_st = *it;
			{
				{
					auto &_match_expr{ _283515_st };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1abceb4be:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1abceb29e:;
						{
							jule::Uintptr _28415_addr = (*(_283515_st.unsafe_cast_ptr<_1a79d947a_BreakSt>()))._field_It;;
							if ((_28415_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_28415_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1abceb546:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1abceb5bd:;
						{
							if (_1a685833e_checkInfIter(_self_, _283515_st.cast_ptr<_1a680eadc_InfIter>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1abceb645:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1abceb6bc:;
						{
							if (_1a6858680_checkScope(_self_, _283515_st.cast_ptr<_1a680dba7_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1abceb744:;
						{
							{
								auto &_match_expr{ (*(_283515_st.cast_ptr<_1a7a51503_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1abd00506:;
									{
										return true;;
									}
								}
								_match_end_1abd00490:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1abceb7bb:;
						{
							if (_1a6857bac_checkConditional(_self_, _283515_st.cast_ptr<_1a680e7e0_Conditional>(&__jule_any_type34))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1abceb843:;
						{
							if (_1a6857eed_checkMatch(_self_, _283515_st.cast_ptr<_1a79db04d_Match>(&__jule_any_type46))) {
								return true;;
							};
						}
					}
					_match_end_1abceb3ae:;
				};
			}
			_iter_next_1abcea7ed:;
			++it;
			goto _iter_begin_1abcea7ed;
		}
		_iter_end_1abcea7ed:;
	};
	return false;;
}



inline jule::Bool _1a68589c1_check(_1a68574d6_missingRetChecker* _self_, jule::Ptr<_1a680dba7_Scope> _287721_s) {
	return _1a6858680_checkScope(_self_, _287721_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68574d6_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a685aa5b_IsInitialized(_1a685a682_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a685ace2_IsTypeInferred(_1a685a682_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1a685b078_untypedConstant(_1a685a682_Var* _self_) {
	return (_1a685ace2_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a685a682_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a685bb28_Dispose(jule::Ptr<_1a79a8328_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1a79a879b_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1a79a7206_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a685bde2_Str(jule::Ptr<_1a79a8328_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1a79a879b_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1a79a7206_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a79ab309_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1a7a8a4c6_Prim> _393_prim = _1a7a8504d_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1a7a8d95d_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1a685c266_logical(jule::Ptr<_1a79a8328_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1a79a879b_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1a79a7206_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a79ab309_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1a7a8a4c6_Prim> _643_prim = _1a7a8504d_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1a7a8d6c7_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1a7a865c1_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1a685c530_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _7215_f) {
	return static__1a685c266_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a685c7e9_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _7715_f) {
	return static__1a685c266_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a685cab3_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _8217_f) {
	return static__1a685c266_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a685cd7c_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _8715_f) {
	return static__1a685c266_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a685d146_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _9217_f) {
	return static__1a685c266_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a685d4ba_result(jule::Ptr<_1a79a8328_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1a79a879b_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1a79a7206_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a79ab309_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1a7a865c1_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a685d784_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _11816_f) {
	return static__1a685d4ba_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a685da4d_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _12316_f) {
	return static__1a685d4ba_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a685dd17_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _12816_f) {
	return static__1a685d4ba_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a685e0d1_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _13316_f) {
	return static__1a685d4ba_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a685e39a_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _13816_f) {
	return static__1a685d4ba_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a685e664_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _14316_f) {
	return static__1a685d4ba_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a685e92d_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _14816_f) {
	return static__1a685d4ba_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a685ebe7_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _15319_f) {
	return static__1a685d4ba_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a685eeb1_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _15818_f) {
	return static__1a685d4ba_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a686027a_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _16319_f) {
	return static__1a685d4ba_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a68605ee_unary(jule::Ptr<_1a79a8328_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1a79a879b_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1a79a7206_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a79ab309_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1a7a865c1_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a68608b8_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _18716_f) {
	return static__1a68605ee_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a6860b82_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _19216_f) {
	return static__1a68605ee_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a6860e4b_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _19719_f) {
	return static__1a68605ee_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a68612c0_assign(jule::Ptr<_1a79a8328_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1a79a879b_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1a79a7206_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a6861589_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _22122_f) {
	return static__1a68612c0_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a6861853_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _22622_f) {
	return static__1a68612c0_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a6861b1c_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _23122_f) {
	return static__1a68612c0_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a6861dd6_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _23622_f) {
	return static__1a68612c0_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a68621a0_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _24122_f) {
	return static__1a68612c0_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a6862469_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _24622_f) {
	return static__1a68612c0_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a6862733_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _25122_f) {
	return static__1a68612c0_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a68629ec_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _25624_f) {
	return static__1a68612c0_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a6862cb6_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _26125_f) {
	return static__1a68612c0_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a6863080_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn> _26625_f) {
	return static__1a68612c0_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a685b50c_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a7a386b6_pushErr(_1a7a381bb_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1a7a3894c_checkTrait(_1a7a381bb_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7a839ca_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a79bb6d2_Trait> _1277_trt = _1a7a86857_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1a7a852d4_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1abd41ea4:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1a7a852d4_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a7a865c1_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1abd4204d;
			}
		}
		else if ((_1a7a865c1_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1abd4204d:;
			{
				jule::Ptr<_1a79960d5_StructIns> _1384_s = _1a7a865c1_Struct((*(_self_))._field_src);;
				if ((!(_1a7994996_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1a7a36c69_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1a7a386b6_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a86857_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1abd420c5:;
			{
				jule::Ptr<_1a79bb6d2_Trait> _1488_base = _1a7a86857_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1abd47196:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abd47273:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abd47b36:;
								if (it != expr_end) {
									jule::Ptr<_1a7993357_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1abd47273;
										};
									}
									_iter_next_1abd47b36:;
									++it;
									goto _iter_begin_1abd47b36;
								}
								_iter_end_1abd47b36:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1abd47273:;
						++it;
						goto _iter_begin_1abd47273;
					}
					_iter_end_1abd47273:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abd48054:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1a79a8328_Fn> _1629_m2 = _1a79bc381_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a79ab309_FnIns> _1665_m1k = _1a6844e85_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1a79ab309_FnIns> _1675_m2k = _1a6844e85_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1a79ac272_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1abd48054:;
						++it;
						goto _iter_begin_1abd48054;
					}
					_iter_end_1abd48054:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abd41e2c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abd41d94:;
	};
}



inline jule::Bool _1a7a38bd3_checkPtr(_1a7a381bb_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7a839ca_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a927b9_Ptr> _1827_dest = _1a7a8556a_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a7a93303_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a7a83106_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a7a38e69_checkPrim(_1a7a381bb_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a7a8a4c6_Prim> _1914_prim = _1a7a8504d_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1a7a8dbe4_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a7a83106_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a7a39365_typeEnum(_1a7a381bb_typeCompatibilityChecker* _self_, jule::Ptr<_1a79c05e8_TypeEnum>* _19925_e, jule::Ptr<_1a7a828ec_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd4ede6:;
		if (it != expr_end) {
			jule::Ptr<_1a79c0021_TypeEnumItem> _20015_item = *it;
			{
				if (_1a7a83106_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a79c05e8_TypeEnum> _2048_ke = _1a7a85a87_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1abd4ede6;
				};
				if (_1a7a39365_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1abd4ede6:;
			++it;
			goto _iter_begin_1abd4ede6;
		}
		_iter_end_1abd4ede6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a395eb_checkTypeEnum(_1a7a381bb_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a7a83106_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a79c05e8_TypeEnum> _2197_e = _1a7a85a87_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a7a39365_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a7a39882_check(_1a7a381bb_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a7a8556a_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a7a38bd3_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a7a8479a_NilCompatible((*(_self_))._field_dest)) {
		if (_1a7a839ca_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a7a8504d_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1abd55649:;
			{
				__jule_func_result = _1a7a38e69_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1abd556d2:;
			{
				__jule_func_result = _1a7a395eb_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a86857_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1abd5510a:;
			{
				__jule_func_result = _1a7a3894c_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abd54c20:;
			{
				__jule_func_result = _1a7a83106_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1abd54b10:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a381bb_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a7a3a3ee_pushErr(_1a7a39e6a_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args) {
	_1a683a453_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25536_args);
}



inline jule::Bool _1a7a3a685_checkValidity(_1a7a39e6a_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1a7a8633a_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd5840a:;
			{
				jule::Ptr<_1a79ab309_FnIns> _2634_f = _1a7a8633a_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1a79ac78e_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1abd59c58:;
						{
							_1a7a3a3ee_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1abd59d02:;
						{
							_1a7a3a3ee_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*((*(_2634_f))._field_Decl))._field_Statically)) && _1a79a8a32_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_1abd59d68:;
						{
							_1a7a3a3ee_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*((*(_2634_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1abd59dce:;
						{
							_1a7a3a3ee_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a683a7b6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1abd59b7b:;
				};
			}
		}
		else if ((_1a7a86d74_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd584a4:;
			{
				_1a7a3a3ee_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1abd58383:;
	};
	return _2607_valid;;
}



inline jule::Bool _1a7a3a91b_checkConst(_1a7a39e6a_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a7a8504d_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2923_kind = (*(_1a7a8504d_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1bd82bae2_IsFloat(_2923_kind)) {
			_case_begin_1ac0295a9:;
			{
				if ((!(_1a7a37121_floatAssignable(&(_2923_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else if (_1bd82b7a1_IsInt(_2923_kind)) {
			_case_begin_1ac029642:;
			{
				if ((!(_1a7a37bd2_intAssignable(_2923_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else {
			_case_begin_1ac029543:;
			{
				return false;;
			}
		}
		_match_end_1ac029411:;
	};
	return true;;
}



inline jule::Bool _1a7a3aba2_checkCompatibility(_1a7a39e6a_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ac02b875:;
			{
				return false;;
			}
		}
		else if ((!(_1a7a3a685_checkValidity(_self_)))) {
			_case_begin_1ac02b8db:;
			{
				return false;;
			}
		}
		else if (_1a7a3a91b_checkConst(_self_)) {
			_case_begin_1ac02b952:;
			{
				return true;;
			}
		}
		else if ((_1a7a85801_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac02b9b8:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _3218_dkind = (*(_self_))._field_dest;;
				if ((_1a7a85801_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3218_dkind=(*((*(_1a7a85801_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a7a8a4c6_Prim> _3254_prim = _1a7a8504d_Prim((*(_self_))._field_dest);;
				if (((_3254_prim == nullptr) || _1a7a8dbe4_IsAny(_3254_prim.ptr()))) {
					goto _match_end_1ac02ab93;
				};
				jule::Ptr<_1a7a828ec_TypeKind> _3308_dest = (*(*(_1a7a85801_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1a68438bd_checkTypeCompatibility((*(_self_))._field_s, &(_3308_dest), &(_3218_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1ac02ab93:;
	};
	return _1a6844292_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a7a3ae38_check(_1a7a39e6a_assignTypeChecker* _self_) {
	jule::Bool _3373_ok = _1a7a3aba2_checkCompatibility(_self_);;
	if ((_3373_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a7a9ee03_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3373_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a39e6a_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac045cac_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ac0474a6:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1ac0482ba:;
						{
							_36012_elem=(*(_1a7a85d1d_Arr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac048210:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7974789_ArrTypeDecl>()))._field_Elem;
				return _1a7a3d04a_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1ac047440:;
	};
	return false;;
}

inline jule::Bool _1ac0478a2_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ac04ae8d:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1ac04bb1a:;
						{
							_36012_elem=(*(_1a7a860a4_Slc((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac04bbe7:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a79738ed_SlcTypeDecl>()))._field_Elem;
				return _1a7a3d04a_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1ac04ae27:;
	};
	return false;;
}

inline jule::Bool _1ac04697d_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac04ea41:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1ac0508dd:;
						{
							_36012_elem=(*(_1a7a8556a_Ptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac05079a:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7973ee7_PtrTypeDecl>()))._field_Elem;
				return _1a7a3d04a_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1ac04e9ca:;
	};
	return false;;
}

inline jule::Bool _1ac04ee3c_annotateConstraintElem(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac053193:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1ac0540b7:;
						{
							_36012_elem=(*(_1a7a852d4_Sptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1ac053dec:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7973568_SptrTypeDecl>()))._field_Elem;
				return _1a7a3d04a_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1ac05312c:;
	};
	return false;;
}



inline jule::Bool _1a7a3c236_annotateConstraintMap(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _37742_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac033c67:;
			{
				jule::Ptr<_1a7a91169_Map> _3808_m = _1a7a86add_Map((*(_37742_k)).ptr());;
				jule::Ptr<_1a7974ed7_MapTypeDecl> _3818_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7974ed7_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3818_m2))._field_Key;
				if ((!(_1a7a3d04a_annotateConstraint(_self_, &((*(_3808_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3818_m2.alloc)._field_Val;
				__jule_func_result = _1a7a3d04a_annotateConstraint(_self_, &((*_3808_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1ac033c01:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a3c577_annotateConstraintTup(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _39242_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac036b7c:;
			{
				jule::Ptr<_1a7973bea_TupleTypeDecl> _3958_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a7973bea_TupleTypeDecl>();;
				jule::Ptr<_1a7a905b9_Tuple> _3968_tup2 = _1a7a86d74_Tup((*(_39242_k)).ptr());;
				{
					auto expr = &((*(_3968_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac038497:;
					if (it != expr_end) {
						jule::Ptr<_1a7a828ec_TypeKind> _39716_t2 = *it;
						{
							{
								auto expr = &((*(_3958_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac038e04:;
								if (it != expr_end) {
									jule::Ptr<_1a79724bd_TypeDecl> _39817_t = *it;
									{
										(*(_self_))._field_c=_39817_t;
										if (_1a7a3d04a_annotateConstraint(_self_, &(_39716_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1ac038e04:;
									++it;
									goto _iter_begin_1ac038e04;
								}
								_iter_end_1ac038e04:;
							};
						}
						_iter_next_1ac038497:;
						++it;
						goto _iter_begin_1ac038497;
					}
					_iter_end_1ac038497:;
				};
			}
		}
		_match_end_1ac036b16:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a3c8b8_annotateConstraintFn(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _40941_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac0393ee:;
			{
				jule::Ptr<_1a798417d_FnDecl> _4128_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a798417d_FnDecl>();;
				jule::Ptr<_1a79ab309_FnIns> _4138_f = _1a7a8633a_Fn((*(_40941_k)).ptr());;
				{
					auto expr = &((*(_4138_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac03b39b:;
					if (it != expr_end) {
						jule::I64 _4149_i = it - expr->begin();
						jule::Ptr<_1a79aa281_ParamIns> _41416_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4128_pf))._field_Params[_4149_i]))._field_Kind;
							if (_1a7a3d04a_annotateConstraint(_self_, &((*(_41416_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1ac03b39b:;
						++it;
						_4149_i++;
						goto _iter_begin_1ac03b39b;
					}
					_iter_end_1ac03b39b:;
				};
				if (((*_4128_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4128_pf))._field_Result.alloc)._field_Kind;
					if (_1a7a3d04a_annotateConstraint(_self_, &((*_4138_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1ac039388:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a3cc09_annotateConstraintIdent(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _43044_k) {
	jule::Ptr<_1a7972ac8_IdentTypeDecl> _4317_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a7972ac8_IdentTypeDecl>(&__jule_any_type74);;
	jule::Ptr<_1a79960d5_StructIns> _4327_s = _1a7a865c1_Struct((*(_43044_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac03ed1c:;
		if (it != expr_end) {
			jule::I64 _4337_i = it - expr->begin();
			jule::Ptr<_1a797e6c8_GenericDecl> _43310_g = *it;
			{
				if (((*(_43310_g))._field_Ident == (*(_4317_ident))._field_Ident)) {
					jule::Ptr<_1a7a81016_InsGeneric> _4359_fg = (*((*(_self_))._field_f))._field_Generics[_4337_i];;
					if ((_4359_fg != nullptr)) {
						return false;;
					};
					_1a7a3d3ad_pushGeneric(_self_, _43044_k, _4337_i);
					return true;;
				};
				if ((_4327_s == nullptr)) {
					goto _iter_next_1ac03ed1c;
				};
				jule::Ptr<_1a79724bd_TypeDecl> _4458_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4317_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac04289c:;
					if (it != expr_end) {
						jule::Ptr<_1a79724bd_TypeDecl> _44616_ig = *it;
						{
							(*(_self_))._field_c=_44616_ig;
							{
								auto expr = &((*(_4327_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac04346e:;
								if (it != expr_end) {
									jule::Ptr<_1a7a81016_InsGeneric> _44817_sg = *it;
									{
										if (_1a7a3d04a_annotateConstraint(_self_, &((*(_44817_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1ac04346e:;
									++it;
									goto _iter_begin_1ac04346e;
								}
								_iter_end_1ac04346e:;
							};
						}
						_iter_next_1ac04289c:;
						++it;
						goto _iter_begin_1ac04289c;
					}
					_iter_end_1ac04289c:;
				};
				(*(_self_))._field_c=_4458_c;
			}
			_iter_next_1ac03ed1c:;
			++it;
			_4337_i++;
			goto _iter_begin_1ac03ed1c;
		}
		_iter_end_1ac03ed1c:;
	};
	return false;;
}



inline jule::Bool _1a7a3d04a_annotateConstraint(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _45939_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac043925:;
			{
				return _1a7a3cc09_annotateConstraintIdent(_self_, _45939_k);;
			}
		}
		_match_end_1ac0438ae:;
	};
	{
		
		if ((_1a7a85d1d_Arr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac0445b3:;
			{
				return _1ac045cac_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a7a860a4_Slc((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac044629:;
			{
				return _1ac0478a2_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a7a8556a_Ptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac044690:;
			{
				return _1ac04697d_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a7a852d4_Sptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac044706:;
			{
				return _1ac04ee3c_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a7a86add_Map((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac04476c:;
			{
				return _1a7a3c236_annotateConstraintMap(_self_, _45939_k);;
			}
		}
		else if ((_1a7a8633a_Fn((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac044d55:;
			{
				return _1a7a3c8b8_annotateConstraintFn(_self_, _45939_k);;
			}
		}
		else if ((_1a7a86d74_Tup((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1ac044dbb:;
			{
				return _1a7a3c577_annotateConstraintTup(_self_, _45939_k);;
			}
		}
		else {
			_case_begin_1ac044904:;
			{
				return false;;
			}
		}
		_match_end_1ac04489e:;
	};
}



inline void _1a7a3d3ad_pushGeneric(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _48432_k, jule::I64 _48446_i) {
	(*((*(_self_))._field_f))._field_Generics[_48446_i]=jule::new_ptr<_1a7a81016_InsGeneric>(_1a7a81016_InsGeneric{._field_Kind=(*(_48432_k)), });
	jule::Ptr<_1a797e6c8_GenericDecl> _4867_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48446_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0571ec:;
		if (it != expr_end) {
			jule::Ptr<_1a7a828ec_TypeKind> _48715_ignored = *it;
			{
				if (((*(_4867_gd))._field_Ident == _1a7a82cb5_Str(_48715_ignored.ptr()))) {
					(*_48715_ignored.alloc)._field_Kind=(*((*(_48432_k))))._field_Kind;
				};
			}
			_iter_next_1ac0571ec:;
			++it;
			goto _iter_begin_1ac0571ec;
		}
		_iter_end_1ac0571ec:;
	};
	if ((((*_4867_gd.alloc)._field_Constraint == nullptr) || ((*((*_4867_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4867_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a7a3d04a_annotateConstraint(_self_, _48432_k);
}



inline jule::Bool _1a7a3d6ee_annotatePrim(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _49940_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a7a40723_annotateAny(_self_, _49940_k);
	return __jule_func_result;;
}



inline jule::Bool _1a7a3da40_annotateArr(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _50339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a91ce6_Arr> _5047_parr = _1a7a85d1d_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5047_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a91ce6_Arr> _5087_arr = _1a7a85d1d_Arr((*(_50339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5047_parr))._field_Elem));
	__jule_func_result = _1a7a40a64_annotateKind(_self_, &((*(_5087_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7a3dd81_annotateSlc(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _51339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a8e9c5_Slc> _5147_pslc = _1a7a860a4_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5147_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a8e9c5_Slc> _5187_slc = _1a7a860a4_Slc((*(_51339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5147_pslc))._field_Elem));
	__jule_func_result = _1a7a40a64_annotateKind(_self_, &((*(_5187_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7a3e27c_checkMapKey(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _52338_k, jule::Ptr<_1a7a828ec_TypeKind>* _52358_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a828ec_TypeKind>* _5247_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52338_k;
	__jule_func_result=_1a7a40a64_annotateKind(_self_, _52358_ck);
	(*(_self_))._field_k=_5247_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7a3e5bd_annotateMap(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _53139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a91169_Map> _5327_pmap = _1a7a86add_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5327_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a91169_Map> _5367_m = _1a7a86add_Map((*(_53139_k)).ptr());;
	__jule_func_result = (_1a7a3e27c_checkMapKey(_self_, (&((*(_5327_pmap))._field_Key)), &((*(_5367_m))._field_Key)) && _1a7a3e27c_checkMapKey(_self_, (&((*(_5327_pmap))._field_Val)), &((*_5367_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a7a3e90e_annotateFn(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _54138_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a79ab309_FnIns> _5427_pf = _1a7a8633a_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5427_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a79ab309_FnIns> _5467_f = _1a7a8633a_Fn((*(_54138_k)).ptr());;
	{
		
		if (((*(_5427_pf))._field_Params.len() != (*(_5467_f))._field_Params.len())) {
			_case_begin_1ac06489c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a79a879b_IsVoid((*(_5427_pf))._field_Decl.ptr()) != _1a79a879b_IsVoid((*(_5467_f))._field_Decl))) {
			_case_begin_1ac064935:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac064814:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a7a828ec_TypeKind>* _5557_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5467_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0667a0:;
		if (it != expr_end) {
			jule::I64 _5568_i = it - expr->begin();
			jule::Ptr<_1a79aa281_ParamIns> _55615_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5427_pf))._field_Params[_5568_i]))._field_Kind));
				__jule_func_result=(_1a7a40a64_annotateKind(_self_, &((*(_55615_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1ac0667a0:;
			++it;
			_5568_i++;
			goto _iter_begin_1ac0667a0;
		}
		_iter_end_1ac0667a0:;
	};
	if ((!(_1a79a879b_IsVoid((*(_5427_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5427_pf))._field_Result));
		__jule_func_result=(_1a7a40a64_annotateKind(_self_, &((*_5467_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5557_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7a3ec50_annotatePtr(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _57039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a927b9_Ptr> _5717_pptr = _1a7a8556a_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5717_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a927b9_Ptr> _5757_ptr = _1a7a8556a_Ptr((*(_57039_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5717_pptr))._field_Elem));
	__jule_func_result = _1a7a40a64_annotateKind(_self_, &((*(_5757_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7a40091_annotateSptr(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _58040_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a8e002_Sptr> _5817_ssptr = _1a7a852d4_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5817_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7a8e002_Sptr> _5857_sptr = _1a7a852d4_Sptr((*(_58040_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5817_ssptr))._field_Elem));
	__jule_func_result = _1a7a40a64_annotateKind(_self_, &((*(_5857_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a7a403d2_annotateStruct(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _59042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a79960d5_StructIns> _5917_s = _1a7a865c1_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a79960d5_StructIns> _5957_s2 = _1a7a865c1_Struct((*(_59042_k)).ptr());;
	if (((*(_5917_s))._field_Generics.len() != (*(_5957_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5917_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0706ee:;
		if (it != expr_end) {
			jule::I64 _5998_i = it - expr->begin();
			jule::Ptr<_1a7a81016_InsGeneric> _59915_g = *it;
			{
				jule::Ptr<_1a7a81016_InsGeneric> _6008_g2 = (*(_5957_s2))._field_Generics[_5998_i];;
				if (_1a7a83106_Equal((*(_59915_g))._field_Kind, (*(_6008_g2))._field_Kind)) {
					goto _iter_next_1ac0706ee;
				};
				(*(_self_))._field_k=(&((*_59915_g.alloc)._field_Kind));
				if ((!(_1a7a40a64_annotateKind(_self_, &((*_6008_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac0706ee:;
			++it;
			_5998_i++;
			goto _iter_begin_1ac0706ee;
		}
		_iter_end_1ac0706ee:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7a40723_annotateAny(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _61239_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6133_kind = _1a7a82cb5_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac073c96:;
		if (it != expr_end) {
			jule::I64 _6147_i = it - expr->begin();
			jule::Ptr<_1a797e6c8_GenericDecl> _61410_g = *it;
			{
				if ((_6133_kind != (*(_61410_g))._field_Ident)) {
					goto _iter_next_1ac073c96;
				};
				jule::Ptr<_1a7a81016_InsGeneric> _6184_t = (*((*(_self_))._field_f))._field_Generics[_6147_i];;
				{
					
					if ((_6184_t == nullptr) || ((*(_6184_t))._field_Kind == nullptr)) {
						_case_begin_1ac0755c2:;
						{
							_1a7a3d3ad_pushGeneric(_self_, _61239_k, _6147_i);
						}
					}
					else if ((!(_1a7a83106_Equal((*(_6184_t))._field_Kind, (*(_61239_k)))))) {
						_case_begin_1ac07565a:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1ac0754b2:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61239_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1ac073c96:;
			++it;
			_6147_i++;
			goto _iter_begin_1ac073c96;
		}
		_iter_end_1ac073c96:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a40a64_annotateKind(_1a7a3b840_dynamicTypeAnnotation* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _63340_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a7a40723_annotateAny(_self_, _63340_k)) {
			_case_begin_1ac077b8a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a8504d_Prim((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac077c01:;
			{
				__jule_func_result = _1a7a3d6ee_annotatePrim(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a85d1d_Arr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac077c67:;
			{
				__jule_func_result = _1a7a3da40_annotateArr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a860a4_Slc((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac077cde:;
			{
				__jule_func_result = _1a7a3dd81_annotateSlc(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a86add_Map((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac077ea9:;
			{
				__jule_func_result = _1a7a3e5bd_annotateMap(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a8633a_Fn((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac078020:;
			{
				__jule_func_result = _1a7a3e90e_annotateFn(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a8556a_Ptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac078086:;
			{
				__jule_func_result = _1a7a3ec50_annotatePtr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a852d4_Sptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac0780ec:;
			{
				__jule_func_result = _1a7a40091_annotateSptr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a7a865c1_Struct((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1ac078174:;
			{
				__jule_func_result = _1a7a403d2_annotateStruct(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac077a69:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac077607:;
	};
}



inline jule::Bool _1a7a40cea_annotate(_1a7a3b840_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1a7a40a64_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a3b840_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a7a41c0d_pushErrToken(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a795c013_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args) {
	_1a683a453_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67828_token, _67843_fmt, _67856_args);
}



inline void _1a7a42071_pushErr(_1a7a4169c_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args) {
	_1a7a41c0d_pushErrToken(_self_, (*(_self_))._field_errorToken, _68223_fmt, _68236_args);
}



inline jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _1a7a42307_getParams(_1a7a4169c_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1a79a6e70_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a7a42648_checkCounts(_1a7a4169c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a79aa281_ParamIns>>* _69528_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6967_n = (*(_69528_params)).len();;
	if (((_6967_n > 0LL) && _1a79a6e70_IsSelf((*((*(_69528_params))[0LL]))._field_Decl.ptr()))) {
		(_6967_n)--;
	};
	jule::I64 _7017_diff = (_6967_n - (*(_self_))._field_args.len());;
	jule::Str _7027_log = jule::Str();;
	{
		
		if ((_7017_diff == 0LL)) {
			_case_begin_1ac084b42:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6967_n > 0LL) && (*(*((*(_69528_params))[(_6967_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1ac084a65:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7017_diff < 0LL) || (_7017_diff > (*(_69528_params)).len()))) {
			_case_begin_1ac084724:;
			{
				_7027_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1ac0846ad:;
			{
				_7027_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1ac084647:;
	};
	_200880c8a_StrBuilder _7137_err = static__2008811b9_New(32LL);;
	_20088172a_WriteStr(&_7137_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_20088172a_WriteStr(&_7137_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69528_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac08742a:;
		if (it != expr_end) {
			jule::I64 _7167_i = it - expr->begin();
			jule::Ptr<_1a79aa281_ParamIns> *_71610_p = it;
			{
				_20088172a_WriteStr(&_7137_err, _1a7a82cb5_Str((*((*(_71610_p))))._field_Kind.ptr()));
				if ((((*(_69528_params)).len() - _7167_i) > 1LL)) {
					_20088172a_WriteStr(&_7137_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac08742a:;
			++it;
			_7167_i++;
			goto _iter_begin_1ac08742a;
		}
		_iter_end_1ac08742a:;
	};
	_2008819d3_WriteByte(&_7137_err, ')');
	_1a7a42071_pushErr(_self_, _7027_log, jule::Slice<jule::Any>::make({jule::Any(_200882022_Str(&_7137_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a42aee_checkArg(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a79aa281_ParamIns>* _72729_p, jule::Ptr<_1a7a51503_Data>* _72748_arg, jule::Ptr<_1a795c013_Token>* _72765_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a79ad5d6_parameterUsesGenerics(_72729_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72729_p))))._field_Decl))._field_Variadic)) && _1a7a4a288_isGoodValueToInfer(_72748_arg));
		if (__jule_func_result) {
			_1a7a3b840_dynamicTypeAnnotation _7329_dta = _1a7a3b840_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72729_p)), ._field_a=(*(_72748_arg)), ._field_errorToken=(*(_72765_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a7a40cea_annotate(&_7329_dta);
		};
		if ((!(__jule_func_result))) {
			_1a7a41c0d_pushErrToken(_self_, (*(_72765_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a68472ea_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, _72765_errorToken)) {
		__jule_func_result = _1a6842e61_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, (*(_72765_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a7a42eea_push(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a79aa281_ParamIns>* _75625_p, jule::Ptr<_1a7976802_Expr> _75643_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a7a828ec_TypeKind> _7577_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7583_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75625_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75625_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75625_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a7a51503_Data> _7667_d = _1a7a7148a_evalExpr((*(_self_))._field_e, _75643_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7577_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7583_oldImmut;
	if ((_7667_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7a42aee_checkArg(_self_, _75625_p, &(_7667_d), &((*(_75643_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7667_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a7a433e6_pushVariadic(_1a7a4169c_fnCallArgChecker* _self_, jule::Ptr<_1a79aa281_ParamIns>* _78033_p, jule::I64 _78051_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7827_variadiced = false;;
	jule::Bool _7833_more = ((_78051_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a799c88e_SliceExprModel> _7847_model = jule::new_ptr<_1a799c88e_SliceExprModel>(_1a799c88e_SliceExprModel{._field_ElemKind=(*((*(_78033_p))))._field_Kind, });;
	jule::Ptr<_1a7a828ec_TypeKind> _7887_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a7a828ec_TypeKind> _7957_oldKind = (*((*(_78033_p))))._field_Kind;;
	(*((*(_78033_p))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>((*(*((*(_78033_p))))._field_Kind.alloc));
	(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78033_p))))._field_Kind=_7957_oldKind;
	});;
	for (; (_78051_i < (*(_self_))._field_args.len()); (_78051_i)++) {
		{
			jule::Ptr<_1a7976802_Expr> _8048_arg = (*(_self_))._field_args[_78051_i];;
			{
				auto &_match_expr{ (*(_8048_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1ac09952a:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e9c5_Slc>(_1a7a8e9c5_Slc{._field_Elem=(*((*(_78033_p))))._field_Kind}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1ac099827:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78033_p))))._field_Kind;
					}
				}
				_match_end_1ac0997c2:;
			};
			jule::Ptr<_1a7a51503_Data> _8178_d = _1a7a70d08_eval((*(_self_))._field_e, _8048_arg);;
			if ((_8178_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1ac0989d0;
			};
			if ((*((*(_8178_d))._field_Kind))._field_Variadic) {
				_7827_variadiced=true;
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a7a42aee_checkArg(_self_, _78033_p, &(_8178_d), &((*(_8048_arg))._field_Token)));
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8178_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1ac09beab:;
						{
							_7847_model=(*(_8178_d))._field_Model.unsafe_cast_ptr<_1a799c88e_SliceExprModel>();
							(*(_7847_model))._field_ElemKind=(*((*(_78033_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1ac09d5c8:;
						{
							_7847_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8178_d))._field_Model); };
						}
					}
					_match_end_1ac09d573:;
				};
				(_78051_i)++;
				goto _iter_end_1ac0989d0;
			};
			__jule_func_result=(__jule_func_result && _1a7a42aee_checkArg(_self_, _78033_p, &(_8178_d), &((*_8048_arg.alloc)._field_Token)));
			(*(_7847_model))._field_Elems=jule::append((*_7847_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_8178_d))._field_Model}));
		}
	_iter_next_1ac0989d0:;
	}
	_iter_end_1ac0989d0:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7887_old;
	if ((_7827_variadiced && _7833_more)) {
		_1a7a41c0d_pushErrToken(_self_, (*((*(_self_))._field_args[_78051_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_7847_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7847_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7a43737_checkArgs(_1a7a4169c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a79aa281_ParamIns>>* _86130_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8623_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8667_i = 0LL;;
	if ((((*(_86130_params)).len() > 0LL) && _1a79a6e70_IsSelf((*((*(_86130_params))[0LL]))._field_Decl.ptr()))) {
		(_8667_i)++;
	};
	_julec_label_1ac0a3930:;
	while ((_8667_i < (*(_86130_params)).len())) {
		{
			jule::Ptr<_1a79aa281_ParamIns> _8738_p = (*(_86130_params))[_8667_i];;
			{
				
				if ((*(*(_8738_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1ac0a558b:;
					{
						__jule_func_result=(_1a7a433e6_pushVariadic(_self_, &(_8738_p), _8667_i) && __jule_func_result);
						goto _iter_end_1ac0a3cb5;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8667_i)) {
					_case_begin_1ac0a5679:;
					{
						__jule_func_result=false;
						goto _iter_end_1ac0a3cb5;
					}
				}
				else {
					_case_begin_1ac0a51d4:;
					{
						__jule_func_result=(_1a7a42eea_push(_self_, &(_8738_p), (*(_self_))._field_args[_8667_i]) && __jule_func_result);
					}
				}
				_match_end_1ac0a516d:;
			};
			(_8667_i)++;
		}
	_iter_next_1ac0a3cb5:;
	}
	_iter_end_1ac0a3cb5:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8623_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a7a439bd_checkDynamicTypeAnnotation(_1a7a4169c_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a7846:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81016_InsGeneric> _89310_g = *it;
			{
				if ((_89310_g == nullptr)) {
					_1a7a42071_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac0a7846:;
			++it;
			goto _iter_begin_1ac0a7846;
		}
		_iter_end_1ac0a7846:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a7a43c54_check(_1a7a4169c_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _9037_params = _1a7a42307_getParams(_self_);;
	__jule_func_result=_1a7a42648_checkCounts(_self_, &(_9037_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a7a43737_checkArgs(_self_, &(_9037_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a7a439bd_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a4169c_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a7a44b34_pushErr(_1a7a445d4_structLitChecker* _self_, jule::Ptr<_1a795c013_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args) {
	_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), _94123_token, _94138_fmt, _94151_args);
}



inline void _1a7a44e97_pushSuggestion(_1a7a445d4_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args) {
	_1a7a53add_pushSuggestion((*(_self_))._field_e.ptr(), _94630_fmt, _94643_args);
}



inline void _1a7a453b5_pushMatch(_1a7a445d4_structLitChecker* _self_, jule::Ptr<_1a7995535_FieldIns>* _95030_f, jule::Ptr<_1a7a51503_Data>* _95049_d, jule::Ptr<_1a795c013_Token>* _95064_errorToken) {
	;
	jule::Bool _9563_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95030_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a68472ea_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9563_mutable, false, &((*((*(_95030_f))))._field_Kind), _95049_d, _95064_errorToken)) {
		_1a6842e61_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95030_f))))._field_Kind), _95049_d, (*(_95064_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1a799addc_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a799addc_StructArgExprModel>(_1a799addc_StructArgExprModel{._field_Token=(*(_95064_errorToken)), ._field_Field=(*(_95030_f)), ._field_Expr=(*(_95049_d))})); };
}



inline void _1a7a45728_checkPair(_1a7a445d4_structLitChecker* _self_, jule::Ptr<_1a797b021_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _96957_exprs) {
	jule::Ptr<_1a7995535_FieldIns> _9717_f = _1a799748d_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96930_pair))))._field_Field))._field_Kind);;
	if ((_9717_f == nullptr)) {
		_1a7a44b34_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1a683abb2_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9717_f))._field_Decl))._field_Public, (*(*(_9717_f))._field_Decl.alloc)._field_Token)))) {
		_1a7a44b34_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1a7a44e97_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1ac0b3a0b:;
	{
		auto expr = _96957_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0b180b:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _98315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ac0b4dd6:;
						{
							jule::Ptr<_1a797b021_FieldExprPair> _9869_dpair = (*(_98315_expr))._field_Kind.unsafe_cast_ptr<_1a797b021_FieldExprPair>();;
							{
								
								if (((*(_96930_pair)) == _9869_dpair)) {
									_case_begin_1ac0b5dc6:;
									{
										goto _iter_end_1ac0b180b;
									}
								}
								else if (((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind == (*(*(_9869_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1ac0b5e70:;
									{
										_1a7a44b34_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1ac0b180b;
									}
								}
								_match_end_1ac0b5d4e:;
							};
						}
					}
					_match_end_1ac0b4d70:;
				};
			}
			_iter_next_1ac0b180b:;
			++it;
			goto _iter_begin_1ac0b180b;
		}
		_iter_end_1ac0b180b:;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _9977_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9977_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9717_f))._field_Kind;
	jule::Ptr<_1a7a51503_Data> _10017_d = _1a7a7148a_evalExpr((*(_self_))._field_e, (*((*(_96930_pair))))._field_Expr);;
	if ((_10017_d == nullptr)) {
		return;;
	};
	_1a7a453b5_pushMatch(_self_, &(_9717_f), &(_10017_d), &((*((*(_96930_pair))))._field_Field));
}



inline jule::Bool _1a7a45a69_readyExprs(_1a7a445d4_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _100831_exprs) {
	jule::Bool _10097_ok = true;;
	{
		auto expr = _100831_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0ba33c:;
		if (it != expr_end) {
			jule::I64 _10108_i = it - expr->begin();
			jule::Ptr<_1a7976802_Expr> _101015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ac0bb01e:;
						{
							jule::Ptr<_1a797c62c_KeyValPair> _10139_pair = (*(_101015_expr))._field_Kind.unsafe_cast_ptr<_1a797c62c_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10139_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1ac0bbd77:;
									{
										goto _match_end_1ac0bc33e;
									}
								}
								else {
									_case_begin_1ac0bc394:;
									{
										_1a7a44b34_pushErr(_self_, (*(_10139_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_10097_ok=false;
										goto _iter_next_1ac0ba33c;
									}
								}
								_match_end_1ac0bc33e:;
							};
							(*((*(_100831_exprs))[_10108_i]))._field_Kind=jule::Any(jule::new_ptr<_1a797b021_FieldExprPair>(_1a797b021_FieldExprPair{._field_Field=(*((*(_10139_pair))._field_Key))._field_Token, ._field_Expr=(*_10139_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1ac0baea8:;
				};
			}
			_iter_next_1ac0ba33c:;
			++it;
			_10108_i++;
			goto _iter_begin_1ac0ba33c;
		}
		_iter_end_1ac0ba33c:;
	};
	return _10097_ok;;
}



inline void _1a7a45d22_check(_1a7a445d4_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _103226_exprs) {
	if (((*(_103226_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a7a45a69_readyExprs(_self_, _103226_exprs)))) {
		return;;
	};
	jule::Bool _10397_paired = false;;
	{
		auto expr = _103226_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0be8d5:;
		if (it != expr_end) {
			jule::I64 _10408_i = it - expr->begin();
			jule::Ptr<_1a7976802_Expr> _104015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1ac0c607e:;
						{
							jule::Ptr<_1a797b021_FieldExprPair> _10439_pair = (*(_104015_expr))._field_Kind.unsafe_cast_ptr<_1a797b021_FieldExprPair>();;
							if (((_10408_i > 0LL) && (!(_10397_paired)))) {
								_1a7a44b34_pushErr(_self_, (*(_10439_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_10397_paired=true;
							_1a7a45728_checkPair(_self_, &(_10439_pair), _103226_exprs);
						}
					}
					else {
						_case_begin_1ac0c07d7:;
						{
							if (_10397_paired) {
								_1a7a44b34_pushErr(_self_, (*(_104015_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_10408_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a7a44b34_pushErr(_self_, (*_104015_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1ac0be8d5;
							};
							jule::Ptr<_1a7995535_FieldIns> _10589_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10408_i];;
							if ((!(_1a683abb2_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10589_field))._field_Decl))._field_Public, (*(*(_10589_field))._field_Decl.alloc)._field_Token)))) {
								_1a7a44b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a7a44e97_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a7a828ec_TypeKind> _10669_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10669_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10589_field.alloc)._field_Kind;
							jule::Ptr<_1a7a51503_Data> _10709_d = _1a7a7148a_evalExpr((*(_self_))._field_e, _104015_expr);;
							if ((_10709_d == nullptr)) {
								goto _iter_next_1ac0be8d5;
							};
							_1a7a453b5_pushMatch(_self_, &(_10589_field), &(_10709_d), &((*_104015_expr.alloc)._field_Token));
						}
					}
					_match_end_1ac0c0782:;
				};
			}
			_iter_next_1ac0be8d5:;
			++it;
			_10408_i++;
			goto _iter_begin_1ac0be8d5;
		}
		_iter_end_1ac0be8d5:;
	};
	if ((!(_10397_paired))) {
		jule::I64 _10814_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10828_diff = (_10814_n - (*(_103226_exprs)).len());;
		{
			
			if ((_10828_diff <= 0LL)) {
				_case_begin_1ac0c8911:;
				{
					return;;
				}
			}
			_match_end_1ac0c8801:;
		};
		_200880c8a_StrBuilder _10888_idents = static__2008811b9_New(32LL);;
		for (; (_10828_diff > 0LL); (_10828_diff)--) {
			{
				_20088172a_WriteStr(&_10888_idents, jule::Str::lit(", ", 2));
				_20088172a_WriteStr(&_10888_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10814_n - _10828_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1ac0c925d:;
		}
		_iter_end_1ac0c925d:;;
		_1a7a44b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_2008829c3_Buf(&_10888_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a445d4_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a685a682_Var> _1a7a468a0_buildVar(_1a7a463b6_rangeChecker* _self_, jule::Ptr<_1a7985338_VarDecl>* _110825_decl) {
	jule::Ptr<_1a685a682_Var> _11097_v = _1a79b4851_buildVar((*(_110825_decl)));;
	return _11097_v;;
}



inline void _1a7a46a9d_setSizeKey(_1a7a463b6_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a795e8ea_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1a7a46ebb_checkRangeExprValidity(_1a7a463b6_rangeChecker* _self_, jule::Ptr<_1a7a51503_Data>* _112743_d, jule::Ptr<_1a685a682_Var>* _112754_key, jule::Ptr<_1a7a828ec_TypeKind>* _112770_k) {
	jule::Bool _11287__mut = (*((*(_112754_key))))._field_Mutable;;
	if ((_11287__mut && (!(_1a7a8427d_Mutable((*(_112770_k)).ptr()))))) {
		_11287__mut=false;
	};
	_1a68472ea_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11287__mut, (*((*(_112754_key))))._field_Reference, &((*((*((*(_112754_key))))._field_Kind))._field_Kind), _112743_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a7a471b9_checkSlice(_1a7a463b6_rangeChecker* _self_) {
	_1a7a46a9d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a795e8ea_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7a8e9c5_Slc> _11467_slc = _1a7a860a4_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_11467_slc))._field_Elem});
	_1a7a46ebb_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11467_slc.alloc)._field_Elem));
}



inline void _1a7a473b7_checkArray(_1a7a463b6_rangeChecker* _self_) {
	_1a7a46a9d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a795e8ea_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7a91ce6_Arr> _11597_arr = _1a7a85d1d_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_11597_arr))._field_Elem});
	_1a7a46ebb_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11597_arr.alloc)._field_Elem));
}



inline void _1a7a475b5_checkMapKeyA(_1a7a463b6_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a795e8ea_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7a91169_Map> _11717_m = _1a7a86add_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_11717_m))._field_Key});
	jule::Ptr<_1a7a51503_Data> _11757_d = jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc));;
	(*_11757_d.alloc)._field_Kind=(*_11717_m.alloc)._field_Key;
	_1a7a46ebb_checkRangeExprValidity(_self_, &(_11757_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11717_m.alloc)._field_Key));
}



inline void _1a7a477b3_checkMapKeyB(_1a7a463b6_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a795e8ea_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a7a91169_Map> _11867_m = _1a7a86add_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_11867_m))._field_Val});
	jule::Ptr<_1a7a51503_Data> _11907_d = jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc));;
	(*_11907_d.alloc)._field_Kind=(*_11867_m.alloc)._field_Val;
	_1a7a46ebb_checkRangeExprValidity(_self_, &(_11907_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11867_m.alloc)._field_Val));
}



inline void _1a7a479b1_checkMap(_1a7a463b6_rangeChecker* _self_) {
	_1a7a475b5_checkMapKeyA(_self_);
	_1a7a477b3_checkMapKeyB(_self_);
}



inline void _1a7a47bae_checkStr(_1a7a463b6_rangeChecker* _self_) {
	_1a7a46a9d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a795e8ea_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1a7a47dac_checkComptime(_1a7a463b6_rangeChecker* _self_) {
	_1a7a46a9d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a795e8ea_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a7a468a0_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a7a48143_checkComptimeRange(_1a7a463b6_rangeChecker* _self_) {
	jule::Ptr<_1a79c3750_comptimeRange> _12257_range = _1a7a883e7_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12257_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data5)) {
			_case_begin_1ac0eb68c:;
			{
				_1a7a47dac_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1ac0ea6d0:;
			{
				_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ac0ea67a:;
	};
}



inline jule::Bool _1a7a483c9_check(_1a7a463b6_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1ac0ed7e3:;
		}
		else if ((_1a7a860a4_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0ec1b5:;
			{
				_1a7a471b9_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a7a85d1d_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0ec22b:;
			{
				_1a7a473b7_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a7a86add_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0ec7ae:;
			{
				_1a7a479b1_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a7a883e7_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0ec825:;
			{
				return _1a7a48143_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1ac0ec12c:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _12574_prim = _1a7a8504d_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12574_prim != nullptr) && _1a7a8d95d_IsStr(_12574_prim))) {
					_1a7a47bae_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1ac0ec02d:;
	};
	_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a463b6_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a7a49056_prepareTypes(_1a7a48b27_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a79ac508_Types((*(_self_))._field_f);
	};
}



inline void _1a7a4930e_prepareExprs(_1a7a48b27_retTypeChecker* _self_, jule::Ptr<_1a7976802_Expr>* _128533_e) {
	if (((*(_128533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac104343:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128533_e))))._field_Kind.unsafe_cast_ptr<_1a79773e6_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1ac10450d:;
			{
				{ jule::Slice<jule::Ptr<_1a7976802_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128533_e))); };
			}
		}
		_match_end_1ac1044a8:;
	};
}



inline void _1a7a4950c_checkExprs(_1a7a48b27_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7a51503_Data>> _13017_datas = jule::Slice<jule::Ptr<_1a7a51503_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1a7a5322a_Eval> _13027_eval = _1a6842900_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac104e7b:;
		if (it != expr_end) {
			jule::I64 _13038_i = it - expr->begin();
			jule::Ptr<_1a7976802_Expr> _130315_expr = *it;
			{
				if ((_13038_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1ac104e7b;
				};
				jule::Ptr<_1a7a828ec_TypeKind> _13088_t = (*(_self_))._field_types[_13038_i];;
				(*(_13027_eval))._field_prefix=_13088_t;
				jule::Ptr<_1a7a51503_Data> _13118_d = _1a7a7148a_evalExpr(_13027_eval, _130315_expr);;
				if ((_13118_d == nullptr)) {
					goto _iter_next_1ac104e7b;
				};
				{ jule::Slice<jule::Ptr<_1a7a51503_Data>> &__jule_push_dest = _13017_datas; __jule_push_dest.push(_13118_d); };
				if (((!((*(_13118_d))._field_Mutable)) && _1a7a8427d_Mutable((*(_13118_d))._field_Kind.ptr()))) {
					_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a7a39e6a_assignTypeChecker _13238_ac = _1a7a39e6a_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13088_t, ._field_d=_13118_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a7a3ae38_check(&_13238_ac);
			}
			_iter_next_1ac104e7b:;
			++it;
			_13038_i++;
			goto _iter_begin_1ac104e7b;
		}
		_iter_end_1ac104e7b:;
	};
	if ((_13017_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a79a0ba0_TupleExprModel>(_1a79a0ba0_TupleExprModel{._field_Datas=_13017_datas}), &__jule_any_type81);
	} else if ((_13017_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13017_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a7a49793_tryFuncMultiRetForward(_1a7a48b27_retTypeChecker* _self_) {
	jule::Ptr<_1a7a5322a_Eval> _13447_eval = _1a6842900_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
	jule::Ptr<_1a7a51503_Data> _13457_d = _1a7a7148a_evalExpr(_13447_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13457_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7a905b9_Tuple> _13517_tup = _1a7a86d74_Tup((*(_13457_d))._field_Kind.ptr());;
	if ((_13517_tup == nullptr)) {
		return false;;
	};
	if (((*(_13517_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1ac111c35;
	};
	(*(_self_))._field_model=(*(_13457_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac10dea7:;
		if (it != expr_end) {
			jule::I64 _13597_i = it - expr->begin();
			{
				if ((!(_1a6843417__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &((*(_self_))._field_types[_13597_i]), &((*(_13517_tup))._field_Types[_13597_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1ac111c35;
				};
			}
			_iter_next_1ac10dea7:;
			++it;
			_13597_i++;
			goto _iter_begin_1ac10dea7;
		}
		_iter_end_1ac10dea7:;
	};
	return true;;
	_julec_label_1ac111c35:;
	_200880c8a_StrBuilder _13667_wanted = static__2008811b9_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1132ca:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> _136710_t = *it;
			{
				_20088172a_WriteStr(&_13667_wanted, _1a7a82cb5_Str(_136710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					_20088172a_WriteStr(&_13667_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac1132ca:;
			++it;
			_13677_i++;
			goto _iter_begin_1ac1132ca;
		}
		_iter_end_1ac1132ca:;
	};
	_200880c8a_StrBuilder _13737_given = static__2008811b9_New(32LL);;
	{
		auto expr = &((*(_13517_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac114ee1:;
		if (it != expr_end) {
			jule::I64 _13747_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> _137410_t = *it;
			{
				_20088172a_WriteStr(&_13737_given, _1a7a82cb5_Str(_137410_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13747_i) > 1LL)) {
					_20088172a_WriteStr(&_13737_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac114ee1:;
			++it;
			_13747_i++;
			goto _iter_begin_1ac114ee1;
		}
		_iter_end_1ac114ee1:;
	};
	_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_200882022_Str(&_13667_wanted), &__jule_any_type4),jule::Any(_200882022_Str(&_13737_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1a7a49ad4_check(_1a7a48b27_retTypeChecker* _self_, jule::Ptr<_1a7976802_Expr>* _138426_e) {
	_1a7a49056_prepareTypes(_self_);
	_1a7a4930e_prepareExprs(_self_, _138426_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1ac1184bc:;
			{
				if ((!(_1a79a956b_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a79a879b_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1ac118533:;
			{
				_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1ac118599:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1ac11cc52:;
						{
							if (_1a7a49793_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1ac11cba8:;
				};
				_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1ac118610:;
			{
				_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1ac118676:;
			{
				_1a683a453_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac118368:;
	};
	_1a7a4950c_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a48b27_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a7a4b674_SelectPackage(_1a7a4b18a_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1213c6:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1ac1213c6:;
			++it;
			goto _iter_begin_1ac1213c6;
		}
		_iter_end_1ac1213c6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a685a682_Var> _1a7a4ba70_FindVar(_1a7a4b18a_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a7a4d852_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7a4be6b_FindTypeAlias(_1a7a4b18a_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a7a4dd08_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a7993357_Struct> _1a7a4c367_FindStruct(_1a7a4b18a_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac12376e:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1ac12376e:;
			++it;
			goto _iter_begin_1ac12376e;
		}
		_iter_end_1ac12376e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79a8328_Fn> _1a7a4c763_FindFn(_1a7a4b18a_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac124cae:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1ac124cae:;
			++it;
			goto _iter_begin_1ac124cae;
		}
		_iter_end_1ac124cae:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a7a4caa4_FindTrait(_1a7a4b18a_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1260ce:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1ac1260ce:;
			++it;
			goto _iter_begin_1ac1260ce;
		}
		_iter_end_1ac1260ce:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a7a4cde5_FindEnum(_1a7a4b18a_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac12707a:;
		if (it != expr_end) {
			jule::Ptr<_1a79bdddd_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1ac12707a:;
			++it;
			goto _iter_begin_1ac12707a;
		}
		_iter_end_1ac12707a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a7a4d236_FindTypeEnum(_1a7a4b18a_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac128048:;
		if (it != expr_end) {
			jule::Ptr<_1a79c05e8_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1ac128048:;
			++it;
			goto _iter_begin_1ac128048;
		}
		_iter_end_1ac128048:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a685a682_Var> _1a7a4d852_findVar(_1a7a4b18a_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse) {
	if (_10850_reverse) {
		jule::I64 _1108_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1108_i >= 0LL); (_1108_i)--) {
			{
				jule::Ptr<_1a685a682_Var> _1129_v = (*(_self_))._field_Vars[_1108_i];;
				if ((((*(_1129_v))._field_Ident == (*(_10824_ident))) && ((*_1129_v.alloc)._field_Binded == _10836_binded))) {
					return _1129_v;;
				};
			}
		_iter_next_1ac129dc4:;
		}
		_iter_end_1ac129dc4:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac12ad3c:;
			if (it != expr_end) {
				jule::Ptr<_1a685a682_Var> _11816_v = *it;
				{
					if ((((*(_11816_v))._field_Ident == (*(_10824_ident))) && ((*_11816_v.alloc)._field_Binded == _10836_binded))) {
						return _11816_v;;
					};
				}
				_iter_next_1ac12ad3c:;
				++it;
				goto _iter_begin_1ac12ad3c;
			}
			_iter_end_1ac12ad3c:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7a4dd08_findTypeAlias(_1a7a4b18a_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse) {
	if (_12756_reverse) {
		jule::I64 _1298_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1298_i >= 0LL); (_1298_i)--) {
			{
				jule::Ptr<_1a7a81b0a_TypeAlias> _1319_ta = (*(_self_))._field_TypeAliases[_1298_i];;
				if ((((*(_1319_ta))._field_Ident == (*(_12730_ident))) && ((*_1319_ta.alloc)._field_Binded == _12742_binded))) {
					return _1319_ta;;
				};
			}
		_iter_next_1ac12d218:;
		}
		_iter_end_1ac12d218:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac12e181:;
			if (it != expr_end) {
				jule::Ptr<_1a7a81b0a_TypeAlias> _13716_ta = *it;
				{
					if ((((*(_13716_ta))._field_Ident == (*(_12730_ident))) && ((*_13716_ta.alloc)._field_Binded == _12742_binded))) {
						return _13716_ta;;
					};
				}
				_iter_next_1ac12e181:;
				++it;
				goto _iter_begin_1ac12e181;
			}
			_iter_end_1ac12e181:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a7a4e204_defByIdent(_1a7a4b18a_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1308e1:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _14915_v = *it;
			{
				if ((((*(_14915_v))._field_Ident == (*(_14827_ident))) && ((*_14915_v.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_14915_v, &__jule_any_type8);;
				};
			}
			_iter_next_1ac1308e1:;
			++it;
			goto _iter_begin_1ac1308e1;
		}
		_iter_end_1ac1308e1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac130c43:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81b0a_TypeAlias> _15515_ta = *it;
			{
				if ((((*(_15515_ta))._field_Ident == (*(_14827_ident))) && ((*_15515_ta.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_15515_ta, &__jule_any_type65);;
				};
			}
			_iter_next_1ac130c43:;
			++it;
			goto _iter_begin_1ac130c43;
		}
		_iter_end_1ac130c43:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac131bab:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _16115_s = *it;
			{
				if ((((*(_16115_s))._field_Ident == (*(_14827_ident))) && ((*_16115_s.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16115_s, &__jule_any_type64);;
				};
			}
			_iter_next_1ac131bab:;
			++it;
			goto _iter_begin_1ac131bab;
		}
		_iter_end_1ac131bab:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac132b79:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _16715_f = *it;
			{
				if ((((*(_16715_f))._field_Ident == (*(_14827_ident))) && ((*_16715_f.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16715_f, &__jule_any_type63);;
				};
			}
			_iter_next_1ac132b79:;
			++it;
			goto _iter_begin_1ac132b79;
		}
		_iter_end_1ac132b79:;
	};
	if (_14839_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1339e3:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _17715_t = *it;
			{
				if (((*(_17715_t))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_17715_t, &__jule_any_type10);;
				};
			}
			_iter_next_1ac1339e3:;
			++it;
			goto _iter_begin_1ac1339e3;
		}
		_iter_end_1ac1339e3:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac135231:;
		if (it != expr_end) {
			jule::Ptr<_1a79bdddd_Enum> _18315_e = *it;
			{
				if (((*(_18315_e))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18315_e, &__jule_any_type66);;
				};
			}
			_iter_next_1ac135231:;
			++it;
			goto _iter_begin_1ac135231;
		}
		_iter_end_1ac135231:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac135dad:;
		if (it != expr_end) {
			jule::Ptr<_1a79c05e8_TypeEnum> _18915_te = *it;
			{
				if (((*(_18915_te))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18915_te, &__jule_any_type67);;
				};
			}
			_iter_next_1ac135dad:;
			++it;
			goto _iter_begin_1ac135dad;
		}
		_iter_end_1ac135dad:;
	};
	return nullptr;;
}



inline jule::Bool _1a7a4e6aa_isDuplicatedIdent(_1a7a4b18a_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1373dc:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> *_20210_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20210_v))) != _20129_itself) && ((*((*(_20210_v))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20210_v)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1ac1373dc:;
			++it;
			goto _iter_begin_1ac1373dc;
		}
		_iter_end_1ac1373dc:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13773e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81b0a_TypeAlias> *_20810_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20810_ta))) != _20129_itself) && ((*((*(_20810_ta))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20810_ta)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1ac13773e:;
			++it;
			goto _iter_begin_1ac13773e;
		}
		_iter_end_1ac13773e:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13892c:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> *_21410_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21410_s))) != _20129_itself) && ((*((*(_21410_s))))._field_Ident == (*(_20147_ident)))) && ((*(*(_21410_s)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1ac13892c:;
			++it;
			goto _iter_begin_1ac13892c;
		}
		_iter_end_1ac13892c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac139b70:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> *_22010_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22010_f))) != _20129_itself) && ((*((*(_22010_f))))._field_Ident == (*(_20147_ident)))) && ((*(*(_22010_f)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1ac139b70:;
			++it;
			goto _iter_begin_1ac139b70;
		}
		_iter_end_1ac139b70:;
	};
	if (_20159_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13ac5e:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> *_23010_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23010_t))) != _20129_itself) && ((*((*(_23010_t))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1ac13ac5e:;
			++it;
			goto _iter_begin_1ac13ac5e;
		}
		_iter_end_1ac13ac5e:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13c1b1:;
		if (it != expr_end) {
			jule::Ptr<_1a79bdddd_Enum> *_23610_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23610_e))) != _20129_itself) && ((*((*(_23610_e))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1ac13c1b1:;
			++it;
			goto _iter_begin_1ac13c1b1;
		}
		_iter_end_1ac13c1b1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13d107:;
		if (it != expr_end) {
			jule::Ptr<_1a79c05e8_TypeEnum> *_24210_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24210_te))) != _20129_itself) && ((*((*(_24210_te))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1ac13d107:;
			++it;
			goto _iter_begin_1ac13d107;
		}
		_iter_end_1ac13d107:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a4b18a_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7a518dd_IsNil(_1a7a51503_Data* _self_) {
	return _1a7a839ca_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a7a51b74_IsVoid(_1a7a51503_Data* _self_) {
	return _1a7a83c61_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a7a51e0a_IsConst(_1a7a51503_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a7a5224b_GoodOperand(_1a7a51503_Data* _self_, jule::Ptr<_1a7a51503_Data>* _10528_other) {
	if ((_1a7a85a87_TypeEnum((*((*(_10528_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a7a8504d_Prim((*((*(_10528_other))))._field_Kind) == nullptr) || (!(_1a7a8dbe4_IsAny(_1a7a8504d_Prim((*((*(_10528_other))))._field_Kind).ptr())))) && (_1a7a86857_Trait((*((*(_10528_other))))._field_Kind) == nullptr)) && (!(_1a7a839ca_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a51503_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a5267a_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a7a5377a_pushErr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args) {
	_1a683a453_pushErr((*(_self_))._field_s.ptr(), _13623_token, _13638_fmt, _13651_args);
}



inline void _1a7a53add_pushSuggestion(_1a7a5322a_Eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args) {
	_1a683a7b6_pushSuggestion((*(_self_))._field_s.ptr(), _14130_fmt, _14143_args);
}



inline void _1a7a53cdb_allowBuiltin(_1a7a5322a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a7a53ed9_disallowBuiltin(_1a7a5322a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a7a54270_isUnsafe(_1a7a5322a_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a7a54506_isGlobal(_1a7a5322a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3)) {
			_case_begin_1ac18c8d7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac18ccd3:;
			{
				return false;;
			}
		}
		_match_end_1ac18cc7d:;
	};
}



inline jule::Bool _1a7a54814_applyNumericPrefix(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _16839_d) {
	if ((((((*(_16839_d)) == nullptr) || (!(_1a7a51e0a_IsConst((*(_16839_d)).ptr())))) || (_1a7a8504d_Prim((*((*(_16839_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _1753_prim = _1a7a8504d_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1753_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1bd82bae2_IsFloat(_1a7a8a817_Str(_1753_prim.ptr()))) {
			_case_begin_1ac190401:;
			{
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>((*((*(_self_))._field_prefix)));
				_1bd830dc1_SetF64((*((*(_16839_d))))._field_Constant.ptr(), _1bd830046_AsF64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1bd82b1c9_IsSigInt(_1a7a8a817_Str(_1753_prim.ptr()))) {
			_case_begin_1ac190489:;
			{
				if ((!(_1a7a37495_sigAssignable(_1a7a8a817_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>((*((*(_self_))._field_prefix)));
				_1bd8302ee_SetI64((*((*(_16839_d))))._field_Constant.ptr(), _1bd82ea29_AsI64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1bd82b4d7_IsUnsigInt(_1a7a8a817_Str(_1753_prim.ptr()))) {
			_case_begin_1ac190500:;
			{
				if ((!(_1a7a3785d_unsigAssignable(_1a7a8a817_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>((*((*(_self_))._field_prefix)));
				_1bd8305a7_SetU64((*((*(_16839_d))))._field_Constant.ptr(), _1bd82ecb0_AsU64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		_match_end_1ac190324:;
	};
	return true;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a54b55_litStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _20319_l) {
	jule::Str _2047_s = jule::Str();;
	if (_1a795d3ee_IsRawStr((*((*(_20319_l))))._field_Value)) {
		_2047_s=_1a7a356e6_ToRawStr((*((*(_20319_l))))._field_Value);
	} else {
		_2047_s=_1a7a35a37_ToStr((*((*(_20319_l))))._field_Value);
	};
	jule::Ptr<_1bd82c384_Const> _2107_constant = static__1bd82d121_NewStr(_2047_s);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_2107_constant, &__jule_any_type19), ._field_Constant=_2107_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a54e96_litRune(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _22020_l) {
	jule::I32 _2213_r = _1a7a354d7_ToRune((*((*(_22020_l))))._field_Value);;
	jule::Ptr<_1a7a51503_Data> _2227_data = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_2213_r))});;
	if ((_2213_r <= 255LL)) {
		(*(_2227_data))._field_Kind=_1a7b66ecb_primU8;
	} else {
		(*(_2227_data))._field_Kind=_1a7b6696a_primI32;
	};
	(*(_2227_data))._field_Model=jule::Any(jule::new_ptr<_1a79a48eb_RuneExprModel>(_1a79a48eb_RuneExprModel{._field_Code=_2213_r}), &__jule_any_type83);
	(*_2227_data.alloc)._field_Mutable=true;
	(*_2227_data.alloc)._field_IsRune=true;
	(*_2227_data.alloc)._field_untyped=true;
	return _2227_data;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a552d7_litFloat(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _23921_l) {
	jule::F64 _2403_f = ({
		auto except = _1bd814305_ParseFloat((*((*(_23921_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1bd82c384_Const> _2417_constant = static__1bd82d3da_NewF64(_2403_f);;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67e77_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_2417_constant, &__jule_any_type19), ._field_Constant=_2417_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a55628_litInt(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _25123_l) {
	;
	jule::Str _2547_lit = (*((*(_25123_l))))._field_Value;;
	jule::I64 _2557_base = 0LL;;
	{
		
		if (_1d969d9ae_HasPrefix(_2547_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1ac19ee6b:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=16LLU;
			}
		}
		else if (_1d969d9ae_HasPrefix(_2547_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1ac1a0059:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=2LLU;
			}
		}
		else if (_1d969d9ae_HasPrefix(_2547_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1ac19eb3b:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=8LLU;
			}
		}
		else if (((_2547_lit[0LL] == '0') && (_2547_lit.len() > 1LL))) {
			_case_begin_1ac19eba2:;
			{
				(_2547_lit).mut_slice(1LL);;
				_2557_base=8LLU;
			}
		}
		else {
			_case_begin_1ac19eac5:;
			{
				_2557_base=10LLU;
			}
		}
		_match_end_1ac19ea3c:;
	};
	jule::Ptr<_1a7a51503_Data> _2757_d = jule::new_ptr<_1a7a51503_Data>();;
	jule::Bool _2777_ok = true;;
	jule::I64 _2783_sig = ({
		auto except = _1bd80c9d5_ParseInt(_2547_lit, _2557_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2777_ok=false;

			0LL;
		});
	});;
	if (_2777_ok) {
		(*_2757_d.alloc)._field_Constant=static__1bd82c7c4_NewI64(_2783_sig);
		(*_2757_d.alloc)._field_Kind=_1a7b661c8_primInt;
	} else {
		jule::U64 _2864_unsig = ({
			auto except = _1bd80c52e_ParseUint(_2547_lit, _2557_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a7a5377a_pushErr(_self_, (*((*(_25123_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a7a53add_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2757_d.alloc)._field_Constant=static__1bd82ca8d_NewU64(_2864_unsig);
		(*_2757_d.alloc)._field_Kind=_1a7b65d10_primUint;
	};
	(*_2757_d.alloc)._field_Model=jule::Any((*_2757_d.alloc)._field_Constant, &__jule_any_type19);
	(*_2757_d.alloc)._field_untyped=true;
	if ((!(_1a7a54814_applyNumericPrefix(_self_, &(_2757_d))))) {
		_1a7a7a494_fitBitsize(&(_2757_d));
	};
	return _2757_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a55969_litNum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr>* _30623_l) {
	{
		
		if (_1a795e09d_IsFloat((*((*(_30623_l))))._field_Value)) {
			_case_begin_1ac1a6deb:;
			{
				return _1a7a552d7_litFloat(_self_, _30623_l);;
			}
		}
		else {
			_case_begin_1ac1a6d85:;
			{
				return _1a7a55628_litInt(_self_, _30623_l);;
			}
		}
		_match_end_1ac1a6c86:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a55caa_evalLit(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797778c_LitExpr> _31523_lit) {
	{
		
		if (_1a795d168_IsStr((*(_31523_lit))._field_Value)) {
			_case_begin_1ac1a8062:;
			{
				return _1a7a54b55_litStr(_self_, &(_31523_lit));;
			}
		}
		else if (_1a795d6b8_IsRune((*(_31523_lit))._field_Value)) {
			_case_begin_1ac1a810b:;
			{
				return _1a7a54e96_litRune(_self_, &(_31523_lit));;
			}
		}
		else if (_1a795e367_IsNum((*(_31523_lit))._field_Value)) {
			_case_begin_1ac1a8183:;
			{
				return _1a7a55969_litNum(_self_, &(_31523_lit));;
			}
		}
		else {
			_case_begin_1ac1a7a23:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1a7935:;
	};
}



inline jule::Any _1a7a560eb_findBuiltins(_1a7a5322a_Eval* _self_, jule::Str* _32829_ident) {
	if (_1a68348d1_IsPub((*(_32829_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data1)) {
				_case_begin_1ac1aa3a5:;
				{
					jule::Any _3329_def = _1a7a7a263_findBuiltinsImport(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1a6817474_ImportInfo>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data1));;
					if ((_3329_def != nullptr)) {
						return _3329_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3)) {
				_case_begin_1ac1aa130:;
				{
					jule::Any _3379_def = _1a7a7aebc_findBuiltinsSema(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1a6837818_Sema>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));;
					if ((_3379_def != nullptr)) {
						return _3379_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
				_case_begin_1ac1aa41b:;
				{
					jule::Any _3429_def = _1a7a7aebc_findBuiltinsSema(_32829_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)))._field_s);;
					if ((_3429_def != nullptr)) {
						return _3429_def;;
					};
				}
			}
			_match_end_1ac1aa30b:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a7b687b3_findBuiltinDef(_32829_ident);;
}



inline jule::Any _1a7a564e7_getDef(_1a7a5322a_Eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded) {
	jule::Ptr<_1a685a682_Var> _3607_v = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa0bc3_FindVar((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3607_v != nullptr)) {
		return jule::Any(_3607_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a7a81b0a_TypeAlias> _3657_ta = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa10be_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3657_ta != nullptr)) {
		return jule::Any(_3657_ta, &__jule_any_type65);;
	};
	if ((!(_35535_binded))) {
		jule::Ptr<_1a79bdddd_Enum> _3718_enm = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa2048_FindEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3718_enm != nullptr)) {
			return jule::Any(_3718_enm, &__jule_any_type66);;
		};
		jule::Ptr<_1a79c05e8_TypeEnum> _3768_tenm = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa2389_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3768_tenm != nullptr)) {
			return jule::Any(_3768_tenm, &__jule_any_type67);;
		};
	};
	jule::Ptr<_1a79a8328_Fn> _3827_f = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa18b6_FindFn((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3827_f != nullptr)) {
		return jule::Any(_3827_f, &__jule_any_type63);;
	};
	jule::Ptr<_1a7993357_Struct> _3877_s = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa14ba_FindStruct((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3877_s != nullptr)) {
		return jule::Any(_3877_s, &__jule_any_type64);;
	};
	return _1a7a560eb_findBuiltins(_self_, _35523_ident);;
}



inline jule::Ptr<_1a79ae4d8_ReferenceStack> _1a7a5677d_getOwnerRefers(_1a7a5322a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
			_case_begin_1ac1b3b0b:;
			{
				jule::Ptr<_1a79de45d_scopeChecker> _3988_sc = _1a79e2a8d_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
				return (*((*(_3988_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1ac1b3149:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1ac1b30e4:;
	};
	return nullptr;;
}



inline void _1ac1c6239_pushReference(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns>* _41037_ref) {
	jule::Ptr<_1a79ae4d8_ReferenceStack> _4117_refers = _1a7a5677d_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1ac1c857c_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a79b02b9_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type7));
	};
}

inline void _1ac1dc195_pushReference(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _41037_ref) {
	jule::Ptr<_1a79ae4d8_ReferenceStack> _4117_refers = _1a7a5677d_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1ac1de461_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a79b02b9_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type8));
	};
}

inline void _1ac32187e_pushReference(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns>* _41037_ref) {
	jule::Ptr<_1a79ae4d8_ReferenceStack> _4117_refers = _1a7a5677d_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1ac323c27_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a79b02b9_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a56d77__evalEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79bdddd_Enum> _41725_enm) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_41725_enm, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a57273_evalEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79bdddd_Enum> _42628_enm, jule::Ptr<_1a795c013_Token> _42640_errorToken) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42628_enm))._field_Public, (*_42628_enm.alloc)._field_Token)))) {
		_1a7a5377a_pushErr(_self_, _42640_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42628_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a7a56d77__evalEnum(_self_, _42628_enm);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a575b4__evalTypeEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c05e8_TypeEnum> _43529_enm) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_43529_enm, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a579b0_evalTypeEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c05e8_TypeEnum> _44432_enm, jule::Ptr<_1a795c013_Token> _44448_errorToken) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44432_enm))._field_Public, (*_44432_enm.alloc)._field_Token)))) {
		_1a7a5377a_pushErr(_self_, _44448_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44432_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a7a575b4__evalTypeEnum(_self_, _44432_enm);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a57d01__evalStruct(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns> _45327_s) {
	jule::Ptr<_1a7a51503_Data> _4547_d = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_45327_s, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)}), ._field_Model=jule::Any(_45327_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45327_s))._field_Decl != nullptr) && (*(*(_45327_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4547_d))._field_Kind))._field_BindIdent=(*(*(_45327_s))._field_Decl.alloc)._field_Ident;
	};
	return _4547_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a581ec_evalStruct(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns> _46730_s, jule::Ptr<_1a795c013_Token> _46745_errorToken) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46730_s))._field_Decl))._field_Public, (*(*(_46730_s))._field_Decl.alloc)._field_Token)))) {
		_1a7a5377a_pushErr(_self_, _46745_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*(_46730_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7a588a1_checkDeprecated(_self_, &((*(*(_46730_s))._field_Decl.alloc)._field_Directives), _46745_errorToken);
	return _1a7a57d01__evalStruct(_self_, _46730_s);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5853d_evalFnIns(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns> _47725_f) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_47725_f, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)}), ._field_Model=jule::Any(_47725_f, &__jule_any_type7), });;
}



inline void _1a7a588a1_checkDeprecated(_1a7a5322a_Eval* _self_, jule::Slice<jule::Ptr<_1a79718da_Directive>>* _48636_directives, jule::Ptr<_1a795c013_Token> _48667_tok) {
	if (_1a7a54270_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a79718da_Directive> _4913_d = _1a7a79d9a_findDirective(_48636_directives, jule::Str::lit("deprecated", 10));;
	if ((_4913_d != nullptr)) {
		if (((*_4913_d.alloc)._field_Args.len() == 0LL)) {
			_1a7a5377a_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1a7a5377a_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4913_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a58c9c_evalFn(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79a8328_Fn> _50226_f, jule::Ptr<_1a795c013_Token> _50234_errorToken) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50226_f))._field_Public, (*_50226_f.alloc)._field_Token)))) {
		_1a7a5377a_pushErr(_self_, _50234_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50226_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7a588a1_checkDeprecated(_self_, &((*_50226_f.alloc)._field_Directives), _50234_errorToken);
	jule::Ptr<_1a79ab309_FnIns> _5117_ins = _1a79a9a88_instance(_50226_f);;
	_1ac1c6239_pushReference(_self_, &(_5117_ins));
	return _1a7a5853d_evalFnIns(_self_, _5117_ins);;
}



inline void _1a7a591ba_pushIllegalCycleError(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _51638_v1, jule::Ptr<_1a685a682_Var>* _51649_v2, _200880c8a_StrBuilder* _51664_message) {
	;
	jule::Str _5183_refers_to = _1d974cc6c_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51638_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51649_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5193_buf = _2008829c3_Buf(_51664_message);;
	_20088172a_WriteStr(_51664_message, _1d969d5e6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20088172a_WriteStr(_51664_message, _5183_refers_to);
	_2008819d3_WriteByte(_51664_message, '\n');
	_200881472_Write(_51664_message, _5193_buf);
}



inline jule::Bool _1a7a595b6_checkCrossCycle(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _52632_v, _200880c8a_StrBuilder* _52646_message) {
	{
		auto expr = &((*((*(_52632_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1cc9e3:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> *_52710_d = it;
			{
				if (((*(_52710_d)) == (*(_self_))._field_owner)) {
					_1a7a591ba_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
				if ((!(_1a7a595b6_checkCrossCycle(_self_, _52710_d, _52646_message)))) {
					_1a7a591ba_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
			}
			_iter_next_1ac1cc9e3:;
			++it;
			goto _iter_begin_1ac1cc9e3;
		}
		_iter_end_1ac1cc9e3:;
	};
	return true;;
}



inline jule::Bool _1a7a599b2_checkIllegalCycles(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var>* _54339_v, jule::Ptr<_1a795c013_Token> _54348_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54339_v)))) {
		_1a7a5377a_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_200880c8a_StrBuilder _5567_message = static__2008811b9_New(32LL);;
	if ((!(_1a7a595b6_checkCrossCycle(_self_, _54339_v, &(_5567_message))))) {
		jule::Str _5598_errMsg = _200882022_Str(&_5567_message);;
		_200882220_Clear(&_5567_message);
		_1a7a591ba_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54339_v, &(_5567_message));
		_5598_errMsg+=_200882022_Str(&_5567_message);
		_1a7a5377a_pushErr(_self_, _54348_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_5598_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54339_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a59dad_evalVar(_1a7a5322a_Eval* _self_, jule::Ptr<_1a685a682_Var> _57127_v, jule::Ptr<_1a795c013_Token> _57136_errorToken) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57127_v))._field_Public, (*_57127_v.alloc)._field_Token)))) {
		_1a7a5377a_pushErr(_self_, _57136_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7a588a1_checkDeprecated(_self_, &((*_57127_v.alloc)._field_Directives), _57136_errorToken);
	if (((*_57127_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1ac1e4433;
	};
	(*_57127_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3)) {
			_case_begin_1ac1d6513:;
			{
				jule::Bool _5904_ok = _1a7a599b2_checkIllegalCycles(_self_, &(_57127_v), _57136_errorToken);;
				if ((!(_5904_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
			_case_begin_1ac1d5b2d:;
			{
				jule::Ptr<_1a79de45d_scopeChecker> _5958_s = (*(_self_))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0);;
				jule::Ptr<_1a79de45d_scopeChecker> _5968_root = _1a79e2807_getRoot(_5958_s);;
				if ((((*(_5968_root))._field_captured != nullptr) && _1a7a7ee9e_isVarCaptured(_5968_root, _5958_s, _57127_v))) {
					_1a79e2571_pushCaptured(_5968_root, &(_57127_v));
				};
				if (((!((*_57127_v.alloc)._field_Reference)) || _1a7a54270_isUnsafe(_self_))) {
					goto _match_end_1ac1d648b;
				};
				while ((((*_5958_s.alloc)._field_owner == nullptr) && ((*_5958_s.alloc)._field_parent != nullptr))) {
					{
						_5958_s=(*_5958_s.alloc)._field_parent;
					}
				_iter_next_1ac1d98bd:;
				}
				_iter_end_1ac1d98bd:;;
				if (((((*_5958_s.alloc)._field_owner != nullptr) && (*((*_5958_s.alloc)._field_owner))._field_Anon) && ((*_57127_v.alloc)._field_Scope != (*((*_5958_s.alloc)._field_owner))._field_Scope))) {
					_1a7a5377a_pushErr(_self_, _57136_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1ac1d648b:;
	};
	if (((*_57127_v.alloc)._field_Scope == nullptr)) {
		_1ac1dc195_pushReference(_self_, &(_57127_v));
	};
	if (((!((*_57127_v.alloc)._field_Binded)) && (((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57127_v.alloc)._field_Constant) {
			_1a68525d0_checkVar((*(_self_))._field_s, &(_57127_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3));
			if ((((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57127_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a68525d0_checkVar((*(_self_))._field_s, &(_57127_v), (*(_self_))._field_lookup);
		if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1ac1e4433:;
	jule::Ptr<_1a7a51503_Data> _6467_d = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=(*((*_57127_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57127_v.alloc)._field_Mutable, ._field_Reference=(*_57127_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57127_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57127_v, &__jule_any_type8), });;
	if ((((!((*_57127_v.alloc)._field_Binded)) && _1a685aa5b_IsInitialized(_57127_v)) && ((*((*_57127_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_6467_d))._field_IsRune=(*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57127_v.alloc)._field_Constant && ((*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_6467_d.alloc)._field_Constant=jule::new_ptr<_1bd82c384_Const>((*(*((*((*(_57127_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_6467_d.alloc)._field_Model=jule::Any((*_6467_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1a685b078_untypedConstant(_57127_v)) {
			_1a7a54814_applyNumericPrefix(_self_, &(_6467_d));
			(*_6467_d.alloc)._field_untyped=true;
		};
	};
	return _6467_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5a2a9_evalTypeAlias(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a81b0a_TypeAlias> _67033_ta, jule::Ptr<_1a795c013_Token> _67049_errorToken) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67033_ta))._field_Public, (*_67033_ta.alloc)._field_Token)))) {
		_1a7a5377a_pushErr(_self_, _67049_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67033_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67033_ta.alloc)._field_Used=true;
	jule::Trait _6797_kind = (*((*((*_67033_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1a7a51503_Data> _68011_d = nullptr;;
	{
		auto &_match_expr{ _6797_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)) {
			_case_begin_1ac1eeb03:;
			{
				_68011_d=_1a7a57d01__evalStruct(_self_, _6797_kind.cast_ptr<_1a79960d5_StructIns>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3)) {
			_case_begin_1ac1ed5e6:;
			{
				_68011_d=_1a7a56d77__evalEnum(_self_, _6797_kind.cast_ptr<_1a79bdddd_Enum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4)) {
			_case_begin_1ac1ed65c:;
			{
				_68011_d=_1a7a575b4__evalTypeEnum(_self_, _6797_kind.cast_ptr<_1a79c05e8_TypeEnum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1ac1ed580:;
			{
				_68011_d=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=(*(*((*(_67033_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67033_ta.alloc)._field_Binded) {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*_67033_ta.alloc)._field_Ident;
				} else {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*(*((*(_67033_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68011_d))._field_Model=jule::Any((*_68011_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1ac1ed45e:;
	};
	(*((*(_68011_d))._field_Kind))._field_Generic=(*_67033_ta.alloc)._field_Generic;
	return _68011_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5a6a5_evalDef(_1a7a5322a_Eval* _self_, jule::Any* _70628_def, jule::Ptr<_1a795c013_Token> _70638_ident) {
	{
		auto &_match_expr{ (*(_70628_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac203c5b:;
			{
				return _1a7a59dad_evalVar(_self_, (*(_70628_def)).cast_ptr<_1a685a682_Var>(&__jule_any_type8), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac203a3b:;
			{
				return _1a7a57273_evalEnum(_self_, (*(_70628_def)).cast_ptr<_1a79bdddd_Enum>(&__jule_any_type66), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ac203cc2:;
			{
				return _1a7a579b0_evalTypeEnum(_self_, (*(_70628_def)).cast_ptr<_1a79c05e8_TypeEnum>(&__jule_any_type67), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac203d38:;
			{
				return _1a7a581ec_evalStruct(_self_, _1a79937b9_instance((*(_70628_def)).cast_ptr<_1a7993357_Struct>(&__jule_any_type64)), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac203d9e:;
			{
				jule::Ptr<_1a79a8328_Fn> _7178_f = (*(_70628_def)).cast_ptr<_1a79a8328_Fn>(&__jule_any_type63);;
				if ((!(*(_7178_f))._field_Ident.equal("init", 4))) {
					return _1a7a58c9c_evalFn(_self_, _7178_f, _70638_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac203e26:;
			{
				return _1a7a5853d_evalFnIns(_self_, (*(_70628_def)).cast_ptr<_1a79ab309_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac203e9d:;
			{
				return _1a7a5a2a9_evalTypeAlias(_self_, (*(_70628_def)).cast_ptr<_1a7a81b0a_TypeAlias>(&__jule_any_type65), _70638_ident);;
			}
		}
		_match_end_1ac203b6d:;
	};
	_1a7a5377a_pushErr(_self_, _70638_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70638_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5a9e6_evalIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797811c_IdentExpr> _73025_ident) {
	jule::Any _7317_def = _1a7a564e7_getDef(_self_, &((*(_73025_ident))._field_Ident), (*_73025_ident.alloc)._field_Binded);;
	return _1a7a5a6a5_evalDef(_self_, &(_7317_def), (*_73025_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5ad37_evalUnary(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79788ae_UnaryExpr> _73530_u) {
	_1a7a71952_unaryEval _7367_unary = static__1a7a71d92_new(_self_);;
	return _1a7a732c2_eval(&_7367_unary, _73530_u);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5b178_evalVariadic(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7978c88_VariadicExpr> _74033_v) {
	if (((*(_74033_v))._field_Expr == nullptr)) {
		_1a7a5377a_pushErr(_self_.ptr(), (*_74033_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _7467_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7467_prefix;
	});;
	jule::Ptr<_1a7a51503_Data> _7507_d = _1a7a7148a_evalExpr(_self_, (*_74033_v.alloc)._field_Expr);;
	if ((_7507_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7a84cb7_Variadicable((*(_7507_d))._field_Kind.ptr())))) {
		_1a7a5377a_pushErr(_self_, (*_74033_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_7507_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1a7a7ea70_makeVariadic(&(_7507_d), (*(_1a7a860a4_Slc((*(_7507_d))._field_Kind)))._field_Elem);
	return _7507_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5b4b9_evalUnsafe(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7977b66_UnsafeExpr> _76231_u) {
	jule::Bool _7633_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a7a51503_Data> _7657_d = _1a7a7148a_evalExpr(_self_, (*(_76231_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7633_unsafety;
	return _7657_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5b80a_evalArr(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797cd58_SliceExpr> _77028_s) {
	jule::Ptr<_1a7a91ce6_Arr> _7727_pt = _1a7a85d1d_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a7a91ce6_Arr> _7747_arr = jule::new_ptr<_1a7a91ce6_Arr>(_1a7a91ce6_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7727_pt))._field_Elem});;
	jule::Bool _7807_filled = false;;
	if (((*(_77028_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77028_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1ac214332:;
				{
					if (((*((*((*(_77028_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a7978c88_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1ac214288;
					};
					if ((*_7727_pt.alloc)._field_Auto) {
						_1a7a5377a_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7807_filled=true;
					((*(_77028_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1ac214288:;
		};
	};
	(*(_7747_arr))._field_N=(*_77028_s.alloc)._field_Exprs.len();
	if ((!((*_7727_pt.alloc)._field_Auto))) {
		if (((*_7747_arr.alloc)._field_N > (*_7727_pt.alloc)._field_N)) {
			_1a7a5377a_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_7747_arr.alloc)._field_N < (*_7727_pt.alloc)._field_N)) {
			(*_7747_arr.alloc)._field_N=(*_7727_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a79a08a3_ArrayExprModel> _8097_model = jule::new_ptr<_1a79a08a3_ArrayExprModel>(_1a79a08a3_ArrayExprModel{._field_Kind=_7747_arr, });;
	if (_7807_filled) {
		(*(_8097_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_8097_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77028_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a7a828ec_TypeKind> _8187_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7747_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77028_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac21b081:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _82015_elem = *it;
			{
				jule::Ptr<_1a7a51503_Data> _8218_d = _1a7a7148a_evalExpr(_self_, _82015_elem);;
				if ((_8218_d == nullptr)) {
					goto _iter_next_1ac21b081;
				};
				;
				if (_1a68472ea_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), &((*(_82015_elem))._field_Token))) {
					_1a6842e61_checkAssignType((*(_self_))._field_s, false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), (*_82015_elem.alloc)._field_Token);
				};
				(*(_8097_model))._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_8218_d))._field_Model}));
			}
			_iter_next_1ac21b081:;
			++it;
			goto _iter_begin_1ac21b081;
		}
		_iter_end_1ac21b081:;
	};
	(*_self_.alloc)._field_prefix=_8187_prefix;
	if (_7807_filled) {
		(*_8097_model.alloc)._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_7747_arr, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Model=jule::Any(_8097_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5bcb1_evalExpSlc(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797cd58_SliceExpr> _84731_s, jule::Ptr<_1a7a828ec_TypeKind> _84750_t, jule::Any _84768_first) {
	jule::Ptr<_1a7a8e9c5_Slc> _8487_slc = jule::new_ptr<_1a7a8e9c5_Slc>(_1a7a8e9c5_Slc{._field_Elem=_84750_t});;
	jule::I64 _8527_i = 0LL;;
	jule::Ptr<_1a799c88e_SliceExprModel> _8537_model = jule::new_ptr<_1a799c88e_SliceExprModel>(_1a799c88e_SliceExprModel{._field_ElemKind=_84750_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84731_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84768_first != nullptr)) {
		(*(_8537_model))._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84768_first}));
		_8527_i=1LL;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _8627_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8487_slc))._field_Elem;
	{
		auto expr = (*_84731_s.alloc)._field_Exprs.slice(_8527_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac224199:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _86415_elem = *it;
			{
				jule::Ptr<_1a7a51503_Data> _8658_d = _1a7a7148a_evalExpr(_self_, _86415_elem);;
				if ((_8658_d != nullptr)) {
					;
					if (_1a68472ea_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), &((*(_86415_elem))._field_Token))) {
						_1a6842e61_checkAssignType((*(_self_))._field_s, false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), (*_86415_elem.alloc)._field_Token);
					};
					(*_8537_model.alloc)._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_8658_d.alloc)._field_Model}));
				};
			}
			_iter_next_1ac224199:;
			++it;
			goto _iter_begin_1ac224199;
		}
		_iter_end_1ac224199:;
	};
	(*_self_.alloc)._field_prefix=_8627_prefix;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_8487_slc, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Model=jule::Any(_8537_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a5c102_evalSliceExpr(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797cd58_SliceExpr> _88534_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a7a85d1d_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1ac228ab6:;
				{
					return _1a7a5b80a_evalArr(_self_, _88534_s);;
				}
			}
			else if ((_1a7a860a4_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1ac228b60:;
				{
					jule::Ptr<_1a7a8e9c5_Slc> _8919_pt = _1a7a860a4_Slc((*(_self_))._field_prefix);;
					return _1a7a5bcb1_evalExpSlc(_self_, _88534_s, (*(_8919_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1ac2289d9:;
		};
	};
	jule::Ptr<_1a7a828ec_TypeKind> _8967_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88534_s))._field_Exprs.len() == 0LL)) {
		_1a7a5377a_pushErr(_self_, (*_88534_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _9047_firstElem = _1a7a7148a_evalExpr(_self_, (*_88534_s.alloc)._field_Exprs[0LL]);;
	if ((_9047_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a68472ea_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9047_firstElem))._field_Kind), &(_9047_firstElem), &((*((*(_88534_s))._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1a7a51503_Data> _9147_d = _1a7a5bcb1_evalExpSlc(_self_, _88534_s, (*(_9047_firstElem))._field_Kind, (*(_9047_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8967_prefix;
	return _9147_d;;
}



inline void _1a7a5c465_checkIntegerIndexingByData(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _92047_d, jule::Ptr<_1a795c013_Token> _92061_token) {
	jule::Str _9213_errKey = _1a7a7c72c_checkDataForIntegerIndexing(_92047_d, &(_92061_token));;
	{
		auto &_match_expr{ _9213_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ac231805:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1ac2314c5:;
			{
				_1a7a5377a_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_92047_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1ac231140:;
			{
				_1a7a5377a_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac2313d7:;
	};
}



inline void _1a7a5c883_indexingPtr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _93232_d, jule::Ptr<_1a7a51503_Data>* _93247_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _93266_i) {
	_1a7a5c465_checkIntegerIndexingByData(_self_, _93247_index, (*((*(_93266_i))))._field_Token);
	(*((*(_93232_d))))._field_Lvalue=true;
	jule::Ptr<_1a7a927b9_Ptr> _9367_ptr = _1a7a8556a_Ptr((*((*(_93232_d))))._field_Kind.ptr());;
	{
		
		if (_1a7a93303_IsUnsafe(_9367_ptr.ptr())) {
			_case_begin_1ac2343b8:;
			{
				_1a7a5377a_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a7a54270_isUnsafe(_self_)))) {
			_case_begin_1ac234451:;
			{
				_1a7a5377a_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac234330:;
	};
	(*((*(_93232_d))))._field_Kind=(*(_9367_ptr))._field_Elem;
}



inline void _1a7a5cca1_indexingArr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _94832_d, jule::Ptr<_1a7a51503_Data>* _94847_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _94866_i) {
	jule::Ptr<_1a7a91ce6_Arr> _9497_arr = _1a7a85d1d_Arr((*((*(_94832_d))))._field_Kind.ptr());;
	(*((*(_94832_d))))._field_Kind=(*(_9497_arr))._field_Elem;
	_1a7a5c465_checkIntegerIndexingByData(_self_, _94847_index, (*((*(_94866_i))))._field_Token);
	(*((*(_94832_d))))._field_Lvalue=true;
	if ((_1a7a51e0a_IsConst((*(_94847_index)).ptr()) && (_1bd830046_AsF64((*((*(_94847_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9497_arr.alloc)._field_N)))) {
		_1a7a5377a_pushErr(_self_, (*((*(_94866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a7a5d1be_indexingSlc(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _95832_d, jule::Ptr<_1a7a51503_Data>* _95847_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _95866_i) {
	jule::Ptr<_1a7a8e9c5_Slc> _9597_slc = _1a7a860a4_Slc((*((*(_95832_d))))._field_Kind.ptr());;
	(*((*(_95832_d))))._field_Kind=(*(_9597_slc))._field_Elem;
	_1a7a5c465_checkIntegerIndexingByData(_self_, _95847_index, (*((*(_95866_i))))._field_Token);
	(*((*(_95832_d))))._field_Lvalue=true;
	if ((!(_1a7a51e0a_IsConst((*(_95847_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95832_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac23b6de:;
			{
				jule::Ptr<_1a799c88e_SliceExprModel> _9708_m = (*((*(_95832_d))))._field_Model.unsafe_cast_ptr<_1a799c88e_SliceExprModel>();;
				jule::F64 _9714_indx = _1bd830046_AsF64((*((*(_95847_index))))._field_Constant.ptr());;
				if ((_9714_indx >= static_cast<jule::F64>((*(_9708_m))._field_Elems.len()))) {
					_1a7a5377a_pushErr(_self_, (*((*(_95866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95832_d))))._field_Model=(*(_9708_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9714_indx))];
					(*((*(_95832_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1ac23b678:;
	};
}



inline void _1a7a5d5dc_indexingMap(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _98132_d, jule::Ptr<_1a7a51503_Data>* _98147_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _98166_i) {
	(*((*(_98132_d))))._field_Lvalue=true;
	if (((*(_98147_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7a91169_Map> _9867_m = _1a7a86add_Map((*((*(_98132_d))))._field_Kind.ptr());;
	_1a7a39e6a_assignTypeChecker _9877_atc = _1a7a39e6a_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9867_m))._field_Key, ._field_d=(*(_98147_index)), ._field_errorToken=(*((*(_98166_i))))._field_Token};;
	_1a7a3ae38_check(&_9877_atc);
	(*((*(_98132_d))))._field_Kind=(*_9867_m.alloc)._field_Val;
}



inline void _1a7a5da0a_indexingStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _99732_d, jule::Ptr<_1a7a51503_Data>* _99747_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _99766_i) {
	(*((*(_99732_d))))._field_Kind=_1a7b66ecb_primU8;
	(*((*(_99732_d))))._field_Mutable=false;
	(*((*(_99732_d))))._field_Lvalue=true;
	if (((*(_99747_index)) == nullptr)) {
		return;;
	};
	_1a7a5c465_checkIntegerIndexingByData(_self_, _99747_index, (*((*(_99766_i))))._field_Token);
	if ((!(_1a7a51e0a_IsConst((*(_99747_index)).ptr())))) {
		(*((*(_99732_d))))._field_Constant=nullptr;
		(*((*(_99732_d))))._field_untyped=false;
		return;;
	};
	if (_1a7a51e0a_IsConst((*(_99732_d)).ptr())) {
		jule::Ptr<_1a795c013_Token> _10154_errorToken = (*((*(_99766_i))))._field_Token;;
		jule::I64 _10164_j = _1bd82ea29_AsI64((*((*(_99747_index))))._field_Constant.ptr());;
		jule::Str _10174_s = _1bd82e50c_ReadStr((*((*(_99732_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10164_j) >= _10174_s.len())) {
			_1a7a5377a_pushErr(_self_, _10154_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1bd8305a7_SetU64((*((*(_99732_d))))._field_Constant, static_cast<jule::U64>(_10174_s[_10164_j]));
		};
	};
}



inline void _1a7a5de28_toIndexing(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _102631_d, jule::Ptr<_1a7a51503_Data>* _102646_index, jule::Ptr<_1a797d7b5_IndexingExpr>* _102665_i) {
	{
		
		if ((_1a7a8556a_Ptr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac247d7c:;
			{
				_1a7a5c883_indexingPtr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a7a85d1d_Arr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac247e26:;
			{
				_1a7a5cca1_indexingArr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a7a860a4_Slc((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac247e8c:;
			{
				_1a7a5d1be_indexingSlc(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a7a86add_Map((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac248003:;
			{
				_1a7a5d5dc_indexingMap(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac248069:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _10414_prim = _1a7a8504d_Prim((*((*(_102631_d))))._field_Kind);;
				{
					
					if (_1a7a8d95d_IsStr(_10414_prim.ptr())) {
						_case_begin_1ac24c3c0:;
						{
							_1a7a5da0a_indexingStr(_self_, _102631_d, _102646_index, _102665_i);
							return;;
						}
					}
					_match_end_1ac24c326:;
				};
			}
		}
		_match_end_1ac247c39:;
	};
	_1a7a5377a_pushErr(_self_, (*((*(_102665_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_102631_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a7a5e3ce_pushGenericsFromExprSubIdent(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979915_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>* _10528_generics, jule::Ptr<_1a7976802_Expr>* _105236_expr) {
	jule::Ptr<_1a7972d92_SubIdentTypeDecl> _10537_t = jule::new_ptr<_1a7972d92_SubIdentTypeDecl>();;
	if ((!(_1a7a7d640_pushSubIdentFromExpr(jule::Any((*(_105150_sexpr)), &__jule_any_type86), &(_10537_t))))) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*(_105236_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*(_10528_generics)); __jule_push_dest.push(jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Kind=jule::Any(_10537_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1a7a5e7ca_pushGenericsFromData(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>* _106242_generics, jule::Ptr<_1a7976802_Expr>* _106270_expr) {
	{
		auto &_match_expr{ (*((*(_106270_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ac251a01:;
			{
				jule::Ptr<_1a79788ae_UnaryExpr> _10658_u = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a79788ae_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10658_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1ac253948:;
						{
							jule::Ptr<_1a7973ee7_PtrTypeDecl> _10689_kind = jule::new_ptr<_1a7973ee7_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _10699__generics = jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::alloc(0LL, 1LL);;
							_1a7a5e7ca_pushGenericsFromData(_self_, &(_10699__generics), &((*(_10658_u))._field_Expr));
							(*_10689_kind.alloc)._field_Elem=_10699__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10689_kind, &__jule_any_type70)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1ac2539ae:;
						{
							jule::Ptr<_1a7973568_SptrTypeDecl> _10779_kind = jule::new_ptr<_1a7973568_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _10789__generics = jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::alloc(0LL, 1LL);;
							_1a7a5e7ca_pushGenericsFromData(_self_, &(_10789__generics), &((*(_10658_u))._field_Expr));
							(*_10779_kind.alloc)._field_Elem=_10789__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10779_kind, &__jule_any_type71)})); };
						}
					}
					else {
						_case_begin_1ac252804:;
						{
							_1a7a5377a_pushErr(_self_.ptr(), (*(_10658_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1ac252c99:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ac251a67:;
			{
				{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push((*((*(_106270_expr))))._field_Kind.cast_ptr<_1a79724bd_TypeDecl>(&__jule_any_type89)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ac250d96:;
			{
				jule::Ptr<_1a7979915_SubIdentExpr> _10928_sexpr = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a7979915_SubIdentExpr>();;
				return _1a7a5e3ce_pushGenericsFromExprSubIdent(_self_, &(_10928_sexpr), _106242_generics, _106270_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac250e0c:;
			{
				jule::Ptr<_1a797811c_IdentExpr> _10958_ident = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a797811c_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*_10958_ident.alloc)._field_Token, ._field_Ident=(*_10958_ident.alloc)._field_Ident, ._field_Binded=(*(_10958_ident))._field_Binded, }), &__jule_any_type74)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac250e73:;
			{
				{
					auto expr = &((*((*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a79773e6_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2c9bcd:;
					if (it != expr_end) {
						jule::Ptr<_1a7976802_Expr> _110416_texpr = *it;
						{
							if ((!(_1a7a5e7ca_pushGenericsFromData(_self_, _106242_generics, &(_110416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1ac2c9bcd:;
						++it;
						goto _iter_begin_1ac2c9bcd;
					}
					_iter_end_1ac2c9bcd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac250ed9:;
			{
				jule::Ptr<_1a797953b_NsSelectionExpr> _11108_ns = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a797953b_NsSelectionExpr>();;
				jule::Ptr<_1a7972ac8_IdentTypeDecl> _11118_decl = jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*(_11108_ns))._field_Ident, ._field_Ident=(*((*_11108_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*(_11118_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a797326b_NamespaceTypeDecl>(_1a797326b_NamespaceTypeDecl{._field_Idents=(*_11108_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*_11118_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11118_decl, &__jule_any_type74)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1ac250d30:;
			{
				_1a7a5377a_pushErr(_self_.ptr(), (*((*(_106270_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ac250cca:;
	};
	return true;;
}



inline void _1a7a5eb3d_evalIdentDeclFromIndexing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a51503_Data>* _113247_d, jule::Ptr<_1a797d7b5_IndexingExpr>* _113262_i) {
	jule::Ptr<_1a79960d5_StructIns> _11337_s = _1a7a865c1_Struct((*((*(_113247_d))))._field_Kind.ptr());;
	if ((_11337_s == nullptr)) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*((*(_113262_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_113247_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a7972ac8_IdentTypeDecl> _114011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac2d1a81:;
			{
				jule::Ptr<_1a797811c_IdentExpr> _11438_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a797811c_IdentExpr>();;
				_114011_decl=jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*_11438_expr.alloc)._field_Token, ._field_Ident=(*_11438_expr.alloc)._field_Ident, ._field_Binded=(*(_11438_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac2d2e6c:;
			{
				jule::Ptr<_1a797953b_NsSelectionExpr> _11508_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a797953b_NsSelectionExpr>();;
				_114011_decl=jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*(_11508_expr))._field_Ident, ._field_Ident=(*((*_11508_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1ac2d2103:;
			{
				_1a7a5377a_pushErr(_self_, (*((*(_113262_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113247_d))=nullptr;
				return;;
			}
		}
		_match_end_1ac2d209d:;
	};
	if ((!(_1a7a5e7ca_pushGenericsFromData(_self_, &((*(_114011_decl))._field_Generics), &((*((*(_113262_i))))._field_Index))))) {
		(*(_113247_d))=nullptr;
		return;;
	};
	_11337_s=({ auto _wrap_copy = _1a7a66639_typeChecker(_self_); _1a7a98704_fromStruct(&_wrap_copy, &(_114011_decl), &((*(_11337_s))._field_Decl)); });
	if ((_11337_s == nullptr)) {
		(*(_113247_d))=nullptr;
		return;;
	};
	(*(*((*(_113247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11337_s, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0);
}



inline jule::Bool _1a7a600e4_checkGenericFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79ab309_FnIns>* _117536_f, jule::Ptr<_1a795c013_Token>* _117552_et, jule::Any* _117569_model) {
	jule::Bool _11763_ok = _1a68463d7_reloadFnInsTypes((*(_self_))._field_s, (*(_117536_f)));;
	(*((*(_117536_f))))._field_reloaded=true;
	if ((!(_11763_ok))) {
		return false;;
	};
	jule::Ptr<_1a79ab309_FnIns> _11817_existInstance = _1a79a9d96_appendInstance((*((*(_117536_f))))._field_Decl.ptr(), _117536_f);;
	if ((!(_1a684543b_checkConstraintsFn((*(_self_))._field_s, _117536_f, _117552_et, _11817_existInstance)))) {
		return false;;
	};
	if ((_11817_existInstance != nullptr)) {
		_1a7a7d3cb_updateModelToGenericIns(_117569_model, &(_11817_existInstance));
		_1ac2dad32_updateRefer(_1a7a5677d_getOwnerRefers(_self_), _117536_f, &(_11817_existInstance));
		(*(_117536_f))=_11817_existInstance;
	} else {
		_1a6855737_checkFnInsCaller((*(_self_))._field_s, _117536_f, (*(_117552_et)));
	};
	return true;;
}



inline void _1a7a60457_evalFnGenericFromIndexing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a51503_Data>* _120447_d, jule::Ptr<_1a797d7b5_IndexingExpr>* _120462_i) {
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _12057_generics = jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a7a5e7ca_pushGenericsFromData(_self_, &(_12057_generics), &((*((*(_120462_i))))._field_Index))))) {
		(*(_120447_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a79ab309_FnIns> _12117_f = _1a7a8633a_Fn((*((*(_120447_d))))._field_Kind.ptr());;
	jule::I64 _12127_genericsLen = 0LL;;
	if (((*(_12117_f))._field_Decl != nullptr)) {
		_12127_genericsLen=(*(*(_12117_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a683b982_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12127_genericsLen, _12057_generics.len(), (*((*((*(_120462_i))))._field_Expr))._field_Token)))) {
		(*(_120447_d))=nullptr;
		return;;
	};
	(*_12117_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>>::alloc(0LL, (*(*(_12117_f))._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_12057_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2e290a:;
		if (it != expr_end) {
			jule::Ptr<_1a79724bd_TypeDecl> _122315_g = *it;
			{
				jule::Ptr<_1a7a51503_Data> _12248_k = _1a7a6697a_evalType(_self_, _122315_g);;
				if ((_12248_k == nullptr)) {
					(*(_120447_d))=nullptr;
					return;;
				};
				(*_12117_f.alloc)._field_Generics=jule::append((*_12117_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>>::make({jule::new_ptr<_1a7a81016_InsGeneric>(_1a7a81016_InsGeneric{._field_Kind=(*(_12248_k))._field_Kind, })}));
			}
			_iter_next_1ac2e290a:;
			++it;
			goto _iter_begin_1ac2e290a;
		}
		_iter_end_1ac2e290a:;
	};
	if (_1a79ac78e_IsBuiltin(_12117_f)) {
		return;;
	};
	if (_1a7a600e4_checkGenericFn(_self_, &(_12117_f), &((*(*((*(_120462_i))))._field_Expr.alloc)._field_Token), &((*((*(_120447_d))))._field_Model))) {
		(*(*((*(_120447_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12117_f, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1);
	} else {
		(*(_120447_d))=nullptr;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a60798_evalIndexing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797d7b5_IndexingExpr> _124333_i) {
	jule::Ptr<_1a7a828ec_TypeKind> _12447_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12447_prefix;
	});;
	jule::Ptr<_1a7a51503_Data> _12487_d = _1a7a70676_evalExprKind(_self_, (*((*(_124333_i))._field_Expr))._field_Kind);;
	if ((_12487_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12487_d))._field_Decl) {
		_1a7a5eb3d_evalIdentDeclFromIndexing(_self_, &(_12487_d), &(_124333_i));
		return _12487_d;;
	};
	if ((_1a7a8633a_Fn((*(_12487_d))._field_Kind.ptr()) != nullptr)) {
		_1a7a60457_evalFnGenericFromIndexing(_self_, &(_12487_d), &(_124333_i));
		return _12487_d;;
	};
	_1a7a51503_Data _12647_oldData = (*(_12487_d));;
	jule::Ptr<_1a7a51503_Data> _12667_index = _1a7a7148a_evalExpr(_self_, (*_124333_i.alloc)._field_Index);;
	if ((_12667_index == nullptr)) {
		return nullptr;;
	};
	(*(_12487_d))._field_Decl=false;
	_1a7a5de28_toIndexing(_self_, &(_12487_d), &(_12667_index), &(_124333_i));
	if (_1a7a51e0a_IsConst(_12487_d.ptr())) {
		(*(_12487_d))._field_Decl=false;
		(*(_12487_d))._field_Model=jule::Any((*(_12487_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_12487_d))._field_Decl) {
		(*(_12487_d))._field_Decl=false;
	} else {
		(*(_12487_d))._field_Model=jule::Any(jule::new_ptr<_1a799cd45_IndexingExprModel>(_1a799cd45_IndexingExprModel{._field_Token=(*_124333_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a7a51503_Data>(_12647_oldData), ._field_Index=_12667_index}), &__jule_any_type44);
	};
	return _12487_d;;
}



inline __jule_tuple_x_1a7a51503_Data__jule_tuple_x_1a7a51503_Data _1a7a60ad9_evalSlicingExprs(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797de25_SlicingExpr>* _129738_s) {
	__jule_tuple_x_1a7a51503_Data__jule_tuple_x_1a7a51503_Data __jule_func_result;
	jule::Ptr<_1a7a828ec_TypeKind> _12987_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12987_prefix;
	});;
	jule::Ptr<_1a7a51503_Data> _130211_l = nullptr;;
	jule::Ptr<_1a7a51503_Data> _130311_r = nullptr;;
	if (((*((*(_129738_s))))._field_Start != nullptr)) {
		_130211_l=_1a7a7148a_evalExpr(_self_, (*((*(_129738_s))))._field_Start);
		if ((_130211_l != nullptr)) {
			_1a7a5c465_checkIntegerIndexingByData(_self_, &(_130211_l), (*((*(_129738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130211_l=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b661c8_primInt, ._field_Constant=static__1bd82c7c4_NewI64(0LL)});
		(*((*(_130211_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_130211_l.alloc)._field_Model=jule::Any((*_130211_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129738_s))))._field_To != nullptr)) {
		_130311_r=_1a7a7148a_evalExpr(_self_, (*((*(_129738_s))))._field_To);
		if ((_130311_r != nullptr)) {
			_1a7a5c465_checkIntegerIndexingByData(_self_, &(_130311_r), (*((*(_129738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130211_l;
	__jule_func_result.__jule_result_arg1 = _130311_r;
	return __jule_func_result;;
}



inline void _1a7a60d92_slicingArr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _133327_d) {
	jule::Ptr<_1a7a828ec_TypeKind> _13347_elemType = (*(_1a7a85d1d_Arr((*((*(_133327_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133327_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e9c5_Slc>(_1a7a8e9c5_Slc{._field_Elem=_13347_elemType}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22)});
	(*((*(_133327_d))))._field_Lvalue=false;
	(*((*(_133327_d))))._field_Mutable=((*((*(_133327_d))))._field_Mutable || (!(_1a7a8427d_Mutable(_13347_elemType.ptr()))));
}



inline void _1a7a612b0_slicingStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _134827_d, jule::Ptr<_1a7a51503_Data>* _134838_l, jule::Ptr<_1a7a51503_Data>* _134849_r) {
	(*((*(_134827_d))))._field_Lvalue=false;
	(*((*(_134827_d))))._field_Mutable=true;
	if ((!(_1a7a51e0a_IsConst((*(_134827_d)).ptr())))) {
		return;;
	};
	if ((((*(_134838_l)) == nullptr) || ((*(_134849_r)) == nullptr))) {
		(*((*(_134827_d))))._field_Constant=nullptr;
		(*((*(_134827_d))))._field_untyped=false;
		return;;
	};
	if ((_1a7a51e0a_IsConst((*(_134838_l)).ptr()) && _1a7a51e0a_IsConst((*(_134849_r)).ptr()))) {
		jule::I64 _13624_left = _1bd82ea29_AsI64((*((*(_134838_l))))._field_Constant.ptr());;
		if ((_13624_left < 0LL)) {
			return;;
		};
		jule::Str _13674_s = _1bd82e50c_ReadStr((*((*(_134827_d))))._field_Constant);;
		jule::I64 _13688_right = static_cast<jule::I64>(0LL);;
		if (((*(_134849_r)) == nullptr)) {
			_13688_right=static_cast<jule::I64>(_13674_s.len());
		} else {
			_13688_right=_1bd82ea29_AsI64((*((*(_134849_r))))._field_Constant);
		};
		if ((_13624_left > _13688_right)) {
			return;;
		};
		_1bd830b18_SetStr((*((*(_134827_d))))._field_Constant, _13674_s.slice(_13624_left, _13688_right));
		(*((*(_134827_d))))._field_Decl=true;
	} else {
		(*((*(_134827_d))))._field_Constant=nullptr;
		(*((*(_134827_d))))._field_untyped=false;
	};
}



inline void _1a7a61788_checkSlicing(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _138633_d, jule::Ptr<_1a7a51503_Data>* _138644_l, jule::Ptr<_1a7a51503_Data>* _138655_r, jule::Ptr<_1a797de25_SlicingExpr>* _138666_s) {
	{
		
		if ((_1a7a85d1d_Arr((*((*(_138633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac30d1ea:;
			{
				_1a7a60d92_slicingArr(_self_, _138633_d);
				return;;
			}
		}
		else if ((_1a7a860a4_Slc((*((*(_138633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac30d294:;
			{
				return;;
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_138633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac30d30a:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _13944_prim = _1a7a8504d_Prim((*((*(_138633_d))))._field_Kind);;
				{
					
					if (_1a7a8d95d_IsStr(_13944_prim.ptr())) {
						_case_begin_1ac310a8d:;
						{
							_1a7a612b0_slicingStr(_self_, _138633_d, _138644_l, _138655_r);
							return;;
						}
					}
					_match_end_1ac3109e4:;
				};
			}
		}
		_match_end_1ac30d0c9:;
	};
	_1a7a5377a_pushErr(_self_, (*((*(_138666_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_138633_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1a7a51503_Data> _1a7a61ac9_evalSlicing(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797de25_SlicingExpr> _140532_s) {
	jule::Ptr<_1a7a51503_Data> _14067_d = _1a7a7148a_evalExpr(_self_, (*(_140532_s))._field_Expr);;
	if ((_14067_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _14117_l;
	jule::Ptr<_1a7a51503_Data> _141114_r;
	({
		__jule_tuple_x_1a7a51503_Data__jule_tuple_x_1a7a51503_Data __jule_assign_result = _1a7a60ad9_evalSlicingExprs(_self_, &(_140532_s));
		_14117_l = __jule_assign_result.__jule_result_arg0;
		_141114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14117_l == nullptr)) {
		return _14067_d;;
	};
	(*(_14067_d))._field_Decl=false;
	_1a7a61788_checkSlicing(_self_, &(_14067_d), &(_14117_l), &(_141114_r), &(_140532_s));
	if (_1a7a51e0a_IsConst(_14067_d.ptr())) {
		(*(_14067_d))._field_Decl=false;
		(*(_14067_d))._field_Model=jule::Any((*(_14067_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_14067_d))._field_Decl) {
		(*(_14067_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a799e20e_SlicingExprModel> _14298_model = jule::new_ptr<_1a799e20e_SlicingExprModel>(_1a799e20e_SlicingExprModel{._field_Token=(*_140532_s.alloc)._field_Token, ._field_Expr=(*(_14067_d))._field_Model, ._field_Left=(*(_14117_l))._field_Model, });;
		if ((_141114_r != nullptr)) {
			(*(_14298_model))._field_Right=(*_141114_r.alloc)._field_Model;
		};
		(*(_14067_d))._field_Model=jule::Any(_14298_model, &__jule_any_type92);
	};
	return _14067_d;;
}



inline void _1a7a61ee7_castPtr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _144227_t, jule::Ptr<_1a7a51503_Data> _144245_d, jule::Ptr<_1a795c013_Token> _144255_errorToken) {
	(*(_144245_d))._field_Constant=nullptr;
	(*_144245_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7a8e002_Sptr> _14453_sptr = _1a7a852d4_Sptr((*_144245_d.alloc)._field_Kind.ptr());;
	if ((_14453_sptr != nullptr)) {
		if ((!(_1a7a83106_Equal((*(_1a7a8556a_Ptr(_144227_t.ptr())))._field_Elem, (*_14453_sptr.alloc)._field_Elem)))) {
			_1a7a5377a_pushErr(_self_, _144255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_144245_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_144227_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1a7a54270_isUnsafe(_self_)))) {
		_1a7a5377a_pushErr(_self_, _144255_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _14583_prim = _1a7a8504d_Prim((*(_144245_d))._field_Kind);;
	if (((_1a7a8556a_Ptr((*(_144245_d))._field_Kind) == nullptr) && ((_14583_prim == nullptr) || (!(_1bd82b7a1_IsInt(_1a7a8a817_Str(_14583_prim.ptr()))))))) {
		_1a7a5377a_pushErr(_self_, _144255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_144245_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_144227_t), &__jule_any_type4)}));
	};
}



inline void _1a7a62415_castStruct(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _146430_t, jule::Ptr<_1a7a51503_Data> _146448_d, jule::Ptr<_1a795c013_Token> _146458_errorToken) {
	(*(_146448_d))._field_Constant=nullptr;
	(*_146448_d.alloc)._field_untyped=false;
	jule::Ptr<_1a79bb6d2_Trait> _14677_tr = _1a7a86857_Trait((*_146448_d.alloc)._field_Kind.ptr());;
	if ((_14677_tr == nullptr)) {
		_1a7a5377a_pushErr(_self_, _146458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_146448_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_146430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a79960d5_StructIns> _14737_s = _1a7a865c1_Struct(_146430_t);;
	_1ac32187e_pushReference(_self_, &(_14737_s));
	if ((!(_1a7994996_IsImplements((*(_14737_s))._field_Decl.ptr(), _14677_tr)))) {
		_1a7a5377a_pushErr(_self_, _146458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_146448_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_146430_t), &__jule_any_type4)}));
	};
}



inline void _1a7a62833_castRef(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _148127_t, jule::Ptr<_1a7a51503_Data> _148145_d, jule::Ptr<_1a795c013_Token> _148155_errorToken) {
	(*(_148145_d))._field_Constant=nullptr;
	(*_148145_d.alloc)._field_untyped=false;
	jule::Ptr<_1a7a8e002_Sptr> _14847_sptr = _1a7a852d4_Sptr(_148127_t.ptr());;
	jule::Ptr<_1a7a927b9_Ptr> _14867_ptr = _1a7a8556a_Ptr((*_148145_d.alloc)._field_Kind.ptr());;
	if (((_14867_ptr != nullptr) && _1a7a83106_Equal((*(_14847_sptr))._field_Elem, (*_14867_ptr.alloc)._field_Elem))) {
		if ((!(_1a7a54270_isUnsafe(_self_)))) {
			_1a7a5377a_pushErr(_self_, _148155_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a7a865c1_Struct((*(_14847_sptr))._field_Elem) != nullptr)) {
		_1a7a62415_castStruct(_self_, (*_14847_sptr.alloc)._field_Elem, _148145_d, _148155_errorToken);
		return;;
	};
	_1a7a5377a_pushErr(_self_, _148155_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_148145_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_148127_t), &__jule_any_type4)}));
}



inline void _1a7a62c51_castSlc(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _150427_t, jule::Ptr<_1a7a51503_Data> _150445_d, jule::Ptr<_1a795c013_Token> _150455_errorToken) {
	jule::Ptr<_1bd82c384_Const> _15053_c = (*(_150445_d))._field_Constant;;
	(*_150445_d.alloc)._field_Constant=nullptr;
	(*_150445_d.alloc)._field_untyped=false;
	if ((_1a7a85801_Enum((*_150445_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a7a8504d_Prim((*((*(_1a7a85801_Enum((*(_150445_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a7a8d95d_IsStr(_1a7a8504d_Prim((*((*(_1a7a85801_Enum((*(_150445_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1a7a5377a_pushErr(_self_, _150455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_150445_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_150427_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1a7a8504d_Prim((*_150445_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a7a8d95d_IsStr(_1a7a8504d_Prim((*(_150445_d))._field_Kind).ptr()))))) {
		_1a7a5377a_pushErr(_self_, _150455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_150445_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_150427_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150427_t=(*(_1a7a860a4_Slc(_150427_t.ptr())))._field_Elem;
	jule::Ptr<_1a7a8a4c6_Prim> _15203_prim = _1a7a8504d_Prim(_150427_t);;
	if (((_15203_prim == nullptr) || ((!(_1a7a8bdbd_IsU8(_15203_prim.ptr()))) && (!(_1a7a8b8a1_IsI32(_15203_prim.ptr())))))) {
		_1a7a5377a_pushErr(_self_, _150455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*_150445_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_150427_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15053_c != nullptr)) {
		{
			
			if (_1a7a8bdbd_IsU8(_15203_prim.ptr())) {
				_case_begin_1ac335486:;
				{
					jule::Str _15305_s = _1bd82e50c_ReadStr(_15053_c);;
					jule::Ptr<_1a799c88e_SliceExprModel> _15319_model = jule::new_ptr<_1a799c88e_SliceExprModel>(_1a799c88e_SliceExprModel{._field_ElemKind=_150427_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _15305_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_15305_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac336e8d:;
						if (it != expr_end) {
							jule::U8 *_153512_b = it;
							{
								jule::Ptr<_1bd82c384_Const> _153610_bc = static__1bd82ca8d_NewU64(static_cast<jule::U64>((*(_153512_b))));;
								(*(_153610_bc))._field_Kind=(*(_15203_prim))._field_Kind;
								(*(_15319_model))._field_Elems=jule::append((*_15319_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153610_bc, &__jule_any_type19)}));
							}
							_iter_next_1ac336e8d:;
							++it;
							goto _iter_begin_1ac336e8d;
						}
						_iter_end_1ac336e8d:;
					};
					(*_150445_d.alloc)._field_Model=jule::Any(_15319_model, &__jule_any_type76);
					(*_150445_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a7a8b8a1_IsI32(_15203_prim.ptr())) {
				_case_begin_1ac335530:;
				{
					jule::Slice<jule::I32> _15435_runes = static_cast<jule::Slice<jule::I32>>(_1bd82e50c_ReadStr(_15053_c));;
					jule::Ptr<_1a799c88e_SliceExprModel> _15449_model = jule::new_ptr<_1a799c88e_SliceExprModel>(_1a799c88e_SliceExprModel{._field_ElemKind=_150427_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _15435_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_15435_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac33a39d:;
						if (it != expr_end) {
							jule::I32 *_154812_r = it;
							{
								jule::Ptr<_1bd82c384_Const> _154910_rc = static__1bd82c7c4_NewI64(static_cast<jule::I64>((*(_154812_r))));;
								(*(_154910_rc))._field_Kind=(*(_15203_prim))._field_Kind;
								(*(_15449_model))._field_Elems=jule::append((*_15449_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154910_rc, &__jule_any_type19)}));
							}
							_iter_next_1ac33a39d:;
							++it;
							goto _iter_begin_1ac33a39d;
						}
						_iter_end_1ac33a39d:;
					};
					(*_150445_d.alloc)._field_Model=jule::Any(_15449_model, &__jule_any_type76);
					(*_150445_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1ac3353a9:;
		};
	};
}



inline void _1a7a630b4_castStr(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _155927_d, jule::Ptr<_1a795c013_Token> _155937_errorToken) {
	if ((_1a7a85801_Enum((*(_155927_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a79bdddd_Enum> _15618_e = _1a7a85801_Enum((*(_155927_d))._field_Kind);;
		if (((_1a7a8504d_Prim((*((*(_15618_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a7a8d95d_IsStr(_1a7a8504d_Prim((*((*(_15618_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1bd82c384_Const> _15673_c = (*_155927_d.alloc)._field_Constant;;
	(*_155927_d.alloc)._field_Constant=nullptr;
	(*_155927_d.alloc)._field_untyped=false;
	if ((_1a7a8504d_Prim((*(_155927_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7a8a4c6_Prim> _15714_prim = _1a7a8504d_Prim((*(_155927_d))._field_Kind);;
		if (((!(_1a7a8bdbd_IsU8(_15714_prim.ptr()))) && (!(_1a7a8b8a1_IsI32(_15714_prim))))) {
			_1a7a5377a_pushErr(_self_, _155937_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_155927_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15673_c != nullptr)) {
			{
				
				if (_1a7a8bdbd_IsU8(_15714_prim)) {
					_case_begin_1ac342c24:;
					{
						(*_155927_d.alloc)._field_Constant=static__1bd82d121_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1bd82ecb0_AsU64(_15673_c))));
						(*_155927_d.alloc)._field_Model=jule::Any((*_155927_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155927_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a7a8b8a1_IsI32(_15714_prim)) {
					_case_begin_1ac342cbd:;
					{
						(*_155927_d.alloc)._field_Constant=static__1bd82d121_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1bd82ea29_AsI64(_15673_c))));
						(*_155927_d.alloc)._field_Model=jule::Any((*_155927_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155927_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1ac342b14:;
			};
		};
		return;;
	};
	jule::Ptr<_1a7a8e9c5_Slc> _15927_s = _1a7a860a4_Slc((*(_155927_d))._field_Kind);;
	if ((_15927_s == nullptr)) {
		_1a7a5377a_pushErr(_self_, _155937_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_155927_d))._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _15987_t = (*(_15927_s))._field_Elem;;
	jule::Ptr<_1a7a8a4c6_Prim> _15993_prim = _1a7a8504d_Prim(_15987_t.ptr());;
	if (((_15993_prim == nullptr) || ((!(_1a7a8bdbd_IsU8(_15993_prim.ptr()))) && (!(_1a7a8b8a1_IsI32(_15993_prim.ptr())))))) {
		_1a7a5377a_pushErr(_self_, _155937_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_155927_d))._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1a7a634d2_castInt(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _160627_t, jule::Ptr<_1a7a51503_Data> _160645_d, jule::Ptr<_1a795c013_Token> _160655_errorToken) {
	if (_1a7a51e0a_IsConst(_160645_d.ptr())) {
		jule::Ptr<_1a7a8a4c6_Prim> _16084_prim = _1a7a8504d_Prim(_160627_t.ptr());;
		{
			
			if (_1bd82b1c9_IsSigInt((*(_16084_prim))._field_Kind)) {
				_case_begin_1ac34b16c:;
				{
					_1bd8302ee_SetI64((*_160645_d.alloc)._field_Constant.ptr(), _1bd82ea29_AsI64((*(_160645_d))._field_Constant));
				}
			}
			else if (_1bd82b4d7_IsUnsigInt((*(_16084_prim))._field_Kind)) {
				_case_begin_1ac34b216:;
				{
					_1bd8305a7_SetU64((*_160645_d.alloc)._field_Constant.ptr(), _1bd82ecb0_AsU64((*(_160645_d))._field_Constant));
				}
			}
			_match_end_1ac34b0e5:;
		};
	} else {
		(*(_160645_d))._field_Constant=nullptr;
		(*_160645_d.alloc)._field_untyped=false;
	};
	if ((_1a7a85801_Enum((*(_160645_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a79bdddd_Enum> _16214_e = _1a7a85801_Enum((*(_160645_d))._field_Kind);;
		if (_1bd82bd78_IsNum(_1a7a82cb5_Str((*((*(_16214_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a7a852d4_Sptr((*(_160645_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7a8a4c6_Prim> _16284_prim = _1a7a8504d_Prim(_160627_t.ptr());;
		if ((!(_1a7a8d441_IsUintptr(_16284_prim.ptr())))) {
			_1a7a5377a_pushErr(_self_, _160655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_160645_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_160627_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1a7a8556a_Ptr((*(_160645_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a7a8a4c6_Prim> _16354_prim = _1a7a8504d_Prim(_160627_t);;
		if (_1a7a8d441_IsUintptr(_16354_prim.ptr())) {
		} else if ((!(_1a7a54270_isUnsafe(_self_)))) {
			_1a7a5377a_pushErr(_self_, _160655_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _16443_prim = _1a7a8504d_Prim((*(_160645_d))._field_Kind);;
	if (((_16443_prim != nullptr) && _1bd82bd78_IsNum(_1a7a8a817_Str(_16443_prim)))) {
		return;;
	};
	_1a7a5377a_pushErr(_self_, _160655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_160645_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_160627_t), &__jule_any_type4)}));
}



inline void _1a7a63900_castNum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _165227_t, jule::Ptr<_1a7a51503_Data> _165245_d, jule::Ptr<_1a795c013_Token> _165255_errorToken) {
	if (_1a7a51e0a_IsConst(_165245_d.ptr())) {
		jule::Ptr<_1a7a8a4c6_Prim> _16544_prim = _1a7a8504d_Prim(_165227_t.ptr());;
		{
			
			if (_1bd82bae2_IsFloat((*(_16544_prim))._field_Kind)) {
				_case_begin_1ac357354:;
				{
					_1bd830dc1_SetF64((*_165245_d.alloc)._field_Constant.ptr(), _1bd830046_AsF64((*(_165245_d))._field_Constant));
				}
			}
			else if (_1bd82b1c9_IsSigInt((*(_16544_prim))._field_Kind)) {
				_case_begin_1ac3573ed:;
				{
					_1bd8302ee_SetI64((*_165245_d.alloc)._field_Constant.ptr(), _1bd82ea29_AsI64((*(_165245_d))._field_Constant));
				}
			}
			else if (_1bd82b4d7_IsUnsigInt((*(_16544_prim))._field_Kind)) {
				_case_begin_1ac357464:;
				{
					_1bd8305a7_SetU64((*_165245_d.alloc)._field_Constant.ptr(), _1bd82ecb0_AsU64((*(_165245_d))._field_Constant));
				}
			}
			_match_end_1ac357288:;
		};
	} else {
		(*(_165245_d))._field_Constant=nullptr;
		(*_165245_d.alloc)._field_untyped=false;
	};
	if ((_1a7a85801_Enum((*(_165245_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a79bdddd_Enum> _16694_e = _1a7a85801_Enum((*(_165245_d))._field_Kind);;
		if (_1bd82bd78_IsNum(_1a7a82cb5_Str((*((*(_16694_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a7a8a4c6_Prim> _16753_prim = _1a7a8504d_Prim((*(_165245_d))._field_Kind);;
	if (((_16753_prim != nullptr) && _1bd82bd78_IsNum(_1a7a8a817_Str(_16753_prim)))) {
		return;;
	};
	_1a7a5377a_pushErr(_self_, _165255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_165245_d))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_165227_t.ptr()), &__jule_any_type4)}));
}



inline void _1a7a63d1d_castPrim(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _168328_t, jule::Ptr<_1a7a51503_Data> _168346_d, jule::Ptr<_1a795c013_Token> _168356_errorToken) {
	jule::Ptr<_1a7a8a4c6_Prim> _16843_prim = _1a7a8504d_Prim(_168328_t.ptr());;
	{
		
		if (_1a7a8dbe4_IsAny(_16843_prim.ptr())) {
			_case_begin_1ac3606d1:;
			{
				(*(_168346_d))._field_Constant=nullptr;
				(*_168346_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a7a8d95d_IsStr(_16843_prim.ptr())) {
			_case_begin_1ac360390:;
			{
				_1a7a630b4_castStr(_self_, _168346_d, _168356_errorToken);
			}
		}
		else if (_1bd82b7a1_IsInt(_1a7a8a817_Str(_16843_prim.ptr()))) {
			_case_begin_1ac360406:;
			{
				_1a7a634d2_castInt(_self_, _168328_t, _168346_d, _168356_errorToken);
			}
		}
		else if (_1bd82bd78_IsNum(_1a7a8a817_Str(_16843_prim.ptr()))) {
			_case_begin_1ac36046c:;
			{
				_1a7a63900_castNum(_self_, _168328_t, _168346_d, _168356_errorToken);
			}
		}
		else {
			_case_begin_1ac360329:;
			{
				_1a7a5377a_pushErr(_self_, _168356_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str(_168328_t), &__jule_any_type4)}));
			}
		}
		_match_end_1ac3602b3:;
	};
}



inline void _1a7a64181_castConstant(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _170133_t, jule::Ptr<_1a7a51503_Data>* _170152_d) {
	if ((((*(_170152_d)) == nullptr) || (!(_1a7a51e0a_IsConst((*(_170152_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _17053_prim = _1a7a8504d_Prim((*(_170133_t)).ptr());;
	_1a7a7cdae_castConstByType(&((*(_17053_prim))._field_Kind), _170152_d);
	(*((*(_170152_d))))._field_Model=jule::Any((*((*(_170152_d))))._field_Constant, &__jule_any_type19);
}



inline void _1a7a6459e_castTypeEnum(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _171033_t, jule::Ptr<_1a7a51503_Data>* _171052_d, jule::Ptr<_1a795c013_Token>* _171067_errorToken) {
	jule::I64 _17113_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a68438bd_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_171052_d))))._field_Kind), _171033_t, _171067_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17113_n);;
		_1a7a5377a_pushErr(_self_, (*(_171067_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_171052_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_171033_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171052_d))))._field_Constant=nullptr;
	(*((*(_171052_d))))._field_untyped=false;
}



inline void _1a7a649bc_castTypeEnumT(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _172034_t, jule::Ptr<_1a7a51503_Data>* _172053_d, jule::Ptr<_1a795c013_Token>* _172068_errorToken) {
	jule::I64 _17213_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a68438bd_checkTypeCompatibility((*(_self_))._field_s, _172034_t, &((*((*(_172053_d))))._field_Kind), _172068_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17213_n);;
		_1a7a5377a_pushErr(_self_, (*(_172068_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_172053_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_172034_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_172053_d))))._field_Constant=nullptr;
	(*((*(_172053_d))))._field_untyped=false;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a64e73_evalCastByTypeNData(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a828ec_TypeKind> _173039_t, jule::Ptr<_1a7a51503_Data> _173057_d, jule::Ptr<_1a795c013_Token> _173071_errorToken) {
	if (((_173057_d != nullptr) && (*_173057_d.alloc)._field_Decl)) {
		_1a7a5377a_pushErr(_self_, _173071_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a7a518dd_IsNil(_173057_d)) {
			_case_begin_1ac36d16c:;
			{
				if ((!(_1a7a8479a_NilCompatible(_173039_t.ptr())))) {
					_1a7a5377a_pushErr(_self_, _173071_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_173039_t), &__jule_any_type4)}));
				};
				(*_173057_d.alloc)._field_Constant=nullptr;
				(*_173057_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a7a8504d_Prim((*_173057_d.alloc)._field_Kind.ptr()) != nullptr) && _1a7a8dbe4_IsAny(_1a7a8504d_Prim((*(_173057_d))._field_Kind).ptr()))) {
			_case_begin_1ac36ce08:;
			{
				if ((_1a7a85801_Enum(_173039_t.ptr()) != nullptr)) {
					_1a7a5377a_pushErr(_self_, _173071_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a7a53add_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a7a85a87_TypeEnum(_173039_t.ptr()) != nullptr)) {
					_1a7a5377a_pushErr(_self_, _173071_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_173057_d.alloc)._field_Constant=nullptr;
				(*_173057_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*_173057_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac36ce6e:;
			{
				_1a7a6459e_castTypeEnum(_self_, &(_173039_t), &(_173057_d), &(_173071_errorToken));
			}
		}
		else if ((_1a7a85a87_TypeEnum(_173039_t.ptr()) != nullptr)) {
			_case_begin_1ac36ced5:;
			{
				_1a7a649bc_castTypeEnumT(_self_, &(_173039_t), &(_173057_d), &(_173071_errorToken));
			}
		}
		else if ((_1a7a8556a_Ptr(_173039_t.ptr()) != nullptr)) {
			_case_begin_1ac36d04b:;
			{
				_1a7a61ee7_castPtr(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a7a852d4_Sptr(_173039_t.ptr()) != nullptr)) {
			_case_begin_1ac36dc0b:;
			{
				_1a7a62833_castRef(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a7a860a4_Slc(_173039_t.ptr()) != nullptr)) {
			_case_begin_1ac36dc72:;
			{
				_1a7a62c51_castSlc(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a7a865c1_Struct(_173039_t.ptr()) != nullptr)) {
			_case_begin_1ac36dcd8:;
			{
				_1a7a62415_castStruct(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a7a8504d_Prim(_173039_t.ptr()) != nullptr)) {
			_case_begin_1ac36dd4e:;
			{
				_1a7a63d1d_castPrim(_self_, _173039_t, _173057_d, _173071_errorToken);
				_1a7a64181_castConstant(_self_, &(_173039_t), &(_173057_d));
			}
		}
		else {
			_case_begin_1ac36ccd7:;
			{
				_1a7a5377a_pushErr(_self_, _173071_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str(_173039_t.ptr()), &__jule_any_type4)}));
				_173057_d=nullptr;
			}
		}
		_match_end_1ac36cc3d:;
	};
	if ((_173057_d == nullptr)) {
		return nullptr;;
	};
	(*_173057_d.alloc)._field_Mutable=((*_173057_d.alloc)._field_Mutable || (!(_1a7a8427d_Mutable((*_173057_d.alloc)._field_Kind.ptr()))));
	if (((!((*_173057_d.alloc)._field_Decl)) && ((_1a7a85801_Enum((*(_173057_d))._field_Kind) == nullptr) || (!(_1a7a83106_Equal((*((*(_1a7a85801_Enum((*(_173057_d))._field_Kind)))._field_Kind))._field_Kind, _173039_t)))))) {
		_1a7a7c199_applyCastKind(&(_173057_d), &(_173039_t), &(_173071_errorToken));
		(*((*_173057_d.alloc)._field_Model.cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93)))._field_Token=_173071_errorToken;
	} else {
		(*_173057_d.alloc)._field_Kind=_173039_t;
	};
	(*_173057_d.alloc)._field_Decl=false;
	(*_173057_d.alloc)._field_Lvalue=false;
	(*_173057_d.alloc)._field_untyped=false;
	if (_1a7a51e0a_IsConst(_173057_d)) {
		(*((*_173057_d.alloc)._field_Constant))._field_Kind=(*(_1a7a8504d_Prim(_173039_t.ptr())))._field_Kind;
	};
	return _173057_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a65429_evalCastT(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _180331_t, jule::Ptr<_1a7976802_Expr>* _180350_e, jule::Ptr<_1a795c013_Token>* _180365_et) {
	jule::Ptr<_1a7a828ec_TypeKind> _18047_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18047_prefix;
	});;
	if ((_1a7a860a4_Slc((*(_180331_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180350_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1ac37dd92:;
				{
					(*_self_.alloc)._field_prefix=(*(_180331_t));
				}
			}
			_match_end_1ac37dd2b:;
		};
	};
	jule::Ptr<_1a7a51503_Data> _18137_d = _1a7a7148a_evalExpr(_self_, (*(_180350_e)));;
	if (((_18137_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18137_d;;
	};
	return _1a7a64e73_evalCastByTypeNData(_self_, (*(_180331_t)), _18137_d, (*(_180365_et)));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6576a_evalCast(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979162_CastExpr> _182029_c) {
	jule::Ptr<_1a7a89abe_TypeSymbol> _18217_t = _1a79b0d58_buildType((*(_182029_c))._field_Kind);;
	jule::Bool _18223_ok = _1a68410c4_checkType((*(_self_))._field_s, &(_18217_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18223_ok))) {
		return nullptr;;
	};
	return _1a7a65429_evalCastT(_self_, &((*(_18217_t))._field_Kind), &((*_182029_c.alloc)._field_Expr), &((*((*_182029_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a65aab_evalNsSelection(_1a7a5322a_Eval* _self_, jule::Ptr<_1a797953b_NsSelectionExpr> _182931_s) {
	jule::Str _18303_path = _1a7a9e441_buildLinkPathByTokens(&((*(_182931_s))._field_Ns));;
	jule::Ptr<_1a6817474_ImportInfo> _18317_imp = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa07c7_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>>((void*)__jule_anon_1ac3844d5, jule::Ptr<__jule_anon_1ac3844d5_ctx>::make(__jule_anon_1ac3844d5_ctx{._182931_s=_182931_s,._18303_path=_18303_path}).as<jule::Uintptr>(), __jule_anon_1ac3844d5_ctx_handler));;
	if ((_18317_imp == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*(_182931_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18303_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait _18437_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18317_imp, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data1);
	;
	_1a7a53ed9_disallowBuiltin(_self_);
	jule::Any _18487_def = _1a7a564e7_getDef(_self_, &((*((*_182931_s.alloc)._field_Ident))._field_Kind), false);;
	_1a7a53cdb_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18437_lookup;
	jule::Ptr<_1a7a51503_Data> _18517_d = _1a7a5a6a5_evalDef(_self_, &(_18487_def), (*_182931_s.alloc)._field_Ident);;
	return _18517_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a66062_evalStructLitExplicit(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79960d5_StructIns> _185542_s, jule::Slice<jule::Ptr<_1a7976802_Expr>> _18567_exprs, jule::Ptr<_1a795c013_Token> _185627_errorToken) {
	jule::Bool _18573_ok = _1a683b982_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185542_s))._field_Decl))._field_Generics.len(), (*_185542_s.alloc)._field_Generics.len(), _185627_errorToken);;
	if ((!(_18573_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_185542_s.alloc)._field_Decl))) {
		_1a7a5377a_pushErr(_self_, _185627_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*(_185542_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1ac32187e_pushReference(_self_, &(_185542_s));
	_1a7a588a1_checkDeprecated(_self_, &((*(*(_185542_s))._field_Decl.alloc)._field_Directives), _185627_errorToken);
	_1a7a445d4_structLitChecker _18707_slc = _1a7a445d4_structLitChecker{._field_e=_self_, ._field_errorToken=_185627_errorToken, ._field_s=_185542_s, };;
	_1a7a45d22_check(&_18707_slc, &(_18567_exprs));
	jule::Ptr<_1a7a51503_Data> _18777_d = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_185542_s, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a799b283_StructLitExprModel>(_1a799b283_StructLitExprModel{._field_Strct=_185542_s, ._field_Args=_18707_slc._field_args}), &__jule_any_type95), });;
	if ((*(*(_185542_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_18777_d))._field_Kind))._field_BindIdent=(*(*(_185542_s))._field_Decl.alloc)._field_Ident;
	};
	return _18777_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a663a3_evalStructLit(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797b84b_StructLit> _189334_lit) {
	jule::Ptr<_1a7a89abe_TypeSymbol> _18947_t = _1a79b0d58_buildType((*(_189334_lit))._field_Kind);;
	jule::Bool _18953_ok = _1a68410c4_checkType((*(_self_))._field_s, &(_18947_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18953_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a79960d5_StructIns> _19007_s = _1a7a865c1_Struct((*(_18947_t))._field_Kind.ptr());;
	if ((_19007_s == nullptr)) {
		if ((_1a7a852d4_Sptr((*(_18947_t))._field_Kind) != nullptr)) {
			_19007_s=_1a7a865c1_Struct((*(_1a7a852d4_Sptr((*(_18947_t))._field_Kind)))._field_Elem.ptr());
			if ((_19007_s != nullptr)) {
				goto _julec_label_1ac3951e9;
			};
		};
		_1a7a5377a_pushErr(_self_, (*((*_189334_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ac3951e9:;
	jule::Ptr<_1a7a51503_Data> _19137_d = _1a7a66062_evalStructLitExplicit(_self_, _19007_s, (*_189334_lit.alloc)._field_Exprs, (*(*(_189334_lit))._field_Kind.alloc)._field_Token);;
	if ((_1a7a852d4_Sptr((*(_18947_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1a799b283_StructLitExprModel> _19158_model = (*(_19137_d))._field_Model.cast_ptr<_1a799b283_StructLitExprModel>(&__jule_any_type95);;
		_1a7a7a7c4_makeStructLitAlloc(&(_19137_d), &(_19158_model));
	};
	return _19137_d;;
}



inline _1a7a947aa_typeChecker _1a7a66639_typeChecker(_1a7a5322a_Eval* _self_) {
	return _1a683ed70_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6697a_evalType(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79724bd_TypeDecl> _192528_t) {
	jule::Ptr<_1a7a89abe_TypeSymbol> _19267_tk = _1a79b0d58_buildType(_192528_t);;
	jule::Bool _19273_ok = _1a68410c4_checkType((*(_self_))._field_s, &(_19267_tk), (*(_self_))._field_lookup);;
	if ((!(_19273_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=(*(_19267_tk))._field_Kind, ._field_Model=jule::Any((*_19267_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1a7a66cdd_callTypeFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr>* _193832_fc, jule::Ptr<_1a7a51503_Data>* _193854_d) {
	if (((*((*(_193832_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*(_193832_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193832_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*((*(_193832_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_193854_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193832_fc))))._field_IsCo) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*(_193832_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193854_d))=nullptr;
		return;;
	} else if (((*((*(_193832_fc))))._field_Exception != nullptr)) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*(_193832_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193854_d))=nullptr;
		return;;
	};
	if (((*((*(_193832_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a7976802_Expr> _19548_arg = (*((*(_193832_fc))))._field_Args[0LL];;
		(*(_193854_d))=_1a7a65429_evalCastT(_self_, &((*((*(_193854_d))))._field_Kind), &(_19548_arg), &((*(_19548_arg))._field_Token));
		return;;
	};
	if (((*(_193854_d)) != nullptr)) {
		(*((*(_193854_d))))._field_Decl=false;
	};
}



inline void _1a7a67151_callBuiltinFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr>* _196435_fc, jule::Ptr<_1a7a51503_Data>* _196457_d) {
	if ((!(_1a797a8a0_Unhandled((*(_196435_fc)).ptr())))) {
		_1a7a5377a_pushErr(_self_.ptr(), (*((*(_196435_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196457_d))=(*(_1a7a8633a_Fn((*((*(_196457_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196435_fc, _196457_d);
	if (((*(_196457_d)) == nullptr)) {
		return;;
	};
	(*((*(_196457_d))))._field_Mutable=true;
}



inline void _1a7a674b4_checkFnOfConcurrentCall(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns>* _197640_f, jule::Ptr<_1a795c013_Token> _197651_errorToken) {
	if (_1a7a54270_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197640_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3a5083:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> *_198010_p = it;
			{
				if (_1a79a6e70_IsSelf((*((*(_198010_p))))._field_Decl.ptr())) {
					if ((!(_1a79a7206_IsRef((*((*(_198010_p))))._field_Decl)))) {
						_1a7a5377a_pushErr(_self_, _197651_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a7a53add_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_198010_p))))._field_Decl.alloc)._field_Reference) {
					_1a7a5377a_pushErr(_self_, _197651_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a7a53add_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ac3a5083:;
			++it;
			goto _iter_begin_1ac3a5083;
		}
		_iter_end_1ac3a5083:;
	};
}



inline void _1a7a678d2_processExceptionalHandler(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ab309_FnIns>* _199546_f, jule::Ptr<_1a797a52b_FnCallExpr>* _199562_fc, jule::Ptr<_1a7a51503_Data>* _199584_d) {
	jule::Bool _19963_resultNeeded = ((!(_1a79a879b_IsVoid((*((*(_199546_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a79de45d_scopeChecker> _199711_csc = nullptr;;
	jule::Ptr<_1a680dba7_Scope> _199811_ch = nullptr;;
	jule::Ptr<_1a799c4b5_FnCallExprModel> _20007_model = (*((*(_199584_d))))._field_Model.cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1a79de45d_scopeChecker> _20047_sc = (*(_self_))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0);;
	_199711_csc=_1a63763ac_newChildChecker(_20047_sc);
	if (_19963_resultNeeded) {
		(*(_199711_csc))._field_result=(*(_199546_f));
	};
	_199811_ch=_1a79e484d_getChild(_20047_sc);
	(*((*((*(_199562_fc))))._field_Exception))._field_Parent=(*_20047_sc.alloc)._field_tree;
	(*((*_199711_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_199711_csc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({_1a7a7ab48_buildErrorVar(&(_199811_ch), _199562_fc)}));
	_1a79e4c6b_checkChildSsc(_20047_sc, &((*((*(_199562_fc))))._field_Exception), &(_199811_ch), &(_199711_csc));
	(*(_20007_model))._field_Assigned=_19963_resultNeeded;
	(*_20007_model.alloc)._field_Except=_199811_ch;
	if ((_19963_resultNeeded && ((*_199711_csc.alloc)._field_result != nullptr))) {
		_1a7a5377a_pushErr(_self_, (*((*(_199562_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1a7a67c45_callFn(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr>* _202228_fc, jule::Ptr<_1a7a51503_Data>* _202250_d) {
	jule::Ptr<_1a79ab309_FnIns> _20237_f = _1a7a8633a_Fn((*((*(_202250_d))))._field_Kind.ptr());;
	if (_1a79ac78e_IsBuiltin(_20237_f.ptr())) {
		_1a7a67151_callBuiltinFn(_self_, _202228_fc, _202250_d);
		return;;
	};
	if ((_1a7a54506_isGlobal(_self_) && (*((*_20237_f.alloc)._field_Decl))._field_Exceptional)) {
		_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_202250_d))=nullptr;
		return;;
	};
	if (((!(_1a79a8a32_IsMethod((*(_20237_f))._field_Decl))) && _1a7a9d51c_hasDirective(&((*(*(_20237_f))._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_202250_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_202250_d))))._field_Mutable)) && _1a79a8a32_IsMethod((*(_20237_f))._field_Decl)) && (!((*(*(_20237_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20237_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a799b283_StructLitExprModel> _20495_lit = _1a7a7e102_isLitBased(&((*((*(_202250_d))))._field_Model));;
			if ((_20495_lit == nullptr)) {
				_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1a7a440ea_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20495_lit));
			};
		};
	} else if (((!(_1a7a54270_isUnsafe(_self_))) && (*(*(_20237_f))._field_Decl.alloc)._field_Unsafety)) {
		_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _20617_dynamicAnnotation = ((((*(*(_20237_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20237_f.alloc)._field_Generics.len() == 0LL)) && ((*_20237_f.alloc)._field_Params.len() > 0LL));;
	if (_20617_dynamicAnnotation) {
		(*_20237_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>>::alloc((*(*(_20237_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20237_f))._field_Decl.alloc)._field_Generics.len());
	} else if (((*_20237_f.alloc)._field_Generics.len() != (*(*(_20237_f))._field_Decl.alloc)._field_Generics.len())) {
		_1a683b982_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20237_f))._field_Decl.alloc)._field_Generics.len(), (*_20237_f.alloc)._field_Generics.len(), (*((*(_202228_fc))))._field_Token);
		(*(_202250_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a6837818_Sema> _20707_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20237_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20237_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20707_old != (*_self_.alloc)._field_s)) {
			(*(_20707_old))._field_errors=jule::append((*_20707_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20707_old;
	});;
	_1a7a4169c_fnCallArgChecker _20837_fcac = _1a7a4169c_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_202228_fc))))._field_Args, ._field_errorToken=(*((*(_202228_fc))))._field_Token, ._field_dynamicAnnotation=_20617_dynamicAnnotation, };;
	if ((!(_20617_dynamicAnnotation))) {
		if ((!((*_20237_f.alloc)._field_reloaded))) {
			jule::Bool _20925_ok = _1a68463d7_reloadFnInsTypes((*(_self_))._field_s, _20237_f);;
			(*_20237_f.alloc)._field_reloaded=true;
			if ((!(_20925_ok))) {
				(*(_202250_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a79ab309_FnIns> _20998_existInstance = _1a79a9d96_appendInstance((*(_20237_f))._field_Decl, &(_20237_f));;
		if ((_20998_existInstance != nullptr)) {
			_20237_f=_20998_existInstance;
		};
	} else if ((!(_1a6844b44_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_20237_f), &(_20837_fcac._field_ignored))))) {
		(*(_202250_d))=nullptr;
		return;;
	};
	_20837_fcac._field_f=_20237_f;
	jule::Bool _21107_ok = false;;
	if (((*(*(_20237_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20707_old, (*_self_.alloc)._field_s);
		_21107_ok=_1a7a43c54_check(&_20837_fcac);
		std::swap(_20707_old, (*_self_.alloc)._field_s);
	} else {
		_21107_ok=_1a7a43c54_check(&_20837_fcac);
	};
	if (_20617_dynamicAnnotation) {
		if ((!(_21107_ok))) {
			(*(_202250_d))=nullptr;
			return;;
		};
		if ((!(_1a7a600e4_checkGenericFn(_self_, &(_20237_f), &((*((*(_202228_fc))))._field_Token), &((*((*(_202250_d))))._field_Model))))) {
			(*(_202250_d))=nullptr;
			return;;
		};
	};
	jule::Any _21307_callModel = (*((*(_202250_d))))._field_Model;;
	if (_1a79a879b_IsVoid((*(_20237_f))._field_Decl)) {
		(*(_202250_d))=_1a7a7c3a8_buildVoidData();
	} else {
		(*((*(_202250_d))))._field_Kind=(*_20237_f.alloc)._field_Result;
		(*((*(_202250_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a799c4b5_FnCallExprModel> _21397_model = jule::new_ptr<_1a799c4b5_FnCallExprModel>(_1a799c4b5_FnCallExprModel{._field_Token=(*((*(_202228_fc))))._field_Token, ._field_Func=_20237_f, ._field_IsCo=(*((*(_202228_fc))))._field_IsCo, ._field_Expr=_21307_callModel, ._field_Args=_20837_fcac._field_argModels, });;
	(*((*(_202250_d))))._field_Model=jule::Any(_21397_model, &__jule_any_type33);
	(*((*(_202250_d))))._field_Mutable=true;
	if ((*(*(_20237_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_202228_fc))))._field_IsCo) {
			_1a683a453_pushErr((*(_self_))._field_s, (*((*(_202228_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a683a7b6_pushSuggestion((*(_self_))._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a797a8a0_Unhandled((*(_202228_fc)).ptr())) {
				_case_begin_1ac3cac68:;
				{
					_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a7a53add_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a797ab36_Ignored((*(_202228_fc)).ptr())) {
				_case_begin_1ac3ca95a:;
				{
					goto _match_end_1ac3c9706;
				}
			}
			else {
				_case_begin_1ac3c978e:;
				{
					_1a7a678d2_processExceptionalHandler(_self_, &(_20237_f), _202228_fc, _202250_d);
				}
			}
			_match_end_1ac3c9706:;
		};
	} else if ((!(_1a797a8a0_Unhandled((*(_202228_fc)).ptr())))) {
		_1a7a5377a_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_202228_fc))))._field_IsCo) {
		_1a7a674b4_checkFnOfConcurrentCall(_self_, &((*(_21397_model))._field_Func), (*((*(_202228_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a68086_evalFnCall(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797a52b_FnCallExpr> _217431_fc) {
	jule::Ptr<_1a7a828ec_TypeKind> _21757_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21757_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217431_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac3d02cd:;
			{
				if ((*((*((*(_217431_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1a7b69b5a_builtinCallerError(&(_self_), &(_217431_fc));;
				};
			}
		}
		_match_end_1ac3d0267:;
	};
	jule::Ptr<_1a7a51503_Data> _21887_d = _1a7a70676_evalExprKind(_self_, (*((*(_217431_fc))._field_Expr))._field_Kind);;
	if ((_21887_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_21887_d))._field_Decl) {
		_1a7a66cdd_callTypeFn(_self_, &(_217431_fc), &(_21887_d));
		return _21887_d;;
	};
	if ((_1a7a8633a_Fn((*(_21887_d))._field_Kind.ptr()) == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*_217431_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a7a67c45_callFn(_self_, &(_217431_fc), &(_21887_d));
	return _21887_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a68482_evalEnumStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79bdddd_Enum> _220734_enm, jule::Ptr<_1a795c013_Token> _220750_ident) {
	jule::Ptr<_1a79bd371_EnumItem> _22087_item = _1a79be9d2_FindItem(_220734_enm.ptr(), (*(_220750_ident))._field_Kind);;
	if ((_22087_item == nullptr)) {
		_1a7a5377a_pushErr(_self_, _220750_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220734_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220750_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1a7a7dd38_evalEnumStatic(&(_220734_enm), &(_22087_item), &(_220750_ident));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6887d_evalTypeEnumStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c05e8_TypeEnum> _221538_enm, jule::Ptr<_1a795c013_Token> _221554_ident) {
	jule::Ptr<_1a79c0021_TypeEnumItem> _22167_item = _1a79c11a9_FindItem(_221538_enm.ptr(), (*(_221554_ident))._field_Kind);;
	if ((_22167_item == nullptr)) {
		_1a7a5377a_pushErr(_self_, _221554_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221538_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221554_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1a7a85801_Enum((*((*(_22167_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac3d887a:;
			{
				return _1a7a56d77__evalEnum(_self_, _1a7a85801_Enum((*((*(_22167_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*((*(_22167_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac3d6b0e:;
			{
				return _1a7a575b4__evalTypeEnum(_self_, _1a7a85a87_TypeEnum((*((*(_22167_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a7a865c1_Struct((*((*(_22167_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac3d6b75:;
			{
				return _1a7a57d01__evalStruct(_self_, _1a7a865c1_Struct((*((*(_22167_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1ac3d6a98:;
			{
				jule::Ptr<_1a7a51503_Data> _22298_d = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=(*((*(_22167_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_22298_d))._field_Model=jule::Any((*_22298_d.alloc)._field_Kind, &__jule_any_type84);
				return _22298_d;;
			}
		}
		_match_end_1ac3d6c63:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a68c79_evalStructStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79960d5_StructIns> _223836_s, jule::Ptr<_1a795c013_Token> _223851_ident) {
	jule::Ptr<_1a7a51503_Data> _22397_d = jule::new_ptr<_1a7a51503_Data>();;
	;
	jule::Ptr<_1a79a8328_Fn> _22437_method = _1a799714c_FindMethod(_223836_s.ptr(), (*(_223851_ident))._field_Kind, true);;
	if ((_22437_method != nullptr)) {
		if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22437_method.alloc)._field_Public, (*_22437_method.alloc)._field_Token)))) {
			_1a7a5377a_pushErr(_self_, _223851_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223851_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a79ab309_FnIns> _22508_ins = _1a79a9a88_instance(_22437_method);;
		(*(_22508_ins))._field_Owner=_223836_s;
		_1ac1c6239_pushReference(_self_, &(_22508_ins));
		(*_22397_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a79a04c9_StructStaticIdentExprModel>(_1a79a04c9_StructStaticIdentExprModel{._field_Structure=_223836_s, ._field_Expr=(*_22397_d.alloc)._field_Model, ._field_Method=_22508_ins}), &__jule_any_type96);
		(*_22397_d.alloc)._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_22508_ins, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)});
		return _22397_d;;
	};
	jule::Ptr<_1a685a682_Var> _22647_sttc = _1a79977ce_FindStatic(_223836_s, (*_223851_ident.alloc)._field_Kind);;
	if ((_22647_sttc != nullptr)) {
		return _1a7a59dad_evalVar(_self_, _22647_sttc, _223851_ident);;
	};
	_1a7a5377a_pushErr(_self_, _223851_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223836_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223851_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a69230_evalTraitSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _227337_d, jule::Ptr<_1a79bb6d2_Trait> _227351_trt, jule::Ptr<_1a795c013_Token> _227368_ident) {
	jule::Ptr<_1a79a8328_Fn> _22747_f = _1a79bc381_FindMethod(_227351_trt.ptr(), (*(_227368_ident))._field_Kind);;
	if ((_22747_f == nullptr)) {
		_1a7a5377a_pushErr(_self_, _227368_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227351_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227368_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a79a9a88_instance(_22747_f), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a799e792_TraitSubIdentExprModel>(_1a799e792_TraitSubIdentExprModel{._field_Token=_227368_ident, ._field_Expr=(*(_227337_d))._field_Model, ._field_Method=_22747_f, ._field_Trt=_227351_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a69791_evalStructSubIdentField(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _229344_d, jule::Ptr<_1a79960d5_StructIns>* _229359_s, jule::Ptr<_1a795c013_Token>* _229379_tok, jule::Ptr<_1a7995535_FieldIns>* _229397_f) {
	jule::Ptr<_1a79a0133_StructSubIdentExprModel> _22947_model = jule::new_ptr<_1a79a0133_StructSubIdentExprModel>(_1a79a0133_StructSubIdentExprModel{._field_Token=(*(_229379_tok)), ._field_Expr=jule::new_ptr<_1a7a51503_Data>((*((*(_229344_d))))), ._field_Field=(*(_229397_f)), ._field_Owner=(*(_229359_s))});;
	(*((*(_229344_d))))._field_Model=jule::Any(_22947_model, &__jule_any_type98);
	(*((*(_229344_d))))._field_Kind=(*((*(_229397_f))))._field_Kind;
	(*((*(_229344_d))))._field_Lvalue=true;
	if (((*((*((*(_229397_f))))._field_Decl))._field_Mutable && (!((*((*(_229344_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
				_case_begin_1ac3e9d20:;
				{
					jule::Ptr<_1a79de45d_scopeChecker> _23095_scope = _1a79e2a8d_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0));;
					(*((*(_229344_d))))._field_Mutable=(((*(_23095_scope))._field_owner != nullptr) && ((*(*(_23095_scope))._field_owner.alloc)._field_Owner == (*(_229359_s))));
				}
			}
			_match_end_1ac3e9cba:;
		};
	};
	return (*(_229344_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a69d02_evalStructSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _231638_d, jule::Ptr<_1a79960d5_StructIns> _231652_s, jule::Ptr<_1a7979915_SubIdentExpr> _231671_si, jule::Bool _231690_ref) {
	jule::Ptr<_1a7995535_FieldIns> _23177_f = _1a799748d_FindField(_231652_s.ptr(), (*((*(_231671_si))._field_Ident))._field_Kind);;
	if ((_23177_f != nullptr)) {
		if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23177_f.alloc)._field_Decl))._field_Public, (*(*(_23177_f))._field_Decl.alloc)._field_Token)))) {
			_1a7a5377a_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*(_23177_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1a7a69791_evalStructSubIdentField(_self_, &(_231638_d), &(_231652_s), &((*_231671_si.alloc)._field_Ident), &(_23177_f));;
	};
	;
	jule::Ptr<_1a79a8328_Fn> _23277_m = _1a799714c_FindMethod(_231652_s, (*(*(_231671_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23277_m == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231652_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*(_231671_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s, (*(_23277_m))._field_Public, (*(_23277_m))._field_Token)))) {
		_1a7a5377a_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_23277_m))._field_Ident, &__jule_any_type4)}));
		_1a7a53add_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1a79a7206_IsRef((*(_23277_m))._field_Params[0LL].ptr()) && (!(_231690_ref)))) {
		_1a7a5377a_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a7a588a1_checkDeprecated(_self_, &((*(_23277_m))._field_Directives), (*_231671_si.alloc)._field_Ident);
	jule::Ptr<_1a79ab309_FnIns> _23437_ins = _1a79a9a88_instance(_23277_m);;
	(*(_23437_ins))._field_Owner=_231652_s;
	_1ac1c6239_pushReference(_self_, &(_23437_ins));
	jule::Ptr<_1a7a51503_Data> _23467_model = jule::new_ptr<_1a7a51503_Data>((*(_231638_d)));;
	(*_231638_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a79a0133_StructSubIdentExprModel>(_1a79a0133_StructSubIdentExprModel{._field_Token=(*_231671_si.alloc)._field_Ident, ._field_Expr=_23467_model, ._field_Method=_23437_ins, ._field_Owner=_231652_s}), &__jule_any_type98);
	(*_231638_d.alloc)._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_23437_ins, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)});
	return _231638_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6a143_evalIntTypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _235733_ident) {
	;
	{
		auto &_match_expr{ (*(_235733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac408d73:;
			{
				jule::Ptr<_1bd82c384_Const> _23618_c = static__1bd82c7c4_NewI64(_1bd827813_MaxI(jule::Str::lit("int", 3)));;
				(*(_23618_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b661c8_primInt, ._field_Model=jule::Any(_23618_c, &__jule_any_type19), ._field_Constant=_23618_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac409879:;
			{
				jule::Ptr<_1bd82c384_Const> _23708_c = static__1bd82c7c4_NewI64(static_cast<jule::I64>(_1bd827e1d_Min(jule::Str::lit("int", 3))));;
				(*(_23708_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b661c8_primInt, ._field_Model=jule::Any(_23708_c, &__jule_any_type19), ._field_Constant=_23708_c});;
			}
		}
		else {
			_case_begin_1ac408526:;
			{
				_1a7a5377a_pushErr(_self_, _235733_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235733_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac4089bb:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6a484_evalUintTypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _238434_ident) {
	;
	{
		auto &_match_expr{ (*(_238434_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac40cb57:;
			{
				jule::Ptr<_1bd82c384_Const> _23888_c = static__1bd82ca8d_NewU64(_1bd827acc_MaxU(jule::Str::lit("uint", 4)));;
				(*(_23888_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b65d10_primUint, ._field_Model=jule::Any(_23888_c, &__jule_any_type19), ._field_Constant=_23888_c});;
			}
		}
		else {
			_case_begin_1ac40c54c:;
			{
				_1a7a5377a_pushErr(_self_, _238434_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238434_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac40c7a0:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6a7c5_evalI8TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _240232_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240232_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac410d69:;
			{
				jule::Ptr<_1bd82c384_Const> _24088_c = static__1bd82c7c4_NewI64(127LL);;
				(*(_24088_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b6641a_primI8, ._field_Model=jule::Any(_24088_c, &__jule_any_type19), ._field_Constant=_24088_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac411870:;
			{
				jule::Ptr<_1bd82c384_Const> _24178_c = static__1bd82c7c4_NewI64(-128LL);;
				(*(_24178_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b6641a_primI8, ._field_Model=jule::Any(_24178_c, &__jule_any_type19), ._field_Constant=_24178_c});;
			}
		}
		else {
			_case_begin_1ac4105b6:;
			{
				_1a7a5377a_pushErr(_self_, _240232_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_240232_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac4109d4:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6ab16_evalI16TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _243133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac415137:;
			{
				jule::Ptr<_1bd82c384_Const> _24378_c = static__1bd82c7c4_NewI64(32767LL);;
				(*(_24378_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b666b2_primI16, ._field_Model=jule::Any(_24378_c, &__jule_any_type19), ._field_Constant=_24378_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac415b3d:;
			{
				jule::Ptr<_1bd82c384_Const> _24468_c = static__1bd82c7c4_NewI64(-32768LL);;
				(*(_24468_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b666b2_primI16, ._field_Model=jule::Any(_24468_c, &__jule_any_type19), ._field_Constant=_24468_c});;
			}
		}
		else {
			_case_begin_1ac414884:;
			{
				_1a7a5377a_pushErr(_self_, _243133_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_243133_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac414ca2:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6ae57_evalI32TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _246033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac419405:;
			{
				jule::Ptr<_1bd82c384_Const> _24668_c = static__1bd82c7c4_NewI64(2147483647LL);;
				(*(_24668_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b6696a_primI32, ._field_Model=jule::Any(_24668_c, &__jule_any_type19), ._field_Constant=_24668_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac419e0b:;
			{
				jule::Ptr<_1bd82c384_Const> _24758_c = static__1bd82c7c4_NewI64(-2147483648LL);;
				(*(_24758_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b6696a_primI32, ._field_Model=jule::Any(_24758_c, &__jule_any_type19), ._field_Constant=_24758_c});;
			}
		}
		else {
			_case_begin_1ac418b52:;
			{
				_1a7a5377a_pushErr(_self_, _246033_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_246033_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac419070:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6b298_evalI64TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _248933_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac41d6c3:;
			{
				jule::Ptr<_1bd82c384_Const> _24958_c = static__1bd82c7c4_NewI64(jule::MAX_I64);;
				(*(_24958_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b66c23_primI64, ._field_Model=jule::Any(_24958_c, &__jule_any_type19), ._field_Constant=_24958_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac41e1c9:;
			{
				jule::Ptr<_1bd82c384_Const> _25048_c = static__1bd82c7c4_NewI64(jule::MIN_I64);;
				(*(_25048_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b66c23_primI64, ._field_Model=jule::Any(_25048_c, &__jule_any_type19), ._field_Constant=_25048_c});;
			}
		}
		else {
			_case_begin_1ac41ce20:;
			{
				_1a7a5377a_pushErr(_self_, _248933_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248933_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac41d33d:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6b5d9_evalU8TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _251832_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251832_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac4225b7:;
			{
				jule::Ptr<_1bd82c384_Const> _25238_c = static__1bd82ca8d_NewU64(255LLU);;
				(*(_25238_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b66ecb_primU8, ._field_Model=jule::Any(_25238_c, &__jule_any_type19), ._field_Constant=_25238_c});;
			}
		}
		else {
			_case_begin_1ac421cc0:;
			{
				_1a7a5377a_pushErr(_self_, _251832_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251832_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac4221bb:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6b92a_evalU16TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _253733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac425345:;
			{
				jule::Ptr<_1bd82c384_Const> _25428_c = static__1bd82ca8d_NewU64(65535LLU);;
				(*(_25428_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67284_primU16, ._field_Model=jule::Any(_25428_c, &__jule_any_type19), ._field_Constant=_25428_c});;
			}
		}
		else {
			_case_begin_1ac424a4d:;
			{
				_1a7a5377a_pushErr(_self_, _253733_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253733_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac424e49:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6bc6b_evalU32TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _255633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac4280c3:;
			{
				jule::Ptr<_1bd82c384_Const> _25618_c = static__1bd82ca8d_NewU64(4294967295LLU);;
				(*(_25618_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b6753c_primU32, ._field_Model=jule::Any(_25618_c, &__jule_any_type19), ._field_Constant=_25618_c});;
			}
		}
		else {
			_case_begin_1ac4277cb:;
			{
				_1a7a5377a_pushErr(_self_, _255633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255633_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac427bc7:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6c0ac_evalU64TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _257533_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac42ad51:;
			{
				jule::Ptr<_1bd82c384_Const> _25808_c = static__1bd82ca8d_NewU64(jule::MAX_U64);;
				(*(_25808_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67a26_primU64, ._field_Model=jule::Any(_25808_c, &__jule_any_type19), ._field_Constant=_25808_c});;
			}
		}
		else {
			_case_begin_1ac42a559:;
			{
				_1a7a5377a_pushErr(_self_, _257533_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257533_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac42a955:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6c3ed_evalF32TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _259433_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac42e2e9:;
			{
				jule::Ptr<_1bd82c384_Const> _26018_c = static__1bd82d3da_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26018_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67c68_primF32, ._field_Model=jule::Any(_26018_c, &__jule_any_type19), ._field_Constant=_26018_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac434b5c:;
			{
				jule::Ptr<_1bd82c384_Const> _26108_c = static__1bd82d3da_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26108_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67c68_primF32, ._field_Model=jule::Any(_26108_c, &__jule_any_type19), ._field_Constant=_26108_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ac434bc3:;
			{
				jule::Ptr<_1bd82c384_Const> _26198_c = static__1bd82d3da_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26198_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67c68_primF32, ._field_Model=jule::Any(_26198_c, &__jule_any_type19), ._field_Constant=_26198_c});;
			}
		}
		else {
			_case_begin_1ac42dabd:;
			{
				_1a7a5377a_pushErr(_self_, _259433_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259433_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac42de42:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6c73e_evalF64TypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a795c013_Token> _263333_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ac4398ed:;
			{
				jule::Ptr<_1bd82c384_Const> _26408_c = static__1bd82d3da_NewF64(jule::MAX_F64);;
				(*(_26408_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67e77_primF64, ._field_Model=jule::Any(_26408_c, &__jule_any_type19), ._field_Constant=_26408_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ac43a404:;
			{
				jule::Ptr<_1bd82c384_Const> _26498_c = static__1bd82d3da_NewF64(jule::MIN_F64);;
				(*(_26498_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67e77_primF64, ._field_Model=jule::Any(_26498_c, &__jule_any_type19), ._field_Constant=_26498_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ac43a46a:;
			{
				jule::Ptr<_1bd82c384_Const> _26588_c = static__1bd82d3da_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26588_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_untyped=true, ._field_Kind=_1a7b67e77_primF64, ._field_Model=jule::Any(_26588_c, &__jule_any_type19), ._field_Constant=_26588_c});;
			}
		}
		else {
			_case_begin_1ac4391c2:;
			{
				_1a7a5377a_pushErr(_self_, _263333_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263333_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac439546:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6cb3a_evalPrimStatic(_1a7a5322a_Eval* _self_, jule::Str _267230_kind, jule::Ptr<_1a795c013_Token> _267241_ident) {
	{
		auto &_match_expr{ _267230_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ac43e0d9:;
			{
				return _1a7a6a143_evalIntTypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ac43ea8a:;
			{
				return _1a7a6a484_evalUintTypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ac43eb01:;
			{
				return _1a7a6a7c5_evalI8TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ac43dcba:;
			{
				return _1a7a6ab16_evalI16TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ac43dd31:;
			{
				return _1a7a6ae57_evalI32TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ac43dd97:;
			{
				return _1a7a6b298_evalI64TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ac43de0d:;
			{
				return _1a7a6b5d9_evalU8TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ac43ebde:;
			{
				return _1a7a6b92a_evalU16TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ac43ec55:;
			{
				return _1a7a6bc6b_evalU32TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ac43ecbb:;
			{
				return _1a7a6c0ac_evalU64TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ac43ed32:;
			{
				return _1a7a6c3ed_evalF32TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ac43ed98:;
			{
				return _1a7a6c73e_evalF64TypeStatic(_self_, _267241_ident);;
			}
		}
		else {
			_case_begin_1ac43a646:;
			{
				_1a7a5377a_pushErr(_self_, _267241_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_267230_kind, &__jule_any_type4),jule::Any((*(_267241_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac43a6bd:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6d036_evalTypeStatic(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _270434_d, jule::Ptr<_1a7979915_SubIdentExpr> _270448_si) {
	{
		
		if ((_1a7a8504d_Prim((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac444287:;
			{
				return _1a7a6cb3a_evalPrimStatic(_self_, _1a7a8a817_Str(_1a7a8504d_Prim((*(_270434_d))._field_Kind).ptr()), (*(_270448_si))._field_Ident);;
			}
		}
		else if ((_1a7a85801_Enum((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac44508a:;
			{
				return _1a7a68482_evalEnumStatic(_self_, _1a7a85801_Enum((*(_270434_d))._field_Kind), (*(_270448_si))._field_Ident);;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac445101:;
			{
				return _1a7a6887d_evalTypeEnumStatic(_self_, _1a7a85a87_TypeEnum((*(_270434_d))._field_Kind), (*(_270448_si))._field_Ident);;
			}
		}
		else if ((_1a7a865c1_Struct((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac443e35:;
			{
				return _1a7a68c79_evalStructStatic(_self_, _1a7a865c1_Struct((*(_270434_d))._field_Kind), (*(_270448_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1ac443dbe:;
			{
				_1a7a5377a_pushErr(_self_, (*(_270448_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_270434_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac443d14:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1ac44bd94_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79d3078_comptimeTypeInfo>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a79d927c_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a7a51503_Data> _1ac4514e7_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c4223_comptimeStructField>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a79c5ac6_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a7a51503_Data> _1ac455b06_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79ca78a_comptimeEnumField>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a79cb824_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a7a51503_Data> _1ac45a259_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79cd22c_comptimeParam>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a79d0185_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a7a51503_Data> _1ac45e9ab_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a79c74ce_comptimeStatic>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a79c8e09_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a7a51503_Data> _1ac4640ba_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a67ecc40_comptimeValue>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a6800281_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a7a51503_Data> _1ac4686c9_comptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a6801b89_comptimeFile>* _272054_ct, jule::Ptr<_1a7a51503_Data>* _272074_d, jule::Ptr<_1a7979915_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a7a51503_Data> _27217_cd = _1a68036e6_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a7a5377a_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}



inline __jule_tuple_x_1a7a51503_Data__jule_tuple_bool _1a7a6d8d8_tryComptimeObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data>* _272843_d, jule::Ptr<_1a7979915_SubIdentExpr> _272857_si) {
	__jule_tuple_x_1a7a51503_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a7a88914_comptimeTypeInfo((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac44a2b0:;
			{
				jule::Ptr<_1a79d3078_comptimeTypeInfo> _27318_ct = _1a7a88914_comptimeTypeInfo((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac44bd94_comptimeObjSubIdent(_self_, &(_27318_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a87627_comptimeStructField((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac449da3:;
			{
				jule::Ptr<_1a79c4223_comptimeStructField> _27348_ct = _1a7a87627_comptimeStructField((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac4514e7_comptimeObjSubIdent(_self_, &(_27348_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a87b44_comptimeEnumField((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac449e2a:;
			{
				jule::Ptr<_1a79ca78a_comptimeEnumField> _27378_ct = _1a7a87b44_comptimeEnumField((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac455b06_comptimeObjSubIdent(_self_, &(_27378_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a88161_comptimeParam((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac449ea2:;
			{
				jule::Ptr<_1a79cd22c_comptimeParam> _27408_ct = _1a7a88161_comptimeParam((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac45a259_comptimeObjSubIdent(_self_, &(_27408_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a88e31_comptimeStatic((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac44a029:;
			{
				jule::Ptr<_1a79c74ce_comptimeStatic> _27438_ct = _1a7a88e31_comptimeStatic((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac45e9ab_comptimeObjSubIdent(_self_, &(_27438_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a891b7_comptimeValue((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac44a0a1:;
			{
				jule::Ptr<_1a67ecc40_comptimeValue> _27468_ct = _1a7a891b7_comptimeValue((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac4640ba_comptimeObjSubIdent(_self_, &(_27468_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a7a8944d_comptimeFile((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac44a128:;
			{
				jule::Ptr<_1a6801b89_comptimeFile> _27498_ct = _1a7a8944d_comptimeFile((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1ac4686c9_comptimeObjSubIdent(_self_, &(_27498_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac449d3c:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ac449c93:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6dcd4_evalObjSubIdent(_1a7a5322a_Eval* _self_, jule::Ptr<_1a7a51503_Data> _275635_d, jule::Ptr<_1a7979915_SubIdentExpr> _275649_si) {
	if (_1a795e8ea_IsIgnoreIdent((*((*(_275649_si))._field_Ident))._field_Kind)) {
		_1a7a5377a_pushErr(_self_, (*_275649_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a7a51503_Data> _27638_compData;
		jule::Bool _276318_ok;
		({
			__jule_tuple_x_1a7a51503_Data__jule_tuple_bool __jule_assign_result = _1a7a6d8d8_tryComptimeObjSubIdent(_self_, &(_275635_d), _275649_si);
			_27638_compData = __jule_assign_result.__jule_result_arg0;
			_276318_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276318_ok) {
			return _27638_compData;;
		};
	};
	jule::Ptr<_1a7a828ec_TypeKind> _27697_kind = (*(_275635_d))._field_Kind;;
	{
		
		if ((_1a7a8556a_Ptr((*_275635_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac46d833:;
			{
				jule::Ptr<_1a7a927b9_Ptr> _27724_ptr = _1a7a8556a_Ptr((*(_275635_d))._field_Kind);;
				if (_1a7a93303_IsUnsafe(_27724_ptr.ptr())) {
					goto _match_end_1ac46d789;
				};
				if ((!(_1a7a54270_isUnsafe(_self_)))) {
					_1a7a5377a_pushErr(_self_, (*_275649_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_27697_kind=(*(_1a7a8556a_Ptr((*(_275635_d))._field_Kind)))._field_Elem;
				_1a7a7e3dd_makeImplicitDeref(&(_275635_d), (*_275649_si.alloc)._field_Ident);
			}
		}
		else if ((_1a7a852d4_Sptr((*_275635_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac46d8cc:;
			{
				_27697_kind=(*(_1a7a852d4_Sptr((*(_275635_d))._field_Kind)))._field_Elem;
				_1a7a7e3dd_makeImplicitDeref(&(_275635_d), (*_275649_si.alloc)._field_Ident);
			}
		}
		_match_end_1ac46d789:;
	};
	{
		
		if ((_1a7a86857_Trait((*_275635_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac46dd3e:;
			{
				return _1a7a69230_evalTraitSubIdent(_self_, _275635_d, _1a7a86857_Trait((*(_275635_d))._field_Kind), (*_275649_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a7a865c1_Struct(_27697_kind.ptr()) != nullptr)) {
			_case_begin_1ac471ec9:;
			{
				jule::Ptr<_1a79960d5_StructIns> _27904_s = _1a7a865c1_Struct(_27697_kind);;
				if (_1a7a7b660_isInstancedStruct(_27904_s)) {
					jule::Bool _27929_usedReferenceElem = (_1a7a852d4_Sptr((*_275635_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1a7a69d02_evalStructSubIdent(_self_, _275635_d, _1a7a865c1_Struct(_27697_kind), _275649_si, _27929_usedReferenceElem);;
				};
			}
		}
		_match_end_1ac4723a3:;
	};
	_1a7a5377a_pushErr(_self_, (*_275649_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*_275635_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6e125_evalSubIdent(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979915_SubIdentExpr> _280033_si) {
	jule::Ptr<_1a7a828ec_TypeKind> _28017_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28017_prefix;
	});;
	jule::Ptr<_1a7a51503_Data> _28047_d = _1a7a70676_evalExprKind(_self_, (*((*(_280033_si))._field_Expr))._field_Kind);;
	if ((_28047_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28047_d))._field_Decl) {
		return _1a7a6d036_evalTypeStatic(_self_, _28047_d, _280033_si);;
	};
	return _1a7a6dcd4_evalObjSubIdent(_self_, _28047_d, _280033_si);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6e466_evalTuple(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a79773e6_TupleExpr> _281430_tup) {
	jule::Ptr<_1a7a905b9_Tuple> _28157_tupT = jule::new_ptr<_1a7a905b9_Tuple>();;
	(*_28157_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::alloc(0LL, (*(_281430_tup))._field_Expr.len());
	jule::Ptr<_1a79a0ba0_TupleExprModel> _28187_model = jule::new_ptr<_1a79a0ba0_TupleExprModel>(_1a79a0ba0_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a7a51503_Data>>::alloc(0LL, (*_281430_tup.alloc)._field_Expr.len())});;
	jule::Bool _28227_ok = true;;
	{
		auto expr = &((*_281430_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac47bc1a:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _282315_expr = *it;
			{
				jule::Ptr<_1a7a51503_Data> _28248_d = _1a7a7148a_evalExpr(_self_, _282315_expr);;
				if ((_28248_d == nullptr)) {
					_28227_ok=false;
					goto _iter_next_1ac47bc1a;
				};
				(*_28157_tupT.alloc)._field_Types=jule::append((*_28157_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::make({(*(_28248_d))._field_Kind}));
				(*(_28187_model))._field_Datas=jule::append((*_28187_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1a7a51503_Data>>::make({_28248_d}));
			}
			_iter_next_1ac47bc1a:;
			++it;
			goto _iter_begin_1ac47bc1a;
		}
		_iter_end_1ac47bc1a:;
	};
	if ((!(_28227_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_28157_tupT, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data23)}), ._field_Model=jule::Any(_28187_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6e862_evalMap(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7a91169_Map> _284328_m, jule::Ptr<_1a797bd02_BraceLit> _284341_lit) {
	jule::Ptr<_1a799db7b_MapExprModel> _28447_model = jule::new_ptr<_1a799db7b_MapExprModel>(_1a799db7b_MapExprModel{._field_KeyKind=(*(_284328_m))._field_Key, ._field_ValKind=(*_284328_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284341_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4809aa:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _284915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ac482050:;
						{
							goto _match_end_1ac4813a1;
						}
					}
					else {
						_case_begin_1ac481406:;
						{
							_1a7a5377a_pushErr(_self_.ptr(), (*(_284341_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ac4813a1:;
				};
				jule::Ptr<_1a797c62c_KeyValPair> _28598_pair = (*(_284915_expr))._field_Kind.cast_ptr<_1a797c62c_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1a7a51503_Data> _28618_key = _1a7a7148a_evalExpr(_self_, (*(_28598_pair))._field_Key);;
				if ((_28618_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a7a51503_Data> _28668_val = _1a7a7148a_evalExpr(_self_, (*_28598_pair.alloc)._field_Val);;
				if ((_28668_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a68472ea_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284328_m.alloc)._field_Key), &(_28618_key), &((*((*_28598_pair.alloc)._field_Key))._field_Token))) {
					_1a6842e61_checkAssignType((*(_self_))._field_s, false, &((*_284328_m.alloc)._field_Key), &(_28618_key), (*(*(_28598_pair))._field_Key.alloc)._field_Token);
				};
				if (_1a68472ea_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284328_m.alloc)._field_Val), &(_28668_val), &((*((*_28598_pair.alloc)._field_Val))._field_Token))) {
					_1a6842e61_checkAssignType((*(_self_))._field_s, false, &((*_284328_m.alloc)._field_Val), &(_28668_val), (*(*(_28598_pair))._field_Val.alloc)._field_Token);
				};
				(*(_28447_model))._field_Entries=jule::append((*_28447_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1a799d6c5_KeyValPairExprModel>>::make({jule::new_ptr<_1a799d6c5_KeyValPairExprModel>(_1a799d6c5_KeyValPairExprModel{._field_Key=(*(_28618_key))._field_Model, ._field_Val=(*(_28668_val))._field_Model})}));
			}
			_iter_next_1ac4809aa:;
			++it;
			goto _iter_begin_1ac4809aa;
		}
		_iter_end_1ac4809aa:;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_284328_m, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Model=jule::Any(_28447_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6eba3_evalBraceLit(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a797bd02_BraceLit> _289233_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ac48a641:;
			{
				_1a7a5377a_pushErr(_self_, (*(_289233_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7a86add_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac48a6a7:;
			{
				return _1a7a6e862_evalMap(_self_, _1a7a86add_Map((*(_self_))._field_prefix), _289233_lit);;
			}
		}
		else if ((_1a7a865c1_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac48a71d:;
			{
				return _1a7a66062_evalStructLitExplicit(_self_, _1a7a865c1_Struct((*(_self_))._field_prefix), (*(_289233_lit))._field_Exprs, (*_289233_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1ac4899a3:;
			{
				_1a7a5377a_pushErr(_self_.ptr(), (*(_289233_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac488c8d:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a6eee4_evalAnonFunc(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a798417d_FnDecl> _290733_decl) {
	_1a7a947aa_typeChecker _29087_tc = _1a7a947aa_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1a79ab309_FnIns> _29137_ins = _1a7a9b482_buildFunc(&_29087_tc, _290733_decl);;
	if ((_29137_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29137_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a685a682_Var>> _29187_captured = jule::Slice<jule::Ptr<_1a685a682_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
			_case_begin_1ac48ee81:;
			{
				jule::Ptr<_1a79de45d_scopeChecker> _29218_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0);;
				jule::Ptr<_1a79de45d_scopeChecker> _29228_scc = _1a63763ac_newChildChecker(_29218_sc);;
				(*(_29228_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a79dcdda_scopeLabel>>>(nullptr);
				(*_29228_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a79dd46d_scopeGoto>>>(nullptr);
				(*_29228_scc.alloc)._field_owner=_29137_ins;
				(*_29228_scc.alloc)._field_childIndex=0LL;
				(*_29228_scc.alloc)._field_it=0LLU;
				(*_29228_scc.alloc)._field_cse=0LLU;
				(*_29228_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a685a682_Var>>>)((&(_29187_captured))));
				_1a68553c4_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29137_ins), &(_29228_scc));
			}
		}
		else {
			_case_begin_1ac490e60:;
			{
				_1a68559e0_checkFnIns((*_self_.alloc)._field_s, &(_29137_ins));
			}
		}
		_match_end_1ac490e0a:;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_29137_ins, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a799d2eb_AnonFnExprModel>(_1a799d2eb_AnonFnExprModel{._field_Captured=_29187_captured, ._field_Func=_29137_ins, ._field_Global=_1a7a54506_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a70335_evalBinary(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7979dbb_BinaryExpr> _294531_op) {
	_1a7a738dd_binaryEval _29467_bs = static__1a7a73e93_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a7a8a4c6_Prim> _29494_prim = _1a7a8504d_Prim((*(_self_))._field_prefix);;
		if (((_29494_prim == nullptr) || (!(_1bd82bd78_IsNum(_1a7a8a817_Str(_29494_prim.ptr())))))) {
			jule::Ptr<_1a7a828ec_TypeKind> _29519_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29519_prefix;
			});;
			return _1a7a7996b_eval(&_29467_bs, &(_294531_op));;
		};
	};
	return _1a7a7996b_eval(&_29467_bs, &(_294531_op));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a70676_evalExprKind(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Any _296033_kind) {
	{
		auto &_match_expr{ _296033_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ac499694:;
			{
				jule::Ptr<_1a7976abb_RangeExpr> _29638_e = _296033_kind.unsafe_cast_ptr<_1a7976abb_RangeExpr>();;
				return _1a7a70676_evalExprKind(_self_, (*((*(_29638_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ac4998c5:;
			{
				return _1a7a55caa_evalLit(_self_.ptr(), _296033_kind.cast_ptr<_1a797778c_LitExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac49993b:;
			{
				return _1a7a5a9e6_evalIdent(_self_.ptr(), _296033_kind.cast_ptr<_1a797811c_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ac4999a2:;
			{
				return _1a7a5ad37_evalUnary(_self_, _296033_kind.cast_ptr<_1a79788ae_UnaryExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ac499a18:;
			{
				return _1a7a5b178_evalVariadic(_self_, _296033_kind.cast_ptr<_1a7978c88_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ac499a7e:;
			{
				return _1a7a5b4b9_evalUnsafe(_self_, _296033_kind.cast_ptr<_1a7977b66_UnsafeExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ac499ae5:;
			{
				return _1a7a5c102_evalSliceExpr(_self_, _296033_kind.cast_ptr<_1a797cd58_SliceExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ac499e9c:;
			{
				return _1a7a60798_evalIndexing(_self_, _296033_kind.cast_ptr<_1a797d7b5_IndexingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ac49a013:;
			{
				return _1a7a61ac9_evalSlicing(_self_, _296033_kind.cast_ptr<_1a797de25_SlicingExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ac49a079:;
			{
				return _1a7a6576a_evalCast(_self_, _296033_kind.cast_ptr<_1a7979162_CastExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac49a0e0:;
			{
				return _1a7a65aab_evalNsSelection(_self_.ptr(), _296033_kind.cast_ptr<_1a797953b_NsSelectionExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ac49a167:;
			{
				return _1a7a663a3_evalStructLit(_self_, _296033_kind.cast_ptr<_1a797b84b_StructLit>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ac49a1de:;
			{
				return _1a7a6697a_evalType(_self_.ptr(), _296033_kind.cast_ptr<_1a79724bd_TypeDecl>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ac49a266:;
			{
				return _1a7a68086_evalFnCall(_self_, _296033_kind.cast_ptr<_1a797a52b_FnCallExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ac49a2dd:;
			{
				return _1a7a6e125_evalSubIdent(_self_, _296033_kind.cast_ptr<_1a7979915_SubIdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac49a365:;
			{
				return _1a7a6e466_evalTuple(_self_, _296033_kind.cast_ptr<_1a79773e6_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ac49a3dc:;
			{
				return _1a7a6eba3_evalBraceLit(_self_, _296033_kind.cast_ptr<_1a797bd02_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac49a464:;
			{
				return _1a7a6eee4_evalAnonFunc(_self_, _296033_kind.cast_ptr<_1a798417d_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ac49a4db:;
			{
				return _1a7a70335_evalBinary(_self_, _296033_kind.cast_ptr<_1a7979dbb_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1ac49985e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac499809:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a709b7_eval1(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _300826_expr) {
	jule::Ptr<_1a7a51503_Data> _30097_d = _1a7a70676_evalExprKind(_self_, (*(_300826_expr))._field_Kind);;
	if (((_30097_d == nullptr) || ((*(_30097_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a7a8633a_Fn((*(_30097_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4a6a58:;
			{
				jule::Ptr<_1a79ab309_FnIns> _30168_f = _1a7a8633a_Fn((*(_30097_d))._field_Kind.ptr());;
				if (_1a79ac78e_IsBuiltin(_30168_f.ptr())) {
					_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*_300826_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ac4a6151;
				};
				if (((*_30168_f.alloc)._field_Generics.len() != (*((*_30168_f.alloc)._field_Decl))._field_Generics.len())) {
					_1a683a453_pushErr((*(_self_))._field_s, (*_300826_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_30168_f.alloc)._field_Decl))._field_Statically)) && _1a79a8a32_IsMethod((*(_30168_f))._field_Decl))) {
					_1a683a453_pushErr((*(_self_))._field_s, (*_300826_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_30168_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1ac4a6151:;
	};
	return _30097_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a70d08_eval(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _303625_expr) {
	jule::Ptr<_1a7a51503_Data> _30377_d = _1a7a709b7_eval1(_self_, _303625_expr);;
	if ((_30377_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a7a8710a_comptime((*(_30377_d))._field_Kind.ptr()))) {
		_1a683a453_pushErr((*_self_.alloc)._field_s.ptr(), (*(_303625_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30377_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a71149_evalExpr1(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _305130_expr) {
	jule::Ptr<_1a7a51503_Data> _30527_d = _1a7a709b7_eval1(_self_, _305130_expr);;
	{
		
		if ((_30527_d == nullptr)) {
			_case_begin_1ac4aec70:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30527_d))._field_Decl) {
			_case_begin_1ac4aed19:;
			{
				_1a7a5377a_pushErr(_self_, (*(_305130_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac4aebe8:;
			{
				return _30527_d;;
			}
		}
		_match_end_1ac4aeb82:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7148a_evalExpr(jule::Ptr<_1a7a5322a_Eval> _self_, jule::Ptr<_1a7976802_Expr> _306729_expr) {
	jule::Ptr<_1a7a51503_Data> _30687_d = _1a7a70d08_eval(_self_, _306729_expr);;
	{
		
		if ((_30687_d == nullptr)) {
			_case_begin_1ac4b1b62:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30687_d))._field_Decl) {
			_case_begin_1ac4b1c0b:;
			{
				_1a7a5377a_pushErr(_self_, (*(_306729_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac4b1ada:;
			{
				return _30687_d;;
			}
		}
		_match_end_1ac4b1a74:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a5322a_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a7a71952_unaryEval static__1a7a71d92_new(jule::Ptr<_1a7a5322a_Eval> _308820_e) {
	return _1a7a71952_unaryEval{._field_e=_308820_e, };;
}



inline void _1a7a72090_minus(_1a7a71952_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ac4b3867:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4b3c52:;
			{
				if ((!(_1bd82bd78_IsNum(_1a7a82cb5_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a7a865c1_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4b3526:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac4b34b0:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac4b3405:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7a51e0a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bd831d8e_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4b8064:;
				{
					_1bd830dc1_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1bd82e793_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bd831355_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4b8152:;
				{
					_1bd8302ee_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1bd82dc59_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bd8315db_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4b7c23:;
				{
					_1bd8302ee_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1bd82ea29_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac4b7b9b:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3126:5"));;
				}
			}
			_match_end_1ac4b7b02:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a7a7228d_plus(_1a7a71952_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ac4bd597:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4bd982:;
			{
				if ((!(_1bd82bd78_IsNum(_1a7a82cb5_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a7a865c1_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4bd256:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac4bd1e0:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac4bd0e1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7a51e0a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bd831d8e_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4c2c94:;
				{
					_1bd830dc1_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1bd82e793_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bd831355_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4c2d82:;
				{
					_1bd8302ee_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1bd82dc59_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bd8315db_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4c2953:;
				{
					_1bd8302ee_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1bd82ea29_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac4c28cb:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3171:5"));;
				}
			}
			_match_end_1ac4c2832:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a7a7248b_caret(_1a7a71952_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ac4c82a5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4c8690:;
			{
				if ((!(_1bd82b7a1_IsInt(_1a7a82cb5_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a7a865c1_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4c7e64:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac4c7ded:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac4c7cee:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7a51e0a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bd831355_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4cc991:;
				{
					_1bd8302ee_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1bd82dc59_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bd8315db_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4cca7e:;
				{
					_1bd8305a7_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1bd82dee0_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac4cc5d9:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3214:5"));;
				}
			}
			_match_end_1ac4cc540:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a7a72689_excl(_1a7a71952_unaryEval* _self_) {
	jule::Ptr<_1a7a8a4c6_Prim> _32283_t = _1a7a8504d_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32283_t == nullptr) || (!(_1a7a8d6c7_IsBool(_32283_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a7a51e0a_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bd831872_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1ac4d3ac9:;
				{
					_1bd830860_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1bd82e276_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1ac4d3722:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:5"));;
				}
			}
			_match_end_1ac4d3667:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a7a72887_star(_1a7a71952_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1a7a8556a_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4d7429:;
			{
				if ((!(_1a7a54270_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7a927b9_Ptr> _32678_t = _1a7a8556a_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1a7a93303_IsUnsafe(_32678_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_32678_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a7a852d4_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac4d7814:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a7a852d4_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1ac4d7072:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac4d6093:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a7a72a85_amper(_1a7a71952_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac4e09c6:;
			{
				jule::Ptr<_1a799b283_StructLitExprModel> _32898_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a799b283_StructLitExprModel>();;
				_1a7a7a7c4_makeStructLitAlloc(&((*(_self_))._field_d), &(_32898_lit));
			}
		}
		else {
			_case_begin_1ac4dce79:;
			{
				{
					
					if (_1a7a9d7d6_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ac4dd83c:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a927b9_Ptr>(_1a7a927b9_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1ac4dca7d:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ac4dd40d:;
				};
			}
		}
		_match_end_1ac4dce24:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a7a72c83_typeDecl(_1a7a71952_unaryEval* _self_) {
	_1a7a947aa_typeChecker _33147_tc = _1a7a947aa_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac4e44d0:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a99b9a_buildPtrFromType(&_33147_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac4e5ee8:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a99518_buildSptrFromType(&_33147_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1ac4e3aea:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac4e4139:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a7a72e81_evalData(_1a7a71952_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac4e9b67:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _33398_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a7a70d08_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_33398_prefix;
			}
		}
		else {
			_case_begin_1ac4e41a0:;
			{
				(*(_self_))._field_d=_1a7a70d08_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ac4e976b:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a732c2_eval(_1a7a71952_unaryEval* _self_, jule::Ptr<_1a79788ae_UnaryExpr> _334824_u) {
	(*(_self_))._field_u=_334824_u;
	_1a7a72e81_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a7a72c83_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _33593_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac4ee2dc:;
			{
				_1a7a72090_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac4ee353:;
			{
				_1a7a7228d_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac4ee3b9:;
			{
				_1a7a7248b_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ac4ee430:;
			{
				_1a7a72689_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac4ee496:;
			{
				_1a7a72887_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac4ee50c:;
			{
				_1a7a72a85_amper(_self_);
			}
		}
		else {
			_case_begin_1ac4edc9d:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ac4ee276:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ac4eea07:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str(_33593_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1a7a51e0a_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ac4ec9a0:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ac501520:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a71952_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a7a738dd_binaryEval static__1a7a73e93_newPlain(jule::Ptr<_1a7a5322a_Eval> _339625_e) {
	return _1a7a738dd_binaryEval{._field_e=_339625_e, };;
}



inline _1a7a738dd_binaryEval static__1a7a74317_new(jule::Ptr<_1a7a5322a_Eval> _340220_e, jule::Ptr<_1a795c013_Token> _340234_op) {
	return _1a7a738dd_binaryEval{._field_e=_340220_e, ._field_op=_340234_op};;
}



inline jule::Bool _1a7a7459d_checkTypeCompatibility(_1a7a738dd_binaryEval* _self_) {
	return _1a6844292_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a7a74834_checkStructCommonOperatorCompatibility(_1a7a738dd_binaryEval* _self_) {
	jule::Ptr<_1a79ab309_FnIns> _341611_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ac506b0d:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac5067bc:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac506833:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac506899:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac506910:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac506976:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac5069dc:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac5080e8:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ac50815e:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac5081c5:;
			{
				_341611_overload=(*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ac50624a:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ac506756:;
	};
	if ((_341611_overload == nullptr)) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a79aa281_ParamIns> _34487_p = (*(_341611_overload))._field_Params[1LL];;
	return _1a6842e61_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_34487_p))._field_Decl))._field_Reference, &((*_34487_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a74aba_evalComptimeTypeInfo(_1a7a738dd_binaryEval* _self_) {
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _34537_r = _1a7a88914_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_34537_r == nullptr)) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a79d3078_comptimeTypeInfo> _34587_l = _1a7a88914_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac516c83:;
			{
				jule::Ptr<_1bd82c384_Const> _34618_constant = static__1bd82cd57_NewBool(_1a7a83106_Equal((*(_34587_l))._field_base, (*(_34537_r))._field_base));;
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_34618_constant, &__jule_any_type19), ._field_Constant=_34618_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac518119:;
			{
				jule::Ptr<_1bd82c384_Const> _34688_constant = static__1bd82cd57_NewBool((!(_1a7a83106_Equal((*(_34587_l))._field_base, (*(_34537_r))._field_base))));;
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, ._field_Model=jule::Any(_34688_constant, &__jule_any_type19), ._field_Constant=_34688_constant});;
			}
		}
		else {
			_case_begin_1ac5165e0:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac5168cb:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a74d51_evalNil(_1a7a738dd_binaryEval* _self_) {
	if ((!(_1a7a8479a_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac51c8c1:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1ac51a737:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac51c519:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a750d7_evalEnum(_1a7a738dd_binaryEval* _self_) {
	jule::Ptr<_1a79bdddd_Enum> _34997_enm = _1a7a85801_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac51eb9d:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _35038_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a7a85801_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_35038_rkind=(*((*(_1a7a85801_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1a68438bd_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_34997_enm))._field_Kind.alloc)._field_Kind), &(_35038_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		_match_end_1ac51eb37:;
	};
	if (((_1a7a85801_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_34997_enm != _1a7a85801_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_34997_enm))._field_Ident, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa458985:;
			{
				if ((!(_1bd82bd78_IsNum(_1a7a82cb5_Str((*(*(_34997_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa4599b9:;
			{
				jule::Ptr<_1a79bd371_EnumItem> _35334_first = (*_34997_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1bd831355_IsI64((*((*((*(_35334_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1aa45d0a5:;
						{
							if ((_1bd82dc59_ReadI64((*((*((*(_35334_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1aa4630bb;
							};
							goto _julec_label_1aa45e2b5;
						}
					}
					else if (_1bd8315db_IsU64((*((*((*(_35334_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1aa45d193:;
						{
							if ((_1bd82dee0_ReadU64((*((*((*(_35334_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1aa4630bb;
							};
							goto _julec_label_1aa45e2b5;
						}
					}
					else {
						_case_begin_1aa45cbed:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3546:5"));;
						}
					}
					_match_end_1aa45cb87:;
				};
				_julec_label_1aa45e2b5:;
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1a7a53add_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1aa4630bb:;
				goto _case_begin_1aa459a30;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa459a30:;
			{
				if (((_1a7a8504d_Prim((*(*(_34997_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1bd82b7a1_IsInt(_1a7a8a817_Str(_1a7a8504d_Prim((*((*(_34997_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa455069:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa4585cd:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7536d_evalTypeEnum(_1a7a738dd_binaryEval* _self_) {
	jule::Ptr<_1a79c05e8_TypeEnum> _35667_enm = _1a7a85a87_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa467d29:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa4671ad:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a79c0939_Str(_35667_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa46792d:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a75604_evalSptr(_1a7a738dd_binaryEval* _self_) {
	if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa46a216:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa46917c:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa469d5e:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7588a_evalPtr(_1a7a738dd_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa46c449:;
			{
				if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa46d7d0:;
			{
				if ((_1a7a8556a_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a7a93303_IsUnsafe(_1a7a8556a_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1a7a7b95c_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa46bb63:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa46b9ba:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a75b21_evalArr(_1a7a738dd_binaryEval* _self_) {
	if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa474ee0:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa4701d8:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa474b38:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a75da7_evalSlc(_1a7a738dd_binaryEval* _self_) {
	if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa477674:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa4765da:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa4772bc:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7613d_evalStruct(_1a7a738dd_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aa478ee4:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa479610:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1aa479676:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa4796dc:;
			{
				if (((*(_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa479753:;
			{
				if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		_match_end_1aa478e28:;
	};
	if ((!(_1a7a74834_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a763c4_evalTrait(_1a7a738dd_binaryEval* _self_) {
	if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa4855a5:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa48496c:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa4851ed:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7665a_evalAny(_1a7a738dd_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa4877d8:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa487002:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa486d59:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a768e1_evalBool(_1a7a738dd_binaryEval* _self_) {
	if ((!(_1a7a7459d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa4899d8:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa48894e:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa489631:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a76b77_evalStr(_1a7a738dd_binaryEval* _self_) {
	jule::Str _37657_rk = _1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_37657_rk.equal("str", 3))) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_37657_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa48d7ab:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa48e647:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		else {
			_case_begin_1aa48c5ac:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa48d3b0:;
	};
}



inline void _1a7a76d75_setTypeToGreater(_1a7a738dd_binaryEval* _self_) {
	jule::Ptr<_1a7a8a4c6_Prim> _37903_lp = _1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a7a8a4c6_Prim> _37913_rp = _1a7a8504d_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1a7a51e0a_IsConst((*(_self_))._field_l)) {
		if ((!(_1a7a51e0a_IsConst((*(_self_))._field_r.ptr())))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37913_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1aa4940ca;
	};
	if (_1a7a51e0a_IsConst((*(_self_))._field_r)) {
		(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*(_37903_lp))._field_Kind;
		return;;
	};
	_julec_label_1aa4940ca:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a7a51e0a_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_37913_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1bd82a063_IsGreater((*_37913_rp.alloc)._field_Kind, (*_37903_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a7a51e0a_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_37913_rp.alloc)._field_Kind;
		};
	};
}



inline void _1a7a7712d_checkModData(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _382333_d) {
	if ((!(_1a7a51e0a_IsConst((*(_382333_d)).ptr())))) {
		if (((_1a7a8504d_Prim((*((*(_382333_d))))._field_Kind.ptr()) == nullptr) || (!(_1bd82b7a1_IsInt((*(_1a7a8504d_Prim((*((*(_382333_d))))._field_Kind)))._field_Kind))))) {
			_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a7a37495_sigAssignable(jule::Str::lit("i64", 3), _382333_d)) {
			_case_begin_1aa49bde6:;
			{
				_1bd8302ee_SetI64((*((*(_382333_d))))._field_Constant.ptr(), _1bd82ea29_AsI64((*((*(_382333_d))))._field_Constant));
			}
		}
		else if (_1a7a3785d_unsigAssignable(jule::Str::lit("u64", 3), _382333_d)) {
			_case_begin_1aa49bac7:;
			{
				_1bd8305a7_SetU64((*((*(_382333_d))))._field_Constant.ptr(), _1bd82ecb0_AsU64((*((*(_382333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1aa49ba61:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa49b9ea:;
	};
}



inline void _1a7a7732b_mod(_1a7a738dd_binaryEval* _self_) {
	_1a7a7712d_checkModData(_self_, &((*(_self_))._field_l));
	_1a7a7712d_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a7a77727_numbersAreCompatibile(_1a7a738dd_binaryEval* _self_, jule::Str* _384534_lk, jule::Str* _384544_rk) {
	if ((!(_1bd82bd78_IsNum((*(_384544_rk)))))) {
		return false;;
	};
	if ((_1a7a51e0a_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384534_lk)).equal("f32", 3)) {
		if ((_1a7a51e0a_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a7a37121_floatAssignable(_384534_lk, &((*(_self_))._field_r));;
		};
		return (*(_384544_rk)).equal("f32", 3);;
	};
	if ((*(_384534_lk)).equal("f64", 3)) {
		if ((_1a7a51e0a_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a7a37121_floatAssignable(_384534_lk, &((*(_self_))._field_r));;
		};
		return (*(_384544_rk)).equal("f64", 3);;
	};
	if ((_1a7a51e0a_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a7a37bd2_intAssignable((*(_384534_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384534_lk)) == (*(_384544_rk)));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a779ad_evalFloat(_1a7a738dd_binaryEval* _self_) {
	jule::Str _38713_lk = (*(_1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38723_rk = (*(_1a7a8504d_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a7a77727_numbersAreCompatibile(_self_, &(_38713_lk), &(_38723_rk))))) {
		_1a6843cdb_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa4a6d02:;
			{
				if (((!(_1a7a51e0a_IsConst((*(_self_))._field_l))) || (!(_1a7a37bd2_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38713_lk, &__jule_any_type4),jule::Any(_38723_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1a7a51e0a_IsConst((*(_self_))._field_r.ptr()))) || (!(_1a7a37bd2_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38713_lk, &__jule_any_type4),jule::Any(_38723_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1bd8302ee_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1bd82ea29_AsI64((*((*(_self_))._field_l))._field_Constant));
				_1bd8305a7_SetU64((*((*(_self_))._field_r))._field_Constant, _1bd82ecb0_AsU64((*((*(_self_))._field_r))._field_Constant));
				if ((!(_1a7a7b286_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1aa4a6c8b:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa4a6d79:;
			{
				_1a7a76d75_setTypeToGreater(_self_);
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		_match_end_1aa4a8e25:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa4ae1c2:;
			{
				_1a7a76d75_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa4aedc6:;
			{
				if ((!(_1bd82b7a1_IsInt(_38723_rk)))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38713_lk, &__jule_any_type4),jule::Any(_38723_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a7a7732b_mod(_self_);
				_1a7a76d75_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1aa4a7550:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa4ad622:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a77c44_evalInt(_1a7a738dd_binaryEval* _self_) {
	jule::Str _39353_lk = (*(_1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39363_rk = (*(_1a7a8504d_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa4b3902:;
			{
				if (((!(_1bd82b7a1_IsInt(_39353_lk))) || (!(_1bd82b7a1_IsInt(_39363_rk))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39353_lk, &__jule_any_type4),jule::Any(_39363_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1a7a7b286_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1aa4b3bdd:;
	};
	if ((!(_1a7a77727_numbersAreCompatibile(_self_, &(_39353_lk), &(_39363_rk))))) {
		_1a6843cdb_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa4b751b:;
			{
				return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b6579e_primBool, });;
			}
		}
		_match_end_1aa4b74a5:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa4b8cd1:;
			{
				_1a7a76d75_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa4b99d5:;
			{
				_1a7a7732b_mod(_self_);
				_1a7a76d75_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aa4b7609:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa4b88d5:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a77eca_evalPrim(_1a7a738dd_binaryEval* _self_) {
	jule::Ptr<_1a7a8a4c6_Prim> _39923_prim = _1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a7a8d6c7_IsBool(_39923_prim.ptr())) {
			_case_begin_1aa4bc1ad:;
			{
				return _1a7a768e1_evalBool(_self_);;
			}
		}
		else if (_1a7a8d95d_IsStr(_39923_prim.ptr())) {
			_case_begin_1aa4bc257:;
			{
				return _1a7a76b77_evalStr(_self_);;
			}
		}
		_match_end_1aa4bc136:;
	};
	if ((_1a7a8504d_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a8a817_Str(_39923_prim.ptr()), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1bd82bae2_IsFloat((*_39923_prim.alloc)._field_Kind)) {
			_case_begin_1aa4bebc7:;
			{
				return _1a7a779ad_evalFloat(_self_);;
			}
		}
		else if (_1bd82b7a1_IsInt((*_39923_prim.alloc)._field_Kind)) {
			_case_begin_1aa4bec60:;
			{
				return _1a7a77c44_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1aa4beb61:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa4bd38a:;
	};
}



inline void _1a7a781c8_checkSpecialCases(_1a7a738dd_binaryEval* _self_) {
	if (((!(_1a7a83ee7_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a7a839ca_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1a7a83ee7_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a7a839ca_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7845e_evalOp(_1a7a738dd_binaryEval* _self_) {
	_1a7a781c8_checkSpecialCases(_self_);
	{
		
		if (_1a7a83c61_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1aa4c55a1:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1a7a88914_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6937:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c699d;
			}
		}
		else if ((_1a7a88914_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c699d:;
			{
				return _1a7a74aba_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a7a8504d_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1a7a8dbe4_IsAny(_1a7a8504d_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1aa4c5408:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c546e;
			}
		}
		else if (_1a7a839ca_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1aa4c546e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c6a8b;
			}
		}
		else if (_1a7a839ca_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1aa4c6a8b:;
			{
				return _1a7a74d51_evalNil(_self_);;
			}
		}
		else if (((_1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1a7a8dbe4_IsAny(_1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1aa4c6b02:;
			{
				return _1a7a7665a_evalAny(_self_);;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6b68:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c6bce;
			}
		}
		else if ((_1a7a85a87_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6bce:;
			{
				return _1a7a7536d_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a7a85801_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6c45:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c6cab;
			}
		}
		else if ((_1a7a85801_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6cab:;
			{
				return _1a7a750d7_evalEnum(_self_);;
			}
		}
		else if ((_1a7a852d4_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6d22:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c6d88;
			}
		}
		else if ((_1a7a852d4_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6d88:;
			{
				return _1a7a75604_evalSptr(_self_);;
			}
		}
		else if ((_1a7a8556a_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6dee:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c6e65;
			}
		}
		else if ((_1a7a8556a_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6e65:;
			{
				return _1a7a7588a_evalPtr(_self_);;
			}
		}
		else if ((_1a7a85d1d_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c6ecb:;
			{
				return _1a7a75b21_evalArr(_self_);;
			}
		}
		else if ((_1a7a860a4_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c7042:;
			{
				return _1a7a75da7_evalSlc(_self_);;
			}
		}
		else if ((_1a7a86857_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c70a8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1aa4c711e;
			}
		}
		else if ((_1a7a86857_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c711e:;
			{
				return _1a7a763c4_evalTrait(_self_);;
			}
		}
		else if ((_1a7a865c1_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c7185:;
			{
				return _1a7a7613d_evalStruct(_self_);;
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa4c71eb:;
			{
				return _1a7a77eca_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1aa4c4d0e:;
			{
				_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa4c51d8:;
	};
}



inline void _1a7a78717_evalConst(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _408330_d) {
	{
		
		if (((*(_408330_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1aa4da066:;
			{
				return;;
			}
		}
		else if ((!(_1a7a51e0a_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a7a51e0a_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1aa4da60a:;
			{
				(*((*(_408330_d))))._field_Constant=nullptr;
				(*((*(_408330_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1aa4d9e67:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aa4da6d7:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd832e39_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa4dcb18:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool((!(_1bd832e39_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa4dcb7e:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd832ae8_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa4dcbe5:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd8327a7_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aa4dcc5b:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd83390c_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1aa4dccc2:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd83327a_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa4dcd49:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd833c4d_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa4dcdc1:;
			{
				(*((*(_408330_d))))._field_Constant=static__1bd82cd57_NewBool(_1bd8335bb_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa4dce48:;
			{
				_1bd83408e_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa4dcec0:;
			{
				_1bd8343d0_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa4dd047:;
			{
				_1bd834721_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa4dd0be:;
			{
				jule::Bool _41234_ok = _1bd834a62_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_41234_ok)) && (_1bd830046_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a7a8a4c6_Prim> _41288_prim = _1a7a8504d_Prim((*((*(_408330_d))))._field_Kind.ptr());;
				{
					
					if (_1bd82b1c9_IsSigInt((*(_41288_prim))._field_Kind)) {
						_case_begin_1aa4ee146:;
						{
							_1bd8302ee_SetI64((*((*(_408330_d))))._field_Constant, _1bd82ea29_AsI64((*((*(_408330_d))))._field_Constant));
						}
					}
					else if (_1bd82b4d7_IsUnsigInt((*(_41288_prim))._field_Kind)) {
						_case_begin_1aa4ee1e0:;
						{
							_1bd8305a7_SetU64((*((*(_408330_d))))._field_Constant, _1bd82ecb0_AsU64((*((*(_408330_d))))._field_Constant));
						}
					}
					_match_end_1aa4ee0d0:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa4dd146:;
			{
				jule::Bool _41364_ok = _1bd834da3_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_41364_ok)) && (_1bd830046_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1aa4dd1bd:;
			{
				_1bd835535_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa4dd245:;
			{
				_1bd8351e4_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa4dd2bc:;
			{
				_1bd835876_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1aa4dd344:;
			{
				_1bd835bb7_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa4dd3bb:;
			{
				_1bd836008_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1aa4dbe14:;
	};
	(*((*(_408330_d))))._field_Model=jule::Any((*((*(_408330_d))))._field_Constant, &__jule_any_type19);
	_1a7a7cac3_applyCastModelByEnum(_408330_d, _1a7a85801_Enum((*((*(_408330_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1a7a789c0_checkData(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _416130_d) {
	jule::Ptr<_1a79ab309_FnIns> _41623_f = _1a7a8633a_Fn((*((*(_416130_d))))._field_Kind.ptr());;
	if ((((_41623_f != nullptr) && ((*_41623_f.alloc)._field_Decl != nullptr)) && _1a79a8a32_IsMethod((*(_41623_f))._field_Decl))) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a7a78bbd_checkDatas(_1a7a738dd_binaryEval* _self_) {
	_1a7a789c0_checkData(_self_, &((*(_self_))._field_l));
	_1a7a789c0_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a7a78e76_setModel(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _417329_d) {
	if (_1a7a51e0a_IsConst((*(_417329_d)).ptr())) {
		if (((_1a7a51e0a_IsConst((*(_self_))._field_l.ptr()) && _1a7a51e0a_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a7a51503_Data> _41827_l;
	jule::Ptr<_1a7a51503_Data> _418214_r;
	({
		jule::Ptr<_1a7a51503_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a7a51503_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_41827_l = ___jule_assign_arg;
		_418214_r = _1___jule_assign_arg;
	});
	if ((!(_1a7a5224b_GoodOperand(_41827_l, &(_418214_r))))) {
		std::swap(_41827_l, _418214_r);
	};
	(*((*(_417329_d))))._field_Model=jule::Any(jule::new_ptr<_1a799a4d5_BinaryExprModel>(_1a799a4d5_BinaryExprModel{._field_Left=jule::new_ptr<_1a7999eda_OperandExprModel>(_1a7999eda_OperandExprModel{._field_Kind=(*_41827_l.alloc)._field_Kind, ._field_Model=(*_41827_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a7999eda_OperandExprModel>(_1a7999eda_OperandExprModel{._field_Kind=(*_418214_r.alloc)._field_Kind, ._field_Model=(*_418214_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1a7a7922e_postEval(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _420029_d) {
	(*((*(_420029_d))))._field_Lvalue=false;
	_1a7a78e76_setModel(_self_, _420029_d);
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7962a_solveExplicit(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7a51503_Data>* _420534_l, jule::Ptr<_1a7a51503_Data>* _420549_r) {
	({
		jule::Ptr<_1a7a51503_Data> ___jule_assign_arg = (*(_420534_l));
		jule::Ptr<_1a7a51503_Data> _1___jule_assign_arg = (*(_420549_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a7a78bbd_checkDatas(_self_);
	jule::Ptr<_1a7a51503_Data> _42107_d = _1a7a7845e_evalOp(_self_);;
	({
		jule::Ptr<_1a7a51503_Data> ___jule_assign_arg = (*(_420534_l));
		jule::Ptr<_1a7a51503_Data> _1___jule_assign_arg = (*(_420549_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a7a78717_evalConst(_self_, &(_42107_d));
	if ((_42107_d != nullptr)) {
		(*_42107_d.alloc)._field_Mutable=true;
		_1a7a7922e_postEval(_self_, &(_42107_d));
	};
	return _42107_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7996b_eval(_1a7a738dd_binaryEval* _self_, jule::Ptr<_1a7979dbb_BinaryExpr>* _422525_op) {
	if (((*((*((*(_422525_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a7a5377a_pushErr((*(_self_))._field_e.ptr(), (*((*(_422525_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a7a53add_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _42327_l = _1a7a71149_evalExpr1((*(_self_))._field_e, (*((*(_422525_op))))._field_Left);;
	if (((_42327_l == nullptr) || ((*(_42327_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _42377_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_42327_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_42377_prefix;
	});;
	jule::Ptr<_1a7a51503_Data> _42407_r = _1a7a71149_evalExpr1((*(_self_))._field_e, (*((*(_422525_op))))._field_Right);;
	if (((_42407_r == nullptr) || ((*(_42407_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422525_op))))._field_Op;
	jule::Ptr<_1a7a51503_Data> _42477_d = _1a7a7962a_solveExplicit(_self_, &(_42327_l), &(_42407_r));;
	if ((((_42477_d != nullptr) && (*(_42327_l))._field_IsRune) && (*(_42407_r))._field_IsRune)) {
		(*_42477_d.alloc)._field_IsRune=true;
	};
	return _42477_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a738dd_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a81016_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a81b0a_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7a82cb5_Str(_1a7a828ec_TypeKind* _self_) {
	if (_1a7a839ca_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_200880c8a_StrBuilder _747_kind = static__2008811b9_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_20088172a_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1a7a83744_Binded(_self_)) {
		_20088172a_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_20088172a_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_20088172a_WriteStr(&_747_kind, ((_1a7a82446_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a7a81ea1_Str((*(_self_))._field_Kind.data));
	};
	return _200882022_Str(&_747_kind);;
}



inline jule::Bool _1a7a83106_Equal(jule::Ptr<_1a7a828ec_TypeKind> _self_, jule::Ptr<_1a7a828ec_TypeKind> _9018_other) {
	if (_1a7a839ca_IsNil(_self_.ptr())) {
		return _1a7a839ca_IsNil(_9018_other.ptr());;
	};
	if (_1a7a83744_Binded(_self_)) {
		return (_1a7a83744_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1a7a82446_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a7a822e2_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1a7a83744_Binded(_1a7a828ec_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a7a839ca_IsNil(_1a7a828ec_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a7a83c61_Void(_1a7a828ec_TypeKind* _self_) {
	jule::Ptr<_1a7a8a4c6_Prim> _1103_prim = _1a7a8504d_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a7a83ee7_Comparable(_1a7a828ec_TypeKind* _self_) {
	{
		_1a7a828ec_TypeKind* _1178__self = _self_;;
		if ((_1a7a865c1_Struct(_1178__self) != nullptr)) {
			return (*(_1a7a865c1_Struct(_1178__self)))._field_Comparable;;
		};
		return (((_1a7a86add_Map(_1178__self) == nullptr) && (_1a7a860a4_Slc(_1178__self) == nullptr)) && (_1a7a8633a_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1a7a8427d_Mutable(_1a7a828ec_TypeKind* _self_) {
	{
		_1a7a828ec_TypeKind* _1288__self = _self_;;
		if ((_1a7a865c1_Struct(_1288__self) != nullptr)) {
			return (*(_1a7a865c1_Struct(_1288__self)))._field_Mutable;;
		};
		if ((_1a7a86857_Trait(_1288__self) != nullptr)) {
			return true;;
		};
		if ((_1a7a8504d_Prim(_1288__self) != nullptr)) {
			jule::Ptr<_1a7a8a4c6_Prim> _1365_p = _1a7a8504d_Prim(_1288__self);;
			return _1a7a8dbe4_IsAny(_1365_p.ptr());;
		};
		if ((_1a7a85d1d_Arr(_1288__self) != nullptr)) {
			return _1a7a8427d_Mutable((*(_1a7a85d1d_Arr(_1288__self)))._field_Elem.ptr());;
		};
		return (((_1a7a860a4_Slc(_1288__self) != nullptr) || (_1a7a8556a_Ptr(_1288__self) != nullptr)) || (_1a7a852d4_Sptr(_1288__self) != nullptr));;
	};
}



inline jule::Bool _1a7a84514_Ordered(_1a7a828ec_TypeKind* _self_) {
	{
		_1a7a828ec_TypeKind* _1518__self = _self_;;
		jule::Ptr<_1a7a8a4c6_Prim> _1524_prim = _1a7a8504d_Prim(_1518__self);;
		if ((_1524_prim != nullptr)) {
			return (_1bd82bd78_IsNum((*_1524_prim.alloc)._field_Kind) || _1a7a8d95d_IsStr(_1524_prim));;
		};
		if ((_1a7a8556a_Ptr(_1518__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a79960d5_StructIns> _1594_s = _1a7a865c1_Struct(_1518__self);;
		if ((_1594_s != nullptr)) {
			return (((((*_1594_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1594_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1594_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1594_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a79bdddd_Enum> _1664_enm = _1a7a85801_Enum(_1518__self);;
		if ((_1664_enm != nullptr)) {
			return _1bd82bd78_IsNum(_1a7a82cb5_Str((*((*_1664_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a7a8479a_NilCompatible(_1a7a828ec_TypeKind* _self_) {
	{
		_1a7a828ec_TypeKind* _1778__self = _self_;;
		jule::Ptr<_1a7a8a4c6_Prim> _1794_prim = _1a7a8504d_Prim(_1778__self);;
		if (((_1794_prim != nullptr) && _1a7a8dbe4_IsAny(_1794_prim))) {
			return true;;
		};
		return (((((((_1a7a839ca_IsNil(_1778__self) || (_1a7a8633a_Fn(_1778__self) != nullptr)) || (_1a7a852d4_Sptr(_1778__self) != nullptr)) || (_1a7a8556a_Ptr(_1778__self) != nullptr)) || (_1a7a86857_Trait(_1778__self) != nullptr)) || (_1a7a860a4_Slc(_1778__self) != nullptr)) || (_1a7a86add_Map(_1778__self) != nullptr)) || (_1a7a85a87_TypeEnum(_1778__self) != nullptr));;
	};
}



inline jule::Bool _1a7a84a31_PerformsRC(_1a7a828ec_TypeKind* _self_) {
	{
		_1a7a828ec_TypeKind* _1988__self = _self_;;
		jule::Ptr<_1a7a8a4c6_Prim> _1994_prim = _1a7a8504d_Prim(_1988__self);;
		if ((_1994_prim != nullptr)) {
			return (_1a7a8dbe4_IsAny(_1994_prim) || _1a7a8d95d_IsStr(_1994_prim));;
		};
		return (((_1a7a852d4_Sptr(_1988__self) != nullptr) || (_1a7a860a4_Slc(_1988__self) != nullptr)) || (_1a7a86857_Trait(_1988__self) != nullptr));;
	};
}



inline jule::Bool _1a7a84cb7_Variadicable(_1a7a828ec_TypeKind* _self_) {
	{
		_1a7a828ec_TypeKind* _2108__self = _self_;;
		return (_1a7a860a4_Slc(_2108__self) != nullptr);;
	};
}



inline jule::Ptr<_1a7a8a4c6_Prim> _1a7a8504d_Prim(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)) {
			_case_begin_1ac5986a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a8a4c6_Prim>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1ac5ab82d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ab7c8:;
	};
}



inline jule::Ptr<_1a7a8e002_Sptr> _1a7a852d4_Sptr(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)) {
			_case_begin_1ac5ac466:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a8e002_Sptr>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1ac5ac697:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ac642:;
	};
}



inline jule::Ptr<_1a7a927b9_Ptr> _1a7a8556a_Ptr(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26)) {
			_case_begin_1ac5ad18c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a927b9_Ptr>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1ac5ad3e0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ad38a:;
	};
}



inline jule::Ptr<_1a79bdddd_Enum> _1a7a85801_Enum(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3)) {
			_case_begin_1ac5addd5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79bdddd_Enum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1ac5ae138:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ae0d3:;
	};
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a7a85a87_TypeEnum(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4)) {
			_case_begin_1ac5aeb2d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79c05e8_TypeEnum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1ac5aed81:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5aed2b:;
	};
}



inline jule::Ptr<_1a7a91ce6_Arr> _1a7a85d1d_Arr(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data25)) {
			_case_begin_1ac5b0876:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a91ce6_Arr>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1ac5b0ac9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b0a74:;
	};
}



inline jule::Ptr<_1a7a8e9c5_Slc> _1a7a860a4_Slc(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22)) {
			_case_begin_1ac5b15be:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a8e9c5_Slc>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1ac5b1822:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b17bc:;
	};
}



inline jule::Ptr<_1a79ab309_FnIns> _1a7a8633a_Fn(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)) {
			_case_begin_1ac5b2317:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79ab309_FnIns>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1ac5b256a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b2515:;
	};
}



inline jule::Ptr<_1a79960d5_StructIns> _1a7a865c1_Struct(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)) {
			_case_begin_1ac5b3060:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79960d5_StructIns>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ac5b32b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b325d:;
	};
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a7a86857_Trait(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data2)) {
			_case_begin_1ac5b3ca8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79bb6d2_Trait>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1ac5b400b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b3ea6:;
	};
}



inline jule::Ptr<_1a7a91169_Map> _1a7a86add_Map(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data24)) {
			_case_begin_1ac5b4a01:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a91169_Map>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1ac5b4c54:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b4bee:;
	};
}



inline jule::Ptr<_1a7a905b9_Tuple> _1a7a86d74_Tup(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data23)) {
			_case_begin_1ac5b5749:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a7a905b9_Tuple>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1ac5b599c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5b5947:;
	};
}



inline jule::Bool _1a7a8710a_comptime(_1a7a828ec_TypeKind* _self_) {
	return (((((((((((((_1a7a8867d_comptimeTypeInfos(_self_) != nullptr) || (_1a7a88914_comptimeTypeInfo(_self_) != nullptr)) || (_1a7a87391_comptimeStructFields(_self_) != nullptr)) || (_1a7a87627_comptimeStructField(_self_) != nullptr)) || (_1a7a878ad_comptimeEnumFields(_self_) != nullptr)) || (_1a7a87b44_comptimeEnumField(_self_) != nullptr)) || (_1a7a88b9a_comptimeStatics(_self_) != nullptr)) || (_1a7a88e31_comptimeStatic(_self_) != nullptr)) || (_1a7a87dca_comptimeParams(_self_) != nullptr)) || (_1a7a88161_comptimeParam(_self_) != nullptr)) || (_1a7a891b7_comptimeValue(_self_) != nullptr)) || (_1a7a896d4_comptimeFiles(_self_) != nullptr)) || (_1a7a8944d_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1a79c5dd4_comptimeStructFields> _1a7a87391_comptimeStructFields(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data7)) {
			_case_begin_1ac5b665c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79c5dd4_comptimeStructFields>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1ac5ba166:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ba111:;
	};
}



inline jule::Ptr<_1a79c4223_comptimeStructField> _1a7a87627_comptimeStructField(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data6)) {
			_case_begin_1ac5ba7a4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79c4223_comptimeStructField>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1ac5baa07:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5ba9a2:;
	};
}



inline jule::Ptr<_1a79cbb32_comptimeEnumFields> _1a7a878ad_comptimeEnumFields(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data11)) {
			_case_begin_1ac5bb4ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79cbb32_comptimeEnumFields>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1ac5bb750:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5bb6ea:;
	};
}



inline jule::Ptr<_1a79ca78a_comptimeEnumField> _1a7a87b44_comptimeEnumField(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data10)) {
			_case_begin_1ac5bc245:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79ca78a_comptimeEnumField>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1ac5bc498:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5bc443:;
	};
}



inline jule::Ptr<_1a79d03b6_comptimeParams> _1a7a87dca_comptimeParams(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data13)) {
			_case_begin_1ac5bce8d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79d03b6_comptimeParams>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1ac5bd1e1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5bd18b:;
	};
}



inline jule::Ptr<_1a79cd22c_comptimeParam> _1a7a88161_comptimeParam(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data12)) {
			_case_begin_1ac5bdc3b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79cd22c_comptimeParam>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1ac5bde39:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5bddd4:;
	};
}



inline jule::Ptr<_1a79c3750_comptimeRange> _1a7a883e7_comptimeRange(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)) {
			_case_begin_1ac5be984:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79c3750_comptimeRange>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1ac5beb82:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5beb2c:;
	};
}



inline jule::Ptr<_1a79d197d_comptimeTypeInfos> _1a7a8867d_comptimeTypeInfos(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data14)) {
			_case_begin_1ac5c06cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79d197d_comptimeTypeInfos>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1ac5c08ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c0875:;
	};
}



inline jule::Ptr<_1a79d3078_comptimeTypeInfo> _1a7a88914_comptimeTypeInfo(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data15)) {
			_case_begin_1ac5c13c0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79d3078_comptimeTypeInfo>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1ac5c1623:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c15bd:;
	};
}



inline jule::Ptr<_1a79c9190_comptimeStatics> _1a7a88b9a_comptimeStatics(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data9)) {
			_case_begin_1ac5c2118:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79c9190_comptimeStatics>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1ac5c236b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c2316:;
	};
}



inline jule::Ptr<_1a79c74ce_comptimeStatic> _1a7a88e31_comptimeStatic(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data8)) {
			_case_begin_1ac5c2db6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a79c74ce_comptimeStatic>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1ac5c30b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c305e:;
	};
}



inline jule::Ptr<_1a67ecc40_comptimeValue> _1a7a891b7_comptimeValue(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data16)) {
			_case_begin_1ac5c3b0e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a67ecc40_comptimeValue>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1ac5c3d0c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c3ca7:;
	};
}



inline jule::Ptr<_1a6801b89_comptimeFile> _1a7a8944d_comptimeFile(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data18)) {
			_case_begin_1ac5c4857:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a6801b89_comptimeFile>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1ac5c4a55:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c4a00:;
	};
}



inline jule::Ptr<_1a680058e_comptimeFiles> _1a7a896d4_comptimeFiles(_1a7a828ec_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data17)) {
			_case_begin_1ac5c55a0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a680058e_comptimeFiles>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1ac5c579d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac5c5748:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a828ec_TypeKind _Src) {
	_Stream << _1a7a82cb5_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a7a89e43_checked(_1a7a89abe_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a89abe_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a7a8a817_Str(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a7a8ab58_Equal(jule::Ptr<_1a7a8a4c6_Prim> _self_, jule::Ptr<_1a7a828ec_TypeKind> _50818_other) {
	jule::Ptr<_1a7a8a4c6_Prim> _5093_prim = _1a7a8504d_Prim(_50818_other.ptr());;
	if ((_5093_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5093_prim))._field_Kind);;
}



inline jule::Bool _1a7a8b0ed_IsConstraint(_1a7a8a4c6_Prim* _self_) {
	return ((((!(_1a7a8d95d_IsStr(_self_))) && (!(_1a7a8dbe4_IsAny(_self_)))) && (!(_1a7a8d6c7_IsBool(_self_)))) && (!(_1bd82bd78_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a7a8b384_IsI8(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a7a8b61a_IsI16(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a7a8b8a1_IsI32(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a7a8bb37_IsI64(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a7a8bdbd_IsU8(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a7a8c154_IsU16(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a7a8c3da_IsU32(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a7a8c671_IsU64(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a7a8c907_IsF32(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a7a8cb8d_IsF64(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a7a8ce24_IsInt(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a7a8d1aa_IsUint(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a7a8d441_IsUintptr(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a7a8d6c7_IsBool(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a7a8d95d_IsStr(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a7a8dbe4_IsAny(_1a7a8a4c6_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a8a4c6_Prim _Src) {
	_Stream << _1a7a8a817_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a7a8e376_Str(_1a7a8e002_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a7a82cb5_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7a8e6b7_Equal(jule::Ptr<_1a7a8e002_Sptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _58518_other) {
	jule::Ptr<_1a7a8e002_Sptr> _5863_sptr = _1a7a852d4_Sptr(_58518_other.ptr());;
	if ((_5863_sptr == nullptr)) {
		return false;;
	};
	return _1a7a83106_Equal((*(_self_))._field_Elem, (*(_5863_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a8e002_Sptr _Src) {
	_Stream << _1a7a8e376_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a7a8ee59_Str(_1a7a8e9c5_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a7a82cb5_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7a9029a_Equal(jule::Ptr<_1a7a8e9c5_Slc> _self_, jule::Ptr<_1a7a828ec_TypeKind> _60418_other) {
	jule::Ptr<_1a7a8e9c5_Slc> _6053_slc = _1a7a860a4_Slc(_60418_other.ptr());;
	if ((_6053_slc == nullptr)) {
		return false;;
	};
	return _1a7a83106_Equal((*(_self_))._field_Elem, (*(_6053_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a8e9c5_Slc _Src) {
	_Stream << _1a7a8ee59_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a7a9093d_Str(_1a7a905b9_Tuple* _self_) {
	_200880c8a_StrBuilder _6217_s = static__2008811b9_New(16LL);;
	_2008819d3_WriteByte(&_6217_s, '(');
	_20088172a_WriteStr(&_6217_s, _1a7a82cb5_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac5d5cb9:;
		if (it != expr_end) {
			jule::Ptr<_1a7a828ec_TypeKind> *_62410_t = it;
			{
				_2008819d3_WriteByte(&_6217_s, ',');
				_20088172a_WriteStr(&_6217_s, _1a7a82cb5_Str((*(_62410_t)).ptr()));
			}
			_iter_next_1ac5d5cb9:;
			++it;
			goto _iter_begin_1ac5d5cb9;
		}
		_iter_end_1ac5d5cb9:;
	};
	_2008819d3_WriteByte(&_6217_s, ')');
	return _200882022_Str(&_6217_s);;
}



inline jule::Bool _1a7a90c7e_Equal(jule::Ptr<_1a7a905b9_Tuple> _self_, jule::Ptr<_1a7a828ec_TypeKind> _63318_other) {
	jule::Ptr<_1a7a905b9_Tuple> _6343_tup = _1a7a86d74_Tup(_63318_other.ptr());;
	if ((_6343_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6343_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6417_i = 0LL;;
	for (; (_6417_i < (*_self_.alloc)._field_Types.len()); (_6417_i)++) {
		{
			if ((!(_1a7a83106_Equal((*(_self_))._field_Types[_6417_i], (*(_6343_tup))._field_Types[_6417_i])))) {
				return false;;
			};
		}
	_iter_next_1ac5d810c:;
	}
	_iter_end_1ac5d810c:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a905b9_Tuple _Src) {
	_Stream << _1a7a9093d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a7a914dd_Str(_1a7a91169_Map* _self_) {
	_200880c8a_StrBuilder _6617_s = static__2008811b9_New(16LL);;
	_20088172a_WriteStr(&_6617_s, jule::Str::lit("map[", 4));
	_20088172a_WriteStr(&_6617_s, _1a7a82cb5_Str((*(_self_))._field_Key.ptr()));
	_2008819d3_WriteByte(&_6617_s, ']');
	_20088172a_WriteStr(&_6617_s, _1a7a82cb5_Str((*(_self_))._field_Val.ptr()));
	return _200882022_Str(&_6617_s);;
}



inline jule::Bool _1a7a9182e_Equal(jule::Ptr<_1a7a91169_Map> _self_, jule::Ptr<_1a7a828ec_TypeKind> _67018_other) {
	jule::Ptr<_1a7a91169_Map> _6713_m = _1a7a86add_Map(_67018_other.ptr());;
	if ((_6713_m == nullptr)) {
		return false;;
	};
	return (_1a7a83106_Equal((*(_self_))._field_Key, (*(_6713_m))._field_Key) && _1a7a83106_Equal((*_self_.alloc)._field_Val, (*(_6713_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a91169_Map _Src) {
	_Stream << _1a7a914dd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a7a9216a_Str(_1a7a91ce6_Arr* _self_) {
	_200880c8a_StrBuilder _6897_s = static__2008811b9_New(16LL);;
	_2008819d3_WriteByte(&_6897_s, '[');
	_20088172a_WriteStr(&_6897_s, _1bd81e354_Itoa((*(_self_))._field_N));
	_2008819d3_WriteByte(&_6897_s, ']');
	_20088172a_WriteStr(&_6897_s, _1a7a82cb5_Str((*(_self_))._field_Elem.ptr()));
	return _200882022_Str(&_6897_s);;
}



inline jule::Bool _1a7a924ab_Equal(jule::Ptr<_1a7a91ce6_Arr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _69818_other) {
	jule::Ptr<_1a7a91ce6_Arr> _6993_arr = _1a7a85d1d_Arr(_69818_other.ptr());;
	if ((_6993_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6993_arr))._field_N) && _1a7a83106_Equal((*_self_.alloc)._field_Elem, (*(_6993_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a91ce6_Arr _Src) {
	_Stream << _1a7a9216a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a7a92b3d_Str(_1a7a927b9_Ptr* _self_) {
	if (_1a7a93303_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a7a82cb5_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a7a92e7e_Equal(jule::Ptr<_1a7a927b9_Ptr> _self_, jule::Ptr<_1a7a828ec_TypeKind> _72218_other) {
	jule::Ptr<_1a7a927b9_Ptr> _7233_ptr = _1a7a8556a_Ptr(_72218_other.ptr());;
	{
		
		if ((_7233_ptr == nullptr)) {
			_case_begin_1ac5e4ca6:;
			{
				return false;;
			}
		}
		else if (_1a7a93303_IsUnsafe(_7233_ptr.ptr())) {
			_case_begin_1ac5e4657:;
			{
				return _1a7a93303_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1ac5e41e5:;
			{
				return _1a7a83106_Equal((*(_self_))._field_Elem, (*(_7233_ptr))._field_Elem);;
			}
		}
		_match_end_1ac5e417e:;
	};
}



inline jule::Bool _1a7a93303_IsUnsafe(_1a7a927b9_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a927b9_Ptr _Src) {
	_Stream << _1a7a92b3d_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a937ba_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a7a94ee7_pushErr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a795c013_Token> _81223_token, jule::Str _81238_fmt, jule::Slice<jule::Any> _81251_args) {
	_1a683a453_pushErr((*(_self_))._field_s.ptr(), _81223_token, _81238_fmt, _81251_args);
}



inline void _1a7a951e5_allowBuiltin(_1a7a947aa_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a7a953e3_disallowBuiltin(_1a7a947aa_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ac5e8ded_pushReference(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79960d5_StructIns>* _82437_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ac323c27_Exist((*(_self_))._field_refers.ptr(), (*(_82437_t)))) {
		return;;
	};
	_1a79b02b9_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82437_t)), &__jule_any_type9));
}

inline void _1ac5eb7e6_pushReference(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79bb6d2_Trait>* _82437_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ac5ed52e_Exist((*(_self_))._field_refers.ptr(), (*(_82437_t)))) {
		return;;
	};
	_1a79b02b9_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82437_t)), &__jule_any_type10));
}



inline void _1a7a95954_pushReferenceByKind(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _83440_k) {
	{
		
		if ((_1a7a865c1_Struct((*(_83440_k)).ptr()) != nullptr)) {
			_case_begin_1ac5e7a34:;
			{
				jule::Ptr<_1a79960d5_StructIns> _8378_t = _1a7a865c1_Struct((*(_83440_k)).ptr());;
				_1ac5e8ded_pushReference(_self_, &(_8378_t));
			}
		}
		else if ((_1a7a86857_Trait((*(_83440_k)).ptr()) != nullptr)) {
			_case_begin_1ac5e7acd:;
			{
				jule::Ptr<_1a79bb6d2_Trait> _8408_t = _1a7a86857_Trait((*(_83440_k)).ptr());;
				_1ac5eb7e6_pushReference(_self_, &(_8408_t));
			}
		}
		_match_end_1ac5e7924:;
	};
}



inline void _1a7a95d72_pushCycleError(_1a7a947aa_typeChecker* _self_, jule::Any _84526_def1, jule::Any _84537_def2, _200880c8a_StrBuilder* _84553_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8473_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1ac60082d, nullptr, nullptr);;
	jule::Str _8573_m = _200882022_Str(_84553_message);;
	jule::Str _8583_def1Ident = _8473_getIdent(&(_84526_def1));;
	jule::Str _8593_def2Ident = _8473_getIdent(&(_84537_def2));;
	jule::Str _8603_refersTo = _1d974cc6c_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8583_def1Ident, &__jule_any_type4),jule::Any(_8593_def2Ident, &__jule_any_type4)}));;
	_20088172a_WriteStr(_84553_message, _1d969d5e6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_20088172a_WriteStr(_84553_message, _8603_refersTo);
	_2008819d3_WriteByte(_84553_message, '\n');
	_20088172a_WriteStr(_84553_message, _8573_m);
}



inline jule::Bool _1a7a9626d_checkCrossCycle(_1a7a947aa_typeChecker* _self_, jule::Any _86727_decl, _200880c8a_StrBuilder* _86743_message) {
	{
		auto &_match_expr{ _86727_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac6049ec:;
			{
				jule::Ptr<_1a7a81b0a_TypeAlias> _8704_ta = _86727_decl.unsafe_cast_ptr<_1a7a81b0a_TypeAlias>();;
				{
					auto expr = &((*(_8704_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac605998:;
					if (it != expr_end) {
						jule::Any *_87111_d = it;
						{
							{
								
								if (((*(_87111_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ac606290:;
									{
										_1a7a95d72_pushCycleError(_self_, jule::Any(_8704_ta, &__jule_any_type65), (*(_87111_d)), _86743_message);
										return false;;
									}
								}
								else if ((!(_1a7a9626d_checkCrossCycle(_self_, (*(_87111_d)), _86743_message)))) {
									_case_begin_1ac606328:;
									{
										_1a7a95d72_pushCycleError(_self_, jule::Any(_8704_ta, &__jule_any_type65), (*(_87111_d)), _86743_message);
										return false;;
									}
								}
								_match_end_1ac606191:;
							};
						}
						_iter_next_1ac605998:;
						++it;
						goto _iter_begin_1ac605998;
					}
					_iter_end_1ac605998:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac604865:;
			{
				jule::Ptr<_1a7993357_Struct> _8824_s = _86727_decl.unsafe_cast_ptr<_1a7993357_Struct>();;
				{
					auto expr = &((*(_8824_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac607cdb:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> *_88311_d = it;
						{
							{
								
								if ((__jule_any_type64_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88311_d))))) {
									_case_begin_1ac6085d3:;
									{
										_1a7a95d72_pushCycleError(_self_, jule::Any(_8824_s, &__jule_any_type64), jule::Any((*(_88311_d)), &__jule_any_type64), _86743_message);
										return false;;
									}
								}
								else if ((!(_1a7a9626d_checkCrossCycle(_self_, jule::Any((*(_88311_d)), &__jule_any_type64), _86743_message)))) {
									_case_begin_1ac60866b:;
									{
										_1a7a95d72_pushCycleError(_self_, jule::Any(_8824_s, &__jule_any_type64), jule::Any((*(_88311_d)), &__jule_any_type64), _86743_message);
										return false;;
									}
								}
								_match_end_1ac6084d4:;
							};
						}
						_iter_next_1ac607cdb:;
						++it;
						goto _iter_begin_1ac607cdb;
					}
					_iter_end_1ac607cdb:;
				};
			}
		}
		_match_end_1ac604997:;
	};
	return true;;
}



inline jule::Bool _1a7a96669_checkIllegalCycles(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _90135_ident, jule::Any _90162_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90162_decl };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac60a6a1:;
			{
				if ((*(_90162_decl.unsafe_cast_ptr<_1a7993357_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac60810a:;
			{
				if ((*(_90162_decl.unsafe_cast_ptr<_1a7a81b0a_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ac608182:;
	};
	if ((_90162_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a7a94ee7_pushErr(_self_, (*((*(_90135_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_200880c8a_StrBuilder _9247_message = static__2008811b9_New(32LL);;
	if ((!(_1a7a9626d_checkCrossCycle(_self_, _90162_decl, &(_9247_message))))) {
		jule::Str _9278_errMsg = _200882022_Str(&_9247_message);;
		_200882220_Clear(&_9247_message);
		_1a7a95d72_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90162_decl, &(_9247_message));
		_9278_errMsg+=_200882022_Str(&_9247_message);
		_1a7a94ee7_pushErr(_self_, (*((*(_90135_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_9278_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac6100ce:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90162_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac60e62d:;
			{
				{
					auto &_match_expr{ _90162_decl };
					
					if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1ac610981:;
						{
							jule::Ptr<_1a7993357_Struct> _9439_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a7993357_Struct>();;
							(*(_9439_s))._field_Depends=jule::append((*_9439_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1a7993357_Struct>>::make({_90162_decl.cast_ptr<_1a7993357_Struct>(&__jule_any_type64)}));
						}
					}
					_match_end_1ac61091a:;
				};
			}
		}
		_match_end_1ac610079:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a7a96a65_fromTypeAlias(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _95130_decl, jule::Ptr<_1a7a81b0a_TypeAlias>* _95157_ta) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95157_ta))))._field_Public, (*((*(_95157_ta))))._field_Token)))) {
		_1a7a94ee7_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95157_ta))))._field_Used=true;
	if (((*((*(_95130_decl))))._field_Generics.len() > 0LL)) {
		_1a7a94ee7_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac615bc8:;
			if (it != expr_end) {
				jule::Ptr<_1a7a81b0a_TypeAlias> _96811_bg = *it;
				{
					if (((_96811_bg == (*(_95157_ta))) || (((*((*((*(_95157_ta))))._field_Kind))._field_Kind != nullptr) && _1a7a83106_Equal((*((*((*(_95157_ta))))._field_Kind))._field_Kind, (*(*(_96811_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ac615bc8;
					};
				}
				_iter_next_1ac615bc8:;
				++it;
				goto _iter_begin_1ac615bc8;
			}
			_iter_end_1ac615bc8:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac617ea5:;
			if (it != expr_end) {
				jule::Ptr<_1a7a81b0a_TypeAlias> _97911_bg = *it;
				{
					if ((_97911_bg == (*(_95157_ta)))) {
						_1a7a94ee7_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95157_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac61888a:;
						if (it != expr_end) {
							jule::Ptr<_1a7a81b0a_TypeAlias> _98412_dg = *it;
							{
								if ((_97911_bg == _98412_dg)) {
									_1a7a94ee7_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1ac61888a:;
							++it;
							goto _iter_begin_1ac61888a;
						}
						_iter_end_1ac61888a:;
					};
				}
				_iter_next_1ac617ea5:;
				++it;
				goto _iter_begin_1ac617ea5;
			}
			_iter_end_1ac617ea5:;
		};
	};
	jule::Bool _9937_ok = _1a7a96669_checkIllegalCycles(_self_, _95130_decl, jule::Any((*(_95157_ta)), &__jule_any_type65));;
	if ((!(_9937_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_95157_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_9937_ok=_1a68476e6_checkTypeAliasDeclKind((*(_self_))._field_s, _95157_ta, (*(_self_))._field_lookup);
		if ((!(_9937_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95157_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>::make({(*(_95157_ta))}));
	};
	jule::Ptr<_1a7a828ec_TypeKind> _10127_tk = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Generic=(*((*(_95157_ta))))._field_Generic, ._field_Kind=(*(*((*((*(_95157_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1a7a95954_pushReferenceByKind(_self_, &(_10127_tk));
	if ((*((*(_95157_ta))))._field_Binded) {
		(*(_10127_tk))._field_BindIdent=(*((*(_95157_ta))))._field_Ident;
	} else {
		(*(_10127_tk))._field_BindIdent=(*(*((*((*(_95157_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10127_tk, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data19);;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a7a96e61_fromEnum(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _102525_decl, jule::Ptr<_1a79bdddd_Enum>* _102552_e) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102552_e))))._field_Public, (*((*(_102552_e))))._field_Token)))) {
		_1a7a94ee7_pushErr(_self_, (*((*(_102525_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102525_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102525_decl))))._field_Generics.len() > 0LL)) {
		_1a7a94ee7_pushErr(_self_, (*((*(_102525_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102525_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102552_e));;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a7a9735c_fromTypeEnum(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _103729_decl, jule::Ptr<_1a79c05e8_TypeEnum>* _103756_e) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103756_e))))._field_Public, (*((*(_103756_e))))._field_Token)))) {
		_1a7a94ee7_pushErr(_self_, (*((*(_103729_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103729_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103729_decl))))._field_Generics.len() > 0LL)) {
		_1a7a94ee7_pushErr(_self_, (*((*(_103729_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103729_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103756_e));;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a7a97758_fromTrait(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _104926_decl, jule::Ptr<_1a79bb6d2_Trait>* _104953_t) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104953_t))))._field_Public, (*((*(_104953_t))))._field_Token)))) {
		_1a7a94ee7_pushErr(_self_, (*((*(_104926_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104926_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104926_decl))))._field_Generics.len() > 0LL)) {
		_1a7a94ee7_pushErr(_self_, (*((*(_104926_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104926_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ac5eb7e6_pushReference(_self_, _104953_t);
	return (*(_104953_t));;
}



inline jule::Bool _1a7a97b54_checkStructIns(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79960d5_StructIns>* _106235_ins, jule::Ptr<_1a795c013_Token>* _106257_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106235_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106235_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type64_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106235_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a6853cda_precheckStructIns((*(_self_))._field_s, _106235_ins, (*(_106257_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106235_ins))))._field_Generics.len() > 0LL)) {
		_1a6854802_checkStructInsOperators((*(_self_))._field_s, (*(_106235_ins)));
		_1a6854093_checkStructIns((*(_self_))._field_s, _106235_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7a97e0c_appendUsedStructReference(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7993357_Struct>* _108346_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac62c55d:;
			{
				jule::Ptr<_1a7993357_Struct> _10898_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a7993357_Struct>();;
				if ((!(_1a7994cd7_IsUses(_10898_refS.ptr(), (*(_108346_s)))))) {
					(*_10898_refS.alloc)._field_Uses=jule::append((*_10898_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1a7993357_Struct>>::make({(*(_108346_s))}));
				};
			}
		}
		_match_end_1ac62c508:;
	};
}



inline jule::Ptr<_1a79960d5_StructIns> _1a7a98308_buildStructInstance(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _109640_decl, jule::Ptr<_1a7993357_Struct>* _109667_s) {
	jule::Ptr<_1a7a937ba_referencer> _10987_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> _11007_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
				_case_begin_1ac63051c:;
				{
					jule::Ptr<_1a79de45d_scopeChecker> _11079_sc = (*(_self_))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0);;
					jule::Ptr<_1a79de45d_scopeChecker> _11089_hard = _1a79e2a8d_getHardRoot(_11079_sc);;
					if ((((*((*(_11089_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11089_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_109667_s))))) {
						goto _match_end_1ac6304b7;
					};
					jule::I64 _11125_n = ((*(*(_11089_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11089_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11089_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11125_n);
				}
			}
			_match_end_1ac6304b7:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11227_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a79960d5_StructIns> _11267_ins = _1a79937b9_instance((*(_109667_s)));;
	(*(_11267_ins))._field_Generics=jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>>::alloc(0LL, (*((*(_109640_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109640_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac635841:;
		if (it != expr_end) {
			jule::Ptr<_1a79724bd_TypeDecl> _112815_g = *it;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _11298_kind = _1a7a9bb14_build(_self_, &((*(_112815_g))._field_Kind));;
				if ((_11298_kind == nullptr)) {
					return nullptr;;
				};
				(*_11267_ins.alloc)._field_Generics=jule::append((*_11267_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a7a81016_InsGeneric>>::make({jule::new_ptr<_1a7a81016_InsGeneric>(_1a7a81016_InsGeneric{._field_Kind=_11298_kind, })}));
			}
			_iter_next_1ac635841:;
			++it;
			goto _iter_begin_1ac635841;
		}
		_iter_end_1ac635841:;
	};
	(*(_self_))._field_lookup=_11227_lookup;
	(*(_self_))._field_bannedGenerics=_11007_bannedGenerics;
	(*(_self_))._field_referencer=_10987_referencer;
	return _11267_ins;;
}



inline jule::Ptr<_1a79960d5_StructIns> _1a7a98704_fromStruct(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _114431_decl, jule::Ptr<_1a7993357_Struct>* _114458_s) {
	if ((!(_1a683abb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114458_s))))._field_Public, (*((*(_114458_s))))._field_Token)))) {
		_1a7a94ee7_pushErr(_self_, (*((*(_114431_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114431_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114431_decl))))._field_Generics.len() > 0LL)) {
			_1a7a94ee7_pushErr(_self_, (*((*(_114431_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a79960d5_StructIns>(_1a79960d5_StructIns{._field_Decl=(*(_114458_s)), });;
	};
	jule::Bool _11627_ok = _1a7a96669_checkIllegalCycles(_self_, _114431_decl, jule::Any((*(_114458_s)), &__jule_any_type64));;
	if ((!(_11627_ok))) {
		return nullptr;;
	};
	_1a7a97e0c_appendUsedStructReference(_self_, _114458_s);
	jule::Ptr<_1a79960d5_StructIns> _11687_ins = _1a7a98308_buildStructInstance(_self_, _114431_decl, _114458_s);;
	if ((_11687_ins == nullptr)) {
		return nullptr;;
	};
	_11627_ok=_1a683b982_checkGenericQuantity((*(_self_))._field_s, (*((*(_11687_ins))._field_Decl))._field_Generics.len(), (*(_11687_ins))._field_Generics.len(), (*((*(_114431_decl))))._field_Token);
	if ((!(_11627_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a79960d5_StructIns> _11787_existInstance = _1a7993ac7_appendInstance((*(_114458_s)).ptr(), &(_11687_ins));;
	if ((_11787_existInstance != nullptr)) {
		if ((!(_1a68458e2_checkConstraintsStruct((*(_self_))._field_s, &(_11687_ins), &((*((*(_114431_decl))))._field_Token), _11787_existInstance)))) {
			return nullptr;;
		};
		_1ac5e8ded_pushReference(_self_, &(_11787_existInstance));
		return _11787_existInstance;;
	};
	if ((!(_1a7a97b54_checkStructIns(_self_, &(_11687_ins), &((*((*(_114431_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1ac5e8ded_pushReference(_self_, &(_11687_ins));
	return _11687_ins;;
}



inline jule::Trait _1a7a98a45_getDef(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl>* _120227_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac64020d:;
		if (it != expr_end) {
			jule::Ptr<_1a797e6c8_GenericDecl> _120310_g = *it;
			{
				if (((*(_120310_g))._field_Ident == (*((*(_120227_decl))))._field_Ident)) {
					return jule::Trait(_1a7a9e81a_buildPrimType((*_120310_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20);;
				};
			}
			_iter_next_1ac64020d:;
			++it;
			goto _iter_begin_1ac64020d;
		}
		_iter_end_1ac64020d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac64054e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a81b0a_TypeAlias> _120915_g = *it;
			{
				if (((*(_120915_g))._field_Ident == (*((*(_120227_decl))))._field_Ident)) {
					if (((*((*(_120227_decl))))._field_Generics.len() > 0LL)) {
						_1a7a94ee7_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120227_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1a79960d5_StructIns> _12159_st = _1a7a865c1_Struct((*((*_120915_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12159_st != nullptr)) {
						jule::Bool _12176_ok = _1a7a96669_checkIllegalCycles(_self_, _120227_decl, jule::Any((*_12159_st.alloc)._field_Decl, &__jule_any_type64));;
						if ((!(_12176_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_120915_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1ac64054e:;
			++it;
			goto _iter_begin_1ac64054e;
		}
		_iter_end_1ac64054e:;
	};
	if ((!((*((*(_120227_decl))))._field_Binded))) {
		jule::Ptr<_1a79bdddd_Enum> _12278_e = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa2048_FindEnum((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12278_e != nullptr)) {
			return jule::Trait(_1a7a96e61_fromEnum(_self_, _120227_decl, &(_12278_e)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3);;
		};
		jule::Ptr<_1a79c05e8_TypeEnum> _12328_te = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa2389_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12328_te != nullptr)) {
			return jule::Trait(_1a7a9735c_fromTypeEnum(_self_, _120227_decl, &(_12328_te)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4);;
		};
		jule::Ptr<_1a79bb6d2_Trait> _12378_t = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa1c07_FindTrait((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12378_t != nullptr)) {
			return jule::Trait(_1a7a97758_fromTrait(_self_, _120227_decl, &(_12378_t)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a7a94ee7_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7993357_Struct> _12467_s = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa14ba_FindStruct((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident, (*((*(_120227_decl))))._field_Binded);;
	if ((_12467_s != nullptr)) {
		return jule::Trait(_1a7a98704_fromStruct(_self_, _120227_decl, &(_12467_s)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0);;
	};
	jule::Ptr<_1a7a81b0a_TypeAlias> _12517_ta = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa10be_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident, (*((*(_120227_decl))))._field_Binded);;
	if (((_12517_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12517_ta=_1a7b6852c_findBuiltinTypeAlias((*((*(_120227_decl))))._field_Ident);
	};
	if ((_12517_ta != nullptr)) {
		return _1a7a96a65_fromTypeAlias(_self_, _120227_decl, &(_12517_ta));;
	};
	_1a7a94ee7_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120227_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait _1a7a98d86_buildIdent(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972ac8_IdentTypeDecl> _126330_decl) {
	return _1a7a98a45_getDef(_self_, &(_126330_decl));;
}



inline jule::Trait _1a7a991c7_buildSubIdent(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7972d92_SubIdentTypeDecl> _126733_decl) {
	jule::Trait _12687_ident = _1a7a98d86_buildIdent(_self_, (*(_126733_decl))._field_Idents[0LL]);;
	if ((_12687_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12687_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4)) {
			_case_begin_1ac64d161:;
			{
				goto _match_end_1ac64d21b;
			}
		}
		else {
			_case_begin_1ac64d271:;
			{
				_1a7a94ee7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac64d21b:;
	};
	jule::Ptr<_1a79c05e8_TypeEnum> _12797_t = _12687_ident.cast_ptr<_1a79c05e8_TypeEnum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a7972ac8_IdentTypeDecl>> _12807_idents = (*_126733_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12807_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac64ec89:;
		if (it != expr_end) {
			jule::I64 _12817_i = it - expr->begin();
			jule::Ptr<_1a7972ac8_IdentTypeDecl> _128110_id = *it;
			{
				jule::Ptr<_1a79c0021_TypeEnumItem> _12828_item = _1a79c11a9_FindItem(_12797_t.ptr(), (*(_128110_id))._field_Ident);;
				if ((_12828_item == nullptr)) {
					_1a7a94ee7_pushErr(_self_, (*_128110_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_12797_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_128110_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_12807_idents.len() - _12817_i) == 1LL)) {
					_1a7a95954_pushReferenceByKind(_self_, &((*((*(_12828_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_12828_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data19);;
				};
				_12797_t=_1a7a85a87_TypeEnum((*(*(_12828_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_12797_t == nullptr)) {
					_1a7a94ee7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ac64ec89:;
			++it;
			_12817_i++;
			goto _iter_begin_1ac64ec89;
		}
		_iter_end_1ac64ec89:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a8e002_Sptr> _1a7a99518_buildSptrFromType(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _130138_elem) {
	{
		
		if (((*(_130138_elem)) == nullptr)) {
			_case_begin_1ac654497:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7a865c1_Struct((*(_130138_elem)).ptr()) != nullptr)) {
			_case_begin_1ac654541:;
			{
				jule::Ptr<_1a79960d5_StructIns> _13074_s = _1a7a865c1_Struct((*(_130138_elem)).ptr());;
				if ((((*(_13074_s))._field_Decl != nullptr) && (*(*(_13074_s))._field_Decl.alloc)._field_Binded)) {
					_1a7a94ee7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a7a85d1d_Arr((*(_130138_elem)).ptr()) != nullptr) && (*(_1a7a85d1d_Arr((*(_130138_elem)).ptr())))._field_Auto)) {
			_case_begin_1ac6545a7:;
			{
				_1a7a94ee7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac653b7d:;
	};
	return jule::new_ptr<_1a7a8e002_Sptr>(_1a7a8e002_Sptr{._field_Elem=(*(_130138_elem))});;
}



inline jule::Ptr<_1a7a8e002_Sptr> _1a7a99859_buildSptr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7973568_SptrTypeDecl> _132129_decl) {
	jule::Bool _13223_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13223_cycleRisk;
	});;
	jule::Ptr<_1a7a828ec_TypeKind> _13267_elem = _1a7a9be55_checkDecl(_self_, &((*(_132129_decl))._field_Elem));;
	return _1a7a99518_buildSptrFromType(_self_, &(_13267_elem));;
}



inline jule::Ptr<_1a7a927b9_Ptr> _1a7a99b9a_buildPtrFromType(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _133037_elem) {
	{
		
		if (((*(_133037_elem)) == nullptr)) {
			_case_begin_1ac659579:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7a85d1d_Arr((*(_133037_elem)).ptr()) != nullptr) && (*(_1a7a85d1d_Arr((*(_133037_elem)).ptr())))._field_Auto)) {
			_case_begin_1ac659623:;
			{
				_1a7a94ee7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a7a927b9_Ptr>();;
			}
		}
		_match_end_1ac659469:;
	};
	return jule::new_ptr<_1a7a927b9_Ptr>(_1a7a927b9_Ptr{._field_Elem=(*(_133037_elem))});;
}



inline jule::Ptr<_1a7a927b9_Ptr> _1a7a99edb_buildPtr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7973ee7_PtrTypeDecl> _134528_decl) {
	jule::Bool _13463_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13463_cycleRisk;
	});;
	jule::Ptr<_1a7a828ec_TypeKind> _135011_elem = nullptr;;
	if ((!(_1a797435a_IsUnsafe(_134528_decl.ptr())))) {
		_135011_elem=_1a7a9be55_checkDecl(_self_, &((*_134528_decl.alloc)._field_Elem));
		return _1a7a99b9a_buildPtrFromType(_self_, &(_135011_elem));;
	};
	return jule::new_ptr<_1a7a927b9_Ptr>(_1a7a927b9_Ptr{._field_Elem=_135011_elem});;
}



inline jule::Ptr<_1a7a8e9c5_Slc> _1a7a9a32c_buildSlc(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79738ed_SlcTypeDecl> _136228_decl) {
	jule::Bool _13633_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13633_cycleRisk;
	});;
	jule::Ptr<_1a7a828ec_TypeKind> _13677_elem = _1a7a9be55_checkDecl(_self_, &((*(_136228_decl))._field_Elem));;
	{
		
		if ((_13677_elem == nullptr)) {
			_case_begin_1ac65e65b:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7a85d1d_Arr(_13677_elem.ptr()) != nullptr) && (*(_1a7a85d1d_Arr(_13677_elem)))._field_Auto)) {
			_case_begin_1ac65e705:;
			{
				_1a7a94ee7_pushErr(_self_, (*((*_136228_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac65e606:;
	};
	return jule::new_ptr<_1a7a8e9c5_Slc>(_1a7a8e9c5_Slc{._field_Elem=_13677_elem});;
}



inline jule::Ptr<_1a7a91ce6_Arr> _1a7a9a66d_buildArr(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7974789_ArrTypeDecl> _138328_decl) {
	jule::I64 _13847_n = 0LL;;
	if ((!(_1a7974aec_AutoSized(_138328_decl.ptr())))) {
		jule::Ptr<_1a7a51503_Data> _13878_size = _1a7a7148a_evalExpr(_1a6842900_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138328_decl.alloc)._field_Size);;
		if ((_13878_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a7a51e0a_IsConst(_13878_size.ptr())))) {
			_1a7a94ee7_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a7a8504d_Prim((*(_13878_size))._field_Kind.ptr()) == nullptr) || (!(_1bd82b7a1_IsInt((*(_1a7a8504d_Prim((*(_13878_size))._field_Kind)))._field_Kind))))) {
			_1a7a94ee7_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13847_n=static_cast<jule::I64>(_1bd82ea29_AsI64((*(_13878_size))._field_Constant.ptr()));
		if ((_13847_n < 0LL)) {
			_1a7a94ee7_pushErr(_self_, (*((*_138328_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14055_max = _1bd827813_MaxI(jule::Str::lit("int", 3));;
			if (((_1bd8206da_BitSize != 64LL) && (static_cast<jule::I64>(_13847_n) > _14055_max))) {
				_1a7a94ee7_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1a7a7d909_constoa(&((*(_13878_size))._field_Constant)), &__jule_any_type4),jule::Any(_1bd81e08a_FmtInt(_14055_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a7a828ec_TypeKind> _14147_elem = _1a7a9be55_checkDecl(_self_, &((*_138328_decl.alloc)._field_Elem));;
	{
		
		if ((_14147_elem == nullptr)) {
			_case_begin_1ac66929d:;
			{
				return nullptr;;
			}
		}
		else if (((_1a7a85d1d_Arr(_14147_elem.ptr()) != nullptr) && (*(_1a7a85d1d_Arr(_14147_elem)))._field_Auto)) {
			_case_begin_1ac669325:;
			{
				_1a7a94ee7_pushErr(_self_, (*((*_138328_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac6676b9:;
	};
	return jule::new_ptr<_1a7a91ce6_Arr>(_1a7a91ce6_Arr{._field_Auto=_1a7974aec_AutoSized(_138328_decl), ._field_N=_13847_n, ._field_Elem=_14147_elem});;
}



inline jule::Ptr<_1a7a91169_Map> _1a7a9a9ae_buildMap(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7974ed7_MapTypeDecl> _143228_decl) {
	jule::Bool _14333_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14333_cycleRisk;
	});;
	jule::Ptr<_1a7a828ec_TypeKind> _14377_key = _1a7a9be55_checkDecl(_self_, &((*(_143228_decl))._field_Key));;
	if ((_14377_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a828ec_TypeKind> _14427_val = _1a7a9be55_checkDecl(_self_, &((*_143228_decl.alloc)._field_Val));;
	if ((_14427_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a7a85801_Enum(_14427_val.ptr()) != nullptr)) {
		_1a7a94ee7_pushErr(_self_, (*((*_143228_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a7a91169_Map>(_1a7a91169_Map{._field_Key=_14377_key, ._field_Val=_14427_val});;
}



inline jule::Ptr<_1a7a905b9_Tuple> _1a7a9ad00_buildTuple(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a7973bea_TupleTypeDecl> _145630_decl) {
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _14577_types = jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::alloc(0LL, (*(_145630_decl))._field_Types.len());;
	{
		auto expr = &((*_145630_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac67076b:;
		if (it != expr_end) {
			jule::Ptr<_1a79724bd_TypeDecl> _145815_t = *it;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _14598_kind = _1a7a9be55_checkDecl(_self_, &(_145815_t));;
				if ((_14598_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> &__jule_push_dest = _14577_types; __jule_push_dest.push(_14598_kind); };
			}
			_iter_next_1ac67076b:;
			++it;
			goto _iter_begin_1ac67076b;
		}
		_iter_end_1ac67076b:;
	};
	return jule::new_ptr<_1a7a905b9_Tuple>(_1a7a905b9_Tuple{._field_Types=_14577_types});;
}



inline jule::Bool _1a7a9b141_checkFuncTypes(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79ab309_FnIns>* _146935_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146935_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac672284:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> _147015_p = *it;
			{
				(*(_147015_p))._field_Kind=_1a7a9bb14_build(_self_, &((*((*((*((*_147015_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147015_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a6846096_checkFnParamKind((*(_self_))._field_s, &(_147015_p));
			}
			_iter_next_1ac672284:;
			++it;
			goto _iter_begin_1ac672284;
		}
		_iter_end_1ac672284:;
	};
	if ((!(_1a79a879b_IsVoid((*((*(_146935_f))))._field_Decl.ptr())))) {
		(*((*(_146935_f))))._field_Result=_1a7a9bb14_build(_self_, &((*(*((*((*((*((*(_146935_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146935_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a79ab309_FnIns> _1a7a9b482_buildFunc(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a798417d_FnDecl> _148729_decl) {
	jule::Bool _14883_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14883_cycleRisk;
	});;
	if (((*(_148729_decl))._field_Generics.len() > 0LL)) {
		_1a7a94ee7_pushErr(_self_, (*_148729_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a79a8328_Fn> _14977_f = _1a79b2970_buildFunc(_148729_decl);;
	jule::I64 _14993_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a685038b_checkAnonFuncDecl((*(_self_))._field_s, &(_14977_f));
	if ((_14993_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a79ab309_FnIns> _15057_ins = _1a79a9802_instanceForce(_14977_f);;
	(*(_15057_ins))._field_Anon=true;
	(*_15057_ins.alloc)._field_AsAnon=true;
	jule::Bool _15093_ok = _1a7a9b141_checkFuncTypes(_self_, &(_15057_ins));;
	if ((!(_15093_ok))) {
		return nullptr;;
	};
	return _15057_ins;;
}



inline jule::Trait _1a7a9b7c3_buildByNamespace(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a797326b_NamespaceTypeDecl> _151736_decl) {
	jule::Str _15183_path = _1a7a9e441_buildLinkPathByTokens(&((*(_151736_decl))._field_Idents));;
	jule::Ptr<_1a6817474_ImportInfo> _15197_imp = ((_1a7aa24dd_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a7aa07c7_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>>((void*)__jule_anon_1ac67b931, jule::Ptr<__jule_anon_1ac67b931_ctx>::make(__jule_anon_1ac67b931_ctx{._151736_decl=_151736_decl,._15183_path=_15183_path}).as<jule::Uintptr>(), __jule_anon_1ac67b931_ctx_handler));;
	jule::Str _15263_selfIdent = jule::Str::lit("self", 4);;
	if (((_15197_imp == nullptr) || (!(_1a68199b5_isLookupable(_15197_imp.ptr(), &(_15263_selfIdent)))))) {
		_1a7a94ee7_pushErr(_self_, (*(_151736_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15183_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a7a953e3_disallowBuiltin(_self_);
	jule::Trait _15337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15197_imp, (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data1);
	jule::Ptr<_1a7a828ec_TypeKind> _15357_kind = _1a7a9be55_checkDecl(_self_, &((*_151736_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15337_lookup;
	_1a7a951e5_allowBuiltin(_self_);
	return jule::Trait(_15357_kind, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data19);;
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a7a9bb14_build(_1a7a947aa_typeChecker* _self_, jule::Any* _154126_declKind) {
	jule::Trait _154211_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154126_declKind)) };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac68241a:;
			{
				jule::Trait _15458_t = _1a7a98d86_buildIdent(_self_, (*(_154126_declKind)).cast_ptr<_1a7972ac8_IdentTypeDecl>(&__jule_any_type74));;
				if ((_15458_t != nullptr)) {
					_154211_kind=_15458_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac681837:;
			{
				jule::Trait _15508_t = _1a7a991c7_buildSubIdent(_self_, (*(_154126_declKind)).cast_ptr<_1a7972d92_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_15508_t != nullptr)) {
					_154211_kind=_15508_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac6819d0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a8e002_Sptr> _15568_t = _1a7a99859_buildSptr(_self_, (*(_154126_declKind)).cast_ptr<_1a7973568_SptrTypeDecl>(&__jule_any_type71));;
				if ((_15568_t != nullptr)) {
					_154211_kind=jule::Trait(_15568_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac681a46:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a927b9_Ptr> _15628_t = _1a7a99edb_buildPtr(_self_, (*(_154126_declKind)).cast_ptr<_1a7973ee7_PtrTypeDecl>(&__jule_any_type70));;
				if ((_15628_t != nullptr)) {
					_154211_kind=jule::Trait(_15628_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ac681aac:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a8e9c5_Slc> _15688_t = _1a7a9a32c_buildSlc(_self_, (*(_154126_declKind)).cast_ptr<_1a79738ed_SlcTypeDecl>(&__jule_any_type69));;
				if ((_15688_t != nullptr)) {
					_154211_kind=jule::Trait(_15688_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ac681b23:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a91ce6_Arr> _15748_t = _1a7a9a66d_buildArr(_self_, (*(_154126_declKind)).cast_ptr<_1a7974789_ArrTypeDecl>(&__jule_any_type68));;
				if ((_15748_t != nullptr)) {
					_154211_kind=jule::Trait(_15748_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac681b89:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a91169_Map> _15808_t = _1a7a9a9ae_buildMap(_self_, (*(_154126_declKind)).cast_ptr<_1a7974ed7_MapTypeDecl>(&__jule_any_type72));;
				if ((_15808_t != nullptr)) {
					_154211_kind=jule::Trait(_15808_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac681c00:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a7a905b9_Tuple> _15868_t = _1a7a9ad00_buildTuple(_self_, (*(_154126_declKind)).cast_ptr<_1a7973bea_TupleTypeDecl>(&__jule_any_type73));;
				if ((_15868_t != nullptr)) {
					_154211_kind=jule::Trait(_15868_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac6824d6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a79ab309_FnIns> _15928_t = _1a7a9b482_buildFunc(_self_, (*(_154126_declKind)).cast_ptr<_1a798417d_FnDecl>(&__jule_any_type14));;
				if ((_15928_t != nullptr)) {
					_154211_kind=jule::Trait(_15928_t, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ac68254c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _15988_t = _1a7a9b7c3_buildByNamespace(_self_, (*(_154126_declKind)).cast_ptr<_1a797326b_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_15988_t != nullptr)) {
					_154211_kind=_15988_t;
				};
			}
		}
		else {
			_case_begin_1ac681969:;
			{
				_1a7a94ee7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac681914:;
	};
	if ((_154211_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154211_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data19)) {
			_case_begin_1ac690956:;
			{
				return _154211_kind.cast_ptr<_1a7a828ec_TypeKind>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1ac682948:;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _16138_tk = jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=_154211_kind});;
				{
					auto &_match_expr{ _154211_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)) {
						_case_begin_1ac68dd83:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16138_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)) {
						_case_begin_1ac68dc1d:;
						{
							jule::Ptr<_1a79960d5_StructIns> _16205_s = _154211_kind.cast_ptr<_1a79960d5_StructIns>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0);;
							if ((((*(_16205_s))._field_Decl != nullptr) && (*(*(_16205_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16138_tk))._field_BindIdent=(*(*(_16205_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1ac68dd2d:;
				};
				return _16138_tk;;
			}
		}
		_match_end_1ac6828b0:;
	};
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a7a9be55_checkDecl(_1a7a947aa_typeChecker* _self_, jule::Ptr<_1a79724bd_TypeDecl>* _162930_decl) {
	jule::Ptr<_1a795c013_Token> _16317_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162930_decl))))._field_Token;
	jule::Ptr<_1a7a828ec_TypeKind> _16347_kind = _1a7a9bb14_build(_self_, &((*((*(_162930_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16317_errorToken;
	return _16347_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a947aa_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a7a9c8a1_prim(jule::Str* _165618_ident, jule::Ptr<_1a7a8a4c6_Prim> _165630_t) {
	return ((*(_165630_t))._field_Kind == (*(_165618_ident)));;
}



inline jule::Bool static__1a7a9cc25_exist(jule::Str* _166019_ident, jule::Ptr<_1a7a828ec_TypeKind>* _166036_k) {
	{
		
		if ((_1a7a8504d_Prim((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695780:;
			{
				return static__1a7a9c8a1_prim(_166019_ident, _1a7a8504d_Prim((*(_166036_k)).ptr()));;
			}
		}
		else if ((_1a7a852d4_Sptr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695807:;
			{
				jule::Ptr<_1a7a8e002_Sptr> _16658_sptr = _1a7a852d4_Sptr((*(_166036_k)).ptr());;
				return static__1a7a9cc25_exist(_166019_ident, &((*(_16658_sptr))._field_Elem));;
			}
		}
		else if ((_1a7a8556a_Ptr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac69587e:;
			{
				jule::Ptr<_1a7a927b9_Ptr> _16688_ptr = _1a7a8556a_Ptr((*(_166036_k)).ptr());;
				return static__1a7a9cc25_exist(_166019_ident, &((*(_16688_ptr))._field_Elem));;
			}
		}
		else if ((_1a7a860a4_Slc((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695906:;
			{
				jule::Ptr<_1a7a8e9c5_Slc> _16718_slc = _1a7a860a4_Slc((*(_166036_k)).ptr());;
				return static__1a7a9cc25_exist(_166019_ident, &((*(_16718_slc))._field_Elem));;
			}
		}
		else if ((_1a7a85d1d_Arr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695ac1:;
			{
				jule::Ptr<_1a7a91ce6_Arr> _16748_arr = _1a7a85d1d_Arr((*(_166036_k)).ptr());;
				return static__1a7a9cc25_exist(_166019_ident, &((*(_16748_arr))._field_Elem));;
			}
		}
		else if ((_1a7a86add_Map((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695b37:;
			{
				jule::Ptr<_1a7a91169_Map> _16778_m = _1a7a86add_Map((*(_166036_k)).ptr());;
				return (static__1a7a9cc25_exist(_166019_ident, &((*(_16778_m))._field_Key)) || static__1a7a9cc25_exist(_166019_ident, &((*_16778_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a7a865c1_Struct((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695b9d:;
			{
				jule::Ptr<_1a79960d5_StructIns> _16818_s = _1a7a865c1_Struct((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_16818_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac69cc71:;
					if (it != expr_end) {
						jule::Ptr<_1a7a81016_InsGeneric> _168216_g = *it;
						{
							if (static__1a7a9cc25_exist(_166019_ident, &((*(_168216_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac69cc71:;
						++it;
						goto _iter_begin_1ac69cc71;
					}
					_iter_end_1ac69cc71:;
				};
				return false;;
			}
		}
		else if ((_1a7a8633a_Fn((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695c14:;
			{
				jule::Ptr<_1a79ab309_FnIns> _16898_f = _1a7a8633a_Fn((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_16898_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac69e899:;
					if (it != expr_end) {
						jule::Ptr<_1a79aa281_ParamIns> _169016_p = *it;
						{
							if (_1a79a6e70_IsSelf((*(_169016_p))._field_Decl.ptr())) {
								goto _iter_next_1ac69e899;
							};
							if (static__1a7a9cc25_exist(_166019_ident, &((*_169016_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac69e899:;
						++it;
						goto _iter_begin_1ac69e899;
					}
					_iter_end_1ac69e899:;
				};
				if (((*_16898_f.alloc)._field_Result != nullptr)) {
					return static__1a7a9cc25_exist(_166019_ident, &((*_16898_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a7a86d74_Tup((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1ac695c8b:;
			{
				jule::Ptr<_1a7a905b9_Tuple> _17038_tup = _1a7a86d74_Tup((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_17038_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac6a21b5:;
					if (it != expr_end) {
						jule::Ptr<_1a7a828ec_TypeKind> _170416_t = *it;
						{
							if (static__1a7a9cc25_exist(_166019_ident, &(_170416_t))) {
								return true;;
							};
						}
						_iter_next_1ac6a21b5:;
						++it;
						goto _iter_begin_1ac6a21b5;
					}
					_iter_end_1ac6a21b5:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ac69565e:;
			{
				return false;;
			}
		}
		_match_end_1ac695560:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a7a9c461_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a63ee644_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a64020a3_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a64030b5_stop(_1a6402944_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a640334b_stopped(_1a6402944_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a64035d2_finished(_1a6402944_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a6403868_isLastSt(_1a6402944_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a6403bcb_pushErr(_1a6402944_scopeParser* _self_, jule::Ptr<_1a795c013_Token> _18823_token, jule::Str _18838_fmt) {
	_1a6421974_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1a640403e_pushSuggestion(_1a6402944_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1a6421cd7_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1a64042e7_insertAsNext(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a64020a3_stmt>(_1a64020a3_stmt{._field_tokens=(*(_19733_tokens)), });
}



inline jule::Ptr<_1a64020a3_stmt> _1a640457d_next(_1a6402944_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a79824de_ScopeTree> _1a6404979_buildScope(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _20731_tokens, jule::Ptr<_1a795c013_Token> _20753_end) {
	jule::Ptr<_1a79824de_ScopeTree> _2087_s = _1a6400d2c_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1a6402944_scopeParser _2117_ssp = _1a6402944_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a640e7ec_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1a7985338_VarDecl> _1a6404cba_buildVarSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _21831_tokens) {
	jule::Ptr<_1a7985338_VarDecl> _2197_v = _1a6424746_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	(*(_2197_v))._field_Scope=(*(_self_))._field_s;
	return _2197_v;;
}



inline jule::Ptr<_1a7985712_RetSt> _1a640510b_buildRetSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _22430_tokens) {
	jule::Ptr<_1a7985712_RetSt> _2257_st = jule::new_ptr<_1a7985712_RetSt>(_1a7985712_RetSt{._field_Token=_22430_tokens[0LL], });;
	if ((_22430_tokens.len() > 1LL)) {
		(_22430_tokens).mut_slice(1LL);;
		(*(_2257_st))._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, &(_22430_tokens));
	};
	return _2257_st;;
}



inline jule::Ptr<_1a7985e82_Iter> _1a640544c_buildWhileNextIter(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _23539_s) {
	jule::Ptr<_1a7985e82_Iter> _2367_it = jule::new_ptr<_1a7985e82_Iter>(_1a7985e82_Iter{._field_Token=(*((*(_23539_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _2397_tokens = (*((*(_23539_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a79867ac_WhileKind> _2407_kind = jule::new_ptr<_1a79867ac_WhileKind>();;
	if ((_2397_tokens.len() > 0LL)) {
		(*_2407_kind.alloc)._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, &(_2397_tokens));
	};
	if (_1a6403868_isLastSt(_self_)) {
		_1a6403bcb_pushErr(_self_, (*(_2367_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_2397_tokens=(*(_1a640457d_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _2527_stTokens = _1a641b188_getBlockExpr(&(_2397_tokens));;
	if ((_2527_stTokens.len() > 0LL)) {
		jule::Ptr<_1a64020a3_stmt> _2548_stmt = jule::new_ptr<_1a64020a3_stmt>(_1a64020a3_stmt{._field_tokens=_2527_stTokens, ._field_terminated=(*((*(_23539_s))))._field_terminated});;
		(*_2407_kind.alloc)._field_NextToken=_2527_stTokens[0LL];
		(*_2407_kind.alloc)._field_Next=_1a640e489_buildSt(_self_, &(_2548_stmt));
	};
	jule::I64 _2627_i = _2527_stTokens.len();;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _2637_blockTokens = _1a641e675_range(&(_2627_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2397_tokens));;
	if ((_2637_blockTokens == nullptr)) {
		_1a64030b5_stop(_self_);
		_1a6403bcb_pushErr(_self_, (*_2367_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2627_i < _2397_tokens.len())) {
		_1a6403bcb_pushErr(_self_, _2397_tokens[_2627_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_2367_it.alloc)._field_Scope=_1a6404979_buildScope(_self_, &(_2637_blockTokens), _2397_tokens[(_2627_i - 1LL)]);
	(*_2367_it.alloc)._field_Kind=jule::Any(_2407_kind, &__jule_any_type36);
	return _2367_it;;
}



inline jule::Ptr<_1a79867ac_WhileKind> _1a640578d_buildWhileIterKind(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _28039_tokens) {
	return jule::new_ptr<_1a79867ac_WhileKind>(_1a79867ac_WhileKind{._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, _28039_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a6405ace_getRangeKindKeysTokens(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _28643_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _2877_vars;
	jule::Slice<_1d974c80a_Log> _28713_errs;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(_28643_toks, static_cast<jule::U64>(5LLU), true);
		_2877_vars = __jule_assign_result.__jule_result_arg0;
		_28713_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28713_errs);
	return _2877_vars;;
}



inline jule::Ptr<_1a7985338_VarDecl> _1a6405e20_buildRangeKindKey(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _29238_tokens) {
	if (((*(_29238_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a7985338_VarDecl> _2967_key = jule::new_ptr<_1a7985338_VarDecl>(_1a7985338_VarDecl{._field_Token=(*(_29238_tokens))[0LL], ._field_Setter=(*(_29238_tokens))[0LL], });;
	if (((*((*(_2967_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2967_key.alloc)._field_Mutable=true;
		if (((*(_29238_tokens)).len() == 1LL)) {
			_1a6403bcb_pushErr(_self_, (*_2967_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_2967_key.alloc)._field_Token=(*(_29238_tokens))[1LL];
	} else if (((*(_29238_tokens)).len() > 1LL)) {
		_1a6403bcb_pushErr(_self_, (*(_29238_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_2967_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6403bcb_pushErr(_self_, (*_2967_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2967_key.alloc)._field_Ident=(*(*(_2967_key))._field_Token.alloc)._field_Kind;
	return _2967_key;;
}



inline jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _1a6406261_buildRangeKindKeys(_1a6402944_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _31839_parts) {
	jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _31911_keys = nullptr;;
	{
		auto expr = _31839_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac87e370:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _32015_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7985338_VarDecl>> &__jule_push_dest = _31911_keys; __jule_push_dest.push(_1a6405e20_buildRangeKindKey(_self_, &(_32015_tokens))); };
			}
			_iter_next_1ac87e370:;
			++it;
			goto _iter_begin_1ac87e370;
		}
		_iter_end_1ac87e370:;
	};
	return _31911_keys;;
}



inline void _1a64065c4_setupRangeKindKeysPlain(_1a6402944_scopeParser* _self_, jule::Ptr<_1a79871b4_RangeKind>* _32644_rng, jule::Slice<jule::Ptr<_1a795c013_Token>>* _32666_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _3277_keyTokens = _1a6405ace_getRangeKindKeysTokens(_self_, _32666_tokens);;
	if ((_3277_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3277_keyTokens.len() > 2LL)) {
		_1a6403bcb_pushErr(_self_, (*((*(_32644_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _3347_keys = _1a6406261_buildRangeKindKeys(_self_, &(_3277_keyTokens));;
	(*((*(_32644_rng))))._field_KeyA=_3347_keys[0LL];
	if ((_3347_keys.len() > 1LL)) {
		(*((*(_32644_rng))))._field_KeyB=_3347_keys[1LL];
	};
}



inline void _1a6406937_setupRangeKindKeysExplicit(_1a6402944_scopeParser* _self_, jule::Ptr<_1a79871b4_RangeKind>* _34147_rng, jule::Slice<jule::Ptr<_1a795c013_Token>>* _34169_tokens) {
	jule::I64 _3427_i = 0LL;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _3437_rang = _1a641e675_range(&(_3427_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34169_tokens);;
	if ((_3427_i < (*(_34169_tokens)).len())) {
		_1a6403bcb_pushErr(_self_, (*((*(_34147_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1a64065c4_setupRangeKindKeysPlain(_self_, _34147_rng, &(_3437_rang));
}



inline void _1a6406c9a_setupRangeKindKeys(_1a6402944_scopeParser* _self_, jule::Ptr<_1a79871b4_RangeKind>* _35039_rng, jule::Slice<jule::Ptr<_1a795c013_Token>>* _35061_tokens) {
	if (((*((*(_35061_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a6406937_setupRangeKindKeysExplicit(_self_, _35039_rng, _35061_tokens);
		return;;
	};
	_1a64065c4_setupRangeKindKeysPlain(_self_, _35039_rng, _35061_tokens);
}



inline jule::Ptr<_1a79871b4_RangeKind> _1a6407251_buildRangeIterKind(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _35839_var_tokens, jule::Slice<jule::Ptr<_1a795c013_Token>>* _3598_exprTokens, jule::Ptr<_1a795c013_Token>* _35935_inToken) {
	jule::Ptr<_1a79871b4_RangeKind> _3607_rng = jule::new_ptr<_1a79871b4_RangeKind>(_1a79871b4_RangeKind{._field_InToken=(*(_35935_inToken)), });;
	if (((*(_3598_exprTokens)).len() == 0LL)) {
		_1a6403bcb_pushErr(_self_, (*(_3607_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _3607_rng;;
	};
	(*_3607_rng.alloc)._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, _3598_exprTokens);
	if (((*(_35839_var_tokens)).len() > 0LL)) {
		_1a6406c9a_setupRangeKindKeys(_self_, &(_3607_rng), _35839_var_tokens);
	};
	return _3607_rng;;
}



inline jule::Any _1a640764c_buildCommonIterKind(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37440_tokens, jule::Ptr<_1a795c013_Token>* _37459_err_tok) {
	jule::I64 _3757_braceN = 0LL;;
	{
		auto expr = _37440_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac888c3c:;
		if (it != expr_end) {
			jule::I64 _3768_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _37615_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37615_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac8896dd:;
						{
							(_3757_braceN)++;
							goto _iter_next_1ac888c3c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac889ab7:;
						{
							(_3757_braceN)--;
						}
					}
					_match_end_1ac8899c9:;
				};
				if ((_3757_braceN != 0LL)) {
					goto _iter_next_1ac888c3c;
				};
				{
					auto &_match_expr{ (*(_37615_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1ac88acb6:;
						{
							jule::Slice<jule::Ptr<_1a795c013_Token>> _3939_declTokens = (*(_37440_tokens)).slice(0LL, _3768_i);;
							jule::Slice<jule::Ptr<_1a795c013_Token>> _3949_exprTokens = (*(_37440_tokens)).slice((_3768_i + 1LL));;
							return jule::Any(_1a6407251_buildRangeIterKind(_self_, &(_3939_declTokens), &(_3949_exprTokens), &(_37615_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1ac88b2a0:;
				};
			}
			_iter_next_1ac888c3c:;
			++it;
			_3768_i++;
			goto _iter_begin_1ac888c3c;
		}
		_iter_end_1ac888c3c:;
	};
	return jule::Any(_1a640578d_buildWhileIterKind(_self_, _37440_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1a7985e82_Iter> _1a640798d_buildCommonIter(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _40135_tokens) {
	jule::Ptr<_1a7985e82_Iter> _4027_it = jule::new_ptr<_1a7985e82_Iter>(_1a7985e82_Iter{._field_Token=_40135_tokens[0LL], });;
	(_40135_tokens).mut_slice(1LL);;
	if ((_40135_tokens.len() == 0LL)) {
		_1a64030b5_stop(_self_);
		_1a6403bcb_pushErr(_self_, (*(_4027_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _4127_exprTokens = _1a641b188_getBlockExpr(&(_40135_tokens));;
	if ((_4127_exprTokens.len() > 0LL)) {
		(*_4027_it.alloc)._field_Kind=_1a640764c_buildCommonIterKind(_self_, &(_4127_exprTokens), &((*_4027_it.alloc)._field_Token));
	};
	jule::I64 _4167_i = _4127_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _4177_scopeTokens = _1a641e675_range(&(_4167_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40135_tokens));;
	if ((_4177_scopeTokens == nullptr)) {
		_1a64030b5_stop(_self_);
		_1a6403bcb_pushErr(_self_, (*_4027_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4167_i < _40135_tokens.len())) {
		_1a6403bcb_pushErr(_self_, _40135_tokens[_4167_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_4027_it.alloc)._field_Scope=_1a6404979_buildScope(_self_, &(_4177_scopeTokens), _40135_tokens[(_4167_i - 1LL)]);
	return _4027_it;;
}



inline jule::Ptr<_1a7985e82_Iter> _1a6407cce_buildIterSt(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _43132_st) {
	if ((*((*(_43132_st))))._field_terminated) {
		return _1a640544c_buildWhileNextIter(_self_, _43132_st);;
	};
	return _1a640798d_buildCommonIter(_self_, (*((*(_43132_st))))._field_tokens);;
}



inline jule::Ptr<_1a798758d_BreakSt> _1a6408120_buildBreakSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _43833_tokens) {
	jule::Ptr<_1a798758d_BreakSt> _4397_brk = jule::new_ptr<_1a798758d_BreakSt>(_1a798758d_BreakSt{._field_Token=(*(_43833_tokens))[0LL], });;
	if (((*(_43833_tokens)).len() > 1LL)) {
		if (((*((*(_43833_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a6403bcb_pushErr(_self_, (*(_43833_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a640403e_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4397_brk))._field_Label=(*(_43833_tokens))[1LL];
			if (((*(_43833_tokens)).len() > 2LL)) {
				_1a6403bcb_pushErr(_self_, (*(_43833_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4397_brk;;
}



inline jule::Ptr<_1a7987967_ContSt> _1a6408461_buildContSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _45632_tokens) {
	jule::Ptr<_1a7987967_ContSt> _4577_cont = jule::new_ptr<_1a7987967_ContSt>(_1a7987967_ContSt{._field_Token=(*(_45632_tokens))[0LL], });;
	if (((*(_45632_tokens)).len() > 1LL)) {
		if (((*((*(_45632_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a6403bcb_pushErr(_self_, (*(_45632_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a640403e_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4577_cont))._field_Label=(*(_45632_tokens))[1LL];
			if (((*(_45632_tokens)).len() > 2LL)) {
				_1a6403bcb_pushErr(_self_, (*(_45632_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4577_cont;;
}



inline jule::Ptr<_1a7987e1d_If> _1a64087a2_buildIf(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _47428_tokens) {
	jule::Ptr<_1a7987e1d_If> _4757_model = jule::new_ptr<_1a7987e1d_If>(_1a7987e1d_If{._field_Token=(*(_47428_tokens))[0LL], });;
	((*(_47428_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _4797_exprTokens = _1a641b188_getBlockExpr(_47428_tokens);;
	jule::I64 _4807_i = 0LL;;
	if ((_4797_exprTokens.len() == 0LL)) {
		_1a6403bcb_pushErr(_self_, (*(_4757_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_4807_i=_4797_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _4867_scopeTokens = _1a641e675_range(&(_4807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47428_tokens);;
	if ((_4867_scopeTokens == nullptr)) {
		_1a64030b5_stop(_self_);
		_1a6403bcb_pushErr(_self_, (*(_4757_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a795c013_Token> _4937_end = (*(_47428_tokens))[(_4807_i - 1LL)];;
	if ((_4807_i < (*(_47428_tokens)).len())) {
		if (((*((*(_47428_tokens))[_4807_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47428_tokens))).mut_slice(_4807_i);;
		} else {
			_1a6403bcb_pushErr(_self_, (*(_47428_tokens))[_4807_i], jule::Str::lit("invalid syntax", 14));
			(*(_47428_tokens))=nullptr;
		};
	};
	(*_4757_model.alloc)._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, &(_4797_exprTokens));
	(*_4757_model.alloc)._field_Scope=_1a6404979_buildScope(_self_, &(_4867_scopeTokens), _4937_end);
	return _4757_model;;
}



inline jule::Ptr<_1a79882e7_Else> _1a6408ae3_buildElse(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _50730_tokens) {
	jule::Ptr<_1a79882e7_Else> _5087_els = jule::new_ptr<_1a79882e7_Else>(_1a79882e7_Else{._field_Token=(*(_50730_tokens))[0LL], });;
	((*(_50730_tokens))).mut_slice(1LL);;
	jule::I64 _5127_i = 0LL;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _5137_scopeTokens = _1a641e675_range(&(_5127_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50730_tokens);;
	if ((_5137_scopeTokens == nullptr)) {
		if ((_5127_i < (*(_50730_tokens)).len())) {
			_1a6403bcb_pushErr(_self_, (*(_5087_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1a64030b5_stop(_self_);
			_1a6403bcb_pushErr(_self_, (*(_5087_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1a640403e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5127_i < (*(_50730_tokens)).len())) {
		_1a6403bcb_pushErr(_self_, (*(_50730_tokens))[_5127_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_5087_els))._field_Scope=_1a6404979_buildScope(_self_, &(_5137_scopeTokens), (*(_50730_tokens))[(_5127_i - 1LL)]);
	return _5087_els;;
}



inline jule::Ptr<_1a798879d_Conditional> _1a6408e34_buildIfElseChain(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _53136_tokens) {
	jule::Ptr<_1a798879d_Conditional> _5327_chain = jule::new_ptr<_1a798879d_Conditional>(_1a798879d_Conditional{._field_Head=_1a64087a2_buildIf(_self_, &(_53136_tokens)), });;
	if (((*(_5327_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53136_tokens.len() != 0LL)) {
		{
			if (((*(_53136_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1ac8a6199;
			};
			if (((_53136_tokens.len() > 1LL) && ((*(_53136_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53136_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7987e1d_If> _5449_elif = _1a64087a2_buildIf(_self_, &(_53136_tokens));;
				(*_5327_chain.alloc)._field_Tail=jule::append((*_5327_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1a7987e1d_If>>::make({_5449_elif}));
				goto _iter_next_1ac8a6199;
			};
			(*_5327_chain.alloc)._field_Default=_1a6408ae3_buildElse(_self_, &(_53136_tokens));
			goto _iter_end_1ac8a6199;
		}
	_iter_next_1ac8a6199:;
	}
	_iter_end_1ac8a6199:;;
	return _5327_chain;;
}



inline jule::Ptr<_1a7976802_Expr> _1a6409275_buildCoCallSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _55433_tokens) {
	jule::Ptr<_1a795c013_Token> _5553_token = _55433_tokens[0LL];;
	(_55433_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7976802_Expr> _5577_e = _1a6422128_buildExpr((*(_self_))._field_p, &(_55433_tokens));;
	if ((_5577_e == nullptr)) {
		return _5577_e;;
	};
	{
		auto &_match_expr{ (*(_5577_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ac8aa2e1:;
			{
				(*((*(_5577_e))._field_Kind.unsafe_cast_ptr<_1a797a52b_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ac8aa81e:;
			{
				_1a6403bcb_pushErr(_self_, _5553_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1ac8aa7b9:;
	};
	return _5577_e;;
}



inline jule::Ptr<_1a797ee7b_GotoSt> _1a64095b6_buildGotoSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _57032_tokens) {
	jule::Ptr<_1a797ee7b_GotoSt> _5717_gt = jule::new_ptr<_1a797ee7b_GotoSt>(_1a797ee7b_GotoSt{._field_Token=(*(_57032_tokens))[0LL], });;
	if (((*(_57032_tokens)).len() == 1LL)) {
		_1a6403bcb_pushErr(_self_, (*(_5717_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57032_tokens)).len() > 2LL)) {
		_1a6403bcb_pushErr(_self_, (*(_57032_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a795c013_Token> _5807_identToken = (*(_57032_tokens))[1LL];;
	if (((*(_5807_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6403bcb_pushErr(_self_, _5807_identToken, jule::Str::lit("invalid syntax", 14));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _5717_gt;;
	};
	(*(_5717_gt))._field_Label=_5807_identToken;
	return _5717_gt;;
}



inline jule::Ptr<_1a7980278_FallSt> _1a6409907_buildFallSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _59032_tokens) {
	jule::Ptr<_1a7980278_FallSt> _5917_fll = jule::new_ptr<_1a7980278_FallSt>(_1a7980278_FallSt{._field_Token=(*(_59032_tokens))[0LL]});;
	if (((*(_59032_tokens)).len() > 1LL)) {
		_1a6403bcb_pushErr(_self_, (*(_59032_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _5917_fll;;
}



inline jule::Ptr<_1a7988eda_TypeAliasDecl> _1a6409c48_buildTypeAliasSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _60037_tokens) {
	jule::Ptr<_1a7988eda_TypeAliasDecl> _6017_tad = _1a64238bb_buildTypeAliasDecl((*(_self_))._field_p, _60037_tokens);;
	(*(_6017_tad))._field_Scope=(*(_self_))._field_s;
	return _6017_tad;;
}



inline void _1a640a221_pushCaseExpr(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _60632_tokens, jule::Ptr<_1a795c013_Token> _60654_token, jule::Bool _6073_typeMatch, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _60725_exprs) {
	if ((_60632_tokens.len() == 0LL)) {
		return;;
	};
	if (_6073_typeMatch) {
		jule::I64 _6128_i = 0LL;;
		jule::Ptr<_1a79724bd_TypeDecl> _6138_t;
		jule::Bool _61311_ok;
		({
			__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, &(_60632_tokens), (&(_6128_i)), true);
			_6138_t = __jule_assign_result.__jule_result_arg0;
			_61311_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61311_ok) {
			{ jule::Slice<jule::Ptr<_1a7976802_Expr>> &__jule_push_dest = (*(_60725_exprs)); __jule_push_dest.push(jule::new_ptr<_1a7976802_Expr>(_1a7976802_Expr{._field_Token=_60632_tokens[0LL], ._field_End=_60632_tokens[(_60632_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6138_t, &__jule_any_type89)})); };
			if ((_6128_i < _60632_tokens.len())) {
				_1a6403bcb_pushErr(_self_, _60632_tokens[_6128_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a7976802_Expr>> &__jule_push_dest = (*(_60725_exprs)); __jule_push_dest.push(_1a6422128_buildExpr((*(_self_))._field_p, &(_60632_tokens))); };
}



inline __jule_tuple_sx_1a7976802_Expr__jule_tuple_bool _1a640a6c7_buildCaseExprs(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _62935_tokens, jule::Ptr<_1a795c013_Token>* _62958_colon, jule::Bool _62973_typeMatch) {
	__jule_tuple_sx_1a7976802_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _6307_exprs = jule::Slice<jule::Ptr<_1a7976802_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _6317_braceN = 0LL;;
	jule::I64 _6327_j = 0LL;;
	{
		auto expr = _62935_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8b6c37:;
		if (it != expr_end) {
			jule::I64 _6338_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _63315_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63315_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac8b808a:;
						{
							(_6317_braceN)++;
							goto _iter_next_1ac8b6c37;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac8b8464:;
						{
							(_6317_braceN)--;
							goto _iter_next_1ac8b6c37;
						}
					}
					_match_end_1ac8b8376:;
				};
				if ((_6317_braceN != 0LL)) {
					goto _iter_next_1ac8b6c37;
				};
				{
					
					if (((*(_63315_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1ac8b9ad6:;
						{
							jule::Slice<jule::Ptr<_1a795c013_Token>> _6525_exprTokens = (*(_62935_tokens)).slice(_6327_j, _6338_i);;
							if ((_6525_exprTokens.len() == 0LL)) {
								_1a6403bcb_pushErr(_self_, _63315_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1a640a221_pushCaseExpr(_self_, (*(_62935_tokens)).slice(_6327_j, _6338_i), _63315_tok, _62973_typeMatch, &(_6307_exprs));
							};
							_6327_j=(_6338_i + 1LL);
						}
					}
					else if (((*(_63315_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1ac8b9b4c:;
						{
							(*(_62958_colon))=_63315_tok;
							_1a640a221_pushCaseExpr(_self_, (*(_62935_tokens)).slice(_6327_j, _6338_i), _63315_tok, _62973_typeMatch, &(_6307_exprs));
							((*(_62935_tokens))).mut_slice((_6338_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6307_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6338_i - _6327_j) == 0LL) || (_6307_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1ac8b99c6:;
				};
			}
			_iter_next_1ac8b6c37:;
			++it;
			_6338_i++;
			goto _iter_begin_1ac8b6c37;
		}
		_iter_end_1ac8b6c37:;
	};
	_1a6403bcb_pushErr(_self_, (*(_62935_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62935_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a79824de_ScopeTree> _1a640aa18_buildCaseScope(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _67135_tokens) {
	jule::I64 _6727_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6748_i = 0LL;;
			jule::Slice<jule::Ptr<_1a795c013_Token>> _6758_next;
			({
				__jule_tuple_sx_1a795c013_Token__jule_tuple_bool __jule_assign_result = _1a6401c73_skipSt(&(_6748_i), (*(_67135_tokens)).slice(_6727_n));
				_6758_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6758_next.len() == 0LL)) {
				goto _iter_end_1ac8bd700;
			};
			jule::Ptr<_1a795c013_Token> _6794_tok = _6758_next[0LL];;
			if (((*(_6794_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6727_n+=_6748_i;
				goto _iter_next_1ac8bd700;
			};
			jule::Slice<jule::Ptr<_1a795c013_Token>> _6848_scopeTokens = (*(_67135_tokens)).slice(0LL, _6727_n);;
			jule::Ptr<_1a79824de_ScopeTree> _6858_scope = _1a6404979_buildScope(_self_, &(_6848_scopeTokens), (*(_67135_tokens))[_6727_n]);;
			((*(_67135_tokens))).mut_slice(_6727_n);;
			return _6858_scope;;
		}
	_iter_next_1ac8bd700:;
	}
	_iter_end_1ac8bd700:;;
	jule::Ptr<_1a795c013_Token> _68911_end;;
	if (((*(_67135_tokens)).len() > 0LL)) {
		_68911_end=(*(_67135_tokens))[((*(_67135_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a79824de_ScopeTree> _6937_scope = _1a6404979_buildScope(_self_, _67135_tokens, _68911_end);;
	(*(_67135_tokens))=nullptr;
	return _6937_scope;;
}



inline __jule_tuple_x_1a7989491_Case__jule_tuple_bool _1a640ae14_buildCase(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _69830_tokens, jule::Bool _69848_typeMatch) {
	__jule_tuple_x_1a7989491_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a7989491_Case> _6997_c = jule::new_ptr<_1a7989491_Case>(_1a7989491_Case{._field_Token=(*(_69830_tokens))[0LL], });;
	((*(_69830_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a795c013_Token> _70311_colon = nullptr;;
	jule::Bool _70412_ok;
	({
		__jule_tuple_sx_1a7976802_Expr__jule_tuple_bool __jule_assign_result = _1a640a6c7_buildCaseExprs(_self_, _69830_tokens, &(_70311_colon), _69848_typeMatch);
		(*(_6997_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70412_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6997_c.alloc)._field_Scope=_1a640aa18_buildCaseScope(_self_, _69830_tokens);
	if (((*((*_6997_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6997_c))._field_Scope.alloc)._field_End=_70311_colon;
	};
	jule::Bool _7093_isDefault = (_70412_ok && ((*_6997_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6997_c;
	__jule_func_result.__jule_result_arg1 = _7093_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a7989491_Case__jule_tuple_x_1a79882e7_Else _1a640b310_buildCases(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _71330_tokens, jule::Bool _71348_typeMatch) {
	__jule_tuple_sx_1a7989491_Case__jule_tuple_x_1a79882e7_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a7989491_Case>> _71411_cases = nullptr;;
	jule::Ptr<_1a79882e7_Else> _71511_def = nullptr;;
	jule::Bool _7167_defNotLast = false;;
	while ((_71330_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a795c013_Token> _7188_tok = _71330_tokens[0LL];;
			if (((*(_7188_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a6403bcb_pushErr(_self_, _7188_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1ac8c6c69;
			};
			jule::Ptr<_1a7989491_Case> _7238_c;
			jule::Bool _72311_isDefault;
			({
				__jule_tuple_x_1a7989491_Case__jule_tuple_bool __jule_assign_result = _1a640ae14_buildCase(_self_, &(_71330_tokens), _71348_typeMatch);
				_7238_c = __jule_assign_result.__jule_result_arg0;
				_72311_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72311_isDefault) {
				(*(_7238_c))._field_Token=_7188_tok;
				if ((_71511_def == nullptr)) {
					_71511_def=jule::new_ptr<_1a79882e7_Else>(_1a79882e7_Else{._field_Token=(*_7238_c.alloc)._field_Token, ._field_Scope=(*_7238_c.alloc)._field_Scope});
				} else {
					_1a6403bcb_pushErr(_self_, _7188_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_7167_defNotLast=(_7167_defNotLast || (_71511_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a7989491_Case>> &__jule_push_dest = _71411_cases; __jule_push_dest.push(_7238_c); };
			};
		}
	_iter_next_1ac8c6c69:;
	}
	_iter_end_1ac8c6c69:;;
	if (_7167_defNotLast) {
		_1a6403bcb_pushErr(_self_, (*(_71511_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71411_cases;
	__jule_func_result.__jule_result_arg1 = _71511_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7989caa_MatchCase> _1a640b651_buildMatchCase(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _74734_tokens) {
	jule::Ptr<_1a7989caa_MatchCase> _7487_m = jule::new_ptr<_1a7989caa_MatchCase>(_1a7989caa_MatchCase{._field_Token=_74734_tokens[0LL], });;
	(_74734_tokens).mut_slice(1LL);;
	if (((_74734_tokens.len() > 0LL) && ((*(_74734_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7487_m))._field_TypeMatch=true;
		(_74734_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _7587_exprTokens = _1a641b188_getBlockExpr(&(_74734_tokens));;
	if ((_7587_exprTokens.len() > 0LL)) {
		(*_7487_m.alloc)._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, &(_7587_exprTokens));
	} else if ((*_7487_m.alloc)._field_TypeMatch) {
		_1a6403bcb_pushErr(_self_, (*_7487_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _7657_i = _7587_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _7667_blockToks = _1a641e675_range(&(_7657_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74734_tokens));;
	if ((_7667_blockToks == nullptr)) {
		_1a64030b5_stop(_self_);
		_1a6403bcb_pushErr(_self_, (*_7487_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a640403e_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7657_i < _74734_tokens.len())) {
		_1a6403bcb_pushErr(_self_, _74734_tokens[_7657_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_7487_m.alloc)._field_End=_74734_tokens[(_7657_i - 1LL)];
	({
		__jule_tuple_sx_1a7989491_Case__jule_tuple_x_1a79882e7_Else __jule_assign_result = _1a640b310_buildCases(_self_, _7667_blockToks, (*_7487_m.alloc)._field_TypeMatch);
		(*_7487_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7487_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7487_m;;
}



inline jule::Ptr<_1a79824de_ScopeTree> _1a640b992_buildScopeSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _78032_tokens) {
	jule::Bool _7817_isUnsafe = false;;
	jule::Bool _7827_isDeferred = false;;
	jule::Ptr<_1a795c013_Token> _7837_token = _78032_tokens[0LL];;
	if (((*(_7837_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7817_isUnsafe=true;
		(_78032_tokens).mut_slice(1LL);;
		if ((_78032_tokens.len() == 0LL)) {
			_1a6403bcb_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_7837_token=_78032_tokens[0LL];
		if (((*_7837_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7827_isDeferred=true;
			(_78032_tokens).mut_slice(1LL);;
			if ((_78032_tokens.len() == 0LL)) {
				_1a6403bcb_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_7837_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7827_isDeferred=true;
		(_78032_tokens).mut_slice(1LL);;
		if ((_78032_tokens.len() == 0LL)) {
			_1a6403bcb_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _8097_i = 0LL;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8107_scopeTokens = _1a641e675_range(&(_8097_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78032_tokens));;
	if ((_8107_scopeTokens == nullptr)) {
		_1a6403bcb_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_8097_i < _78032_tokens.len())) {
		_1a6403bcb_pushErr(_self_, _78032_tokens[_8097_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a79824de_ScopeTree> _8177_scope = _1a6404979_buildScope(_self_, &(_8107_scopeTokens), _78032_tokens[(_8097_i - 1LL)]);;
	(*(_8177_scope))._field_Unsafety=_7817_isUnsafe;
	(*_8177_scope.alloc)._field_Deferred=_7827_isDeferred;
	return _8177_scope;;
}



inline jule::Ptr<_1a797eaa2_LabelSt> _1a640bcd3_buildLabelSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _82333_tokens) {
	jule::Ptr<_1a797eaa2_LabelSt> _8247_lbl = jule::new_ptr<_1a797eaa2_LabelSt>(_1a797eaa2_LabelSt{._field_Token=(*(_82333_tokens))[0LL], ._field_Ident=(*((*(_82333_tokens))[0LL]))._field_Kind});;
	if (((*(_82333_tokens)).len() > 2LL)) {
		((*(_82333_tokens))).mut_slice(2LL);;
		_1a64042e7_insertAsNext(_self_, _82333_tokens);
	};
	return _8247_lbl;;
}



inline __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool _1a640c124_buildIdSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _83830_tokens) {
	__jule_tuple__1a7981b2b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83830_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a795c013_Token> _8437_token = (*(_83830_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8437_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ac8dc587:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a640bcd3_buildLabelSt(_self_, _83830_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac8dd1e2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a641cac4_assignInfo> _1a640c465_buildAssignInfo(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _85236_tokens) {
	jule::Ptr<_1a641cac4_assignInfo> _8537_info = jule::new_ptr<_1a641cac4_assignInfo>(_1a641cac4_assignInfo{._field_ok=true});;
	jule::I64 _8567_braceN = 0LL;;
	{
		auto expr = _85236_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8de90d:;
		if (it != expr_end) {
			jule::I64 _8578_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _85715_token = *it;
			{
				{
					auto &_match_expr{ (*(_85715_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac8e038c:;
						{
							(_8567_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac8e0744:;
						{
							(_8567_braceN)--;
						}
					}
					_match_end_1ac8e0656:;
				};
				{
					
					if ((_8567_braceN > 0LL)) {
						_case_begin_1ac8e18cc:;
						{
							goto _iter_next_1ac8de90d;
						}
					}
					else if (((!(_1a7961d5e_IsAssignOp((*(_85715_token))._field_Id))) && ((*_85715_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1ac8e1943:;
						{
							goto _iter_next_1ac8de90d;
						}
					}
					_match_end_1ac8e1877:;
				};
				(*(_8537_info))._field_l=(*(_85236_tokens)).slice(0LL, _8578_i);
				if (((*_8537_info.alloc)._field_l.len() == 0LL)) {
					(*_8537_info.alloc)._field_ok=false;
				};
				(*_8537_info.alloc)._field_setter=_85715_token;
				if (((_8578_i + 1LL) >= (*(_85236_tokens)).len())) {
					(*_8537_info.alloc)._field_r=nullptr;
					(*_8537_info.alloc)._field_ok=_1a7961a95_IsPostfixOp((*((*_8537_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1ac8de90d;
				};
				(*_8537_info.alloc)._field_r=(*(_85236_tokens)).slice((_8578_i + 1LL));
				if (_1a7961a95_IsPostfixOp((*(*(_8537_info))._field_setter.alloc)._field_Id)) {
					if (((*_8537_info.alloc)._field_r.len() > 0LL)) {
						_1a6403bcb_pushErr(_self_, (*(_8537_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_8537_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1ac8de90d;
			}
			_iter_next_1ac8de90d:;
			++it;
			_8578_i++;
			goto _iter_begin_1ac8de90d;
		}
		_iter_end_1ac8de90d:;
	};
	return _8537_info;;
}



inline jule::Ptr<_1a79808d8_AssignLeft> _1a640c7a6_buildAssignL(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _89733_tokens) {
	jule::Ptr<_1a79808d8_AssignLeft> _8987_l = jule::new_ptr<_1a79808d8_AssignLeft>(_1a79808d8_AssignLeft{._field_Token=(*(_89733_tokens))[0LL], });;
	if (((*((*(_89733_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8987_l))._field_Ident=(*((*_8987_l.alloc)._field_Token))._field_Kind;
	};
	(*_8987_l.alloc)._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, _89733_tokens);
	return _8987_l;;
}



inline jule::Slice<jule::Ptr<_1a79808d8_AssignLeft>> _1a640cae7_buildAssignLs(_1a6402944_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _90834_parts) {
	jule::Slice<jule::Ptr<_1a79808d8_AssignLeft>> _90911_lefts = nullptr;;
	{
		auto expr = _90834_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e940c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _91015_part = *it;
			{
				jule::Ptr<_1a79808d8_AssignLeft> _9118_l = _1a640c7a6_buildAssignL(_self_, &(_91015_part));;
				{ jule::Slice<jule::Ptr<_1a79808d8_AssignLeft>> &__jule_push_dest = _90911_lefts; __jule_push_dest.push(_9118_l); };
			}
			_iter_next_1ac8e940c:;
			++it;
			goto _iter_begin_1ac8e940c;
		}
		_iter_end_1ac8e940c:;
	};
	return _90911_lefts;;
}



inline __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool _1a640ce38_buildPlainAssign(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _91737_tokens) {
	__jule_tuple__1a7981b2b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a641cac4_assignInfo> _9187_info = _1a640c465_buildAssignInfo(_self_, _91737_tokens);;
	if ((!((*(_9187_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7980e6b_AssignSt> _9237_assign = jule::new_ptr<_1a7980e6b_AssignSt>(_1a7980e6b_AssignSt{._field_Setter=(*_9187_info.alloc)._field_setter, });;
	if (((*((*_9187_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9237_assign))._field_Declarative=true;
		(*_9237_assign.alloc)._field_Right=_1a6422128_buildExpr((*(_self_))._field_p, &((*_9187_info.alloc)._field_r));
		jule::Bool _9314_ok = _1a640d334_buildDeclAssign1(_self_, &((*_9187_info.alloc)._field_l), &(_9237_assign));;
		if ((!(_9314_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9237_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9237_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a79808d8_AssignLeft> _9408_left = (*(_9237_assign))._field_Left[0LL];;
		jule::Ptr<_1a7985338_VarDecl> _9418_decl = jule::new_ptr<_1a7985338_VarDecl>(_1a7985338_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9408_left))._field_Token, ._field_Setter=(*_9237_assign.alloc)._field_Setter, ._field_Ident=(*_9408_left.alloc)._field_Ident, ._field_Mutable=(*_9408_left.alloc)._field_Mutable, ._field_Reference=(*_9408_left.alloc)._field_Reference, ._field_Expr=(*_9237_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9418_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _9537_parts;
	jule::Slice<_1d974c80a_Log> _95314_errs;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(&((*_9187_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9537_parts = __jule_assign_result.__jule_result_arg0;
		_95314_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95314_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95314_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9237_assign.alloc)._field_Left=_1a640cae7_buildAssignLs(_self_, &(_9537_parts));
	if (((*_9187_info.alloc)._field_r != nullptr)) {
		(*_9237_assign.alloc)._field_Right=_1a6422128_buildExpr((*(_self_))._field_p, &((*_9187_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9237_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a640d334_buildDeclAssign1(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _96737_lefts, jule::Ptr<_1a7980e6b_AssignSt>* _96759_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _9697_parts;
	jule::Slice<_1d974c80a_Log> _96914_errs;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(_96737_lefts, static_cast<jule::U64>(5LLU), true);
		_9697_parts = __jule_assign_result.__jule_result_arg0;
		_96914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96914_errs);
		return false;;
	};
	{
		auto expr = &(_9697_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac905b11:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _97515_part = *it;
			{
				jule::Bool _9768_isMut = false;;
				jule::Bool _9778_isRef = false;;
				jule::Ptr<_1a795c013_Token> _9794_token = _97515_part[0LL];;
				if (((*(_9794_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9768_isMut=true;
					(_97515_part).mut_slice(1LL);;
					if ((_97515_part.len() == 0LL)) {
						_1a6403bcb_pushErr(_self_, _9794_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97515_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9778_isRef=true;
					(_97515_part).mut_slice(1LL);;
					if ((_97515_part.len() == 0LL)) {
						_1a6403bcb_pushErr(_self_, _9794_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97515_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97515_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a6403bcb_pushErr(_self_, _9794_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1a79808d8_AssignLeft> _10038_l = _1a640c7a6_buildAssignL(_self_, &(_97515_part));;
				(*(_10038_l))._field_Mutable=_9768_isMut;
				(*_10038_l.alloc)._field_Reference=_9778_isRef;
				{ jule::Slice<jule::Ptr<_1a79808d8_AssignLeft>> &__jule_push_dest = (*((*(_96759_assign))))._field_Left; __jule_push_dest.push(_10038_l); };
			}
			_iter_next_1ac905b11:;
			++it;
			goto _iter_begin_1ac905b11;
		}
		_iter_end_1ac905b11:;
	};
	return true;;
}



inline __jule_tuple_x_1a7980e6b_AssignSt__jule_tuple_bool _1a640d675_buildDeclAssign(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _101235_tokens) {
	__jule_tuple_x_1a7980e6b_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101235_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101235_tokens).mut_slice(1LL);;
	jule::Ptr<_1a795c013_Token> _10187_token = _101235_tokens[0LL];;
	if (((*(_10187_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a7980e6b_AssignSt> _10237_assign = jule::new_ptr<_1a7980e6b_AssignSt>(_1a7980e6b_AssignSt{._field_Declarative=true, });;
	jule::I64 _10277_i = 0LL;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _10287_rang = _1a641e675_range(&(_10277_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101235_tokens));;
	if ((_10287_rang == nullptr)) {
		_1a6403bcb_pushErr(_self_, _10187_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10277_i + 1LL) < _101235_tokens.len())) {
		(*(_10237_assign))._field_Setter=_101235_tokens[_10277_i];
		if (((*((*_10237_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a6403bcb_pushErr(_self_, (*_10237_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_10277_i)++;
		jule::Slice<jule::Ptr<_1a795c013_Token>> _10388_exprTokens = _101235_tokens.slice(_10277_i);;
		(*_10237_assign.alloc)._field_Right=_1a6422128_buildExpr((*(_self_))._field_p, &(_10388_exprTokens));
	};
	jule::Bool _10423_ok = _1a640d334_buildDeclAssign1(_self_, &(_10287_rang), &(_10237_assign));;
	__jule_func_result.__jule_result_arg0 = _10237_assign;
	__jule_func_result.__jule_result_arg1 = _10423_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a7981b2b_StmtData__jule_tuple_bool _1a640d9b6_buildAssignSt(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _104634_tokens) {
	__jule_tuple__1a7981b2b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a641ce7b_checkAssignTokens(_104634_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104634_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac91523b:;
			{
				({
					__jule_tuple_x_1a7980e6b_AssignSt__jule_tuple_bool __jule_assign_result = _1a640d675_buildDeclAssign(_self_, (*(_104634_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ac9143b1:;
			{
				({
					__jule_tuple__1a7981b2b_StmtData__jule_tuple_bool __jule_assign_result = _1a640ce38_buildPlainAssign(_self_, _104634_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ac914856:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a79771c6_UseExpr> _1a640dd07_buildUseExpr(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _105933_tokens) {
	if (((*(_105933_tokens)).len() == 1LL)) {
		_1a6403bcb_pushErr(_self_, (*(_105933_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a79771c6_UseExpr> _10647_ue = jule::new_ptr<_1a79771c6_UseExpr>(_1a79771c6_UseExpr{._field_Token=(*(_105933_tokens))[0LL], });;
	((*(_105933_tokens))).mut_slice(1LL);;
	(*(_10647_ue))._field_Expr=_1a6422128_buildExpr((*(_self_))._field_p, _105933_tokens);
	return _10647_ue;;
}



inline jule::Any _1a640e148_buildConstSt(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _107233_st) {
	if (((*((*(_107233_st))))._field_tokens.len() == 1LL)) {
		_1a6403bcb_pushErr(_self_, (*((*(_107233_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107233_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac9195a3:;
			{
				((*((*(_107233_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7985e82_Iter> _10808_iter = _1a6407cce_buildIterSt(_self_, _107233_st);;
				if ((_10808_iter != nullptr)) {
					(*_10808_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10808_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac9193c7:;
			{
				((*((*(_107233_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a7989caa_MatchCase> _10878_mt = _1a640b651_buildMatchCase(_self_, (*((*(_107233_st))))._field_tokens);;
				if ((_10878_mt != nullptr)) {
					(*_10878_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10878_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1ac917e0e:;
			{
				return jule::Any(_1a6404cba_buildVarSt(_self_, &((*((*(_107233_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1ac918e10:;
	};
}



inline jule::Any _1a640e489_buildSt(_1a6402944_scopeParser* _self_, jule::Ptr<_1a64020a3_stmt>* _109728_st) {
	jule::Ptr<_1a795c013_Token> _10987_token = (*((*(_109728_st))))._field_tokens[0LL];;
	if (((*(_10987_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11008_s;
		jule::Bool _110011_ok;
		({
			__jule_tuple__1a7981b2b_StmtData__jule_tuple_bool __jule_assign_result = _1a640c124_buildIdSt(_self_, &((*((*(_109728_st))))._field_tokens));
			_11008_s = __jule_assign_result.__jule_result_arg0;
			_110011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110011_ok) {
			return _11008_s;;
		};
	};
	jule::Any _11067_s;
	jule::Bool _110610_ok;
	({
		__jule_tuple__1a7981b2b_StmtData__jule_tuple_bool __jule_assign_result = _1a640d9b6_buildAssignSt(_self_, &((*((*(_109728_st))))._field_tokens));
		_11067_s = __jule_assign_result.__jule_result_arg0;
		_110610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110610_ok) {
		return _11067_s;;
	};
	{
		auto &_match_expr{ (*(_10987_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac92017a:;
			{
				return jule::Any(_1a640dd07_buildUseExpr(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ac920620:;
			{
				return _1a640e148_buildConstSt(_self_, _109728_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ac920686:;
			{
				return jule::Any(_1a6404cba_buildVarSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ac9206ec:;
			{
				return jule::Any(_1a640510b_buildRetSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac920763:;
			{
				return jule::Any(_1a6407cce_buildIterSt(_self_, _109728_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac9207da:;
			{
				return jule::Any(_1a6408120_buildBreakSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ac920862:;
			{
				return jule::Any(_1a6408461_buildContSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ac9208d9:;
			{
				return jule::Any(_1a6408e34_buildIfElseChain(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ac920961:;
			{
				return jule::Any(_1a6409275_buildCoCallSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1ac9209d8:;
			{
				return jule::Any(_1a64095b6_buildGotoSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1ac920a60:;
			{
				return jule::Any(_1a6409907_buildFallSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac920ad7:;
			{
				return jule::Any(_1a6409c48_buildTypeAliasSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac920b5e:;
			{
				return jule::Any(_1a640b651_buildMatchCase(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac920bd6:;
			{
				if (((*((*(_109728_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1ac920466;
				};
				if ((((*((*((*(_109728_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109728_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1a640b992_buildScopeSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type50);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac920c5d:;
			{
				return jule::Any(_1a640b992_buildScopeSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac920cd5:;
			{
				return jule::Any(_1a640b992_buildScopeSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		_match_end_1ac920466:;
	};
	jule::Ptr<_1a7976802_Expr> _11537_expr = _1a6422128_buildExpr((*(_self_))._field_p, &((*((*(_109728_st))))._field_tokens));;
	if ((_11537_expr != nullptr)) {
		return jule::Any(_11537_expr, &__jule_any_type51);;
	};
	_1a6403bcb_pushErr(_self_, _10987_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1a640e7ec_build(_1a6402944_scopeParser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _116126_tokens, jule::Ptr<_1a79824de_ScopeTree>* _116149_s) {
	if (((*(_116149_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a640245a_splitStmts(_116126_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116149_s));
	while (((!(_1a6403868_isLastSt(_self_))) && (!(_1a64035d2_finished(_self_))))) {
		{
			jule::Ptr<_1a64020a3_stmt> _11698_st = _1a640457d_next(_self_);;
			jule::Any _11708_data = _1a640e489_buildSt(_self_, &(_11698_st));;
			if ((_11708_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1a7981d7e_Stmt>::make({_1a7981d7e_Stmt{._field_Token=(*(_11698_st))._field_tokens[0LL], ._field_Data=_11708_data}}));
			};
			if (_1a640334b_stopped(_self_)) {
				goto _iter_end_1ac92d045;
			};
		}
	_iter_next_1ac92d045:;
	}
	_iter_end_1ac92d045:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6402944_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a6410b50_pushErr(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1a6421974_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1a6410eb3_pushSuggestion(_1a6410369_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1a6421cd7_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1a79773e6_TupleExpr> _1a6411304_buildTuple(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _5431_parts) {
	jule::Ptr<_1a79773e6_TupleExpr> _557_tuple = jule::new_ptr<_1a79773e6_TupleExpr>(_1a79773e6_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a7976802_Expr>>::alloc(0LL, (*(_5431_parts)).len())});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd6d72d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1a7976802_Expr>>::make({_1a641a6e8_buildFromTokens(_self_, _5815_part)}));
			}
			_iter_next_1abd6d72d:;
			++it;
			goto _iter_begin_1abd6d72d;
		}
		_iter_end_1abd6d72d:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1a797778c_LitExpr> _1a6411645_buildLit(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token> _6424_token) {
	return jule::new_ptr<_1a797778c_LitExpr>(_1a797778c_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1a6411cc7_buildSingle(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1abd706b9:;
			{
				return jule::Any(_1a6411645_buildLit(_self_, _7531_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1abd70741:;
			{
				return jule::Any(jule::new_ptr<_1a7978c88_VariadicExpr>(_1a7978c88_VariadicExpr{._field_Token=_7531_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1abd707a7:;
			{
				return jule::Any(_1a641bad4_buildIdentExpr(&(_7531_token)), &__jule_any_type79);;
			}
		}
		_match_end_1abd7060e:;
	};
	_1a6410b50_pushErr(_self_, _7531_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a797811c_IdentExpr> _1a6412118_buildBindIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a6410b50_pushErr(_self_, (*(_9235_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a795c013_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6410b50_pushErr(_self_, (*(_9235_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a797811c_IdentExpr> _1067_expr = _1a641bad4_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1a79788ae_UnaryExpr> _1a6412459_buildUnary(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _11130_tokens) {
	jule::Ptr<_1a795c013_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1a6410b50_pushErr(_self_, _1127_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a795c750_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1a6410b50_pushErr(_self_, _1127_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a79788ae_UnaryExpr>(_1a79788ae_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1a641a6e8_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1a7979915_SubIdentExpr> _1a641279a_buildObjSubIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1a795c013_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, _1347_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7979915_SubIdentExpr>(_1a7979915_SubIdentExpr{._field_Expr=_1a641a6e8_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1a797953b_NsSelectionExpr> _1a6412adb_buildNsSubIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _14736_tokens) {
	jule::Ptr<_1a797953b_NsSelectionExpr> _1487_ns = jule::new_ptr<_1a797953b_NsSelectionExpr>();;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abd7bce1:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1a795c013_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1a6410b50_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1a795c013_Token>>::make({_15416_token}));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1a6410b50_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1abd7bce1:;
				++it;
				_1549_i++;
				goto _iter_begin_1abd7bce1;
			}
			_iter_end_1abd7bce1:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6412e2c_buildType(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1a79724bd_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1a6410b50_pushErr(_self_, (*(_17230_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1a6410b50_pushErr(_self_, (*(_17230_tokens))[_1737_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1a641326d_buildSubIdent(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1a795c013_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1abd84d1b:;
			{
				return jule::Any(_1a641279a_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1abd85426:;
			{
				return jule::Any(_1a6412adb_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1abd8548c:;
			{
				return jule::Any(_1a6412e2c_buildType(_self_, _18634_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1abd850a2:;
	};
	if (_1a641c277_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1a6412e2c_buildType(_self_, _18634_tokens), &__jule_any_type89);;
	};
	_1a6410b50_pushErr(_self_, _1883_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a7978c88_VariadicExpr> _1a64135ae_buildVariadic(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _20833_tokens) {
	jule::Ptr<_1a795c013_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1a7978c88_VariadicExpr>(_1a7978c88_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1a641a6e8_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1a7976abb_RangeExpr> _1a6413900_buildBetweenParentheses(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1a6410b50_pushErr(_self_, _21743_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1a7976abb_RangeExpr>(_1a7976abb_RangeExpr{._field_Expr=_1a641a6e8_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1a7979162_CastExpr> _1a6413c41_tryBuildCast(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd8ab35:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abd8b62a:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1abd8ab35;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abd8ba04:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1abd8b916:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1abd8ab35;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a795c013_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1a795c013_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a795c013_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a7979162_CastExpr> _2638_cast = jule::new_ptr<_1a7979162_CastExpr>(_1a7979162_CastExpr{});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1a6410b50_pushErr(_self_, _2518_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1a6410b50_pushErr(_self_, _2508_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1a79724bd_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1a6410b50_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1a641e675_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1a641a6e8_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1abd8ab35:;
			++it;
			_2317_i++;
			goto _iter_begin_1abd8ab35;
		}
		_iter_end_1abd8ab35:;
	};
	return nullptr;;
}



inline void _1a641415e_pushArg(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a7976802_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1a795c013_Token>> _30347_tokens, jule::Ptr<_1a795c013_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, _30365_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a7976802_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1a641a6e8_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a7976802_Expr>> _1a64144a0_buildArgs(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd99319:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1abd99b22:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1abd99eeb:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1abd99e0d:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1abd99319;
				};
				_1a641415e_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1abd99319:;
			++it;
			_3227_i++;
			goto _iter_begin_1abd99319;
		}
		_iter_end_1abd99319:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1a641415e_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1a641415e_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1a797a52b_FnCallExpr> _1a6414c97_buildFnCall(_1a6410369_exprBuilder* _self_, jule::Ptr<_1a795c013_Token>* _37832_token, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37873_args) {
	return jule::new_ptr<_1a797a52b_FnCallExpr>(_1a797a52b_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1a641a6e8_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1a64144a0_buildArgs(_self_, (*(_37873_args))), });;
}



inline jule::Any _1a64150d8_buildParenthesesRange(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _38642_tokens) {
	jule::Ptr<_1a795c013_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a7979162_CastExpr> _3898_expr = _1a6413c41_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_assign_result = _1a641e93e_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1a6413900_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type101);;
	};
	if (_1a641c277_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1a6412e2c_buildType(_self_, _38642_tokens), &__jule_any_type89);;
	};
	return jule::Any(_1a6414c97_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1a7977b66_UnsafeExpr> _1a6415429_buildUnsafeExpr(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _40835_tokens) {
	jule::Ptr<_1a795c013_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _4127_rangeTokens = _1a641e675_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, _40835_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7977b66_UnsafeExpr>(_1a7977b66_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1a641a6e8_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1a798417d_FnDecl> _1a641576a_buildAnonFn(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _42332_tokens) {
	jule::Ptr<_1a798417d_FnDecl> _4247_f = _1a6427b12_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1a79844e1_IsAnon(_4247_f.ptr())))) {
		_1a6410b50_pushErr(_self_, (*_4247_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1a6415aab_buildUnsafe(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac9bca96:;
			{
				return jule::Any(_1a641576a_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ac9bbe5d:;
			{
				return jule::Any(_1a6415429_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1ac9bc39d:;
	};
}



inline void _1a6415ec9_pushRangeLitPart(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _44236_part, jule::Ptr<_1a795c013_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, _4433_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a641631a_getBraceRangeLitExprParts(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c14d4:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac9c1cdc:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac9c21b6:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1ac9c20c8:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ac9c14d4;
				};
				_1a6415ec9_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1ac9c14d4:;
			++it;
			_4647_i++;
			goto _iter_begin_1ac9c14d4;
		}
		_iter_end_1ac9c14d4:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1a6415ec9_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1a6415ec9_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1a797b021_FieldExprPair> _1a641665b_buildFieldExprPair(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1a6410b50_pushErr(_self_, _49538_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a797b021_FieldExprPair> _5007_pair = jule::new_ptr<_1a797b021_FieldExprPair>(_1a797b021_FieldExprPair{._field_Field=_49538_tokens[0LL], });;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1a641a6e8_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1a7976802_Expr> _1a641699c_buildStructLitExpr(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _50839_tokens) {
	jule::Ptr<_1a795c013_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a7976802_Expr>(_1a7976802_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a641665b_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type77)});;
		};
	};
	return _1a641a6e8_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a7976802_Expr>> _1a6416cdd_buildStructLitExprs(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _5247_parts = _1a641631a_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7976802_Expr>> _5297_pairs = jule::Slice<jule::Ptr<_1a7976802_Expr>>::alloc(0LL, _5247_parts.len());;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ca9d8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7976802_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1a641699c_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1ac9ca9d8:;
			++it;
			goto _iter_begin_1ac9ca9d8;
		}
		_iter_end_1ac9ca9d8:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1a797b84b_StructLit> _1a641712e_buildTypedStructLiteral(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1a79724bd_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1a6410b50_pushErr(_self_, _53643_tokens[_5377_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1a795c013_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a6410b50_pushErr(_self_, _5473_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a797b84b_StructLit>(_1a797b84b_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1a6416cdd_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1a7976802_Expr> _1a6417470_buildBraceLitPart(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _56114_r;
	({
		__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_assign_result = _1a641b551_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1a7976802_Expr>(_1a7976802_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a797c62c_KeyValPair>(_1a797c62c_KeyValPair{._field_Key=_1a641a6e8_buildFromTokens(_self_, _5617_l), ._field_Val=_1a641a6e8_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type78)});;
	};
	return _1a641a6e8_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1a797bd02_BraceLit> _1a64177b1_buildBraceLit(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _57734_tokens) {
	jule::Ptr<_1a797bd02_BraceLit> _5787_lit = jule::new_ptr<_1a797bd02_BraceLit>(_1a797bd02_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _5837_parts = _1a641631a_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=jule::Slice<jule::Ptr<_1a7976802_Expr>>::alloc(0LL, _5837_parts.len());
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d5372:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a7976802_Expr>>::make({_1a6417470_buildBraceLitPart(_self_, &(_58915_part))}));
			}
			_iter_next_1ac9d5372:;
			++it;
			goto _iter_begin_1ac9d5372;
		}
		_iter_end_1ac9d5372:;
	};
	return _5787_lit;;
}



inline jule::Any _1a6417b02_buildBraceRange(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1a795c013_Token__jule_tuple_int __jule_assign_result = _1a641bd9d_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1ac9d6e9a:;
			{
				return jule::Any(_1a64177b1_buildBraceLit(_self_, _59636_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1ac9d7044:;
			{
				_1a6410b50_pushErr(_self_, (*(_59636_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac9d6e12:;
	};
	jule::Ptr<_1a795c013_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1a641a066_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1ac9da773:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1a795c013_Token>> _6199_rangeTokens = _1a641e675_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1a797a52b_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1a797a52b_FnCallExpr>();;
					if (_1a797ab36_Ignored(_6209_model.ptr())) {
						_1a6410b50_pushErr(_self_, _6083_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1a6422b1d_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1ac9d9ca0:;
				{
					_1a6410b50_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ac9d9c4a:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac9de8cb:;
			{
				return _1a6415aab_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac9de942:;
			{
				return jule::Any(_1a641576a_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac9de9a8:;
			{
				return jule::Any(_1a641712e_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1ac9d9d16:;
			{
				_1a6410b50_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac9ddd4d:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a6417e43_getEnumerableParts(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _6507_parts;
	jule::Slice<_1d974c80a_Log> _65014_errors;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1a797cd58_SliceExpr> _1a6418284_buildSlice(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _65530_tokens) {
	jule::Ptr<_1a797cd58_SliceExpr> _6567_slc = jule::new_ptr<_1a797cd58_SliceExpr>(_1a797cd58_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _6617_parts = _1a6417e43_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=jule::Slice<jule::Ptr<_1a7976802_Expr>>::alloc(0LL, _6617_parts.len());
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e48ae:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1ac9e48ae;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a7976802_Expr>>::make({_1a641a6e8_buildFromTokens(_self_, _66715_p)}));
			}
			_iter_next_1ac9e48ae:;
			++it;
			goto _iter_begin_1ac9e48ae;
		}
		_iter_end_1ac9e48ae:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1a797d7b5_IndexingExpr> _1a641873a_buildIndexing(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1a795c013_Token>> _6787_tokens, jule::Ptr<_1a795c013_Token> _67829_errorToken) {
	jule::Ptr<_1a795c013_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, _67829_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7976802_Expr> _6857_expr = _1a641a6e8_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7976802_Expr> _6897_index = _1a641a6e8_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a797d7b5_IndexingExpr>(_1a797d7b5_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1a797de25_SlicingExpr> _1a6418d56_buildSlicing(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1a795c013_Token>>* _70160_start, jule::Slice<jule::Ptr<_1a795c013_Token>>* _7028_to, jule::Ptr<_1a795c013_Token>* _70227_errorToken, jule::Ptr<_1a795c013_Token> _70251_end) {
	jule::Ptr<_1a797de25_SlicingExpr> _7037_slc = jule::new_ptr<_1a797de25_SlicingExpr>(_1a797de25_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1a641a6e8_buildFromTokens(_self_, (*(_70133_exprTokens))), });;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1a641a6e8_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1a641a6e8_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1a6419197_buildBracketRange(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _71737_tokens) {
	jule::Ptr<_1a795c013_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1a795c013_Token__jule_tuple_int __jule_assign_result = _1a641bd9d_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1a6418284_buildSlice(_self_, _71737_tokens), &__jule_any_type94);;
	} else if ((_71919_rangeN > 0LL)) {
		_1a6410b50_pushErr(_self_, _7187_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _73518_to;
	({
		__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_assign_result = _1a641b551_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1a6418d56_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1a641873a_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type104);;
}



inline jule::Any _1a64194d8_buildExclRight(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _74235_tokens) {
	jule::Ptr<_1a795c013_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1a641a066_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1aca02988:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1a797a52b_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a79824de_ScopeTree>(_1a79824de_ScopeTree{._field_Deferred=true, });
				return _7457_d;;
			}
		}
		_match_end_1aca02933:;
	};
	_1a6410b50_pushErr(_self_, _7433_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a6419829_buildData(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aca040d8:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aca04160:;
			{
				return _1a6411cc7_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aca041c6:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a6412118_buildBindIdent(_self_, _76030_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1aca03e40:;
	};
	jule::Ptr<_1a795c013_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a64135ae_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type75);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1a795c750_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a6412e2c_buildType(_self_, _76030_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1a6412459_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type88);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1aca08b8c:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1a795c013_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1aca08ae3;
						};
					};
					jule::Ptr<_1a795c013_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1aca08ae3;
					};
					return jule::Any(_1a6412e2c_buildType(_self_, _76030_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1aca08ae3:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aca0bd49:;
			{
				return _1a641326d_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1aca0bdc1:;
			{
				return _1a64194d8_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aca0be37:;
			{
				return _1a64150d8_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aca0be9d:;
			{
				return _1a6417b02_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aca0c014:;
			{
				return _1a6419197_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1aca0bce4:;
	};
	_1a6410b50_pushErr(_self_, _7727_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a6419c25_buildBinary(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1a795c013_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1a641aab1_isTypeOp(&((*(_8307_op))._field_Id)) && _1a641adbe_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1a6412e2c_buildType(_self_, _82932_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1a6410b50_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6410eb3_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a7979dbb_BinaryExpr>(_1a7979dbb_BinaryExpr{._field_Left=_1a641a6e8_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1a641a6e8_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type109);;
}



inline jule::Any _1a641a066_build(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a6412e2c_buildType(_self_, _85426_tokens), &__jule_any_type89);;
	};
	jule::I64 _8583_i = _1a641b81a_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1a6419829_buildData(_self_, _85426_tokens);;
	};
	return _1a6419c25_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1a641a3a7_buildKind(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _8667_parts;
	jule::Slice<_1d974c80a_Log> _86614_errors;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1a6411304_buildTuple(_self_, &(_8667_parts)), &__jule_any_type80);;
	};
	return _1a641a066_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1a7976802_Expr> _1a641a6e8_buildFromTokens(_1a6410369_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1a641a3a7_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7976802_Expr>(_1a7976802_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6410369_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a641cac4_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a64212c0_stop(_1a6420ec3_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a6421556_stopped(_1a6420ec3_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a6421974_pushErr(_1a6420ec3_parser* _self_, jule::Ptr<_1a795c013_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_1d974c80a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a64205aa_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1a6421cd7_pushSuggestion(_1a6420ec3_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1a6420951_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1a7976802_Expr> _1a6422128_buildExpr(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _21731_tokens) {
	return _1a641a6e8_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1a79718da_Directive> _1a6422469_buildDirective(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1a6421974_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1a6421974_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a79718da_Directive>(_1a79718da_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1a6422722_pushDirective(_1a6420ec3_parser* _self_, jule::Ptr<_1a79718da_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca38c77:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1aca38c77:;
			++it;
			goto _iter_begin_1aca38c77;
		}
		_iter_end_1aca38c77:;
	};
	{ jule::Slice<jule::Ptr<_1a79718da_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1a79824de_ScopeTree> _1a6422b1d_buildScope(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _24932_tokens, jule::Ptr<_1a795c013_Token> _24954_end) {
	jule::Ptr<_1a79824de_ScopeTree> _2507_s = _1a6400d2c_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1a6402944_scopeParser _2527_sp = _1a6402944_scopeParser{._field_p=_self_, };;
	_1a640e7ec_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool _1a64230c4__buildType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a64330e5_typeBuilder _2617_tb = _1a64330e5_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1a64360c6_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool _1a642357a_buildType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a795c013_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1a79724bd_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a64230c4__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1a6421974_pushErr(_self_, _2733_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a7988eda_TypeAliasDecl> _1a64238bb_buildTypeAliasDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a6421974_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7988eda_TypeAliasDecl> _2877_tad = jule::new_ptr<_1a7988eda_TypeAliasDecl>(_1a7988eda_TypeAliasDecl{._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1a795c013_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_, _2917_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a6421974_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1a79724bd_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1a6421974_pushErr(_self_, (*(_28140_tokens))[_2827_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1a68348d1_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1a6423c2e_buildVarTypeAndExpr(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7985338_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1a795c013_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1a795c013_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a6421974_pushErr(_self_.ptr(), _3237_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a79724bd_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a6421974_pushErr(_self_, _3237_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1a6421974_pushErr(_self_, _3237_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1a6422128_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1a6424092_buildVarCommon(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7985338_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1a795c013_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1a68348d1_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1a6423c2e_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1a6424405_buildVarBegin(_1a6420ec3_parser* _self_, jule::Ptr<_1a7985338_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1a795c013_Token>>* _37052_tokens) {
	jule::Ptr<_1a795c013_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aca54941:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1aca545bc;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aca545bc:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1a6421974_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aca542ae:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1aca53e7e:;
			{
				(*(_37052_tokens))=nullptr;
				_1a6421974_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aca54259:;
	};
}



inline jule::Ptr<_1a7985338_VarDecl> _1a6424746_buildVar(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _39829_tokens) {
	jule::Ptr<_1a7985338_VarDecl> _3997_v = jule::new_ptr<_1a7985338_VarDecl>(_1a7985338_VarDecl{._field_Token=_39829_tokens[0LL], });;
	_1a6424405_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1a6424092_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1a797e6c8_GenericDecl> _1a6424a87_buildGeneric(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _41734_tokens) {
	jule::Ptr<_1a797e6c8_GenericDecl> _4187_g = jule::new_ptr<_1a797e6c8_GenericDecl>(_1a797e6c8_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], });;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a6421974_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1a6421974_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a795c013_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _4368_parts;
		jule::Slice<_1d974c80a_Log> _43615_errors;
		({
			__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1a797e222_Constraint>(_1a797e222_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::alloc(0LL, _4368_parts.len())});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca61dc1:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a795c013_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1a79724bd_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::make({_4449_kind}));
					if ((_4439_i < _44216_part.len())) {
						_1a6421974_pushErr(_self_, _44216_part[_4439_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1aca61dc1:;
				++it;
				goto _iter_begin_1aca61dc1;
			}
			_iter_end_1aca61dc1:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _1a6424e83_buildGenerics(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _45435_tokens, jule::Ptr<_1a795c013_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1a6421974_pushErr(_self_.ptr(), (*(_45454_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _4607_parts;
	jule::Slice<_1d974c80a_Log> _46014_errors;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> _4667_generics = jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>::alloc(0LL, _4607_parts.len());;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca66ea3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1a6424a87_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1aca66ea3:;
			++it;
			goto _iter_begin_1aca66ea3;
		}
		_iter_end_1aca66ea3:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1a7982c2b_ParamDecl> _1a64252c4_buildSelfParam(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a7982c2b_ParamDecl> _4797_param = jule::new_ptr<_1a7982c2b_ParamDecl>();;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1a6421974_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_200880c8a_StrBuilder _4917_ident = static__2008811b9_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_20088172a_WriteStr(&_4917_ident, jule::Str::lit("&", 1));
		if ((_47434_tokens.len() == 1LL)) {
			_1a6421974_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_20088172a_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1a6421974_pushErr(_self_, _47434_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_200882022_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1a64256e2_paramTypeBegin(_1a6420ec3_parser* _self_, jule::Ptr<_1a7982c2b_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1a795c013_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1a795c013_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1a6421974_pushErr(_self_, _5164_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1aca6e3d9;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1aca6e3d9:;
	}
	_iter_end_1aca6e3d9:;;
}



inline void _1a6425a55_buildParamType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7982c2b_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1a795c013_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1a64256e2_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_52960_tokens))[_5307_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a6425db8_buildParamBody(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7982c2b_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1a795c013_Token>> _54259_tokens) {
	jule::Ptr<_1a795c013_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1a6421974_pushErr(_self_.ptr(), _5437_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a6425a55_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1a6425a55_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1a7982c2b_ParamDecl> _1a6426209_buildParam(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _56231_tokens) {
	jule::Ptr<_1a7982c2b_ParamDecl> _5637_param = jule::new_ptr<_1a7982c2b_ParamDecl>(_1a7982c2b_ParamDecl{._field_Token=_56231_tokens[0LL], });;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1a6421974_pushErr(_self_.ptr(), _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1a6421974_pushErr(_self_, _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a6425a55_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1a6425db8_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1a64264b2_checkParams(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca7e3e9:;
		if (it != expr_end) {
			jule::Ptr<_1a7982c2b_ParamDecl> _60615_param = *it;
			{
				if ((_1a79830a0_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1aca7e3e9;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1a6421974_pushErr(_self_, (*_60615_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type74)});
					(*_60615_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1aca7e3e9:;
			++it;
			goto _iter_begin_1aca7e3e9;
		}
		_iter_end_1aca7e3e9:;
	};
}



inline jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>> _1a64268ad_buildParams(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _6267_parts;
	jule::Slice<_1d974c80a_Log> _62614_errs;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1a7982c2b_ParamDecl> _6348_param = _1a64252c4_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1a79830a0_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca85c19:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1aca85c19;
				};
				jule::Ptr<_1a7982c2b_ParamDecl> _6458_param = _1a6426209_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1aca85c19:;
			++it;
			goto _iter_begin_1aca85c19;
		}
		_iter_end_1aca85c19:;
	};
	_1a64264b2_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool _1a6426ca9_buildMultiRetType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a79753b1_RetTypeDecl>();
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _6657_rangeTokens = _1a641e675_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _6677_parts;
	jule::Slice<_1d974c80a_Log> _66714_errs;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _6737_types = jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::alloc(0LL, _6677_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1a795c013_Token>>::alloc(0LL, _6677_parts.len());
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8baee:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1aca8baee;
				};
				jule::Ptr<_1a795c013_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1a6421974_pushErr(_self_, _6798_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1aca8baee;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1a795c013_Token> _6969_newToken = jule::new_ptr<_1a795c013_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a795c013_Token>>::make({_6969_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a795c013_Token>>::make({_6798_token}));
				};
				jule::Ptr<_1a79724bd_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1a6421974_pushErr(_self_, _67515_part[_6808_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1aca8baee:;
			++it;
			goto _iter_begin_1aca8baee;
		}
		_iter_end_1aca8baee:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a7973bea_TupleTypeDecl>(_1a7973bea_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type73)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool _1a64271a5_buildRetType(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a79753b1_RetTypeDecl>();
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a795c013_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aca959b5:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1aca95a3c:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1aca95aa3:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1a6421974_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aca96cc4:;
						{
							({
								__jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a6426ca9_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aca979a6:;
						{
							_1a6421974_pushErr(_self_, _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1aca9791d:;
				};
				({
					__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1aca95960:;
	};
	((*(_72657_i)))++;
	_1a6421974_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a798417d_FnDecl> _1a642765b_buildFnPrototype(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1a798417d_FnDecl> _7667_f = jule::new_ptr<_1a798417d_FnDecl>(_1a798417d_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], });;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a6421974_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a6421974_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a795c013_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a6421974_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1a795c013_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8127_genericsTokens = _1a641e675_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1a6424e83_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a6421974_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8227_paramsToks = _1a641e675_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1a64268ad_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1a795c013_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1a68348d1_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a79753b1_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a64271a5_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1a798417d_FnDecl> _1a6427b12_buildFn(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1a798417d_FnDecl> _8447_f = _1a642765b_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a6421974_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, (*(_8447_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8607_blockTokens = _1a641e675_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1a6422b1d_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a6421974_pushErr(_self_, (*(_84229_tokens))[_8437_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, (*_8447_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1a795c013_Token>> _1a6427e53_getUseDeclSelectors(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1a641e675_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _8797_parts;
	jule::Slice<_1d974c80a_Log> _87914_errs;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _8857_selectors = jule::Slice<jule::Ptr<_1a795c013_Token>>::alloc(0LL, _8797_parts.len());;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acab101e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1a6421974_pushErr(_self_, _88615_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a795c013_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a6421974_pushErr(_self_, _8908_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1acab101e;
				};
				{ jule::Slice<jule::Ptr<_1a795c013_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1acab101e:;
			++it;
			goto _iter_begin_1acab101e;
		}
		_iter_end_1acab101e:;
	};
	return _8857_selectors;;
}



inline void _1a64282b6_buildBindUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1a795c013_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1a6421974_pushErr(_self_, (*(_90154_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a795c013_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1a6421974_pushErr(_self_, _9053_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1a6428607_useDeclTokstoa(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acab8565:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1a6421974_pushErr(_self_, (*(_91610_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1acab8565:;
			++it;
			goto _iter_begin_1acab8565;
		}
		_iter_end_1acab8565:;
	};
	_200880c8a_StrBuilder _9227_s = static__2008811b9_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acab8411:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_92310_token = it;
			{
				_20088172a_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1acab8411:;
			++it;
			goto _iter_begin_1acab8411;
		}
		_iter_end_1acab8411:;
	};
	return _200882022_Str(&_9227_s);;
}



inline void _1a642896a_buildStdUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1a795c013_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1a795c013_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1acabd01a:;
			{
				_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1acabd092:;
			{
				jule::Slice<jule::Ptr<_1a795c013_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_assign_result = _1a641e93e_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1a6427e53_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acabd108:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1acabceb5:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1a6428607_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1a6428ccd_buildIdentUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1a795c013_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1a795c013_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1acac6ad4:;
			{
				_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1acac7a3b:;
			{
				jule::Slice<jule::Ptr<_1a795c013_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_assign_result = _1a641e93e_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1a6427e53_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acac7aa2:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a6421974_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1acac791a:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1a6428607_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1a6429141_parseUseDecl(_1a6420ec3_parser* _self_, jule::Ptr<_1a798a5c4_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1a795c013_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1a64282b6_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1a795c013_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a6421974_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1acad4c13:;
			{
				_1a642896a_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1acad485b:;
			{
				_1a6428ccd_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1acad47e5:;
	};
}



inline jule::Ptr<_1a798a5c4_UseDecl> _1a642953c_buildUseDecl(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1a798a5c4_UseDecl> _10707_decl = jule::new_ptr<_1a798a5c4_UseDecl>(_1a798a5c4_UseDecl{._field_Token=_106932_tokens[0LL], ._field_Binded=_106950_binded, });;
	if ((_106932_tokens.len() < 2LL)) {
		_1a6421974_pushErr(_self_, (*(_10707_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1a6429141_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6429938_buildTypeEnumItemKind(jule::Ptr<_1a6420ec3_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1a795c013_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1a795c013_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1acad8c5b:;
					{
						(_10847_braceN)++;
						goto _iter_next_1acad81de;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1acad9069:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1acad9014:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1acad81de;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a795c013_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1a79724bd_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1a6421974_pushErr(_self_, _110313_kindTokens[_11099_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1acad81de:;
	}
	_iter_end_1acad81de:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>> _1a6429c79_buildTypeEnumItems(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>> _11217_items = jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1a795c013_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1a798be66_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1a798be66_TypeEnumItemDecl>();;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a6421974_pushErr(_self_.ptr(), _11248_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1acadddd7;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1a6429938_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1acadddd7:;
	}
	_iter_end_1acadddd7:;;
	return _11217_items;;
}



inline jule::Ptr<_1a798c5c6_TypeEnumDecl> _1a642a0ba_buildTypeEnumDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1a798c5c6_TypeEnumDecl> _11467_e = jule::new_ptr<_1a798c5c6_TypeEnumDecl>(_1a798c5c6_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], });;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _11567_itemTokens = _1a641e675_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, (*_11467_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_114439_tokens))[_11457_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1a68348d1_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1a6429c79_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1a7976802_Expr> _1a642a4b6_buildEnumItemExpr(jule::Ptr<_1a6420ec3_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1a795c013_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1a795c013_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1acaebb09:;
					{
						(_11727_braceN)++;
						goto _iter_next_1acaeb08c;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1acaebe17:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1acaebdb2:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1acaeb08c;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a795c013_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1a6422128_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1acaeb08c:;
	}
	_iter_end_1acaeb08c:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>> _1a642a807_buildEnumItems(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>> _12047_items = jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1a795c013_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1a798aa7a_EnumItemDecl> _12088_item = jule::new_ptr<_1a798aa7a_EnumItemDecl>();;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a6421974_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1acb009a9;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a6421974_pushErr(_self_, _12078_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1acb009a9;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a6421974_pushErr(_self_, _12078_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1acb009a9;
			};
			(*_12088_item.alloc)._field_Expr=_1a642a4b6_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1acb009a9:;
	}
	_iter_end_1acb009a9:;;
	return _12047_items;;
}



inline jule::Ptr<_1a798b63b_EnumDecl> _1a642ab48_buildEnumDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1a6421974_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a798b63b_EnumDecl> _12457_e = jule::new_ptr<_1a798b63b_EnumDecl>(_1a798b63b_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], });;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a6421974_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a64212c0_stop(_self_);
			_1a6421974_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _12707_itemTokens = _1a641e675_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_124035_tokens))[_12537_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1a68348d1_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1a642a807_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1a642ae89_buildNodeEnumDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a642a0ba_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a642ab48_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a798c890_FieldDecl> _1a642b2ca_buildField(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _129431_tokens) {
	jule::Ptr<_1a798c890_FieldDecl> _12957_f = jule::new_ptr<_1a798c890_FieldDecl>();;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1a6421974_pushErr(_self_.ptr(), _129431_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_, (*_12957_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1a6421974_pushErr(_self_, _129431_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a6421974_pushErr(_self_, _129431_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1a795c013_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a6421974_pushErr(_self_, _129431_tokens[_13237_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1a6421974_pushErr(_self_, _13264_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1a6422128_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1a68348d1_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1a798c890_FieldDecl>> _1a642b61b_buildStructDeclFields(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1a798c890_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a64020a3_stmt>> _13457_stmts = _1a640245a_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb25bee:;
		if (it != expr_end) {
			jule::Ptr<_1a64020a3_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1a798c890_FieldDecl> _13488_f = _1a642b2ca_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1a798c890_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1acb25bee:;
			++it;
			goto _iter_begin_1acb25bee;
		}
		_iter_end_1acb25bee:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1a798d286_StructDecl> _1a642b95c_buildStructDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1a6421974_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1a798d286_StructDecl> _13617_s = jule::new_ptr<_1a798d286_StructDecl>(_1a798d286_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], });;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a795c013_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _13767_genericsTokens = _1a641e675_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1a6424e83_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _13867_bodyTokens = _1a641e675_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1a68348d1_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1a642b61b_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1a642bc15_checkMethodReceiver(_1a6420ec3_parser* _self_, jule::Ptr<_1a798417d_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1a79830a0_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1a6421974_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1a6421974_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a7982c2b_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1a79830a0_IsSelf(_14143_param.ptr())))) {
		_1a6421974_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a642c078_buildTraitBody(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a798d9c3_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1a795c013_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1a64020a3_stmt>> _14227_stmts = _1a640245a_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb3669e:;
		if (it != expr_end) {
			jule::Ptr<_1a64020a3_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1acb3669e;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1acb3a153:;
						{
							jule::Ptr<_1a798417d_FnDecl> _14309_f = _1a6427b12_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1acb37925;
							};
							_1a642bc15_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1a6421974_pushErr(_self_, (*(_14309_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a798417d_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1acb3722c:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1a79724bd_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1acb37925;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1a6421974_pushErr(_self_, _142155_tokens[_14409_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1acb37925:;
				};
			}
			_iter_next_1acb3669e:;
			++it;
			goto _iter_begin_1acb3669e;
		}
		_iter_end_1acb3669e:;
	};
}



inline jule::Ptr<_1a798d9c3_TraitDecl> _1a642c3b9_buildTraitDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1a6421974_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a798d9c3_TraitDecl> _14587_t = jule::new_ptr<_1a798d9c3_TraitDecl>(_1a798d9c3_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], });;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6421974_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _14677_bodyTokens = _1a641e675_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1a6421974_pushErr(_self_, (*(_145336_tokens))[_14667_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1a68348d1_IsPub((*_14587_t.alloc)._field_Ident);
	_1a642c078_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1a798417d_FnDecl> _1a642c70a_buildBindFn(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1a798417d_FnDecl> _14857_f = _1a6427b12_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1a7985338_VarDecl> _1a642ca4b_buildBindVar(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7985338_VarDecl> _14957_v = _1a6424746_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1a6421974_pushErr(_self_, (*_14957_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1a798d286_StructDecl> _1a642cd8c_buildBindStruct(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1a798d286_StructDecl> _15087_s = _1a642b95c_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb491ea:;
			if (it != expr_end) {
				jule::Ptr<_1a798c890_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1acb491ea:;
				++it;
				goto _iter_begin_1acb491ea;
			}
			_iter_end_1acb491ea:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1a7988eda_TypeAliasDecl> _1a642d1cd_buildBindTypeAlias(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1a7988eda_TypeAliasDecl> _15227_t = _1a64238bb_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1a798a5c4_UseDecl> _1a642d51e_buildBindUse(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1a6421974_pushErr(_self_.ptr(), _153033_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1a642953c_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1a642d860_buildBind(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _154131_tokens) {
	jule::Ptr<_1a795c013_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1a6421974_pushErr(_self_.ptr(), _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1acb4eec0:;
			{
				return jule::Any(_1a642c70a_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1acb50036:;
			{
				return jule::Any(_1a642ca4b_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1acb4eb4b:;
			{
				return jule::Any(_1a642cd8c_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1acb4ebc3:;
			{
				return jule::Any(_1a642d1cd_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1acb4e5da:;
			{
				_1a6421974_pushErr(_self_, _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1acb4ead5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a798417d_FnDecl> _1a642dba1_getMethod(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1a795c013_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a6421974_pushErr(_self_.ptr(), _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a6421974_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a6421974_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a6427b12_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1a642e014_parseImplBody(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a798e133_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1a795c013_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1a64020a3_stmt>> _15957_stmts = _1a640245a_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb579ab:;
		if (it != expr_end) {
			jule::Ptr<_1a64020a3_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1a795c013_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1acb58083:;
						{
							_1a6422722_pushDirective(_self_.ptr(), _1a6422469_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1acb579ab;
						}
					}
					_match_end_1acb58bbb:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1acb59ddc:;
						{
							jule::Ptr<_1a7985338_VarDecl> _16079_v = _1a6424746_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a7985338_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1acb59e53:;
						{
							jule::Ptr<_1a798417d_FnDecl> _16149_f = _1a642dba1_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1a642bc15_checkMethodReceiver(_self_, &(_16149_f));
								_1a642e94e_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1a798417d_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1acb58d0e:;
						{
							_1a6421974_pushErr(_self_, _15988_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1acb579ab;
						}
					}
					_match_end_1acb592c6:;
				};
			}
			_iter_next_1acb579ab:;
			++it;
			goto _iter_begin_1acb579ab;
		}
		_iter_end_1acb579ab:;
	};
}



inline jule::Ptr<_1a798e133_Impl> _1a642e355_buildImpl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _162730_tokens) {
	jule::Ptr<_1a795c013_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1a6421974_pushErr(_self_.ptr(), _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1a79724bd_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a6421974_pushErr(_self_, _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a798e133_Impl> _16457_ipl = jule::new_ptr<_1a798e133_Impl>(_1a798e133_Impl{._field_Base=_16367_base, });;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1acb66a97;
		};
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1acb66a97:;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _16837_bodyTokens = _1a641e675_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1a64212c0_stop(_self_);
		_1a6421974_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1a6421974_pushErr(_self_, _162730_tokens[_16347_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1a642e014_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1a642e696_buildNodeData(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _169835_tokens) {
	jule::Ptr<_1a795c013_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1acb6b948:;
			{
				jule::Ptr<_1a798417d_FnDecl> _17038_f = _1a6427b12_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1acb6c042:;
			{
				return jule::Any(_1a6424746_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1acb6c0a8:;
			{
				return jule::Any(_1a64238bb_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1acb6b55d:;
			{
				return _1a642ae89_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1acb6b5c4:;
			{
				return jule::Any(_1a642b95c_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1acb6b63a:;
			{
				return jule::Any(_1a642c3b9_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1acb6b6a1:;
			{
				return jule::Any(_1a642e355_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1acb6b717:;
			{
				return _1a642d860_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1acb6b272:;
			{
				_1a6421974_pushErr(_self_.ptr(), _16997_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1acb6b508:;
	};
}



inline void _1a642e94e_applyFnMeta(_1a6420ec3_parser* _self_, jule::Ptr<_1a798417d_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a642ec07_applyMeta(_1a6420ec3_parser* _self_, _1a79714bc_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1acb72ed2:;
			{
				jule::Ptr<_1a7985338_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a7985338_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1acb72c4b:;
			{
				jule::Ptr<_1a798417d_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a798417d_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1a642e94e_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1acb7307b:;
			{
				jule::Ptr<_1a798d286_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a798d286_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1acb72e5a:;
	};
}



inline void _1a642eeb0_pushUseDecl(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a798a5c4_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1a798a5c4_UseDecl>>::make({(*(_176133_decl))}));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a6421974_pushErr(_self_, (*((*(_176133_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a6421cd7_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a6430301_pushMetaNodes(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1acb79329:;
			{
				;
				jule::Ptr<_1a798a5c4_UseDecl> _17738_decl = _1a642953c_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1a642eeb0_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1acb793a1:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a798a5c4_UseDecl> _17789_decl = _1a642d51e_buildBindUse(_self_, (*(_176935_tokens)));;
					_1a642eeb0_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1acb79417:;
			{
				_1a6422722_pushDirective(_self_.ptr(), _1a6422469_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1acb7922a:;
	};
	return false;;
}



inline _1a79714bc_Node _1a6430642_parseNode(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _178931_st) {
	_1a79714bc_Node _17907_node = _1a79714bc_Node{._field_Token=(*(_178931_st))[0LL], };;
	if (_1a6430301_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1a642e696_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1a642ec07_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a6421974_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1a64308ea_appendNode(jule::Ptr<_1a6420ec3_parser> _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1a79714bc_Node _18177_node = _1a6430642_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1a6421556_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,jule::Slice<_1a79714bc_Node>::make({_18177_node}));
	};
}



inline void _1a6430dc3_removeRange(_1a6420ec3_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1a795c013_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1a642017b_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1a795c013_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1acb84598;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1acb84598;
		}
	_iter_next_1acb84598:;
	}
	_iter_end_1acb84598:;;
}



inline void _1a64312e1_pushWrongOrderCloseErr(_1a6420ec3_parser* _self_, jule::Ptr<_1a795c013_Token>* _183539_t, jule::Slice<jule::Ptr<_1a795c013_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1acb868a8:;
			{
				_1a6421974_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1acb86930:;
			{
				_1a6421974_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1acb86996:;
			{
				_1a6421974_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1acb867a9:;
	};
}



inline void _1a64317b9_pushRangeClose(_1a6420ec3_parser* _self_, jule::Ptr<_1a795c013_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1a795c013_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1acb8957b:;
				{
					_1a6421974_pushErr(_self_, _184630_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1acb89603:;
				{
					_1a6421974_pushErr(_self_, _184630_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1acb89669:;
				{
					_1a6421974_pushErr(_self_, _184630_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1acb894c1:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1a64312e1_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1a6430dc3_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1a6431a72_checkRanges(_1a6420ec3_parser* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb8b7ae:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1acb8d4e7:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1acb8d580:;
						{
							_1a64317b9_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1acb8d5e6:;
						{
							_1a64317b9_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1acb8d65c:;
						{
							_1a64317b9_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1acb8d43c:;
				};
			}
			_iter_next_1acb8b7ae:;
			++it;
			_18677_i++;
			goto _iter_begin_1acb8b7ae;
		}
		_iter_end_1acb8b7ae:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb8c738:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1a795c013_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1acb914c8:;
						{
							_1a6421974_pushErr(_self_, _18834_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1acb9153e:;
						{
							_1a6421974_pushErr(_self_, _18834_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1acb915a5:;
						{
							_1a6421974_pushErr(_self_, _18834_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1acb91473:;
				};
			}
			_iter_next_1acb8c738:;
			++it;
			goto _iter_begin_1acb8c738;
		}
		_iter_end_1acb8c738:;
	};
}



inline void _1a6431d2a_parse(jule::Ptr<_1a6420ec3_parser> _self_, jule::Ptr<_1a7962799_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a79705a9_Ast>(_1a79705a9_Ast{._field_File=(*(_189527_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a6410369_exprBuilder>(_1a6410369_exprBuilder{._field_p=_self_});
	_1a6431a72_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a64020a3_stmt>> _19087_stmts = _1a640245a_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1a64020a3_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1acb94d4a;
			};
			if ((!(_1d974e565_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1acb94d4a;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1a79718da_Directive>>::make({_1a6422469_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1acb94d4a:;
	}
	_iter_end_1acb94d4a:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1a6421556_stopped(_self_)))); (_19117_i)++) {
		{
			_1a64308ea_appendNode(_self_, &((*(_19087_stmts[_19117_i]))._field_tokens));
		}
	_iter_next_1ac255906:;
	}
	_iter_end_1ac255906:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a6421974_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a6420ec3_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a6433689_pushErr(_1a64330e5_typeBuilder* _self_, jule::Ptr<_1a795c013_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1a6421974_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a64339ec_pushSuggestion(_1a64330e5_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1a6421cd7_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6433c83_buildNamespace(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a79724bd_TypeDecl> _557_t = jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a797326b_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1a797326b_NamespaceTypeDecl>();;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a795c013_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a6433689_pushErr(_self_, _628_token, jule::Str::lit("invalid syntax", 14));
					_1a64339ec_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a795c013_Token>>::make({_628_token}));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ac25ad5c;
			};
			(_607_n)++;
		}
	_iter_next_1ac25ad5c:;
	}
	_iter_end_1ac25ad5c:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1a6434536_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type91);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _1a6434019_buildGenerics(_1a64330e5_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a795c013_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _937_parts = _1a64342a0_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1a6433689_pushErr(_self_, _883_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> _997_types = jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>::alloc(0LL, _937_parts.len());;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac262ea7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1a79724bd_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1a6433689_pushErr(_self_, _10015_part[_1018_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1ac262ea7:;
			++it;
			goto _iter_begin_1ac262ea7;
		}
		_iter_end_1ac262ea7:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a64342a0_identGenerics(_1a64330e5_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a795c013_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ac266d02:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac267110:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1ac2670aa:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ac265e99;
			};
		}
	_iter_next_1ac265e99:;
	}
	_iter_end_1ac265e99:;;
	jule::Slice<jule::Ptr<_1a795c013_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1287_parts;
	jule::Slice<_1d974c80a_Log> _12814_errors;
	({
		__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a641ede5_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6434536_buildIdent(_1a64330e5_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a6433c83_buildNamespace(_self_);;
	};
	jule::Ptr<_1a795c013_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a7972ac8_IdentTypeDecl> _1417_it = jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a79724bd_TypeDecl> _1477_itd = jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type74)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1a6434019_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a6433689_pushErr(_self_, _1407_token, jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6433689_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	jule::Ptr<_1a7972d92_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1a7972d92_SubIdentTypeDecl>();;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a7972ac8_IdentTypeDecl>>::make({_1417_it}));
	jule::Ptr<_1a79724bd_TypeDecl> _1667_ident = _1a6434536_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac272bba:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a7972ac8_IdentTypeDecl>>::make({(*(_1667_ident))._field_Kind.cast_ptr<_1a7972ac8_IdentTypeDecl>(&__jule_any_type74)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac26c2d0:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1a7972d92_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1ac2708dd:;
	};
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a64347bc_buildCppLink(_1a64330e5_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a6433689_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a79724bd_TypeDecl> _1857_t = _1a6434536_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1a7972ac8_IdentTypeDecl>(&__jule_any_type74)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6434a53_buildFn(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a798417d_FnDecl> _1927_f = _1a642765b_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a79844e1_IsAnon(_1927_f.ptr())))) {
		_1a6433689_pushErr(_self_, (*(_1927_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6434cd9_buildPtr(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a6433689_pushErr(_self_, _2067_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7973ee7_PtrTypeDecl>(_1a7973ee7_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type70)});;
	};
	jule::Ptr<_1a79724bd_TypeDecl> _2237_elem = _1a6435d40_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7973ee7_PtrTypeDecl>(_1a7973ee7_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435070_buildSptr(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a6433689_pushErr(_self_, _2377_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a79724bd_TypeDecl> _2447_elem = _1a6435d40_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1a7973568_SptrTypeDecl>(_1a7973568_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435306_buildSlc(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a79724bd_TypeDecl> _2607_elem = _1a6435d40_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1a79738ed_SlcTypeDecl>(_1a79738ed_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type69)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a643558c_buildArr(_1a64330e5_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a795c013_Token>> _2737_exprTokens = _1a641e675_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a6433689_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a79724bd_TypeDecl> _2797_elem = _1a6435d40_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7974789_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1a7974789_ArrTypeDecl>(_1a7974789_ArrTypeDecl{._field_Elem=_2797_elem, });;
	jule::Ptr<_1a795c013_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1a6422128_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type68)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435823_buildMap(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a6433689_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a795c013_Token>> _3107_keyTokens = _1a641e675_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a6433689_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1a6433689_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a7974ed7_MapTypeDecl> _3197_mapt = jule::new_ptr<_1a7974ed7_MapTypeDecl>();;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1a79724bd_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1a6433689_pushErr(_self_, _3107_keyTokens[_3207_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1a79724bd_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_assign_result = _1a642357a_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type72)});;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435aa9_buildEnumerable(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a6433689_pushErr(_self_, _3417_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a6435306_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a643558c_buildArr(_self_);;
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6435d40_step(_1a64330e5_typeBuilder* _self_) {
	jule::Ptr<_1a795c013_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac292b85:;
			{
				return _1a6434536_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac2930d6:;
			{
				return _1a64347bc_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac293207:;
			{
				return _1a6434a53_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac292877:;
			{
				return _1a6434cd9_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac2928dd:;
			{
				return _1a6435070_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac292954:;
			{
				return jule::new_ptr<_1a79724bd_TypeDecl>(_1a79724bd_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a7973568_SptrTypeDecl>(_1a7973568_SptrTypeDecl{._field_Elem=_1a6435070_buildSptr(_self_)}), &__jule_any_type71)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac2929ba:;
			{
				return _1a6435aa9_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ac292a42:;
			{
				return _1a6435823_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ac292558:;
			{
				((*((*(_self_))._field_i)))++;
				_1a6433689_pushErr(_self_, _3563_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ac292822:;
	};
}



inline __jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool _1a64360c6_build(_1a64330e5_typeBuilder* _self_) {
	__jule_tuple_x_1a79724bd_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a79724bd_TypeDecl> _3887_root = _1a6435d40_step(_self_);;
	if ((_3887_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a6432831_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3887_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a64330e5_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7d13cc1_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a7d157ea_pushErr(_1a7d1529a_directiveEval* _self_, jule::Ptr<_1a795c013_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_1d974c80a_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1d974c80a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1d974cc6c_Logf(_2134_fmt, _2147_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1a7d15be6_splitOperans(_1a7d1529a_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a795c013_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _347_parts = jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1a795c013_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac2b7bcc:;
					{
						(_367_rangeN)++;
						goto _iter_next_1ac2b724d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac2b7eda:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1ac2b7e85:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1ac2b724d;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1ac2b724d:;
	}
	_iter_end_1ac2b724d:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1a7d157ea_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a7d16037_evalDirectiveIdent(_1a7d1529a_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2bad89:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1ac2bad89:;
			++it;
			goto _iter_begin_1ac2bad89;
		}
		_iter_end_1ac2bad89:;
	};
	return false;;
}



inline jule::Bool _1a7d16378_evalDirectivePart(_1a7d1529a_directiveEval* _self_, jule::Slice<jule::Ptr<_1a795c013_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1a7d157ea_pushErr(_self_, _7837_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1a7d16037_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1a7d1660e_eval(_1a7d1529a_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a7d157ea_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1047_logicalOrParts = _1a7d15be6_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2c12bd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a795c013_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> _1118_logicalAndParts = _1a7d15be6_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2c2995:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a795c013_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1a795c013_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1a795c013_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a7d157ea_pushErr(_self_, _1175_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1a7d16378_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1ac2c2995:;
						++it;
						goto _iter_begin_1ac2c2995;
					}
					_iter_end_1ac2c2995:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1ac2c12bd:;
			++it;
			goto _iter_begin_1ac2c12bd;
		}
		_iter_end_1ac2c12bd:;
	};
	return _1027_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7d1529a_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a643722b_JuleImporter> static__1a6437627_New(_1a7d13cc1_CompileInfo _5816_info) {
	jule::Ptr<_1a643722b_JuleImporter> _597_imp = jule::new_ptr<_1a643722b_JuleImporter>(_1a643722b_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1d7cdedd2_PathStdlib}), });;
	_1a7d14651_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _1a64378ad_AllPackages(_1a643722b_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a6437ced_SetModPath(_1a643722b_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1a6438084_GetModPath(_1a643722b_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a64383c5_ModById(_1a643722b_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a6438716_GetImport(_1a643722b_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc7dbae:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1acc7dbae:;
			++it;
			goto _iter_begin_1acc7dbae;
		}
		_iter_end_1acc7dbae:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log _1a6438b12_ImportPackage(_1a643722b_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_update_mod) {
	__jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>> _977_dirents = ({
		auto except = static__1d96aa0a3_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1d974c80a_Log>::make({_1a6436c42_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9629_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>(nullptr);});
	});;
	if (_9640_update_mod) {
		jule::Str _1024_newMod = _1a6833cba_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_1d974c80a_Log> _1059_errs = _1a6834084_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a79705a9_Ast>> _1127_asts = jule::Slice<jule::Ptr<_1a79705a9_Ast>>::alloc(0LL, _977_dirents.len());;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadaa419:;
		if (it != expr_end) {
			jule::Ptr<_21a5ccb54_DirEntry> _11310_dirent = *it;
			{
				if ((_21a5d15e7_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_1d969dd33_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1aadaa419;
				};
				jule::Str _1194__path = _1d96a8ada_Join(jule::Slice<jule::Str>::make({_9629_path,(*_11310_dirent.alloc)._field_Name}));;
				jule::Ptr<_1a7962799_File> _1208_file = _1a7963b74_NewFileSet(_1194__path);;
				_1a7962bb7_Fill(_1208_file.ptr(), _1a6436934_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_1d974c80a_Log> _1228_errors = _1a7970158_Lex(_1208_file, static_cast<jule::I64>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a63ee644_FileInfo> _1278_finfo = _1a63eecb5_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a7ce8756_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1aadaa419;
				};
				jule::Bool _1374_r;
				jule::Slice<_1d974c80a_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a64392e9_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1aadaa419;
				};
				{ jule::Slice<jule::Ptr<_1a79705a9_Ast>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1aadaa419:;
			++it;
			goto _iter_begin_1aadaa419;
		}
		_iter_end_1aadaa419:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a6438dba_Imported(_1a643722b_JuleImporter* _self_, jule::Ptr<_1a6817474_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac526da3:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ac526da3:;
			++it;
			goto _iter_begin_1ac526da3;
		}
		_iter_end_1ac526da3:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac5284c0:;
			if (it != expr_end) {
				jule::I64 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1ac528b41;
					};
				}
				_iter_next_1ac5284c0:;
				++it;
				_1628_i++;
				goto _iter_begin_1ac5284c0;
			}
			_iter_end_1ac5284c0:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ac528b41:;
	};
	{ jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1d974c80a_Log _1a64392e9_isPassBuildDirectives(_1a643722b_JuleImporter* _self_, jule::Ptr<_1a79705a9_Ast>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_1d974c80a_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52b57d:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _18015_td = *it;
			{
				if ((!(*((*(_18015_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1ac52b57d;
				};
				_1a7d1529a_directiveEval _1848_de = _1a7d1529a_directiveEval{._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1a7d1660e_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac52b57d:;
			++it;
			goto _iter_begin_1ac52b57d;
		}
		_iter_end_1ac52b57d:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a643722b_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a643d96e_ExprInspector> static__1a643dcd2_New(void) {
	return jule::new_ptr<_1a643d96e_ExprInspector>();;
}



inline void _1a643e08a_args(_1a643d96e_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args) {
	{
		auto expr = &(_5724_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56a732:;
		if (it != expr_end) {
			jule::Any _5815_arg = *it;
			{
				_1a643e343_inspect(_self_, &(_5815_arg));
			}
			_iter_next_1ac56a732:;
			++it;
			goto _iter_begin_1ac56a732;
		}
		_iter_end_1ac56a732:;
	};
}



inline void _1a643e343_inspect(_1a643d96e_ExprInspector* _self_, jule::Any* _6328_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6328_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6328_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac56bb1d:;
			{
				jule::Ptr<_1a799a4d5_BinaryExprModel> _718_b = (*(_6328_m)).cast_ptr<_1a799a4d5_BinaryExprModel>(&__jule_any_type111);;
				_1a643e343_inspect(_self_, &((*((*(_718_b))._field_Left))._field_Model));
				_1a643e343_inspect(_self_, &((*((*_718_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac56bc72:;
			{
				jule::Ptr<_1a799a8ae_UnaryExprModel> _758_u = (*(_6328_m)).cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110);;
				_1a643e343_inspect(_self_, &((*((*(_758_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac56bb84:;
			{
				jule::Ptr<_1a799b283_StructLitExprModel> _788_lit = (*(_6328_m)).cast_ptr<_1a799b283_StructLitExprModel>(&__jule_any_type95);;
				{
					auto expr = &((*(_788_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5711a5:;
					if (it != expr_end) {
						jule::I64 _798_i = it - expr->begin();
						{
							_1a643e343_inspect(_self_, &((*((*((*(_788_lit))._field_Args[_798_i]))._field_Expr))._field_Model));
						}
						_iter_next_1ac5711a5:;
						++it;
						_798_i++;
						goto _iter_begin_1ac5711a5;
					}
					_iter_end_1ac5711a5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac56c05d:;
			{
				jule::Ptr<_1a799b283_StructLitExprModel> _838_lit = (*((*(_6328_m)).cast_ptr<_1a799b580_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
				{
					auto expr = &((*(_838_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac572b46:;
					if (it != expr_end) {
						jule::I64 _848_i = it - expr->begin();
						{
							_1a643e343_inspect(_self_, &((*((*((*(_838_lit))._field_Args[_848_i]))._field_Expr))._field_Model));
						}
						_iter_next_1ac572b46:;
						++it;
						_848_i++;
						goto _iter_begin_1ac572b46;
					}
					_iter_end_1ac572b46:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac56c0c4:;
			{
				jule::Ptr<_1a799bb13_CastingExprModel> _888_c = (*(_6328_m)).cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93);;
				_1a643e343_inspect(_self_, &((*((*(_888_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac56c13a:;
			{
				jule::Ptr<_1a799c4b5_FnCallExprModel> _918_fc = (*(_6328_m)).cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33);;
				_1a643e343_inspect(_self_, &((*(_918_fc))._field_Expr));
				_1a643e08a_args(_self_, (*_918_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac56c1b2:;
			{
				jule::Ptr<_1a799c88e_SliceExprModel> _958_s = (*(_6328_m)).cast_ptr<_1a799c88e_SliceExprModel>(&__jule_any_type76);;
				_1a643e08a_args(_self_, (*(_958_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac56c239:;
			{
				jule::Ptr<_1a79a08a3_ArrayExprModel> _988_a = (*(_6328_m)).cast_ptr<_1a79a08a3_ArrayExprModel>(&__jule_any_type85);;
				_1a643e08a_args(_self_, (*(_988_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac56c2b1:;
			{
				jule::Ptr<_1a799cd45_IndexingExprModel> _1018_i = (*(_6328_m)).cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44);;
				_1a643e343_inspect(_self_, &((*((*(_1018_i))._field_Expr))._field_Model));
				_1a643e343_inspect(_self_, &((*((*_1018_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac56c338:;
			{
				jule::Ptr<_1a799db7b_MapExprModel> _1058_mp = (*(_6328_m)).cast_ptr<_1a799db7b_MapExprModel>(&__jule_any_type99);;
				{
					auto expr = &((*(_1058_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac5793ab:;
					if (it != expr_end) {
						jule::I64 _1068_i = it - expr->begin();
						{
							_1a643e343_inspect(_self_, &((*((*(_1058_mp))._field_Entries[_1068_i]))._field_Key));
							_1a643e343_inspect(_self_, &((*((*(_1058_mp))._field_Entries[_1068_i]))._field_Val));
						}
						_iter_next_1ac5793ab:;
						++it;
						_1068_i++;
						goto _iter_begin_1ac5793ab;
					}
					_iter_end_1ac5793ab:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac56c3b0:;
			{
				jule::Ptr<_1a799e20e_SlicingExprModel> _1118_s = (*(_6328_m)).cast_ptr<_1a799e20e_SlicingExprModel>(&__jule_any_type92);;
				_1a643e343_inspect(_self_, &((*(_1118_s))._field_Expr));
				_1a643e343_inspect(_self_, &((*_1118_s.alloc)._field_Left));
				if (((*_1118_s.alloc)._field_Right != nullptr)) {
					_1a643e343_inspect(_self_, &((*_1118_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac56c437:;
			{
				jule::Ptr<_1a799e792_TraitSubIdentExprModel> _1188_t = (*(_6328_m)).cast_ptr<_1a799e792_TraitSubIdentExprModel>(&__jule_any_type97);;
				_1a643e343_inspect(_self_, &((*(_1188_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac56c4ae:;
			{
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _1218_s = (*(_6328_m)).cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				_1a643e343_inspect(_self_, &((*((*(_1218_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac56c536:;
			{
				jule::Ptr<_1a79a0ba0_TupleExprModel> _1248_t = (*(_6328_m)).cast_ptr<_1a79a0ba0_TupleExprModel>(&__jule_any_type81);;
				{
					auto expr = &((*(_1248_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac57e702:;
					if (it != expr_end) {
						jule::I64 _1258_i = it - expr->begin();
						{
							_1a643e343_inspect(_self_, &((*((*(_1248_t))._field_Datas[_1258_i]))._field_Model));
						}
						_iter_next_1ac57e702:;
						++it;
						_1258_i++;
						goto _iter_begin_1ac57e702;
					}
					_iter_end_1ac57e702:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac56c5ad:;
			{
				jule::Ptr<_1a79a182c_BuiltinNewCallExprModel> _1298_b = (*(_6328_m)).cast_ptr<_1a79a182c_BuiltinNewCallExprModel>(&__jule_any_type113);;
				if (((*(_1298_b))._field_Init != nullptr)) {
					_1a643e343_inspect(_self_, &((*_1298_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac56c635:;
			{
				jule::Ptr<_1a79a1079_BuiltinOutCallExprModel> _1348_c = (*(_6328_m)).cast_ptr<_1a79a1079_BuiltinOutCallExprModel>(&__jule_any_type26);;
				_1a643e343_inspect(_self_, &((*(_1348_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac56c6ac:;
			{
				jule::Ptr<_1a79a1453_BuiltinOutlnCallExprModel> _1378_c = (*(_6328_m)).cast_ptr<_1a79a1453_BuiltinOutlnCallExprModel>(&__jule_any_type27);;
				_1a643e343_inspect(_self_, &((*(_1378_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac56c734:;
			{
				jule::Ptr<_1a79a1c06_BuiltinPanicCallExprModel> _1408_c = (*(_6328_m)).cast_ptr<_1a79a1c06_BuiltinPanicCallExprModel>(&__jule_any_type28);;
				_1a643e343_inspect(_self_, &((*(_1408_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac56c7ab:;
			{
				jule::Ptr<_1a79a21ac_BuiltinAssertCallExprModel> _1438_c = (*(_6328_m)).cast_ptr<_1a79a21ac_BuiltinAssertCallExprModel>(&__jule_any_type29);;
				_1a643e343_inspect(_self_, &((*(_1438_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac56c833:;
			{
				jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel> _1468_c = (*(_6328_m)).cast_ptr<_1a79a3cb3_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1a643e343_inspect(_self_, &((*((*(_1468_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac56c8aa:;
			{
				jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel> _1498_b = (*(_6328_m)).cast_ptr<_1a79a2663_BuiltinMakeCallExprModel>(&__jule_any_type114);;
				if (((*(_1498_b))._field_Len != nullptr)) {
					_1a643e343_inspect(_self_, &((*_1498_b.alloc)._field_Len));
				};
				if (((*_1498_b.alloc)._field_Cap != nullptr)) {
					_1a643e343_inspect(_self_, &((*_1498_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac56c932:;
			{
				jule::Ptr<_1a79a2a3c_BuiltinAppendCallExprModel> _1578_b = (*(_6328_m)).cast_ptr<_1a79a2a3c_BuiltinAppendCallExprModel>(&__jule_any_type25);;
				_1a643e343_inspect(_self_, &((*(_1578_b))._field_Dest));
				_1a643e343_inspect(_self_, &((*_1578_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac56c9a9:;
			{
				jule::Ptr<_1a79a2d39_BuiltinLenCallExprModel> _1618_l = (*(_6328_m)).cast_ptr<_1a79a2d39_BuiltinLenCallExprModel>(&__jule_any_type115);;
				_1a643e343_inspect(_self_, &((*((*(_1618_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac56ca31:;
			{
				jule::Ptr<_1a79a3136_BuiltinCapCallExprModel> _1648_c = (*(_6328_m)).cast_ptr<_1a79a3136_BuiltinCapCallExprModel>(&__jule_any_type116);;
				_1a643e343_inspect(_self_, &((*((*(_1648_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac56caa8:;
			{
				jule::Ptr<_1a79a3510_BuiltinDeleteCallExprModel> _1678_b = (*(_6328_m)).cast_ptr<_1a79a3510_BuiltinDeleteCallExprModel>(&__jule_any_type31);;
				_1a643e343_inspect(_self_, &((*((*(_1678_b))._field_Dest))._field_Model));
				if (((*_1678_b.alloc)._field_Key != nullptr)) {
					_1a643e343_inspect(_self_, &((*(*(_1678_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac56cb30:;
			{
				jule::Ptr<_1a79a4467_SizeofExprModel> _1738_s = (*(_6328_m)).cast_ptr<_1a79a4467_SizeofExprModel>(&__jule_any_type117);;
				_1a643e343_inspect(_self_, &((*(_1738_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac56cba7:;
			{
				jule::Ptr<_1a79a4654_AlignofExprModel> _1768_a = (*(_6328_m)).cast_ptr<_1a79a4654_AlignofExprModel>(&__jule_any_type118);;
				_1a643e343_inspect(_self_, &((*(_1768_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac56cc2e:;
			{
				jule::Ptr<_1a79a4be8_IntegratedToStrExprModel> _1798_i = (*(_6328_m)).cast_ptr<_1a79a4be8_IntegratedToStrExprModel>(&__jule_any_type119);;
				_1a643e343_inspect(_self_, &((*(_1798_i))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ac56cca6:;
			{
				jule::Ptr<_1a79a53be_FreeExprModel> _1828_f = (*(_6328_m)).cast_ptr<_1a79a53be_FreeExprModel>(&__jule_any_type32);;
				_1a643e343_inspect(_self_, &((*(_1828_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac56cd2d:;
			{
				jule::Ptr<_1a79a50c2_BackendEmitExprModel> _1858_e = (*(_6328_m)).cast_ptr<_1a79a50c2_BackendEmitExprModel>(&__jule_any_type24);;
				_1a643e08a_args(_self_, (*(_1858_e))._field_Exprs);
			}
		}
		_match_end_1ac56bab8:;
	};
}



inline void _1a643e6a6_Inspect(_1a643d96e_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f) {
	(*(_self_))._field_handler=_19342_f;
	_1a643e343_inspect(_self_, _19328_m);
}





std::ostream &operator<<(std::ostream &_Stream, _1a643d96e_ExprInspector _Src) {
	_Stream << "ExprInspector{";
	_Stream << "SkipChild:" << _Src._field_SkipChild << ", ";
	_Stream << "handler:" << _Src._field_handler;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6448ced_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a86c2151_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a86c256e_ObjectDeadCode> static__1a86c2a14_new(jule::Ptr<_1a6439bac_IR>* _3521_ir) {
	return jule::new_ptr<_1a86c256e_ObjectDeadCode>(_1a86c256e_ObjectDeadCode{._field_ir=(*(_3521_ir))});;
}



inline jule::Bool _1ace1bca3_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79bb6d2_Trait>* _4127_t) {
	jule::Slice<jule::Ptr<_1a79bb6d2_Trait>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1ace1d9b9:;
			{
				_4211_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ace1d832:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace1ea64:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1ace1ea64:;
			++it;
			_537_i++;
			goto _iter_begin_1ace1ea64;
		}
		_iter_end_1ace1ea64:;
	};
	return false;;
}

inline jule::Bool _1ace22704_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79ab309_FnIns>* _4127_t) {
	jule::Slice<jule::Ptr<_1a79ab309_FnIns>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1ace242e9:;
			{
				_4211_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ace2423e:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace24294:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1ace24294:;
			++it;
			_537_i++;
			goto _iter_begin_1ace24294;
		}
		_iter_end_1ace24294:;
	};
	return false;;
}

inline jule::Bool _1ace28551_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79960d5_StructIns>* _4127_t) {
	jule::Slice<jule::Ptr<_1a79960d5_StructIns>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1ace2ce18:;
			{
				_4211_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ace2cce7:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace2dd81:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1ace2dd81:;
			++it;
			_537_i++;
			goto _iter_begin_1ace2dd81;
		}
		_iter_end_1ace2dd81:;
	};
	return false;;
}

inline jule::Bool _1ace3079a_isLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a685a682_Var>* _4127_t) {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1ace3215e:;
			{
				_4211_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ace322d5:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace32bba:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1ace32bba:;
			++it;
			_537_i++;
			goto _iter_begin_1ace32bba;
		}
		_iter_end_1ace32bba:;
	};
	return false;;
}



inline void _1ace1c149_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79bb6d2_Trait> _6132_t) {
	{
		
{
			_case_begin_1ace20acb:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1a79bb6d2_Trait>>::make({_6132_t}));
			}
		}
		_match_end_1ace1ee2c:;
	};
}

inline void _1ace22a9a_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79ab309_FnIns> _6132_t) {
	{
		
{
			_case_begin_1ace2687e:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a79ab309_FnIns>>::make({_6132_t}));
			}
		}
		_match_end_1ace25e88:;
	};
}

inline void _1ace28b06_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79960d5_StructIns> _6132_t) {
	{
		
{
			_case_begin_1ace2a289:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1a79960d5_StructIns>>::make({_6132_t}));
			}
		}
		_match_end_1ace2960c:;
	};
}

inline void _1ace30b41_pushLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a685a682_Var> _6132_t) {
	{
		
{
			_case_begin_1ace3488c:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1a685a682_Var>>::make({_6132_t}));
			}
		}
		_match_end_1ace33d0e:;
	};
}



inline void _1a86c33b6_setReferencesAsLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a79ae4d8_ReferenceStack>* _7441_rs) {
	if (((*(_7441_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _787_i = 0LL;;
	for (; (_787_i < _1a79aebc0_Len((*(_7441_rs)).ptr())); (_787_i)++) {
		{
			jule::Any _808_ref = _1a79b0011_At((*(_7441_rs)).ptr(), _787_i);;
			{
				auto &_match_expr{ _808_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ace1a9a5:;
					{
						jule::Ptr<_1a79bb6d2_Trait> _839_t = _808_ref.unsafe_cast_ptr<_1a79bb6d2_Trait>();;
						if (_1ace1bca3_isLive(_self_, &(_839_t))) {
							goto _iter_next_1ace19bc4;
						};
						_1ace1c149_pushLive(_self_, _839_t);
						{
							auto expr = &((*(_839_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ace1b731:;
							if (it != expr_end) {
								jule::Ptr<_1a79a8328_Fn> _8817_ins = *it;
								{
									{
										auto expr = &((*(_8817_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ace20bb9:;
										if (it != expr_end) {
											jule::Ptr<_1a79ab309_FnIns> _8918_mins = *it;
											{
												if (_1ace22704_isLive(_self_, &(_8918_mins))) {
													goto _iter_next_1ace20bb9;
												};
												_1ace22a9a_pushLive(_self_, _8918_mins);
												_1a86c33b6_setReferencesAsLive(_self_, &((*(_8918_mins))._field_Refers));
											}
											_iter_next_1ace20bb9:;
											++it;
											goto _iter_begin_1ace20bb9;
										}
										_iter_end_1ace20bb9:;
									};
								}
								_iter_next_1ace1b731:;
								++it;
								goto _iter_begin_1ace1b731;
							}
							_iter_end_1ace1b731:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ace1a7da:;
					{
						jule::Ptr<_1a79ab309_FnIns> _989_f = _808_ref.unsafe_cast_ptr<_1a79ab309_FnIns>();;
						if (_1ace22704_isLive(_self_, &(_989_f))) {
							goto _match_end_1ace1a862;
						};
						if ((((*(_989_f))._field_Owner != nullptr) && (!((*((*_989_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1ace28551_isLive(_self_, &((*_989_f.alloc)._field_Owner))))) {
								_1ace28b06_pushLive(_self_, (*_989_f.alloc)._field_Owner);
								_1a86c33b6_setReferencesAsLive(_self_, &((*(*(_989_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1ace22a9a_pushLive(_self_, _989_f);
						_1a86c33b6_setReferencesAsLive(_self_, &((*_989_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ace1aa1b:;
					{
						jule::Ptr<_1a685a682_Var> _1119_v = _808_ref.unsafe_cast_ptr<_1a685a682_Var>();;
						if (_1ace3079a_isLive(_self_, &(_1119_v))) {
							goto _match_end_1ace1a862;
						};
						_1ace30b41_pushLive(_self_, _1119_v);
						_1a86c33b6_setReferencesAsLive(_self_, &((*(_1119_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ace1aa82:;
					{
						jule::Ptr<_1a79960d5_StructIns> _1189_s = _808_ref.unsafe_cast_ptr<_1a79960d5_StructIns>();;
						if (_1ace28551_isLive(_self_, &(_1189_s))) {
							goto _match_end_1ace1a862;
						};
						_1ace28b06_pushLive(_self_, _1189_s);
						_1a86c33b6_setReferencesAsLive(_self_, &((*(_1189_s))._field_Refers));
						{
							auto expr = &((*_1189_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ace36c02:;
							if (it != expr_end) {
								jule::Ptr<_1a79a8328_Fn> _12417_m = *it;
								{
									{
										auto expr = &((*(_12417_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ace378d4:;
										if (it != expr_end) {
											jule::Ptr<_1a79ab309_FnIns> _12518_ins = *it;
											{
												if (_1ace22704_isLive(_self_, &(_12518_ins))) {
													goto _iter_next_1ace378d4;
												};
												if (_1a6446614_IsTraitMethod(&(_1189_s), &(_12518_ins))) {
													_1ace22a9a_pushLive(_self_, _12518_ins);
													_1a86c33b6_setReferencesAsLive(_self_, &((*(_12518_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Eq)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Gt)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_GtEq)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Lt)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_LtEq)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Shl)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Shr)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Add)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Sub)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Div)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Mul)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Mod)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitAnd)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitOr)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitXor)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Neg)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Pos)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitNot)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_AddAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_SubAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_DivAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_MulAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ModAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ShlAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ShrAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1ace22a9a_pushLive(_self_, _12518_ins);
														_1a86c33b6_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1ace378d4:;
											++it;
											goto _iter_begin_1ace378d4;
										}
										_iter_end_1ace378d4:;
									};
								}
								_iter_next_1ace36c02:;
								++it;
								goto _iter_begin_1ace36c02;
							}
							_iter_end_1ace36c02:;
						};
					}
				}
				_match_end_1ace1a862:;
			};
		}
	_iter_next_1ace19bc4:;
	}
	_iter_end_1ace19bc4:;;
}



inline void _1a86c366e_inits(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a681a39a_Package>* _15627_pkg) {
	{
		auto expr = &((*((*(_15627_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace39a18:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _15715_file = *it;
			{
				{
					auto expr = &((*(_15715_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace3773b:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _15816_f = *it;
						{
							if ((*(_15816_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a79ab309_FnIns> _16010_ins = (*(_15816_f))._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a79ab309_FnIns>>::make({_16010_ins}));
								_1a86c33b6_setReferencesAsLive(_self_, &((*(_16010_ins))._field_Refers));
							};
						}
						_iter_next_1ace3773b:;
						++it;
						goto _iter_begin_1ace3773b;
					}
					_iter_end_1ace3773b:;
				};
			}
			_iter_next_1ace39a18:;
			++it;
			goto _iter_begin_1ace39a18;
		}
		_iter_end_1ace39a18:;
	};
}



inline void _1a86c3927_collectLivePackage(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a681a39a_Package>* _16840_pkg) {
	_1a86c366e_inits(_self_, _16840_pkg);
	if (_21a1bc04b_Test) {
		{
			auto expr = &((*((*(_16840_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ace5635e:;
			if (it != expr_end) {
				jule::Ptr<_1a7a4b18a_SymbolTable> _17416_file = *it;
				{
					{
						auto expr = &((*(_17416_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ace56c99:;
						if (it != expr_end) {
							jule::Ptr<_1a79a8328_Fn> _17517_f = *it;
							{
								if (_1a6447769_HasDirective(&((*(_17517_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1a79ab309_FnIns> _17711_ins = (*_17517_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a79ab309_FnIns>>::make({_17711_ins}));
									_1a86c33b6_setReferencesAsLive(_self_, &((*(_17711_ins))._field_Refers));
								};
							}
							_iter_next_1ace56c99:;
							++it;
							goto _iter_begin_1ace56c99;
						}
						_iter_end_1ace56c99:;
					};
				}
				_iter_next_1ace5635e:;
				++it;
				goto _iter_begin_1ace5635e;
			}
			_iter_end_1ace5635e:;
		};
	};
}



inline void _1a86c3b25_collectLive(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace56c11:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _18715_used = *it;
			{
				if ((!((*(_18715_used))._field_Binded))) {
					_1a86c3927_collectLivePackage(_self_, &((*_18715_used.alloc)._field_Package));
				};
			}
			_iter_next_1ace56c11:;
			++it;
			goto _iter_begin_1ace56c11;
		}
		_iter_end_1ace56c11:;
	};
	_1a86c3927_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1a79a8328_Fn> _1957_main = _1a681b92e_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1a79ab309_FnIns> _1967_ins = (*(_1957_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a79ab309_FnIns>>::make({_1967_ins}));
	_1a86c33b6_setReferencesAsLive(_self_, &((*(_1967_ins))._field_Refers));
}



inline void _1a86c3dcd_removeDeadGlobals(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a685a682_Var>>* _20139_vars) {
	jule::I64 _2027_i = 0LL;;
	while ((_2027_i < (*(_20139_vars)).len())) {
		{
			jule::Ptr<_1a685a682_Var> _2044_v = (*(_20139_vars))[_2027_i];;
			if (_1ace3079a_isLive(_self_, &(_2044_v))) {
				(_2027_i)++;
				goto _iter_next_1ace5ced1;
			};
			(*(_20139_vars))=jule::append((*(_20139_vars)).slice(0LL, _2027_i),(*(_20139_vars)).slice((_2027_i + 1LL)));
		}
	_iter_next_1ace5ced1:;
	}
	_iter_end_1ace5ced1:;;
}



inline void _1a86c4186_removeDeadFns(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _21335_funcs) {
	jule::I64 _2147_i = 0LL;;
	while ((_2147_i < (*(_21335_funcs)).len())) {
		{
			jule::Ptr<_1a79a8328_Fn> _2168_f = (*(_21335_funcs))[_2147_i];;
			jule::I64 _2178_j = 0LL;;
			while ((_2178_j < (*(_2168_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a79ab309_FnIns> _2195_ins = (*(_2168_f))._field_Instances[_2178_j];;
					if (_1ace22704_isLive(_self_, &(_2195_ins))) {
						(_2178_j)++;
						goto _iter_next_1ace60731;
					};
					(*_2168_f.alloc)._field_Instances=jule::append((*_2168_f.alloc)._field_Instances.slice(0LL, _2178_j),(*_2168_f.alloc)._field_Instances.slice((_2178_j + 1LL)));
				}
			_iter_next_1ace60731:;
			}
			_iter_end_1ace60731:;;
			if (((*_2168_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21335_funcs))=jule::append((*(_21335_funcs)).slice(0LL, _2147_i),(*(_21335_funcs)).slice((_2147_i + 1LL)));
				goto _iter_next_1ace5ea82;
			};
			(_2147_i)++;
		}
	_iter_next_1ace5ea82:;
	}
	_iter_end_1ace5ea82:;;
}



inline void _1a86c443e_removeDeadStructs(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a7993357_Struct>>* _23439_structs) {
	jule::I64 _2357_i = 0LL;;
	while ((_2357_i < (*(_23439_structs)).len())) {
		{
			jule::Ptr<_1a7993357_Struct> _2378_s = (*(_23439_structs))[_2357_i];;
			jule::I64 _2388_j = 0LL;;
			while ((_2388_j < (*(_2378_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a79960d5_StructIns> _2409_ins = (*(_2378_s))._field_Instances[_2388_j];;
					_1a86c4186_removeDeadFns(_self_, &((*(_2409_ins))._field_Methods));
					if ((((*_2409_ins.alloc)._field_Methods.len() != 0LL) || _1ace28551_isLive(_self_, &(_2409_ins)))) {
						(_2388_j)++;
						goto _iter_next_1ace6446b;
					};
					(*_2378_s.alloc)._field_Instances=jule::append((*_2378_s.alloc)._field_Instances.slice(0LL, _2388_j),(*_2378_s.alloc)._field_Instances.slice((_2388_j + 1LL)));
				}
			_iter_next_1ace6446b:;
			}
			_iter_end_1ace6446b:;;
			if (((*_2378_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23439_structs))=jule::append((*(_23439_structs)).slice(0LL, _2357_i),(*(_23439_structs)).slice((_2357_i + 1LL)));
				goto _iter_next_1ace637bc;
			};
			(_2357_i)++;
		}
	_iter_next_1ace637bc:;
	}
	_iter_end_1ace637bc:;;
}



inline void _1a86c46e7_removeDeadTraits(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a79bb6d2_Trait>>* _25638_traits) {
	jule::I64 _2577_i = 0LL;;
	while ((_2577_i < (*(_25638_traits)).len())) {
		{
			jule::Ptr<_1a79bb6d2_Trait> _2598_t = (*(_25638_traits))[_2577_i];;
			if ((!(_1ace1bca3_isLive(_self_, &(_2598_t))))) {
				(*(_25638_traits))=jule::append((*(_25638_traits)).slice(0LL, _2577_i),(*(_25638_traits)).slice((_2577_i + 1LL)));
				goto _iter_next_1ace68063;
			};
			jule::I64 _2648_j = 0LL;;
			while ((_2648_j < (*(_2598_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a7993357_Struct> _2665_s = (*(_2598_t))._field_Implemented[_2648_j];;
					if (((*(_2665_s))._field_Instances.len() > 0LL)) {
						(_2648_j)++;
						goto _iter_next_1ace6898c;
					};
					(*_2598_t.alloc)._field_Implemented=jule::append((*_2598_t.alloc)._field_Implemented.slice(0LL, _2648_j),(*_2598_t.alloc)._field_Implemented.slice((_2648_j + 1LL)));
				}
			_iter_next_1ace6898c:;
			}
			_iter_end_1ace6898c:;;
			(_2577_i)++;
		}
	_iter_next_1ace68063:;
	}
	_iter_end_1ace68063:;;
}



inline void _1a86c49a0_removeDeadsFile(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a7a4b18a_SymbolTable>* _27737_file) {
	_1a86c4186_removeDeadFns(_self_, &((*((*(_27737_file))))._field_Funcs));
	_1a86c443e_removeDeadStructs(_self_, &((*((*(_27737_file))))._field_Structs));
	_1a86c46e7_removeDeadTraits(_self_, &((*((*(_27737_file))))._field_Traits));
	_1a86c3dcd_removeDeadGlobals(_self_, &((*((*(_27737_file))))._field_Vars));
}



inline void _1a86c4c58_removeDeadsPackage(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_, jule::Ptr<_1a681a39a_Package>* _28440_pkg) {
	{
		auto expr = &((*((*(_28440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace6d60c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _28515_file = *it;
			{
				_1a86c49a0_removeDeadsFile(_self_, &(_28515_file));
			}
			_iter_next_1ace6d60c:;
			++it;
			goto _iter_begin_1ace6d60c;
		}
		_iter_end_1ace6d60c:;
	};
}



inline void _1a86c4e56_removeDeads(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace6dd7c:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _29115_used = *it;
			{
				if ((!((*(_29115_used))._field_Binded))) {
					_1a86c4c58_removeDeadsPackage(_self_, &((*_29115_used.alloc)._field_Package));
				};
			}
			_iter_next_1ace6dd7c:;
			++it;
			goto _iter_begin_1ace6dd7c;
		}
		_iter_end_1ace6dd7c:;
	};
	_1a86c4c58_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1a86c5154_elimanate(jule::Ptr<_1a86c256e_ObjectDeadCode> _self_) {
	_1a86c3b25_collectLive(_self_);
	_1a86c4e56_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a86c256e_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void _1a86c66a5_optimizeChild(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680dba7_Scope>* _3935_s) {
	jule::Ptr<_1a86c61bb_scopeDeadCode> _407_sdc = jule::new_ptr<_1a86c61bb_scopeDeadCode>(_1a86c61bb_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a86c90c0_optimizeStmts(_407_sdc);
	};
}



inline void _1a86c695d_optimizeBodyChildExceptional(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680dba7_Scope>* _4950_s) {
	jule::Ptr<_1a86c61bb_scopeDeadCode> _507_sdc = jule::new_ptr<_1a86c61bb_scopeDeadCode>(_1a86c61bb_scopeDeadCode{._field_s=(*(_4950_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a86c90c0_optimizeStmts(_507_sdc);
	};
}



inline void _1a86c6c16_optimizeBodyChild(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680dba7_Scope>* _5939_s) {
	jule::Ptr<_1a86c61bb_scopeDeadCode> _607_sdc = jule::new_ptr<_1a86c61bb_scopeDeadCode>(_1a86c61bb_scopeDeadCode{._field_s=(*(_5939_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a86c90c0_optimizeStmts(_607_sdc);
	};
}



inline void _1a86c6ebe_optimizeExprModel(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1a86ca852_exprDeadCode _693_edc = static__1a86cabe8_new(&(_self_));;
	_1a86caea1_optimize(&_693_edc, _6839_model);
}



inline void _1a86c71bc_eliminateFollowed(_1a86c61bb_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a86c61bb_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1ace7e4ec:;
	}
	_iter_end_1ace7e4ec:;;
}



inline void _1a86c7475_pushGoto(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79d9aa7_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ace828b8:;
	}
	_iter_end_1ace828b8:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),jule::Slice<jule::Ptr<_1a79d9aa7_GotoSt>>::make({_8929_gt}));
}



inline void _1a86c772d_pushLabel(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79d96de_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1ace84a96;
			};
			(_1007_i)++;
		}
	_iter_next_1ace84a96:;
	}
	_iter_end_1ace84a96:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),jule::Slice<jule::Ptr<_1a79d96de_Label>>::make({_9930_l}));
}



inline void _1a86c79d6_optimizeRangeIter(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a68109de_RangeIter> _11238_it) {
	_1a86c6ebe_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1a86c6c16_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1a86c7c8e_optimizeWhileIter(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a6810093_WhileIter> _11738_it) {
	_1a86c6ebe_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1a86c8dc2_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1a86c6c16_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1a86c8047_optimizeInfIter(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680eadc_InfIter> _12536_it) {
	_1a86c6c16_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1a86c8300_optimizeConditional(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a680e7e0_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace8b905:;
		if (it != expr_end) {
			jule::Ptr<_1a680e0c5_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1a86c6ebe_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1a86c6c16_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1ace8b905:;
			++it;
			goto _iter_begin_1ace8b905;
		}
		_iter_end_1ace8b905:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a86c66a5_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1a86c6c16_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a86c85a8_optimizeMatch(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79db04d_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace8ee36:;
		if (it != expr_end) {
			jule::Ptr<_1a79dbb97_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace908a4:;
					if (it != expr_end) {
						jule::Ptr<_1a7a51503_Data> _14916_expr = *it;
						{
							_1a86c6ebe_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1ace908a4:;
						++it;
						goto _iter_begin_1ace908a4;
					}
					_iter_end_1ace908a4:;
				};
				_1a86c6c16_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1ace8ee36:;
			++it;
			goto _iter_begin_1ace8ee36;
		}
		_iter_end_1ace8ee36:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1a86c66a5_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1a86c6c16_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a86c8861_optimizeAssign(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79da437_Assign> _16535_assign) {
	_1a86c6ebe_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1a86c6ebe_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1a86c8b19_optimizeMultiAssign(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Ptr<_1a79da8dd_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace94c2c:;
		if (it != expr_end) {
			jule::Ptr<_1a7a51503_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1a86c6ebe_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1ace94c2c:;
			++it;
			goto _iter_begin_1ace94c2c;
		}
		_iter_end_1ace94c2c:;
	};
	_1a86c6ebe_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1a86c8dc2_optimizeStmt(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ace96899:;
			{
				jule::Ptr<_1a680dba7_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1a680dba7_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1a86c9400_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1a86c66a5_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ace96624:;
			{
				_1a86c79d6_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1a68109de_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ace96921:;
			{
				_1a86c7c8e_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1a6810093_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ace96998:;
			{
				_1a86c8047_optimizeInfIter(_self_, _17933_st.cast_ptr<_1a680eadc_InfIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ace96a20:;
			{
				_1a86c8300_optimizeConditional(_self_, _17933_st.cast_ptr<_1a680e7e0_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ace96a97:;
			{
				_1a86c85a8_optimizeMatch(_self_, _17933_st.cast_ptr<_1a79db04d_Match>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ace96b1e:;
			{
				_1a86c8861_optimizeAssign(_self_, _17933_st.cast_ptr<_1a79da437_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ace96b96:;
			{
				_1a86c8b19_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1a79da8dd_MultiAssign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ace96c1d:;
			{
				jule::Ptr<_1a7a51503_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1a7a51503_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1ace96756;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1ace9c9d2:;
						{
							_1a86c71bc_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ace9cc68:;
						{
							_1a86c6ebe_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1ace9cc13:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ace96c95:;
			{
				_1a86c71bc_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ace96d1c:;
			{
				_1a86c7475_pushGoto(_self_, _17933_st.cast_ptr<_1a79d9aa7_GotoSt>(&__jule_any_type41));
				_1a86c71bc_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ace96d94:;
			{
				_1a86c772d_pushLabel(_self_, _17933_st.cast_ptr<_1a79d96de_Label>(&__jule_any_type20));
			}
		}
		_match_end_1ace96756:;
	};
}



inline void _1a86c90c0_optimizeStmts(jule::Ptr<_1a86c61bb_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a86c8dc2_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1acea0694:;
	}
	_iter_end_1acea0694:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a86c61bb_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a86ca852_exprDeadCode static__1a86cabe8_new(jule::Ptr<_1a86c61bb_scopeDeadCode>* _1821_s) {
	return _1a86ca852_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1a86caea1_optimize(_1a86ca852_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1a643d96e_ExprInspector> _257_inspector = static__1a643dcd2_New();;
	_1a643e6a6_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1acea3279, jule::Ptr<__jule_anon_1acea3279_ctx>::make(__jule_anon_1acea3279_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1acea3279_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1a86ca852_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b76194_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b76518_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b768e2_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b76c66_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b771d9_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b7776c_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b77a69_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b77dee_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b782c8_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b786a2_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b78a7b_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b78d78_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b79175_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b79d57_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1a7b7a60a_pushVar(_1a7b7a198_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1a6460650_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0046a4:;
		if (it != expr_end) {
			_1a7b79d57_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1ad0046a4:;
			++it;
			goto _iter_begin_1ad0046a4;
		}
		_iter_end_1ad0046a4:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad004462:;
		if (it != expr_end) {
			_1a7b79d57_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1ad004462:;
			++it;
			goto _iter_begin_1ad004462;
		}
		_iter_end_1ad004462:;
	};
	{ jule::Slice<_1a7b79d57_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a7b79d57_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1a7b7a94b_removeVar(_1a7b7a198_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad006d8d:;
			if (it != expr_end) {
				_1a7b79d57_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ad006d8d:;
				++it;
				goto _iter_begin_1ad006d8d;
			}
			_iter_end_1ad006d8d:;
		};
	};
	return false;;
}



inline jule::Bool _1a7b7ac8c_isSafe(_1a7b7a198_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0084ee:;
			if (it != expr_end) {
				_1a7b79d57_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1ad0084ee:;
				++it;
				goto _iter_begin_1ad0084ee;
			}
			_iter_end_1ad0084ee:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7b7a198_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a644a519_scopeOptimizer> static__1a644aa8b_new(jule::Ptr<_1a680dba7_Scope> _5120_scope) {
	jule::Ptr<_1a644a519_scopeOptimizer> _527_sc = jule::new_ptr<_1a644a519_scopeOptimizer>(_1a644a519_scopeOptimizer{._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1a645a3c5_data>(_1a645a3c5_data{._field_boundary=jule::new_ptr<_1a645bd55_boundary>(), ._field_nils=jule::new_ptr<_1a7b7a198_nils>(), ._field_dynamic=jule::new_ptr<_1a6457746_dynamic>()})});;
	return _527_sc;;
}



inline void _1a644ad44_setCurrentStmt(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1a644b042_removeCurrent(jule::Ptr<_1a644a519_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a644b2c8_isLastStmt(jule::Ptr<_1a644a519_scopeOptimizer> _self_) {
	jule::Ptr<_1a644a519_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ad01572b:;
	}
	_iter_end_1ad01572b:;;
	return true;;
}



inline jule::Bool _1a644b55e_isIter(jule::Ptr<_1a644a519_scopeOptimizer> _self_) {
	jule::Ptr<_1a644a519_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1ad017e8c:;
					{
						return true;;
					}
				}
				_match_end_1ad017e04:;
			};
		}
	_iter_next_1ad017321:;
	}
	_iter_end_1ad017321:;;
	return false;;
}



inline void _1a644b817_optimizeData(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a7a51503_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad019136:;
			{
				jule::Ptr<_1a799c4b5_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1a799c4b5_FnCallExprModel>();;
				if (_21a1bc90e_Production) {
					if (((!(_1a79ac78e_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1a6446988_IsStdPackage(&((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1a644ad44_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a6452796_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a6461ac4_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a64455e1_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1a644b2c8_isLastStmt(_self_)) && (!(_1a644b55e_isIter(_self_))))) {
					_1a644ad44_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b76194_ExceptionalForwardingExprModel>(_1a7b76194_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1ad0190c0:;
	};
	static__1a6452796_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a644bac0_optimizeVar(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a685a682_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a7b7b809_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1a7b7b540_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a7b7a60a_pushVar((*((*(_self_))._field_data))._field_nils, _1a7b7bb4a_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a7a828ec_TypeKind> _1309_kind = _1a645901c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1a6458add_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1a6457ba8_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a645935d_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1a6452796_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a644bd78_optimizeConditional(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a680e7e0_Conditional> _14240_c) {
	_1a6459dca_dataCheckpoint _1437_checkpoint = _1a645a749_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad02762d:;
		if (it != expr_end) {
			jule::Ptr<_1a680e0c5_If> _14415_elif = *it;
			{
				static__1a6452796_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a644ea07_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1a645aa02_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1ad02762d:;
			++it;
			goto _iter_begin_1ad02762d;
		}
		_iter_end_1ad02762d:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1a644ea07_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1a645aa02_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1a6461079_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad02b269:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1a680e0c5_If> _16315_elif = *it;
			{
				if ((!(_1a64500bd_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1ad02b269;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1a680e3c2_Else>(_1a680e3c2_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1ad02b269;
			}
			_iter_next_1ad02b269:;
			++it;
			_1638_i++;
			goto _iter_begin_1ad02b269;
		}
		_iter_end_1ad02b269:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a680e0c5_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1a680e0c5_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1a64509d6_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1ad02ddd7:;
	}
	_iter_end_1ad02ddd7:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad031208:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1a680e0c5_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1ad031208:;
			++it;
			_2007_j++;
			goto _iter_begin_1ad031208;
		}
		_iter_end_1ad031208:;
	};
	if ((_1997_only != -1LL)) {
		_1a644ad44_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a644c296_buildDefaultConstantTrueCase(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79dbb97_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a79db04d_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1ad0336e4:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ad03377c;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1ad035dab:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1ad03377c;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1ad035ebb:;
					{
						goto _iter_end_1ad03377c;
					}
				}
				_match_end_1ad035d56:;
			};
		}
	_iter_next_1ad03377c:;
	}
	_iter_end_1ad03377c:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1a644c54e_optimizeMatch(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79db04d_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1a6462135_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1a645935d_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1a6459dca_dataCheckpoint _2477_checkpoint = _1a645a749_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0403b0:;
		if (it != expr_end) {
			jule::Ptr<_1a79dbb97_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad040c95:;
					if (it != expr_end) {
						jule::Ptr<_1a7a51503_Data> _24916_expr = *it;
						{
							static__1a6452796_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1ad040c95:;
						++it;
						goto _iter_begin_1ad040c95;
					}
					_iter_end_1ad040c95:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a7a828ec_TypeKind> _2549_kind = _1a645901c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1a6457ba8_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1a6457ee9_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1a644ea07_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1a645aa02_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1ad0403b0:;
			++it;
			goto _iter_begin_1ad0403b0;
		}
		_iter_end_1ad0403b0:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1a644ea07_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1a645aa02_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1a6461079_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0476d6:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1a79dbb97_Case> _27819_case = *it;
			{
				if ((!(_1a6450695_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1ad0476d6;
				};
				_2757_constCase=true;
				_1a644c296_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1ad0476d6;
			}
			_iter_next_1ad0476d6:;
			++it;
			_27812_i++;
			goto _iter_begin_1ad0476d6;
		}
		_iter_end_1ad0476d6:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a79dbb97_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1a79dbb97_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1a6450c6c_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1ad04a2cc:;
	}
	_iter_end_1ad04a2cc:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad04b564:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1a79dbb97_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1ad04b564:;
			++it;
			_3087_j++;
			goto _iter_begin_1ad04b564;
		}
		_iter_end_1ad04b564:;
	};
	if ((_3077_only != -1LL)) {
		_1a644ad44_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a644c807_optimizeRangeIter(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a68109de_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1a645c2b7_pushVar((*((*(_self_))._field_data))._field_boundary, _1a645e286_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1a644ea07_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1a6461d7c_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1ad0511c3:;
				{
					jule::Ptr<_1a799bb13_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a799bb13_CastingExprModel>();;
					jule::Ptr<_1a7a8a4c6_Prim> _3375_eprim = _1a7a8504d_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1a7a8d95d_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1ad05115c;
					};
					jule::Ptr<_1a7a8e9c5_Slc> _3419_s = _1a7a860a4_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1ad05115c;
					};
					jule::Ptr<_1a7a8a4c6_Prim> _3455_prim = _1a7a8504d_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1ad05115c;
					};
					{
						
						if (_1a7a8bdbd_IsU8(_3455_prim.ptr())) {
							_case_begin_1ad054a78:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1a7a8b8a1_IsI32(_3455_prim.ptr())) {
							_case_begin_1ad054c10:;
							{
								static__1a6452796_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a644ad44_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b78a7b_StrRuneIter>(_1a7b78a7b_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1ad05489c:;
					};
				}
			}
			_match_end_1ad05115c:;
		};
	};
	static__1a6452796_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a644cab0_optimizeWhileIter(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a6810093_WhileIter> _36938_it) {
	static__1a6452796_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1a644e74e_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1a644ea07_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1a644ce01_substr(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad059a7d:;
			{
				jule::Ptr<_1a799e20e_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a799e20e_SlicingExprModel>();;
				if (_1a7b7555b_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1a644ad44_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b7776c_MutSlicingExprModel>(_1a7b7776c_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1ad059a17:;
	};
	return false;;
}



inline jule::Bool _1a644d242_strAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _39530_a) {
	if ((!(_1a64612bb_Str))) {
		return false;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _3993_lp = _1a7a8504d_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1a7a8d95d_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1a644ce01_substr(_self_, _39530_a);;
}



inline jule::Bool _1a644d583_sliceAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _40632_a) {
	if (((!(_1a6461563_Slice)) || (_1a7a860a4_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1a644ce01_substr(_self_, _40632_a);;
}



inline void _1a644d83b_optimizePostfix(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79d9e81_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a645d939_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1a6452796_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a644dae4_optimizeAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da437_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1a7b7555b_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1a644b042_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a645dc03_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1a645d939_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1a7b7b540_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1a7b7b809_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1a7b7a60a_pushVar((*((*(_self_))._field_data))._field_nils, _1a7b7bb4a_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a7b7b177_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a7a828ec_TypeKind> _4458_kind = _1a645901c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1a6458add_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1a6457ba8_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a645935d_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1a64587d0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a644d242_strAssign(_self_, _42135_assign) || _1a644d583_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1ad06c91a:;
			{
				return;;
			}
		}
		_match_end_1ad06abe3:;
	};
	static__1a6452796_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a6452796_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ad06e851:;
			{
				if (((!(_1a6460397_Math)) || (_1a7a865c1_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1ad06e7da;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1ad072601:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1ad072667:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1ad071da3:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:480:5"));;
						}
					}
					_match_end_1ad0721c2:;
				};
				jule::Ptr<_1a799a4d5_BinaryExprModel> _4828_b = jule::new_ptr<_1a799a4d5_BinaryExprModel>(_1a799a4d5_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4878_model = jule::Any(_4828_b, &__jule_any_type111);;
				static__1a6452796_optimizeData(&(_4878_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ (*(((jule::Any*)((&(_4878_model)))))) };
					
					if (_match_expr.type == &__jule_any_type123) {
						_case_begin_1ad076209:;
						{
							(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1a7999eda_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
							(*(_4828_b))._field_Op=jule::new_ptr<_1a795c013_Token>((*(*(_4828_b))._field_Op.alloc));
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4878_model;
							return;;
						}
					}
					_match_end_1ad076182:;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1ad06e7da:;
	};
	if (_1a646009a_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1ad079592:;
				{
					jule::Ptr<_1a79a2a3c_BuiltinAppendCallExprModel> _5089_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1a79a2a3c_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1a6456613_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5089_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5089_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1ad07a7e6:;
							{
								_1a644ad44_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b782c8_PushToSliceExprModel>(_1a7b782c8_PushToSliceExprModel{._field_Dest=(*_5089_m.alloc)._field_Dest, ._field_Elems=(*(_5089_m))._field_Elements.unsafe_cast_ptr<_1a799c88e_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1ad07b0dd:;
							{
								_1a644ad44_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b786a2_AppendToSliceExprModel>(_1a7b786a2_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5089_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1ad07b088:;
					};
				}
			}
			_match_end_1ad07952b:;
		};
	};
}



inline jule::Bool _1a644de35_tryOptimizeSwap(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _53037_assign) {
	if (((((!(_1a646181b_Assign)) || ((*((*(_53037_assign))))._field_Left.len() != 2LL)) || ((*((*(_53037_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53037_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a79a0ba0_TupleExprModel> _53511_tup;;
	{
		auto &_match_expr{ (*((*(_53037_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad07ebe6:;
			{
				_53511_tup=(*((*(_53037_assign))))._field_Right.unsafe_cast_ptr<_1a79a0ba0_TupleExprModel>();
			}
		}
		_match_end_1ad07eb80:;
	};
	if (((_53511_tup == nullptr) || ((*(_53511_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a7b7555b_equalModels((*((*((*(_53037_assign))))._field_Left[0LL]))._field_Model, (*((*(_53511_tup))._field_Datas[0LL]))._field_Model) && _1a7b7555b_equalModels((*((*((*(_53037_assign))))._field_Left[1LL]))._field_Model, (*((*(_53511_tup))._field_Datas[1LL]))._field_Model))) {
		_1a644b042_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a7b7555b_equalModels((*((*((*(_53037_assign))))._field_Left[0LL]))._field_Model, (*((*(_53511_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a7b7555b_equalModels((*((*((*(_53037_assign))))._field_Left[1LL]))._field_Model, (*((*(_53511_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a7b76518_SwapExprModel> _5577_model = jule::new_ptr<_1a7b76518_SwapExprModel>(_1a7b76518_SwapExprModel{._field_Left=(*((*(_53037_assign))))._field_Left[0LL], ._field_Right=(*((*(_53037_assign))))._field_Left[1LL]});;
	static__1a6452796_optimizeData(&((*((*(_5577_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a6452796_optimizeData(&((*((*_5577_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a644ad44_setCurrentStmt(_self_, jule::Any(_5577_model, &__jule_any_type126));
	return true;;
}



inline void _1a644e1dd_optimizeMultiAssign(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79da8dd_MultiAssign> _56740_assign) {
	if (_1a644de35_tryOptimizeSwap(_self_, &(_56740_assign))) {
		return;;
	};
	jule::Ptr<_1a79a0ba0_TupleExprModel> _5747_tup = static_cast<jule::Ptr<_1a79a0ba0_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56740_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad0886e4:;
			{
				_5747_tup=(*(_56740_assign))._field_Right.unsafe_cast_ptr<_1a79a0ba0_TupleExprModel>();
			}
		}
		_match_end_1ad08867d:;
	};
	{
		auto expr = &((*(_56740_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad087825:;
		if (it != expr_end) {
			jule::I64 _5798_i = it - expr->begin();
			jule::Ptr<_1a7a51503_Data> _57915_l = *it;
			{
				if ((_57915_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a645dc03_isBoundaryRiskyType((*_57915_l.alloc)._field_Kind)) {
							_1a645d939_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_57915_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5747_tup != nullptr) && _1a7b7b540_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5747_tup.alloc)._field_Datas[_5798_i]))._field_Model))) {
							if (_1a7b7b809_isNilValidType((*_57915_l.alloc)._field_Kind)) {
								;
								_1a7b7a60a_pushVar((*((*(_self_))._field_data))._field_nils, _1a7b7bb4a_getNilVar((*_57915_l.alloc)._field_Model), true);
							};
						} else {
							_1a7b7b177_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_57915_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5747_tup != nullptr))) {
						jule::Ptr<_1a7a828ec_TypeKind> _59710_kind = _1a645901c_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5747_tup.alloc)._field_Datas[_5798_i]))._field_Kind, (*((*(_5747_tup))._field_Datas[_5798_i]))._field_Model);;
						if ((_59710_kind != nullptr)) {
							if (_1a6458add_isDynamicValidType((*_57915_l.alloc)._field_Kind)) {
								_1a6457ba8_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a645935d_getDynamicVar((*_57915_l.alloc)._field_Model), _59710_kind);
							};
						} else {
							_1a64587d0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_57915_l.alloc)._field_Model);
						};
					};
					static__1a6452796_optimizeData(&((*_57915_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1ad087825:;
			++it;
			_5798_i++;
			goto _iter_begin_1ad087825;
		}
		_iter_end_1ad087825:;
	};
	static__1a6452796_optimizeData(&((*_56740_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a644e496_optimizeRet(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a79dc77a_RetSt> _61332_r) {
	static__1a6452796_optimizeData(&((*(_61332_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a6461ac4_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61332_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad0943e2:;
			{
				goto _match_end_1ad094755;
			}
		}
		else {
			_case_begin_1ad0947aa:;
			{
				return;;
			}
		}
		_match_end_1ad094755:;
	};
	jule::Ptr<_1a799c4b5_FnCallExprModel> _6277_fc = (*_61332_r.alloc)._field_Expr.cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_6277_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6277_fc.alloc)._field_Except == nullptr)) || ((*((*_6277_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a64455e1_IsForwarded(&((*_6277_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a644ad44_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a7b76194_ExceptionalForwardingExprModel>(_1a7b76194_ExceptionalForwardingExprModel{._field_Expr=_6277_fc}), &__jule_any_type120));
}



inline void _1a644e74e_optimizeStmt(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Any _63733_stmt) {
	{
		auto &_match_expr{ _63733_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad097ba9:;
			{
				_1a644ea07_optimizeChild(_self_, _63733_stmt.cast_ptr<_1a680dba7_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad097901:;
			{
				_1a644b817_optimizeData(_self_, _63733_stmt.cast_ptr<_1a7a51503_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad097c20:;
			{
				_1a644bac0_optimizeVar(_self_, _63733_stmt.cast_ptr<_1a685a682_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad097c86:;
			{
				_1a644bd78_optimizeConditional(_self_, _63733_stmt.cast_ptr<_1a680e7e0_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad097cec:;
			{
				_1a644c807_optimizeRangeIter(_self_, _63733_stmt.cast_ptr<_1a68109de_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad097d74:;
			{
				_1a644cab0_optimizeWhileIter(_self_, _63733_stmt.cast_ptr<_1a6810093_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad097deb:;
			{
				_1a644ea07_optimizeChild(_self_, (*(_63733_stmt.unsafe_cast_ptr<_1a680eadc_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad097e73:;
			{
				_1a644dae4_optimizeAssign(_self_, _63733_stmt.cast_ptr<_1a79da437_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad097eea:;
			{
				_1a644e1dd_optimizeMultiAssign(_self_, _63733_stmt.cast_ptr<_1a79da8dd_MultiAssign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad098072:;
			{
				_1a644c54e_optimizeMatch(_self_, _63733_stmt.cast_ptr<_1a79db04d_Match>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ad0980e9:;
			{
				_1a644e496_optimizeRet(_self_, _63733_stmt.cast_ptr<_1a79dc77a_RetSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad098171:;
			{
				_1a644d83b_optimizePostfix(_self_, _63733_stmt.cast_ptr<_1a79d9e81_Postfix>(&__jule_any_type42));
			}
		}
		_match_end_1ad097a66:;
	};
}



inline void _1a644ea07_optimizeChild(jule::Ptr<_1a644a519_scopeOptimizer> _self_, jule::Ptr<_1a680dba7_Scope> _66634_child) {
	jule::Ptr<_1a644a519_scopeOptimizer> _6677_so = static__1a644aa8b_new(_66634_child);;
	(*(_6677_so))._field_parent=_self_;
	(*_6677_so.alloc)._field_data=(*(_self_))._field_data;
	_1a644ec05_optimize(_6677_so);
}



inline void _1a644ec05_optimize(jule::Ptr<_1a644a519_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a644e74e_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ad0a1113:;
	}
	_iter_end_1ad0a1113:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a644a519_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1a64524aa_optimize(jule::Any* _3626_model) {
	static__1a6452796_optimizeData(_3626_model, &(_1a64599ce_emptyData));
}



inline void static__1a6452796_optimizeData(jule::Any* _4030_model, jule::Ptr<_1a645a3c5_data>* _4053_d) {
	if (_1a86cb567_exprEnabled) {
		jule::Ptr<_1a6452015_exprOptimizer> _438_exop = jule::new_ptr<_1a6452015_exprOptimizer>(_1a6452015_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1a643dcd2_New()});;
		_1a6455cc7_do(_438_exop.ptr());
	};
}



inline jule::Bool _1a6452ad7_selfCmpCond(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _5228_m) {
	if ((!(_1a7b7555b_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ad0b0a07:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1bd82cd57_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ad0b0e03:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1bd82cd57_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1ad0ae8c4:;
			{
				return false;;
			}
		}
		_match_end_1ad0b0991:;
	};
}



inline jule::Bool _1a6452e28_boolCond(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1a7a8a4c6_Prim> _773_lp = _1a7a8504d_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1a7a8d6c7_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad0b52ae:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1ad0b44bc:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad0b37a7:;
						{
							goto _match_end_1ad0b4cd6;
						}
					}
					else {
						_case_begin_1ad0b4d3b:;
						{
							return false;;
						}
					}
					_match_end_1ad0b4cd6:;
				};
			}
		}
		_match_end_1ad0b4467:;
	};
	jule::Ptr<_1bd82c384_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ad0b6dc6:;
			{
				if (_1bd82e276_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1bd830860_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ad0b6e70:;
			{
				if (_1bd82e276_ReadBool(_947_c.ptr())) {
					_1bd830860_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1ad0b5039:;
		}
		_match_end_1ad0b6d4e:;
	};
	return false;;
}



inline jule::Bool _1a6453269_strCond(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _12923_m) {
	jule::Ptr<_1a7a8a4c6_Prim> _1303_lp = _1a7a8504d_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1a7a8d95d_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad0bd9d2:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1ad0bcbe0:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad0bb75a:;
						{
							goto _match_end_1ad0bd509;
						}
					}
					else {
						_case_begin_1ad0bd55e:;
						{
							return false;;
						}
					}
					_match_end_1ad0bd509:;
				};
			}
		}
		_match_end_1ad0bcb8a:;
	};
	jule::Ptr<_1bd82c384_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ad0bd76d:;
			{
				if ((_1bd82e50c_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1a7b768e2_EmptyCompareExprModel>(_1a7b768e2_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1ad0c050b;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1a7b771d9_StrCompExprModel>(_1a7b771d9_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ad0c05a5:;
			{
				if ((_1bd82e50c_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1a7b768e2_EmptyCompareExprModel>(_1a7b768e2_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1ad0c050b;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1a7b771d9_StrCompExprModel>(_1a7b771d9_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1ad0c050b:;
	};
	return true;;
}



inline jule::Bool _1a6453720_tryNeutralElement1(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _18635_m, jule::Ptr<_1bd82c384_Const> _18660_c, jule::Ptr<_1a7999eda_OperandExprModel>* _18672_nc) {
	if (_1bd831b08_IsStr(_18660_c.ptr())) {
		if ((!(_1a64612bb_Str))) {
			return false;;
		};
		if (((_1bd82e50c_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a6460397_Math)) || (_1bd830046_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ad0c91a2:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad0c9d62:;
			{
				_1bd8302ee_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ad0c9dc8:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1ad0c9c30:;
	};
	return false;;
}



inline jule::Bool _1a6453a61_tryNeutralElement(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad0cd34e:;
			{
				jule::Ptr<_1bd82c384_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1bd82c384_Const>();;
				return _1a6453720_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1ad0cd2d8:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad0cd7c2:;
			{
				jule::Ptr<_1bd82c384_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1bd82c384_Const>();;
				return _1a6453720_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1ad0cd75b:;
	};
	return false;;
}



inline void _1a6453d19_checkBinaryForBoundary(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad0d1c6a:;
			{
				jule::Ptr<_1a79a2d39_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a79a2d39_BuiltinLenCallExprModel>();;
				if ((!(_1a645debc_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1ad0d4eb0:;
							{
								jule::Ptr<_1bd82c384_Const> _26310_c = jule::new_ptr<_1bd82c384_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19))));;
								_1bd8343d0_Sub(_26310_c, (*(static__1bd82c7c4_NewI64(1LL))));
								_1a645c2b7_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a645e286_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type19));
							}
						}
						_match_end_1ad0d4e49:;
					};
					return;;
				};
				_1a645c2b7_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a645e286_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ad0d1c04:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad0d22ba:;
			{
				jule::Ptr<_1a79a2d39_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a79a2d39_BuiltinLenCallExprModel>();;
				if ((!(_1a645debc_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1ad0db934:;
							{
								jule::Ptr<_1bd82c384_Const> _28610_c = jule::new_ptr<_1bd82c384_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19))));;
								_1bd8343d0_Sub(_28610_c, (*(static__1bd82c7c4_NewI64(1LL))));
								_1a645c2b7_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a645e286_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type19));
							}
						}
						_match_end_1ad0db8bd:;
					};
					return;;
				};
				_1a645c2b7_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a645e286_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ad0d2254:;
	};
}



inline void _1a64540c2_checkBinaryForNil(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1a7b7bb4a_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1a7b7b809_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1ad0e2286:;
				{
					_1a7b7a60a_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1ad0e2220:;
		};
		return;;
	};
	_3017_var=_1a7b7bb4a_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1a7b7b809_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1ad0e492b:;
				{
					_1a7b7a60a_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1ad0e48b5:;
		};
		return;;
	};
}



inline void _1a645437a_binary(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _32922_m) {
	_1a6453d19_checkBinaryForBoundary(_self_, &(_32922_m));
	_1a64540c2_checkBinaryForNil(_self_, &(_32922_m));
	if (_1a6461079_Cond) {
		{
			
			if (_1a6453269_strCond(_self_, _32922_m) || _1a6452e28_boolCond(_self_, &(_32922_m)) || _1a6452ad7_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1ad0e6851:;
				{
					return;;
				}
			}
			_match_end_1ad0e6730:;
		};
	};
	if (_1a6453a61_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1a6460397_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad0e7687:;
			{
				goto _match_end_1ad0e7a50;
			}
		}
		else {
			_case_begin_1ad0e7aa5:;
			{
				return;;
			}
		}
		_match_end_1ad0e7a50:;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _3623_lp = _1a7a8504d_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _3663_rp = _1a7a8504d_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad0ea723:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a645624a_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1bd82c384_Const> _3779_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
					_1bd8305a7_SetU64(_3779_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ad0ea327:;
			{
				jule::Bool _3844_ok;
				jule::U64 _3848_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a645624a_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3844_ok = __jule_assign_result.__jule_result_arg0;
					_3848_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3844_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1bd82c384_Const> _3889_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
					_1bd8305a7_SetU64(_3889_c.ptr(), _3848_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ad0ea39e:;
			{
				jule::Ptr<_1bd82c384_Const> _3958_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
				if ((_1bd830046_AsF64(_3958_c.ptr()) == 2LL)) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1bd8302ee_SetI64(_3958_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1ad0e9e5e:;
			{
				return;;
			}
		}
		_match_end_1ad0ea2b1:;
	};
	jule::Any _4107_model = jule::Any(jule::new_ptr<_1a7b77a69_UnsafeBinaryExprModel>(_1a7b77a69_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type123);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4107_model))))));
}



inline void _1a6454633_unary(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799a8ae_UnaryExprModel> _41421_m) {
	if ((!(_1a6460bb1_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41421_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad104342:;
			{
				{
					auto &_match_expr{ (*((*(_41421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ad105673:;
						{
							jule::Ptr<_1a799a8ae_UnaryExprModel> _4229_um = (*((*(_41421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a799a8ae_UnaryExprModel>();;
							if (((*((*(_4229_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4229_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1ad10560c:;
				};
				if ((!(_1a6460650_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a7b7b809_isNilValidType((*(*(_41421_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4365_var = _1a7b7bb4a_getNilVar((*(*(_41421_m))._field_Expr.alloc)._field_Model);;
					if (_1a7b7ac8c_isSafe((*((*(_self_))._field_data))._field_nils, _4365_var)) {
						jule::Any _43810_model = jule::Any(jule::new_ptr<_1a7b78d78_UnsafeDerefExprModel>(_1a7b78d78_UnsafeDerefExprModel{._field_Base=_41421_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_43810_model))))));
						return;;
					};
					_1a7b7a60a_pushVar((*((*(_self_))._field_data))._field_nils, _4365_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad1049a2:;
			{
				{
					auto &_match_expr{ (*((*(_41421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad10b16d:;
						{
							jule::Ptr<_1a685a682_Var> _4489_v = (*((*(_41421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
							if ((*(_4489_v))._field_Reference) {
								jule::Any _45010_model = jule::Any(jule::new_ptr<_1a7b76c66_RefExprModel>(_1a7b76c66_RefExprModel{._field_Var=_4489_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_45010_model))))));
							};
						}
					}
					_match_end_1ad10b107:;
				};
			}
		}
		_match_end_1ad104908:;
	};
}



inline void _1a64548db_structureLit(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799b283_StructLitExprModel> _45728_m) {
	{
		auto expr = &((*(_45728_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad10b514:;
		if (it != expr_end) {
			jule::Ptr<_1a799addc_StructArgExprModel> _45815_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a645dc03_isBoundaryRiskyType((*((*(_45815_arg))._field_Expr))._field_Kind)) {
						_1a645d939_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_45815_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a7b7b177_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45815_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a64587d0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45815_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1ad10b514:;
			++it;
			goto _iter_begin_1ad10b514;
		}
		_iter_end_1ad10b514:;
	};
}



inline void _1a6454b94_casting(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799bb13_CastingExprModel> _47323_m) {
	jule::Bool _4743_valid = _1a6458add_isDynamicValidType((*(_47323_m))._field_ExprKind);;
	jule::Uintptr _4753_var = _1a645935d_getDynamicVar((*((*_47323_m.alloc)._field_Expr))._field_Model);;
	if (((_4743_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a64583e5_isFits((*((*(_self_))._field_data))._field_dynamic, _4753_var, (*_47323_m.alloc)._field_Kind))) {
		jule::Any _4778_model = jule::Any(jule::new_ptr<_1a7b79175_UnsafeCastingExprModel>(_1a7b79175_UnsafeCastingExprModel{._field_Base=_47323_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4778_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4743_valid)) {
		_1a6457ba8_pushVar((*((*(_self_))._field_data))._field_dynamic, _4753_var, (*_47323_m.alloc)._field_Kind);
	};
}



inline void _1a6455007_args(_1a6452015_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a79aa281_ParamIns>> _48720_params, jule::Slice<jule::Any>* _48746_args) {
	{
		auto expr = _48746_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1164db:;
		if (it != expr_end) {
			jule::I64 _4888_i = it - expr->begin();
			jule::Any _48815_arg = *it;
			{
				if ((_4888_i >= _48720_params.len())) {
					goto _iter_next_1ad1164db;
				};
				jule::Ptr<_1a79aa281_ParamIns> _4928_p = _48720_params[_4888_i];;
				if (((*((*(_4928_p))._field_Decl))._field_Mutable && (*(*(_4928_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1a645dc03_isBoundaryRiskyType((*_4928_p.alloc)._field_Kind)) {
							_1a645d939_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _48815_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1a7b7b177_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _48815_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1a64587d0_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _48815_arg);
					};
				};
			}
			_iter_next_1ad1164db:;
			++it;
			_4888_i++;
			goto _iter_begin_1ad1164db;
		}
		_iter_end_1ad1164db:;
	};
}



inline void _1a64552b0_scope(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a680dba7_Scope>* _50922_s) {
	jule::Ptr<_1a644a519_scopeOptimizer> _5107_scopt = static__1a644aa8b_new((*(_50922_s)));;
	(*(_5107_scopt))._field_data=(*(_self_))._field_data;
	_1a644ec05_optimize(_5107_scopt);
}



inline void _1a6455568_funcCall(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799c4b5_FnCallExprModel> _51524_m) {
	_1a6455007_args(_self_, (*((*(_51524_m))._field_Func))._field_Params, &((*_51524_m.alloc)._field_Args));
	if (((*_51524_m.alloc)._field_Except != nullptr)) {
		_1a64552b0_scope(_self_, &((*_51524_m.alloc)._field_Except));
	};
}



inline void _1a6455821_indexing(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799cd45_IndexingExprModel> _52224_m) {
	if ((!(_1a6460650_Access))) {
		return;;
	};
	jule::Bool _5273_array = (_1a7a85d1d_Arr((*((*(_52224_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5273_array && _1a7a51e0a_IsConst((*_52224_m.alloc)._field_Index.ptr()))) {
		jule::Any _5308_model = jule::Any(jule::new_ptr<_1a7b77dee_UnsafeIndexingExprModel>(_1a7b77dee_UnsafeIndexingExprModel{._field_Node=_52224_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5308_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a645debc_isBoundaryValidType((*(*(_52224_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5364_var = _1a645e286_getBoundaryVar((*(*(_52224_m))._field_Expr.alloc)._field_Model);;
		if (_1a645ca04_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5364_var, (*(*(_52224_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5389_model = jule::Any(jule::new_ptr<_1a7b77dee_UnsafeIndexingExprModel>(_1a7b77dee_UnsafeIndexingExprModel{._field_Node=_52224_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5389_model))))));
			return;;
		};
		_1a645c2b7_pushVar((*((*(_self_))._field_data))._field_boundary, _5364_var, (*(*(_52224_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1a6455ac9_anonFunc(_1a6452015_exprOptimizer* _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel> _54624_m) {
	_1a64552b0_scope(_self_, &((*((*(_54624_m))._field_Func))._field_Scope));
}



inline void _1a6455cc7_do(_1a6452015_exprOptimizer* _self_) {
	_1a643e6a6_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ad125770, jule::Ptr<__jule_anon_1ad125770_ctx>::make(__jule_anon_1ad125770_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad125770_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1a6452015_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "inspector:" << _Src._field_inspector;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6457405_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1a6457ba8_pushVar(jule::Ptr<_1a6457746_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a7a828ec_TypeKind> _3242_kind) {
	if (((!(_1a6462135_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1a645901c_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad134bd0:;
		if (it != expr_end) {
			_1a6457405_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1ad134bd0:;
			++it;
			goto _iter_begin_1ad134bd0;
		}
		_iter_end_1ad134bd0:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad135692:;
		if (it != expr_end) {
			_1a6457405_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1a7a828ec_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1ad135692:;
			++it;
			goto _iter_begin_1ad135692;
		}
		_iter_end_1ad135692:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1a6457405_dynamicVar>::make({_1a6457405_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}}));
}



inline jule::Bool _1a6457ee9_removeVar(_1a6457746_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad13782b:;
			if (it != expr_end) {
				_1a6457405_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1ad13782b:;
				++it;
				goto _iter_begin_1ad13782b;
			}
			_iter_end_1ad13782b:;
		};
	};
	return false;;
}



inline jule::Bool _1a64583e5_isFits(_1a6457746_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a7a828ec_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad1391ac:;
			if (it != expr_end) {
				_1a6457405_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1a7a83106_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1ad1391ac:;
				++it;
				goto _iter_begin_1ad1391ac;
			}
			_iter_end_1ad1391ac:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6457746_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1a6459dca_dataCheckpoint _1a645a749_getCheckpoint(_1a645a3c5_data* _self_) {
	_1a6459dca_dataCheckpoint _257_c = _1a6459dca_dataCheckpoint{};;
	_257_c._field_boundary._field_vars=jule::append(jule::Slice<_1a645ba14_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad13b038:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1ad13b038:;
			++it;
			_277_i++;
			goto _iter_begin_1ad13b038;
		}
		_iter_end_1ad13b038:;
	};
	_257_c._field_nils._field_vars=jule::append(jule::Slice<_1a7b79d57_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(jule::Slice<_1a6457405_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1a645aa02_loadCheckpoint(_1a645a3c5_data* _self_, _1a6459dca_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1a645a3c5_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a645ba14_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1a645c2b7_pushVar(_1a645bd55_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1a6460650_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1a645cdbc_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15013a:;
		if (it != expr_end) {
			_1a645ba14_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad150da5:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1a645d609_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1ad150da5:;
							++it;
							_349_i++;
							goto _iter_begin_1ad150da5;
						}
						_iter_end_1ad150da5:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1ad15013a:;
			++it;
			goto _iter_begin_1ad15013a;
		}
		_iter_end_1ad15013a:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad150976:;
		if (it != expr_end) {
			_1a645ba14_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1ad150976:;
			++it;
			goto _iter_begin_1ad150976;
		}
		_iter_end_1ad150976:;
	};
	{ jule::Slice<_1a645ba14_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a645ba14_boundaryVar{._field_var=_2423_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2441_maxSize})}); };
}



inline jule::Bool _1a645ca04_fitsMaxSize(_1a645bd55_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad155739:;
			if (it != expr_end) {
				_1a645ba14_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1a645d285_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1ad155739:;
				++it;
				goto _iter_begin_1ad155739;
			}
			_iter_end_1ad155739:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a645bd55_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a86cba51_Optimizer> static__1a86cbec4_New(jule::Ptr<_1a6439bac_IR>* _2621_ir) {
	return jule::new_ptr<_1a86cba51_Optimizer>(_1a86cba51_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1a86cc27c_optimizeGlobal(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a685a682_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1a64524aa_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a86cc535_optimizeFunction(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a79a8328_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15a794:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1a644a519_scopeOptimizer> _438_so = static__1a644aa8b_new((*(_4215_ins))._field_Scope);;
				_1a644ec05_optimize(_438_so);
			}
			_iter_next_1ad15a794:;
			++it;
			goto _iter_begin_1ad15a794;
		}
		_iter_end_1ad15a794:;
	};
}



inline void _1a86cc7dd_optimizeStruct(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a7993357_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15be49:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad15c840:;
					if (it != expr_end) {
						jule::Ptr<_1a7995535_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1a64524aa_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1ad15c840:;
						++it;
						goto _iter_begin_1ad15c840;
					}
					_iter_end_1ad15c840:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad15cc80:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _5816_m = *it;
						{
							_1a86cc535_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1ad15cc80:;
						++it;
						goto _iter_begin_1ad15cc80;
					}
					_iter_end_1ad15cc80:;
				};
			}
			_iter_next_1ad15be49:;
			++it;
			goto _iter_begin_1ad15be49;
		}
		_iter_end_1ad15be49:;
	};
}



inline void _1a86cca96_optimizeGlobals(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15e0a0:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad15eda3:;
					if (it != expr_end) {
						jule::Ptr<_1a685a682_Var> _6616_v = *it;
						{
							_1a86cc27c_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1ad15eda3:;
						++it;
						goto _iter_begin_1ad15eda3;
					}
					_iter_end_1ad15eda3:;
				};
			}
			_iter_next_1ad15e0a0:;
			++it;
			goto _iter_begin_1ad15e0a0;
		}
		_iter_end_1ad15e0a0:;
	};
}



inline void _1a86ccd4e_optimizeFunctions(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad160436:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1612a0:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _7416_func = *it;
						{
							_1a86cc535_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1ad1612a0:;
						++it;
						goto _iter_begin_1ad1612a0;
					}
					_iter_end_1ad1612a0:;
				};
			}
			_iter_next_1ad160436:;
			++it;
			goto _iter_begin_1ad160436;
		}
		_iter_end_1ad160436:;
	};
}



inline void _1a86cd107_optimizeStructs(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad161833:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad16269c:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> _8216_s = *it;
						{
							_1a86cc7dd_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1ad16269c:;
						++it;
						goto _iter_begin_1ad16269c;
					}
					_iter_end_1ad16269c:;
				};
			}
			_iter_next_1ad161833:;
			++it;
			goto _iter_begin_1ad161833;
		}
		_iter_end_1ad161833:;
	};
}



inline void _1a86cd3b0_optimizePackage(_1a86cba51_Optimizer* _self_, jule::Ptr<_1a681a39a_Package>* _8836_p) {
	_1a86cca96_optimizeGlobals(_self_, _8836_p);
	_1a86ccd4e_optimizeFunctions(_self_, _8836_p);
	_1a86cd107_optimizeStructs(_self_, _8836_p);
}



inline void _1a86cd5ad_Optimize(_1a86cba51_Optimizer* _self_) {
	_1a86cd855_detectEnabled();
	if (_1a645ece2_Deadcode) {
		_1a86c5484_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a86cb853_scopeEnabled || _1a86cb567_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad16468d:;
			if (it != expr_end) {
				jule::Ptr<_1a6817474_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1a86cd3b0_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1ad16468d:;
				++it;
				goto _iter_begin_1ad16468d;
			}
			_iter_end_1ad16468d:;
		};
		_1a86cd3b0_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a645ece2_Deadcode) {
		_1a86ca08d_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a86cba51_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a86cdda5_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1a8701e2d_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1918_escape);
	jule::out(_1931_text);
	static__1a86cdda5_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1a87030a5_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a8704903_LogFlat(_1d974c80a_Log* _1421_l) {
	jule::outln((*(_1421_l))._field_Text);
}



inline void static__1a8704b34_LogError(_1d974c80a_Log* _1922_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1922_l))._field_Text);
	static__1a86cdda5_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1922_l))._field_Path);
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1bd81e354_Itoa((*(_1922_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1bd81e354_Itoa((*(_1922_l))._field_Column));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1d96a57c9_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1d96a4355_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _434_row = _1bd81e354_Itoa((*(_1922_l))._field_Row);;
		jule::out(_434_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_388_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1d969d5e6_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1d969d5e6_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1d969d5e6_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1a8701e2d_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1922_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1a8704d65_Log(_1d974c80a_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1ad16d4bb:;
			{
				static__1a8704903_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1ad171623:;
			{
				static__1a8704b34_LogError(_6417_l);
			}
		}
		_match_end_1ad171535:;
	};
}



inline void static__1a8705096_PrintLogs(jule::Slice<_1d974c80a_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad172107:;
		if (it != expr_end) {
			_1d974c80a_Log *_7510_l = it;
			{
				static__1a8704d65_Log(_7510_l);
			}
			_iter_next_1ad172107:;
			++it;
			goto _iter_begin_1ad172107;
		}
		_iter_end_1ad172107:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1bd81e354_Itoa((*(_7423_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1a8704628_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e3c810_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a9e3ced6_Time static__1a9e3d38d_Unix(jule::U64 _9117_sec) {
	return _1a9e3ced6_Time{._field_sec=_9117_sec};;
}



inline _1a9e3ced6_Time static__1a9e3d59c_Now(void) {
	return static__1a9e3d38d_Unix(_1a9e400c6_unix());;
}



inline _1a9e3c810_AbsTime _1a9e3ec85_Abs(_1a9e3ced6_Time* _self_) {
	jule::U64 _1273_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (((_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (365LLU + _1607_leap))) {
		_1647_yDay-=(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a9e3bc71_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a9e3bc71_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1ad1a4d60:;
	}
	_iter_end_1ad1a4d60:;;
	_1a9e3c810_AbsTime _1747_t = _1a9e3c810_AbsTime{};;
	_1747_t._field_Year=((((_1547_remYears + (4LLU * _1487_qCycles)) + (100LLU * _1427_cCycles)) + (400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(jule::div(_1297_remSecs,60LLU) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e3ced6_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d6c6eb_scopeCoder> static__1a9d6cd5b_new(jule::Ptr<_1a9e48563_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1a9d6c6eb_scopeCoder>(_1a9d6c6eb_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1ad2497c8_iterHead(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a645e9e5_Copy && _1a9d74a22_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad24cb3e:;
				{
					jule::Ptr<_1a685a682_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1a9d85a44_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1ad24d29e;
					};
					goto _case_begin_1ad24d304;
				}
			}
			else {
				_case_begin_1ad24d304:;
				{
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a9d85a44_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ad24d29e:;
		};
	} else {
		_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, _8052_begin);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
}



inline void _1a9d6d532_rangeIndexIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter>* _12936_it) {
	_200880c8a_StrBuilder _1307_sb = static__2008811b9_New(64LL);;
	static__1a9d8e003_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _200882022_Str(&_1307_sb);;
	_200882220_Clear(&_1307_sb);
	static__1a9d8e5ca_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _200882022_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1ad2497c8_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1a9e50d73_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad25a278, jule::Ptr<__jule_anon_1ad25a278_ctx>::make(__jule_anon_1ad25a278_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1ad25a278_ctx_handler));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1a645e9e5_Copy && _1a9d74dda_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1a9e50d73_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ad25dc3d, jule::Ptr<__jule_anon_1ad25dc3d_ctx>::make(__jule_anon_1ad25dc3d_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1ad25dc3d_ctx_handler));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	_1a9d73c85_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, _1353_next);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a9e495b9_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1a9d8dc17_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a9e48c17_write((*(_self_))._field_oc, _1323_begin);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8e2de_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d6d7da_rangeHashmapIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter>* _19638_it) {
	_200880c8a_StrBuilder _1977_sb = static__2008811b9_New(64LL);;
	static__1a9d8e003_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _200882022_Str(&_1977_sb);;
	_200882220_Clear(&_1977_sb);
	static__1a9d8e5ca_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _200882022_Str(&_1977_sb);;
	jule::Bool _2047_ref = false;;
	_1ad2497c8_iterHead(_self_, _19638_it, &(_2047_ref), _1993_begin);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1a9e50d73_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad26d214, jule::Ptr<__jule_anon_1ad26d214_ctx>::make(__jule_anon_1ad26d214_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad26d214_ctx_handler));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1a9e50d73_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1ad270689, jule::Ptr<__jule_anon_1ad270689_ctx>::make(__jule_anon_1ad270689_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad270689_ctx_handler));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	_1a9d73c85_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, _2023_next);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a9e48c17_write((*(_self_))._field_oc, _1993_begin);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8e2de_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d6da93_strRuneIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b78a7b_StrRuneIter> _24332_it) {
	_200880c8a_StrBuilder _2447_sb = static__2008811b9_New(64LL);;
	static__1a9d8e003_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _200882022_Str(&_2447_sb);;
	_200882220_Clear(&_2447_sb);
	static__1a9d8e5ca_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _200882022_Str(&_2447_sb);;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a645e9e5_Copy && _1a9d74a22_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad27d598:;
				{
					jule::Ptr<_1a685a682_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1a9d85a44_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1ad27dc08;
					};
					goto _case_begin_1ad27dc5d;
				}
			}
			else {
				_case_begin_1ad27dc5d:;
				{
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a9d85a44_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1ad27dc08:;
		};
	} else {
		_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_2557_ref) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_2557_ref) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1a9e495b9_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a9e50d73_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1ad2893b7, jule::Ptr<__jule_anon_1ad2893b7_ctx>::make(__jule_anon_1ad2893b7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad2893b7_ctx_handler));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1a9e495b9_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a9e50d73_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	_1a9e48c17_write((*(_self_))._field_oc, _2463_begin);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1a9d8dc17_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9d73c85_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, _2493_next);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a9e495b9_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a9d8dc17_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a9e48c17_write((*(_self_))._field_oc, _2463_begin);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d6dd4b_ifCase(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680e0c5_If> _35127_i) {
	if (((*(_35127_i))._field_Expr != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35127_i.alloc)._field_Expr);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a9d73c85_scope(_self_, (*_35127_i.alloc)._field_Scope);
}



inline void _1a9d6e104_conditional(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680e7e0_Conditional> _36032_c) {
	jule::Bool _3617_writed = false;;
	{
		auto expr = &((*(_36032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad29e322:;
		if (it != expr_end) {
			jule::Ptr<_1a680e0c5_If> _36215_elif = *it;
			{
				if ((_36215_elif == nullptr)) {
					goto _iter_next_1ad29e322;
				};
				if (_3617_writed) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3617_writed=true;
				_1a9d6dd4b_ifCase(_self_, _36215_elif);
			}
			_iter_next_1ad29e322:;
			++it;
			goto _iter_begin_1ad29e322;
		}
		_iter_end_1ad29e322:;
	};
	if (((*_36032_c.alloc)._field_Default != nullptr)) {
		if (_3617_writed) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a9d73c85_scope(_self_, (*(*(_36032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a9d6e3ac_infIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680eadc_InfIter> _38028_it) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9d73c85_scope(_self_, (*(_38028_it))._field_Scope);
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8e5ca_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8e2de_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a9d6e665_whileIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a6810093_WhileIter> _39730_it) {
	if ((((*(_39730_it))._field_Expr != nullptr) && ((*_39730_it.alloc)._field_Next == nullptr))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39730_it))._field_Expr != nullptr)) {
			_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_39730_it.alloc)._field_Next != nullptr)) {
			_1a9d73724_st(_self_, (*_39730_it.alloc)._field_Next);
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9d73c85_scope(_self_, (*_39730_it.alloc)._field_Scope);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8e5ca_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8e2de_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a9d6e91d_rangeIter(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a68109de_RangeIter> _43630_it) {
	{
		
		if ((_1a7a860a4_Slc((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad2b4b40:;
			{
				_1a9d6d532_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a7a85d1d_Arr((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad2b47ee:;
			{
				_1a9d6d532_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a7a86add_Map((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad2b4865:;
			{
				_1a9d6d7da_rangeHashmapIter(_self_, &(_43630_it));
			}
		}
		else {
			_case_begin_1ad2b4788:;
			{
				_1a9d6d532_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		_match_end_1ad2b4689:;
	};
}



inline void _1a9d6ebc6_cont(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a636e581_ContSt> _44921_c) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9d8e5ca_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_44921_c))._field_It);
}



inline void _1a9d6ee7e_label(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d96de_Label> _45422_l) {
	static__1a9d8e8b6_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45422_l));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a9d70237_gotoSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d9aa7_GotoSt> _45923_gt) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9d8e8b6_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45923_gt))._field_Label));
}



inline void _1a9d704e0_postfix(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d9e81_Postfix> _46428_p) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46428_p))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a9e48c17_write((*(_self_))._field_oc, (*_46428_p.alloc)._field_Op);
}



inline void _1a9d70798_assign(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da437_Assign> _47127_a) {
	_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47127_a))._field_Left))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, (*((*_47127_a.alloc)._field_Op))._field_Kind);
	_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_47127_a.alloc)._field_Right))._field_Model);
}



inline void _1a9d70a51_mapLookupAssign(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _47737_a) {
	jule::Ptr<_1a799cd45_IndexingExprModel> _4787_iem = (*((*(_47737_a))))._field_Right.cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44);;
	_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_4787_iem))._field_Expr))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4787_iem.alloc)._field_Index))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47737_a))))._field_Left[0LL] != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_47737_a))))._field_Left[0LL]))._field_Model);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47737_a))))._field_Left[1LL] != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_47737_a))))._field_Left[1LL]))._field_Model);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d70d09_multiAssignTup(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _50036_a) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1a79a0ba0_TupleExprModel> _5047_tup = (*((*(_50036_a))))._field_Right.cast_ptr<_1a79a0ba0_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_5047_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ca1c7:;
		if (it != expr_end) {
			jule::I64 _5068_i = it - expr->begin();
			jule::Ptr<_1a7a51503_Data> _50615_r = *it;
			{
				_1a9e495b9_indent((*(_self_))._field_oc);
				jule::Ptr<_1a7a51503_Data> _5088_l = (*((*(_50036_a))))._field_Left[_5068_i];;
				if ((_5088_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5088_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad2cceaa:;
							{
								jule::Ptr<_1a685a682_Var> _51210_v = (*(_5088_l))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
								if (((*(_51210_v))._field_Reference && (!(_1a685aa5b_IsInitialized(_51210_v))))) {
									static__1a9d8dc17_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _51210_v);
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_50615_r))._field_Model);
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_50036_a))))._field_Left[_5068_i]=nullptr;
									goto _iter_next_1ad2ca1c7;
								};
							}
						}
						_match_end_1ad2cce55:;
					};
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5088_l.alloc)._field_Kind);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a9d8be68_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a9d6be8c_assignArgName, static_cast<jule::Uintptr>(_5068_i));
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_50615_r.alloc)._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad2ca1c7:;
			++it;
			_5068_i++;
			goto _iter_begin_1ad2ca1c7;
		}
		_iter_end_1ad2ca1c7:;
	};
	{
		auto expr = &((*((*(_50036_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2d3c6e:;
		if (it != expr_end) {
			jule::I64 _5338_i = it - expr->begin();
			jule::Ptr<_1a7a51503_Data> _53315_l = *it;
			{
				if ((_53315_l == nullptr)) {
					goto _iter_next_1ad2d3c6e;
				};
				_1a9e495b9_indent((*(_self_))._field_oc);
				_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_53315_l))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a9d8be68_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a9d6be8c_assignArgName, static_cast<jule::Uintptr>(_5338_i));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad2d3c6e:;
			++it;
			_5338_i++;
			goto _iter_begin_1ad2d3c6e;
		}
		_iter_end_1ad2d3c6e:;
	};
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9d710b2_multiAssignFn(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign>* _54935_a) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	jule::Ptr<_1a799c4b5_FnCallExprModel> _5547_f = (*((*(_54935_a))))._field_Right.cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33);;
	_1a9e634a1_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_5547_f))._field_Func))._field_Result));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_54935_a))))._field_Right);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a7a905b9_Tuple> _5607_tup = _1a7a86d74_Tup((*(*(_5547_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54935_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2dd64c:;
		if (it != expr_end) {
			jule::I64 _5618_i = it - expr->begin();
			jule::Ptr<_1a7a51503_Data> _56115_l = *it;
			{
				if ((_56115_l != nullptr)) {
					;
					_1a9e495b9_indent((*(_self_))._field_oc);
					_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_56115_l.alloc)._field_Model);
					{
						
						if (_1a7a83106_Equal((*(_5607_tup))._field_Types[_5618_i], (*_56115_l.alloc)._field_Kind)) {
							_case_begin_1ad2e8cea:;
							{
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_5618_i));
							}
						}
						else if (_1a6445bb8_IsAny(&((*_56115_l.alloc)._field_Kind))) {
							_case_begin_1ad2e5c09:;
							{
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_5618_i));
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_1a9e4a3cd_pushAnyType((*(_self_))._field_oc, (*(_5607_tup))._field_Types[_5618_i])));
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1ad2debae:;
							{
								if ((_1a7a86857_Trait((*(_5607_tup))._field_Types[_5618_i].ptr()) != nullptr)) {
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
									jule::Ptr<_1a79bb6d2_Trait> _58011_t1 = _1a7a86857_Trait((*_56115_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1a79bb6d2_Trait> _58111_t2 = _1a7a86857_Trait((*(_5607_tup))._field_Types[_5618_i].ptr());;
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_5618_i));
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
									_1a9e4aca2_pushAndWriteMaskMapper((*(_self_))._field_oc, _58011_t1, _58111_t2);
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1ad2e0bd2;
								};
								jule::Ptr<_1a79bb6d2_Trait> _5896_t = _1a7a86857_Trait((*(_56115_l))._field_Kind);;
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
								_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_5618_i));
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
								static__1a9d8cc7c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _5896_t);
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
								_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_1a6448627_FindTraitTypeOffset(_5896_t, (*(_5607_tup))._field_Types[_5618_i])));
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1ad2e0bd2:;
					};
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1ad2dd64c:;
			++it;
			_5618_i++;
			goto _iter_begin_1ad2dd64c;
		}
		_iter_end_1ad2dd64c:;
	};
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9d7136a_multiAssign(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79da8dd_MultiAssign> _60732_a) {
	{
		auto expr = &((*(_60732_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2ee839:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _61015_d = *it;
			{
				_1a9e50d73_varInitExpr((*(_self_))._field_oc, &(_61015_d), nullptr);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1a9e495b9_indent((*(_self_))._field_oc);
			}
			_iter_next_1ad2ee839:;
			++it;
			goto _iter_begin_1ad2ee839;
		}
		_iter_end_1ad2ee839:;
	};
	{
		auto &_match_expr{ (*(_60732_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad300054:;
			{
				_1a9d70a51_mapLookupAssign(_self_, &(_60732_a));
				return;;
			}
		}
		_match_end_1ad2eeeee:;
	};
	{
		auto &_match_expr{ (*(_60732_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad30021e:;
			{
				_1a9d70d09_multiAssignTup(_self_, &(_60732_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad307149:;
			{
				_1a9d710b2_multiAssignFn(_self_, &(_60732_a));
			}
		}
		else {
			_case_begin_1ad3067db:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:629:4"));;
			}
		}
		_match_end_1ad306786:;
	};
}



inline jule::Fn<void> _1a9d716ab_matchExpr(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79db04d_Match> _63330_m) {
	if ((!(_1a7a51e0a_IsConst((*(_63330_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ad308c3e, jule::Ptr<__jule_anon_1ad308c3e_ctx>::make(__jule_anon_1ad308c3e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad308c3e_ctx_handler);;
	};
	if (((!(_1bd831872_IsBool((*(*(_63330_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1bd82e276_ReadBool((*((*(_63330_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ad30a04d, jule::Ptr<__jule_anon_1ad30a04d_ctx>::make(__jule_anon_1ad30a04d_ctx{._self_=_self_,._63330_m=_63330_m}).as<jule::Uintptr>(), __jule_anon_1ad30a04d_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a9d71a1e_case(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79db04d_Match> _64325_m, jule::Ptr<_1a79dbb97_Case> _64340_c) {
	if ((((*(_64340_c))._field_Exprs.len() != 0LL) && (!((*(_64325_m))._field_Comptime)))) {
		if ((((*_64325_m.alloc)._field_Cases.len() > 0LL) && ((*(_64325_m))._field_Cases[0LL] == _64340_c))) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_64340_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad30e173:;
			if (it != expr_end) {
				jule::I64 _6509_i = it - expr->begin();
				jule::Ptr<_1a7a51503_Data> _65016_expr = *it;
				{
					{
						
						if ((!((*_64325_m.alloc)._field_TypeMatch))) {
							_case_begin_1ad317962:;
							{
								jule::Fn<void> _6536_caseExpr = _1a9d716ab_matchExpr(_self_, _64325_m);;
								if (_1a7a5224b_GoodOperand((*_64325_m.alloc)._field_Expr.ptr(), &(_65016_expr))) {
									if ((_6536_caseExpr != nullptr)) {
										_6536_caseExpr();
										_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_65016_expr))._field_Model);
								} else {
									_1a9d7b177_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_65016_expr))._field_Model);
									if ((_6536_caseExpr != nullptr)) {
										_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_6536_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1ad30ed55:;
							{
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a7a828ec_TypeKind> _66910_tk = (*(_65016_expr))._field_Model.cast_ptr<_1a7a828ec_TypeKind>(&__jule_any_type84);;
								if ((_1a7a86857_Trait((*((*_64325_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a9d7875c_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a7a852d4_Sptr((*(_65016_expr))._field_Kind) != nullptr));
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a9d8cc7c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7a86857_Trait((*((*(_64325_m))._field_Expr))._field_Kind));
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_1a6448627_FindTraitTypeOffset(_1a7a86857_Trait((*((*(_64325_m))._field_Expr))._field_Kind), (*_65016_expr.alloc)._field_Kind)));
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _6797_j = _1a9e4a3cd_pushAnyType((*(_self_))._field_oc, _66910_tk);;
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_6797_j));
								};
							}
						}
						_match_end_1ad30ec56:;
					};
					if ((((*_64340_c.alloc)._field_Exprs.len() - _6509_i) > 1LL)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1ad30e173:;
				++it;
				_6509_i++;
				goto _iter_begin_1ad30e173;
			}
			_iter_end_1ad30e173:;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_64325_m))._field_Default == _64340_c) && ((*_64325_m.alloc)._field_Cases.len() != 0LL))) {
		_1a9e495b9_indent((*(_self_))._field_oc);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8ee8d_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_64340_c));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_64340_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a9e495b9_indent((*(_self_))._field_oc);
		_1a9d73c85_scope(_self_, (*_64340_c.alloc)._field_Scope);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d71cc7_matchSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79db04d_Match> _71328_m) {
	if ((((*(_71328_m))._field_Cases.len() == 0LL) && ((*_71328_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_71328_m.alloc)._field_Comptime && (((*_71328_m.alloc)._field_Default == nullptr) || ((*((*((*_71328_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	if (((!((*_71328_m.alloc)._field_Comptime)) && (!(_1a7a51e0a_IsConst((*_71328_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a645e9e5_Copy && _1a9d74a22_isCopyOptimizable(&((*_71328_m.alloc)._field_Expr)))) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_71328_m))._field_Expr.alloc)._field_Model);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a9e495b9_indent((*(_self_))._field_oc);
	};
	if (((*_71328_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_71328_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad32a4be:;
			if (it != expr_end) {
				jule::Ptr<_1a79dbb97_Case> _74116_c = *it;
				{
					if ((_74116_c == nullptr)) {
						goto _iter_next_1ad32a4be;
					};
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a9e495b9_indent((*(_self_))._field_oc);
					_1a9d71a1e_case(_self_, _71328_m, _74116_c);
				}
				_iter_next_1ad32a4be:;
				++it;
				goto _iter_begin_1ad32a4be;
			}
			_iter_end_1ad32a4be:;
		};
	};
	if (((*_71328_m.alloc)._field_Default != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a9d71a1e_case(_self_, _71328_m, (*_71328_m.alloc)._field_Default);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8eba2_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_71328_m));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d72080_fallSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79dc3a1_FallSt> _76823_f) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a9d8ee8d_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_76823_f))._field_DestCase);
}



inline void _1a9d72338_breakSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79d947a_BreakSt> _77324_b) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_77324_b))._field_It != 0LLU)) {
		static__1a9d8e2de_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_77324_b.alloc)._field_It);
	} else {
		static__1a9d8eba2_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_77324_b))._field_Mtch);
	};
}



inline void _1a9d725e1_setResult(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79dc77a_RetSt> _78230_r) {
	if (((*((*((*((*(_78230_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_78230_r.alloc)._field_Expr);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a9e495b9_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_78230_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad3352dc:;
			{
				jule::Slice<jule::Ptr<_1a7a51503_Data>> _7928_datas = (*((*(_78230_r))._field_Expr.unsafe_cast_ptr<_1a79a0ba0_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_7928_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad338eb1:;
					if (it != expr_end) {
						jule::I64 _7938_i = it - expr->begin();
						jule::Ptr<_1a7a51503_Data> _79311_data = *it;
						{
							_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_7938_i));
							_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_79311_data))._field_Model);
							_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1a9e495b9_indent((*(_self_))._field_oc);
						}
						_iter_next_1ad338eb1:;
						++it;
						_7938_i++;
						goto _iter_begin_1ad338eb1;
					}
					_iter_end_1ad338eb1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad337e7c:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a9d85a44_model((*((*(_self_))._field_oc))._field_ec, (*_78230_r.alloc)._field_Expr);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1ad337aa3:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:806:4"));;
			}
		}
		_match_end_1ad337a4d:;
	};
}



inline void _1a9d72899_retSt(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79dc77a_RetSt> _81026_r) {
	if (_1a79a879b_IsVoid((*((*(_81026_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_81026_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_81026_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_81026_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_81026_r))._field_Func.alloc)._field_Result);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_81026_r.alloc)._field_Expr);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_81026_r.alloc)._field_Expr);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_81026_r))._field_Expr != nullptr)) {
		_1a9d725e1_setResult(_self_, _81026_r);
	};
	if ((*((*((*_81026_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a9e634a1_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_81026_r))._field_Func.alloc)._field_Result));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a9d72b52_var(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a685a682_Var> _84624_v) {
	if ((!((*(_84624_v))._field_Constant))) {
		_1a9e5112b_var((*(_self_))._field_oc, _84624_v);
	};
}



inline void _1a9d72e0a_mutSlicing(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b7776c_MutSlicingExprModel> _85231_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_85231_m))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_21a1bc90e_Production))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_85231_m.alloc)._field_Token));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_85231_m.alloc)._field_Left);
	if (((*_85231_m.alloc)._field_Right != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_85231_m.alloc)._field_Right);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a9d731b3_swap(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b76518_SwapExprModel> _86925_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a9d7b177_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_86925_m))._field_Left))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9d7b177_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_86925_m.alloc)._field_Right))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7346b_exceptionalForwarding(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a7b76194_ExceptionalForwardingExprModel> _87742_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a9d7cd5a_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_87742_m))._field_Expr));
}



inline void _1a9d73724_st(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Any _88323_st) {
	if ((_88323_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _88323_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad355e34:;
			{
				_1a9d73c85_scope(_self_, _88323_st.cast_ptr<_1a680dba7_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad3561ba:;
			{
				_1a9d72b52_var(_self_, _88323_st.cast_ptr<_1a685a682_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad356231:;
			{
				_1a9d85a44_model((*((*(_self_))._field_oc))._field_ec, (*(_88323_st.unsafe_cast_ptr<_1a7a51503_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad356990:;
			{
				_1a9d6e104_conditional(_self_, _88323_st.cast_ptr<_1a680e7e0_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad356a06:;
			{
				_1a9d6e3ac_infIter(_self_, _88323_st.cast_ptr<_1a680eadc_InfIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ad356a6c:;
			{
				_1a9d6e665_whileIter(_self_, _88323_st.cast_ptr<_1a6810093_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ad356ad3:;
			{
				_1a9d6e91d_rangeIter(_self_, _88323_st.cast_ptr<_1a68109de_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad356b49:;
			{
				_1a9d6ebc6_cont(_self_, _88323_st.cast_ptr<_1a636e581_ContSt>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad356bb0:;
			{
				_1a9d6ee7e_label(_self_, _88323_st.cast_ptr<_1a79d96de_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad356c26:;
			{
				_1a9d70237_gotoSt(_self_, _88323_st.cast_ptr<_1a79d9aa7_GotoSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad356c8c:;
			{
				_1a9d704e0_postfix(_self_, _88323_st.cast_ptr<_1a79d9e81_Postfix>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad356d03:;
			{
				_1a9d70798_assign(_self_, _88323_st.cast_ptr<_1a79da437_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad356d69:;
			{
				_1a9d7136a_multiAssign(_self_, _88323_st.cast_ptr<_1a79da8dd_MultiAssign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad356dd0:;
			{
				_1a9d71cc7_matchSt(_self_, _88323_st.cast_ptr<_1a79db04d_Match>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad356e57:;
			{
				_1a9d72080_fallSt(_self_, _88323_st.cast_ptr<_1a79dc3a1_FallSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad356ece:;
			{
				_1a9d72338_breakSt(_self_, _88323_st.cast_ptr<_1a79d947a_BreakSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ad357056:;
			{
				_1a9d72899_retSt(_self_, _88323_st.cast_ptr<_1a79dc77a_RetSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ad3570cd:;
			{
				_1a9d8326c_pushToSlice((*((*(_self_))._field_oc))._field_ec, _88323_st.cast_ptr<_1a7b782c8_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ad357155:;
			{
				_1a9d83525_appendToSlice((*((*(_self_))._field_oc))._field_ec, _88323_st.cast_ptr<_1a7b786a2_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ad3571cc:;
			{
				_1a9d72e0a_mutSlicing(_self_, _88323_st.cast_ptr<_1a7b7776c_MutSlicingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ad357254:;
			{
				_1a9d731b3_swap(_self_, _88323_st.cast_ptr<_1a7b76518_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad3572cb:;
			{
				_1a9d7346b_exceptionalForwarding(_self_, _88323_st.cast_ptr<_1a7b76194_ExceptionalForwardingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ad357353:;
			{
				_1a9d6da93_strRuneIter(_self_, _88323_st.cast_ptr<_1a7b78a7b_StrRuneIter>(&__jule_any_type121));
			}
		}
		else {
			_case_begin_1ad355c47:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ad355ab0:;
	};
}



inline void _1a9d739cc_scopeStmts(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680dba7_Scope>* _93932_s) {
	{
		auto expr = &((*((*(_93932_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad364cde:;
		if (it != expr_end) {
			jule::Any _94015_st = *it;
			{
				_1a9e495b9_indent((*(_self_))._field_oc);
				_1a9d73724_st(_self_, _94015_st);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad364cde:;
			++it;
			goto _iter_begin_1ad364cde;
		}
		_iter_end_1ad364cde:;
	};
}



inline void _1a9d73c85_scope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a680dba7_Scope> _94826_s) {
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	if ((*(_94826_s))._field_Deferred) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9d739cc_scopeStmts(_self_, &(_94826_s));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_94826_s.alloc)._field_Deferred) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a9d7403d_commonFuncScope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _96337_f) {
	if ((!(_1a79a879b_IsVoid((*((*(_96337_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a7a905b9_Tuple> _9658_tup = _1a7a86d74_Tup((*((*(_96337_f))))._field_Result.ptr());;
		if ((_9658_tup != nullptr)) {
			_1a9e495b9_indent((*(_self_))._field_oc);
			_1a9e62cca_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _9658_tup);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_9658_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ad36d04a:;
				if (it != expr_end) {
					jule::I64 _97010_i = it - expr->begin();
					jule::Ptr<_1a7a828ec_TypeKind> _97017_t = *it;
					{
						if (_1a9e6511d_shouldInitialized(&(_97017_t))) {
							_1a9e495b9_indent((*(_self_))._field_oc);
							_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_97010_i));
							_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a9d85cec_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _97017_t);
							_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1ad36d04a:;
					++it;
					_97010_i++;
					goto _iter_begin_1ad36d04a;
				}
				_iter_end_1ad36d04a:;
			};
		} else if (((*((*(*((*(_96337_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a9e495b9_indent((*(_self_))._field_oc);
			_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_96337_f))))._field_Result);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a9e6511d_shouldInitialized(&((*((*(_96337_f))))._field_Result))) {
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a9d85cec_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_96337_f))))._field_Result);
			};
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a9d739cc_scopeStmts(_self_, &((*((*(_96337_f))))._field_Scope));
	if (((*(*((*(_96337_f))))._field_Decl.alloc)._field_Exceptional && _1a79a879b_IsVoid((*((*(_96337_f))))._field_Decl))) {
		_1a9e495b9_indent((*_self_.alloc)._field_oc);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a9d743a1_anonFuncScope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel> _100334_m, jule::Str _100355_ident) {
	if (((*((*(_100334_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10073_closure = _1a6446009_IsClosure(&(_100334_m));;
	if (_10073_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a685a682_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1a685a682_Var>>((void*)__jule_anon_1ad37a1de, jule::Ptr<__jule_anon_1ad37a1de_ctx>::make(__jule_anon_1ad37a1de_ctx{._self_=_self_,._100334_m=_100334_m}).as<jule::Uintptr>(), __jule_anon_1ad37a1de_ctx_handler)}));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	if (_10073_closure) {
		_1a9e495b9_indent((*(_self_))._field_oc);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a9e48c17_write((*(_self_))._field_oc, _100355_ident);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a9e48c17_write((*(_self_))._field_oc, _100355_ident);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a9d7403d_commonFuncScope(_self_, &((*_100334_m.alloc)._field_Func));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_10073_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a9d74659_funcScope(jule::Ptr<_1a9d6c6eb_scopeCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _103530_f) {
	if (((*(_103530_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9d7403d_commonFuncScope(_self_, &(_103530_f));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9d6c6eb_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d77d33_exprCoder> static__1a9d781eb_new(jule::Ptr<_1a9e48563_ObjectCoder>* _11421_oc) {
	return jule::new_ptr<_1a9d77d33_exprCoder>(_1a9d77d33_exprCoder{._field_oc=(*(_11421_oc)), });;
}



inline void _1a9d784a4_string(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const>* _12024_c) {
	jule::Str _1213_content = _1bd82e50c_ReadStr((*(_12024_c)).ptr());;
	if ((_1213_content.len() == 0LL)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1263_len = _1bd81e08a_FmtInt(static_cast<jule::I64>(_1213_content.len()), 10LL);;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a9d86ade_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1213_content);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9e48c17_write((*(_self_))._field_oc, _1263_len);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7875c_boolean(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Bool _13524_b) {
	if (_13524_b) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a9d7895a_nilLit(jule::Ptr<_1a9d77d33_exprCoder> _self_) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a9d78c9b_ftoaSpecialCases(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::F64* _14734_x) {
	{
		
		if (_1bd7c379d_IsNaN((*(_14734_x)))) {
			_case_begin_1ad399cad:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1bd7c3e30_IsInf((*(_14734_x)), 1LL)) {
			_case_begin_1ad399d57:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1bd7c3e30_IsInf((*(_14734_x)), -1LL)) {
			_case_begin_1ad399dce:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ad399c25:;
			{
				return false;;
			}
		}
		_match_end_1ad399b26:;
	};
	return true;;
}



inline void _1a9d79054_float32(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const>* _16125_c) {
	jule::F64 _1623_x = _1bd830046_AsF64((*(_16125_c)).ptr());;
	if (_1a9d78c9b_ftoaSpecialCases(_self_, &(_1623_x))) {
		return;;
	};
	{
		
		if ((_1623_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ad39dee3:;
			{
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1623_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ad39d0ad:;
			{
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ad39d047:;
			{
				_1a9d86e85_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1623_x, 32LL);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1ad39ce15:;
	};
}



inline void _1a9d7930c_float64(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const>* _18025_c) {
	jule::F64 _1813_x = _1bd830046_AsF64((*(_18025_c)).ptr());;
	if (_1a9d78c9b_ftoaSpecialCases(_self_, &(_1813_x))) {
		return;;
	};
	{
		
		if ((_1813_x == jule::MAX_F64)) {
			_case_begin_1ad3a1974:;
			{
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1813_x == jule::MIN_F64)) {
			_case_begin_1ad3a159a:;
			{
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ad3a1534:;
			{
				_1a9d86e85_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1813_x, 64LL);
			}
		}
		_match_end_1ad3a1402:;
	};
}



inline void _1a9d795b5_constant(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1bd82c384_Const> _19829_c) {
	{
		
		if (_1bd831b08_IsStr(_19829_c.ptr())) {
			_case_begin_1ad3a37cd:;
			{
				_1a9d784a4_string(_self_, &(_19829_c));
			}
		}
		else if (_1bd831872_IsBool(_19829_c.ptr())) {
			_case_begin_1ad3a3844:;
			{
				_1a9d7875c_boolean(_self_, _1bd82e276_ReadBool(_19829_c));
			}
		}
		else if (_1bd831d8e_IsF64(_19829_c.ptr())) {
			_case_begin_1ad3a38aa:;
			{
				{
					
					if ((*(_19829_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1ad3a6281:;
						{
							_1a9d79054_float32(_self_, &(_19829_c));
						}
					}
					else {
						_case_begin_1ad3a5deb:;
						{
							_1a9d7930c_float64(_self_, &(_19829_c));
						}
					}
					_match_end_1ad3a5cec:;
				};
			}
		}
		else if (_1bd831355_IsI64(_19829_c.ptr())) {
			_case_begin_1ad3a3921:;
			{
				_1a9d87271_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1bd82dc59_ReadI64(_19829_c));
			}
		}
		else if (_1bd8315db_IsU64(_19829_c.ptr())) {
			_case_begin_1ad3a3987:;
			{
				_1a9d8755c_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1bd82dee0_ReadU64(_19829_c));
			}
		}
		else if (_1bd832125_IsNil(_19829_c.ptr())) {
			_case_begin_1ad3a39ed:;
			{
				_1a9d7895a_nilLit(_self_);
			}
		}
		else {
			_case_begin_1ad3a3767:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ad3a3668:;
	};
}



inline void _1a9d799d3_divByZeroBinary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a795c013_Token>* _22233_op, jule::Ptr<_1a7999eda_OperandExprModel>* _22250_l, jule::Ptr<_1a7999eda_OperandExprModel>* _22277_r) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_22233_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ad3a943d:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ad3a9dcd:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1ad3a9d45:;
	};
	if ((!(_21a1bc90e_Production))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9e4b05a_locInfo((*(_self_))._field_oc, _22233_op);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_22250_l))))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_22277_r))))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d79c8b_unsafeBinary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _24433_m) {
	if ((((*((*(_24433_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_24433_m))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1a6445bb8_IsAny(&((*((*_24433_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1a7a839ca_IsNil((*((*_24433_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1a6445bb8_IsAny(&((*(*(_24433_m))._field_Right.alloc)._field_Kind)))))) {
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*(_24433_m))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU))) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _2546_i = _1a9e4a3cd_pushAnyType((*(_self_))._field_oc, (*(*(_24433_m))._field_Right.alloc)._field_Kind);;
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_2546_i));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1a9d7b177_possibleRefExpr(_self_, (*(*(_24433_m))._field_Left.alloc)._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a9d7b177_possibleRefExpr(_self_, (*(*(_24433_m))._field_Right.alloc)._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*(*(_24433_m))._field_Left.alloc)._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9e48c17_write((*(_self_))._field_oc, (*(*(_24433_m))._field_Op.alloc)._field_Kind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*(*(_24433_m))._field_Right.alloc)._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7a044_binary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799a4d5_BinaryExprModel> _27527_m) {
	{
		auto &_match_expr{ (*((*(_27527_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ad3bb076:;
			{
				if ((_1a7a865c1_Struct((*((*(_27527_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a9d799d3_divByZeroBinary(_self_, &((*_27527_m.alloc)._field_Op), &((*_27527_m.alloc)._field_Left), &((*_27527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1ad3baebb:;
	};
	_1a9d79c8b_unsafeBinary(_self_, _27527_m);
}



inline void _1a9d7a2ec_var(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a685a682_Var> _28724_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3bd2ed:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a685a682_Var>> _28810_prefix = *it;
			{
				if (_28810_prefix(_28724_m)) {
					return;;
				};
			}
			_iter_next_1ad3bd2ed:;
			++it;
			goto _iter_begin_1ad3bd2ed;
		}
		_iter_end_1ad3bd2ed:;
	};
	if ((*(_28724_m))._field_Binded) {
		jule::Ptr<_1a79718da_Directive> _2944_d = _1a64473a1_FindDirective(&((*_28724_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_2944_d != nullptr)) {
			_1a9e48ec0_writeBytes((*_self_.alloc)._field_oc, _1a9e55e55_concatAllParts((*_2944_d.alloc)._field_Args));
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a9d8dc17_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _28724_m);
}



inline void _1a9d7a5a5_structureIns(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79960d5_StructIns> _30333_m) {
	_1a9e5b7a7_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _30333_m);
}



inline void _1a9d7a85d_unary(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799a8ae_UnaryExprModel> _30726_m) {
	{
		auto &_match_expr{ (*((*(_30726_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad3c25cc:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1a9d7b177_possibleRefExpr(_self_, (*((*(_30726_m))._field_Expr))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ad3c2bb5:;
			{
				if ((_21a1bc90e_Production || (_1a7a852d4_Sptr((*((*(_30726_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1ad3c2ac7;
				};
				_1a9d7b177_possibleRefExpr(_self_, (*(*(_30726_m))._field_Expr.alloc)._field_Model);
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_30726_m.alloc)._field_Op));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1ad3c2ac7:;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9e48c17_write((*(_self_))._field_oc, (*((*(_30726_m))._field_Op))._field_Kind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*((*_30726_m.alloc)._field_Expr))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a9d7ab16_structureLit(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799b283_StructLitExprModel> _33133_m) {
	if ((*((*((*(_33133_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a9e5b7a7_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_33133_m.alloc)._field_Strct);
	if ((*(*((*(_33133_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*_33133_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1ad3ccd79:;
		{
			auto expr = &((*(*(_33133_m))._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad3cd022:;
			if (it != expr_end) {
				jule::I64 _3448_i = it - expr->begin();
				jule::Ptr<_1a7995535_FieldIns> _34411_f = *it;
				{
					{
						auto expr = &((*_33133_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad3cdd7a:;
						if (it != expr_end) {
							jule::Ptr<_1a799addc_StructArgExprModel> _34517_arg = *it;
							{
								if (((*(_34517_arg))._field_Field == _34411_f)) {
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__1a9d8d92b_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_34517_arg.alloc)._field_Field))._field_Decl));
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1a9d7b177_possibleRefExpr(_self_, (*((*_34517_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*(_33133_m))._field_Strct.alloc)._field_Fields.len() - _3448_i) > 1LL)) {
										_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1ad3cd022;
								};
							}
							_iter_next_1ad3cdd7a:;
							++it;
							goto _iter_begin_1ad3cdd7a;
						}
						_iter_end_1ad3cdd7a:;
					};
				}
				_iter_next_1ad3cd022:;
				++it;
				_3448_i++;
				goto _iter_begin_1ad3cd022;
			}
			_iter_end_1ad3cd022:;
		};
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d7adbe_allocStructure(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799b580_AllocStructLitExprModel> _36235_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a9d8d640_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_36235_m))._field_Lit))._field_Strct));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a9d7ab16_structureLit(_self_, (*_36235_m.alloc)._field_Lit);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7b177_possibleRefExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _37032_expr) {
	{
		auto &_match_expr{ _37032_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad3d61d4:;
			{
				jule::Ptr<_1a685a682_Var> _3734_v = _37032_expr.unsafe_cast_ptr<_1a685a682_Var>();;
				if ((*(_3734_v))._field_Reference) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a9d85a44_model(_self_, _37032_expr);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1ad3d617e:;
	};
	_1a9d85a44_model(_self_, _37032_expr);
}



inline void _1a9d7b595_castTraitFromTrait(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799bb13_CastingExprModel>* _38440_m, jule::Ptr<_1a79bb6d2_Trait> _38466_t1, jule::Ptr<_1a79bb6d2_Trait> _38482_t2) {
	_1a9d7b177_possibleRefExpr(_self_, (*((*((*(_38440_m))))._field_Expr))._field_Model);
	_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a9e4aca2_pushAndWriteMaskMapper((*(_self_))._field_oc, _38466_t1, _38482_t2);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7b84d_casting(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799bb13_CastingExprModel> _39728_m) {
	{
		
		if (_1a6445bb8_IsAny(&((*(_39728_m))._field_Kind))) {
			_case_begin_1ad3dac99:;
			{
				if (_1a7a839ca_IsNil((*_39728_m.alloc)._field_ExprKind.ptr())) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a7a85a87_TypeEnum((*(_39728_m))._field_ExprKind) != nullptr)) {
					_1a9d7b177_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _4084_i = _1a9e4a3cd_pushAnyType((*(_self_))._field_oc, (*_39728_m.alloc)._field_ExprKind);;
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_39728_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad3ddc9c:;
						{
							jule::Ptr<_1a7a8a4c6_Prim> _4125_prim = _1a7a8504d_Prim((*(_39728_m))._field_ExprKind);;
							if (((_4125_prim != nullptr) && _1bd82b7a1_IsInt((*_4125_prim.alloc)._field_Kind))) {
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a9e59024_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _4125_prim);
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a9d7b177_possibleRefExpr(_self_, (*(*(_39728_m))._field_Expr.alloc)._field_Model);
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1ad3deb7c;
							};
							goto _case_begin_1ad3debd2;
						}
					}
					else {
						_case_begin_1ad3debd2:;
						{
							_1a9d7b177_possibleRefExpr(_self_, (*(*(_39728_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1ad3deb7c:;
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_4084_i));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a6445bb8_IsAny(&((*(_39728_m))._field_ExprKind))) {
			_case_begin_1ad3dad43:;
			{
				_1a9d7b177_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a7a852d4_Sptr((*_39728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7a852d4_Sptr((*(_39728_m))._field_Kind)))._field_Elem);
				} else {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_21a1bc90e_Production))) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_39728_m.alloc)._field_Token));
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_1a9e4a3cd_pushAnyType((*(_self_))._field_oc, (*_39728_m.alloc)._field_Kind)));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a7a8556a_Ptr((*(_39728_m))._field_ExprKind.ptr()) != nullptr) || (_1a7a8556a_Ptr((*_39728_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad3dada9:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a9d7b177_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a7a86857_Trait((*(_39728_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1ad3dae20:;
			{
				if ((_1a7a86857_Trait((*_39728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a9d7b595_castTraitFromTrait(_self_, &(_39728_m), _1a7a86857_Trait((*(_39728_m))._field_Kind), _1a7a86857_Trait((*(_39728_m))._field_ExprKind));
					return;;
				};
				_1a9d7b177_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a7a852d4_Sptr((*(_39728_m))._field_Kind) != nullptr)) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7a852d4_Sptr((*(_39728_m))._field_Kind)))._field_Elem);
				} else {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_21a1bc90e_Production))) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_39728_m.alloc)._field_Token));
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a9d8cc7c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7a86857_Trait((*(_39728_m))._field_ExprKind));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_1a6448627_FindTraitTypeOffset(_1a7a86857_Trait((*(_39728_m))._field_ExprKind), (*_39728_m.alloc)._field_Kind)));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a7a86857_Trait((*(_39728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad3dae86:;
			{
				_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a9d7b177_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a9d8cc7c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7a86857_Trait((*(_39728_m))._field_Kind));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_1a6448627_FindTraitTypeOffset(_1a7a86857_Trait((*(_39728_m))._field_Kind), (*_39728_m.alloc)._field_ExprKind)));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ad3dab23:;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _4943_prim = _1a7a8504d_Prim((*(_39728_m))._field_Kind.ptr());;
	jule::Ptr<_1a7a8a4c6_Prim> _4953_eprim = _1a7a8504d_Prim((*_39728_m.alloc)._field_ExprKind.ptr());;
	if ((((_4953_eprim != nullptr) && (_4943_prim != nullptr)) && _1a7a8d95d_IsStr(_4943_prim))) {
		if (_1a7a8bdbd_IsU8(_4953_eprim)) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1a9d7b177_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a9d7b177_possibleRefExpr(_self_, (*(*(_39728_m))._field_Expr.alloc)._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7bb06_models(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Slice<jule::Any> _51327_args) {
	if ((_51327_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_51327_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad418e92:;
		if (it != expr_end) {
			jule::I64 _5178_i = it - expr->begin();
			jule::Any _51715_a = *it;
			{
				_1a9d7b177_possibleRefExpr(_self_, _51715_a);
				if (((_51327_args.len() - _5178_i) > 1LL)) {
					_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1ad418e92:;
			++it;
			_5178_i++;
			goto _iter_begin_1ad418e92;
		}
		_iter_end_1ad418e92:;
	};
}



inline void _1a9d7bdae_args(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _52526_m) {
	jule::I64 _5267_j = 0LL;;
	if (((((*((*((*(_52526_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_52526_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_52526_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a79a6e70_IsSelf((*((*((*((*(_52526_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_5267_j)++;
	};
	{
		auto expr = &((*((*(_52526_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad41c160:;
		if (it != expr_end) {
			jule::I64 _5317_i = it - expr->begin();
			jule::Any _53110_arg = *it;
			{
				jule::Ptr<_1a79aa281_ParamIns> _5324_p = (*(*((*(_52526_m))))._field_Func.alloc)._field_Params[_5267_j];;
				if ((((*(_5324_p))._field_Decl != nullptr) && (*(*(_5324_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _53110_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad41ee54:;
							{
								jule::Ptr<_1a685a682_Var> _5366_v = _53110_arg.unsafe_cast_ptr<_1a685a682_Var>();;
								if ((*(_5366_v))._field_Reference) {
									_1a9d85a44_model(_self_, _53110_arg);
									goto _julec_label_1ad41e89e;
								};
							}
						}
						_match_end_1ad41edee:;
					};
					_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a9d85a44_model(_self_, _53110_arg);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1ad41e89e;
				};
				_1a9d7b177_possibleRefExpr(_self_, _53110_arg);
				_julec_label_1ad41e89e:;
				if ((((*((*(_52526_m))))._field_Args.len() - _5317_i) > 1LL)) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_5267_j)++;
			}
			_iter_next_1ad41c160:;
			++it;
			_5317_i++;
			goto _iter_begin_1ad41c160;
		}
		_iter_end_1ad41c160:;
	};
}



inline void _1a9d7c167_modelForCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _55633_expr) {
	{
		auto &_match_expr{ _55633_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad424c8e:;
			{
				_1a9d806dc_funcIns(_self_, _55633_expr.cast_ptr<_1a79ab309_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad424ae6:;
			{
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _5628_ssie = _55633_expr.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>();;
				if (((*(_5628_ssie))._field_Method != nullptr)) {
					_1a9d806dc_funcIns(_self_, (*_5628_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1ad424c28:;
	};
	_1a9d7b177_possibleRefExpr(_self_, _55633_expr);
}



inline void _1a9d7c420_pushCallInf(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _57129_m) {
	if ((_21a1bc90e_Production || (!((*((*((*(_57129_m))))._field_Func))._field_Anon)))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_57129_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_57129_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ad428798:;
				{
					if ((*((*((*((*((*((*(_57129_m))))._field_Expr.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1ad428743:;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*((*(_57129_m))))._field_Token));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_57129_m))))._field_Args.len() != 0LL)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a9d7c761_isWrapped(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _59431_m) {
	if ((((!(_1a79ac78e_IsBuiltin((*((*(_59431_m))))._field_Func.ptr()))) && ((*((*(*((*(_59431_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a79a6e70_IsSelf((*((*((*((*(_59431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_59431_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ad42d506:;
				{
					jule::Ptr<_1a79a0133_StructSubIdentExprModel> _5989_ssie = (*((*(_59431_m))))._field_Expr.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>();;
					{
						
						if (_1a79a7206_IsRef((*((*((*((*(_59431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a7a852d4_Sptr((*((*(_5989_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ad4301d9:;
							{
								goto _match_end_1ad42e44c;
							}
						}
						else {
							_case_begin_1ad42e4b3:;
							{
								if ((_1a7a865c1_Struct((*((*(_5989_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_5989_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a9d85a44_model(_self_, (*(*(_5989_ssie))._field_Expr.alloc)._field_Model);
										_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ad42e44c:;
					};
				}
			}
			_match_end_1ad42d4a1:;
		};
	};
	return false;;
}



inline jule::Bool _1a9d7caa2_writeReceiver(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _61834_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _61834_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad434c9e:;
			{
				_1a9d7b177_possibleRefExpr(_self_, (*((*(_61834_m.unsafe_cast_ptr<_1a799a8ae_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ad434e9c:;
			{
				_1a9d7b177_possibleRefExpr(_self_, (*((*((*(_61834_m.unsafe_cast_ptr<_1a7b78d78_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad434e36:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:627:4"));;
			}
		}
		_match_end_1ad434dd1:;
	};
}



inline void _1a9d7cd5a_pureFuncCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _63134_m) {
	jule::Bool _6323_wrapped = _1a9d7c761_isWrapped(_self_, _63134_m);;
	_1a9d7c167_modelForCall(_self_, (*((*(_63134_m))))._field_Expr);
	if ((!(_1a79ac78e_IsBuiltin((*((*(_63134_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_63134_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_63134_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a6447769_HasDirective(&((*(*((*((*(_63134_m))))._field_Func))._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_63134_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad4390a0:;
					if (it != expr_end) {
						jule::I64 _63811_i = it - expr->begin();
						jule::Ptr<_1a7a81016_InsGeneric> _63818_g = *it;
						{
							_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_63818_g))._field_Kind);
							if ((((*(*((*(_63134_m))))._field_Func.alloc)._field_Generics.len() - _63811_i) > 1LL)) {
								_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1ad4390a0:;
						++it;
						_63811_i++;
						goto _iter_begin_1ad4390a0;
					}
					_iter_end_1ad4390a0:;
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a9d7c420_pushCallInf(_self_, _63134_m);
	if (((*(*((*(_63134_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_63134_m))))._field_Func.alloc)._field_Anon)))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_63134_m))))._field_Args.len() > 0LL)) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a79ac78e_IsBuiltin((*((*(_63134_m))))._field_Func))) && ((*(*((*((*(_63134_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a79a6e70_IsSelf((*((*((*((*(_63134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_63134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1ad440caa:;
				{
					jule::Ptr<_1a79a0133_StructSubIdentExprModel> _6629_ssie = (*((*(_63134_m))))._field_Expr.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>();;
					{
						
						if (_1a79a7206_IsRef((*((*((*((*(_63134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1ad445683:;
							{
								_1a9d7caa2_writeReceiver(_self_, (*((*(_6629_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a7a852d4_Sptr((*((*(_6629_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ad441d77:;
							{
								jule::Bool _6696_safe = _1a9d7caa2_writeReceiver(_self_, (*(*(_6629_ssie))._field_Expr.alloc)._field_Model);;
								if (_6696_safe) {
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_21a1bc90e_Production))) {
										_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*((*(_63134_m))))._field_Token));
										_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1ad441cde:;
							{
								if ((_1a7a865c1_Struct((*((*(_6629_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_6629_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1ad4425d6:;
											{
												jule::Ptr<_1a685a682_Var> _6838_v = (*((*(_6629_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
												if ((*(_6838_v))._field_Reference) {
													goto _match_end_1ad442aae;
												};
												goto _case_begin_1ad442b14;
											}
										}
										else {
											_case_begin_1ad442b14:;
											{
												_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1ad442aae:;
									};
								};
								if (_6323_wrapped) {
									_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a7a8556a_Ptr((*((*(_6629_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1a9d85a44_model(_self_, (*(*(_6629_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1a9d7b177_possibleRefExpr(_self_, (*((*((*(*(_6629_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1ad441c78:;
					};
					if (((*((*(_63134_m))))._field_Args.len() > 0LL)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1ad440969:;
				{
					_1a9d7b177_possibleRefExpr(_self_, (*((*((*(_63134_m))))._field_Expr.unsafe_cast_ptr<_1a799e792_TraitSubIdentExprModel>()))._field_Expr);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_63134_m))))._field_Args.len() > 0LL)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1ad440c44:;
		};
	};
	_1a9d7bdae_args(_self_, _63134_m);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6323_wrapped) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a9d7d113_coFuncCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel>* _72132_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_200880c8a_StrBuilder _7247_head = static__2008811b9_New(32LL);;
	_20088172a_WriteStr(&_7247_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_72132_m))))._field_Func))._field_Owner != nullptr)) {
		_20088172a_WriteStr(&_7247_head, jule::Str::lit("_self_", 6));
		if (((*((*(_72132_m))))._field_Args.len() > 0LL)) {
			_20088172a_WriteStr(&_7247_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_72132_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad454ab0:;
		if (it != expr_end) {
			jule::I64 _7327_i = it - expr->begin();
			jule::Any _73210_arg = *it;
			{
				if ((_7327_i > 0LL)) {
					_20088172a_WriteStr(&_7247_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _73210_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad456100:;
						{
							jule::Ptr<_1a685a682_Var> _7389_v = _73210_arg.unsafe_cast_ptr<_1a685a682_Var>();;
							static__1a9d8dc17_var(&(_7247_head), _7389_v);
							goto _iter_next_1ad454ab0;
						}
					}
					_match_end_1ad45586e:;
				};
				jule::Str _7424_name = (jule::Str::lit("_co_arg_", 8) + _1bd81e354_Itoa(_7327_i));;
				_20088172a_WriteStr(&_7247_head, _7424_name);
				_1a9e495b9_indent((*(_self_))._field_oc);
				_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(*((*(_72132_m))))._field_Func.alloc)._field_Params[_7327_i]))._field_Kind);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_72132_m))))._field_Func))._field_Params[_7327_i]))._field_Decl))._field_Reference) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1a9e48c17_write((*(_self_))._field_oc, _7424_name);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a9d7b177_possibleRefExpr(_self_, _73210_arg);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _7544_argS = jule::Any(_7424_name, &__jule_any_type4);;
				(*((*(_72132_m))))._field_Args[_7327_i]=(*(((jule::Any*)((&(_7544_argS))))));
			}
			_iter_next_1ad454ab0:;
			++it;
			_7327_i++;
			goto _iter_begin_1ad454ab0;
		}
		_iter_end_1ad454ab0:;
	};
	_1a9e495b9_indent((*(_self_))._field_oc);
	_200881472_Write(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2008829c3_Buf(&_7247_head));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9d7cd5a_pureFuncCall(_self_, _72132_m);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d7d476_writeUseExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _77234_f, jule::Ptr<_1a7a51503_Data> _77249_d) {
	if ((_1a7a86d74_Tup((*(_77249_d))._field_Kind.ptr()) == nullptr)) {
		_1a9d7b177_possibleRefExpr(_self_, (*_77249_d.alloc)._field_Model);
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a79a0ba0_TupleExprModel> _7787_tup = (*_77249_d.alloc)._field_Model.cast_ptr<_1a79a0ba0_TupleExprModel>(&__jule_any_type81);;
	_1a9e62cca_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a7a86d74_Tup((*((*(_77234_f))))._field_Result.ptr()));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_7787_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad469432:;
		if (it != expr_end) {
			jule::I64 _7817_i = it - expr->begin();
			jule::Ptr<_1a7a51503_Data> _78110_data = *it;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_7817_i));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a9d7b177_possibleRefExpr(_self_, (*(_78110_data))._field_Model);
				if ((((*(_7787_tup))._field_Datas.len() - _7817_i) > 1LL)) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ad469432:;
			++it;
			_7817_i++;
			goto _iter_begin_1ad469432;
		}
		_iter_end_1ad469432:;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a9d7d72e_funcCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c4b5_FnCallExprModel> _79329_m) {
	if ((*(_79329_m))._field_IsCo) {
		_1a9d7d113_coFuncCall(_self_, &(_79329_m));
		return;;
	};
	if (((_1a79ac78e_IsBuiltin((*_79329_m.alloc)._field_Func.ptr()) || (!((*((*(*(_79329_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_79329_m.alloc)._field_Except != nullptr) && ((*(*(_79329_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a9d7cd5a_pureFuncCall(_self_, &(_79329_m));
		return;;
	};
	_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a9d7cd5a_pureFuncCall(_self_, &(_79329_m));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	if (((*_79329_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_79329_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_79329_m.alloc)._field_Assigned)))) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a9d73c85_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_79329_m.alloc)._field_Except);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _8215_forwarded = _1a64455e1_IsForwarded(&((*_79329_m.alloc)._field_Except));;
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_8215_forwarded) {
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _8269_stmt = (*(*(_79329_m))._field_Except.alloc)._field_Stmts[((*(*(_79329_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _8269_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1ad478023:;
					{
						((*((*(_79329_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_79329_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a9e491bd_addIndent((*(_self_))._field_oc);
						_1a9d739cc_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_79329_m.alloc)._field_Except));
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a9e495b9_indent((*(_self_))._field_oc);
						_1a9d7d476_writeUseExpr(_self_, &((*_79329_m.alloc)._field_Func), _8269_stmt.cast_ptr<_1a7a51503_Data>(&__jule_any_type23));
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a9e493bb_doneIndent((*(_self_))._field_oc);
						_1a9e495b9_indent((*(_self_))._field_oc);
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1ad479530:;
					{
						_1a9d73c85_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_79329_m.alloc)._field_Except);
					}
				}
				_match_end_1ad4794ca:;
			};
			if (_8215_forwarded) {
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a9d85cec_initExpr(_self_, (*(*(_79329_m))._field_Func.alloc)._field_Result);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a9e493bb_doneIndent((*(_self_))._field_oc);
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_79329_m.alloc)._field_Token));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a79a879b_IsVoid((*((*(_79329_m))._field_Func))._field_Decl)))) {
			_1a9e495b9_indent((*(_self_))._field_oc);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a9e493bb_doneIndent((*(_self_))._field_oc);
	};
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9d7d9d7_slice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799c88e_SliceExprModel> _86626_m) {
	if (((*(_86626_m))._field_Elems.len() == 0LL)) {
		_1a9e5a90a_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_86626_m.alloc)._field_ElemKind);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a9e5a90a_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_86626_m.alloc)._field_ElemKind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1a9d7bb06_models(_self_, (*_86626_m.alloc)._field_Elems);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9d7dc90_indexing(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799cd45_IndexingExprModel> _87829_m) {
	{
		auto &_match_expr{ (*((*(_87829_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad48aba1:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_21a1bc90e_Production))) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*(_87829_m))._field_Token));
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _8894_s = _1bd82e50c_ReadStr((*((*(_87829_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1bd82c384_Const>().ptr());;
				_1a9d86ade_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _8894_s);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_8894_s.len()));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a9d7b177_possibleRefExpr(_self_, (*((*_87829_m.alloc)._field_Index))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1ad48ab4b:;
	};
	_1a9d7b177_possibleRefExpr(_self_, (*((*_87829_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_21a1bc90e_Production || (_1a7a8556a_Ptr((*(*(_87829_m))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a7a86add_Map((*((*(_87829_m))._field_Expr))._field_Kind) != nullptr) || _1a64458ee_IsExprComesFromBind(&((*_87829_m.alloc)._field_Expr))) {
			_case_begin_1ad494935:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a9d7b177_possibleRefExpr(_self_, (*(*(_87829_m))._field_Index.alloc)._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ad48ac4a:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_87829_m.alloc)._field_Token));
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a9d7b177_possibleRefExpr(_self_, (*(*(_87829_m))._field_Index.alloc)._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ad492328:;
	};
}



inline void _1a9d7e048_unsafeIndexing(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b77dee_UnsafeIndexingExprModel> _91835_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*((*((*(_91835_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_21a1bc90e_Production || (_1a7a8556a_Ptr((*(*((*(_91835_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a7a86add_Map((*((*((*(_91835_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1ad49876e:;
			{
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a9d7b177_possibleRefExpr(_self_, (*((*(*(_91835_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1ad497817:;
			{
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a9d7b177_possibleRefExpr(_self_, (*((*(*(_91835_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1ad4983b7:;
	};
}



inline void _1a9d7e301_anonFunc(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel> _93529_m) {
	jule::Bool _9363_closure = _1a6446009_IsClosure(&(_93529_m));;
	jule::Str _9373_ident = _1a9e4a08c_pushAnonFn((*(_self_))._field_oc, &(_93529_m));;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a9e5cd2a_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_93529_m))._field_Func);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1a9e48c17_write((*(_self_))._field_oc, _9373_ident);
	if (_9363_closure) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a9e48c17_write((*(_self_))._field_oc, _9373_ident);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1a9e48c17_write((*(_self_))._field_oc, _9373_ident);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_93529_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad4a3070:;
			if (it != expr_end) {
				jule::I64 _9499_i = it - expr->begin();
				jule::Ptr<_1a685a682_Var> _94916_v = *it;
				{
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a9d8dc17_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _94916_v);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a9d7a2ec_var(_self_, _94916_v);
					if ((((*_93529_m.alloc)._field_Captured.len() - _9499_i) > 1LL)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ad4a3070:;
				++it;
				_9499_i++;
				goto _iter_begin_1ad4a3070;
			}
			_iter_end_1ad4a3070:;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a9e48c17_write((*(_self_))._field_oc, _9373_ident);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a9d7e5a9_mapExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799db7b_MapExprModel> _96628_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_96628_m))._field_KeyKind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_96628_m.alloc)._field_ValKind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*_96628_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_96628_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad4ab441:;
			if (it != expr_end) {
				jule::I64 _9739_i = it - expr->begin();
				jule::Ptr<_1a799d6c5_KeyValPairExprModel> _97316_pair = *it;
				{
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1a9d7b177_possibleRefExpr(_self_, (*(_97316_pair))._field_Key);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1a9d7b177_possibleRefExpr(_self_, (*_97316_pair.alloc)._field_Val);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*_96628_m.alloc)._field_Entries.len() - _9739_i) > 1LL)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1ad4ab441:;
				++it;
				_9739_i++;
				goto _iter_begin_1ad4ab441;
			}
			_iter_end_1ad4ab441:;
		};
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9d7e862_slicing(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799e20e_SlicingExprModel> _98728_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*(_98728_m))._field_Expr);
	_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_21a1bc90e_Production))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_98728_m.alloc)._field_Token));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a9d7b177_possibleRefExpr(_self_, (*_98728_m.alloc)._field_Left);
	if (((*_98728_m.alloc)._field_Right != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9d7b177_possibleRefExpr(_self_, (*_98728_m.alloc)._field_Right);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d7eb1a_traitSub(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a799e792_TraitSubIdentExprModel> _100329_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a9d8cc7c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_100329_m))._field_Trt);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a9d7b177_possibleRefExpr(_self_, (*_100329_m.alloc)._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_21a1bc90e_Production))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_100329_m.alloc)._field_Token));
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a9d8c6a5_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_100329_m.alloc)._field_Method));
}



inline void _1a9d7edc3_structureSub(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a0133_StructSubIdentExprModel> _101933_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_101933_m))._field_Expr))._field_Model);
	if (((*_101933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a9d8d92b_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_101933_m.alloc)._field_Field))._field_Decl));
}



inline void _1a9d8017b_array(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a08a3_ArrayExprModel> _102826_m) {
	_1a9e5bb1a_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_102826_m))._field_Kind);
	if (((*_102826_m.alloc)._field_Elems.len() == 0LL)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_102826_m.alloc)._field_Elems.len() == 2LL) && ((*(_102826_m))._field_Elems[1LL] == nullptr))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9d7b177_possibleRefExpr(_self_, (*(_102826_m))._field_Elems[0LL]);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1a9d7bb06_models(_self_, (*_102826_m.alloc)._field_Elems);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1a9d80434_funcInsCommon(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _105134_m) {
	_1a9e5d18d_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _105134_m);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d806dc_funcIns(_self_, _105134_m);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d806dc_funcIns(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _105828_m) {
	if ((((*(_105828_m))._field_Decl != nullptr) && (*(*(_105828_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a79718da_Directive> _10604_d = _1a64473a1_FindDirective(&((*(*(_105828_m))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_10604_d != nullptr)) {
			_1a9e48ec0_writeBytes((*(_self_))._field_oc, _1a9e55e55_concatAllParts((*_10604_d.alloc)._field_Args));
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a9d8c991_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_105828_m));
}



inline void _1a9d80995_tuple(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a0ba0_TupleExprModel> _106926_m) {
	{
		auto expr = &((*_106926_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4c78ad:;
		if (it != expr_end) {
			jule::I64 _10708_i = it - expr->begin();
			jule::Ptr<_1a7a51503_Data> _107015_d = *it;
			{
				_1a9d7b177_possibleRefExpr(_self_, (*(_107015_d))._field_Model);
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_106926_m))._field_Datas.len() - _10708_i) > 1LL)) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a9e495b9_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1ad4c78ad:;
			++it;
			_10708_i++;
			goto _iter_begin_1ad4c78ad;
		}
		_iter_end_1ad4c78ad:;
	};
}



inline void _1a9d80c4d_newCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a182c_BuiltinNewCallExprModel> _108028_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_108028_m))._field_Kind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_108028_m.alloc)._field_Init != nullptr)) {
		_1a9d7b177_possibleRefExpr(_self_, (*_108028_m.alloc)._field_Init);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d81006_outCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a1079_BuiltinOutCallExprModel> _109028_m) {
	if (((*(_109028_m))._field_Debug && _21a1bc90e_Production)) {
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1a9d7b177_possibleRefExpr(_self_, (*_109028_m.alloc)._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d812ae_outlnCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a1453_BuiltinOutlnCallExprModel> _109930_m) {
	if (((*(_109930_m))._field_Debug && _21a1bc90e_Production)) {
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1a9d7b177_possibleRefExpr(_self_, (*_109930_m.alloc)._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d81567_panicCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a1c06_BuiltinPanicCallExprModel> _110830_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1a9d7b177_possibleRefExpr(_self_, (*(_110830_m))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_110830_m.alloc)._field_Token));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a9d81820_assertCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a21ac_BuiltinAssertCallExprModel> _111631_m) {
	if (_21a1bc90e_Production) {
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a9d7b177_possibleRefExpr(_self_, (*(_111631_m))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1a9d86ade_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_111631_m.alloc)._field_Log);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a9e4b05a_locInfo((*(_self_))._field_oc, &((*_111631_m.alloc)._field_Token));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a9d81ac8_errorCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a3cb3_BuiltinErrorCallExprModel> _112930_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a79a879b_IsVoid((*((*(_112930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_112930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad4d8d20:;
				{
					jule::Ptr<_1a685a682_Var> _11345_v = (*((*(_112930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
					if ((*(_11345_v))._field_Ident.equal("error", 5)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1ad4d8cba:;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a9e634a1_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_112930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_112930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad4dd286:;
				{
					jule::Ptr<_1a685a682_Var> _11465_v = (*((*(_112930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a685a682_Var>();;
					if ((*(_11465_v))._field_Ident.equal("error", 5)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1ad4dd231:;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_112930_m))._field_Err))._field_Model);
	jule::I64 _11553_i = _1a9e4a3cd_pushAnyType((*(_self_))._field_oc, (*(*(_112930_m))._field_Err.alloc)._field_Kind);;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_11553_i));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a9d81d81_copyCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a38d9_BuiltinCopyCallExprModel> _116129_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_116129_m))._field_Dest))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9d7b177_possibleRefExpr(_self_, (*((*_116129_m.alloc)._field_Src))._field_Model);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d82139_lenCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2d39_BuiltinLenCallExprModel> _116928_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_116928_m))._field_Expr))._field_Model);
	_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a9d823e2_capCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a3136_BuiltinCapCallExprModel> _117428_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_117428_m))._field_Expr))._field_Model);
	_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a9d8269a_deleteCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a3510_BuiltinDeleteCallExprModel> _117931_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_117931_m))._field_Dest))._field_Model);
	if (((*_117931_m.alloc)._field_Key != nullptr)) {
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1a9d7b177_possibleRefExpr(_self_, (*(*(_117931_m))._field_Key.alloc)._field_Model);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1a9d82953_makeCallSlice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel>* _119035_m) {
	jule::Ptr<_1a7a8e9c5_Slc> _11917_slice = _1a7a860a4_Slc((*((*(_119035_m))))._field_Kind.ptr());;
	_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_119035_m))))._field_Kind);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_119035_m))))._field_Len);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_119035_m))))._field_Cap != nullptr)) {
		_1a9d7b177_possibleRefExpr(_self_, (*((*(_119035_m))))._field_Cap);
	} else {
		_1a9d7b177_possibleRefExpr(_self_, (*((*(_119035_m))))._field_Len);
	};
	if (_1a9e6511d_shouldInitialized(&((*(_11917_slice))._field_Elem))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9d85cec_initExpr(_self_, (*_11917_slice.alloc)._field_Elem);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d82c0b_makeCallStr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel>* _120833_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a9d7b177_possibleRefExpr(_self_, (*((*(_120833_m))))._field_Len);
	if (((*((*(_120833_m))))._field_Cap != nullptr)) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a9d7b177_possibleRefExpr(_self_, (*((*(_120833_m))))._field_Cap);
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d82eb4_makeCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel> _121929_m) {
	if ((_1a7a860a4_Slc((*(_121929_m))._field_Kind.ptr()) != nullptr)) {
		_1a9d82953_makeCallSlice(_self_, &(_121929_m));
		return;;
	};
	_1a9d82c0b_makeCallStr(_self_, &(_121929_m));
}



inline void _1a9d8326c_pushToSlice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b782c8_PushToSliceExprModel> _122732_m) {
	;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a9e5a90a_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_122732_m))._field_Elems))._field_ElemKind);
	jule::Bool _12357_ptr = false;;
	{
		auto &_match_expr{ (*(_122732_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad505831:;
			{
				jule::Ptr<_1a799a8ae_UnaryExprModel> _12398_u = (*(_122732_m))._field_Dest.unsafe_cast_ptr<_1a799a8ae_UnaryExprModel>();;
				if ((_1a7a8556a_Ptr((*((*(_12398_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a9d7b177_possibleRefExpr(_self_, (*(*(_12398_u))._field_Expr.alloc)._field_Model);
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_12357_ptr=true;
					goto _match_end_1ad50757a;
				};
				goto _case_begin_1ad5075d0;
			}
		}
		else {
			_case_begin_1ad5075d0:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a9d7b177_possibleRefExpr(_self_, (*_122732_m.alloc)._field_Dest);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1ad50757a:;
	};
	if (((*(*(_122732_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_12357_ptr) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a9d7b177_possibleRefExpr(_self_, (*((*(_122732_m))._field_Elems))._field_Elems[0LL]);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_12357_ptr) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa((*(*(_122732_m))._field_Elems.alloc)._field_Elems.len()));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_122732_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad50e043:;
		if (it != expr_end) {
			jule::Any _127315_e = *it;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_12357_ptr) {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a9d7b177_possibleRefExpr(_self_, _127315_e);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1ad50e043:;
			++it;
			goto _iter_begin_1ad50e043;
		}
		_iter_end_1ad50e043:;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9d83525_appendToSlice(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b786a2_AppendToSliceExprModel> _128734_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*(_128734_m))._field_Dest);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a9d7b177_possibleRefExpr(_self_, (*_128734_m.alloc)._field_Slice);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a9d837cd_appendCall(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a2a3c_BuiltinAppendCallExprModel> _129531_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a9d7b177_possibleRefExpr(_self_, (*(_129531_m))._field_Dest);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*_129531_m.alloc)._field_Elements);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d83a86_sizeof(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a4467_SizeofExprModel> _130327_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a9d7b177_possibleRefExpr(_self_, (*(_130327_m))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d83d3e_alignof(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a4654_AlignofExprModel> _130928_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a9d7b177_possibleRefExpr(_self_, (*(_130928_m))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d840e7_runeLit(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a48eb_RuneExprModel> _131524_m) {
	if (((*(_131524_m))._field_Code <= 127LL)) {
		_2008819d3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _13188_b = _1a9d864c3_sbtoa(static_cast<jule::U8>((*_131524_m.alloc)._field_Code));;
		if (_13188_b.equal("'", 1)) {
			_2008819d3_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_20088172a_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _13188_b);
		_2008819d3_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1a9d87271_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_131524_m.alloc)._field_Code));
}



inline void _1a9d843a0_structureStatic(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a04c9_StructStaticIdentExprModel> _132936_m) {
	static__1a9d8c991_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_132936_m))._field_Method));
}



inline void _1a9d84658_integratedToStr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a4be8_IntegratedToStrExprModel> _133336_m) {
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1a9d7b177_possibleRefExpr(_self_, (*(_133336_m))._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9d84911_backendEmit(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a50c2_BackendEmitExprModel> _133932_m) {
	if (((*(_133932_m))._field_Exprs.len() == 0LL)) {
		_1a9e48c17_write((*(_self_))._field_oc, (*_133932_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _13443_n = _2008824a6_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _13457_args = jule::Slice<jule::Any>::alloc((*_133932_m.alloc)._field_Exprs.len(), (*_133932_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_133932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5228e7:;
		if (it != expr_end) {
			jule::I64 _13468_i = it - expr->begin();
			jule::Any _134615_expr = *it;
			{
				_1a9d7b177_possibleRefExpr(_self_, _134615_expr);
				jule::Slice<jule::U8> _13488_buf = _2008829c3_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_13457_args[_13468_i]=jule::Any(static_cast<jule::Str>(_13488_buf.slice(_13443_n)), &__jule_any_type4);
				{
					_200882c7b_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _13488_buf.slice(0LL, _13443_n));
				};
			}
			_iter_next_1ad5228e7:;
			++it;
			_13468_i++;
			goto _iter_begin_1ad5228e7;
		}
		_iter_end_1ad5228e7:;
	};
	_1a9e48c17_write((*(_self_))._field_oc, _1a7b63a88_Format((*_133932_m.alloc)._field_Code, _13457_args));
}



inline void _1a9d84bb9_free(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a79a53be_FreeExprModel> _135525_m) {
	_1a9d7b177_possibleRefExpr(_self_, (*(_135525_m))._field_Expr);
	if (_21a1bc304_RC) {
		_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a9d84e72_strComp(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b771d9_StrCompExprModel> _136428_m) {
	if ((*(_136428_m))._field_NotEq) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13683_s = _1bd82e50c_ReadStr((*_136428_m.alloc)._field_Right.ptr());;
	_1a9d7b177_possibleRefExpr(_self_, (*_136428_m.alloc)._field_Left);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a9d86ade_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _13683_s);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_13683_s.len()));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_136428_m.alloc)._field_NotEq) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a9d8522a_emptyCompare(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b768e2_EmptyCompareExprModel> _138033_m) {
	if ((*(_138033_m))._field_Neg) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a9d7b177_possibleRefExpr(_self_, (*_138033_m.alloc)._field_Expr);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a9d854d3_unsafeDeref(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b78d78_UnsafeDerefExprModel> _138932_m) {
	{
		
		if ((_1a7a852d4_Sptr((*((*((*(_138932_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad5313a6:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a9d7b177_possibleRefExpr(_self_, (*(*((*(_138932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1ad530eee:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1396:4"));;
			}
		}
		_match_end_1ad530e00:;
	};
}



inline void _1a9d8578b_unsafeCasting(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7b79175_UnsafeCastingExprModel> _140034_m) {
	{
		
		if (_1a6445bb8_IsAny(&((*((*(_140034_m))._field_Base))._field_ExprKind))) {
			_case_begin_1ad534057:;
			{
				_1a9d7b177_possibleRefExpr(_self_, (*((*(*(_140034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a7a852d4_Sptr((*(*(_140034_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a7a852d4_Sptr((*((*(_140034_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a9e5d501_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_140034_m))._field_Base.alloc)._field_Kind);
				};
				_1a9e48c17_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1ad533ba0:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1413:4"));;
			}
		}
		_match_end_1ad533ab2:;
	};
}



inline void _1a9d85a44_model(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Any _141726_m) {
	{
		auto &_match_expr{ _141726_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ad539722:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, _141726_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ad5398ba:;
			{
				_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _141726_m.cast_ptr<_1a7a828ec_TypeKind>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad539931:;
			{
				_1a9d795b5_constant(_self_, _141726_m.cast_ptr<_1bd82c384_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad539997:;
			{
				_1a9d7a2ec_var(_self_, _141726_m.cast_ptr<_1a685a682_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad539a0d:;
			{
				_1a9d7a5a5_structureIns(_self_, _141726_m.cast_ptr<_1a79960d5_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad539a74:;
			{
				_1a9d80434_funcInsCommon(_self_, _141726_m.cast_ptr<_1a79ab309_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ad539ada:;
			{
				_1a9d79c8b_unsafeBinary(_self_, (*(_141726_m.unsafe_cast_ptr<_1a7b77a69_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad53a734:;
			{
				_1a9d7a044_binary(_self_, _141726_m.cast_ptr<_1a799a4d5_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad53a79a:;
			{
				_1a9d7a85d_unary(_self_, _141726_m.cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad53a811:;
			{
				_1a9d7ab16_structureLit(_self_, _141726_m.cast_ptr<_1a799b283_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ad53a877:;
			{
				_1a9d7adbe_allocStructure(_self_, _141726_m.cast_ptr<_1a799b580_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad53a8dd:;
			{
				_1a9d7b84d_casting(_self_, _141726_m.cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad53a954:;
			{
				_1a9d7d72e_funcCall(_self_, _141726_m.cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad53a9ba:;
			{
				_1a9d7d9d7_slice(_self_, _141726_m.cast_ptr<_1a799c88e_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ad53aa42:;
			{
				_1a9d8017b_array(_self_, _141726_m.cast_ptr<_1a79a08a3_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1ad53aab9:;
			{
				_1a9d7e048_unsafeIndexing(_self_, _141726_m.cast_ptr<_1a7b77dee_UnsafeIndexingExprModel>(&__jule_any_type133));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad53ab41:;
			{
				_1a9d7dc90_indexing(_self_, _141726_m.cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad53abb8:;
			{
				_1a9d7e301_anonFunc(_self_, _141726_m.cast_ptr<_1a799d2eb_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ad53ac40:;
			{
				_1a9d7e5a9_mapExpr(_self_, _141726_m.cast_ptr<_1a799db7b_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad53acb7:;
			{
				_1a9d7e862_slicing(_self_, _141726_m.cast_ptr<_1a799e20e_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ad53ad3e:;
			{
				_1a9d7eb1a_traitSub(_self_, _141726_m.cast_ptr<_1a799e792_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad53adb6:;
			{
				_1a9d7edc3_structureSub(_self_, _141726_m.cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad53ae3d:;
			{
				_1a9d80995_tuple(_self_, _141726_m.cast_ptr<_1a79a0ba0_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad53aeb5:;
			{
				_1a9d81006_outCall(_self_, _141726_m.cast_ptr<_1a79a1079_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad53b03c:;
			{
				_1a9d812ae_outlnCall(_self_, _141726_m.cast_ptr<_1a79a1453_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad53b0b4:;
			{
				_1a9d80c4d_newCall(_self_, _141726_m.cast_ptr<_1a79a182c_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad53b13b:;
			{
				_1a9d81567_panicCall(_self_, _141726_m.cast_ptr<_1a79a1c06_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad53b1b3:;
			{
				_1a9d81820_assertCall(_self_, _141726_m.cast_ptr<_1a79a21ac_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad53b23a:;
			{
				_1a9d81ac8_errorCall(_self_, _141726_m.cast_ptr<_1a79a3cb3_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ad53b2b2:;
			{
				_1a9d82eb4_makeCall(_self_, _141726_m.cast_ptr<_1a79a2663_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad53b339:;
			{
				_1a9d837cd_appendCall(_self_, _141726_m.cast_ptr<_1a79a2a3c_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad53b3b1:;
			{
				_1a9d81d81_copyCall(_self_, _141726_m.cast_ptr<_1a79a38d9_BuiltinCopyCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ad53b438:;
			{
				_1a9d82139_lenCall(_self_, _141726_m.cast_ptr<_1a79a2d39_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ad53b4b0:;
			{
				_1a9d823e2_capCall(_self_, _141726_m.cast_ptr<_1a79a3136_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ad53b537:;
			{
				_1a9d8269a_deleteCall(_self_, _141726_m.cast_ptr<_1a79a3510_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad53b5ae:;
			{
				_1a9d83a86_sizeof(_self_, _141726_m.cast_ptr<_1a79a4467_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad53b636:;
			{
				_1a9d83d3e_alignof(_self_, _141726_m.cast_ptr<_1a79a4654_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad53b6ad:;
			{
				_1a9d840e7_runeLit(_self_, _141726_m.cast_ptr<_1a79a48eb_RuneExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ad53b735:;
			{
				_1a9d843a0_structureStatic(_self_, _141726_m.cast_ptr<_1a79a04c9_StructStaticIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad53b7ac:;
			{
				_1a9d84658_integratedToStr(_self_, _141726_m.cast_ptr<_1a79a4be8_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad53b834:;
			{
				_1a9d84911_backendEmit(_self_, _141726_m.cast_ptr<_1a79a50c2_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad53b8ab:;
			{
				_1a9d84bb9_free(_self_, _141726_m.cast_ptr<_1a79a53be_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1ad53b933:;
			{
				_1a9d84e72_strComp(_self_, _141726_m.cast_ptr<_1a7b771d9_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ad53b9aa:;
			{
				_1a9d7a2ec_var(_self_, (*(_141726_m.unsafe_cast_ptr<_1a7b76c66_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ad53ba32:;
			{
				_1a9d8522a_emptyCompare(_self_, _141726_m.cast_ptr<_1a7b768e2_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ad53baa9:;
			{
				_1a9d854d3_unsafeDeref(_self_, _141726_m.cast_ptr<_1a7b78d78_UnsafeDerefExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ad53bb31:;
			{
				_1a9d8578b_unsafeCasting(_self_, _141726_m.cast_ptr<_1a7b79175_UnsafeCastingExprModel>(&__jule_any_type132));
			}
		}
		else {
			_case_begin_1ad539854:;
			{
				_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ad5397ee:;
	};
}



inline void _1a9d85cec_initExpr(jule::Ptr<_1a9d77d33_exprCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind> _151829_t) {
	if (_1a7a8479a_NilCompatible(_151829_t.ptr())) {
		if ((_1a7a8556a_Ptr(_151829_t) != nullptr)) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _151829_t);
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a7a905b9_Tuple> _15287_tup = _1a7a86d74_Tup(_151829_t);;
	if ((_15287_tup != nullptr)) {
		_1a9e62cca_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _15287_tup);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_15287_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad55a29d:;
			if (it != expr_end) {
				jule::I64 _15329_i = it - expr->begin();
				jule::Ptr<_1a7a828ec_TypeKind> _153216_tt = *it;
				{
					if ((!(_1a9e6511d_shouldInitialized(&(_153216_tt))))) {
						goto _iter_next_1ad55a29d;
					};
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a9e48c17_write((*(_self_))._field_oc, _1bd81e354_Itoa(_15329_i));
					_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a9d85cec_initExpr(_self_, _153216_tt);
					if ((((*_15287_tup.alloc)._field_Types.len() - _15329_i) > 1LL)) {
						_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1ad55a29d:;
				++it;
				_15329_i++;
				goto _iter_begin_1ad55a29d;
			}
			_iter_end_1ad55a29d:;
		};
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a79bdddd_Enum> _15477_enm = _1a7a85801_Enum(_151829_t);;
	if ((_15477_enm != nullptr)) {
		_1a9d85a44_model(_self_, (*((*((*((*_15477_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _15523_prim = _1a7a8504d_Prim(_151829_t);;
	if ((_15523_prim != nullptr)) {
		if (_1bd82bd78_IsNum((*_15523_prim.alloc)._field_Kind)) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a7a8d6c7_IsBool(_15523_prim)) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a7a8d95d_IsStr(_15523_prim)) {
			_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a7a85d1d_Arr(_151829_t) != nullptr)) {
		jule::Ptr<_1a7a91ce6_Arr> _15648_arr = _1a7a85d1d_Arr(_151829_t);;
		_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _151829_t);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9d85cec_initExpr(_self_, (*(_15648_arr))._field_Elem);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1a79960d5_StructIns> _15717_s = _1a7a865c1_Struct(_151829_t);;
	if ((((_15717_s != nullptr) && (*((*_15717_s.alloc)._field_Decl))._field_Binded) && (_1a64473a1_FindDirective(&((*(*(_15717_s))._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _151829_t);
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a9e5d501_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _151829_t);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9d77d33_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d8863a_TestCoder> static__1a9d88aad_New(jule::Ptr<_1a9e48563_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1a9d8863a_TestCoder>(_1a9d8863a_TestCoder{._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a9d88d44_findTestingPackage(jule::Ptr<_1a9d8863a_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad56a005:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1ad56a005:;
			++it;
			goto _iter_begin_1ad56a005;
		}
		_iter_end_1ad56a005:;
	};
	return nullptr;;
}



inline void _1a9d890ec_appendTest(jule::Ptr<_1a9d8863a_TestCoder> _self_, jule::Ptr<_1a79ab309_FnIns> _4431_f) {
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9d89839_callTmReset(_self_);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a9d86ade_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a9e495b9_indent((*(_self_))._field_oc);
	static__1a9d8c991_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a9d893a5_appendPackageTests(jule::Ptr<_1a9d8863a_TestCoder> _self_, jule::Ptr<_1a681a39a_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5717c0:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad57223d:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _6116_f = *it;
						{
							if (_1a6447769_HasDirective(&((*(_6116_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1a9d890ec_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1ad57223d:;
						++it;
						goto _iter_begin_1ad57223d;
					}
					_iter_end_1ad57223d:;
				};
			}
			_iter_next_1ad5717c0:;
			++it;
			goto _iter_begin_1ad5717c0;
		}
		_iter_end_1ad5717c0:;
	};
}



inline jule::Bool _1a9d8963b_readyTestingPackage(jule::Ptr<_1a9d8863a_TestCoder> _self_) {
	jule::Ptr<_1a6817474_ImportInfo> _707_p = _1a9d88d44_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1a6818651_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1a799714c_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a799714c_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a799714c_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a9d89839_callTmReset(jule::Ptr<_1a9d8863a_TestCoder> _self_) {
	static__1a9d8c6a5_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a9d89a37_callTmFailed(jule::Ptr<_1a9d8863a_TestCoder> _self_) {
	static__1a9d8c6a5_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a9d89c35_callTmSkipped(jule::Ptr<_1a9d8863a_TestCoder> _self_) {
	static__1a9d8c6a5_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a9d89e33_Serialize(jule::Ptr<_1a9d8863a_TestCoder> _self_) {
	_1a9e5588e_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a9e5532d_end((*(_self_))._field_oc);
	});;
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	if ((!(_1a9d8963b_readyTestingPackage(_self_)))) {
		_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1a9e493bb_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_200880c8a_StrBuilder _1187_tb = static__2008811b9_New(40LL);;
	_1a9e5b7a7_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1187_tb), (*_self_.alloc)._field_t);
	_1a9e596ea_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _2008829c3_Buf(&_1187_tb));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a9e48ec0_writeBytes((*(_self_))._field_oc, _2008829c3_Buf(&_1187_tb));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a9e491bd_addIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a9d89a37_callTmFailed(_self_);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a9d89c35_callTmSkipped(_self_);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a9d893a5_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a9e493bb_doneIndent((*(_self_))._field_oc);
	_1a9e495b9_indent((*(_self_))._field_oc);
	_1a9e48c17_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9d8863a_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9d8bac2_writeIdentTo(_200880c8a_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad58bad7:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1ad58cc81;
				};
			}
			_iter_next_1ad58bad7:;
			++it;
			goto _iter_begin_1ad58bad7;
		}
		_iter_end_1ad58bad7:;
	};
	_20088172a_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1ad58cc81:;
	{
		auto expr = _3548_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4610_r;
		_iter_begin_1ad58d16b:;
		std::tie(_4610_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_2008819d3_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1ad58d16b;
				};
				_20088172a_WriteStr(_3530_buf, _1bd81e08a_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1ad58d16b:;
			it += len;
			goto _iter_begin_1ad58d16b;
		}
	};
}



inline void static__1a9d8be68_toOut(_200880c8a_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_2008819d3_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_20088172a_WriteStr(_6323_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_2008819d3_WriteByte(_6323_buf, '_');
	};
	static__1a9d8bac2_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1a9d8c3b9_toLocal(_200880c8a_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_2008819d3_WriteByte(_7825_buf, '_');
	_20088172a_WriteStr(_7825_buf, _1bd81e354_Itoa(_7842_row));
	_20088172a_WriteStr(_7825_buf, _1bd81e354_Itoa(_7852_col));
	_2008819d3_WriteByte(_7825_buf, '_');
	static__1a9d8bac2_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1a9d8c6a5_func(_200880c8a_StrBuilder* _8622_buf, jule::Ptr<_1a79a8328_Fn>* _8640_f) {
	{
		
		if ((*((*(_8640_f))))._field_Binded) {
			_case_begin_1ad592934:;
			{
				_20088172a_WriteStr(_8622_buf, (*((*(_8640_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8640_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1ad5929cd:;
			{
				_20088172a_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1a79a8a32_IsMethod((*(_8640_f)).ptr())) {
			_case_begin_1ad592a44:;
			{
				if ((*((*(_8640_f))))._field_Statically) {
					_20088172a_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1ad5927d0:;
	};
	static__1a9d8be68_toOut(_8622_buf, (*((*(_8640_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8640_f))));
}



inline void static__1a9d8c991_funcIns(_200880c8a_StrBuilder* _10225_buf, jule::Ptr<_1a79ab309_FnIns>* _10243_f) {
	if (_1a79ac78e_IsBuiltin((*(_10243_f)).ptr())) {
		_20088172a_WriteStr(_10225_buf, jule::Str::lit("jule::", 6));
		_20088172a_WriteStr(_10225_buf, (*((*((*(_10243_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10243_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10243_f))))._field_Generics.len() == 0LL))) {
		static__1a9d8c6a5_func(_10225_buf, &((*((*(_10243_f))))._field_Decl));
		return;;
	};
	static__1a9d8be68_toOut(_10225_buf, (*(*((*(_10243_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10243_f))));
}



inline void static__1a9d8cc7c_traitDecl(_200880c8a_StrBuilder* _11727_buf, jule::Ptr<_1a79bb6d2_Trait> _11744_t) {
	static__1a9d8be68_toOut(_11727_buf, (*(_11744_t))._field_Ident, static_cast<jule::Uintptr>(_11744_t));
}



inline void static__1a9d8d068_param(_200880c8a_StrBuilder* _12123_buf, jule::Ptr<_1a79a6854_Param>* _12141_p) {
	if ((_1a795ebb4_IsAnonIdent((*((*(_12141_p))))._field_Ident) || _1a795e8ea_IsIgnoreIdent((*((*(_12141_p))))._field_Ident))) {
		return;;
	};
	if (_1a79a6e70_IsSelf((*(_12141_p)).ptr())) {
		_20088172a_WriteStr(_12123_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12141_p))))._field_Token == nullptr)) {
		static__1a9d8c3b9_toLocal(_12123_buf, 0LL, 0LL, &((*((*(_12141_p))))._field_Ident));
		return;;
	};
	static__1a9d8c3b9_toLocal(_12123_buf, (*((*((*(_12141_p))))._field_Token))._field_Row, (*((*((*(_12141_p))))._field_Token))._field_Column, &((*((*(_12141_p))))._field_Ident));
}



inline void static__1a9d8d354_structure(_200880c8a_StrBuilder* _13627_buf, jule::Ptr<_1a7993357_Struct>* _13645_s) {
	if ((*((*(_13645_s))))._field_Binded) {
		if ((!(_1a6447769_HasDirective(&((*((*(_13645_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_20088172a_WriteStr(_13627_buf, jule::Str::lit("struct ", 7));
		};
		_20088172a_WriteStr(_13627_buf, (*((*(_13645_s))))._field_Ident);
		return;;
	};
	static__1a9d8be68_toOut(_13627_buf, (*((*(_13645_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13645_s))));
}



inline void static__1a9d8d640_structureIns(_200880c8a_StrBuilder* _14730_buf, jule::Ptr<_1a79960d5_StructIns>* _14748_s) {
	if (((*((*((*(_14748_s))))._field_Decl))._field_Binded || ((*((*(_14748_s))))._field_Generics.len() == 0LL))) {
		static__1a9d8d354_structure(_14730_buf, &((*((*(_14748_s))))._field_Decl));
		return;;
	};
	static__1a9d8be68_toOut(_14730_buf, (*(*((*(_14748_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14748_s))));
}



inline void static__1a9d8d92b_field(_200880c8a_StrBuilder* _15523_buf, jule::Ptr<_1a7990431_Field>* _15541_f) {
	if ((*((*((*(_15541_f))))._field_Owner))._field_Binded) {
		_20088172a_WriteStr(_15523_buf, (*((*(_15541_f))))._field_Ident);
		return;;
	};
	_20088172a_WriteStr(_15523_buf, jule::Str::lit("_field_", 7));
	static__1a9d8bac2_writeIdentTo(_15523_buf, &((*((*(_15541_f))))._field_Ident));
}



inline void static__1a9d8dc17_var(_200880c8a_StrBuilder* _16521_buf, jule::Ptr<_1a685a682_Var> _16542_v) {
	{
		
		if ((*(_16542_v))._field_Binded) {
			_case_begin_1ad5a11a1:;
			{
				_20088172a_WriteStr(_16521_buf, (*_16542_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("error", 5)) {
			_case_begin_1ad5a1217:;
			{
				_20088172a_WriteStr(_16521_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("self", 4)) {
			_case_begin_1ad5a127d:;
			{
				_20088172a_WriteStr(_16521_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16542_v))._field_RetOrder == -1LL)) {
			_case_begin_1ad5a12e4:;
			{
				_20088172a_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16542_v))._field_RetOrder >= 0LL)) {
			_case_begin_1ad5a135a:;
			{
				_20088172a_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_20088172a_WriteStr(_16521_buf, _1bd81e354_Itoa((*_16542_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16542_v))._field_Scope != nullptr)) {
			_case_begin_1ad5a13c1:;
			{
				static__1a9d8c3b9_toLocal(_16521_buf, (*((*_16542_v.alloc)._field_Token))._field_Row, (*(*(_16542_v))._field_Token.alloc)._field_Column, &((*_16542_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1ad5a113a:;
			{
				static__1a9d8be68_toOut(_16521_buf, (*(_16542_v))._field_Ident, static_cast<jule::Uintptr>(_16542_v));
			}
		}
		_match_end_1ad5a103b:;
	};
}



inline void static__1a9d8e003_iterBegin(_200880c8a_StrBuilder* _18727_buf, jule::Uintptr _18744_it) {
	_20088172a_WriteStr(_18727_buf, jule::Str::lit("_iter_begin_", 12));
	_20088172a_WriteStr(_18727_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_18744_it), 15LL));
}



inline void static__1a9d8e2de_iterEnd(_200880c8a_StrBuilder* _19225_buf, jule::Uintptr _19242_it) {
	_20088172a_WriteStr(_19225_buf, jule::Str::lit("_iter_end_", 10));
	_20088172a_WriteStr(_19225_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_19242_it), 15LL));
}



inline void static__1a9d8e5ca_iterNext(_200880c8a_StrBuilder* _19726_buf, jule::Uintptr _19743_it) {
	_20088172a_WriteStr(_19726_buf, jule::Str::lit("_iter_next_", 11));
	_20088172a_WriteStr(_19726_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_19743_it), 15LL));
}



inline void static__1a9d8e8b6_label(_200880c8a_StrBuilder* _20223_buf, jule::Uintptr _20240_u) {
	_20088172a_WriteStr(_20223_buf, jule::Str::lit("_julec_label_", 13));
	_20088172a_WriteStr(_20223_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_20240_u), 15LL));
}



inline void static__1a9d8eba2_matchEnd(_200880c8a_StrBuilder* _20726_buf, jule::Uintptr _20743_m) {
	_20088172a_WriteStr(_20726_buf, jule::Str::lit("_match_end_", 11));
	_20088172a_WriteStr(_20726_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_20743_m), 15LL));
}



inline void static__1a9d8ee8d_caseBegin(_200880c8a_StrBuilder* _21227_buf, jule::Uintptr _21244_c) {
	_20088172a_WriteStr(_21227_buf, jule::Str::lit("_case_begin_", 12));
	_20088172a_WriteStr(_21227_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>(_21244_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9d8b5b6_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e467b4_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e46bd2_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e470ab_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9e48563_ObjectCoder> static__1a9e4895e_New(jule::Ptr<_1a6439bac_IR>* _11521_ir, _1a9e467b4_SerializationInfo _11530_info) {
	jule::Ptr<_1a9e48563_ObjectCoder> _1167_oc = jule::new_ptr<_1a9e48563_ObjectCoder>(_1a9e48563_ObjectCoder{._field_ir=(*(_11521_ir)), ._field_info=_11530_info, });;
	(*(_1167_oc))._field_ec=static__1a9d781eb_new(&(_1167_oc));
	(*_1167_oc.alloc)._field_sc=static__1a9d6cd5b_new(&(_1167_oc));
	(*_1167_oc.alloc)._field_tc=static__1a9e5884d_new(&(_1167_oc));
	return _1167_oc;;
}



inline void _1a9e48c17_write(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Str _12622_s) {
	_20088172a_WriteStr(&(*(_self_))._field_Buf, _12622_s);
}



inline void _1a9e48ec0_writeBytes(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b) {
	_200881472_Write(&(*(_self_))._field_Buf, _13027_b);
}



inline void _1a9e491bd_addIndent(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1a9e493bb_doneIndent(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a9e495b9_indent(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_200881472_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a9e4990a_findAnyType(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind>* _14933_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5b55d3:;
		if (it != expr_end) {
			jule::I64 _1508_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> _15015_at = *it;
			{
				if (_1a7a83106_Equal(_15015_at, (*(_14933_t)))) {
					return _1508_i;;
				};
			}
			_iter_next_1ad5b55d3:;
			++it;
			_1508_i++;
			goto _iter_begin_1ad5b55d3;
		}
		_iter_end_1ad5b55d3:;
	};
	return -1LL;;
}



inline jule::I64 _1a9e49c4b_pushDealloc(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind> _15832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5b6a35:;
		if (it != expr_end) {
			jule::I64 _1597_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> _15910_dt = *it;
			{
				if (_1a7a83106_Equal(_15910_dt, _15832_t)) {
					return _1597_i;;
				};
			}
			_iter_next_1ad5b6a35:;
			++it;
			_1597_i++;
			goto _iter_begin_1ad5b6a35;
		}
		_iter_end_1ad5b6a35:;
	};
	jule::I64 _1643_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::make({_15832_t}));
	_20088172a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_20088172a_WriteStr(&(*_self_.alloc)._field_deallocObj, _1bd81e354_Itoa(_1643_i));
	_20088172a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1a9e5d501_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _15832_t);
	_20088172a_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1643_i;;
}



inline jule::Str _1a9e4a08c_pushAnonFn(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _17432_m) {
	jule::Str __jule_func_result;
	jule::Bool _1753_closure = _1a6446009_IsClosure(_17432_m);;
	if (_1753_closure) {
		_20088172a_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _1794_l = _2008824a6_Len(&(*_self_.alloc)._field_anonObj);;
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17432_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_2008829c3_Buf(&(*_self_.alloc)._field_anonObj).slice(_1794_l));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad5c3228:;
			if (it != expr_end) {
				jule::Ptr<_1a685a682_Var> _18416_v = *it;
				{
					_2008819d3_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1a9e5d501_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18416_v))._field_Kind))._field_Kind);
					_2008819d3_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18416_v.alloc)._field_Reference) {
						_2008819d3_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1a9d8dc17_var(&((*_self_.alloc)._field_anonObj), _18416_v);
					_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ad5c3228:;
				++it;
				goto _iter_begin_1ad5c3228;
			}
			_iter_end_1ad5c3228:;
		};
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17432_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1a9e470ab_anonHash>>::make({jule::new_ptr<_1a9e470ab_anonHash>(_1a9e470ab_anonHash{._field_expr=(*(_17432_m)), ._field_ident=__jule_func_result})}));
	_1a9e5148e_anonFuncInsDecl(_self_, _17432_m, __jule_func_result);
	_2008819d3_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1a9e4a3cd_pushAnyType(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7a828ec_TypeKind> _21432_t) {
	if ((_1a7a85801_Enum(_21432_t.ptr()) != nullptr)) {
		_21432_t=(*((*(_1a7a85801_Enum(_21432_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _2187_i = _1a9e4990a_findAnyType(_self_, &(_21432_t));;
	if ((_2187_i != -1LL)) {
		return _2187_i;;
	};
	_2187_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::make({_21432_t}));
	jule::Str _2243_si = _1bd81e354_Itoa(_2187_i);;
	if ((_1a7a852d4_Sptr(_21432_t) != nullptr)) {
		_200880c8a_StrBuilder _2268_elemKind = static__2008811b9_New(40LL);;
		_1a9e5d501_kind((*_self_.alloc)._field_tc.ptr(), &(_2268_elemKind), (*(_1a7a852d4_Sptr(_21432_t)))._field_Elem);
		jule::I64 _2304_di = _1a9e49c4b_pushDealloc(_self_, (*(_1a7a852d4_Sptr(_21432_t)))._field_Elem);;
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _1bd81e354_Itoa(_2304_di));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a9e596ea_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _2008829c3_Buf(&_2268_elemKind));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2494_comparable = _1a7a83ee7_Comparable(_21432_t);;
		_200880c8a_StrBuilder _2508_kindB = static__2008811b9_New(40LL);;
		_1a9e5d501_kind((*_self_.alloc)._field_tc.ptr(), &(_2508_kindB), _21432_t);
		jule::Slice<jule::U8> _2524_kind = _2008829c3_Buf(&_2508_kindB);;
		jule::I64 _2554_di = _1a9e49c4b_pushDealloc(_self_, _21432_t);;
		if (_2494_comparable) {
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_200881472_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_200881472_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1a7a8556a_Ptr(_21432_t) == nullptr)) {
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_200881472_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
		} else {
			_200881472_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _1bd81e354_Itoa(_2554_di));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2494_comparable) {
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2494_comparable) {
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_200881472_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2187_i;;
}



inline void _1a9e4a686_pushResultIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _31335_f) {
	jule::Str _3143_s = static_cast<jule::Str>(_1a9e637ae_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_31335_f))))._field_Result)));;
	jule::Bool _3156_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3143_s, nullptr, &(_3156_ok));
	if (_3156_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3143_s]=false;
	_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, _3143_s);
	_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a7a86d74_Tup((*((*(_31335_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e75d2:;
		if (it != expr_end) {
			jule::I64 _3238_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> _32315_t = *it;
			{
				_2008819d3_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a9e5d501_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _32315_t);
				_2008819d3_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, _1bd81e354_Itoa(_3238_i));
				_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad5e75d2:;
			++it;
			_3238_i++;
			goto _iter_begin_1ad5e75d2;
		}
		_iter_end_1ad5e75d2:;
	};
	_20088172a_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a9e4a93e_pushResult(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _33432_f) {
	if ((_1a79a879b_IsVoid((*(_33432_f)).ptr()) || ((*((*((*(_33432_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _3387_n = (*((*(_33432_f))))._field_Instances.len();;
	if (((*((*(_33432_f))))._field_Generics.len() == 0LL)) {
		_3387_n=1LL;
	};
	{
		auto expr = (*((*(_33432_f))))._field_Instances.slice(0LL, _3387_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad5ec681:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _34215_ins = *it;
			{
				_1a9e4a686_pushResultIns(_self_, &(_34215_ins));
			}
			_iter_next_1ad5ec681:;
			++it;
			goto _iter_begin_1ad5ec681;
		}
		_iter_end_1ad5ec681:;
	};
}



inline void _1a9e4aca2_pushAndWriteMaskMapper(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait> _34743_t1, jule::Ptr<_1a79bb6d2_Trait> _34759_t2) {
	_200880c8a_StrBuilder _3487_ident = static__2008811b9_New(32LL);;
	_20088172a_WriteStr(&_3487_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_20088172a_WriteStr(&_3487_ident, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34759_t2)), 15LL));
	_20088172a_WriteStr(&_3487_ident, jule::Str::lit("_to_", 4));
	_20088172a_WriteStr(&_3487_ident, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34743_t1)), 15LL));
	_200881472_Write(&(*(_self_))._field_Buf, _2008829c3_Buf(&_3487_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6004ec:;
		if (it != expr_end) {
			_1a9e46bd2_traitCast _35610_m = *it;
			{
				if (((_35610_m._field_t1 == _34743_t1) && (_35610_m._field_t2 == _34759_t2))) {
					return;;
				};
			}
			_iter_next_1ad6004ec:;
			++it;
			goto _iter_begin_1ad6004ec;
		}
		_iter_end_1ad6004ec:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1a9e46bd2_traitCast>::make({_1a9e46bd2_traitCast{._field_t1=_34743_t1, ._field_t2=_34759_t2}}));
	;
	_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_200881472_Write(&(*_self_.alloc)._field_anyObj, _2008829c3_Buf(&_3487_ident));
	_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_200880c8a_StrBuilder _3707_t1Ident = static__2008811b9_New(16LL);;
	_200880c8a_StrBuilder _3717_t2Ident = static__2008811b9_New(16LL);;
	static__1a9d8cc7c_traitDecl(&(_3707_t1Ident), _34743_t1);
	static__1a9d8cc7c_traitDecl(&(_3717_t2Ident), _34759_t2);
	{
		auto expr = &((*(_34743_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad600b18:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _37515_s1 = *it;
			{
				{
					auto expr = &((*(_34759_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad604ac8:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> _37611_s2 = *it;
						{
							if ((_37515_s1 == _37611_s2)) {
								{
									auto expr = &((*(_37515_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ad605964:;
									if (it != expr_end) {
										jule::Ptr<_1a79960d5_StructIns> _37818_s1i = *it;
										{
											jule::I64 _3797_i1 = _1a64482a3_FindTraitTypeOffsetS(_34743_t1, _37818_s1i);;
											jule::I64 _3807_i2 = _1a64482a3_FindTraitTypeOffsetS(_34759_t2, _37818_s1i);;
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_200881472_Write(&(*_self_.alloc)._field_anyObj, _2008829c3_Buf(&_3717_t2Ident));
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _1bd81e354_Itoa(_3807_i2));
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_200881472_Write(&(*_self_.alloc)._field_anyObj, _2008829c3_Buf(&_3707_t1Ident));
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, _1bd81e354_Itoa(_3797_i1));
											_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1ad605964:;
										++it;
										goto _iter_begin_1ad605964;
									}
									_iter_end_1ad605964:;
								};
							};
						}
						_iter_next_1ad604ac8:;
						++it;
						goto _iter_begin_1ad604ac8;
					}
					_iter_end_1ad604ac8:;
				};
			}
			_iter_next_1ad600b18:;
			++it;
			goto _iter_begin_1ad600b18;
		}
		_iter_end_1ad600b18:;
	};
	_20088172a_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1a9e4b05a_locInfo(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a795c013_Token>* _39825_t) {
	jule::Str *_3994_loc = &((*((*((*(_39825_t))))._field_File))._field_Path);;
	if (_21a1bc90e_Production) {
		{
			
			if (_1d969d9ae_HasPrefix((*(_3994_loc)), _1d7cdedd2_PathStdlib)) {
				_case_begin_1ad60ae20:;
				{
					_1a9d867ae_cstrBytes(&((*(_self_))._field_Buf), (*(_3994_loc)).slice((_1d96a97cd_Dir(_1d7cdedd2_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1d969d9ae_HasPrefix((*(_3994_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1ad60b00d:;
				{
					_1a9d867ae_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_3994_loc)).slice((_1d96a97cd_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1ad60aa57:;
				{
					_1a9d867ae_cstrBytes(&((*(_self_))._field_Buf), (*(_3994_loc)));
				}
			}
			_match_end_1ad60a98b:;
		};
	} else {
		_1a9d867ae_cstrBytes(&((*(_self_))._field_Buf), (*(_3994_loc)));
	};
	_1a9e48c17_write(_self_, jule::Str::lit(":", 1));
	_1a9e48c17_write(_self_, _1bd81e354_Itoa((*((*(_39825_t))))._field_Row));
	_1a9e48c17_write(_self_, jule::Str::lit(":", 1));
	_1a9e48c17_write(_self_, _1bd81e354_Itoa((*((*(_39825_t))))._field_Column));
}



inline void _1a9e4b258_head(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a9e3ced6_Time _4253_time = static__1a9e3d59c_Now();;
	_1a9e3c810_AbsTime _4263_abs = _1a9e3ec85_Abs(&_4253_time);;
	_1a9e48c17_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a9e48c17_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a9e48c17_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
	_1a9e48c17_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a9e48c17_write(_self_, _1bd81dbc2_FmtUint(_4263_abs._field_Day, 10LL));
	_1a9e48c17_write(_self_, jule::Str::lit("/", 1));
	_1a9e48c17_write(_self_, _1bd81dbc2_FmtUint(_4263_abs._field_Month, 10LL));
	_1a9e48c17_write(_self_, jule::Str::lit("/", 1));
	_1a9e48c17_write(_self_, _1bd81dbc2_FmtUint(_4263_abs._field_Year, 10LL));
	_1a9e48c17_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a9e48c17_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a9e48c17_write(_self_, jule::Str::lit(" ", 1));
	_1a9e48c17_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	if (_21a1bc90e_Production) {
		_1a9e48c17_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_21a1bc304_RC))) {
		_1a9e48c17_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_21a1bc6bc_Safety))) {
		_1a9e48c17_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a9e4b456_links(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a9e48c17_write(_self_, _1d7ce06c9_PathApi);
	_1a9e48c17_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a9e4b456_links(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad617569:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _46310_used = *it;
			{
				{
					
					if ((!((*(_46310_used))._field_Binded))) {
						_case_begin_1ad61837d:;
						{
							goto _iter_next_1ad617569;
						}
					}
					else if (_1d97401e3_IsStdHeaderPath((*(_46310_used))._field_Path)) {
						_case_begin_1ad618416:;
						{
							_1a9e48c17_write(_self_, jule::Str::lit("#include ", 9));
							_1a9e48c17_write(_self_, (*_46310_used.alloc)._field_Path);
							_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1d97404bd_IsValidHeaderExt(_1d96a8d71_Ext((*(_46310_used))._field_Path))) {
						_case_begin_1ad61847c:;
						{
							_1a9e48c17_write(_self_, jule::Str::lit("#include \"", 10));
							_1a9e48c17_write(_self_, (*_46310_used.alloc)._field_Path);
							_1a9e48c17_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1ad61823a:;
				};
			}
			_iter_next_1ad617569:;
			++it;
			goto _iter_begin_1ad617569;
		}
		_iter_end_1ad617569:;
	};
}



inline void _1a9e4b70e_prepareStructure(_1a9e48563_ObjectCoder* _self_, jule::Ptr<_1a7993357_Struct>* _47937_s) {
	{
		auto expr = &((*((*(_47937_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad61a25e:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _48015_ins = *it;
			{
				{
					auto expr = &((*(_48015_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad61bb9a:;
					if (it != expr_end) {
						jule::Ptr<_1a79a8328_Fn> _48116_m = *it;
						{
							if ((*(_48116_m))._field_Statically) {
								goto _iter_next_1ad61bb9a;
							};
							{
								auto expr = &((*_48116_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad61c67e:;
								if (it != expr_end) {
									jule::Ptr<_1a79ab309_FnIns> _48517_mins = *it;
									{
										jule::Ptr<_1a79aa281_ParamIns> _48610_p = (*(_48517_mins))._field_Params[0LL];;
										_200880c8a_StrBuilder _48710_kind = static__2008811b9_New(40LL);;
										_1a9e5d501_kind((*(_self_))._field_tc.ptr(), &(_48710_kind), (*(_48610_p))._field_Kind);
										if ((!(_1a79a7206_IsRef((*_48610_p.alloc)._field_Decl.ptr())))) {
											_20088172a_WriteStr(&_48710_kind, jule::Str::lit("*", 1));
										};
										(*_48610_p.alloc)._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a9e576e8_customType>(_1a9e576e8_customType{._field_kind=_200882022_Str(&_48710_kind)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data27)});
									}
									_iter_next_1ad61c67e:;
									++it;
									goto _iter_begin_1ad61c67e;
								}
								_iter_end_1ad61c67e:;
							};
						}
						_iter_next_1ad61bb9a:;
						++it;
						goto _iter_begin_1ad61bb9a;
					}
					_iter_end_1ad61bb9a:;
				};
			}
			_iter_next_1ad61a25e:;
			++it;
			goto _iter_begin_1ad61a25e;
		}
		_iter_end_1ad61a25e:;
	};
}



inline void _1a9e4b90c_prepareStructures(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad61bb12:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _50315_s = *it;
			{
				if (((*(_50315_s))._field_Token != nullptr)) {
					_1a9e4b70e_prepareStructure(_self_.ptr(), &(_50315_s));
				};
			}
			_iter_next_1ad61bb12:;
			++it;
			goto _iter_begin_1ad61bb12;
		}
		_iter_end_1ad61bb12:;
	};
}



inline void _1a9e4bbb5_structurePlainDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7993357_Struct>* _51040_s) {
	{
		auto expr = &((*((*(_51040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad621c9e:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _51115_ins = *it;
			{
				_1a9e48c17_write(_self_, jule::Str::lit("struct ", 7));
				static__1a9d8d640_structureIns(&((*_self_.alloc)._field_Buf), &(_51115_ins));
				_1a9e48c17_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad621c9e:;
			++it;
			goto _iter_begin_1ad621c9e;
		}
		_iter_end_1ad621c9e:;
	};
}



inline void _1a9e4bdb3_structurePlainDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad623289:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _51915_s = *it;
			{
				if (((*(_51915_s))._field_Token != nullptr)) {
					_1a9e4bbb5_structurePlainDecl(_self_, &(_51915_s));
				};
			}
			_iter_next_1ad623289:;
			++it;
			goto _iter_begin_1ad623289;
		}
		_iter_end_1ad623289:;
	};
}



inline void _1a9e4c16b_fieldDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7995535_FieldIns>* _52631_f) {
	_1a9e5d501_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_52631_f))))._field_Kind);
	_1a9e48c17_write(_self_, jule::Str::lit(" ", 1));
	static__1a9d8d92b_field(&((*_self_.alloc)._field_Buf), &((*((*(_52631_f))))._field_Decl));
	if (((*((*(_52631_f))))._field_Default == nullptr)) {
		if (_1a9e6511d_shouldInitialized(&((*((*(_52631_f))))._field_Kind))) {
			_1a9e48c17_write(_self_, jule::Str::lit(" = ", 3));
			_1a9d85cec_initExpr((*_self_.alloc)._field_ec, (*((*(_52631_f))))._field_Kind);
		};
	} else {
		_1a9e48c17_write(_self_, jule::Str::lit(" = ", 3));
		_1a9d7b177_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_52631_f))))._field_Default))._field_Model);
	};
	_1a9e48c17_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a9e4c424_structureDestructor(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _54441_s) {
	;
	jule::Ptr<_1a79a8328_Fn> _5473_disposeMethod = _1a799714c_FindMethod((*(_54441_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5487_disposed = static__1a685bb28_Dispose(_5473_disposeMethod);;
	if ((!(_5487_disposed))) {
		return;;
	};
	_1a9e48c17_write(_self_, jule::Str::lit("~", 1));
	static__1a9d8d640_structureIns(&((*_self_.alloc)._field_Buf), _54441_s);
	_1a9e48c17_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1a9d8c6a5_func(&((*_self_.alloc)._field_Buf), &(_5473_disposeMethod));
	_1a9e48c17_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a9e4c787_structureOperatorEq(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _56036_ident, jule::Ptr<_1a79960d5_StructIns>* _56056_s) {
	if ((!((*((*(_56056_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_56056_s))))._field_Operators._field_Eq != nullptr)) {
		_1a9e4d018_structureOperator(_self_, _56036_ident, &((*((*(_56056_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1a9e495b9_indent(_self_);
	if (_1a6460908_Inline) {
		_1a9e48c17_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a9e48c17_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1a9e48ec0_writeBytes(_self_, _56036_ident);
	_1a9e48c17_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_56056_s))))._field_Fields.len() > 0LL)) {
		_1a9e491bd_addIndent(_self_);
		_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
		_1a9e495b9_indent(_self_);
		_1a9e48c17_write(_self_, jule::Str::lit("return ", 7));
		_1a9e491bd_addIndent(_self_);
		jule::Bool _5838_writed = false;;
		{
			auto expr = &((*((*(_56056_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad631374:;
			if (it != expr_end) {
				jule::Ptr<_1a7995535_FieldIns> _58416_f = *it;
				{
					jule::Ptr<_1a79960d5_StructIns> _5865_strct = _1a7a865c1_Struct((*(_58416_f))._field_Kind.ptr());;
					if ((((_5865_strct != nullptr) && ((*_5865_strct.alloc)._field_Decl != nullptr)) && (*(*(_5865_strct))._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1ad631374;
					};
					if (_5838_writed) {
						_1a9e48c17_write(_self_, jule::Str::lit(" &&", 3));
					};
					_5838_writed=true;
					_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
					_1a9e495b9_indent(_self_);
					_1a9e48c17_write(_self_, jule::Str::lit("this->", 6));
					_200880c8a_StrBuilder _5979_fIdent = static__2008811b9_New((*((*_58416_f.alloc)._field_Decl))._field_Ident.len());;
					static__1a9d8d92b_field(&(_5979_fIdent), &((*_58416_f.alloc)._field_Decl));
					_1a9e48ec0_writeBytes(_self_, _2008829c3_Buf(&_5979_fIdent));
					_1a9e48c17_write(_self_, jule::Str::lit(" == _other.", 11));
					_1a9e48ec0_writeBytes(_self_, _2008829c3_Buf(&_5979_fIdent));
				}
				_iter_next_1ad631374:;
				++it;
				goto _iter_begin_1ad631374;
			}
			_iter_end_1ad631374:;
		};
		_1a9e493bb_doneIndent(_self_);
		if ((!(_5838_writed))) {
			_1a9e48c17_write(_self_, jule::Str::lit("true", 4));
		};
		_1a9e48c17_write(_self_, jule::Str::lit(";\n", 2));
		_1a9e493bb_doneIndent(_self_);
		_1a9e495b9_indent(_self_);
		_1a9e48c17_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a9e48c17_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a9e4caea_structureOperatorNotEq(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _61739_ident, jule::Ptr<_1a79960d5_StructIns>* _61759_s) {
	if ((!((*((*(_61759_s))))._field_Comparable))) {
		return;;
	};
	_1a9e495b9_indent(_self_);
	if (_1a6460908_Inline) {
		_1a9e48c17_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a9e48c17_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1a9e48ec0_writeBytes(_self_, _61739_ident);
	_1a9e48c17_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a9e4d018_structureOperator(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Slice<jule::U8> _63134_ident, jule::Ptr<_1a79ab309_FnIns>* _63154_f, jule::Str _63165_op) {
	if (((*(_63154_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6363_unary = ((*((*(_63154_f))))._field_Params.len() == 1LL);;
	jule::Bool _6373_assignment = _1a79a879b_IsVoid((*((*(_63154_f))))._field_Decl.ptr());;
	_1a9e495b9_indent(_self_);
	if (_1a6460908_Inline) {
		_1a9e48c17_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6373_assignment) {
		_1a9e48ec0_writeBytes(_self_, _63134_ident);
		_1a9e48c17_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1a7a8504d_Prim((*((*(_63154_f))))._field_Result.ptr()) == nullptr)) {
			_1a9e48ec0_writeBytes(_self_, _63134_ident);
		} else {
			_1a9e48c17_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1a9e48c17_write(_self_, jule::Str::lit(" operator", 9));
	_1a9e48c17_write(_self_, _63165_op);
	_1a9e48c17_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6363_unary))) {
		jule::Ptr<_1a79aa281_ParamIns> _6598_p = (*((*(_63154_f))))._field_Params[1LL];;
		_1a9e5c2e1_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_6598_p));
		_1a9e48c17_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1a9e48c17_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6373_assignment))) {
		_1a9e48c17_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1a9d8c991_funcIns(&((*_self_.alloc)._field_Buf), _63154_f);
	if ((!(_6363_unary))) {
		_1a9e48c17_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6373_assignment) {
			_1a9e48c17_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1a9e48c17_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a9e48c17_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a9e4d2c1_structureOperators(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _68040_s) {
	_200880c8a_StrBuilder _6817_sb = static__2008811b9_New(40LL);;
	static__1a9d8d640_structureIns(&(_6817_sb), _68040_s);
	jule::Slice<jule::U8> _6833_ident = _2008829c3_Buf(&_6817_sb);;
	_1a9e4c787_structureOperatorEq(_self_, _6833_ident, _68040_s);
	_1a9e4caea_structureOperatorNotEq(_self_, _6833_ident, _68040_s);
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1a9e4d018_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1a9e4d579_structureInsDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _72138_s) {
	{
		auto expr = &((*((*(_72138_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad653e46:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _72215_m = *it;
			{
				if (_1a9e56263_isHeadDecl(&(_72215_m))) {
					_1a9e4e8cc_funcDecl(_self_, &(_72215_m), false);
				};
			}
			_iter_next_1ad653e46:;
			++it;
			goto _iter_begin_1ad653e46;
		}
		_iter_end_1ad653e46:;
	};
	_1a9e48c17_write(_self_, jule::Str::lit("struct ", 7));
	static__1a9d8d640_structureIns(&((*_self_.alloc)._field_Buf), _72138_s);
	_1a9e48c17_write(_self_, jule::Str::lit(" {\n", 3));
	_1a9e491bd_addIndent(_self_);
	{
		auto expr = &((*((*(_72138_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad65474e:;
		if (it != expr_end) {
			jule::Ptr<_1a7995535_FieldIns> _73315_f = *it;
			{
				_1a9e495b9_indent(_self_);
				_1a9e4c16b_fieldDecl(_self_, &(_73315_f));
				_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1ad65474e:;
			++it;
			goto _iter_begin_1ad65474e;
		}
		_iter_end_1ad65474e:;
	};
	_1a9e495b9_indent(_self_);
	_1a9e4c424_structureDestructor(_self_, _72138_s);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9e4d2c1_structureOperators(_self_, _72138_s);
	_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
	_1a9e493bb_doneIndent(_self_);
	_1a9e495b9_indent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("};", 2));
}



inline void _1a9e4d832_structureDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7993357_Struct>* _75135_s) {
	{
		auto expr = &((*((*(_75135_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad65937a:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _75215_ins = *it;
			{
				_1a9e4d579_structureInsDecl(_self_, &(_75215_ins));
			}
			_iter_next_1ad65937a:;
			++it;
			goto _iter_begin_1ad65937a;
		}
		_iter_end_1ad65937a:;
	};
}



inline void _1a9e4da30_structureDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad659aea:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _75815_s = *it;
			{
				if (((*(_75815_s))._field_Token != nullptr)) {
					_1a9e4d832_structureDecl(_self_, &(_75815_s));
					_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1ad659aea:;
			++it;
			goto _iter_begin_1ad659aea;
		}
		_iter_end_1ad659aea:;
	};
}



inline void _1a9e4dc2d_structureMethodDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad65ab0c:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _76715_s = *it;
			{
				if (((*(_76715_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_76715_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad65cbca:;
						if (it != expr_end) {
							jule::Ptr<_1a79960d5_StructIns> _76917_ins = *it;
							{
								{
									auto expr = &((*(_76917_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ad65d615:;
									if (it != expr_end) {
										jule::Ptr<_1a79a8328_Fn> _77018_m = *it;
										{
											if ((!(_1a9e56263_isHeadDecl(&(_77018_m))))) {
												_1a9e4a93e_pushResult(_self_, &(_77018_m));
												_1a9e4e8cc_funcDecl(_self_, &(_77018_m), false);
											};
										}
										_iter_next_1ad65d615:;
										++it;
										goto _iter_begin_1ad65d615;
									}
									_iter_end_1ad65d615:;
								};
							}
							_iter_next_1ad65cbca:;
							++it;
							goto _iter_begin_1ad65cbca;
						}
						_iter_end_1ad65cbca:;
					};
				};
			}
			_iter_next_1ad65ab0c:;
			++it;
			goto _iter_begin_1ad65ab0c;
		}
		_iter_end_1ad65ab0c:;
	};
}



inline void _1a9e4e206_funcHead(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _78530_buf, jule::Ptr<_1a79ab309_FnIns>* _78552_f, jule::Bool _78563_ptr, jule::Str _78574_ident) {
	if ((((!(_78563_ptr)) && _1a6460908_Inline) && (!(_1a79a8cb8_IsEntryPoint((*((*(_78552_f))))._field_Decl.ptr()))))) {
		_20088172a_WriteStr(_78530_buf, jule::Str::lit("inline ", 7));
	};
	_1a9e5c9b7_funcInsResult((*(_self_))._field_tc.ptr(), _78530_buf, _78552_f);
	if (_78563_ptr) {
		_20088172a_WriteStr(_78530_buf, jule::Str::lit("(*", 2));
		static__1a9d8c991_funcIns(_78530_buf, _78552_f);
		_2008819d3_WriteByte(_78530_buf, ')');
	} else {
		_2008819d3_WriteByte(_78530_buf, ' ');
		if ((_78574_ident).empty()) {
			static__1a9d8c991_funcIns(_78530_buf, _78552_f);
		} else {
			_20088172a_WriteStr(_78530_buf, _78574_ident);
		};
	};
}



inline void _1a9e4e569_funcDeclIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _80433_f, jule::Bool _80444_ptr) {
	_1a9e495b9_indent(_self_);
	_1a9e4e206_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80433_f, _80444_ptr, jule::Str());
	_1a9e50a10_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80433_f);
	_1a9e48c17_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a9e4e8cc_funcDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _81130_f, jule::Bool _81138_ptr) {
	{
		auto expr = &((*((*(_81130_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad664808:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _81215_c = *it;
			{
				_1a9e4e569_funcDeclIns(_self_, &(_81215_c), _81138_ptr);
			}
			_iter_next_1ad664808:;
			++it;
			goto _iter_begin_1ad664808;
		}
		_iter_end_1ad664808:;
	};
}



inline void _1a9e4eb85_funcDeclTrait(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _81735_f) {
	{
		auto expr = &((*((*(_81735_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad66571b:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _81815_c = *it;
			{
				jule::Ptr<_1a7a828ec_TypeKind> _8198_k = (*((*(_81815_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_81815_c))._field_Params[0LL]))._field_Kind=_1a9e46561_generalGCPtr;
				_1a9e4e569_funcDeclIns(_self_, &(_81815_c), true);
				(*((*(_81815_c))._field_Params[0LL]))._field_Kind=_8198_k;
			}
			_iter_next_1ad66571b:;
			++it;
			goto _iter_begin_1ad66571b;
		}
		_iter_end_1ad66571b:;
	};
}



inline void _1a9e4ed83_funcDecls(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a643c3eb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a681a39a_Package>*>((void*)__jule_anon_1ad668433, jule::Ptr<__jule_anon_1ad668433_ctx>::make(__jule_anon_1ad668433_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad668433_ctx_handler));
}



inline void _1a9e5013b_traitDataTypeMethods(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _83942_t) {
	_1a643d298_IterTraitMethods(_83942_t, jule::__new_closure<void,jule::Ptr<_1a79a8328_Fn>*>((void*)__jule_anon_1ad66990c, jule::Ptr<__jule_anon_1ad66990c_ctx>::make(__jule_anon_1ad66990c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad66990c_ctx_handler));
}



inline void _1a9e50339_traitDataTypes(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a643c3eb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a681a39a_Package>*>((void*)__jule_anon_1ad66eeea, jule::Ptr<__jule_anon_1ad66eeea_ctx>::make(__jule_anon_1ad66eeea_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad66eeea_ctx_handler));
}



inline void _1a9e5069c_paramIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _87530_buf, jule::Ptr<_1a79aa281_ParamIns>* _87552_p) {
	_1a9e5c2e1_paramIns((*(_self_))._field_tc.ptr(), _87530_buf, _87552_p);
	_2008819d3_WriteByte(_87530_buf, ' ');
	static__1a9d8d068_param(_87530_buf, &((*((*(_87552_p))))._field_Decl));
}



inline void _1a9e50a10_paramsIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _88131_buf, jule::Ptr<_1a79ab309_FnIns>* _88153_f) {
	if (((!((*((*(_88153_f))))._field_AsAnon)) && ((*((*(_88153_f))))._field_Params.len() == 0LL))) {
		_20088172a_WriteStr(_88131_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_2008819d3_WriteByte(_88131_buf, '(');
	if ((*((*(_88153_f))))._field_AsAnon) {
		_20088172a_WriteStr(_88131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_88153_f))))._field_Params.len() > 0LL)) {
			_20088172a_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_88153_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6785a8:;
		if (it != expr_end) {
			jule::I64 _8938_i = it - expr->begin();
			jule::Ptr<_1a79aa281_ParamIns> _89315_p = *it;
			{
				_1a9e5069c_paramIns(_self_, _88131_buf, &(_89315_p));
				if ((((*((*(_88153_f))))._field_Params.len() - _8938_i) > 1LL)) {
					_20088172a_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ad6785a8:;
			++it;
			_8938_i++;
			goto _iter_begin_1ad6785a8;
		}
		_iter_end_1ad6785a8:;
	};
	_2008819d3_WriteByte(_88131_buf, ')');
}



inline void _1a9e50d73_varInitExpr(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a685a682_Var>* _90233_v, jule::Fn<void> _90242_init) {
	if ((*((*(_90233_v))))._field_Statically) {
		_1a9e48c17_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a9e5d501_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90233_v))))._field_Kind))._field_Kind);
	_1a9e48c17_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90233_v))))._field_Reference) {
		_1a9e48c17_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a9d8dc17_var(&((*_self_.alloc)._field_Buf), (*(_90233_v)));
	if ((_90242_init != nullptr)) {
		_1a9e48c17_write(_self_, jule::Str::lit(" = ", 3));
		_90242_init();
	};
	_1a9e48c17_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a9e5112b_var(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a685a682_Var> _92024_v) {
	if (_1a795e8ea_IsIgnoreIdent((*(_92024_v))._field_Ident)) {
		return;;
	};
	if ((((*_92024_v.alloc)._field_Value != nullptr) && ((*(*(_92024_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92024_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92024_v.alloc)._field_Reference) {
				_1a9e50d73_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ad680a55, jule::Ptr<__jule_anon_1ad680a55_ctx>::make(__jule_anon_1ad680a55_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1ad680a55_ctx_handler));
			} else {
				_1a9e50d73_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ad682b56, jule::Ptr<__jule_anon_1ad682b56_ctx>::make(__jule_anon_1ad682b56_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1ad682b56_ctx_handler));
			};
			return;;
		};
		_1a9e50d73_varInitExpr(_self_, &(_92024_v), nullptr);
		return;;
	};
	if ((*_92024_v.alloc)._field_Reference) {
		_1a9e50d73_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ad685373, jule::Ptr<__jule_anon_1ad685373_ctx>::make(__jule_anon_1ad685373_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad685373_ctx_handler));
		return;;
	};
	if (_1a9e6511d_shouldInitialized(&((*((*_92024_v.alloc)._field_Kind))._field_Kind))) {
		_1a9e50d73_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1ad6864ea, jule::Ptr<__jule_anon_1ad6864ea_ctx>::make(__jule_anon_1ad6864ea_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1ad6864ea_ctx_handler));
		return;;
	};
	_1a9e50d73_varInitExpr(_self_, &(_92024_v), nullptr);
}



inline void _1a9e5148e_anonFuncInsDecl(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _95137_m, jule::Str _95158_ident) {
	_1a9e4e206_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func), false, _95158_ident);
	_1a9e50a10_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func));
	_2008819d3_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1a9e51802_anonFuncIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _95733_m, jule::Str _95754_ident) {
	_1a9e4e206_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func), false, _95754_ident);
	_1a9e50a10_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func));
	_1a9e48c17_write(_self_, jule::Str::lit(" ", 1));
	_1a9d743a1_anonFuncScope((*_self_.alloc)._field_sc, (*(_95733_m)), _95754_ident);
	if (((*((*((*(_95733_m))))._field_Func))._field_Scope != nullptr)) {
		_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a9e51b65_funcIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79ab309_FnIns>* _96729_f, jule::Str _96740_ident) {
	_1a9e4e206_funcHead(_self_, &((*_self_.alloc)._field_Buf), _96729_f, false, _96740_ident);
	_1a9e50a10_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _96729_f);
	_1a9e48c17_write(_self_, jule::Str::lit(" ", 1));
	_1a9d74659_funcScope((*_self_.alloc)._field_sc, (*(_96729_f)));
	if (((*((*(_96729_f))))._field_Scope != nullptr)) {
		_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a9e51e1d_func(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _97726_f) {
	{
		auto expr = &((*((*(_97726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad68ecd9:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _97815_ins = *it;
			{
				_1a9e51b65_funcIns(_self_, &(_97815_ins), jule::Str());
			}
			_iter_next_1ad68ecd9:;
			++it;
			goto _iter_begin_1ad68ecd9;
		}
		_iter_end_1ad68ecd9:;
	};
}



inline void _1a9e52281_funcTrait(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _98327_s, jule::Ptr<_1a79ab309_FnIns>* _98347_f) {
	(*((*(_98347_f))))._field_Scope=nullptr;
	_200880c8a_StrBuilder _9867_nident = static__2008811b9_New(30LL);;
	_20088172a_WriteStr(&_9867_nident, jule::Str::lit("__jule_trait_method_", 20));
	_20088172a_WriteStr(&_9867_nident, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98347_f)))), 15LL));
	_20088172a_WriteStr(&_9867_nident, jule::Str::lit("_", 1));
	_20088172a_WriteStr(&_9867_nident, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98327_s)))), 15LL));
	jule::Ptr<_1a7a828ec_TypeKind> _9927_k = (*((*((*(_98347_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_98347_f))))._field_Params[0LL]))._field_Kind=_1a9e46561_generalGCPtr;
	_1a9e51b65_funcIns(_self_, _98347_f, _200882022_Str(&_9867_nident));
	(*((*((*(_98347_f))))._field_Params[0LL]))._field_Kind=_9927_k;
}



inline __jule_tuple_x_1a79ab309_FnIns__jule_tuple_bool _1a9e525c2_findTraitMetMap(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79a8328_Fn>* _99837_m) {
	__jule_tuple_x_1a79ab309_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a79ab309_FnIns> _9997_mins = (*((*(_99837_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6955a3:;
		if (it != expr_end) {
			jule::Ptr<_1a79ab309_FnIns> _100012_f = it->first;
			{
				if (((((*((*(_100012_f))._field_Decl))._field_Public == (*((*(_99837_m))))._field_Public) && ((*(*(_100012_f))._field_Decl.alloc)._field_Ident == (*((*(_99837_m))))._field_Ident)) && _1a79abe31_EqualFn(_100012_f, &(_9997_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad6955a3:;
			++it;
			goto _iter_begin_1ad6955a3;
		}
		_iter_end_1ad6955a3:;
	};
	__jule_func_result.__jule_result_arg0 = _9997_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a9e52935_traitWrapper(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _101034_t, jule::Ptr<_1a79a8328_Fn>* _101050_m) {
	_julec_label_1ad697cae:;
	{
		auto expr = &((*((*(_101034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad697e57:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _101215_imp = *it;
			{
				jule::Ptr<_1a79ab309_FnIns> _10138_mepf;
				jule::Bool _101314_exist;
				({
					__jule_tuple_x_1a79ab309_FnIns__jule_tuple_bool __jule_assign_result = _1a9e525c2_findTraitMetMap(_self_, _101050_m);
					_10138_mepf = __jule_assign_result.__jule_result_arg0;
					_101314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101314_exist) {
					jule::Slice<jule::Uintptr> _10169_vals = (*_self_.alloc)._field_traitMetMap[_10138_mepf];;
					{
						auto expr = &(_10169_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad699cb1:;
						if (it != expr_end) {
							jule::Uintptr _101712_val = *it;
							{
								if ((_101712_val == static_cast<jule::Uintptr>(_101215_imp))) {
									goto _iter_next_1ad697e57;
								};
							}
							_iter_next_1ad699cb1:;
							++it;
							goto _iter_begin_1ad699cb1;
						}
						_iter_end_1ad699cb1:;
					};
					(*_self_.alloc)._field_traitMetMap[_10138_mepf]=jule::append(_10169_vals,jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101215_imp)}));
				} else {
					(*_self_.alloc)._field_traitMetMap[_10138_mepf]=jule::append(jule::Slice<jule::Uintptr>::alloc(0LL, 0LL, 0),jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101215_imp)}));
				};
				{
					auto expr = &((*(_101215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad69a7a6:;
					if (it != expr_end) {
						jule::Ptr<_1a79960d5_StructIns> _102716_ins = *it;
						{
							_1a9e52281_funcTrait(_self_, &(_102716_ins), &(_10138_mepf));
							jule::Ptr<_1a79a8328_Fn> _10309_sm = _1a799714c_FindMethod(_102716_ins.ptr(), (*((*(_101050_m))))._field_Ident, false);;
							if (((_10309_sm == nullptr) || ((*(_10309_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a9e491bd_addIndent(_self_);
							_1a9e48c17_write(_self_, jule::Str::lit("{\n", 2));
							_1a9e495b9_indent(_self_);
							if (((*((*(_101050_m))))._field_Exceptional || (!(_1a79a879b_IsVoid((*(_101050_m)).ptr()))))) {
								_1a9e48c17_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a9d8c6a5_func(&((*_self_.alloc)._field_Buf), &(_10309_sm));
							_1a9e48c17_write(_self_, jule::Str::lit("(", 1));
							_1a9e48c17_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a9e5b7a7_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102716_ins);
							_1a9e48c17_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10475_ptr = (!(_1a79a7206_IsRef((*((*(_101050_m))))._field_Params[0LL].ptr())));;
							if (_10475_ptr) {
								_1a9e48c17_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101050_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1ad6a22e6:;
								if (it != expr_end) {
									jule::Ptr<_1a79a6854_Param> _105112_mp = *it;
									{
										_1a9e48c17_write(_self_, jule::Str::lit(", ", 2));
										static__1a9d8d068_param(&((*_self_.alloc)._field_Buf), &(_105112_mp));
									}
									_iter_next_1ad6a22e6:;
									++it;
									goto _iter_begin_1ad6a22e6;
								}
								_iter_end_1ad6a22e6:;
							};
							_1a9e48c17_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a9e493bb_doneIndent(_self_);
						}
						_iter_next_1ad69a7a6:;
						++it;
						goto _iter_begin_1ad69a7a6;
					}
					_iter_end_1ad69a7a6:;
				};
			}
			_iter_next_1ad697e57:;
			++it;
			goto _iter_begin_1ad697e57;
		}
		_iter_end_1ad697e57:;
	};
}



inline void _1a9e52b33_traitWrappers(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a643c3eb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a681a39a_Package>*>((void*)__jule_anon_1ad6a4639, jule::Ptr<__jule_anon_1ad6a4639_ctx>::make(__jule_anon_1ad6a4639_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad6a4639_ctx_handler));
}



inline void _1a9e52e96_traitDataMethods(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _107638_t, jule::Ptr<_1a79960d5_StructIns> _107649_s) {
	_1a643d298_IterTraitMethods(_107638_t, jule::__new_closure<void,jule::Ptr<_1a79a8328_Fn>*>((void*)__jule_anon_1ad6a59c0, jule::Ptr<__jule_anon_1ad6a59c0_ctx>::make(__jule_anon_1ad6a59c0_ctx{._self_=_self_,._107649_s=_107649_s}).as<jule::Uintptr>(), __jule_anon_1ad6a59c0_ctx_handler));
}



inline void _1a9e533b4_traitData(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79bb6d2_Trait>* _109331_t, jule::I64 _109342_i, jule::Ptr<_1a79960d5_StructIns>* _109355_s) {
	_200880c8a_StrBuilder _10947_ident = static__2008811b9_New((*((*(_109331_t))))._field_Ident.len());;
	static__1a9d8cc7c_traitDecl(&(_10947_ident), (*(_109331_t)));
	_1a9e48c17_write(_self_, jule::Str::lit("static ", 7));
	_1a9e48ec0_writeBytes(_self_, _2008829c3_Buf(&_10947_ident));
	_1a9e48c17_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a9e48ec0_writeBytes(_self_, _2008829c3_Buf(&_10947_ident));
	_1a9e48c17_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a9e48c17_write(_self_, _1bd81e354_Itoa(_109342_i));
	_1a9e48c17_write(_self_, jule::Str::lit(" {\n", 3));
	_1a9e491bd_addIndent(_self_);
	_1a9e495b9_indent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a9e48c17_write(_self_, _1bd81e354_Itoa(_1a9e49c4b_pushDealloc(_self_, jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait((*(_109355_s)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)}))));
	_1a9e48c17_write(_self_, jule::Str::lit(",\n", 2));
	_1a9e52e96_traitDataMethods(_self_, _109331_t, (*(_109355_s)));
	_1a9e493bb_doneIndent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a9e535b2_traitDatas(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a643c3eb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a681a39a_Package>*>((void*)__jule_anon_1ad6b32c4, jule::Ptr<__jule_anon_1ad6b32c4_ctx>::make(__jule_anon_1ad6b32c4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad6b32c4_ctx_handler));
}



inline void _1a9e537b0_globals(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6b2a21:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _113015_v = *it;
			{
				_1a9e5d501_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_113015_v))._field_Kind))._field_Kind);
				_1a9e48c17_write(_self_, jule::Str::lit(" ", 1));
				static__1a9d8dc17_var(&((*_self_.alloc)._field_Buf), _113015_v);
				_1a9e48c17_write(_self_, jule::Str::lit(" = ", 3));
				_1a9d85a44_model((*_self_.alloc)._field_ec, (*((*((*_113015_v.alloc)._field_Value))._field_Data))._field_Model);
				_1a9e48c17_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ad6b2a21:;
			++it;
			goto _iter_begin_1ad6b2a21;
		}
		_iter_end_1ad6b2a21:;
	};
}



inline void _1a9e539ad_decls(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a9e4bdb3_structurePlainDecls(_self_);
	_1a9e4da30_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_2008824a6_Len(&(*_self_.alloc)._field_Buf);
	_1a9e4dc2d_structureMethodDecls(_self_);
	_1a9e4ed83_funcDecls(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9e50339_traitDataTypes(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_2008824a6_Len(&(*_self_.alloc)._field_Buf);
	_1a9e52b33_traitWrappers(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9e535b2_traitDatas(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_2008824a6_Len(&(*_self_.alloc)._field_Buf);
	_1a9e537b0_globals(_self_);
}



inline void _1a9e53c66_structureMethods(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _115838_s) {
	{
		auto expr = &((*((*(_115838_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6be049:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _115915_f = *it;
			{
				_1a9e51e1d_func(_self_, &(_115915_f));
				_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ad6be049:;
			++it;
			goto _iter_begin_1ad6be049;
		}
		_iter_end_1ad6be049:;
	};
}



inline void _1a9e5401e_structureOstream(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _116538_s) {
	_1a9e495b9_indent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1a9d8d640_structureIns(&((*_self_.alloc)._field_Buf), _116538_s);
	_1a9e48c17_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a9e491bd_addIndent(_self_);
	_1a9e495b9_indent(_self_);
	jule::Ptr<_1a79a8328_Fn> _11737_fts = _1a799714c_FindMethod((*(_116538_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1a685bde2_Str(_11737_fts)) {
		_1a9e48c17_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1a9d8c6a5_func(&((*_self_.alloc)._field_Buf), &(_11737_fts));
		_1a9e48c17_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a9e48c17_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1a9d867ae_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_116538_s))))._field_Decl))._field_Ident);
		_1a9e48c17_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_116538_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad6c3b86:;
			if (it != expr_end) {
				jule::I64 _11839_i = it - expr->begin();
				jule::Ptr<_1a7995535_FieldIns> _118316_f = *it;
				{
					_1a9e495b9_indent(_self_);
					_1a9e48c17_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1a9d867ae_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_118316_f))._field_Decl))._field_Ident);
					_1a9e48c17_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1a79960d5_StructIns> _11905_strct = _1a7a865c1_Struct((*_118316_f.alloc)._field_Kind.ptr());;
					if ((((_11905_strct != nullptr) && ((*_11905_strct.alloc)._field_Decl != nullptr)) && (*(*(_11905_strct))._field_Decl.alloc)._field_Binded)) {
						_1a9e48c17_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1a9d8d92b_field(&((*_self_.alloc)._field_Buf), &((*_118316_f.alloc)._field_Decl));
						_1a9e48c17_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a9e48c17_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1a9d8d92b_field(&((*_self_.alloc)._field_Buf), &((*_118316_f.alloc)._field_Decl));
					};
					if (((_11839_i + 1LL) < (*((*(_116538_s))))._field_Fields.len())) {
						_1a9e48c17_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a9e48c17_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ad6c3b86:;
				++it;
				_11839_i++;
				goto _iter_begin_1ad6c3b86;
			}
			_iter_end_1ad6c3b86:;
		};
		_1a9e495b9_indent(_self_);
		_1a9e48c17_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a9e495b9_indent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a9e493bb_doneIndent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a9e542c7_structureIns(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a79960d5_StructIns>* _121634_s) {
	_1a9e53c66_structureMethods(_self_, _121634_s);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9e5401e_structureOstream(_self_, _121634_s);
}



inline void _1a9e54580_structure(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a7993357_Struct>* _122231_s) {
	{
		auto expr = &((*((*(_122231_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6cce37:;
		if (it != expr_end) {
			jule::Ptr<_1a79960d5_StructIns> _122315_ins = *it;
			{
				_1a9e542c7_structureIns(_self_, &(_122315_ins));
				_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ad6cce37:;
			++it;
			goto _iter_begin_1ad6cce37;
		}
		_iter_end_1ad6cce37:;
	};
}



inline void _1a9e5477d_structures(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6cd685:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _123015_s = *it;
			{
				if (((*(_123015_s))._field_Token != nullptr)) {
					_1a9e54580_structure(_self_, &(_123015_s));
					_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ad6cd685:;
			++it;
			goto _iter_begin_1ad6cd685;
		}
		_iter_end_1ad6cd685:;
	};
}



inline void _1a9e5497b_funcs(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a643c3eb_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a681a39a_Package>*>((void*)__jule_anon_1ad6d1259, jule::Ptr<__jule_anon_1ad6d1259_ctx>::make(__jule_anon_1ad6d1259_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad6d1259_ctx_handler));
}



inline void _1a9e54c34_pushInit(jule::Ptr<_1a9e48563_ObjectCoder> _self_, jule::Ptr<_1a681a39a_Package>* _125430_pkg) {
	_1a643c72b_IterFiles(_125430_pkg, jule::__new_closure<void,jule::Ptr<_1a7a4b18a_SymbolTable>*>((void*)__jule_anon_1ad6d2733, jule::Ptr<__jule_anon_1ad6d2733_ctx>::make(__jule_anon_1ad6d2733_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad6d2733_ctx_handler));
}



inline void _1a9e54e32_anonHashes(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_julec_label_1ad6d623c:;
	jule::Slice<jule::Ptr<_1a9e470ab_anonHash>> _12717_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12717_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6d5c42:;
		if (it != expr_end) {
			jule::Ptr<_1a9e470ab_anonHash> _127315_h = *it;
			{
				_1a9e51802_anonFuncIns(_self_, &((*(_127315_h))._field_expr), (*_127315_h.alloc)._field_ident);
			}
			_iter_next_1ad6d5c42:;
			++it;
			goto _iter_begin_1ad6d5c42;
		}
		_iter_end_1ad6d5c42:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1ad6d623c;
	};
}



inline void _1a9e55130_initCaller(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a9e48c17_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a9e491bd_addIndent(_self_);
	_1a643c3eb_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a681a39a_Package>*>((void*)__jule_anon_1ad6da50a, jule::Ptr<__jule_anon_1ad6da50a_ctx>::make(__jule_anon_1ad6da50a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad6da50a_ctx_handler));
	_1a9e493bb_doneIndent(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a9e5532d_end(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a9e48c17_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_21a1bc04b_Test) {
		_1a9e48c17_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a9e48c17_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a9e55691_insertBuf(jule::Ptr<_1a9e48563_ObjectCoder> _self_, _200880c8a_StrBuilder* _131131_buf, jule::I64 _131148_pos) {
	if ((_2008824a6_Len(_131131_buf) > 0LL)) {
		jule::Slice<jule::U8> _13138_head = jule::Slice<jule::U8>::alloc(0LL, (_2008824a6_Len(&(*(_self_))._field_Buf) + _2008824a6_Len(_131131_buf)), 0);;
		(_13138_head).append(_2008829c3_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _131148_pos));;
		(_13138_head).append(_2008829c3_Buf(_131131_buf));;
		(_13138_head).append(_2008829c3_Buf(&(*_self_.alloc)._field_Buf).slice(_131148_pos));;
		{
			_200882c7b_SetBuf(&(*_self_.alloc)._field_Buf, _13138_head);
		};
	};
}



inline void _1a9e5588e_serializeHead(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a9e4b90c_prepareStructures(_self_);
	_1a9e4b258_head(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
	_1a9e539ad_decls(_self_);
	_1a9e55691_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_2008824a6_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_2008824a6_Len(&(*_self_.alloc)._field_resultDecls);
	_1a9e48c17_write(_self_, jule::Str::lit("\n", 1));
	_1a9e5477d_structures(_self_);
	_1a9e5497b_funcs(_self_);
	_1a9e55130_initCaller(_self_);
	_1a9e48c17_write(_self_, jule::Str::lit("\n\n", 2));
	_1a9e54e32_anonHashes(_self_);
	_1a9e55691_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_2008824a6_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_2008824a6_Len(&(*_self_.alloc)._field_deallocObj);
	_1a9e55691_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2008824a6_Len(&(*_self_.alloc)._field_anyObj);
	_1a9e55691_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2008824a6_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1a9e55a8c_Serialize(jule::Ptr<_1a9e48563_ObjectCoder> _self_) {
	_1a9e5588e_serializeHead(_self_);
	_1a9e5532d_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e48563_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9e57ab1_Str(_1a9e576e8_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a9e57e02_Equal(jule::Ptr<_1a9e576e8_customType> _self_, jule::Ptr<_1a7a828ec_TypeKind> _4418_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e576e8_customType _Src) {
	_Stream << _1a9e57ab1_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a9e58331_typeCoder> static__1a9e5884d_new(jule::Ptr<_1a9e48563_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1a9e58331_typeCoder> _707_tc = jule::new_ptr<_1a9e58331_typeCoder>(_1a9e58331_typeCoder{._field_oc=(*(_6921_oc)), });;
	(*(_707_tc))._field_rc=static__1a9e613e4_new(&(_707_tc));
	return _707_tc;;
}



inline void _1a9e58bb1_toType(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((!_7648_id.equal("uintptr", 7))) {
		_7648_id=_1bd8214bb_RealKindOf(_7648_id);
	};
	_20088172a_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_2008819d3_WriteByte(_7627_buf, (_7648_id[0LL] - 32LLU));
	} else {
		_2008819d3_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_20088172a_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1a9e59024_prim(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _9025_buf, jule::Ptr<_1a7a8a4c6_Prim> _9042_p) {
	_1a9e58bb1_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1a9e59387_tuple(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _9526_buf, jule::Ptr<_1a7a905b9_Tuple> _9547_t) {
	_20088172a_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad702e7e:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> _9715_tk = *it;
			{
				_1a9e5d501_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_2008819d3_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1ad702e7e:;
			++it;
			_978_i++;
			goto _iter_begin_1ad702e7e;
		}
		_iter_end_1ad702e7e:;
	};
	_2008819d3_WriteByte(_9526_buf, '>');
}



inline void _1a9e596ea_asSptr(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_20088172a_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_200881472_Write(_10727_buf, _10744_elem);
	_2008819d3_WriteByte(_10727_buf, '>');
}



inline void _1a9e59a5d_sptr(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _11425_buf, jule::Ptr<_1a7a8e002_Sptr> _11446_sptr) {
	_20088172a_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a9e5d501_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_2008819d3_WriteByte(_11425_buf, '>');
}



inline void _1a9e59dc1_ptr(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _12124_buf, jule::Ptr<_1a7a927b9_Ptr> _12145_p) {
	;
	if (_1a7a93303_IsUnsafe(_12145_p.ptr())) {
		_20088172a_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1a9e5d501_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_20088172a_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a9e5a234_enumDecl(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _13229_buf, jule::Ptr<_1a79bdddd_Enum> _13250_e) {
	_1a9e5d501_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1a9e5a597_typeEnumDecl(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _13733_buf, jule::Ptr<_1a79c05e8_TypeEnum> _13754_e) {
	_20088172a_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a9e5a90a_asSlice(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _14128_buf, jule::Ptr<_1a7a828ec_TypeKind> _14149_elem) {
	_20088172a_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1a9e5d501_kind(_self_, _14128_buf, _14149_elem);
	_2008819d3_WriteByte(_14128_buf, '>');
}



inline void _1a9e5ac6d_slice(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _14826_buf, jule::Ptr<_1a7a8e9c5_Slc> _14847_s) {
	_1a9e5a90a_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1a9e5b0d1_mapType(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _15328_buf, jule::Ptr<_1a7a91169_Map> _15349_m) {
	_20088172a_WriteStr(_15328_buf, jule::Str::lit("jule::Map<", 10));
	_1a9e5d501_kind(_self_, _15328_buf, (*(_15349_m))._field_Key);
	_2008819d3_WriteByte(_15328_buf, ',');
	_1a9e5d501_kind(_self_, _15328_buf, (*_15349_m.alloc)._field_Val);
	_2008819d3_WriteByte(_15328_buf, '>');
}



inline void _1a9e5b7a7_structureIns(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _16733_buf, jule::Ptr<_1a79960d5_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1a9d8d640_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1a79718da_Directive> _1723_d = _1a64473a1_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1723_d != nullptr)) {
		_200881472_Write(_16733_buf, _1a9e55e55_concatAllParts((*_1723_d.alloc)._field_Args));
		_20088172a_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1a9d8d640_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_2008819d3_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad70e92a:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1a7a81016_InsGeneric> _18016_g = *it;
				{
					_1a9e5d501_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_2008819d3_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1ad70e92a:;
				++it;
				_1809_i++;
				goto _iter_begin_1ad70e92a;
			}
			_iter_end_1ad70e92a:;
		};
		_2008819d3_WriteByte(_16733_buf, '>');
	};
}



inline void _1a9e5bb1a_array(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _19126_buf, jule::Ptr<_1a7a91ce6_Arr> _19147_a) {
	_20088172a_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1a9e5d501_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_2008819d3_WriteByte(_19126_buf, ',');
	_20088172a_WriteStr(_19126_buf, _1bd81e354_Itoa((*_19147_a.alloc)._field_N));
	_2008819d3_WriteByte(_19126_buf, '>');
}



inline void _1a9e5c2e1_paramIns(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _21429_buf, jule::Ptr<_1a79aa281_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_20088172a_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1a9e5d501_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_2008819d3_WriteByte(_21429_buf, '>');
	} else {
		_1a9e5d501_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_2008819d3_WriteByte(_21429_buf, '*');
	};
}



inline void _1a9e5c9b7_funcInsResult(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _24634_s, jule::Ptr<_1a79ab309_FnIns>* _24654_f) {
	if (_1a79a879b_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_20088172a_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_20088172a_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_20088172a_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a9e634a1_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_2008819d3_WriteByte(_24634_s, '>');
		return;;
	};
	_1a9e634a1_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1a9e5cd2a_anonFunc(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _26429_buf, jule::Ptr<_1a79ab309_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1a7a86d74_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1a9e4a686_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1a9e5c9b7_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_2008819d3_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7221bd:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1a79aa281_ParamIns> _27315_param = *it;
			{
				if (_1a79a6e70_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1ad7221bd;
				};
				_1a9e5c2e1_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_2008819d3_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1ad7221bd:;
			++it;
			_2738_i++;
			goto _iter_begin_1ad7221bd;
		}
		_iter_end_1ad7221bd:;
	};
}



inline void _1a9e5d18d_func(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _28525_buf, jule::Ptr<_1a79ab309_FnIns> _28546_f) {
	_20088172a_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1a9e5cd2a_anonFunc(_self_, _28525_buf, _28546_f);
	_2008819d3_WriteByte(_28525_buf, '>');
}



inline void _1a9e5d501_kind(_1a9e58331_typeCoder* _self_, _200880c8a_StrBuilder* _29225_buf, jule::Ptr<_1a7a828ec_TypeKind> _29246_k) {
	{
		
		if ((_1a7a865c1_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72a737:;
			{
				_1a9e5b7a7_structureIns(_self_, _29225_buf, _1a7a865c1_Struct(_29246_k));
				return;;
			}
		}
		else if (_1a7a83744_Binded(_29246_k.ptr())) {
			_case_begin_1ad72a7d1:;
			{
				_20088172a_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a7a8504d_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72a847:;
			{
				_1a9e59024_prim(_self_, _29225_buf, _1a7a8504d_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1a7a86d74_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72a8ad:;
			{
				_1a9e59387_tuple(_self_, _29225_buf, _1a7a86d74_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1a7a852d4_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72a924:;
			{
				_1a9e59a5d_sptr(_self_, _29225_buf, _1a7a852d4_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1a7a8556a_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72a99b:;
			{
				_1a9e59dc1_ptr(_self_, _29225_buf, _1a7a8556a_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1a7a85801_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72aa23:;
			{
				_1a9e5a234_enumDecl(_self_, _29225_buf, _1a7a85801_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1a7a85a87_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72aa9a:;
			{
				_1a9e5a597_typeEnumDecl(_self_, _29225_buf, _1a7a85a87_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1a7a860a4_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72ab22:;
			{
				_1a9e5ac6d_slice(_self_, _29225_buf, _1a7a860a4_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1a7a86add_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72ab99:;
			{
				_1a9e5b0d1_mapType(_self_, _29225_buf, _1a7a86add_Map(_29246_k));
				return;;
			}
		}
		else if ((_1a7a86857_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72ac21:;
			{
				_20088172a_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1a7a85d1d_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72ac98:;
			{
				_1a9e5bb1a_array(_self_, _29225_buf, _1a7a85d1d_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1a7a8633a_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1ad72ad20:;
			{
				_1a9e5d18d_func(_self_, _29225_buf, _1a7a8633a_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1ad72a55b:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data27)) {
			_case_begin_1ad72ada8:;
			{
				_20088172a_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1a9e576e8_customType>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1ad734378:;
			{
				_20088172a_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1ad734323:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e58331_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9e60e1b_resultCoder> static__1a9e613e4_new(jule::Ptr<_1a9e58331_typeCoder>* _35921_tc) {
	return jule::new_ptr<_1a9e60e1b_resultCoder>(_1a9e60e1b_resultCoder{._field_tc=(*(_35921_tc))});;
}



inline void _1a9e61757_ptr(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _36324_s, jule::Ptr<_1a7a927b9_Ptr> _36343_p) {
	_20088172a_WriteStr(_36324_s, jule::Str::lit("p", 1));
	_1a9e6313d_codeMut(_self_, _36324_s, &((*(_36343_p))._field_Elem));
}



inline void _1a9e61aba_sptr(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _36825_s, jule::Ptr<_1a7a8e002_Sptr> _36844_p) {
	_20088172a_WriteStr(_36825_s, jule::Str::lit("x", 1));
	_1a9e6313d_codeMut(_self_, _36825_s, &((*(_36844_p))._field_Elem));
}



inline void _1a9e61e2d_mapType(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _37328_s, jule::Ptr<_1a7a91169_Map> _37347_p) {
	_20088172a_WriteStr(_37328_s, jule::Str::lit("m", 1));
	_1a9e6313d_codeMut(_self_, _37328_s, &((*(_37347_p))._field_Key));
	_1a9e6313d_codeMut(_self_, _37328_s, &((*_37347_p.alloc)._field_Val));
}



inline void _1a9e62291_slice(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _37926_s, jule::Ptr<_1a7a8e9c5_Slc> _37945_slc) {
	_20088172a_WriteStr(_37926_s, jule::Str::lit("s", 1));
	_1a9e6313d_codeMut(_self_, _37926_s, &((*(_37945_slc))._field_Elem));
}



inline void _1a9e62604_arr(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _38424_s, jule::Ptr<_1a7a91ce6_Arr> _38443_arr) {
	_20088172a_WriteStr(_38424_s, jule::Str::lit("a", 1));
	_20088172a_WriteStr(_38424_s, _1bd81e08a_FmtInt(static_cast<jule::I64>((*(_38443_arr))._field_N), 16LL));
	_1a9e6313d_codeMut(_self_, _38424_s, &((*_38443_arr.alloc)._field_Elem));
}



inline void _1a9e62967_func(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _39025_s, jule::Ptr<_1a79ab309_FnIns> _39044_f) {
	_20088172a_WriteStr(_39025_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39044_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad73b7d1:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> _39215_p = *it;
			{
				if ((*((*(_39215_p))._field_Decl))._field_Reference) {
					_20088172a_WriteStr(_39025_s, jule::Str::lit("r", 1));
				};
				_1a9e6313d_codeMut(_self_, _39025_s, &((*_39215_p.alloc)._field_Kind));
			}
			_iter_next_1ad73b7d1:;
			++it;
			goto _iter_begin_1ad73b7d1;
		}
		_iter_end_1ad73b7d1:;
	};
	if (((*_39044_f.alloc)._field_Result != nullptr)) {
		_1a9e6313d_codeMut(_self_, _39025_s, &((*_39044_f.alloc)._field_Result));
	};
}



inline void _1a9e62cca_tup(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _40324_s, jule::Ptr<_1a7a905b9_Tuple> _40343_tup) {
	{
		auto expr = &((*(_40343_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad73de32:;
		if (it != expr_end) {
			jule::Ptr<_1a7a828ec_TypeKind> _40415_t = *it;
			{
				_20088172a_WriteStr(_40324_s, jule::Str::lit("__jule_tuple_", 13));
				_1a9e6313d_codeMut(_self_, _40324_s, &(_40415_t));
			}
			_iter_next_1ad73de32:;
			++it;
			goto _iter_begin_1ad73de32;
		}
		_iter_end_1ad73de32:;
	};
}



inline void _1a9e6313d_codeMut(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _41028_s, jule::Ptr<_1a7a828ec_TypeKind>* _41048_t) {
	{
		auto &_match_expr{ (*((*(_41048_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26)) {
			_case_begin_1ad740142:;
			{
				_1a9e61757_ptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a927b9_Ptr>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)) {
			_case_begin_1ad74085c:;
			{
				_1a9e61aba_sptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a8e002_Sptr>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data24)) {
			_case_begin_1ad7404e9:;
			{
				_1a9e61e2d_mapType(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a91169_Map>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22)) {
			_case_begin_1ad740560:;
			{
				_1a9e62291_slice(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a8e9c5_Slc>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data25)) {
			_case_begin_1ad7405c6:;
			{
				_1a9e62604_arr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a91ce6_Arr>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)) {
			_case_begin_1ad74063c:;
			{
				_1a9e62967_func(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a79ab309_FnIns>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3)) {
			_case_begin_1ad740a9e:;
			{
				jule::Ptr<_1a79bdddd_Enum> _4254_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a79bdddd_Enum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3);;
				static__1a9d8be68_toOut(_41028_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4)) {
			_case_begin_1ad740b15:;
			{
				jule::Ptr<_1a79c05e8_TypeEnum> _4284_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a79c05e8_TypeEnum>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data4);;
				static__1a9d8be68_toOut(_41028_s, (*(_4284_te))._field_Ident, static_cast<jule::Uintptr>(_4284_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)) {
			_case_begin_1ad740b7b:;
			{
				jule::Ptr<_1a79960d5_StructIns> _4318_si = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a79960d5_StructIns>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0);;
				static__1a9d8d640_structureIns(_41028_s, &(_4318_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data2)) {
			_case_begin_1ad740be2:;
			{
				jule::Ptr<_1a79bb6d2_Trait> _4348_trt = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a79bb6d2_Trait>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data2);;
				static__1a9d8cc7c_traitDecl(_41028_s, _4348_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)) {
			_case_begin_1ad740c69:;
			{
				_20088172a_WriteStr(_41028_s, (*((*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a8a4c6_Prim>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7a82446_Kind_mptr_data23)) {
			_case_begin_1ad740ce1:;
			{
				_1a9e62cca_tup(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a7a905b9_Tuple>((jule::Trait::Type*)&_1a7a82446_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1ad740483:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:441:4"));;
			}
		}
		_match_end_1ad74042d:;
	};
}



inline void _1a9e634a1_codeMut1(_1a9e60e1b_resultCoder* _self_, _200880c8a_StrBuilder* _44529_s, jule::Ptr<_1a7a828ec_TypeKind>* _44549_t) {
	jule::Ptr<_1a7a905b9_Tuple> _4467_tup = _1a7a86d74_Tup((*(_44549_t)).ptr());;
	if ((_4467_tup != nullptr)) {
		_1a9e62cca_tup(_self_, _44529_s, _4467_tup);
	} else {
		_1a9e5d501_kind((*(_self_))._field_tc.ptr(), _44529_s, (*(_44549_t)));
	};
}



inline jule::Slice<jule::U8> _1a9e637ae_code(_1a9e60e1b_resultCoder* _self_, jule::Ptr<_1a7a828ec_TypeKind>* _45425_t) {
	_200880c8a_StrBuilder _4557_s = static__2008811b9_New(20LL);;
	_1a9e6313d_codeMut(_self_, &(_4557_s), _45425_t);
	return _2008829c3_Buf(&_4557_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9e60e1b_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad74bba9_Name(_1ad74b78b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad74bd0d_What(_1ad74b78b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad74be62_Reset(_1ad74b78b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad74c0b6_Short(_1ad74b78b_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad74b78b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ad74eeba_Name(_1ad75033e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad75062a_What(_1ad75033e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad75076d_Reset(_1ad75033e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad7508b1_Short(_1ad75033e_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad75033e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ad75362d_Name(_1ad7539a2_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad753c8d_What(_1ad7539a2_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad753dd1_Reset(_1ad7539a2_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad754024_Short(_1ad7539a2_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad7539a2_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ad756cd5_Name(_1ad757159_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad757445_What(_1ad757159_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad757588_Reset(_1ad757159_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad7576cb_Short(_1ad757159_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad757159_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ad75a448_Name(_1ad75a7bc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad75aaa8_What(_1ad75a7bc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad75abeb_Reset(_1ad75a7bc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad75ad3e_Short(_1ad75a7bc_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad75a7bc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a609a5_FlagSet> static__1a9a60c91_New(void) {
	return jule::new_ptr<_1a9a609a5_FlagSet>(_1a9a609a5_FlagSet{._field_flags=jule::Slice<jule::Trait>::alloc(0LL, 20LL)});;
}



inline jule::Trait _1a9a7e74e_FindFlag(_1a9a609a5_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad765761:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1a9a75a86_CommonFlagMptrData*)_7215_flag.safe_type())->_1a9a8878b_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1ad765761:;
			++it;
			goto _iter_begin_1ad765761;
		}
		_iter_end_1ad765761:;
	};
	return nullptr;;
}



inline jule::Trait _1a9a8aa46_FindFlagShort(_1a9a609a5_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7665db:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1a9a75a86_CommonFlagMptrData*)_8215_flag.safe_type())->_1a9a78a23_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1ad7665db:;
			++it;
			goto _iter_begin_1ad7665db;
		}
		_iter_end_1ad7665db:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a9a8b11d_Parse(_1a9a609a5_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1a9a8c927_argParser _1167_ap = _1a9a8c927_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, };;
	({
		auto except = _1a9a8de23_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1ad75a7bc_Flag> _1ad7c5d76_addFlagCommon(_1a9a609a5_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a9a7e74e_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a9a8aa46_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1ad75a7bc_Flag> _1407_flag = jule::new_ptr<_1ad75a7bc_Flag>(_1ad75a7bc_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_what=_13156_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1ad757159_Flag> _1ad7cd17a_addFlagCommon(_1a9a609a5_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a9a7e74e_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a9a8aa46_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1ad757159_Flag> _1407_flag = jule::new_ptr<_1ad757159_Flag>(_1ad757159_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_what=_13156_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1ad7c3648_AddVar(_1a9a609a5_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1ad75a7bc_Flag> _1717_flag = _1ad7c5d76_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1ad7ca991_AddVar(_1a9a609a5_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1ad757159_Flag> _1717_flag = _1ad7cd17a_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a609a5_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1ad76d4a0_parseInteger(_1a9a8c927_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1ad771096:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d969d9ae_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ad77145e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d969d9ae_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ad770ae0:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d969d9ae_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ad770b56:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1ad770bbc:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad770a79:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad77097a:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1ad775e25_parseInteger(_1a9a8c927_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1ad7789c7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d969d9ae_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ad778d90:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d969d9ae_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ad778521:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d969d9ae_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ad778587:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1ad7785ed:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad7784aa:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad7783ab:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a9a8d241_getData(_1a9a8c927_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a9a8d4b6_processFlag(_1a9a8c927_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data3)) {
			_case_begin_1ad76a6ab:;
			{
				jule::Ptr<_1ad757159_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1ad757159_Flag>((jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1ad76a656:;
	};
	jule::Str _2203_data = _1a9a8d241_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9a75a86_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a9a8878b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data0)) {
			_case_begin_1ad76c559:;
			{
				jule::Ptr<_1ad74b78b_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1ad74b78b_Flag>((jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1ad76d4a0_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1ad76d7e1, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9a75a86_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a9a8878b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data1)) {
			_case_begin_1ad76be2c:;
			{
				jule::Ptr<_1ad75033e_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1ad75033e_Flag>((jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ad775e25_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1ad7766a6, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9a75a86_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a9a8878b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data2)) {
			_case_begin_1ad76c5c0:;
			{
				jule::Ptr<_1ad7539a2_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1ad7539a2_Flag>((jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1bd814305_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a9a75a86_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a9a8878b_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data4)) {
			_case_begin_1ad76c647:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1ad75a7bc_Flag>((jule::Trait::Type*)&_1a9a75a86_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1ad76bd3e:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a9a8d76e_singleDash(_1a9a8c927_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25710_r;
		_iter_begin_1ad78025e:;
		std::tie(_25710_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1a9a8aa46_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1a9a8d4b6_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1ad78025e:;
			it += len;
			goto _iter_begin_1ad78025e;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a9a8da27_doubleDash(_1a9a8c927_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1a9a7e74e_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1a9a8d4b6_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a9a8dc25_tryArg(_1a9a8c927_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1a9a8da27_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a9a8d76e_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a9a8de23_parse(_1a9a8c927_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a9a8dc25_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1ad785be3:;
	}
	_iter_end_1ad785be3:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1a9a8c927_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d7cd778c_Cmd> static__1d7cd7baa_New(jule::Str _2616_path) {
	return jule::new_ptr<_1d7cd778c_Cmd>(_1d7cd778c_Cmd{._field_path=_2616_path, });;
}



inline jule::VoidExceptional _1d7cd7da8_Spawn(_1d7cd778c_Cmd* _self_) {
	return _1d7cdbd79_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d7cd833c_Wait(_1d7cd778c_Cmd* _self_) {
	return _1d7cdc30d_wait(_self_);
}



inline jule::VoidExceptional _1d7cdbd79_spawn(_1d7cd778c_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _21a586a42_UTF16FromStr(_1d7cdc97e_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _1d7cdcd58_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1d7cde079_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d7cdc30d_wait(_1d7cd778c_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_21a5b58d9_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_21a5b58d9_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_897_exitCode)};;
}





std::ostream &operator<<(std::ostream &_Stream, _1d7cd778c_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6459dca_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a6439bac_IR__jule_tuple_s_1d974c80a_Log static__1a643a152_Build(jule::Str _2718_path, jule::I64 _2729_flags) {
	__jule_tuple_x_1a6439bac_IR__jule_tuple_s_1d974c80a_Log __jule_func_result;
	jule::Ptr<_1a643722b_JuleImporter> _287_importer = static__1a6437627_New(_1a643bb37_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a79705a9_Ast>> _297_files;
	jule::Slice<_1d974c80a_Log> _2918_logs;
	({
		__jule_tuple_sx_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a6438b12_ImportPackage(_287_importer.ptr(), _2718_path, true);
		_297_files = __jule_assign_result.__jule_result_arg0;
		_2918_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2918_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2918_logs;
		return __jule_func_result;;
	};
	jule::Str _333_root = _2718_path;;
	if ((_297_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a681a39a_Package> _397_pkg;
	({
		__jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a7aa3b82_AnalyzePackage(_297_files, jule::Trait(_287_importer, (jule::Trait::Type*)&_1a681455e_Importer_mptr_data0), _2729_flags);
		_397_pkg = __jule_assign_result.__jule_result_arg0;
		_2918_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2918_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2918_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a6439bac_IR> _447_ir = jule::new_ptr<_1a6439bac_IR>(_1a6439bac_IR{._field_Root=_333_root, ._field_Main=_397_pkg, ._field_Used=_1a64378ad_AllPackages(_287_importer), });;
	(*(_447_ir))._field_Passes=_1a643b928_getAllUniquePasses(&((*_447_ir.alloc)._field_Main), (*_447_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _447_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a643a63b_appendStructs(_1a6439bac_IR* _self_, jule::Ptr<_1a681a39a_Package>* _5630_p, jule::Slice<jule::Ptr<_1a7993357_Struct>>* _5654_buffer) {
	{
		auto expr = &((*((*(_5630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac54e183:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _5715_f = *it;
			{
				{
					auto expr = &((*(_5715_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac54eace:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> _5816_s = *it;
						{
							if ((!((*(_5816_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a7993357_Struct>> &__jule_push_dest = (*(_5654_buffer)); __jule_push_dest.push(_5816_s); };
							};
						}
						_iter_next_1ac54eace:;
						++it;
						goto _iter_begin_1ac54eace;
					}
					_iter_end_1ac54eace:;
				};
			}
			_iter_next_1ac54e183:;
			++it;
			goto _iter_begin_1ac54e183;
		}
		_iter_end_1ac54e183:;
	};
}



inline jule::Slice<jule::Ptr<_1a7993357_Struct>> _1a643a8c2_GetAllStructures(_1a6439bac_IR* _self_) {
	jule::Slice<jule::Ptr<_1a7993357_Struct>> _6911_buffer = nullptr;;
	_1a643a63b_appendStructs(_self_, &((*(_self_))._field_Main), &(_6911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac550c78:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _7115_u = *it;
			{
				if ((!((*(_7115_u))._field_Binded))) {
					_1a643a63b_appendStructs(_self_, &((*_7115_u.alloc)._field_Package), &(_6911_buffer));
				};
			}
			_iter_next_1ac550c78:;
			++it;
			goto _iter_begin_1ac550c78;
		}
		_iter_end_1ac550c78:;
	};
	return _6911_buffer;;
}



inline void _1a643ac35_appendGlobals(_1a6439bac_IR* _self_, jule::Ptr<_1a681a39a_Package>* _7930_p, jule::Slice<jule::Ptr<_1a685a682_Var>>* _7954_buffer) {
	{
		auto expr = &((*((*(_7930_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5523c8:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac552d24:;
					if (it != expr_end) {
						jule::Ptr<_1a685a682_Var> _8116_v = *it;
						{
							if (((((*(_8116_v))._field_Token != nullptr) && (!((*_8116_v.alloc)._field_Binded))) && (!((*_8116_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = (*(_7954_buffer)); __jule_push_dest.push(_8116_v); };
							};
						}
						_iter_next_1ac552d24:;
						++it;
						goto _iter_begin_1ac552d24;
					}
					_iter_end_1ac552d24:;
				};
			}
			_iter_next_1ac5523c8:;
			++it;
			goto _iter_begin_1ac5523c8;
		}
		_iter_end_1ac5523c8:;
	};
}



inline jule::Slice<jule::Ptr<_1a685a682_Var>> _1a643aebb_GetAllGlobals(_1a6439bac_IR* _self_) {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _9211_buffer = nullptr;;
	_1a643ac35_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9211_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac55472c:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _9415_u = *it;
			{
				if ((!((*(_9415_u))._field_Binded))) {
					_1a643ac35_appendGlobals(_self_, &((*_9415_u.alloc)._field_Package), &(_9211_buffer));
				};
			}
			_iter_next_1ac55472c:;
			++it;
			goto _iter_begin_1ac55472c;
		}
		_iter_end_1ac55472c:;
	};
	return _9211_buffer;;
}



inline void _1a643b1b9_Order(_1a6439bac_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a643a8c2_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a643aebb_GetAllGlobals(_self_);
	_1ac556311_order(&((*(_self_))._field_Ordered._field_Structs));
	_1ac55b965_order(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1a6439bac_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _21a585ac9_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _21a585d93_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _21a5861d4_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a9bcdd:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1a9a9bcdd:;
			++it;
			goto _iter_begin_1a9a9bcdd;
		}
		_iter_end_1a9a9bcdd:;
	};
	jule::Slice<jule::U16> _956_a = jule::Slice<jule::U16>::alloc(_886_n, _886_n, 0);;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a9d020:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1a9a9dc8a:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1a9a9d96b:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21a585d93_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1a9a9d905:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1a9a9d806:;
				};
			}
			_iter_next_1a9a9d020:;
			++it;
			goto _iter_begin_1a9a9d020;
		}
		_iter_end_1a9a9d020:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _21a58646a_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _1216_n = 0LL;;
	jule::I64 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1a9aa3586:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1a9aa3355:;
					{
						_1206_a[_1216_n]=_21a585ac9_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1a9aa2e9d:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1a9aa2e37:;
			};
			(_1216_n)++;
		}
	_iter_next_1a9aa0ee0:;
	}
	_iter_end_1a9aa0ee0:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _21a5867de_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1a9aa604a:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_14929_r)}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1a9aa60e4:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21a585d93_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_1563_r1),static_cast<jule::U16>(_1567_r2)}));;
			}
		}
		_match_end_1a9aa5e5c:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _21a586a42_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _202_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _216_buff = jule::Slice<jule::U16>::alloc(0LL, _202_runes.len(), 0);;
	{
		auto expr = &(_202_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ab196d:;
		if (it != expr_end) {
			jule::I32 *_229_r = it;
			{
				if (((*(_229_r)) == 0LL)) {
					goto _iter_end_1a9ab196d;
				};
				_216_buff=_21a5867de_AppendRune(_216_buff, (*(_229_r)));
			}
			_iter_next_1a9ab196d:;
			++it;
			goto _iter_begin_1a9ab196d;
		}
		_iter_end_1a9ab196d:;
	};
	return _21a5867de_AppendRune(_216_buff, 0LL);;
}



inline jule::Str _21a586d50_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _386_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ab4234:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::U16 *_399_v = it;
			{
				if (((*(_399_v)) == 0LLU)) {
					(_386_codePage).mut_slice(0LL, _396_i);;
					goto _iter_end_1a9ab4234;
				};
			}
			_iter_next_1a9ab4234:;
			++it;
			_396_i++;
			goto _iter_begin_1a9ab4234;
		}
		_iter_end_1a9ab4234:;
	};
	return static_cast<jule::Str>(_21a58646a_Decode(_386_codePage));;
}



inline jule::Str _21a587119_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5510_codePage;;
	jule::I64 _566_i = 0LL;;
	for (; ; (_566_i)++) {
		{
			jule::U16 _583_r = _5023_s[_566_i];;
			if ((_583_r == 0LLU)) {
				return static_cast<jule::Str>(_21a58646a_Decode(_5510_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5510_codePage; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1a9ab5345:;
	}
	_iter_end_1a9ab5345:;;
	return jule::Str();;
}



inline jule::I64 _21a280c7a_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _21a5b5620_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _21a5b58d9_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _21a5b5c5d_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I64 _21a5b618c_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _21a5b639b_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _21a5b6720_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _21a5b6ca3_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _21a5b706c_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _21a5b7336_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _21a5b7820_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1092_buff)), ((wchar_t**)(_10914_fname)));;
}



inline jule::Bool _21a5b7b94_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _21a5b829e_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _21a5b87ee_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_1257_written)))), _12521_reserved);;
}



inline jule::Bool _21a5b8cd8_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_1337_readed)), nullptr);;
}



inline jule::Uintptr _21a5b936b_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I64 _21a5b96e0_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I64 _21a5b99a9_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I64 _21a5bba88_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _21a5bbe62_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _21a5bc319_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _21a5bc54a_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _21a6d3cc1_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _21a6d2a39_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = static_cast<jule::I32>(((_1872_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_21a6d30de_acceptRange _1962_accept = _21a6d3485_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21a6d4112_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _21a6d2a39_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = static_cast<jule::I32>(((_2342_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_21a6d30de_acceptRange _2432_accept = _21a6d3485_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21a6d4662_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_21a6d5d7d_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1aa011a49;
			};
		}
	_iter_next_1aa011a49:;
	}
	_iter_end_1aa011a49:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _21a6d492b_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1aa014c06:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1aa015102:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1aa015179:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1aa015201:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1aa015278:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1aa014c6c:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1aa014b90:;
			{
				return -1LL;;
			}
		}
		_match_end_1aa014497:;
	};
}



inline jule::I64 _21a6d4db0_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1aa019920:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1aa01a14b:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1aa017ba4:;
			{
				_37434_r=65533LL;
				goto _case_begin_1aa01a008;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1aa01a008:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1aa0177db:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1aa017775:;
	};
}



inline jule::Slice<jule::U8> _21a6d51ac_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _21a6d5531_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _21a6d5531_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1aa0223ea:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1aa020ecb:;
			{
				_41242_r=128LL;
				goto _case_begin_1aa021042;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1aa021042:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1aa02077d:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1aa020717:;
	};
}



inline jule::I64 _21a6d5ab4_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1aa0259d6;
			};
			jule::U8 _4823_x = _21a6d2a39_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1aa0259d6;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1aa0259d6;
			};
			_21a6d30de_acceptRange _4923_accept = _21a6d3485_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1aa0259d6:;
	}
	_iter_end_1aa0259d6:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21a6d5d7d_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline void _21a6d6e28_handleRW(jule::Slice<jule::U8>* _514_b) {
}



inline void _21a6dcb87_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_21a6d6e28_handleRW(_814_b);
}



inline jule::Str _200874278_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1aa04cab8_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _246_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_246_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_246_buf._len = _2326_n;
		_246_buf._cap = _2326_n;
		_246_buf._slice = _2316_e;
	};
	return _246_buf;;
}



inline jule::Slice<jule::U8> _200880020_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1aa04cab8_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _2008802a6_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _200874278_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _200880570_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _2008ae6e2_getLastOsErrorWindows(void) {
	jule::U32 _162_err = _21a5b639b_GetLastError();;
	{
		auto &_match_expr{ _162_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aa062704:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa06276a:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa0627d1:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aa062847:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1aa05e5d0:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1aa05e6ac:;
	};
}



inline jule::Slice<jule::Str> _2008b076a_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2008b0bcc_WorkingDir(void) {
	return _2008b1617_getwd();
}



inline jule::Exceptional<jule::Str> _2008b1617_getwd(void) {
	jule::Array<jule::U16,261> _1510_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _162_n = _21a5b6720_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1510_buf[0LL])));;
	if ((_162_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_2008ae6e2_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_21a587119_U16PtrToStr((&(_1510_buf[0LL])))};;
}



inline jule::Bool _1d95e0d52_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1d964dac4__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1d965701c_isExcludingLatin(_1d95e9d28_Letter, _7613_r);;
}



inline jule::Bool _1d9656390_is16(jule::Slice<_1d9654602_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aacd7a2d:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1d9654602_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_1944_range))._field_Lo),(*(_1944_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aacd7a2d:;
				++it;
				_1937_i++;
				goto _iter_begin_1aacd7a2d;
			}
			_iter_end_1aacd7a2d:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1d9654602_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2123_range))._field_Lo),(*(_2123_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1aacd6840:;
	}
	_iter_end_1aacd6840:;;
	return false;;
}



inline jule::Bool _1d9656714_is32(jule::Slice<_1d9654b30_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aacde20a:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1d9654b30_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2314_range))._field_Lo),(*(_2314_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aacde20a:;
				++it;
				_2307_i++;
				goto _iter_begin_1aacde20a;
			}
			_iter_end_1aacde20a:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1d9654b30_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2493_range))._field_Lo),(*(_2493_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1aacddb33:;
	}
	_iter_end_1aacddb33:;;
	return false;;
}



inline jule::Bool _1d965701c_isExcludingLatin(jule::Ptr<_1d96550a3_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1d9654602_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1d9656390_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1d9654b30_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1d9656714_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1d965725e_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1d964dac4__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1d965701c_isExcludingLatin(_1d96010e8_Upper, _29512_r);;
}



inline jule::I64 _1d969c848_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1aad04b6b:;
	}
	_iter_end_1aad04b6b:;;
	return -1LL;;
}



inline jule::I64 _1d969ce75_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad06ca0:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1aad06ca0:;
			++it;
			_706_i++;
			goto _iter_begin_1aad06ca0;
		}
		_iter_end_1aad06ca0:;
	};
	return -1LL;;
}



inline jule::I64 _1d969d2e9_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1d969c848_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1d969d5e6_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_200880c8a_StrBuilder _186_ss = static__2008811b9_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_20088172a_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1aad18069:;
	}
	_iter_end_1aad18069:;;
	return _200882022_Str(&_186_ss);;
}



inline jule::Bool _1d969d9ae_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1d969dd33_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1d969e2d9_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1d969d9ae_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1aad1bba5:;
	}
	_iter_end_1aad1bba5:;;
	return -1LL;;
}



inline jule::I64 _1d969e62a_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1d969e2d9_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1d969ea59_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1aad1e900:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1aad1e559;
					};
				}
			_iter_next_1aad20538:;
			}
			_iter_end_1aad20538:;;
			return _636_j;;
		}
	_iter_next_1aad1e559:;
	}
	_iter_end_1aad1e559:;;
	return -1LL;;
}



inline jule::I64 _1d969edcd_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1d969ea59_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1d96a16b5_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1d969d2e9_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1d96a1a39_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1aad27de2:;
	}
	_iter_end_1aad27de2:;;
	return -1LL;;
}



inline jule::I64 _1d96a2463_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d96a1a39_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1aad2b225:;
	}
	_iter_end_1aad2b225:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1d96a2b06_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = jule::Slice<jule::Str>::alloc(0LL, _2166_cap);;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1d969e2d9_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1aad30e0b;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1aad30e0b:;
	}
	_iter_end_1aad30e0b:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1d96a2e7a_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1d969e2d9_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1d96a39e7_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1d96a2463_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1d96a3d6b_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _1d969e2d9_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1aad36076;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1aad36076:;
	}
	_iter_end_1aad36076:;;
	return _2686_n;;
}



inline jule::Str _1d96a4355_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _1d96a3d6b_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_200880c8a_StrBuilder _2976_ss = static__2008811b9_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _1d969e2d9_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1aad39a3b;
			};
			_20088172a_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_20088172a_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1aad39a3b:;
	}
	_iter_end_1aad39a3b:;;
	_20088172a_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _200882022_Str(&_2976_ss);;
}



inline jule::Str _1d96a50d1_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d96a1a39_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1aad3e414:;
	}
	_iter_end_1aad3e414:;;
	return jule::Str();;
}



inline jule::Str _1d96a5455_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4662_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d96a1a39_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1aad415d1:;
	}
	_iter_end_1aad415d1:;;
	return jule::Str();;
}



inline jule::Str _1d96a57c9_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1d96a50d1_TrimLeft(_1d96a5455_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _2008837d7_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _200883ae5_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _200883dae_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _200884486_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_200883ae5_isSlash(_8318_path[0LL]))) || (!(_200883ae5_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200884750_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200884750_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_200883dae_toUpper(_976_p2[0LL]) == 'U')) && (_200883dae_toUpper(_976_p2[1LL]) == 'N')) && (_200883dae_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200884750_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200884750_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _200884750_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad5d1d0:;
		if (it != expr_end) {
			jule::I64 _1216_i = it - expr->begin();
			{
				if (_200883ae5_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aad5d1d0:;
			++it;
			_1216_i++;
			goto _iter_begin_1aad5d1d0;
		}
		_iter_end_1aad5d1d0:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _200884a19_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _21a586a42_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1326_n), static_cast<jule::I64>(_1326_n), 0);;
			_1326_n=_21a5b7820_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _21a586d50_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I64>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1aad5d81d:;
	}
	_iter_end_1aad5d81d:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _200884de3_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _200884a19_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1d96a81c2_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _200885135_join(jule::Slice<jule::Str> _16013_elem) {
	_200880c8a_StrBuilder _1616_s = static__2008811b9_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad645b0:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_2008824a6_Len(&_1616_s) == 0LL)) {
						_case_begin_1aad6535d:;
					}
					else if (_200883ae5_isSlash(_1626_lastChar)) {
						_case_begin_1aad65726:;
						{
							while (((_16314_e.len() > 0LL) && _200883ae5_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1aad65d53:;
							}
							_iter_end_1aad65d53:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1aad6503e:;
					}
					else {
						_case_begin_1aad64ec8:;
						{
							_2008819d3_WriteByte(&_1616_s, '\\');
							_1626_lastChar='\\';
						}
					}
					_match_end_1aad64dc9:;
				};
				if ((_16314_e.len() > 0LL)) {
					_20088172a_WriteStr(&_1616_s, _16314_e);
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1aad645b0:;
			++it;
			goto _iter_begin_1aad645b0;
		}
		_iter_end_1aad645b0:;
	};
	if ((_2008824a6_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _1d96a81c2_Clean(_200882022_Str(&_1616_s));;
}



inline jule::Str _1d96a81c2_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _200884486_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _2008837d7_IsPathSep(_1102_originalPath[0LL])) && _2008837d7_IsPathSep(_1102_originalPath[1LL]))) {
			return _1d96a8799_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _2008837d7_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1d96a7369_lazyBuff _1286_out = _1d96a7369_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1d96a7a73_append(&_1286_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_2008837d7_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1aad70643:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _2008837d7_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1aad6c222:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _2008837d7_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1aad6c288:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1a9b60643:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_2008837d7_IsPathSep(_1d96a77ba_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1aad73c84:;
									}
									_iter_end_1aad73c84:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1a9b6a61a:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1d96a7a73_append(&_1286_out, 92LLU);
									};
									_1d96a7a73_append(&_1286_out, '.');
									_1d96a7a73_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1aad7339e:;
						};
					}
				}
				else {
					_case_begin_1aad6c1ab:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1d96a7a73_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I64 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_2008837d7_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_1d96a7a73_append(&_1286_out, '.');
										_1d96a7a73_append(&_1286_out, 92LLU);
										goto _iter_end_1aad6db80;
									};
								}
							_iter_next_1aad6db80:;
							}
							_iter_end_1aad6db80:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_2008837d7_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1d96a7a73_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1aad6d520:;
						}
						_iter_end_1aad6d520:;;
					}
				}
				_match_end_1aad6c112:;
			};
		}
	_iter_next_1aad6adbe:;
	}
	_iter_end_1aad6adbe:;;
	if ((_1286_out._field_w == 0LL)) {
		_1d96a7a73_append(&_1286_out, '.');
	};
	return _1d96a8799_FromSlash(_1d96a7d09_string(&_1286_out));;
}



inline jule::Str _1d96a8799_FromSlash(jule::Str _21214_path) {
	;
	return _1d96a4355_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _1d96a8ada_Join(jule::Slice<jule::Str> _2269_elem) {
	return _200885135_join(_2269_elem);;
}



inline jule::Str _1d96a8d71_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_2008837d7_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1aad7c661:;
	}
	_iter_end_1aad7c661:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1d96a913a_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_200884de3_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1d96a9404_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _2008837d7_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1aad7d9b4:;
	}
	_iter_end_1aad7d9b4:;;
	(_25213_path).mut_slice(_1d96a9a20_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_2008837d7_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1aad7ddb0:;
	}
	_iter_end_1aad7ddb0:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1d96a97cd_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1d96a9a20_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_2008837d7_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1aad82633:;
	}
	_iter_end_1aad82633:;;
	jule::Str _2892_dir = _1d96a81c2_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1d96a9a20_VolumeName(jule::Str _30115_path) {
	return _1d96a8799_FromSlash(_30115_path.slice(0LL, _200884486_volumeNameLen(_30115_path)));;
}



inline jule::I64 _21a5cc59e_getLastFsError(void) {
	jule::I64 _722_err = _21a280c7a_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aad95668:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aad95569:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1aad94ea3:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1aad95019:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aad95080:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aad95107:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1aad9517e:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aad95206:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1aad95811:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1aad95888:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aad95910:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1aad95987:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aad95a0e:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aad95a86:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aad95b0d:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1aad95b85:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1aad95c0c:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aad95c84:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1aad95d0b:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aad95d83:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1aad95e0a:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1aad95e82:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aad96009:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1aad96081:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1aad96108:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1aad96180:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1aad96207:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1aad9627e:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1aad94d3d:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1aad94e4d:;
	};
}



inline jule::Bool _21a6dea68_isConsoleHandle(jule::Uintptr _11620_handle) {
	return (((_11620_handle == _21a5b4d17_STDIN) || (_11620_handle == _21a5b50ae_STDOUT)) || (_11620_handle == _21a5b53ab_STDERR));;
}



inline void _1d7cdc6b5_appendEscapeArg(_200880c8a_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_20088172a_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I64 _1106_i = 0LL;;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1aa946b43:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1aa946e40:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1aa946d30:;
			};
		}
	_iter_next_1aa94669d:;
	}
	_iter_end_1aa94669d:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		_20088172a_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		_2008819d3_WriteByte(_10225_s, '\"');
		_20088172a_WriteStr(_10225_s, _10240_arg);
		_2008819d3_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1096_hasSpace) {
		_2008819d3_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10240_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1aa94a284:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1aa94a350:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								_2008819d3_WriteByte(_10225_s, '\\');
							}
						_iter_next_1aa94aa59:;
						}
						_iter_end_1aa94aa59:;;
						_2008819d3_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1aa949d11:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1aa949e21:;
			};
			_2008819d3_WriteByte(_10225_s, _1393_c);
		}
	_iter_next_1aa94953b:;
	}
	_iter_end_1aa94953b:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				_2008819d3_WriteByte(_10225_s, '\\');
			}
		_iter_next_1aa94b5e8:;
		}
		_iter_end_1aa94b5e8:;;
		_2008819d3_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _1d7cdc97e_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_200880c8a_StrBuilder _1646_s = static__2008811b9_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94c31e:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_2008824a6_Len(&_1646_s) > 0LL)) {
					_2008819d3_WriteByte(&_1646_s, ' ');
				};
				_1d7cdc6b5_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1aa94c31e:;
			++it;
			goto _iter_begin_1aa94c31e;
		}
		_iter_end_1aa94c31e:;
	};
	return _200882022_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1d7cdcd58_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_21a5861d4_Encode(jule::Slice<jule::I32>::make({0LL,0LL}))};;
	};
	jule::I64 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94dc49:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_1d969ce75_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1aa94dc49:;
			++it;
			goto _iter_begin_1aa94dc49;
		}
		_iter_end_1aa94dc49:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = jule::Slice<jule::U16>::alloc(0LL, _1836_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94d573:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					char *it = expr->operator char*();
					const char *end = it + expr->len();
					std::size_t len;
					jule::I32 _19310_c;
					_iter_begin_1aa951169:;
					std::tie(_19310_c, len) = jule::utf8_decode_rune_str(it, end - it);
					if (it < end) {
						{
							_1916_b=_21a5867de_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1aa951169:;
						it += len;
						goto _iter_begin_1aa951169;
					}
				};
				_1916_b=_21a5867de_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1aa94d573:;
			++it;
			goto _iter_begin_1aa94d573;
		}
		_iter_end_1aa94d573:;
	};
	_1916_b=_21a5867de_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I64 _1d7cddd59_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1aaed50b0:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1aaed4cc4:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1aa9518ea:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1aa951aa4:;
	};
}



inline jule::I64 _1d7cde079_getLastProcessError(void) {
	return _1d7cddd59_processErrorFromCode(static_cast<jule::I64>(_21a5b639b_GetLastError()));;
}



inline void _1d7cde893_Exit(jule::I64 _129_code) {
	_21a5bc54a_Exit(_129_code);
}



inline jule::Str _1d7cdeaa2_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1d97401e3_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1d97404bd_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1d973e6ed_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab00680c:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ab00680c:;
			++it;
			goto _iter_begin_1ab00680c;
		}
		_iter_end_1ab00680c:;
	};
	return false;;
}



inline jule::Bool _1d9740787_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1d96ac9ac_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab006da1:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1ab006da1:;
			++it;
			goto _iter_begin_1ab006da1;
		}
		_iter_end_1ab006da1:;
	};
	{
		auto expr = &(_1d973d565_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0079d9:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1ab0079d9:;
			++it;
			goto _iter_begin_1ab0079d9;
		}
		_iter_end_1ab0079d9:;
	};
	return false;;
}



inline jule::Str _1d974cc6c_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _1d974d70c_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _1d974d07a_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab009029:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ab00969a:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab009722:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1ab00925a:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ab009205:;
	};
}



inline jule::I64 _1d974d344_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab00936a:;
		if (it != expr_end) {
			jule::I64 _3416_i = it - expr->begin();
			jule::U8 *_3419_b = it;
			{
				if (((*(_3419_b)) == '@')) {
					return _3416_i;;
				};
			}
			_iter_next_1ab00936a:;
			++it;
			_3416_i++;
			goto _iter_begin_1ab00936a;
		}
		_iter_end_1ab00936a:;
	};
	return -1LL;;
}



inline jule::Str _1d974d70c_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_200880c8a_StrBuilder _3506_s = static__2008811b9_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab00b27e:;
		if (it != expr_end) {
			jule::Any *_3519_arg = it;
			{
				jule::I64 _3523_i = _1d974d344_findNextFmt(_34917_fmt);;
				if ((_3523_i == -1LL)) {
					goto _iter_end_1ab00b27e;
				};
				_20088172a_WriteStr(&_3506_s, _34917_fmt.slice(0LL, _3523_i));
				_20088172a_WriteStr(&_3506_s, _1d974d07a_argToStr((*(_3519_arg))));
				(_34917_fmt).mut_slice((_3523_i + 1LL));;
			}
			_iter_next_1ab00b27e:;
			++it;
			goto _iter_begin_1ab00b27e;
		}
		_iter_end_1ab00b27e:;
	};
	_20088172a_WriteStr(&_3506_s, _34917_fmt);
	return _200882022_Str(&_3506_s);;
}



inline jule::Bool _1d974e565_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1d9750984_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1d9750c92_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1d975105b_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1d975139c_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1d9751633_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1d97518ec_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1d9751bb6_IsUnix(jule::Str _5511_os) {
	return (_1d9750c92_IsDarwin(_5511_os) || _1d975105b_IsLinux(_5511_os));;
}



inline jule::Bool _1d9752090_Is32Bit(jule::Str _5812_arch) {
	return _1d975139c_IsI386(_5812_arch);;
}



inline jule::Bool _1d97522d2_Is64Bit(jule::Str _6112_arch) {
	return (_1d9751633_IsAmd64(_6112_arch) || _1d97518ec_IsArm64(_6112_arch));;
}



inline void _1d7ce0d7d_init(void) {
	jule::Str _256_path = _1d7cdeaa2_Executable();;
	if ((_256_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1d7ce03cc_PathWd=({
			auto except = _2008b0bcc_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1d7ce0124_PathExec=_1d96a97cd_Dir(_256_path);
		_1d7cdedd2_PathStdlib=_1d96a8ada_Join(jule::Slice<jule::Str>::make({_1d7ce0124_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1d7ce06c9_PathApi=_1d96a8ada_Join(jule::Slice<jule::Str>::make({_1d7ce0124_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1bd7b1307_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1bd7b8b8e_Len64(_6119_x));;
}



inline jule::I64 _1bd7b224d_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1bd7b2dec_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1bd7b2b33_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1bd7b1945__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1bd7b2dec_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1bd7b1ed9__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1bd7b88c5_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1bd7b8b8e_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1bd7b992b_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1bd7bb235_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = ((_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(((_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1a567bdcd_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a567c1db_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a567c4a5_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a567c7e6_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a567ed59_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a9bc1dbe:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1bd7c3e30_IsInf(_4714_f, 0LL) || _1bd7c379d_IsNaN(_4714_f)) {
			_case_begin_1a9bc1e68:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a9bc1ce2:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1bd7c41e9_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1a567c4a5_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1a567c7e6_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1bd7c3490_NaN(void) {
	return _1a567c7e6_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1bd7c379d_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1bd7c3a67_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1a567c7e6_F64FromBits(9218868437227405312LLU);;
	};
	return _1a567c7e6_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1bd7c3e30_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1bd7c41e9_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1bd7c66c4_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1bd7c5bce_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1bd7c379d_IsNaN(_1118_x) || _1bd7c3e30_IsInf(_1118_x, 1LL)) {
			_case_begin_1ab1642d8:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ab164382:;
			{
				return _1bd7c3490_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ab1643e8:;
			{
				return _1bd7c3a67_Inf(-1LL);;
			}
		}
		_match_end_1ab16421c:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a567ed59_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = jule::div(_1382_f,(2LL + _1382_f));;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1bd7c66c4_Abs(jule::F64 _438_x) {
	return _1a567c7e6_F64FromBits((_1a567c4a5_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1bd7cd29c_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1bd7c66c4_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1ab0a5c0d:;
		}
		_iter_end_1ab0a5c0d:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1bd7cdaa5_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a567ed59_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1bd7c5bce_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1bd80754b_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _200880570_StrFromBytes(_1bd807b34_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1bd80aede_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1bd807b34_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1bd80633b_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa33a3c2:;
			{
				_886_bits=static_cast<jule::U64>(_1a567bdcd_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1bd80633b_floatInfo>)((&(_1bd806737_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa33a438:;
			{
				_886_bits=_1a567c4a5_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1bd80633b_floatInfo>)((&(_1bd806a34_f64info))));
			}
		}
		else {
			_case_begin_1aa33805c:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1aa339b96:;
	};
	jule::Bool _1012_neg = ((_886_bits >> ((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>((_886_bits >> (*_8910_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & ((static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1aa33e283:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1aa340b8b:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1aa340a15:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1aa340394:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1aa340295:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa33e371:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1aa33d3e7:;
			{
				_1036_mant|=(static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1aa33d590:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1bd80a164_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1bd80a7e6_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1bd806eb8_decimalSlice _1376_digs = _1bd806eb8_decimalSlice{};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1bd815e3e_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa33ddcb:;
				{
					_8758_prec=_1bd80aede_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa34481b:;
				{
					_8758_prec=_1bd80aede_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa344882:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1aa343a5c:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa3467da:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa3468c8:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1aa34639a:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1aa344d6b:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1bd814b85_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1bd81512a_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1bd80833d_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1bd808a14_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1bd80833d_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1bd80633b_floatInfo* _18824_flt) {
	_1bd819c23_decimal _1896_d = _1bd819c23_decimal{};;
	_1bd81a0ca_assign(&_1896_d, _1882_mant);
	_1bd81a383_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1bd806eb8_decimalSlice _1926_digs = _1bd806eb8_decimalSlice{};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1bd808e32_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1bd806eb8_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa34c747:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa34d539:;
				{
					_18733_prec=_1bd80aede_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa34d5a0:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1aa34d3b3:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa34c47d:;
				{
					_1bd81ab9c_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa34c4e4:;
				{
					_1bd81ab9c_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa34c55a:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1bd81ab9c_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1aa34ec11:;
		};
		_1926_digs=_1bd806eb8_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, };
	};
	return _1bd808a14_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1bd808a14_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1bd806eb8_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa352c47:;
			{
				return _1bd8094c6_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa352cad:;
			{
				return _1bd8099b0_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa352d24:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1bd8094c6_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), ((_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1bd8099b0_fmtF(_22418_dst, _22447_neg, _2252_digs, _1bd80aede_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1aa352b9d:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22537_fmt}));;
}



inline void _1bd808e32_roundShortest(_1bd819c23_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1bd80633b_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1bd819c23_decimal _2926_upper = _1bd819c23_decimal{};;
	_1bd81a0ca_assign(&_2926_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1bd81a383_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1bd819c23_decimal _3116_lower = _1bd819c23_decimal{};;
	_1bd81a0ca_assign(&_3116_lower, ((_3026_mantlo << 1LLU) + 1LLU));
	_1bd81a383_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1aa35e5a0;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1aa364220:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1aa3642b9:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1aa364330:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1aa364154:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1aa366c6c:;
					{
						_1bd81ab9c_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1aa366d16:;
					{
						_1bd81a63b_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1aa366d7c:;
					{
						_1bd81a8e4_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1aa364396:;
			};
		}
	_iter_next_1aa35e5a0:;
	}
	_iter_end_1aa35e5a0:;;
}



inline jule::Slice<jule::U8> _1bd8094c6_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1bd806eb8_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1bd80ab6a_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa36ad5e:;
		}
		_iter_end_1aa36ad5e:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1aa36d504:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1aa36ce82:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa36ce1b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>(jule::div(_4306_exp,10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa36c998:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1bd8099b0_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1bd806eb8_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1bd80ab6a_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa37241a:;
		}
		_iter_end_1aa37241a:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1aa373828:;
		}
		_iter_end_1aa373828:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1bd80a164_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1bd80633b_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1bd81eec0_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1bd81eec0_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1bd80a7e6_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1bd80633b_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant<<=(60LLU - (*(_51232_flt))._field_mantbits);
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant<<=1LLU;
			(_51221_exp)--;
		}
	_iter_next_1aa37870c:;
	}
	_iter_end_1aa37870c:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = ((_5126_mant << _5263_shift) & 1152921504606846975LLU);;
		_5126_mant>>=(60LLU - _5263_shift);
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant<<=(60LLU - _5263_shift);
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant>>=1LLU;
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1aa37e0a3:;
		}
		_iter_end_1aa37e0a3:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1aa38079c:;
		}
		_iter_end_1aa38079c:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1bd80bb7c_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1aa37ca30:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1aa37ca96:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa38244c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>(jule::div(_51221_exp,100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa382749:;
	};
	return _51113_dst;;
}



inline jule::I64 _1bd80ab6a_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1bd80aede_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1bd80bb7c_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a51ddb82_ConvError _1bd80c100_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a51ddb82_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1aa388ec0:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1aa388e04:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1bd80bb7c_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1aa38a8d9:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1bd80bb7c_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1aa38a9c7:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1bd80bb7c_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1aa38a598:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aa38a532:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1aa38a477:;
					};
				};
			}
		}
		else {
			_case_begin_1aa388321:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1aa3888a4:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aa38e899:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa38e57a:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aa38db62:;
			{
				_906_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1aa38e48c:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa38e5e1:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa38a1ad:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1aa390a43:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa391901:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1aa392c43:;
						{
							_1107_d=(_1099_c - '0');
						}
					}
					else if ((('a' <= _1bd80bb7c_lower(_1099_c)) && (_1bd80bb7c_lower(_1099_c) <= 'z'))) {
						_case_begin_1aa392b77:;
						{
							_1107_d=((_1bd80bb7c_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1aa39278c:;
						{
							goto _iter_next_1aa391901;
						}
					}
					else {
						_case_begin_1aa392726:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1aa3926c1:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1aa391901:;
			++it;
			goto _iter_begin_1aa391901;
		}
		_iter_end_1aa391901:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1bd80c52e_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a51ddb82_ConvError __jule_assign_result = _1bd80c100_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1bd80c9d5_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a51ddb82_ConvError __jule_assign_result = _1bd80c100_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1bd80d695_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1a567c7e6_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1bd7b1307_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_572_clz);
	;
	jule::U64 _606_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(_4122_man, _1bd80e50e_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(_4122_man, _1bd80e50e_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((_6817_mergedLo + 1LLU) == 0LLU)) && ((_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = (_636_xHi >> (_792_msb + 9LLU));;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa>>=1LLU;
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa>>=1LLU;
		_606_retExp2+=1LLU;
	};
	if (((_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a567c7e6_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1bd80db18_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1a567c1db_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1bd7b1307_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1322_clz);
	;
	jule::U64 _1356_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(_11022_man, _1bd80e50e_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(_11022_man, _1bd80e50e_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14318_merged_lo + 1LLU) == 0LLU)) && ((_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = (_1386_x_hi >> (_1542_msb + 38LLU));;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa>>=1LLU;
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa>>=1LLU;
		_1356_retExp2+=1LLU;
	};
	if (((_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a567c1db_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1bd8108ea_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1aa3b741b:;
	}
	_iter_end_1aa3b741b:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1bd810c08_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aa3bac8d:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1aa3bad15;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aa3bad15:;
			{
				jule::I64 _887_caseN = _1bd8108ea_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1bd7c3a67_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aa3bad7b:;
			{
				if ((_1bd8108ea_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1bd7c3490_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aa3babe4:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1bd810ec2_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1aa3c13ae:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1aa3c1425:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1aa3c0eb3:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1bd80bb7c_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1ab408b21:;
					{
						goto _iter_next_1ab407e50;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1ab408bba:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1ab40d593;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1ab407e50;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1ab408c31:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1ab407e50;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ab407e50;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1bd80bb7c_lower(_1383_c))) && (_1bd80bb7c_lower(_1383_c) <= 'f'))) {
					_case_begin_1ab408c97:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1bd80bb7c_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ab407e50;
					}
				}
				_match_end_1ab408a44:;
			};
			goto _iter_end_1ab407e50;
		}
	_iter_next_1ab407e50:;
	}
	_iter_end_1ab407e50:;;
	_julec_label_1ab40d593:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1bd80bb7c_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ab410e03;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1ab410e03:;
		}
		_iter_end_1ab410e03:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1bd812a1d_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1bd806a34_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1ab419e0c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1ab419e95:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1bd811dd5_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1bd811dd5_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1ab41a00b:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1bd811dd5_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab419835:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1bd812e4c_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1bd806737_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1ab41e153:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1ab41e1db:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1bd812215_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1bd812215_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1ab41e252:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1bd812215_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab41da7b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a51ddb82_ConvError _1bd8134e1_atofHex(_1bd80633b_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a51ddb82_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1ab422a5d:;
	}
	_iter_end_1ab422a5d:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ab424e28:;
	}
	_iter_end_1ab424e28:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1ab425302:;
	}
	_iter_end_1ab425302:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6106_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6106_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1bd806737_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a567c1db_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a567c7e6_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a51ddb82_ConvError _1bd8138ba_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a51ddb82_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd810c08_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd810ec2_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a51ddb82_ConvError __jule_assign_result = _1bd8134e1_atofHex(&(_1bd806737_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1bd812e4c_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1bd80db18_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1bd80db18_eiselLemire32((_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1bd819c23_decimal _6676_d = _1bd819c23_decimal{};;
	if ((!(_1bd811654_set(&_6676_d, _200880020_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bd811995_floatBits(&_6676_d, &(_1bd806737_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a567c1db_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError _1bd813b0c_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd810c08_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd810ec2_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a51ddb82_ConvError __jule_assign_result = _1bd8134e1_atofHex(&(_1bd806a34_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1bd812a1d_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1bd80d695_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1bd80d695_eiselLemire64((_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1bd819c23_decimal _7246_d = _1bd819c23_decimal{};;
	if ((!(_1bd811654_set(&_7246_d, _200880020_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bd811995_floatBits(&_7246_d, &(_1bd806a34_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a567c7e6_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError _1bd813e81_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a51ddb82_ConvError __jule_assign_result = _1bd8138ba_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1bd813b0c_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1bd814305_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a51ddb82_ConvError __jule_assign_result = _1bd813e81_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1bd814b85_ryuFtoaFixed32(_1bd806eb8_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1bd7b88c5_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _632_b));
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1bd8161c5_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817abc_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1bd818370_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>(((1LL << _942_extra) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_816_di >> _942_extra);
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > (1LLU << (_942_extra - 1LLU))) || ((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && (!(_8121_d0)))) || (((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=((_976_dfrac >> (_942_extra - 1LLU)) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1bd815966_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1bd81512a_ryuFtoaFixed64(_1bd806eb8_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1bd7b8b8e_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1322_b)));
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1bd8161c5_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817eeb_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1bd818370_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>(((1LL << _1662_extra) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1536_di >> _1662_extra);
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > (1LLU << (_1662_extra - 1LLU))) || ((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && (!(_15321_d0)))) || (((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=((_1696_dfrac >> (_1662_extra - 1LLU)) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1bd815966_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1bd815966_formatDecimal(_1bd806eb8_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1bd81546b_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ab45ab40:;
	}
	_iter_end_1ab45ab40:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1ab45d58d:;
	}
	_iter_end_1ab45d58d:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1ab464bc1:;
	}
	_iter_end_1ab464bc1:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1bd815e3e_ryuFtoaShortest(_1bd806eb8_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1bd80633b_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1bd7b2dec_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1bd81701c_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1bd8168bd_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1bd81701c_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1bd8161c5_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (((*(_26168_flt)) == _1bd806737_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817abc_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817abc_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817abc_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817eeb_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817eeb_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bd817eeb_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1bd818370_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1bd818370_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1bd818370_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>(((1LL << _3252_extra) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2836_dl >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2846_dc >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2856_du >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > (1LLU << (_3252_extra - 1LLU))) || ((_3306_fracc == (1LLU << (_3252_extra - 1LLU))) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=((_3306_fracc >> (_3252_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1bd81701c_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1bd8161c5_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1bd81648e_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1bd8168bd_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1bd80633b_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3963_flt))._field_mantbits)) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1bd81701c_ryuDigits(_1bd806eb8_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1bd818639_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1bd818639_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1bd818639_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1bd81768d_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1bd81768d_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((_4318_v2 + '0'));
			}
		_iter_next_1ab483151:;
		}
		_iter_end_1ab483151:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _4287_n));
		_1bd81768d_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ab485d02:;
	}
	_iter_end_1ab485d02:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1ab483bac:;
	}
	_iter_end_1ab483bac:;;
}



inline void _1bd81768d_ryuDigits32(_1bd806eb8_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1ab488552;
			};
			if (((_4703_l == (_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ab488552:;
	}
	_iter_end_1ab488552:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1ab48e107:;
	}
	_iter_end_1ab48e107:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1bd817abc_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1bd80e50e_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1bd81648e_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1bd817eeb_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1bd80e50e_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1bd81648e_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7bb235_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1bd7b992b_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1bd818370_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1ab49ce90:;
	}
	_iter_end_1ab49ce90:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1bd818639_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1bd81b571_trim(_1bd819c23_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1ab4a147c:;
	}
	_iter_end_1ab4a147c:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1bd81b85c_rightShift(_1bd819c23_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2896_n >> _28432_k) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2896_n >> _28432_k) == 0LLU)) {
					{
						_2896_n=(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1ab4a4628:;
				}
				_iter_end_1ab4a4628:;;
				goto _iter_end_1ab4a30c7;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(((_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1ab4a30c7:;
	}
	_iter_end_1ab4a30c7:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(((_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1ab4a3e96:;
	}
	_iter_end_1ab4a3e96:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(_2896_n * 10LLU);
		}
	_iter_next_1ab4a6d12:;
	}
	_iter_end_1ab4a6d12:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1bd81b571_trim(_28420_a);
}



inline jule::Bool _1bd81bd13_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1ab4aad7c:;
	}
	_iter_end_1ab4aad7c:;;
	return false;;
}



inline void _1bd81c0bb_leftShift(_1bd819c23_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1bd81963a_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1bd81bd13_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1bd81963a_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0') << _35231_k);
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (_3626_n - (10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1ab4ae0b1:;
	}
	_iter_end_1ab4ae0b1:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (_3626_n - (10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1ab4ae688:;
	}
	_iter_end_1ab4ae688:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1bd81b571_trim(_35219_a);
}



inline jule::Bool _1bd81c440_shouldRoundUp(_1bd819c23_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1bd81dbc2_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1bd81e695_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1bd81eec0_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1bd81e08a_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1bd81e695_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1bd81eec0_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1bd81e354_Itoa(jule::I64 _819_i) {
	return _1bd81e08a_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1bd81e695_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _200880570_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1bd81e92b_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1bd81eec0_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1ab4d0511:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ((_1547_us % 100LL) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1ab4d20a1:;
				}
				_iter_end_1ab4d20a1:;;
				jule::U64 _1643_is = (_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1bd81e92b_isPowerOfTwo(_10541_base)) {
			_case_begin_1ab4d0bc6:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1bd7b224d_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u>>=_1793_shift;
					}
				_iter_next_1ab4d9cbd:;
				}
				_iter_end_1ab4d9cbd:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1ab4ce620:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = jule::div(_10533_u,_1923_b);;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1ab4d02e1:;
				}
				_iter_end_1ab4d02e1:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1ab4ce587:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_200880570_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1bd8214bb_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab4eb30c:;
			{
				return _1bd8209d7_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab4ee970:;
			{
				return _1bd820c90_SysUint;;
			}
		}
		else {
			_case_begin_1ab4ec2b9:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ab4edbb1:;
	};
}



inline jule::I64 _1bd821785_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab5008a5:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab500ac5:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab500b3b:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab50091b:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab500982:;
			{
				return _1bd8206da_BitSize;;
			}
		}
		else {
			_case_begin_1ab5006da:;
			{
				return -1LL;;
			}
		}
		_match_end_1ab50080b:;
	};
}



inline jule::Str _1bd821ac6_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab502ee5:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab502d19:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab502d80:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab50305b:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1ab5025cc:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab5026ed:;
	};
}



inline jule::Str _1bd821d5c_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab50426b:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab503a2e:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab503a95:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab5042d2:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1ab503cd7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab503985:;
	};
}



inline jule::Str _1bd822126_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ab505745:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab504cb6:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1ab50505d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab504c0b:;
	};
}



inline jule::Bool _1bd822c2b_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1bd814305_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1bd822ee5_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ab50a371:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab509cee:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab506c74:;
	};
}



inline jule::I64 _1bd8232ae_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1ab50b0ca:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1ab50b1a7:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1ab50b21d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab50a63a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab50a55d:;
	};
}



inline jule::I64 _1bd823578_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1ab50cb48:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1ab50bd34:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1ab50bd9a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab50bcac:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab50c252:;
	};
}



inline void _1bd823721_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1d7ce0c3a_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1ab50cc03:;
				{
					_1bd8206da_BitSize=64LLU;
					_1bd8209d7_SysInt=jule::Str::lit("i64", 3);
					_1bd820c90_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1ab50db27:;
				{
					_1bd8206da_BitSize=32LLU;
					_1bd8209d7_SysInt=jule::Str::lit("i32", 3);
					_1bd820c90_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1ab50da28:;
		};
	};
}



inline void _1bd823897_init(void) {
	_1bd823721_UpdateTarget();
}



inline jule::I64 _1bd827505_MinI(jule::Str _6113_k) {
	_6113_k=_1bd8214bb_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab511311:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab51108b:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab511102:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab511179:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ab50cce1:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab50cdac:;
	};
}



inline jule::I64 _1bd827813_MaxI(jule::Str _7913_k) {
	_7913_k=_1bd8214bb_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab512323:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab512389:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab512400:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab512466:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ab5121be:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab512169:;
	};
}



inline jule::U64 _1bd827acc_MaxU(jule::Str _9713_k) {
	_9713_k=_1bd8214bb_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab51391d:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab513984:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab5139ea:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab513a61:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ab5137b9:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab513764:;
	};
}



inline jule::F64 _1bd827e1d_Min(jule::Str _11512_k) {
	_11512_k=_1bd8214bb_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1bd827505_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab516091:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab515b1d:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ab515744:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab515458:;
	};
}



inline jule::F64 _1bd8281a4_Max(jule::Str _13312_k) {
	_13312_k=_1bd8214bb_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1bd827813_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1bd827acc_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab5183a1:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab517e2d:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ab517a54:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab517713:;
	};
}



inline jule::Bool _1bd82865a_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1bd828968_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1bd828c32_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1bd829073_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1bd829309_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1bd8295c3_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1bd82988c_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1bd829c66_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1bd82a063_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab51ba9c:;
			{
				return _1bd82b1c9_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab51bb13:;
			{
				return _1bd82b4d7_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab51bb79:;
			{
				return _1bd82b4d7_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab51bc01:;
			{
				return _1bd82865a_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab51be76:;
			{
				return _1bd828968_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab51beed:;
			{
				return _1bd828c32_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab51c075:;
			{
				return _1bd829073_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab51c0ec:;
			{
				return _1bd829309_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab51c20c:;
			{
				return _1bd8295c3_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab51c273:;
			{
				return _1bd82988c_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab51c2d9:;
			{
				return _1bd829c66_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ab51c350:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab51b849:;
			{
				return false;;
			}
		}
		_match_end_1ab51a34d:;
	};
}



inline jule::Bool _1bd82b1c9_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1bd82b4d7_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1bd82b7a1_IsInt(jule::Str _4610_k) {
	return (_1bd82b1c9_IsSigInt(_4610_k) || _1bd82b4d7_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1bd82bae2_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1bd82bd78_IsNum(jule::Str _5610_k) {
	return (_1bd82b7a1_IsInt(_5610_k) || _1bd82bae2_IsFloat(_5610_k));;
}



inline jule::Bool _1bd82c142_IsSigNum(jule::Str _6113_k) {
	return (_1bd82b1c9_IsSigInt(_6113_k) || _1bd82bae2_IsFloat(_6113_k));;
}



inline void _1bd83639e_lshiftUnsig(_1bd82c384_Const* _59021_c, _1bd82c384_Const* _59032_x) {
	jule::U64 _5912_l = _1bd82ecb0_AsU64(_59021_c);;
	jule::U64 _5922_r = _1bd82ecb0_AsU64(_59032_x);;
	_1bd8305a7_SetU64(_59021_c, (_5912_l << _5922_r));
}



inline void _1bd8366ce_rshiftUnsig(_1bd82c384_Const* _59621_c, _1bd82c384_Const* _59632_x) {
	jule::U64 _5972_l = _1bd82ecb0_AsU64(_59621_c);;
	jule::U64 _5982_r = _1bd82ecb0_AsU64(_59632_x);;
	_1bd8305a7_SetU64(_59621_c, (_5972_l >> _5982_r));
}



inline jule::Bool _1a795c750_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1a78ad4b4_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5c9819:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1ab5c9819:;
			++it;
			goto _iter_begin_1ab5c9819;
		}
		_iter_end_1ab5c9819:;
	};
	return false;;
}



inline jule::Bool _1a795ca5d_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1a78ad706_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5c9d25:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1ab5c9d25:;
			++it;
			goto _iter_begin_1ab5c9d25;
		}
		_iter_end_1ab5c9d25:;
	};
	return false;;
}



inline jule::Bool _1a795d168_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1a795d3ee_IsRawStr(_36410_k)));;
}



inline jule::Bool _1a795d3ee_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1a795d6b8_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1a795e09d_IsFloat(jule::Str _38012_k) {
	if (_1d969d9ae_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1d96a39e7_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1d96a39e7_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a795e367_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1a795e8ea_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1a795ebb4_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1a7960247_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1a78ad2a5_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d2206:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1ab5d2206:;
			++it;
			goto _iter_begin_1ab5d2206;
		}
		_iter_end_1ab5d2206:;
	};
	return false;;
}



inline jule::Bool _1a7960742_IsLetter(jule::I32 _42913_r) {
	return _1d95e0d52_IsLetter(_42913_r);;
}



inline jule::Bool _1a7960bb5_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1a7960e7e_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1a7961248_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1a7961512_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ab5d5c76:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ab5d5d20:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ab5d5d97:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab5d5bee:;
			{
				return false;;
			}
		}
		_match_end_1ab5d5715:;
	};
}



inline jule::Bool _1a79617cb_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1a7961a95_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1a79564e6_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d73a4:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1ab5d73a4:;
			++it;
			goto _iter_begin_1ab5d73a4;
		}
		_iter_end_1ab5d73a4:;
	};
	return false;;
}



inline jule::Bool _1a7961d5e_IsAssignOp(jule::U64 _49515_id) {
	if (_1a7961a95_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1a79567d2_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d9a6b:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1ab5d9a6b:;
			++it;
			goto _iter_begin_1ab5d9a6b;
		}
		_iter_end_1ab5d9a6b:;
	};
	return false;;
}



inline jule::Ptr<_1a7962799_File> _1a7963b74_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1a7962799_File>(_1a7962799_File{._field_Path=_5715_path, });;
}



inline _1d974c80a_Log _1a796569d_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a7962799_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1d974c80a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1d974cc6c_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1a7965a66_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5e4cda:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1ab5e4cda:;
			++it;
			_1146_i++;
			goto _iter_begin_1ab5e4cda;
		}
		_iter_end_1ab5e4cda:;
	};
	return true;;
}



inline jule::Str _1a7965dda_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1a7960bb5_IsDecimal(_1286_b))))) {
				goto _iter_end_1ab5e7b78;
			};
		}
	_iter_next_1ab5e7b78:;
	}
	_iter_end_1ab5e7b78:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1a79662a3_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1a7965dda_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1a7966627_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1ab5ea098:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1a7960bb5_IsDecimal(_1683_b)) {
					_case_begin_1ab5eaa49:;
					{
						goto _iter_next_1ab5e9d01;
					}
				}
				else if (_1a7967ea8_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1ab5eaae3:;
					{
						return _1a79662a3_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1ab5ea9c2:;
					{
						goto _iter_end_1ab5e9d01;
					}
				}
				_match_end_1ab5ea95b:;
			};
		}
	_iter_next_1ab5e9d01:;
	}
	_iter_end_1ab5e9d01:;;
	return jule::Str();;
}



inline jule::Str _1a796699b_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1a7965dda_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1a7966d20_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1a7965dda_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1a79672a4_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1a7965dda_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1a7960bb5_IsDecimal(_2013_b))))) {
				goto _iter_end_1ab5ed80a;
			};
		}
	_iter_next_1ab5ed80a:;
	}
	_iter_end_1ab5ed80a:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1a79674e6_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1ab5ed08a:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1ab601940:;
					{
						__jule_func_result = _1a79672a4_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1ab6019d9:;
					{
						goto _iter_next_1ab600d3a;
					}
				}
				else if (_1a7967b34_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1ab601a50:;
					{
						__jule_func_result = _1a7965dda_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a7960bb5_IsDecimal(_2203_b)))) {
					_case_begin_1ab601ab6:;
					{
						goto _iter_end_1ab600d3a;
					}
				}
				_match_end_1ab601863:;
			};
		}
	_iter_next_1ab600d3a:;
	}
	_iter_end_1ab600d3a:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1a79677b0_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a7965a66_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1a7960e7e_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1ab604822;
			};
		}
	_iter_next_1ab604822:;
	}
	_iter_end_1ab604822:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1a7967b34_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1a7967ea8_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1a796832c_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1ab607407:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1a7960bb5_IsDecimal(_2763_b)) {
					_case_begin_1ab608419:;
					{
						goto _iter_next_1ab607308;
					}
				}
				else if (_1a7967ea8_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1ab6084b3:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ab608392:;
					{
						goto _iter_end_1ab607308;
					}
				}
				_match_end_1ab60832b:;
			};
		}
	_iter_next_1ab607308:;
	}
	_iter_end_1ab607308:;;
	return false;;
}



inline jule::Bool _1a79686a1_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ab609728:;
			{
				goto _case_begin_1ab6097c2;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ab6097c2:;
			{
				goto _case_begin_1ab609849;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ab609849:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab609690:;
			{
				return true;;
			}
		}
		_match_end_1ab609591:;
	};
}



inline jule::Bool _1a7968a25_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ab60b4d8:;
			{
				goto _case_begin_1ab60b54e;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ab60b54e:;
			{
				goto _case_begin_1ab60b5b5;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ab60b5b5:;
			{
				goto _case_begin_1ab60b63c;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ab60b63c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab60b41c:;
			{
				return true;;
			}
		}
		_match_end_1ab60aecc:;
	};
}



inline jule::Str _1a7969020_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a79672a4_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1a7967b34_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1a7965dda_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1a7961248_IsOctal(_3393_b))))) {
				goto _iter_end_1ab610b3b;
			};
		}
	_iter_next_1ab610b3b:;
	}
	_iter_end_1ab610b3b:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1a79691eb_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1ab614601:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1a79686a1_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1ab615305:;
					{
						__jule_func_result = _1a7966d20_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a7968a25_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1ab61539e:;
					{
						__jule_func_result = _1a796699b_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a7967ea8_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1ab615415:;
					{
						__jule_func_result = _1a79662a3_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a796832c_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1ab61547b:;
					{
						__jule_func_result = _1a7966627_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1a7961512_IsHex(_3723_b))))) {
					_case_begin_1ab6154e2:;
					{
						goto _iter_end_1ab614755;
					}
				}
				_match_end_1ab615217:;
			};
		}
	_iter_next_1ab614755:;
	}
	_iter_end_1ab614755:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1a796954d_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1a7961512_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ab617a88:;
	}
	_iter_end_1ab617a88:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1a7969817_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1a796954d_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1a7969ad1_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1a796954d_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1a7969d9a_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1a796954d_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1a796a164_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a7961248_IsOctal((*(_42616_txt))[1LL]))) || (!(_1a7961248_IsOctal((*(_42616_txt))[2LL])))) || (!(_1a7961248_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1d974c80a_Log> _1a7970158_Lex(jule::Ptr<_1a7962799_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1a796a8d4_lex _8116_lex = _1a796a8d4_lex{._field_mode=_80622_mode, ._field_file=_80612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a796d6ea_newLine(&_8116_lex);
	_1a796b4c8_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1a6833a12_FindModuleFile(jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab699e6c:;
		if (it != expr_end) {
			jule::Ptr<_21a5ccb54_DirEntry> *_149_d = it;
			{
				if (((!(_21a5d15e7_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ab699e6c:;
			++it;
			goto _iter_begin_1ab699e6c;
		}
		_iter_end_1ab699e6c:;
	};
	return false;;
}



inline jule::Str _1a6833cba_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>> _277_dirents = ({
				auto except = static__1d96aa0a3_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ab69a874;
				} jule::Slice<jule::Ptr<_21a5ccb54_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1a6833a12_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1d96a97cd_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1ab69a874;
			};
		}
	_iter_next_1ab69a874:;
	}
	_iter_end_1ab69a874:;;
	return jule::Str();;
}



inline jule::Slice<_1d974c80a_Log> _1a6834084_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__21a5cea8a_Read(_1d96a8ada_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d974c80a_Log>::make({_1d974c80a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1d96a57c9_Trim(_2008802a6_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return jule::Slice<_1d974c80a_Log>::make({_1d974c80a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1a68348d1_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1d965725e_IsUpper(_142_r);;
}



inline jule::Bool _1a687c242_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a7a354d7_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1a7a36142_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a7a356e6_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a7a35a37_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6a77b5:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1ab6a77b5;
				};
			}
			_iter_next_1ab6a77b5:;
			++it;
			goto _iter_begin_1ab6a77b5;
		}
		_iter_end_1ab6a77b5:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a7a364d8_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d4112_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_21a6d51ac_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1ab6a97a6:;
	}
	_iter_end_1ab6a97a6:;;
	return _200880570_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a7a35cbd_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ab6abc81:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ab6ac49b:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ab6ac512:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ab6ac578:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ab6ac5de:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab6ac666:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ab6ac6dd:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ab6ac765:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ab6ac7dc:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ab6ac864:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ab6ac303:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a7a36142_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a7a35cbd_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ab6b245c:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1bd80c52e_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab6b2270:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1bd80c52e_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab6b1b87:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1bd80c52e_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1ab6b0988:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1bd80c52e_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1ab6b1208:;
	};
}



inline void _1a7a364d8_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1a7a36142_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_21a6d51ac_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1a7b60788_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _133_r;
			jule::I64 _136_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d3cc1_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_133_r = __jule_assign_result.__jule_result_arg0;
				_136_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_133_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_136_size;
		}
	_iter_next_1ab6e305e:;
	}
	_iter_end_1ab6e305e:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a7b60ab8_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _282_start = (*(_2724_i));;
	jule::I64 _296_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _313_r;
			jule::I64 _316_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21a6d3cc1_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_313_r = __jule_assign_result.__jule_result_arg0;
				_316_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_316_size;
			{
				auto &_match_expr{ _313_r };
				
				if (_match_expr == '{') {
					_case_begin_1ab6e59bd:;
					{
						(_296_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ab6e5c32:;
					{
						(_296_braces)--;
						if ((_296_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_282_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1ab6e522b:;
			};
		}
	_iter_next_1ab6e4aaa:;
	}
	_iter_end_1ab6e4aaa:;;
	return nullptr;;
}



inline void _1a7b60da4_FmtByDefault(_200880c8a_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_20088172a_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ab6e78c1:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd80754b_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab6e720b:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd80754b_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ab6e7272:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81e08a_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ab6e72d8:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81e08a_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab6e734e:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81e08a_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab6e73b5:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81e08a_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ab6e79e2:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1ab6e7a58:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1ab6e7abe:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81dbc2_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab6e7b35:;
			{
				_20088172a_WriteStr(_4722_buf, _1bd81dbc2_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab6e7b9b:;
			{
				_20088172a_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab6e7c12:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_20088172a_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_20088172a_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1ab6e6bab:;
			{
				_20088172a_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1ab6e4ed9:;
	};
}



inline void _1a7b612c2_applyFmtByDefault(_200880c8a_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _872_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1a7b60da4_FmtByDefault(_8627_buf, &(_872_arg));
}



inline void _1a7b616e0_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _200880c8a_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1a7b612c2_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_20088172a_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_200881472_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1a7b61a64_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1166_fmtBytes = _200880020_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1206_i = _1a7b60788_findFormatPrefix(&(_1166_fmtBytes), 0LL);;
	if ((_1206_i == -1LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1246_j = 0LL;;
	jule::I64 _1256_last = 0LL;;
	_200880c8a_StrBuilder _1266_buf = static__2008811b9_New(_11511_fmt.len());;
	for (; (_1206_i != -1LL); _1206_i=_1a7b60788_findFormatPrefix(&(_1166_fmtBytes), _1206_i)) {
		{
			_200881472_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last, _1206_i));
			jule::Slice<jule::U8> _1297_format = _1a7b60ab8_getFormatRange(&(_1206_i), &(_1166_fmtBytes));;
			if ((_1297_format == nullptr)) {
				goto _iter_next_1ab704dd9;
			};
			_1a7b616e0_applyFmt(&(_1297_format), &(_1266_buf), &(_1246_j), _11521_args);
			if ((_1246_j >= _11521_args.len())) {
				_200881472_Write(&_1266_buf, _1166_fmtBytes.slice(_1206_i));
				_1256_last=_1166_fmtBytes.len();
				goto _iter_end_1ab704dd9;
			};
			_1256_last=_1206_i;
		}
	_iter_next_1ab704dd9:;
	}
	_iter_end_1ab704dd9:;;
	if ((_1256_last < _1166_fmtBytes.len())) {
		_200881472_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last));
	};
	return _2008829c3_Buf(&_1266_buf);;
}



inline jule::Str _1a7b63a88_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _200880570_StrFromBytes(_1a7b61a64_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1a79ad5d6_parameterUsesGenerics(jule::Ptr<_1a79aa281_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _38546_generics) {
	if (_1a79a6e70_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a7a9d154_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1a7a89abe_TypeSymbol> _1a79b0d58_buildType(jule::Ptr<_1a79724bd_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a7a5267a_Value> _1a79b1166_buildExpr(jule::Ptr<_1a7976802_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a79b1430_buildTypeAlias(jule::Ptr<_1a7988eda_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a7a81b0a_TypeAlias>(_1a7a81b0a_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1a79b0d58_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1a7990431_Field> _1a79b1771_buildField(jule::Ptr<_1a798c890_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a7990431_Field>(_1a7990431_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1a79b0d58_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a7990431_Field>> _1a79b1a07_buildFields(jule::Slice<jule::Ptr<_1a798c890_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a7990431_Field>> _1356_fields = jule::Slice<jule::Ptr<_1a7990431_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90ec81:;
		if (it != expr_end) {
			jule::Ptr<_1a798c890_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7990431_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1a79b1771_buildField(_13614_decl)); };
			}
			_iter_next_1ab90ec81:;
			++it;
			goto _iter_begin_1ab90ec81;
		}
		_iter_end_1ab90ec81:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1a7993357_Struct> _1a79b1cc1_buildStruct(jule::Ptr<_1a798d286_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a7993357_Struct>(_1a7993357_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1a79b1a07_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1a79a6854_Param> _1a79b208a_buildParam(jule::Ptr<_1a7982c2b_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a79a6854_Param>(_1a79a6854_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1a79b0d58_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a79a6854_Param>> _1a79b2464_buildParams(jule::Slice<jule::Ptr<_1a7982c2b_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a79a6854_Param>> _1666_params = jule::Slice<jule::Ptr<_1a79a6854_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab916ddc:;
		if (it != expr_end) {
			jule::Ptr<_1a7982c2b_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a79a6854_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1a79b208a_buildParam(_16714_decl)); };
			}
			_iter_next_1ab916ddc:;
			++it;
			goto _iter_begin_1ab916ddc;
		}
		_iter_end_1ab916ddc:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1a79a60c3_RetType> _1a79b26a6_buildRetType(jule::Ptr<_1a79753b1_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a79a60c3_RetType>(_1a79a60c3_RetType{._field_Kind=_1a79b0d58_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a79a8328_Fn> _1a79b2970_buildFunc(jule::Ptr<_1a798417d_FnDecl> _18318_decl) {
	return jule::new_ptr<_1a79a8328_Fn>(_1a79a8328_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1a79b26a6_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1a79b2464_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a79a8328_Fn>> _1a79b2c39_buildMethods(jule::Slice<jule::Ptr<_1a798417d_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a79a8328_Fn>> _2026_methods = jule::Slice<jule::Ptr<_1a79a8328_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab91c486:;
		if (it != expr_end) {
			jule::Ptr<_1a798417d_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a79a8328_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1a79b2970_buildFunc(_20314_decl)); };
			}
			_iter_next_1ab91c486:;
			++it;
			goto _iter_begin_1ab91c486;
		}
		_iter_end_1ab91c486:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1a7a89abe_TypeSymbol>> _1a79b3003_buildTraitInherits(jule::Slice<jule::Ptr<_1a79724bd_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a7a89abe_TypeSymbol>> _2106_symbols = jule::Slice<jule::Ptr<_1a7a89abe_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab91d0ad:;
		if (it != expr_end) {
			jule::Ptr<_1a79724bd_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a7a89abe_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1a79b0d58_buildType(_21114_it)); };
			}
			_iter_next_1ab91d0ad:;
			++it;
			goto _iter_begin_1ab91d0ad;
		}
		_iter_end_1ab91d0ad:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a79b32bc_buildTrait(jule::Ptr<_1a798d9c3_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a79bb6d2_Trait>(_1a79bb6d2_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1a79b3003_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1a79b2c39_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1a79bd371_EnumItem> _1a79b3586_buildEnumItem(jule::Ptr<_1a798aa7a_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a79bd371_EnumItem>(_1a79bd371_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1a79b1166_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _1a79b3850_buildEnumItems(jule::Slice<jule::Ptr<_1a798aa7a_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> _2366_items = jule::Slice<jule::Ptr<_1a79bd371_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab920445:;
		if (it != expr_end) {
			jule::Ptr<_1a798aa7a_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a79bd371_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1a79b3586_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1ab920445:;
			++it;
			goto _iter_begin_1ab920445;
		}
		_iter_end_1ab920445:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a79b3d4a_buildEnum(jule::Ptr<_1a798b63b_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a79bdddd_Enum>(_1a79bdddd_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1a79b0d58_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1a79b3850_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a79c0021_TypeEnumItem> _1a79b4026_buildTypeEnumItem(jule::Ptr<_1a798be66_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a79c0021_TypeEnumItem>(_1a79c0021_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1a79b0d58_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> _1a79b42bd_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a798be66_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> _2626_items = jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab92369b:;
		if (it != expr_end) {
			jule::Ptr<_1a798be66_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a79c0021_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1a79b4026_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1ab92369b:;
			++it;
			goto _iter_begin_1ab92369b;
		}
		_iter_end_1ab92369b:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a79b4587_buildTypeEnum(jule::Ptr<_1a798c5c6_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a79c05e8_TypeEnum>(_1a79c05e8_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1a79b42bd_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a685a682_Var> _1a79b4851_buildVar(jule::Ptr<_1a7985338_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1a79b0d58_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1a79b1166_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1a79ae7c4_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a685a682_Var>> _1a79b4b1a_buildVars(jule::Slice<jule::Ptr<_1a7985338_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a685a682_Var>> _2966_vars = jule::Slice<jule::Ptr<_1a685a682_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab929383:;
		if (it != expr_end) {
			jule::Ptr<_1a7985338_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1a79b4851_buildVar(_29714_decl)); };
			}
			_iter_next_1ab929383:;
			++it;
			goto _iter_begin_1ab929383;
		}
		_iter_end_1ab929383:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1a6808751_Impl> _1a79b4dd4_buildImpl(jule::Ptr<_1a798e133_Impl> _30318_decl) {
	return jule::new_ptr<_1a6808751_Impl>(_1a6808751_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1a79b2c39_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1a79b4b1a_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1a7a51503_Data> _1a6803a6a_buildAsComptimeMethodData(jule::Ptr<_1a79ab309_FnIns>* _142135_f) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data1)}), });;
}



inline jule::Ptr<_1a6817474_ImportInfo> _1a6803d78_findComptimePackage(jule::Ptr<_1a6837818_Sema>* _142929_s) {
	return _1a6837cad_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a6817474_ImportInfo>>((void*)__jule_anon1ab78badb, nullptr, nullptr));;
}



inline jule::Ptr<_1a7a51503_Data> _1a68041ec_buildComptimeTypeInfoData(jule::Ptr<_1a6837818_Sema>* _143535_s, jule::Ptr<_1a7a828ec_TypeKind>* _143550_t) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a6837153_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data15)}), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a680453d_buildComptimeValue(jule::Ptr<_1a7a51503_Data>* _144328_d) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a67ecc40_comptimeValue>(_1a67ecc40_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data16)}), });;
}



inline jule::Str _1a68076ea_toStrConstraints(jule::Ptr<_1a7a81016_InsGeneric> _14321_g) {
	_200880c8a_StrBuilder _1446_sb = static__2008811b9_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba3bdd0:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1a7a828ec_TypeKind> *_1459_c = it;
			{
				_20088172a_WriteStr(&_1446_sb, _1a7a82cb5_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_20088172a_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1aba3bdd0:;
			++it;
			_1456_i++;
			goto _iter_begin_1aba3bdd0;
		}
		_iter_end_1aba3bdd0:;
	};
	return _200882022_Str(&_1446_sb);;
}



inline jule::Bool _1a6807ab3_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a7a828ec_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1aba3dc39:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _1573_prim = _1a7a8504d_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1bd82c142_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1aba3dca0:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _1633_prim = _1a7a8504d_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1bd82b4d7_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1aba3dd27:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _1693_prim = _1a7a8504d_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1bd82bae2_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1aba3dd9e:;
			{
				jule::Ptr<_1a7a8a4c6_Prim> _1753_prim = _1a7a8504d_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1bd82bd78_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1aba3e07a:;
			{
				return _1a7a8427d_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1aba3e0e1:;
			{
				return (!(_1a7a8427d_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1aba3e157:;
			{
				return _1a7a83ee7_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1aba3e1bd:;
			{
				return _1a7a84514_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1aba3d189:;
			{
				return false;;
			}
		}
		_match_end_1aba3dad5:;
	};
}



inline jule::Bool _1a6807d7c_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a6805ab1_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba44dd8:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1aba44dd8:;
			++it;
			goto _iter_begin_1aba44dd8;
		}
		_iter_end_1aba44dd8:;
	};
	return false;;
}



inline jule::Ptr<_1a79de45d_scopeChecker> _1a680a984_newScopeCheckerBase(jule::Ptr<_1a6837818_Sema>* _5829_s, jule::Ptr<_1a79ab309_FnIns> _5843_owner) {
	return jule::new_ptr<_1a79de45d_scopeChecker>(_1a79de45d_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a7a4b18a_SymbolTable>(), });;
}



inline jule::Ptr<_1a79de45d_scopeChecker> _1a680ad4c_newScopeChecker(jule::Ptr<_1a6837818_Sema>* _6625_s, jule::Ptr<_1a79ab309_FnIns> _6639_owner) {
	jule::Ptr<_1a79de45d_scopeChecker> _676_base = _1a680a984_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a79dcdda_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a79dd46d_scopeGoto>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1a79dcdda_scopeLabel> _1a680b1c1_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a79de45d_scopeChecker> _7637_scope) {
	jule::Ptr<_1a79dcdda_scopeLabel> _776_label = _1a79e3561_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1a79e3561_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1aba5da28:;
	}
	_iter_end_1aba5da28:;;
	return _776_label;;
}



inline jule::Bool _1a680b589_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a680dba7_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aba608b5:;
			{
				jule::Ptr<_1a799c4b5_FnCallExprModel> _933_fcem = _9021_Model.unsafe_cast_ptr<_1a799c4b5_FnCallExprModel>();;
				if (((*(_933_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aba5e232:;
			{
				jule::Ptr<_1a7a51503_Data> _983_d = _9021_Model.unsafe_cast_ptr<_1a7a51503_Data>();;
				return _1a680b589_modelIsGotoScope((*(_983_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1aba60860:;
	};
	return false;;
}



inline jule::Bool _1a680b90d_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a680dba7_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aba625a9:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a680dba7_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aba62e39:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1a680eadc_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aba62ea0:;
			{
				jule::Ptr<_1a68109de_RangeIter> _1113_it = (*(_10421_stmt)).cast_ptr<_1a68109de_RangeIter>(&__jule_any_type39);;
				return (((*(_1113_it))._field_Scope == (*(_10434_sc))) || _1a680b589_modelIsGotoScope((*((*_1113_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aba62a2c:;
			{
				jule::Ptr<_1a6810093_WhileIter> _1143_it = (*(_10421_stmt)).cast_ptr<_1a6810093_WhileIter>(&__jule_any_type37);;
				return ((((*(_1143_it))._field_Scope == (*(_10434_sc))) || _1a680b589_modelIsGotoScope((*_1143_it.alloc)._field_Expr, _10434_sc)) || _1a680b589_modelIsGotoScope((*_1143_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aba62a93:;
			{
				jule::Ptr<_1a79db04d_Match> _1193_m = (*(_10421_stmt)).cast_ptr<_1a79db04d_Match>(&__jule_any_type46);;
				{
					auto expr = &((*(_1193_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba672d4:;
					if (it != expr_end) {
						jule::Ptr<_1a79dbb97_Case> *_12010_c = it;
						{
							if (((*((*(_12010_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12010_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aba6822a:;
								if (it != expr_end) {
									jule::Ptr<_1a7a51503_Data> *_12411_expr = it;
									{
										if (_1a680b589_modelIsGotoScope((*((*(_12411_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1aba6822a:;
									++it;
									goto _iter_begin_1aba6822a;
								}
								_iter_end_1aba6822a:;
							};
						}
						_iter_next_1aba672d4:;
						++it;
						goto _iter_begin_1aba672d4;
					}
					_iter_end_1aba672d4:;
				};
				return (((*_1193_m.alloc)._field_Default != nullptr) && ((*(*(_1193_m))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aba62b09:;
			{
				jule::Ptr<_1a680e7e0_Conditional> _1323_c = (*(_10421_stmt)).cast_ptr<_1a680e7e0_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1323_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba69ccb:;
					if (it != expr_end) {
						jule::Ptr<_1a680e0c5_If> *_13310_elif = it;
						{
							if ((((*((*(_13310_elif))))._field_Scope == (*(_10434_sc))) || _1a680b589_modelIsGotoScope((*(*(_13310_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1aba69ccb:;
						++it;
						goto _iter_begin_1aba69ccb;
					}
					_iter_end_1aba69ccb:;
				};
				return (((*_1323_c.alloc)._field_Default != nullptr) && ((*(*(_1323_c))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aba62b70:;
			{
				jule::Ptr<_1a7a51503_Data> _1403_d = (*(_10421_stmt)).cast_ptr<_1a7a51503_Data>(&__jule_any_type23);;
				return _1a680b589_modelIsGotoScope((*(_1403_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1aba60e26:;
			{
				return false;;
			}
		}
		_match_end_1aba60dc1:;
	};
}



inline jule::I64 _1a680bc82_countMatchType(jule::Ptr<_1a79db04d_Match>* _14720_m, jule::Ptr<_1a7a828ec_TypeKind>* _14732_t) {
	jule::I64 _1486_n = 0LL;;
	jule::Str _1492_kind = _1a7a82cb5_Str((*(_14732_t)).ptr());;
	_julec_label_1aba6cc13:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba6d142:;
		if (it != expr_end) {
			jule::Ptr<_1a79dbb97_Case> *_1519_c = it;
			{
				if (((*(_1519_c)) == nullptr)) {
					goto _iter_next_1aba6d142;
				};
				{
					auto expr = &((*((*(_1519_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba6dd79:;
					if (it != expr_end) {
						jule::Ptr<_1a7a51503_Data> *_15610_expr = it;
						{
							if (((*(_15610_expr)) == nullptr)) {
								goto _iter_end_1aba6d142;
							};
							if ((_1492_kind == _1a7a82cb5_Str((*((*(_15610_expr))))._field_Model.cast_ptr<_1a7a828ec_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1486_n)++;
							};
						}
						_iter_next_1aba6dd79:;
						++it;
						goto _iter_begin_1aba6dd79;
					}
					_iter_end_1aba6dd79:;
				};
			}
			_iter_next_1aba6d142:;
			++it;
			goto _iter_begin_1aba6d142;
		}
		_iter_end_1aba6d142:;
	};
	return _1486_n;;
}



inline jule::Slice<jule::Ptr<_1a7a51503_Data>> _1a680c04b_getDatasFromTupleData(jule::Ptr<_1a7a51503_Data>* _17131_d) {
	if ((_1a7a86d74_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1aba729d7:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1a79a0ba0_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1aba708c5:;
				{
					jule::Ptr<_1a7a905b9_Tuple> _1778_t = _1a7a86d74_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1a7a51503_Data>> _1788_r = jule::Slice<jule::Ptr<_1a7a51503_Data>>::alloc(0LL, (*(_1778_t))._field_Types.len());;
					{
						auto expr = &((*_1778_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aba721ac:;
						if (it != expr_end) {
							jule::Ptr<_1a7a828ec_TypeKind> _17916_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a7a51503_Data>> &__jule_push_dest = _1788_r; __jule_push_dest.push(jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_17916_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1aba721ac:;
							++it;
							goto _iter_begin_1aba721ac;
						}
						_iter_end_1aba721ac:;
					};
					return _1788_r;;
				}
			}
			_match_end_1aba70870:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a7a51503_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a680c887_checkMut(jule::Ptr<_1a6837818_Sema>* _20618_s, jule::Ptr<_1a7a51503_Data>* _20629_left, jule::Ptr<_1a7a51503_Data> _20646_right, jule::Ptr<_1a795c013_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1aba76447:;
			{
				_1a683a453_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1a7a8427d_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1aba76843:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a7a865c1_Struct((*(_20646_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a683a453_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_20646_right))._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aba763d1:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aba76337:;
	};
}



inline jule::Bool _1a680cd71_checkAssign(jule::Ptr<_1a6837818_Sema>* _22521_s, jule::Ptr<_1a7a51503_Data>* _22536_left, jule::Ptr<_1a7a51503_Data> _22553_right, jule::Ptr<_1a795c013_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a79ab309_FnIns> _2262_f = _1a7a8633a_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2262_f != nullptr) && ((*_2262_f.alloc)._field_Decl != nullptr)) && (*(*(_2262_f))._field_Decl.alloc)._field_Global)) {
		_1a683a453_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a7a51e0a_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1aba7bc11:;
			{
				_1a683a453_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a683a7b6_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1aba7bc77:;
			{
				_1a683a453_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a680c887_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1aba7bcdd:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aba7bb56:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aba7b9e1:;
	};
}



inline jule::Bool _1a680d13a_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1aba7bd76:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1a7980e6b_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1aba7de66:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba7dd23:;
			{
				return false;;
			}
		}
		_match_end_1aba7dcbd:;
	};
}



inline jule::Bool _1a680d404_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type45) {
			_case_begin_1aba7ee45:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aba7e61a:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1a7a51503_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1aba8095c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aba81265:;
						{
							return false;;
						}
					}
					_match_end_1aba81210:;
				};
			}
		}
		else {
			_case_begin_1aba7e5a4:;
			{
				return false;;
			}
		}
		_match_end_1aba7e54e:;
	};
}



inline jule::Bool _1a680d6bd_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aba816d8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aba8082a:;
			{
				return false;;
			}
		}
		_match_end_1aba807c5:;
	};
}



inline jule::U64 _1a6376731_removeEqFromOp(jule::U64 _220119_op) {
	{
		auto &_match_expr{ _220119_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aba82475:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1aba824db:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1aba8219a:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aba82211:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aba825c9:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1aba82640:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aba826a6:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1aba8272d:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1aba827a5:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1aba82882:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1aba81c05:;
			{
				return _220119_op;;
			}
		}
		_match_end_1aba820bd:;
	};
}



inline void _1a6376962_makeComptimeRange(jule::Ptr<_1a7a51503_Data>* _223027_d) {
	{
		
		if ((_1a7a87391_comptimeStructFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba82c7d:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c3750_comptimeRange>(_1a79c3750_comptimeRange{._field_kind=jule::Trait(_1a7a87391_comptimeStructFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)});
			}
		}
		else if ((_1a7a878ad_comptimeEnumFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba862e2:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c3750_comptimeRange>(_1a79c3750_comptimeRange{._field_kind=jule::Trait(_1a7a878ad_comptimeEnumFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)});
			}
		}
		else if ((_1a7a8867d_comptimeTypeInfos((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba86358:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c3750_comptimeRange>(_1a79c3750_comptimeRange{._field_kind=jule::Trait(_1a7a8867d_comptimeTypeInfos((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)});
			}
		}
		else if ((_1a7a87dca_comptimeParams((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba82ce4:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c3750_comptimeRange>(_1a79c3750_comptimeRange{._field_kind=jule::Trait(_1a7a87dca_comptimeParams((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)});
			}
		}
		else if ((_1a7a88b9a_comptimeStatics((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba82d5a:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c3750_comptimeRange>(_1a79c3750_comptimeRange{._field_kind=jule::Trait(_1a7a88b9a_comptimeStatics((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)});
			}
		}
		else if ((_1a7a896d4_comptimeFiles((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba82dc1:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a79c3750_comptimeRange>(_1a79c3750_comptimeRange{._field_kind=jule::Trait(_1a7a896d4_comptimeFiles((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a79c3530_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1aba82c17:;
			{
				(*((*(_223027_d))))._field_Decl=true;
			}
		}
		_match_end_1aba85eb2:;
	};
}



inline jule::Bool _1a6376e6d_canComptimeMatch(jule::Ptr<_1a7a51503_Data>* _225126_d) {
	if ((!(_1a7a4a288_isGoodValueToInfer(_225126_d)))) {
		return false;;
	};
	return (_1a7a51e0a_IsConst((*(_225126_d)).ptr()) || (_1a7a88914_comptimeTypeInfo((*((*(_225126_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1a685a682_Var> _1a681495a_findVarInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab281cc9:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _4714_f = *it;
			{
				jule::Ptr<_1a685a682_Var> _487_v = _1a7a4ba70_FindVar(_4714_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_487_v != nullptr)) {
					return _487_v;;
				};
			}
			_iter_next_1ab281cc9:;
			++it;
			goto _iter_begin_1ab281cc9;
		}
		_iter_end_1ab281cc9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a6814dcd_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab282c31:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _5914_f = *it;
			{
				jule::Ptr<_1a7a81b0a_TypeAlias> _607_ta = _1a7a4be6b_FindTypeAlias(_5914_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_607_ta != nullptr)) {
					return _607_ta;;
				};
			}
			_iter_next_1ab282c31:;
			++it;
			goto _iter_begin_1ab282c31;
		}
		_iter_end_1ab282c31:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a7993357_Struct> _1a681530c_findStructInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab28423d:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _7114_f = *it;
			{
				jule::Ptr<_1a7993357_Struct> _727_s = _1a7a4c367_FindStruct(_7114_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_727_s != nullptr)) {
					return _727_s;;
				};
			}
			_iter_next_1ab28423d:;
			++it;
			goto _iter_begin_1ab28423d;
		}
		_iter_end_1ab28423d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79a8328_Fn> _1a68157b3_findFnInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab28574a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _8314_file = *it;
			{
				jule::Ptr<_1a79a8328_Fn> _847_f = _1a7a4c763_FindFn(_8314_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_847_f != nullptr)) {
					return _847_f;;
				};
			}
			_iter_next_1ab28574a:;
			++it;
			goto _iter_begin_1ab28574a;
		}
		_iter_end_1ab28574a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79bb6d2_Trait> _1a6815b04_findTraitInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab28732e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _9514_f = *it;
			{
				jule::Ptr<_1a79bb6d2_Trait> _967_t = _1a7a4caa4_FindTrait(_9514_f.ptr(), (*(_9452_ident)));;
				if ((_967_t != nullptr)) {
					return _967_t;;
				};
			}
			_iter_next_1ab28732e:;
			++it;
			goto _iter_begin_1ab28732e;
		}
		_iter_end_1ab28732e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79bdddd_Enum> _1a6815e78_findEnumInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab287571:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _10714_f = *it;
			{
				jule::Ptr<_1a79bdddd_Enum> _1087_e = _1a7a4cde5_FindEnum(_10714_f.ptr(), (*(_10651_ident)));;
				if ((_1087_e != nullptr)) {
					return _1087_e;;
				};
			}
			_iter_next_1ab287571:;
			++it;
			goto _iter_begin_1ab287571;
		}
		_iter_end_1ab287571:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a79c05e8_TypeEnum> _1a68162ec_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2888a2:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _11914_f = *it;
			{
				jule::Ptr<_1a79c05e8_TypeEnum> _1207_e = _1a7a4d236_FindTypeEnum(_11914_f.ptr(), (*(_11855_ident)));;
				if ((_1207_e != nullptr)) {
					return _1207_e;;
				};
			}
			_iter_next_1ab2888a2:;
			++it;
			goto _iter_begin_1ab2888a2;
		}
		_iter_end_1ab2888a2:;
	};
	return nullptr;;
}



inline jule::Any _1a681683b_defByIdentPackage(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab289d6a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _13014_file = *it;
			{
				jule::Any _1317_def = _1a7a4e204_defByIdent(_13014_file.ptr(), _12951_ident, _12963_binded);;
				if ((_1317_def != nullptr)) {
					return _1317_def;;
				};
			}
			_iter_next_1ab289d6a:;
			++it;
			goto _iter_begin_1ab289d6a;
		}
		_iter_end_1ab289d6a:;
	};
	return nullptr;;
}



inline jule::Bool _1a681c875_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1d969d9ae_HasPrefix((*(_35518_f)), _1d96a8ada_Join(jule::Slice<jule::Str>::make({_1d7cdedd2_PathStdlib,_35526_p})));;
}



inline jule::Bool _1a6834ea8_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abc51567:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1abc515cd:;
			{
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_187_model))._field_Field != nullptr) && _1a6834ea8_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1abc51644:;
			{
				jule::Ptr<_1a799a8ae_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a7a8556a_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a7a852d4_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1a6834ea8_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1abc516aa:;
			{
				jule::Ptr<_1a799cd45_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44);;
				return _1a6834ea8_isValidModelForRef(&((*((*(_357_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1abc50c92:;
			{
				return false;;
			}
		}
		_match_end_1abc50c3c:;
	};
}



inline _1d974c80a_Log _1a683545e_compilerErr(jule::Ptr<_1a795c013_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1d974c80a_Log _436_log = _1d974c80a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_1d974cc6c_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_436_log._field_Line=_1a79637ab_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _436_log;;
}



inline jule::Bool _1a68357d3_impIsLookupable(jule::Ptr<_1a6817474_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1a6819d06_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1a6835b13_appendRetVars(jule::Slice<jule::Ptr<_1a685a682_Var>>* _6823_dest, jule::Ptr<_1a79ab309_FnIns>* _6842_f) {
	if ((_1a79a879b_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>> _736_types = _1a79ac508_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc5c320:;
		if (it != expr_end) {
			jule::I64 _747_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _7414_ident = *it;
			{
				if ((_1a795e8ea_IsIgnoreIdent((*(_7414_ident))._field_Kind) || _1a795ebb4_IsAnonIdent((*_7414_ident.alloc)._field_Kind))) {
					goto _iter_next_1abc5c320;
				};
				{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7414_ident, ._field_Ident=(*_7414_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=_736_types[_747_i]}), ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()}), ._field_RetOrder=_747_i, })); };
			}
			_iter_next_1abc5c320:;
			++it;
			_747_i++;
			goto _iter_begin_1abc5c320;
		}
		_iter_end_1abc5c320:;
	};
	if ((((*(*((*((*(_6842_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a6835dee_appendParamVars(jule::Slice<jule::Ptr<_1a685a682_Var>>* _9825_dest, jule::Ptr<_1a79ab309_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc61bc6:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> _10314_p = *it;
			{
				if ((_1a795e8ea_IsIgnoreIdent((*((*(_10314_p))._field_Decl))._field_Ident) || _1a795ebb4_IsAnonIdent((*(*(_10314_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1abc61bc6;
				};
				jule::Ptr<_1a685a682_Var> _1087_v = jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*(_10314_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10314_p))._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*(_10314_p))._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*(_10314_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()}), });;
				{
					
					if (_1a79a6e70_IsSelf((*(_10314_p))._field_Decl)) {
						_case_begin_1abc65a32:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)});
							(*_1087_v.alloc)._field_Reference=(!(_1a79a7206_IsRef((*(_10314_p))._field_Decl)));
							if (_1a79a7206_IsRef((*(_10314_p))._field_Decl)) {
								((*(_1087_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1087_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e002_Sptr>(_1a7a8e002_Sptr{._field_Elem=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_BindIdent=(*(*((*(_1087_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*((*(_1087_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*(_10314_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1abc65768:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e9c5_Slc>(_1a7a8e9c5_Slc{._field_Elem=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_BindIdent=(*((*_10314_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*(_10314_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1abc65702:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=(*_10314_p.alloc)._field_Kind;
						}
					}
					_match_end_1abc655d1:;
				};
				{ jule::Slice<jule::Ptr<_1a685a682_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_1087_v); };
			}
			_iter_next_1abc61bc6:;
			++it;
			goto _iter_begin_1abc61bc6;
		}
		_iter_end_1abc61bc6:;
	};
}



inline void _1a68361da_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _15834_dest, jule::Ptr<_1a79ab309_FnIns>* _15859_f) {
	jule::I64 _1596_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1596_size+=(*(*((*((*(_15859_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1596_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc6de9c:;
		if (it != expr_end) {
			jule::I64 _1687_i = it - expr->begin();
			jule::Ptr<_1a7a81016_InsGeneric> _16814_g = *it;
			{
				jule::Ptr<_1a797e6c8_GenericDecl> _1697_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_1687_i];;
				{ jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a7a81b0a_TypeAlias>(_1a7a81b0a_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1697_decl.alloc)._field_Token, ._field_Ident=(*(_1697_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_16814_g))._field_Kind}), })); };
			}
			_iter_next_1abc6de9c:;
			++it;
			_1687_i++;
			goto _iter_begin_1abc6de9c;
		}
		_iter_end_1abc6de9c:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a79960d5_StructIns> _1817_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_1817_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc704cb:;
			if (it != expr_end) {
				jule::I64 _1828_i = it - expr->begin();
				jule::Ptr<_1a7a81016_InsGeneric> _18215_g = *it;
				{
					jule::Ptr<_1a797e6c8_GenericDecl> _1838_decl = (*((*(_1817_owner))._field_Decl))._field_Generics[_1828_i];;
					{ jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a7a81b0a_TypeAlias>(_1a7a81b0a_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1838_decl.alloc)._field_Token, ._field_Ident=(*(_1838_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_18215_g))._field_Kind}), })); };
				}
				_iter_next_1abc704cb:;
				++it;
				_1828_i++;
				goto _iter_begin_1abc704cb;
			}
			_iter_end_1abc704cb:;
		};
	};
}



inline jule::Ptr<_1a7a4b18a_SymbolTable> _1a683655e_findFile(jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>* _19618_files, jule::Ptr<_1a7962799_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc6e695:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _19714_fl = *it;
			{
				if (((*(_19714_fl))._field_File == (*(_19642_handler)))) {
					return _19714_fl;;
				};
			}
			_iter_next_1abc6e695:;
			++it;
			goto _iter_begin_1abc6e695;
		}
		_iter_end_1abc6e695:;
	};
	return nullptr;;
}



inline void _1a6836a15_pushSuggestion(_1d974c80a_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_1d974cc6c_Logf(_20541_fmt, _20554_args);
}



inline void _1a6858d67_pushImplemented(jule::Ptr<_1a79bb6d2_Trait> _288224_t, jule::Ptr<_1a7993357_Struct>* _288240_d) {
	_julec_label_1abc763e4:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1abc76b53:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc77bba:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> _288610_s = *it;
						{
							if ((_288610_s == (*(_288240_d)))) {
								goto _match_end_1abc76724;
							};
						}
						_iter_next_1abc77bba:;
						++it;
						goto _iter_begin_1abc77bba;
					}
					_iter_end_1abc77bba:;
				};
				goto _case_begin_1abc767bd;
			}
		}
		else {
			_case_begin_1abc767bd:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1a7993357_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1abc76724:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc7803e:;
		if (it != expr_end) {
			jule::Ptr<_1a7a89abe_TypeSymbol> _289514_i = *it;
			{
				_1a6858d67_pushImplemented(_1a7a86857_Trait((*(_289514_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1abc7803e:;
			++it;
			goto _iter_begin_1abc7803e;
		}
		_iter_end_1abc7803e:;
	};
}



inline void _1a6859153_pushImplements(jule::Ptr<_1a7993357_Struct>* _290024_s, jule::Ptr<_1a79bb6d2_Trait> _290040_t) {
	_julec_label_1abc7944c:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1abc79abd:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc7ab35:;
					if (it != expr_end) {
						jule::Ptr<_1a79bb6d2_Trait> _290410_b = *it;
						{
							if ((_290410_b == _290040_t)) {
								goto _match_end_1abc7968e;
							};
						}
						_iter_next_1abc7ab35:;
						++it;
						goto _iter_begin_1abc7ab35;
					}
					_iter_end_1abc7ab35:;
				};
				goto _case_begin_1abc79738;
			}
		}
		else {
			_case_begin_1abc79738:;
			{
				{ jule::Slice<jule::Ptr<_1a79bb6d2_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1abc7968e:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc7aea9:;
		if (it != expr_end) {
			jule::Ptr<_1a7a89abe_TypeSymbol> _291314_i = *it;
			{
				_1a6859153_pushImplements(_290024_s, _1a7a86857_Trait((*(_291314_i))._field_Kind.ptr()));
			}
			_iter_next_1abc7aea9:;
			++it;
			goto _iter_begin_1abc7aea9;
		}
		_iter_end_1abc7aea9:;
	};
}



inline jule::Bool _1a7a36c69_traitHasReferenceReceiver(jule::Ptr<_1a79bb6d2_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd2b433:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1abd2b433;
				};
				jule::Ptr<_1a79a6854_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1a79a7206_IsRef(_353_p.ptr()) && _1a79a6e70_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1abd2b433:;
			++it;
			goto _iter_begin_1abd2b433;
		}
		_iter_end_1abd2b433:;
	};
	return false;;
}



inline jule::Bool _1a7a37121_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a7a51503_Data>* _4333_d) {
	jule::Str _442_value = _1bd80754b_FmtFloat(_1bd830046_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1bd822c2b_CheckBitFloat(_442_value, _1bd821785_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1a7a37495_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a7a51503_Data>* _4830_d) {
	jule::F64 _492_min = _1bd827e1d_Min(_4818_kind);;
	jule::F64 _502_max = _1bd8281a4_Max(_4818_kind);;
	{
		
		if (_1bd831d8e_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1abd2ee70:;
			{
				jule::F64 _533_x = _1bd82e793_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1bd7cd29c_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1bd8315db_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1abd2eed6:;
			{
				jule::F64 _603_x = _1bd830046_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1bd831355_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1abd3005d:;
			{
				jule::F64 _653_x = _1bd830046_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1abd2ed60:;
	};
	return false;;
}



inline jule::Bool _1a7a3785d_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a7a51503_Data>* _7132_d) {
	jule::F64 _722_max = _1bd8281a4_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1a687c242_IsAscii(static_cast<jule::I32>(_1bd82dc59_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1bd831d8e_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1abd35b13:;
			{
				jule::F64 _793_x = _1bd82e793_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1bd7cd29c_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1bd8315db_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1abd35b79:;
			{
				jule::F64 _893_x = _1bd830046_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1bd831355_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1abd35be0:;
			{
				jule::F64 _943_x = _1bd830046_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1abd35272:;
	};
	return false;;
}



inline jule::Bool _1a7a37bd2_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a7a51503_Data>* _10030_d) {
	{
		
		if (_1bd82b1c9_IsSigInt(_10018_kind)) {
			_case_begin_1abd3a7a5:;
			{
				return _1a7a37495_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1bd82b4d7_IsUnsigInt(_10018_kind)) {
			_case_begin_1abd3a83d:;
			{
				return _1a7a3785d_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1abd3a2bb:;
			{
				return false;;
			}
		}
		_match_end_1abd3a200:;
	};
}



inline void _1a7a440ea_checkMutRiskOfStructLit(jule::Ptr<_1a6837818_Sema>* _92033_s, jule::Ptr<_1a799b283_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd3b8b6:;
		if (it != expr_end) {
			jule::Ptr<_1a799addc_StructArgExprModel> *_9219_arg = it;
			{
				if ((*((*((*((*(_9219_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1abd3b8b6;
				};
				if (((!((*((*(*(_9219_arg)).alloc)._field_Expr))._field_Mutable)) && _1a7a8427d_Mutable((*(*((*(_9219_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1a683a453_pushErr((*(_92033_s)).ptr(), (*(*(_9219_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*((*(_9219_arg))))._field_Expr))._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1abd3b8b6:;
			++it;
			goto _iter_begin_1abd3b8b6;
		}
		_iter_end_1abd3b8b6:;
	};
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a7a49e36_lenKind(void) {
	return _1a7b661c8_primInt;;
}



inline jule::Bool _1a7a4a288_isGoodValueToInfer(jule::Ptr<_1a7a51503_Data>* _142124_d) {
	return (!(_1a7a518dd_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1a79718da_Directive> _1a7a79d9a_findDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _425923_directives, jule::Str _425954_d) {
	{
		auto expr = _425923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac13ea65:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _426014_dr = *it;
			{
				if (((*((*(_426014_dr))._field_Tag))._field_Kind == _425954_d)) {
					return _426014_dr;;
				};
			}
			_iter_next_1ac13ea65:;
			++it;
			goto _iter_begin_1ac13ea65;
		}
		_iter_end_1ac13ea65:;
	};
	return nullptr;;
}



inline jule::Any _1a7a7a263_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1a6817474_ImportInfo> _426836_imp) {
	return _1a7b697d6_findPackageBuiltinDef(&((*(_426836_imp))._field_LinkPath), _426824_ident);;
}



inline void _1a7a7a494_fitBitsize(jule::Ptr<_1a7a51503_Data>* _427720_d) {
	jule::Ptr<_1a7a8a4c6_Prim> _42786_prim = _1a7a8504d_Prim((*((*(_427720_d))))._field_Kind.ptr());;
	jule::I64 _42792_z = _1bd821785_BitsizeOf(_1a7a8a817_Str(_42786_prim.ptr()));;
	{
		
		if (_1bd831355_IsI64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ac14234d:;
			{
				jule::I64 _42823_k = _1bd8232ae_BitsizeOfInt(_1bd82dc59_ReadI64((*((*(_427720_d))))._field_Constant));;
				if (((_42823_k > _42792_z) || _1bd82b4d7_IsUnsigInt((*_42786_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1bd821ac6_IntFromBits(_42823_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1a7b6852c_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1bd8315db_IsU64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ac1423b4:;
			{
				jule::I64 _42883_k = _1bd823578_BitsizeOfUint(_1bd82dee0_ReadU64((*((*(_427720_d))))._field_Constant));;
				if (((_42883_k > _42792_z) || _1bd82b1c9_IsSigInt((*_42786_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1bd821d5c_UintFromBits(_42883_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1a7b6852c_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1bd831d8e_IsF64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1ac14243b:;
			{
				if ((_42792_z == 64LLU)) {
					return;;
				};
				jule::I64 _42983_k = _1bd822ee5_BitsizeOfFloat(_1bd82e793_ReadF64((*((*(_427720_d))))._field_Constant));;
				if ((_42983_k > _42792_z)) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1bd822126_FloatFromBits(_42983_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1a7b6852c_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1ac14223d:;
	};
}



inline void _1a7a7a7c4_makeStructLitAlloc(jule::Ptr<_1a7a51503_Data>* _430628_d, jule::Ptr<_1a799b283_StructLitExprModel>* _430643_lit) {
	(*((*(_430628_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e002_Sptr>(_1a7a8e002_Sptr{._field_Elem=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait((*((*(_430643_lit))))._field_Strct, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)});
	(*((*(_430628_d))))._field_Model=jule::Any(jule::new_ptr<_1a799b580_AllocStructLitExprModel>(_1a799b580_AllocStructLitExprModel{._field_Lit=(*(_430643_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1a685a682_Var> _1a7a7ab48_buildErrorVar(jule::Ptr<_1a680dba7_Scope>* _431723_s, jule::Ptr<_1a797a52b_FnCallExpr>* _431739_fc) {
	return jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Scope=(*(_431723_s)), ._field_Token=(*((*(_431739_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>()}), });;
}



inline jule::Any _1a7a7aebc_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1a6837818_Sema> _433238_s) {
	{
		auto expr = &((*((*(_433238_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac14db0c:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _433314_imp = *it;
			{
				if (((*(_433314_imp))._field_ImportAll || _1a6819d06_existIdent(_433314_imp, (*(_433222_ident))))) {
					jule::Any _43358_def = _1a7a7a263_findBuiltinsImport(_433222_ident, _433314_imp);;
					if ((_43358_def != nullptr)) {
						return _43358_def;;
					};
				};
			}
			_iter_next_1ac14db0c:;
			++it;
			goto _iter_begin_1ac14db0c;
		}
		_iter_end_1ac14db0c:;
	};
	jule::Str _43436_ppath = _1a7962e4d_Dir((*(*(_433238_s))._field_file.alloc)._field_File.ptr());;
	if (_1d969d9ae_HasPrefix(_43436_ppath, _1d7cdedd2_PathStdlib)) {
		(_43436_ppath).mut_slice(_1d7cdedd2_PathStdlib.len());;
		_43436_ppath=(jule::Str::lit("std", 3) + _1d96a4355_Replace(_43436_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1a7b697d6_findPackageBuiltinDef(&(_43436_ppath), _433222_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a7a7b286_isOkForShifting(jule::Ptr<_1a7a51503_Data>* _435725_d) {
	if (_1a7a51e0a_IsConst((*(_435725_d)).ptr())) {
		{
			
			if (_1bd831355_IsI64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ac15201c:;
				{
					return (_1bd82dc59_ReadI64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1bd8315db_IsU64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ac1520b6:;
				{
					return true;;
				}
			}
			else if (_1bd831d8e_IsF64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1ac15213d:;
				{
					return (_1bd82e793_ReadF64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1ac151e84:;
				{
					return false;;
				}
			}
			_match_end_1ac151db8:;
		};
	};
	jule::Ptr<_1a7a8a4c6_Prim> _43702_prim = _1a7a8504d_Prim((*((*(_435725_d))))._field_Kind.ptr());;
	return ((_43702_prim != nullptr) && _1bd82b7a1_IsInt(_1a7a8a817_Str(_43702_prim)));;
}



inline jule::Bool _1a7a7b660_isInstancedStruct(jule::Ptr<_1a79960d5_StructIns> _437422_s) {
	return ((*((*(_437422_s))._field_Decl))._field_Generics.len() == (*_437422_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a7a7b95c_isPtrArithmeticCompatible(jule::Ptr<_1a7a51503_Data>* _437835_l, jule::Ptr<_1a7a51503_Data>* _437850_r) {
	jule::Ptr<_1a7a927b9_Ptr> _43792_ptr = _1a7a8556a_Ptr((*((*(_437850_r))))._field_Kind.ptr());;
	if ((_43792_ptr != nullptr)) {
		return _1a7a83106_Equal((*(_1a7a8556a_Ptr((*((*(_437835_l))))._field_Kind)))._field_Elem, (*_43792_ptr.alloc)._field_Elem);;
	};
	if ((_1a7a51e0a_IsConst((*(_437850_r)).ptr()) && (*((*(_437850_r))))._field_untyped)) {
		return (_1a7a37bd2_intAssignable(jule::Str::lit("int", 3), _437850_r) || _1a7a37bd2_intAssignable(jule::Str::lit("uint", 4), _437850_r));;
	};
	_1a7a381bb_typeCompatibilityChecker _43886_tcc = _1a7a381bb_typeCompatibilityChecker{._field_dest=_1a7b661c8_primInt, ._field_src=(*((*(_437850_r))))._field_Kind, };;
	if (_1a7a39882_check(&_43886_tcc)) {
		return true;;
	};
	_43886_tcc._field_dest=_1a7b65d10_primUint;
	return _1a7a39882_check(&_43886_tcc);;
}



inline void _1a7a7bd03_applyCastKindModel(jule::Ptr<_1a7a51503_Data>* _439928_d, jule::Ptr<_1a7a828ec_TypeKind>* _439943_t, jule::Ptr<_1a795c013_Token>* _439962_token) {
	(*((*(_439928_d))))._field_Model=jule::Any(jule::new_ptr<_1a799bb13_CastingExprModel>(_1a799bb13_CastingExprModel{._field_Token=(*(_439962_token)), ._field_Expr=jule::new_ptr<_1a7a51503_Data>((*((*(_439928_d))))), ._field_Kind=(*(_439943_t)), ._field_ExprKind=(*((*(_439928_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1a7a7c199_applyCastKind(jule::Ptr<_1a7a51503_Data>* _440823_d, jule::Ptr<_1a7a828ec_TypeKind>* _440838_t, jule::Ptr<_1a795c013_Token>* _440857_token) {
	_1a7a7bd03_applyCastKindModel(_440823_d, _440838_t, _440857_token);
	(*((*(_440823_d))))._field_Kind=(*(_440838_t));
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7c3a8_buildVoidData(void) {
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b64e41_primVoid, });;
}



inline jule::Str _1a7a7c72c_checkDataForIntegerIndexing(jule::Ptr<_1a7a51503_Data>* _441937_d, jule::Ptr<_1a795c013_Token>* _441952_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a7a8504d_Prim((*((*(_441937_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1ac15c445:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1bd82b7a1_IsInt(_1a7a8a817_Str(_1a7a8504d_Prim((*((*(_441937_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1ac15c4ab:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a7a51e0a_IsConst((*(_441937_d)).ptr())) {
			_case_begin_1ac15c522:;
			{
				if ((_1bd830046_AsF64((*((*(_441937_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a7a8504d_Prim((*((*(_441937_d))))._field_Kind.ptr()) == nullptr) || _1a7a51e0a_IsConst((*(_441937_d)).ptr()) || (_1bd8214bb_RealKindOf(_1a7a8a817_Str(_1a7a8504d_Prim((*((*(_441937_d))))._field_Kind).ptr())) != _1bd8214bb_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1ac15c588:;
			{
				_1a7a7c199_applyCastKind(_441937_d, &(_1a7b661c8_primInt), _441952_token);
			}
		}
		_match_end_1ac15c38a:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a7a7cac3_applyCastModelByEnum(jule::Ptr<_1a7a51503_Data>* _444430_d, jule::Ptr<_1a79bdddd_Enum> _444444_e, jule::Ptr<_1a795c013_Token>* _444459_token) {
	if ((_444444_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _44482_p = _1a7a8504d_Prim((*((*(_444444_e))._field_Kind))._field_Kind.ptr());;
	if (_1a7a8d95d_IsStr(_44482_p.ptr())) {
		return;;
	};
	_1a7a7bd03_applyCastKindModel(_444430_d, &((*(*(_444444_e))._field_Kind.alloc)._field_Kind), _444459_token);
}



inline void _1a7a7cdae_castConstByType(jule::Str* _445521_t, jule::Ptr<_1a7a51503_Data>* _445534_d) {
	{
		
		if (_1bd82b1c9_IsSigInt((*(_445521_t)))) {
			_case_begin_1ac163391:;
			{
				{
					auto _match_expr{ _1bd821785_BitsizeOf(_1bd8214bb_RealKindOf((*(_445521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ac163e52:;
						{
							_1bd8302ee_SetI64((*((*(_445534_d))))._field_Constant.ptr(), _1bd82ea29_AsI64((*((*(_445534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ac163ec9:;
						{
							_1bd8302ee_SetI64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1bd82ea29_AsI64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ac164040:;
						{
							_1bd8302ee_SetI64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1bd82ea29_AsI64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ac1640a6:;
						{
							_1bd8302ee_SetI64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1bd82ea29_AsI64((*((*(_445534_d))))._field_Constant))));
						}
					}
					_match_end_1ac163b33:;
				};
			}
		}
		else if (_1bd82b4d7_IsUnsigInt((*(_445521_t)))) {
			_case_begin_1ac16343a:;
			{
				{
					auto _match_expr{ _1bd821785_BitsizeOf(_1bd8214bb_RealKindOf((*(_445521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ac1643e7:;
						{
							_1bd8305a7_SetU64((*((*(_445534_d))))._field_Constant.ptr(), _1bd82ecb0_AsU64((*((*(_445534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ac16ce6c:;
						{
							_1bd8305a7_SetU64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1bd82ecb0_AsU64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1ac16ced3:;
						{
							_1bd8305a7_SetU64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1bd82ecb0_AsU64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1ac16d049:;
						{
							_1bd8305a7_SetU64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1bd82ecb0_AsU64((*((*(_445534_d))))._field_Constant))));
						}
					}
					_match_end_1ac167054:;
				};
			}
		}
		else if (_1bd82bae2_IsFloat((*(_445521_t)))) {
			_case_begin_1ac1634a1:;
			{
				{
					auto _match_expr{ _1bd821785_BitsizeOf(_1bd8214bb_RealKindOf((*(_445521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1ac16d38a:;
						{
							_1bd830dc1_SetF64((*((*(_445534_d))))._field_Constant.ptr(), _1bd830046_AsF64((*((*(_445534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1ac17204d:;
						{
							_1bd830dc1_SetF64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1bd830046_AsF64((*((*(_445534_d))))._field_Constant))));
						}
					}
					_match_end_1ac170ee7:;
				};
			}
		}
		_match_end_1ac16323c:;
	};
}



inline void _1a7a7d3cb_updateModelToGenericIns(jule::Any* _448933_m, jule::Ptr<_1a79ab309_FnIns>* _448952_f) {
	{
		auto &_match_expr{ (*(_448933_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac16379d:;
			{
				(*(_448933_m))=jule::Any((*(_448952_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac172405:;
			{
				(*((*(_448933_m)).cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448952_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac163836:;
			{
				(*((*(_448933_m)).cast_ptr<_1a79a04c9_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448952_f));
			}
		}
		_match_end_1ac1724d2:;
	};
}



inline jule::Bool _1a7a7d640_pushSubIdentFromExpr(jule::Any _450029_expr, jule::Ptr<_1a7972d92_SubIdentTypeDecl>* _450050_t) {
	{
		auto &_match_expr{ _450029_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac1753e7:;
			{
				jule::Ptr<_1a797811c_IdentExpr> _45037_e = _450029_expr.unsafe_cast_ptr<_1a797811c_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a7972ac8_IdentTypeDecl>> &__jule_push_dest = (*((*(_450050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*(_45037_e))._field_Token, ._field_Ident=(*_45037_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ac175edb:;
			{
				jule::Ptr<_1a7979915_SubIdentExpr> _45097_e = _450029_expr.unsafe_cast_ptr<_1a7979915_SubIdentExpr>();;
				if ((!(_1a7a7d640_pushSubIdentFromExpr((*((*(_45097_e))._field_Expr))._field_Kind, _450050_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a7972ac8_IdentTypeDecl>> &__jule_push_dest = (*((*(_450050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a7972ac8_IdentTypeDecl>(_1a7972ac8_IdentTypeDecl{._field_Token=(*_45097_e.alloc)._field_Ident, ._field_Ident=(*((*_45097_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1ac175a8a:;
			{
				return false;;
			}
		}
		_match_end_1ac175a35:;
	};
	return true;;
}



inline jule::Str _1a7a7d909_constoa(jule::Ptr<_1bd82c384_Const>* _452313_c) {
	{
		
		if (_1bd831355_IsI64((*(_452313_c)).ptr())) {
			_case_begin_1ac178dbd:;
			{
				return _1bd81e08a_FmtInt(_1bd82dc59_ReadI64((*(_452313_c)).ptr()), 10LL);;
			}
		}
		else if (_1bd8315db_IsU64((*(_452313_c)).ptr())) {
			_case_begin_1ac178c8b:;
			{
				return _1bd81dbc2_FmtUint(_1bd82dee0_ReadU64((*(_452313_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1ac1761c8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac178939:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7a7dd38_evalEnumStatic(jule::Ptr<_1a79bdddd_Enum>* _453424_enm, jule::Ptr<_1a79bd371_EnumItem>* _453441_item, jule::Ptr<_1a795c013_Token>* _453463_token) {
	jule::Ptr<_1a7a51503_Data> _45356_d = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait((*(_453424_enm)), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data3)}), });;
	if (((*(_453441_item)) != nullptr)) {
		(*(_45356_d))._field_Constant=jule::new_ptr<_1bd82c384_Const>((*(*((*((*((*(_453441_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45356_d.alloc)._field_Model=jule::Any((*_45356_d.alloc)._field_Constant, &__jule_any_type19);
		_1a7a7cac3_applyCastModelByEnum(&(_45356_d), (*(_453424_enm)), _453463_token);
	};
	return _45356_d;;
}



inline jule::Ptr<_1a799b283_StructLitExprModel> _1a7a7e102_isLitBased(jule::Any* _455120_m) {
	{
		auto &_match_expr{ (*(_455120_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac17da1b:;
			{
				return (*(_455120_m)).cast_ptr<_1a799b283_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac17da82:;
			{
				return (*((*(_455120_m)).cast_ptr<_1a799b580_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac17dae8:;
			{
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _45587_ssi = (*(_455120_m)).cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1a7a7e102_isLitBased(&((*((*(_45587_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac17db5e:;
			{
				jule::Ptr<_1a799bb13_CastingExprModel> _45617_c = (*(_455120_m)).cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93);;
				return _1a7a7e102_isLitBased(&((*((*(_45617_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ac17d5cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac17d576:;
	};
}



inline void _1a7a7e3dd_makeImplicitDeref(jule::Ptr<_1a7a51503_Data>* _456827_d, jule::Ptr<_1a795c013_Token> _456841_baseToken) {
	jule::Ptr<_1a799a8ae_UnaryExprModel> _45696_unary = jule::new_ptr<_1a799a8ae_UnaryExprModel>(_1a799a8ae_UnaryExprModel{._field_Expr=jule::new_ptr<_1a7a51503_Data>((*((*(_456827_d))))), ._field_Op=jule::new_ptr<_1a795c013_Token>((*(_456841_baseToken)))});;
	(*((*(_45696_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_45696_unary))._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456827_d))))._field_Model=jule::Any(_45696_unary, &__jule_any_type110);
}



inline void _1ac2dad32_updateRefer(jule::Ptr<_1a79ae4d8_ReferenceStack> _457923_ref, jule::Ptr<_1a79ab309_FnIns>* _457946_old, jule::Ptr<_1a79ab309_FnIns>* _457959_new) {
	{
		auto expr = &((*(_457923_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2dc707:;
		if (it != expr_end) {
			jule::I64 _45806_i = it - expr->begin();
			jule::Any _45809_sym = *it;
			{
				if ((__jule_any_type7_compare(_45809_sym, (*(_457946_old))))) {
					(*(_457923_ref))._field_buffer[_45806_i]=jule::Any((*(_457959_new)), &__jule_any_type7);
				};
			}
			_iter_next_1ac2dc707:;
			++it;
			_45806_i++;
			goto _iter_begin_1ac2dc707;
		}
		_iter_end_1ac2dc707:;
	};
}



inline void _1a7a7ea70_makeVariadic(jule::Ptr<_1a7a51503_Data>* _458722_d, jule::Ptr<_1a7a828ec_TypeKind> _458736_elem) {
	(*((*(_458722_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_BindIdent=(*_458736_elem.alloc)._field_BindIdent, ._field_Generic=(*(_458736_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_458736_elem.alloc)._field_Kind});
}



inline jule::Bool _1a7a7ee9e_isVarCaptured(jule::Ptr<_1a79de45d_scopeChecker> _460118_r, jule::Ptr<_1a79de45d_scopeChecker> _460140_s, jule::Ptr<_1a685a682_Var> _460158_v) {
	if (((*(_460158_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_460140_s))._field_scope == (*_460158_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_460140_s.alloc)._field_parent == nullptr) || (_460140_s == _460118_r))) {
				goto _iter_end_1ac1851a4;
			};
			_460140_s=(*_460140_s.alloc)._field_parent;
		}
	_iter_next_1ac1851a4:;
	}
	_iter_end_1ac1851a4:;;
	return true;;
}



inline jule::Bool _1a7a9d154_kindUsesGenerics(jule::Ptr<_1a7a828ec_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>* _171641_generics) {
	{
		auto expr = _171641_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa51ba48:;
		if (it != expr_end) {
			jule::Ptr<_1a797e6c8_GenericDecl> *_17179_g = it;
			{
				if (static__1a7a9cc25_exist(&((*((*(_17179_g))))._field_Ident), _171626_k)) {
					return true;;
				};
			}
			_iter_next_1aa51ba48:;
			++it;
			goto _iter_begin_1aa51ba48;
		}
		_iter_end_1aa51ba48:;
	};
	return false;;
}



inline jule::Bool _1a7a9d51c_hasDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _172622_directives, jule::Str _172653_tag) {
	{
		auto expr = _172622_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa51c2da:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _172714_dr = *it;
			{
				if (((*((*(_172714_dr))._field_Tag))._field_Kind == _172653_tag)) {
					return true;;
				};
			}
			_iter_next_1aa51c2da:;
			++it;
			goto _iter_begin_1aa51c2da;
		}
		_iter_end_1aa51c2da:;
	};
	return false;;
}



inline jule::Bool _1a7a9d7d6_canGetPtr(jule::Ptr<_1a7a51503_Data>* _173519_d) {
	{
		
		if ((!((*((*(_173519_d))))._field_Lvalue)) || _1a7a51e0a_IsConst((*(_173519_d)).ptr())) {
			_case_begin_1aa51dc37:;
			{
				return false;;
			}
		}
		else if ((_1a7a8633a_Fn((*((*(_173519_d))))._field_Kind.ptr()) != nullptr) || (_1a7a85801_Enum((*((*(_173519_d))))._field_Kind) != nullptr)) {
			_case_begin_1aa51dcc0:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aa51dbc1:;
			{
				return true;;
			}
		}
		_match_end_1aa51d198:;
	};
}



inline jule::Bool _1a7a9db27_isValidForSptrType(jule::Ptr<_1a7a828ec_TypeKind>* _174728_t) {
	jule::Ptr<_1a79960d5_StructIns> _17486_s = _1a7a865c1_Struct((*(_174728_t)).ptr());;
	if ((((_17486_s != nullptr) && ((*_17486_s.alloc)._field_Decl != nullptr)) && (*(*(_17486_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a7a9ddad_isValidForRef(jule::Ptr<_1a7a828ec_TypeKind>* _175623_t) {
	return (_1a7a8633a_Fn((*(_175623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a7a9e177_isBuiltinStrConvertable(jule::Ptr<_1a7a828ec_TypeKind>* _175933_t) {
	return ((((!(_1a7a83c61_Void((*(_175933_t)).ptr()))) && (_1a7a8633a_Fn((*(_175933_t)).ptr()) == nullptr)) && (_1a7a86d74_Tup((*(_175933_t)).ptr()) == nullptr)) && (!(_1a7a8710a_comptime((*(_175933_t)).ptr()))));;
}



inline jule::Str _1a7a9e441_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a795c013_Token>>* _176327_tokens) {
	if ((((*(_176327_tokens)).len() == 1LL) && ((*((*(_176327_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17676_n = 0LL;;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa524a95:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_17689_token = it;
			{
				_17676_n+=(*((*(_17689_token))))._field_Kind.len();
				_17676_n+=2LL;
			}
			_iter_next_1aa524a95:;
			++it;
			goto _iter_begin_1aa524a95;
		}
		_iter_end_1aa524a95:;
	};
	_200880c8a_StrBuilder _17726_s = static__2008811b9_New(_17676_n);;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa522796:;
		if (it != expr_end) {
			jule::I64 _17736_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> *_17739_token = it;
			{
				_20088172a_WriteStr(&_17726_s, (*((*(_17739_token))))._field_Kind);
				if ((((*(_176327_tokens)).len() - _17736_i) > 1LL)) {
					_20088172a_WriteStr(&_17726_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1aa522796:;
			++it;
			_17736_i++;
			goto _iter_begin_1aa522796;
		}
		_iter_end_1aa522796:;
	};
	return _200882022_Str(&_17726_s);;
}



inline jule::Ptr<_1a7a8a4c6_Prim> _1a7a9e81a_buildPrimType(jule::Str _178218_kind) {
	return jule::new_ptr<_1a7a8a4c6_Prim>(_1a7a8a4c6_Prim{._field_Kind=_178218_kind});;
}



inline void _1a7a9ee03_applyImplicitCast(jule::Ptr<_1a7a828ec_TypeKind>* _181027_dest, jule::Ptr<_1a7a51503_Data>* _181049_d, jule::Ptr<_1a795c013_Token>* _181064_token) {
	if (_1a7a839ca_IsNil((*((*(_181049_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _18142_destPrim = _1a7a8504d_Prim((*(_181027_dest)).ptr());;
	if (((_18142_destPrim != nullptr) && _1a7a8dbe4_IsAny(_18142_destPrim))) {
		jule::Ptr<_1a7a8a4c6_Prim> _18163_prim = _1a7a8504d_Prim((*((*(_181049_d))))._field_Kind);;
		if (((_18163_prim == nullptr) || (!(_1a7a8dbe4_IsAny(_18163_prim.ptr()))))) {
			_1a7a7c199_applyCastKind(_181049_d, _181027_dest, _181064_token);
		};
		return;;
	};
	jule::Ptr<_1a79bb6d2_Trait> _18232_dt = _1a7a86857_Trait((*(_181027_dest)).ptr());;
	if ((_18232_dt != nullptr)) {
		jule::Ptr<_1a79bb6d2_Trait> _18253_bt = _1a7a86857_Trait((*((*(_181049_d))))._field_Kind);;
		if (((_18253_bt == nullptr) || (_18253_bt != _18232_dt))) {
			_1a7a7bd03_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
			return;;
		};
	};
	if (((_1a7a85a87_TypeEnum((*(_181027_dest)).ptr()) != nullptr) && (_1a7a85a87_TypeEnum((*((*(_181049_d))))._field_Kind) == nullptr))) {
		_1a7a7bd03_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
		return;;
	};
}



inline jule::Bool _1a7aa01bc_validTypeForXof(jule::Ptr<_1a7a828ec_TypeKind>* _183825_t) {
	return ((!(_1a7a83c61_Void((*(_183825_t)).ptr()))) && (_1a7a8633a_Fn((*(_183825_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a7a4b18a_SymbolTable__jule_tuple_s_1d974c80a_Log _1a7aa32d0_buildSymbols(jule::Ptr<_1a79705a9_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a79b549a_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a7a4b18a_SymbolTable__jule_tuple_s_1d974c80a_Log __jule_func_result;
	jule::Ptr<_1a79b549a_symbolBuilder> _176_sb = jule::new_ptr<_1a79b549a_symbolBuilder>(_1a79b549a_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a79baa99_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log _1a7aa3753_analyzePackage(jule::Slice<jule::Ptr<_1a79705a9_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>> _326_tables = jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a5097:;
		if (it != expr_end) {
			jule::Ptr<_1a79705a9_Ast> _3314_f = *it;
			{
				jule::Ptr<_1a7a4b18a_SymbolTable> _347_table;
				jule::Slice<_1d974c80a_Log> _3418_errors;
				({
					__jule_tuple_x_1a7a4b18a_SymbolTable__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a7aa32d0_buildSymbols(&(_3314_f), _3044_importer, nullptr);
					_347_table = __jule_assign_result.__jule_result_arg0;
					_3418_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3418_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3418_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a7a4b18a_SymbolTable>> &__jule_push_dest = _326_tables; __jule_push_dest.push(_347_table); };
			}
			_iter_next_1ac6a5097:;
			++it;
			goto _iter_begin_1ac6a5097;
		}
		_iter_end_1ac6a5097:;
	};
	jule::Ptr<_1a6837818_Sema> _416_sema = jule::new_ptr<_1a6837818_Sema>(_1a6837818_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1a6836c13_commonSemaMeta>()});;
	_1a68570a7_check(_416_sema, &(_326_tables));
	if (((*_416_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_416_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a681a39a_Package> _506_pkg = jule::new_ptr<_1a681a39a_Package>(_1a681a39a_Package{._field_Files=(*_416_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _506_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log _1a7aa3b82_AnalyzePackage(jule::Slice<jule::Ptr<_1a79705a9_Ast>> _7423_files, jule::Trait _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1a681a39a_Package__jule_tuple_s_1d974c80a_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a7aa3753_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a79ab309_FnIns> _1a7b64528_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1ac6ae304:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _2914_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6a089_builtinCallerOut), });;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1ac6ae36a:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _3214_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6a4b8_builtinCallerOutln), });;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1ac6ae3e2:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _3514_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6a8e7_builtinCallerNew), });;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1ac6ae469:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _3814_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6ad26_builtinCallerPanic), });;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1ac6ae612:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _4114_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6b486_builtinCallerMake), });;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1ac6ae678:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _4414_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6b7a5_builtinCallerAppend), });;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1ac6ae700:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _4714_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6c1bd_builtinCallerCopy), });;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1ac6ae777:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _5014_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6d862_builtinCallerLen), });;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1ac6ae898:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _5314_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6e115_builtinCallerCap), });;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1ac6ae90e:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _5614_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6ea2d_builtinCallerDelete), });;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1ac6ae975:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _5914_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b6ee5c_builtinCallerAssert), });;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1ac6add4d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6ae106:;
	};
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7b64836_primTypeAlias(jule::Ptr<_1a7a828ec_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a7a81b0a_TypeAlias>(_1a7a81b0a_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1a685a682_Var> _1a7b681db_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1ac6b6be1:;
			{
				static jule::Ptr<_1a685a682_Var> _9714_v = jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(_1a7a89abe_TypeSymbol{._field_Kind=_1a7b64b44_primNil}), ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Constant=static__1bd82d5e9_NewNil()})}), });;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1ac6b6c8a:;
			{
				static jule::Ptr<_1a685a682_Var> _11214_v = jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Constant=static__1bd82cd57_NewBool(true)})}), });;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1ac6b6d12:;
			{
				static jule::Ptr<_1a685a682_Var> _12514_v = jule::new_ptr<_1a685a682_Var>(_1a685a682_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a7b6852c_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a7a5267a_Value>(_1a7a5267a_Value{._field_Data=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Constant=static__1bd82cd57_NewBool(false)})}), });;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1ac6b643d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6b08dd:;
	};
}



inline jule::Ptr<_1a7a81b0a_TypeAlias> _1a7b6852c_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ac6bbaa3:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _14514_t = _1a7b64836_primTypeAlias(&(_1a7b651e9_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ac6bbc29:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _14814_t = _1a7b64836_primTypeAlias(&(_1a7b654e6_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ac6bbc90:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _15114_t = _1a7b64836_primTypeAlias(&(_1a7b6579e_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ac6bbd28:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _15414_t = _1a7b64836_primTypeAlias(&(_1a7b65a57_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ac6bbd8e:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _15714_t = _1a7b64836_primTypeAlias(&(_1a7b65d10_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ac6bbe05:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _16014_t = _1a7b64836_primTypeAlias(&(_1a7b661c8_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ac6bbe6b:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _16314_t = _1a7b64836_primTypeAlias(&(_1a7b6641a_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ac6bbee3:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _16614_t = _1a7b64836_primTypeAlias(&(_1a7b666b2_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ac6bc0c0:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _16914_t = _1a7b64836_primTypeAlias(&(_1a7b66c23_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ac6bc147:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _17214_t = _1a7b64836_primTypeAlias(&(_1a7b67284_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ac6bc1be:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _17514_t = _1a7b64836_primTypeAlias(&(_1a7b6753c_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ac6bc246:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _17814_t = _1a7b64836_primTypeAlias(&(_1a7b67a26_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ac6bc2bd:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _18114_t = _1a7b64836_primTypeAlias(&(_1a7b67c68_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ac6bc345:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _18414_t = _1a7b64836_primTypeAlias(&(_1a7b67e77_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ac6bc3bc:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _18714_t = _1a7b64836_primTypeAlias(&(_1a7b66ecb_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ac6bc444:;
			{
				static jule::Ptr<_1a7a81b0a_TypeAlias> _19014_t = _1a7b64836_primTypeAlias(&(_1a7b6696a_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1ac6b732e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6b740b:;
	};
}



inline jule::Any _1a7b687b3_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1a685a682_Var> _1986_v = _1a7b681db_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a79ab309_FnIns> _2026_f = _1a7b64528_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a7a81b0a_TypeAlias> _2066_ta = _1a7b6852c_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type65);;
	};
	return nullptr;;
}



inline jule::Any _1a7b68a7c_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1ac6c6c12:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _21614_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b73702_builtinCallerStdDebugOut), });;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1ac6c7053:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _21914_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b73b31_builtinCallerStdDebugOutln), });;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac6c53b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6c6a8b:;
	};
}



inline jule::Any _1a7b68d46_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1ac6c8571:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _22914_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b72107_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1ac6c88d4:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _23214_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b72536_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1ac6c8609:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _23514_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b72965_builtinCallerStdMemFree), });;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac6c87a2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6c6d33:;
	};
}



inline jule::Any _1a7b69220_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1ac6caa6d:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _24514_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b7038b_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1ac6cad48:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _24814_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b70a0c_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1ac6cadae:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _25114_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b70e3b_builtinCallerStdComptimeLine), });;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1ac6caad4:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _25414_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b7136a_builtinCallerStdComptimeFile), });;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1ac6cab5b:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _25714_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b71799_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1ac6cae7a:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _26014_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b71bc8_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac6cac27:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6c8cd0:;
	};
}



inline jule::Any _1a7b69462_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1ac6cb222:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _27014_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b72d94_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1ac6d0237:;
			{
				static jule::Ptr<_1a79ab309_FnIns> _27314_f = jule::new_ptr<_1a79ab309_FnIns>(_1a79ab309_FnIns{._field_Decl=jule::new_ptr<_1a79a8328_Fn>(_1a79a8328_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a797e6c8_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a7a51503_Data>,jule::Ptr<_1a7a5322a_Eval>*,jule::Ptr<_1a797a52b_FnCallExpr>*,jule::Ptr<_1a7a51503_Data>*>(_1a7b732c3_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27314_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac6d0116:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6d0028:;
	};
}



inline jule::Any _1a7b697d6_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1ac6d2327:;
			{
				return _1a7b69220_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1ac6d238d:;
			{
				return _1a7b68a7c_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1ac6d2404:;
			{
				return _1a7b68d46_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1ac6d246a:;
			{
				return _1a7b69462_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1ac6d048a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac6d1ec5:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7b69b5a_builtinCallerError(jule::Ptr<_1a7a5322a_Eval>* _30028_e, jule::Ptr<_1a797a52b_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _3086_expr = _1a7a7148a_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3086_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a7a518dd_IsNil(_3086_expr.ptr())) {
		_1a7a5377a_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7a51503_Data> _3176_d = _1a7a7c3a8_buildVoidData();;
	(*(_3176_d))._field_Model=jule::Any(jule::new_ptr<_1a79a3cb3_BuiltinErrorCallExprModel>(_1a79a3cb3_BuiltinErrorCallExprModel{._field_Err=_3086_expr}), &__jule_any_type22);
	return _3176_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6a089_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _32226_e, jule::Ptr<_1a797a52b_FnCallExpr>* _32241_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _3316_expr = _1a7a7148a_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3316_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7a9e177_isBuiltinStrConvertable(&((*(_3316_expr))._field_Kind))))) {
		_1a7a5377a_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _3416_d = _1a7a7c3a8_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1a79a1079_BuiltinOutCallExprModel>(_1a79a1079_BuiltinOutCallExprModel{._field_Expr=(*(_3316_expr))._field_Model, }), &__jule_any_type26);
	return _3416_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6a4b8_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _34628_e, jule::Ptr<_1a797a52b_FnCallExpr>* _34643_fc, jule::Ptr<_1a7a51503_Data>* _34665_d) {
	(*(_34665_d))=_1a7b6a089_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a1453_BuiltinOutlnCallExprModel>(_1a79a1453_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1a79a1079_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6a8e7_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _35826_e, jule::Ptr<_1a797a52b_FnCallExpr>* _35841_fc, jule::Ptr<_1a7a51503_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1a7a5377a_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _3676_t = _1a7a70676_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1a7a5377a_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a7a9db27_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1a79960d5_StructIns> _3787_s = _1a7a865c1_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*(_3787_s))._field_Decl.alloc)._field_Binded)) {
			_1a7a5377a_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e002_Sptr>(_1a7a8e002_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7a828ec_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1a7a51503_Data> _3957_init = _1a7a7148a_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1a795c013_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a68472ea_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1a6842e61_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a182c_BuiltinNewCallExprModel>(_1a79a182c_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a182c_BuiltinNewCallExprModel>(_1a79a182c_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6ad26_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _42028_e, jule::Ptr<_1a797a52b_FnCallExpr>* _42043_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _4296_expr = _1a7a7148a_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a7a8504d_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1a7a8d95d_IsStr(_1a7a8504d_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1a7a5377a_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7a51503_Data> _4386_d = _1a7a7c3a8_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1a79a1c06_BuiltinPanicCallExprModel>(_1a79a1c06_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type28);
	return _4386_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6b486_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _44627_e, jule::Ptr<_1a797a52b_FnCallExpr>* _44642_fc, jule::Ptr<_1a7a51503_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1a7a5377a_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a7a5377a_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1a7a5377a_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _4596_t = _1a7a70676_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1a7a5377a_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a7a860a4_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1a7a5377a_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_4596_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1a7a51503_Data> _4746_lenExpr = _1a7a7148a_evalExpr(_1a68425ae_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a7a5c465_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a79a2663_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1a79a2663_BuiltinMakeCallExprModel>(_1a79a2663_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a7a51503_Data> _4877_capExpr = _1a7a7148a_evalExpr(_1a68425ae_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1a7a5c465_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6b7a5_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _49729_e, jule::Ptr<_1a797a52b_FnCallExpr>* _49744_fc, jule::Ptr<_1a7a51503_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1a7a5377a_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a7a5377a_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _5076_t = _1a7a7148a_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5076_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a8e9c5_Slc> _5126_s = _1a7a860a4_Slc((*(_5076_t))._field_Kind.ptr());;
	if ((_5126_s == nullptr)) {
		_1a7a5377a_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a68472ea_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5076_t))._field_Kind), &(_5076_t), &((*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token))) {
		_1a6842e61_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5076_t))._field_Kind), &(_5076_t), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token);
	};
	jule::Ptr<_1a7a828ec_TypeKind> _5276_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5076_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5276_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=(*(_5076_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ac72207b:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1a7a5377a_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a7a51503_Data> _5417_e1 = _1a7a7148a_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1a7978c88_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a7a8504d_Prim((*(_5126_s))._field_Elem.ptr()) != nullptr) && _1a7a8bdbd_IsU8(_1a7a8504d_Prim((*(_5126_s))._field_Elem).ptr()))) {
					if (((_1a7a8504d_Prim((*(_5417_e1))._field_Kind) != nullptr) && _1a7a8d95d_IsStr(_1a7a8504d_Prim((*(_5417_e1))._field_Kind).ptr()))) {
						_1a7a7ea70_makeVariadic(&(_5417_e1), _1a7b66ecb_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a2a3c_BuiltinAppendCallExprModel>(_1a79a2a3c_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1a7a84cb7_Variadicable((*(_5417_e1))._field_Kind)))) {
					_1a7a5377a_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_5417_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1a7a7ea70_makeVariadic(&(_5417_e1), (*(_5126_s))._field_Elem);
				if (_1a68472ea_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5417_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1a6842e61_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5417_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a2a3c_BuiltinAppendCallExprModel>(_1a79a2a3c_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1ac721ed2:;
	};
	jule::Ptr<_1a7a51503_Data> _5756_e1 = _1a7a7148a_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5756_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a799c88e_SliceExprModel> _5806_slice = jule::new_ptr<_1a799c88e_SliceExprModel>(_1a799c88e_SliceExprModel{._field_ElemKind=(*(_5126_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac72e330:;
		if (it != expr_end) {
			jule::Ptr<_1a7976802_Expr> _58414_arg = *it;
			{
				_5756_e1=_1a7a7148a_evalExpr((*(_49729_e)), _58414_arg);
				if ((_5756_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5756_e1))._field_Kind.alloc)._field_Variadic) {
					_1a7a5377a_pushErr((*(_49729_e)).ptr(), (*(_58414_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1a68472ea_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5756_e1), &((*_58414_arg.alloc)._field_Token))) {
					_1a6842e61_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5756_e1), (*_58414_arg.alloc)._field_Token);
				};
				(*(_5806_slice))._field_Elems=jule::append((*_5806_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5756_e1))._field_Model}));
			}
			_iter_next_1ac72e330:;
			++it;
			goto _iter_begin_1ac72e330;
		}
		_iter_end_1ac72e330:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a2a3c_BuiltinAppendCallExprModel>(_1a79a2a3c_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=jule::Any(_5806_slice, &__jule_any_type76)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6bc8e_callerCopySlice(jule::Ptr<_1a7a51503_Data>* _60625_dest, jule::Ptr<_1a7a5322a_Eval>* _60643_e, jule::Ptr<_1a797a52b_FnCallExpr>* _60658_fc, jule::Ptr<_1a7a51503_Data>* _60680_d) {
	if ((!((*((*(_60625_dest))))._field_Mutable))) {
		_1a7a5377a_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7a51503_Data> _6116_src = _1a7a7148a_evalExpr((*(_60643_e)), (*((*(_60658_fc))))._field_Args[1LL]);;
	if ((_6116_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a7a8e9c5_Slc> _6156_slc = _1a7a860a4_Slc((*(_6116_src))._field_Kind.ptr());;
	if ((_6156_slc != nullptr)) {
		if (((!((*(_6116_src))._field_Mutable)) && _1a7a8427d_Mutable((*_6156_slc.alloc)._field_Elem.ptr()))) {
			_1a7a5377a_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a7a83106_Equal((*((*(_60625_dest))))._field_Kind, (*(_6116_src))._field_Kind)))) {
			_1a7a5377a_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_6116_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1a7a8a4c6_Prim> _6253_destPrim = _1a7a8504d_Prim((*(_1a7a860a4_Slc((*((*(_60625_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a7a8a4c6_Prim> _6263_prim = _1a7a8504d_Prim((*(_6116_src))._field_Kind);;
		if (((((_6253_destPrim == nullptr) || (_6263_prim == nullptr)) || (!(_1a7a8d95d_IsStr(_6263_prim.ptr())))) || (!(_1a7a8bdbd_IsU8(_6253_destPrim.ptr()))))) {
			_1a7a5377a_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_6116_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60680_d))))._field_Kind=_1a7a49e36_lenKind();
	(*((*(_60680_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a38d9_BuiltinCopyCallExprModel>(_1a79a38d9_BuiltinCopyCallExprModel{._field_Dest=(*(_60625_dest)), ._field_Src=_6116_src}), &__jule_any_type30);
	return (*(_60680_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6c1bd_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _64027_e, jule::Ptr<_1a797a52b_FnCallExpr>* _64042_fc, jule::Ptr<_1a7a51503_Data>* _64064_d) {
	if (((*((*(_64042_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64042_fc))))._field_Args.len() == 1LL)) {
			_1a7a5377a_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a7a5377a_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_64042_fc))))._field_Args.len() > 2LL)) {
		_1a7a5377a_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _6536_dest = _1a7a7148a_evalExpr((*(_64027_e)), (*((*(_64042_fc))))._field_Args[0LL]);;
	{
		
		if ((_6536_dest == nullptr)) {
			_case_begin_1ac744b3c:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7a860a4_Slc((*(_6536_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac744ba3:;
			{
				return _1a7b6bc8e_callerCopySlice(&(_6536_dest), _64027_e, _64042_fc, _64064_d);;
			}
		}
		else {
			_case_begin_1ac743ae7:;
			{
				_1a7a5377a_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac74208a:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6c542_callerLenSlice(jule::Ptr<_1a7a51503_Data>* _66524_expr, jule::Ptr<_1a7a51503_Data>* _66542_d) {
	(*((*(_66542_d))))._field_Kind=_1a7a49e36_lenKind();
	(*((*(_66542_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a2d39_BuiltinLenCallExprModel>(_1a79a2d39_BuiltinLenCallExprModel{._field_Expr=(*(_66524_expr))}), &__jule_any_type115);
	return (*(_66542_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6c8b6_callerLenMap(jule::Ptr<_1a7a51503_Data>* _67322_expr, jule::Ptr<_1a7a51503_Data>* _67340_d) {
	(*((*(_67340_d))))._field_Kind=_1a7a49e36_lenKind();
	(*((*(_67340_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a2d39_BuiltinLenCallExprModel>(_1a79a2d39_BuiltinLenCallExprModel{._field_Expr=(*(_67322_expr))}), &__jule_any_type115);
	return (*(_67340_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6cc3a_callerLenArr(jule::Ptr<_1a7a51503_Data>* _68122_expr, jule::Ptr<_1a7a51503_Data>* _68140_d) {
	(*((*(_68140_d))))._field_Kind=_1a7a49e36_lenKind();
	(*((*(_68140_d))))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>((*(_1a7a85d1d_Arr((*((*(_68122_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68140_d))))._field_Model=jule::Any((*((*(_68140_d))))._field_Constant, &__jule_any_type19);
	return (*(_68140_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6d0ae_callerLenStr(jule::Ptr<_1a7a51503_Data>* _68822_expr, jule::Ptr<_1a7a51503_Data>* _68840_d) {
	(*((*(_68840_d))))._field_Kind=_1a7a49e36_lenKind();
	if (_1a7a51e0a_IsConst((*(_68822_expr)).ptr())) {
		(*((*(_68840_d))))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_1bd82e50c_ReadStr((*((*(_68822_expr))))._field_Constant.ptr()).len()));
		(*((*(_68840_d))))._field_Model=jule::Any((*((*(_68840_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68840_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a2d39_BuiltinLenCallExprModel>(_1a79a2d39_BuiltinLenCallExprModel{._field_Expr=(*(_68822_expr))}), &__jule_any_type115);
	};
	return (*(_68840_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6d433_callerLenComptime(jule::Ptr<_1a7a51503_Data>* _70127_d, jule::I64 _70137_n) {
	(*((*(_70127_d))))._field_Kind=_1a7a49e36_lenKind();
	(*((*(_70127_d))))._field_Constant=static__1bd82c7c4_NewI64(static_cast<jule::I64>(_70137_n));
	(*((*(_70127_d))))._field_Model=jule::Any((*((*(_70127_d))))._field_Constant, &__jule_any_type19);
	return (*(_70127_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6d862_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _70826_e, jule::Ptr<_1a797a52b_FnCallExpr>* _70841_fc, jule::Ptr<_1a7a51503_Data>* _70863_d) {
	if (((*((*(_70841_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_70826_e)).ptr(), (*((*(_70841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70841_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _7166_dest = _1a7a71149_evalExpr1((*(_70826_e)), (*((*(_70841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7166_dest == nullptr)) {
			_case_begin_1ac752089:;
			{
				return nullptr;;
			}
		}
		else if ((_1a7a860a4_Slc((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac750ecd:;
			{
				return _1a7b6c542_callerLenSlice(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a7a85d1d_Arr((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac751044:;
			{
				return _1a7b6cc3a_callerLenArr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a7a86add_Map((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7510aa:;
			{
				return _1a7b6c8b6_callerLenMap(&(_7166_dest), _70863_d);;
			}
		}
		else if (((_1a7a8504d_Prim((*(_7166_dest))._field_Kind.ptr()) != nullptr) && _1a7a8d95d_IsStr(_1a7a8504d_Prim((*(_7166_dest))._field_Kind).ptr()))) {
			_case_begin_1ac751121:;
			{
				return _1a7b6d0ae_callerLenStr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a7a87391_comptimeStructFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac751187:;
			{
				return _1a7b6d433_callerLenComptime(_70863_d, (*(_1a7a87391_comptimeStructFields((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a7a878ad_comptimeEnumFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7511ed:;
			{
				return _1a7b6d433_callerLenComptime(_70863_d, (*(_1a7a878ad_comptimeEnumFields((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a7a8867d_comptimeTypeInfos((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac752188:;
			{
				return _1a7b6d433_callerLenComptime(_70863_d, (*(_1a7a8867d_comptimeTypeInfos((*(_7166_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a7a87dca_comptimeParams((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7521ee:;
			{
				return _1a7b6d433_callerLenComptime(_70863_d, (*(_1a7a87dca_comptimeParams((*(_7166_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a7a88b9a_comptimeStatics((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac752265:;
			{
				return _1a7b6d433_callerLenComptime(_70863_d, (*(_1a7a88b9a_comptimeStatics((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a7a896d4_comptimeFiles((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac7522cb:;
			{
				return _1a7b6d433_callerLenComptime(_70863_d, (*(_1a7a896d4_comptimeFiles((*(_7166_dest))._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1ac750e67:;
			{
				_1a7a5377a_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac74e40a:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6dbd6_callerCapSlice(jule::Ptr<_1a7a51503_Data>* _74624_expr, jule::Ptr<_1a7a51503_Data>* _74642_d) {
	(*((*(_74642_d))))._field_Kind=_1a7a49e36_lenKind();
	(*((*(_74642_d))))._field_Model=jule::Any(jule::new_ptr<_1a79a3136_BuiltinCapCallExprModel>(_1a79a3136_BuiltinCapCallExprModel{._field_Expr=(*(_74624_expr))}), &__jule_any_type116);
	return (*(_74642_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6e115_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _75426_e, jule::Ptr<_1a797a52b_FnCallExpr>* _75441_fc, jule::Ptr<_1a7a51503_Data>* _75463_d) {
	if (((*((*(_75441_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_75426_e)).ptr(), (*((*(_75441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_75441_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _7626_dest = _1a7a7148a_evalExpr((*(_75426_e)), (*((*(_75441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7626_dest == nullptr)) {
			_case_begin_1ac761b48:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7626_dest))._field_Decl) {
			_case_begin_1ac761bae:;
			{
				_1a7a5377a_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7a860a4_Slc((*(_7626_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac761c25:;
			{
				return _1a7b6dbd6_callerCapSlice(&(_7626_dest), _75463_d);;
			}
		}
		else {
			_case_begin_1ac760b03:;
			{
				_1a7a5377a_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac75e096:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6e5ee_callerDeleteMap(jule::Ptr<_1a7a5322a_Eval>* _77725_e, jule::Ptr<_1a797a52b_FnCallExpr>* _77740_fc, jule::Ptr<_1a7a51503_Data>* _77762_expr, jule::Ptr<_1a7a51503_Data>* _77780_d) {
	if ((!((*((*(_77762_expr))))._field_Mutable))) {
		_1a7a5377a_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77780_d))=_1a7a7c3a8_buildVoidData();
	jule::Ptr<_1a79a3510_BuiltinDeleteCallExprModel> _7826_model = jule::new_ptr<_1a79a3510_BuiltinDeleteCallExprModel>(_1a79a3510_BuiltinDeleteCallExprModel{._field_Dest=(*(_77762_expr)), });;
	if (((*((*(_77740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7a51503_Data> _7867_key = _1a7a7148a_evalExpr((*(_77725_e)), (*((*(_77740_fc))))._field_Args[1LL]);;
		{
			
			if ((_7867_key == nullptr)) {
				_case_begin_1ac767984:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7867_key))._field_Decl) {
				_case_begin_1ac7665cb:;
				{
					_1a7a5377a_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ac766565:;
				{
					;
					jule::Ptr<_1a7a828ec_TypeKind> _7958_keyType = (*(_1a7a86add_Map((*((*(_77762_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1a6842e61_checkAssignType((*((*(_77725_e))))._field_s, false, &(_7958_keyType), &(_7867_key), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ac7664ee:;
		};
		(*(_7826_model))._field_Key=_7867_key;
	};
	(*((*(_77780_d))))._field_Model=jule::Any(_7826_model, &__jule_any_type31);
	return (*(_77780_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6ea2d_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _80629_e, jule::Ptr<_1a797a52b_FnCallExpr>* _80644_fc, jule::Ptr<_1a7a51503_Data>* _80666_d) {
	if (((*((*(_80644_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_80629_e)).ptr(), (*((*(_80644_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80644_fc))))._field_Args.len() > 2LL)) {
		_1a7a5377a_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _8146_dest = _1a7a7148a_evalExpr((*(_80629_e)), (*((*(_80644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8146_dest == nullptr)) {
			_case_begin_1ac76e6d3:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8146_dest))._field_Decl) {
			_case_begin_1ac76e749:;
			{
				_1a7a5377a_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a7a86add_Map((*(_8146_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac76e7b0:;
			{
				return _1a7b6e5ee_callerDeleteMap(_80629_e, _80644_fc, &(_8146_dest), _80666_d);;
			}
		}
		else {
			_case_begin_1ac76d68d:;
			{
				_1a7a5377a_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac76bb31:;
	};
}



inline jule::Ptr<_1a7a51503_Data> _1a7b6ee5c_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _82929_e, jule::Ptr<_1a797a52b_FnCallExpr>* _82944_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_82944_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82944_fc))))._field_Args.len() > 2LL)) {
		_1a7a5377a_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _8386_expr = _1a7a7148a_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[0LL]);;
	if ((_8386_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a7a8504d_Prim((*(_8386_expr))._field_Kind.ptr()) == nullptr) || (!(_1a7a8d6c7_IsBool(_1a7a8504d_Prim((*(_8386_expr))._field_Kind).ptr()))))) {
		_1a7a5377a_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a79a21ac_BuiltinAssertCallExprModel> _8476_model = jule::new_ptr<_1a79a21ac_BuiltinAssertCallExprModel>(_1a79a21ac_BuiltinAssertCallExprModel{._field_Token=(*((*(_82944_fc))))._field_Token, ._field_Expr=(*(_8386_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82944_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a7a51503_Data> _8557_log = _1a7a7148a_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[1LL]);;
		if ((_8557_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a7a51e0a_IsConst(_8557_log.ptr()))) || (_1a7a8504d_Prim((*(_8557_log))._field_Kind) == nullptr)) || (!(_1a7a8d95d_IsStr(_1a7a8504d_Prim((*(_8557_log))._field_Kind).ptr()))))) {
			_1a7a5377a_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_8557_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8476_model))._field_Log=_1bd82e50c_ReadStr((*(_8557_log))._field_Constant.ptr());
	};
	jule::Ptr<_1a7a51503_Data> _8686_d = _1a7a7c3a8_buildVoidData();;
	(*(_8686_d))._field_Model=jule::Any(_8476_model, &__jule_any_type29);
	return _8686_d;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b7038b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _87340_e, jule::Ptr<_1a797a52b_FnCallExpr>* _87355_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_87355_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_87340_e)).ptr(), (*((*(_87355_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_87355_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _8826_d = _1a7a70676_evalExprKind((*(_87340_e)), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8826_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a79ab309_FnIns> _8862_f = _1a7a8633a_Fn((*(_8826_d))._field_Kind.ptr());;
	if ((_8862_f != nullptr)) {
		if (_1a79ac78e_IsBuiltin(_8862_f)) {
			_1a7a5377a_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8862_f.alloc)._field_Generics.len() != (*((*_8862_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a7a5377a_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a79960d5_StructIns> _8972_s = _1a7a865c1_Struct((*(_8826_d))._field_Kind);;
	if (((_8972_s != nullptr) && ((*_8972_s.alloc)._field_Generics.len() != (*((*_8972_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a7a5377a_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a7a8710a_comptime((*(_8826_d))._field_Kind)) {
		_1a7a5377a_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_8826_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a68041ec_buildComptimeTypeInfoData(&((*((*(_87340_e))))._field_s), &((*(_8826_d))._field_Kind));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b70a0c_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _90941_e, jule::Ptr<_1a797a52b_FnCallExpr>* _90956_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_90956_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_90941_e)).ptr(), (*((*(_90956_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90956_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _9176_d = _1a7a7148a_evalExpr((*(_90941_e)), (*((*(_90956_fc))))._field_Args[0LL]);;
	if ((_9176_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7a4a288_isGoodValueToInfer(&(_9176_d))))) {
		_1a7a5377a_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_9176_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a680453d_buildComptimeValue(&(_9176_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b70e3b_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _92938_e, jule::Ptr<_1a797a52b_FnCallExpr>* _92953_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_92953_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_92938_e)).ptr(), (*((*((*(_92953_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1bd82c384_Const> _9336_constant = static__1bd82c7c4_NewI64(static_cast<jule::I64>((*((*((*(_92953_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b661c8_primInt, ._field_Model=jule::Any(_9336_constant, &__jule_any_type19), ._field_Constant=_9336_constant});;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b7136a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _94138_e, jule::Ptr<_1a797a52b_FnCallExpr>* _94153_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_94153_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_94138_e)).ptr(), (*((*((*(_94153_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a6801b89_comptimeFile>(_1a6801b89_comptimeFile{._field_file=(*((*((*(_94138_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data18)}), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b71799_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _95439_e, jule::Ptr<_1a797a52b_FnCallExpr>* _95454_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_95454_fc))))._field_Args.len() > 0LL)) {
		_1a7a5377a_pushErr((*(_95439_e)).ptr(), (*((*((*(_95454_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a680058e_comptimeFiles>(_1a680058e_comptimeFiles{._field_files=(*((*((*(_95439_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data17)}), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b71bc8_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _96743_e, jule::Ptr<_1a797a52b_FnCallExpr>* _96758_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_96758_fc))))._field_Args.len() > 2LL)) {
		_1a7a5377a_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 0LL)) {
		_1a7a5377a_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 1LL)) {
		_1a7a5377a_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac796023:;
			{
				goto _match_end_1ac7982ab;
			}
		}
		else {
			_case_begin_1ac798322:;
			{
				_1a7a5377a_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a7a53add_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac7982ab:;
	};
	jule::Ptr<_1a795c013_Token> _9886_ident = (*((*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a797811c_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96743_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0)) {
			_case_begin_1ac79a610:;
			{
				goto _match_end_1ac79a852;
			}
		}
		else {
			_case_begin_1ac79a8a7:;
			{
				_1a7a5377a_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ac79a852:;
	};
	jule::Ptr<_1a79de45d_scopeChecker> _9976_sc = (*((*(_96743_e))))._field_lookup.cast_ptr<_1a79de45d_scopeChecker>((jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data0);;
	jule::Ptr<_1a7a81b0a_TypeAlias> _9986_alias = jule::new_ptr<_1a7a81b0a_TypeAlias>(_1a7a81b0a_TypeAlias{._field_Scope=(*(_9976_sc))._field_tree, ._field_Public=_1a68348d1_IsPub((*(_9886_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9886_ident, ._field_Ident=(*_9886_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a7a89abe_TypeSymbol>(), });;
	jule::Ptr<_1a7a51503_Data> _10086_t = _1a7a709b7_eval1((*(_96743_e)), (*((*(_96758_fc))))._field_Args[1LL]);;
	if ((_10086_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10086_t))._field_Decl) {
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10086_t))._field_Kind;
	} else {
		jule::Ptr<_1a79d3078_comptimeTypeInfo> _10157_cti = _1a7a88914_comptimeTypeInfo((*(_10086_t))._field_Kind.ptr());;
		if ((_10157_cti == nullptr)) {
			_1a7a5377a_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a7a53add_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10157_cti))._field_base;
	};
	_1a79e430e_checkTypeAlias(_9976_sc, &(_9986_alias));
	return _1a7a7c3a8_buildVoidData();;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b72107_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _102735_e, jule::Ptr<_1a797a52b_FnCallExpr>* _102750_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<_1a7a51503_Data> _10286_result = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b65d10_primUint, });;
	if (((*((*(_102750_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_102735_e)).ptr(), (*((*(_102750_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10286_result;;
	};
	if (((*((*(_102750_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _10406_d = _1a7a70676_evalExprKind((*(_102735_e)), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10406_d == nullptr)) {
		return _10286_result;;
	};
	if ((!(_1a7aa01bc_validTypeForXof(&((*(_10406_d))._field_Kind))))) {
		_1a7a5377a_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_10406_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10286_result))._field_Model=jule::Any(jule::new_ptr<_1a79a4467_SizeofExprModel>(_1a79a4467_SizeofExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type117);
	return _10286_result;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b72536_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _105236_e, jule::Ptr<_1a797a52b_FnCallExpr>* _105251_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<_1a7a51503_Data> _10536_result = jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b65d10_primUint, });;
	if (((*((*(_105251_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_105236_e)).ptr(), (*((*(_105251_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10536_result;;
	};
	if (((*((*(_105251_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _10656_d = _1a7a70676_evalExprKind((*(_105236_e)), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10656_d == nullptr)) {
		return _10536_result;;
	};
	if ((!(_1a7aa01bc_validTypeForXof(&((*(_10656_d))._field_Kind))))) {
		_1a7a5377a_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a7a82cb5_Str((*(_10656_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10536_result))._field_Model=jule::Any(jule::new_ptr<_1a79a4654_AlignofExprModel>(_1a79a4654_AlignofExprModel{._field_Expr=(*(_10656_d))._field_Model}), &__jule_any_type118);
	return _10536_result;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b72965_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _107733_e, jule::Ptr<_1a797a52b_FnCallExpr>* _107748_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_107748_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_107733_e)).ptr(), (*((*(_107748_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107748_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _10866_d = _1a7a7148a_evalExpr((*(_107733_e)), (*((*(_107748_fc))))._field_Args[0LL]);;
	if ((_10866_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7a84a31_PerformsRC((*(_10866_d))._field_Kind.ptr())))) {
		_1a7a5377a_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a7a51503_Data> _10956_result = _1a7a7c3a8_buildVoidData();;
	(*(_10956_result))._field_Model=jule::Any(jule::new_ptr<_1a79a53be_FreeExprModel>(_1a79a53be_FreeExprModel{._field_Expr=(*(_10866_d))._field_Model}), &__jule_any_type32);
	return _10956_result;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b72d94_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _110045_e, jule::Ptr<_1a797a52b_FnCallExpr>* _110060_fc, jule::Ptr<_1a7a51503_Data>* ) {
	if (((*((*(_110060_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_110045_e)).ptr(), (*((*(_110060_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_110060_fc))))._field_Args.len() > 1LL)) {
		_1a7a5377a_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a7a51503_Data> _11096_d = _1a7a7148a_evalExpr((*(_110045_e)), (*((*(_110060_fc))))._field_Args[0LL]);;
	if ((_11096_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a7a9e177_isBuiltinStrConvertable(&((*(_11096_d))._field_Kind))))) {
		_1a7a5377a_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a7a51503_Data>(_1a7a51503_Data{._field_Kind=_1a7b654e6_primStr, ._field_Model=jule::Any(jule::new_ptr<_1a79a4be8_IntegratedToStrExprModel>(_1a79a4be8_IntegratedToStrExprModel{._field_Expr=(*(_11096_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b732c3_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _112744_e, jule::Ptr<_1a797a52b_FnCallExpr>* _112759_fc, jule::Ptr<_1a7a51503_Data>* _112781_d) {
	if ((!(_1a7a54270_isUnsafe((*(_112744_e)).ptr())))) {
		_1a7a5377a_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112759_fc))))._field_Args.len() < 1LL)) {
		_1a7a5377a_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _11376_argd = _1a7a7148a_evalExpr((*(_112744_e)), (*((*(_112759_fc))))._field_Args[0LL]);;
	if ((_11376_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a7a8504d_Prim((*(_11376_argd))._field_Kind.ptr()) == nullptr) || (!(_1a7a8d95d_IsStr(_1a7a8504d_Prim((*(_11376_argd))._field_Kind).ptr()))))) {
		_1a7a5377a_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a7a82cb5_Str((*(_11376_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1a7a51e0a_IsConst(_11376_argd.ptr()))) || (!(_1bd831b08_IsStr((*(_11376_argd))._field_Constant.ptr()))))) {
		_1a7a5377a_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a7a51503_Data> _11526_r = _1a7a7c3a8_buildVoidData();;
	jule::Ptr<_1a79ab309_FnIns> _11546_f = _1a7a8633a_Fn((*((*(_112781_d))))._field_Kind);;
	if (((*(_11546_f))._field_Generics.len() > 0LL)) {
		(*(_11526_r))._field_Kind=(*((*(_11546_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1a79a50c2_BackendEmitExprModel> _11596_model = jule::new_ptr<_1a79a50c2_BackendEmitExprModel>(_1a79a50c2_BackendEmitExprModel{._field_Code=_1bd82e50c_ReadStr((*(_11376_argd))._field_Constant), });;
	if (((*((*(_112759_fc))))._field_Args.len() > 1LL)) {
		(*(_11596_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112759_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ac7c54a3:;
			if (it != expr_end) {
				jule::Ptr<_1a7976802_Expr> _116515_arg = *it;
				{
					_11376_argd=_1a7a709b7_eval1((*(_112744_e)), _116515_arg);
					if ((_11376_argd == nullptr)) {
						return nullptr;;
					};
					(*_11596_model.alloc)._field_Exprs=jule::append((*_11596_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11376_argd))._field_Model}));
				}
				_iter_next_1ac7c54a3:;
				++it;
				goto _iter_begin_1ac7c54a3;
			}
			_iter_end_1ac7c54a3:;
		};
	};
	(*_11526_r.alloc)._field_Model=jule::Any(_11596_model, &__jule_any_type24);
	return _11526_r;;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b73702_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _117834_e, jule::Ptr<_1a797a52b_FnCallExpr>* _117849_fc, jule::Ptr<_1a7a51503_Data>* _117871_d) {
	(*(_117871_d))=_1a7b6a089_builtinCallerOut(nullptr, _117834_e, _117849_fc, _117871_d);
	if (((*(_117871_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117871_d))))._field_Model.cast_ptr<_1a79a1079_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117871_d));;
}



inline jule::Ptr<_1a7a51503_Data> _1a7b73b31_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _118736_e, jule::Ptr<_1a797a52b_FnCallExpr>* _118751_fc, jule::Ptr<_1a7a51503_Data>* _118773_d) {
	(*(_118773_d))=_1a7b6a4b8_builtinCallerOutln(nullptr, _118736_e, _118751_fc, _118773_d);
	if (((*(_118773_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118773_d))))._field_Model.cast_ptr<_1a79a1453_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118773_d));;
}



inline jule::Ptr<_1a63ee644_FileInfo> _1a63eecb5_ParseFile(jule::Ptr<_1a7962799_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a63ee644_FileInfo> _276_finf = jule::new_ptr<_1a63ee644_FileInfo>();;
	({
		__jule_tuple_x_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log __jule_assign_result = _1a640038c_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log _1a640038c_parseFileset(jule::Ptr<_1a7962799_File> _5521_f) {
	__jule_tuple_x_1a79705a9_Ast__jule_tuple_s_1d974c80a_Log __jule_func_result;
	jule::Ptr<_1a6420ec3_parser> _566_p = jule::new_ptr<_1a6420ec3_parser>();;
	_1a6431d2a_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a79824de_ScopeTree> _1a6400d2c_newScope(void) {
	return jule::new_ptr<_1a79824de_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a64011b2_isSt(jule::Ptr<_1a795c013_Token> _499_current, jule::Ptr<_1a795c013_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a6401536_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a795c013_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a795c013_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1a795ca5d_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a64018ee_nextStPos(jule::Slice<jule::Ptr<_1a795c013_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1a795c013_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac8582a0:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1a6401536_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a64011b2_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1ac8581e5;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1ac856d5e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac858514:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a64011b2_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1ac8581e5;
							};
						};
						goto _iter_next_1ac856d5e;
					}
				}
				_match_end_1ac85848c:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1ac856d5e;
			};
			if ((_706_i > _6833_start)) {
				if (_1a6401536_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1ac856d5e;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a64011b2_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a64011b2_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1ac856d5e;
			};
			_julec_label_1ac8581e5:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ac856d5e:;
	}
	_iter_end_1ac856d5e:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a795c013_Token__jule_tuple_bool _1a6401c73_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a795c013_Token>> _13028_tokens) {
	__jule_tuple_sx_1a795c013_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a64018ee_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a795c013_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a6401c73_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a64020a3_stmt>> _1a640245a_splitStmts(jule::Slice<jule::Ptr<_1a795c013_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1a64020a3_stmt>> _1526_stmts = jule::Slice<jule::Ptr<_1a64020a3_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a795c013_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1a795c013_Token__jule_tuple_bool __jule_assign_result = _1a6401c73_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a64020a3_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1a64020a3_stmt>(_1a64020a3_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1ac8616e8:;
	}
	_iter_end_1ac8616e8:;;
	return _1526_stmts;;
}



inline jule::Bool _1a641aab1_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a641adbe_isTypeRange(jule::Slice<jule::Ptr<_1a795c013_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9318d9:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a795c013_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac933325:;
						if (it != expr_end) {
							jule::Ptr<_1a795c013_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1ac933ab7:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1ac933325;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1ac933e91:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1ac933325;
										}
									}
									_match_end_1ac933da3:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1a641aab1_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1ac933325:;
							++it;
							goto _iter_begin_1ac933325;
						}
						_iter_end_1ac933325:;
					};
					return true;;
				};
				if ((!(_1a641aab1_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1ac9318d9:;
			++it;
			_9026_i++;
			goto _iter_begin_1ac9318d9;
		}
		_iter_end_1ac9318d9:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a795c013_Token>> _1a641b188_getBlockExpr(jule::Slice<jule::Ptr<_1a795c013_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac93547b:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac936b64:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac936bec:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1ac936aa9;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac936c63:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac936cc9:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1ac936aa9:;
				};
			}
			_iter_next_1ac93547b:;
			++it;
			_9366_i++;
			goto _iter_begin_1ac93547b;
		}
		_iter_end_1ac93547b:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token _1a641b551_splitDelim(jule::Slice<jule::Ptr<_1a795c013_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1a795c013_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1ac93b7a1:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac93b817:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1ac939eec;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac93b87d:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1ac939eec;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac93b8e4:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1ac93b74b:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a795c013_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1a795c013_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac939eec:;
	}
	_iter_end_1ac939eec:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a641b81a_findLowestPrecOp(jule::Slice<jule::Ptr<_1a795c013_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac941ab4:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac942851:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1ac9428d9;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac9428d9:;
						{
							(_10126_braceN)++;
							goto _iter_next_1ac941ab4;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac942950:;
						{
							(_10126_braceN)--;
							goto _iter_next_1ac941ab4;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1ac9429b6:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1ac941ab4;
						}
					}
					_match_end_1ac942796:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1abd5e576:;
						{
							goto _iter_next_1ac941ab4;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1abd5e5dc:;
						{
							goto _iter_next_1ac941ab4;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1abd5e653:;
						{
							goto _iter_next_1ac941ab4;
						}
					}
					else if ((!(_1a795ca5d_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1abd5e6b9:;
						{
							goto _iter_next_1ac941ab4;
						}
					}
					_match_end_1abd5e521:;
				};
				jule::Ptr<_1a795c013_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1a795c750_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ac941ab4;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1a795c013_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1ac941ab4;
						};
					};
				};
				jule::U8 _10603_p = _1a795c387_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1ac941ab4:;
			++it;
			_10146_i++;
			goto _iter_begin_1ac941ab4;
		}
		_iter_end_1ac941ab4:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1a797811c_IdentExpr> _1a641bad4_buildIdentExpr(jule::Ptr<_1a795c013_Token>* _106924_token) {
	return jule::new_ptr<_1a797811c_IdentExpr>(_1a797811c_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a795c013_Token__jule_tuple_int _1a641bd9d_getRangeExprTokens(jule::Slice<jule::Ptr<_1a795c013_Token>>* _107728_tokens) {
	__jule_tuple_sx_1a795c013_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1a795c013_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1abd66b55:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1abd66e63:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1abd66e0d:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1abd661e8:;
	}
	_iter_end_1abd661e8:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a641c277_isAnonFnHead(jule::Slice<jule::Ptr<_1a795c013_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abd6889e:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1abd68d11;
				};
				goto _case_begin_1abd68e43;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1abd68e43:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1abd68d11;
				};
				return true;;
			}
		}
		_match_end_1abd68d11:;
	};
	return false;;
}



inline jule::Bool _1a641ce7b_checkAssignTokens(jule::Slice<jule::Ptr<_1a795c013_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a79617cb_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca1a63d:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aca1ad47:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aca1b1ee:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1aca1b111:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1aca1c387:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1aca1c420:;
						{
							goto _iter_next_1aca1a63d;
						}
					}
					else if (_1a7961d5e_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1aca1c486:;
						{
							return true;;
						}
					}
					_match_end_1aca1c332:;
				};
			}
			_iter_next_1aca1a63d:;
			++it;
			goto _iter_begin_1aca1a63d;
		}
		_iter_end_1aca1a63d:;
	};
	return false;;
}



inline _1d974c80a_Log _1a641e147_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a7962799_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1d974c80a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1d974cc6c_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1a795c013_Token>> _1a641e675_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a795c013_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a795c013_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1a795c013_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1aca22425:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1aca22777:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1aca22700:;
			};
		}
	_iter_next_1aca21831:;
	}
	_iter_end_1aca21831:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token _1a641e93e_rangeLast(jule::Slice<jule::Ptr<_1a795c013_Token>>* _9919_tokens) {
	__jule_tuple_sx_1a795c013_Token__jule_tuple_sx_1a795c013_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1a795c013_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aca26704:;
					{
						(_1096_braceN)++;
						goto _iter_next_1aca259bc;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aca26a12:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1aca269ac:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1aca259bc:;
	}
	_iter_end_1aca259bc:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log _1a641ede5_parts(jule::Slice<jule::Ptr<_1a795c013_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1a795c013_Token__jule_tuple_s_1d974c80a_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca2984a:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1a795c013_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aca2a86d:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aca2a8e5:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1aca2a95b:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1aca2984a;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_1d974c80a_Log _1545_err = _1a641e147_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1d974c80a_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1aca2a7b3:;
				};
			}
			_iter_next_1aca2984a:;
			++it;
			_1436_i++;
			goto _iter_begin_1aca2984a;
		}
		_iter_end_1aca2984a:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a795c013_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1a642017b_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aca2ddc1:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aca2de37:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aca2de9d:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1aca2a263:;
			{
				return _16720_left;;
			}
		}
		_match_end_1aca2a384:;
	};
}



inline _1d974c80a_Log _1a64205aa_compilerErr(jule::Ptr<_1a795c013_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1d974c80a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1d974cc6c_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1a79637ab_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1a6420951_pushSuggestion(_1d974c80a_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1d974cc6c_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1a79724bd_TypeDecl> _1a6432831_buildVoidType(void) {
	return jule::new_ptr<_1a79724bd_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7ce846a_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1ac2a3beb:;
			{
				__jule_func_result.__jule_result_arg0=_1d9750984_IsWindows(_1d7ce0982_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1ac2a3866:;
			{
				__jule_func_result.__jule_result_arg0=_1d9750c92_IsDarwin(_1d7ce0982_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1ac2a38cc:;
			{
				__jule_func_result.__jule_result_arg0=_1d975105b_IsLinux(_1d7ce0982_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1ac2a3943:;
			{
				__jule_func_result.__jule_result_arg0=_1d9751bb6_IsUnix(_1d7ce0982_Os);
			}
		}
		else {
			_case_begin_1ac2a337c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac2a349d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a7ce85ad_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1ac2a5dc9:;
			{
				__jule_func_result.__jule_result_arg0=_1d975139c_IsI386(_1d7ce0c3a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1ac2a5a44:;
			{
				__jule_func_result.__jule_result_arg0=_1d9751633_IsAmd64(_1d7ce0c3a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1ac2a5aaa:;
			{
				__jule_func_result.__jule_result_arg0=_1d97518ec_IsArm64(_1d7ce0c3a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1ac2a5b21:;
			{
				__jule_func_result.__jule_result_arg0=_1d97522d2_Is64Bit(_1d7ce0c3a_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1ac2a5b87:;
			{
				__jule_func_result.__jule_result_arg0=_1d9752090_Is32Bit(_1d7ce0c3a_Arch);
			}
		}
		else {
			_case_begin_1ac2a555a:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac2a567b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7ce8756_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1d96a9404_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1d96a8d71_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1d96a16b5_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce846a_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce85ad_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1d96a16b5_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce846a_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce85ad_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce85ad_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce846a_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a7ce846a_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1a7d140e0_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1d7ce0982_Os); };
	if (_1d9751bb6_IsUnix(_1d7ce0982_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a7d14365_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1d7ce0c3a_Arch); };
	if (_1d97522d2_Is64Bit(_1d7ce0c3a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1d9752090_Is32Bit(_1d7ce0c3a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a7d14651_initVars(jule::Slice<jule::Str>* _5518_vars, _1a7d13cc1_CompileInfo* _5532_info) {
	_1a7d140e0_setOsVars(_5518_vars);
	_1a7d14365_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ac2b1984:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ac2b13ce:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1ac2b1346:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ac2b1467:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ac2b219e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ac2b2215:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1ac2b2149:;
	};
}



inline jule::Slice<jule::U8> _1a6436934_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__21a5cea8a_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1d7cde893_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1d974c80a_Log _1a6436c42_flatCompilerErr(jule::Str _4120_text) {
	return _1d974c80a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a643b560_pushPasses(jule::Ptr<_1a681a39a_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5430bc:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _11214_f = *it;
			{
				_julec_label_1ac5436e9:;
				{
					auto expr = &((*(_11214_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac543b4a:;
					if (it != expr_end) {
						_1a79b09e5_Pass _11410_pass = *it;
						{
							if ((_11410_pass._field_Text).empty()) {
								goto _iter_next_1ac543b4a;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac54471c:;
								if (it != expr_end) {
									jule::Str _11811_cpass = *it;
									{
										if ((_11811_cpass == _11410_pass._field_Text)) {
											goto _iter_next_1ac543b4a;
										};
									}
									_iter_next_1ac54471c:;
									++it;
									goto _iter_begin_1ac54471c;
								}
								_iter_end_1ac54471c:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11410_pass._field_Text); };
						}
						_iter_next_1ac543b4a:;
						++it;
						goto _iter_begin_1ac543b4a;
					}
					_iter_end_1ac543b4a:;
				};
			}
			_iter_next_1ac5430bc:;
			++it;
			goto _iter_begin_1ac5430bc;
		}
		_iter_end_1ac5430bc:;
	};
}



inline jule::Slice<jule::Str> _1a643b928_getAllUniquePasses(jule::Ptr<_1a681a39a_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a6817474_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12910_passes = nullptr;;
	_1a643b560_pushPasses(_12828_pkg, &(_12910_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac545ce5:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _13214_u = *it;
			{
				if ((!((*(_13214_u))._field_Binded))) {
					_1a643b560_pushPasses(&((*_13214_u.alloc)._field_Package), &(_12910_passes));
				};
			}
			_iter_next_1ac545ce5:;
			++it;
			goto _iter_begin_1ac545ce5;
		}
		_iter_end_1ac545ce5:;
	};
	return _12910_passes;;
}



inline _1a7d13cc1_CompileInfo _1a643bb37_buildCompileInfo(void) {
	_1a7d13cc1_CompileInfo _1426_info = _1a7d13cc1_CompileInfo{._field_Prod=_21a1bc90e_Production, ._field_Test=_21a1bc04b_Test, };;
	{
		auto &_match_expr{ _21a1ba19d_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ac5471d1:;
			{
				_1426_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ac547346:;
			{
				_1426_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1ac5472be:;
	};
	{
		auto &_match_expr{ _21a1bb7a9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ac5473ce:;
			{
				_1426_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ac547e6d:;
			{
				_1426_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ac54770e:;
			{
				_1426_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1ac548116:;
	};
	return _1426_info;;
}



inline void _1a643c3eb_IterPackages(jule::Ptr<_1a6439bac_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a681a39a_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56486e:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac56486e:;
			++it;
			goto _iter_begin_1ac56486e;
		}
		_iter_end_1ac56486e:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a643c72b_IterFiles(jule::Ptr<_1a681a39a_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a7a4b18a_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac565ead:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1ac565ead:;
			++it;
			goto _iter_begin_1ac565ead;
		}
		_iter_end_1ac565ead:;
	};
}



inline void _1a643cac2_iterTraitInheritMethods(jule::Ptr<_1a79bb6d2_Trait>* _2233_base, jule::Ptr<_1a79bb6d2_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a79a8328_Fn>*> _2263_f) {
	_1a643cee0_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5670e1:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _2414_m = *it;
			{
				if ((!(_1a6447add_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1ac5670e1:;
			++it;
			goto _iter_begin_1ac5670e1;
		}
		_iter_end_1ac5670e1:;
	};
}



inline void _1a643cee0_iterTraitInheritMethods1(jule::Ptr<_1a79bb6d2_Trait>* _3134_base, jule::Ptr<_1a79bb6d2_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a79a8328_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac568466:;
		if (it != expr_end) {
			jule::Ptr<_1a7a89abe_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1a79bb6d2_Trait> _337_t2 = _1a7a86857_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1a643cac2_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1ac568466:;
			++it;
			goto _iter_begin_1ac568466;
		}
		_iter_end_1ac568466:;
	};
}



inline void _1a643d298_IterTraitMethods(jule::Ptr<_1a79bb6d2_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a79a8328_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5698eb:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1ac5698eb:;
			++it;
			goto _iter_begin_1ac5698eb;
		}
		_iter_end_1ac5698eb:;
	};
	_1a643cee0_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1a64455e1_IsForwarded(jule::Ptr<_1a680dba7_Scope>* _2317_s) {
	jule::Any _242_last = (*((*(_2317_s))))._field_Stmts[((*((*(_2317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _242_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1acddab0c:;
			{
				{
					auto &_match_expr{ (*(_242_last.cast_ptr<_1a7a51503_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1acddacd8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1acddb9a9:;
						{
							return false;;
						}
					}
					_match_end_1acddb954:;
				};
			}
		}
		else {
			_case_begin_1acddac72:;
			{
				return true;;
			}
		}
		_match_end_1acddac1c:;
	};
}



inline jule::Bool _1a64458ee_IsExprComesFromBind(jule::Ptr<_1a7a51503_Data>* _3925_d) {
	{
		auto &_match_expr{ (*((*(_3925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acddb190:;
			{
				return (*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1a685a682_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1acddc658:;
			{
				return (*((*((*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1acddc191:;
			{
				return false;;
			}
		}
		_match_end_1acddc13b:;
	};
}



inline jule::Bool _1a6445bb8_IsAny(jule::Ptr<_1a7a828ec_TypeKind>* _5115_t) {
	if ((_1a7a85a87_TypeEnum((*(_5115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a7a8a4c6_Prim> _552_prim = _1a7a8504d_Prim((*(_5115_t)).ptr());;
	return ((_552_prim != nullptr) && _1a7a8dbe4_IsAny(_552_prim));;
}



inline jule::Bool _1a6446009_IsClosure(jule::Ptr<_1a799d2eb_AnonFnExprModel>* _6015_m) {
	return ((*((*(_6015_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a6446290_IsOpMethod(jule::Ptr<_1a79a8328_Fn>* _6316_m) {
	if ((((*((*(_6316_m))))._field_Generics.len() > 0LL) || ((*((*(_6316_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a79ab309_FnIns> _672_mi = (*((*(_6316_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*(_672_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a6446614_IsTraitMethod(jule::Ptr<_1a79960d5_StructIns>* _7923_owner, jule::Ptr<_1a79ab309_FnIns>* _7943_f) {
	{
		auto expr = &((*((*((*(_7923_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acde3076:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _8014_t = *it;
			{
				if ((_1a79bc381_FindMethod(_8014_t.ptr(), (*((*((*(_7943_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1acde3076:;
			++it;
			goto _iter_begin_1acde3076;
		}
		_iter_end_1acde3076:;
	};
	return false;;
}



inline jule::Bool _1a6446988_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p) {
	return _1d969d9ae_HasPrefix((*(_9218_f)), _1d96a8ada_Join(jule::Slice<jule::Str>::make({_1d7cdedd2_PathStdlib,_9226_p})));;
}



inline jule::Ptr<_1a79718da_Directive> _1a64473a1_FindDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdeda21:;
		if (it != expr_end) {
			jule::Ptr<_1a79718da_Directive> _1014_dr = *it;
			{
				if (((*((*(_1014_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1014_dr;;
				};
			}
			_iter_next_1acdeda21:;
			++it;
			goto _iter_begin_1acdeda21;
		}
		_iter_end_1acdeda21:;
	};
	return nullptr;;
}



inline jule::Bool _1a6447769_HasDirective(jule::Slice<jule::Ptr<_1a79718da_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_1a64473a1_FindDirective(&((*((&((*(_1918_directives))))))), _1949_tag) != nullptr);;
}



inline jule::Bool _1a6447add_ContainsTraitMethod(jule::Ptr<_1a79bb6d2_Trait>* _2429_t, jule::Str* _2441_ident) {
	{
		auto expr = &((*((*(_2429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace0066b:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _259_m = *it;
			{
				if (((*(_259_m))._field_Ident == (*(_2441_ident)))) {
					return true;;
				};
			}
			_iter_next_1ace0066b:;
			++it;
			goto _iter_begin_1ace0066b;
		}
		_iter_end_1ace0066b:;
	};
	return false;;
}



inline jule::I64 _1a64482a3_FindTraitTypeOffsetS(jule::Ptr<_1a79bb6d2_Trait> _3725_t, jule::Ptr<_1a79960d5_StructIns> _3740_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _416_i = 0LL;;
	{
		auto expr = &((*_3725_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace0234e:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> *_429_si = it;
			{
				if (((*(_3740_s))._field_Decl == (*(_429_si)))) {
					{
						auto expr = &((*((*(_429_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ace031da:;
						if (it != expr_end) {
							jule::Ptr<_1a79960d5_StructIns> *_4411_ins = it;
							{
								if (((*(_4411_ins)) == _3740_s)) {
									return _416_i;;
								};
								(_416_i)++;
							}
							_iter_next_1ace031da:;
							++it;
							goto _iter_begin_1ace031da;
						}
						_iter_end_1ace031da:;
					};
					goto _iter_end_1ace0234e;
				} else {
					_416_i+=(*((*(_429_si))))._field_Instances.len();
				};
			}
			_iter_next_1ace0234e:;
			++it;
			goto _iter_begin_1ace0234e;
		}
		_iter_end_1ace0234e:;
	};
	return -1LL;;
}



inline jule::I64 _1a6448627_FindTraitTypeOffset(jule::Ptr<_1a79bb6d2_Trait> _6024_t, jule::Ptr<_1a7a828ec_TypeKind> _6039_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a79960d5_StructIns> _6410_s = nullptr;;
	if ((_1a7a852d4_Sptr(_6039_k.ptr()) != nullptr)) {
		_6039_k=(*(_1a7a852d4_Sptr(_6039_k)))._field_Elem;
	};
	_6410_s=_1a7a865c1_Struct(_6039_k);
	if ((_6410_s == nullptr)) {
		return -1LL;;
	};
	return _1a64482a3_FindTraitTypeOffsetS(_6024_t, _6410_s);;
}



inline jule::Bool _1ac559534_isOrdered(jule::Ptr<_1a7993357_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a7993357_Struct>> _1425_s) {
	_julec_label_1ac55b03b:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac55b47b:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac55baec:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ac55b47b;
							};
						}
						_iter_next_1ac55baec:;
						++it;
						goto _iter_begin_1ac55baec;
					}
					_iter_end_1ac55baec:;
				};
				return false;;
			}
			_iter_next_1ac55b47b:;
			++it;
			goto _iter_begin_1ac55b47b;
		}
		_iter_end_1ac55b47b:;
	};
	return true;;
}

inline jule::Bool _1ac560ace_isOrdered(jule::Ptr<_1a685a682_Var>* _1418_t, jule::Slice<jule::Ptr<_1a685a682_Var>> _1425_s) {
	_julec_label_1ac562592:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5629d2:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1ac5632b8:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1ac5629d2;
							};
						}
					}
					_match_end_1ac563252:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac563571:;
					if (it != expr_end) {
						jule::Ptr<_1a685a682_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ac5629d2;
							};
						}
						_iter_next_1ac563571:;
						++it;
						goto _iter_begin_1ac563571;
					}
					_iter_end_1ac563571:;
				};
				return false;;
			}
			_iter_next_1ac5629d2:;
			++it;
			goto _iter_begin_1ac5629d2;
		}
		_iter_end_1ac5629d2:;
	};
	return true;;
}



inline void _1ac556311_order(jule::Slice<jule::Ptr<_1a7993357_Struct>>* _3718_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1ac556784:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1ac557983:;
	for (; (_406_j < (*(_3718_s)).len()); (_406_j)++) {
		{
			jule::Ptr<_1a7993357_Struct> _437_t = (*(_3718_s))[_406_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac5586ed:;
				if (it != expr_end) {
					jule::Ptr<_1a7993357_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ac5579b6;
						};
					}
					_iter_next_1ac5586ed:;
					++it;
					goto _iter_begin_1ac5586ed;
				}
				_iter_end_1ac5586ed:;
			};
			if (_1ac559534_isOrdered(&(_437_t), (*(_3718_s)).slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap((*(_3718_s))[_386_i], (*(_3718_s))[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ac5579b6:;
	}
	_iter_end_1ac5579b6:;;
	if ((_386_i < (*(_3718_s)).len())) {
		goto _julec_label_1ac556784;
	};
}

inline void _1ac55b965_order(jule::Slice<jule::Ptr<_1a685a682_Var>>* _3718_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1ac55cd73:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1ac55e02d:;
	for (; (_406_j < (*(_3718_s)).len()); (_406_j)++) {
		{
			jule::Ptr<_1a685a682_Var> _437_t = (*(_3718_s))[_406_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac55ec98:;
				if (it != expr_end) {
					jule::Ptr<_1a685a682_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ac55e061;
						};
					}
					_iter_next_1ac55ec98:;
					++it;
					goto _iter_begin_1ac55ec98;
				}
				_iter_end_1ac55ec98:;
			};
			if (_1ac560ace_isOrdered(&(_437_t), (*(_3718_s)).slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap((*(_3718_s))[_386_i], (*(_3718_s))[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ac55e061:;
	}
	_iter_end_1ac55e061:;;
	if ((_386_i < (*(_3718_s)).len())) {
		goto _julec_label_1ac55cd73;
	};
}



inline void _1a86c5484_EliminateDefines(jule::Ptr<_1a6439bac_IR>* _30526_ir) {
	jule::Ptr<_1a86c256e_ObjectDeadCode> _3066_ocd = static__1a86c2a14_new(_30526_ir);;
	_1a86c5154_elimanate(_3066_ocd);
}



inline void _1a86c9400_eliminateDeadCodeOfScope(jule::Ptr<_1a680dba7_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1a79d96de_Label>> _2392_labels = jule::Slice<jule::Ptr<_1a79d96de_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a79d9aa7_GotoSt>> _2402_gotos = jule::Slice<jule::Ptr<_1a79d9aa7_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a86c61bb_scopeDeadCode> _2416_sdc = jule::new_ptr<_1a86c61bb_scopeDeadCode>(_1a86c61bb_scopeDeadCode{._field_s=_23833_s, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a79d96de_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a79d9aa7_GotoSt>>>)((&(_2402_gotos)))), });;
	{
		_1a86c90c0_optimizeStmts(_2416_sdc);
	};
}



inline void _1a86c9675_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a79a8328_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace72534:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace746ce:;
					if (it != expr_end) {
						jule::Ptr<_1a79ab309_FnIns> _25215_ins = *it;
						{
							_1a86c9400_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1ace746ce:;
						++it;
						goto _iter_begin_1ace746ce;
					}
					_iter_end_1ace746ce:;
				};
			}
			_iter_next_1ace72534:;
			++it;
			goto _iter_begin_1ace72534;
		}
		_iter_end_1ace72534:;
	};
}



inline void _1a86c98a6_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a7993357_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace7516e:;
		if (it != expr_end) {
			jule::Ptr<_1a7993357_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace757bd:;
					if (it != expr_end) {
						jule::Ptr<_1a79960d5_StructIns> _26115_ins = *it;
						{
							_1a86c9675_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1ace757bd:;
						++it;
						goto _iter_begin_1ace757bd;
					}
					_iter_end_1ace757bd:;
				};
			}
			_iter_next_1ace7516e:;
			++it;
			goto _iter_begin_1ace7516e;
		}
		_iter_end_1ace7516e:;
	};
}



inline void _1a86c9b5e_eliminateFunctionsScopePackage(jule::Ptr<_1a681a39a_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace7556a:;
		if (it != expr_end) {
			jule::Ptr<_1a7a4b18a_SymbolTable> _26814_f = *it;
			{
				_1a86c9675_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1a86c98a6_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1ace7556a:;
			++it;
			goto _iter_begin_1ace7556a;
		}
		_iter_end_1ace7556a:;
	};
}



inline void _1a86c9d5c_eliminateScopePackage(jule::Ptr<_1a681a39a_Package>* _27431_pkg) {
	_1a86c9b5e_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1a86ca08d_EliminateScopes(jule::Ptr<_1a6439bac_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1a6817474_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1a86c9d5c_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1ace77cba:;
	}
	_iter_end_1ace77cba:;;
	_1a86c9d5c_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1a7b73dd9_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1a7b742a2_equalConst(jule::Ptr<_1bd82c384_Const> _2115_l, jule::Ptr<_1bd82c384_Const> _2126_r) {
	{
		
		if (_1bd831355_IsI64(_2115_l.ptr())) {
			_case_begin_1aced9942:;
			{
				return (_1bd831355_IsI64(_2126_r.ptr()) && (_1bd82dc59_ReadI64(_2115_l) == _1bd82dc59_ReadI64(_2126_r)));;
			}
		}
		else if (_1bd8315db_IsU64(_2115_l.ptr())) {
			_case_begin_1aced99a8:;
			{
				return (_1bd8315db_IsU64(_2126_r.ptr()) && (_1bd82dee0_ReadU64(_2115_l) == _1bd82dee0_ReadU64(_2126_r)));;
			}
		}
		else if (_1bd831d8e_IsF64(_2115_l.ptr())) {
			_case_begin_1aced9a1e:;
			{
				return (_1bd831d8e_IsF64(_2126_r.ptr()) && (_1bd82e793_ReadF64(_2115_l) == _1bd82e793_ReadF64(_2126_r)));;
			}
		}
		else if (_1bd831b08_IsStr(_2115_l.ptr())) {
			_case_begin_1aced9a96:;
			{
				return (_1bd831b08_IsStr(_2126_r.ptr()) && (_1bd82e50c_ReadStr(_2115_l) == _1bd82e50c_ReadStr(_2126_r)));;
			}
		}
		else if (_1bd831872_IsBool(_2115_l.ptr())) {
			_case_begin_1aced9b1d:;
			{
				return (_1bd831872_IsBool(_2126_r.ptr()) && (_1bd82e276_ReadBool(_2115_l) == _1bd82e276_ReadBool(_2126_r)));;
			}
		}
		else if (_1bd832125_IsNil(_2115_l.ptr())) {
			_case_begin_1aced9c61:;
			{
				return _1bd832125_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1aced9854:;
			{
				return false;;
			}
		}
		_match_end_1aced939d:;
	};
}



inline jule::Bool _1a7b74626_equalCasting(jule::Ptr<_1a799bb13_CastingExprModel> _4017_l, jule::Ptr<_1a799bb13_CastingExprModel> _4039_r) {
	if ((!(_1a7a83106_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1a7b7555b_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a7b749de_equalUnary(jule::Ptr<_1a799a8ae_UnaryExprModel> _4715_l, jule::Ptr<_1a799a8ae_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a7b7555b_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a7b74d63_equalIndexing(jule::Ptr<_1a799cd45_IndexingExprModel> _5418_l, jule::Ptr<_1a799cd45_IndexingExprModel> _5441_r) {
	return (_1a7b7555b_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1a7b7555b_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a7b751d7_equalBinary(jule::Ptr<_1a799a4d5_BinaryExprModel> _5916_l, jule::Ptr<_1a799a4d5_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a7b7555b_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1a7b7555b_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a7b7555b_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1a7b73dd9_typeData(&(_7016_l)) != _1a7b73dd9_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acee8731:;
			{
				return (_7016_l.unsafe_cast_ptr<_1a685a682_Var>() == _7030_r.cast_ptr<_1a685a682_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1acee90a0:;
			{
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>();;
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1a7b7555b_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1acee9116:;
			{
				return _1a7b742a2_equalConst(_7016_l.cast_ptr<_1bd82c384_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1bd82c384_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1acee8b4e:;
			{
				return _1a7b74626_equalCasting(_7016_l.cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93), _7030_r.cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1acee8bb5:;
			{
				return _1a7b749de_equalUnary(_7016_l.cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1acee8c2b:;
			{
				return _1a7b74d63_equalIndexing(_7016_l.cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44), _7030_r.cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1acee8c92:;
			{
				return _1a7b751d7_equalBinary(_7016_l.cast_ptr<_1a799a4d5_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1a799a4d5_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1acee891d:;
			{
				return false;;
			}
		}
		_match_end_1acee84cd:;
	};
}



inline void _1a7b7b177_possibleNilRemove(jule::Ptr<_1a7b7a198_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1a7b7a94b_removeVar((*(_7827_n)).ptr(), _1a7b7bb4a_getNilVar(_7837_m));
	};
}



inline jule::Bool _1a7b7b540_isGuaranteedNonNilExpr(jule::Ptr<_1a7b7a198_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aceeee52:;
			{
				return true;;
			}
		}
		_match_end_1aceeedec:;
	};
	return (((*(_8432_n)) != nullptr) && _1a7b7ac8c_isSafe((*(_8432_n)).ptr(), _1a7b7bb4a_getNilVar(_8442_m)));;
}



inline jule::Bool _1a7b7b809_isNilValidType(jule::Ptr<_1a7a828ec_TypeKind> _9223_t) {
	return (_1a7a852d4_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a7b7bb4a_getNilVar(jule::Any _9414_m) {
	if ((!(_1a6460650_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad001508:;
			{
				jule::Ptr<_1a685a682_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1a685a682_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1a685a682_Var>());;
				};
				return _1a7b7bb4a_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad00143c:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1ad0014a3:;
	};
	return 0LLU;;
}



inline jule::Bool _1a64500bd_isConstantValidConditionalCase(jule::Ptr<_1a680e0c5_If>* _68236_i) {
	{
		auto &_match_expr{ (*((*(_68236_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad008840:;
			{
				jule::Ptr<_1bd82c384_Const> _6853_c = (*((*(_68236_i))))._field_Expr.unsafe_cast_ptr<_1bd82c384_Const>();;
				return (_1bd831872_IsBool(_6853_c.ptr()) && _1bd82e276_ReadBool(_6853_c));;
			}
		}
		_match_end_1ad0087da:;
	};
	return false;;
}



inline jule::Bool _1a64503cb_isUnreachableExpr(jule::Any* _69123_expr) {
	{
		auto &_match_expr{ (*(_69123_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad0095aa:;
			{
				jule::Ptr<_1bd82c384_Const> _6943_c = (*(_69123_expr)).cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
				return (_1bd831872_IsBool(_6943_c.ptr()) && (!(_1bd82e276_ReadBool(_6943_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad0088c8:;
			{
				jule::Ptr<_1a799a4d5_BinaryExprModel> _6973_m = (*(_69123_expr)).cast_ptr<_1a799a4d5_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6973_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a64503cb_isUnreachableExpr(&((*((*_6973_m.alloc)._field_Left))._field_Model)) || _1a64503cb_isUnreachableExpr(&((*((*_6973_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ad009555:;
	};
	return false;;
}



inline jule::Bool _1a6450695_isConstantValidMatchCase(jule::Ptr<_1a79dbb97_Case>* _70630_case) {
	{
		auto expr = &((*((*(_70630_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad00d933:;
		if (it != expr_end) {
			jule::Ptr<_1a7a51503_Data> *_7079_expr = it;
			{
				if (((_1a7a51e0a_IsConst((*(_7079_expr)).ptr()) && _1bd831872_IsBool((*(*(_7079_expr)).alloc)._field_Constant.ptr())) && _1bd82e276_ReadBool((*((*(_7079_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ad00d933:;
			++it;
			goto _iter_begin_1ad00d933;
		}
		_iter_end_1ad00d933:;
	};
	return false;;
}



inline jule::Bool _1a64509d6_isUnreachableConditionalCase(jule::Ptr<_1a680e0c5_If>* _71534_i) {
	return _1a64503cb_isUnreachableExpr(&((*((*(_71534_i))))._field_Expr));;
}



inline jule::Bool _1a6450c6c_isUnreachableMatchCase(jule::Ptr<_1a79dbb97_Case>* _71928_case) {
	{
		auto expr = &((*((*(_71928_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0108e1:;
		if (it != expr_end) {
			jule::Ptr<_1a7a51503_Data> *_7209_expr = it;
			{
				if ((!(_1a64503cb_isUnreachableExpr(&((*((*(_7209_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ad0108e1:;
			++it;
			goto _iter_begin_1ad0108e1;
		}
		_iter_end_1ad0108e1:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a645624a_checkForBitShiftOpt(jule::Ptr<_1a7999eda_OperandExprModel>* _58325_l, jule::Ptr<_1a7999eda_OperandExprModel>* _58348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1bd82b7a1_IsInt(_1a7a82cb5_Str((*((*(_58325_l))))._field_Kind.ptr())))) || (!(_1bd82b7a1_IsInt(_1a7a82cb5_Str((*((*(_58348_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1bd82ecb0_AsU64((*((*(_58348_r))))._field_Model.cast_ptr<_1bd82c384_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5912_j = _1bd7cdaa5_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _5922_z = static_cast<jule::U64>(_5912_j);;
	if ((static_cast<jule::F64>(_5922_z) != _5912_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5922_z;
	return __jule_func_result;;
}



inline jule::Bool _1a6456613_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r) {
	{
		auto &_match_expr{ (*(_60028_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad0a6d72:;
			{
				return ((*(_60043_r)) == (*(_60028_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad0a6b52:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1ad0a77bd:;
						{
							goto _match_end_1ad0a768b;
						}
					}
					else {
						_case_begin_1ad0a7966:;
						{
							return false;;
						}
					}
					_match_end_1ad0a768b:;
				};
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _6133_lsi = (*(_60028_l)).cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _6143_rsi = (*(_60043_r)).cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_6133_lsi))._field_Field != (*(_6143_rsi))._field_Field)) {
					return false;;
				};
				return _1a6456613_areSameLvalueExprModel(&((*((*_6133_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6143_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad0a6dd8:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ad0a944b:;
						{
							jule::Ptr<_1a799a8ae_UnaryExprModel> _6264_ul = (*(_60028_l)).cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1a799a8ae_UnaryExprModel> _6274_ur = (*(_60043_r)).cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_6264_ul))._field_Op))._field_Id != (*(*(_6274_ur))._field_Op.alloc)._field_Id) || ((*(*(_6264_ul))._field_Op.alloc)._field_Kind != (*(*(_6274_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a6456613_areSameLvalueExprModel(&((*((*_6264_ul.alloc)._field_Expr))._field_Model), &((*(*(_6274_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1ad0a8c53:;
				};
			}
		}
		_match_end_1ad0a6cc8:;
	};
	return false;;
}



inline void _1a64587d0_possibleDynamicRemove(jule::Ptr<_1a6457746_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1a6457ee9_removeVar((*(_8131_d)).ptr(), _1a645935d_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1a6458add_isDynamicValidType(jule::Ptr<_1a7a828ec_TypeKind> _8727_t) {
	return _1a6445bb8_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1a7a828ec_TypeKind> _1a645901c_isTypeGuaranteedDynamicData(jule::Ptr<_1a6457746_dynamic>* _8937_dy, jule::Ptr<_1a7a828ec_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1a6445bb8_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1a7a86857_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad12c315:;
			{
				jule::Ptr<_1a799bb13_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1a799bb13_CastingExprModel>();;
				return _1a645901c_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1ad12c623:;
	};
	jule::Uintptr _1022_var = _1a645935d_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12e119:;
		if (it != expr_end) {
			_1a6457405_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1ad12e119:;
			++it;
			goto _iter_begin_1ad12e119;
		}
		_iter_end_1ad12e119:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a645935d_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1a6462135_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad12e834:;
			{
				jule::Ptr<_1a685a682_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1a685a682_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1a685a682_Var>());;
				};
				return _1a645935d_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad12e713:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad130208:;
			{
				jule::Ptr<_1a799a8ae_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1a799a8ae_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a645935d_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ad12e78a:;
	};
	return 0LLU;;
}



inline jule::Bool _1a645cdbc_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a645d609_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1a645d285_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad13e756:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1a645d609_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1ad13e756:;
			++it;
			_906_i++;
			goto _iter_begin_1ad13e756;
		}
		_iter_end_1ad13e756:;
	};
	return -1LL;;
}



inline jule::Bool _1a645d609_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1a7b73dd9_typeData(&(_9813_e1)) != _1a7b73dd9_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad14126e:;
			{
				jule::Ptr<_1bd82c384_Const> _1043_exprConst = _9828_e2.cast_ptr<_1bd82c384_Const>(&__jule_any_type19);;
				return ((_1bd830046_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1bd833c4d_GtEq(_9813_e1.unsafe_cast_ptr<_1bd82c384_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad1412d5:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad14134b:;
			{
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>();;
				jule::Ptr<_1a79a0133_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1a79a0133_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1a7b7555b_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad1413b2:;
			{
				jule::Ptr<_1a799a8ae_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1a799a8ae_UnaryExprModel>();;
				jule::Ptr<_1a799a8ae_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a645d609_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1ad13ee60:;
			{
				return false;;
			}
		}
		_match_end_1ad13ee0a:;
	};
}



inline void _1a645d939_possibleBoundaryRemove(jule::Ptr<_1a645bd55_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1416d1:;
		if (it != expr_end) {
			_1a645ba14_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad1480de:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1a7b7555b_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1ad1480de;
							};
						}
						_iter_next_1ad1480de:;
						++it;
						_1277_i++;
						goto _iter_begin_1ad1480de;
					}
					_iter_end_1ad1480de:;
				};
			}
			_iter_next_1ad1416d1:;
			++it;
			goto _iter_begin_1ad1416d1;
		}
		_iter_end_1ad1416d1:;
	};
}



inline jule::Bool _1a645dc03_isBoundaryRiskyType(jule::Ptr<_1a7a828ec_TypeKind> _13628_t) {
	return (_1a7a85d1d_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a645debc_isBoundaryValidType(jule::Ptr<_1a7a828ec_TypeKind> _14128_t) {
	return ((_1a7a860a4_Slc(_14128_t.ptr()) != nullptr) || (_1a7a85d1d_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a645e286_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a6460650_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad14a60d:;
			{
				jule::Ptr<_1a685a682_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1a685a682_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a685a682_Var>());;
				};
				return _1a645e286_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad14a94e:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a79a0133_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad14a6a7:;
			{
				jule::Ptr<_1a799a8ae_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1a799a8ae_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a645e286_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ad14a5a8:;
	};
	return 0LLU;;
}



inline void _1a6462311_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1a645e9e5_Copy=_332_l1;
	_1a645ece2_Deadcode=_332_l1;
	_1a646009a_Append=_332_l1;
	_1a6460397_Math=_332_l1;
	_1a6460650_Access=_332_l1;
	_1a6460908_Inline=_332_l1;
	_1a6460bb1_Ptr=_332_l1;
	_1a6461079_Cond=_332_l1;
	_1a64612bb_Str=_332_l1;
	_1a6461563_Slice=_332_l1;
	_1a646181b_Assign=_332_l1;
	_1a6461ac4_Exceptional=_332_l1;
	_1a6461d7c_Iter=_332_l1;
	_1a6462135_Dynamic=_332_l1;
}



inline void _1a86cd855_detectEnabled(void) {
	_1a86cb567_exprEnabled=(((_1a6460bb1_Ptr || _1a6460397_Math) || _1a6460650_Access) || _1a6461079_Cond);
	_1a86cb853_scopeEnabled=((((((((_1a6461079_Cond || _1a646009a_Append) || _1a645e9e5_Copy) || _1a64612bb_Str) || _1a6461563_Slice) || _1a646181b_Assign) || _1a6461ac4_Exceptional) || _1a6461d7c_Iter) || _1a6462135_Dynamic);
}



inline void _1a8705a58_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1d7cde893_Exit(1LL);
}



inline jule::U64 _1a9e400c6_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a9d74a22_isCopyOptimizable(jule::Ptr<_1a7a51503_Data>* _104823_expr) {
	if ((!((*((*(_104823_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_104823_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ad2437d3:;
			{
				return false;;
			}
		}
		_match_end_1ad24377d:;
	};
	return true;;
}



inline jule::Bool _1a9d74dda_isIterCopyOptimizable(jule::Ptr<_1a7a51503_Data>* _105927_expr, jule::Ptr<_1a685a682_Var>* _105941_v) {
	if (((!((*((*(_105927_expr))))._field_Lvalue)) && (!(_1a7a8427d_Mutable((*((*(_105927_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_105941_v))))._field_Mutable)) && (!((*((*(_105927_expr))))._field_Mutable)));;
}



inline jule::Bool _1a9d75319_captureVarHandling(jule::Ptr<_1a9e48563_ObjectCoder>* _106628_oc, jule::Ptr<_1a799d2eb_AnonFnExprModel>* _106651_m, jule::Ptr<_1a685a682_Var>* _106677_v) {
	{
		auto expr = &((*((*(_106651_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad24596c:;
		if (it != expr_end) {
			jule::Ptr<_1a685a682_Var> _10679_cv = *it;
			{
				if ((_10679_cv == (*(_106677_v)))) {
					_1a9e48c17_write((*(_106628_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a9d8dc17_var(&((*((*(_106628_oc))))._field_Buf), (*(_106677_v)));
					return true;;
				};
			}
			_iter_next_1ad24596c:;
			++it;
			goto _iter_begin_1ad24596c;
		}
		_iter_end_1ad24596c:;
	};
	return false;;
}



inline jule::Str _1a9d861b5_decomposeCommonEsq(jule::U8 _158323_b) {
	{
		auto &_match_expr{ _158323_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ad3859be:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ad385837:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ad38589d:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ad3853a3:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ad385419:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ad385491:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ad385518:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ad385590:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ad385a35:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ad385a9b:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1ad383b10:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad38534d:;
	};
}



inline jule::Str _1a9d864c3_sbtoa(jule::U8 _161010_b) {
	if ((_161010_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_161010_b < 128LLU)) {
		jule::Str _16153_seq = _1a9d861b5_decomposeCommonEsq(_161010_b);;
		if (!(_16153_seq).empty()) {
			return _16153_seq;;
		};
		if (((32LL <= _161010_b) && (_161010_b <= 126LLU))) {
			return jule::Str::from_byte(_161010_b);;
		};
	};
	jule::Str _16232_seq = _1bd81dbc2_FmtUint(static_cast<jule::U64>(_161010_b), 8LL);;
	if ((_16232_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16232_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16232_seq);;
}



inline void _1a9d867ae_cstrBytes(_200880c8a_StrBuilder* _163019_s, jule::Str _163034_ctx) {
	{
		auto expr = &(_163034_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad38a7a4:;
		if (it != expr_end) {
			jule::U8 *_16319_b = it;
			{
				_20088172a_WriteStr(_163019_s, _1a9d864c3_sbtoa((*(_16319_b))));
			}
			_iter_next_1ad38a7a4:;
			++it;
			goto _iter_begin_1ad38a7a4;
		}
		_iter_end_1ad38a7a4:;
	};
}



inline void _1a9d86ade_cstrLit(_200880c8a_StrBuilder* _163617_s, jule::Str _163632_ctx) {
	_2008819d3_WriteByte(_163617_s, '\"');
	_1a9d867ae_cstrBytes(_163617_s, _163632_ctx);
	_2008819d3_WriteByte(_163617_s, '\"');
}



inline void _1a9d86e85_ftoa(_200880c8a_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I64 _164237_bitsize) {
	if ((_164237_bitsize != 32LL)) {
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::I64>(_164229_f)))) {
			_1a9d87271_itoa(_164214_s, static_cast<jule::I64>(_164229_f));
			return;;
		};
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::U64>(_164229_f)))) {
			_1a9d8755c_utoa(_164214_s, static_cast<jule::U64>(_164229_f));
			return;;
		};
	};
	jule::Str _16532_m = _1bd80754b_FmtFloat(_164229_f, 'f', -1LL, _164237_bitsize);;
	_20088172a_WriteStr(_164214_s, _16532_m);
	if ((!(_1d96a2e7a_Contains(_16532_m, jule::Str::lit(".", 1))))) {
		_20088172a_WriteStr(_164214_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a9d87271_itoa(_200880c8a_StrBuilder* _166014_s, jule::I64 _166029_x) {
	{
		
		if ((_166029_x == jule::MAX_I64)) {
			_case_begin_1ad38ea83:;
			{
				_20088172a_WriteStr(_166014_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_166029_x == jule::MIN_I64)) {
			_case_begin_1ad38eb2c:;
			{
				_20088172a_WriteStr(_166014_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1ad38e973:;
	};
	_20088172a_WriteStr(_166014_s, _1bd81e08a_FmtInt(_166029_x, 10LL));
	if (_1d97522d2_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2008819d3_WriteByte(_166014_s, 'L');
	};
	_2008819d3_WriteByte(_166014_s, 'L');
}



inline void _1a9d8755c_utoa(_200880c8a_StrBuilder* _167714_s, jule::U64 _167729_x) {
	{
		
		if ((_167729_x == jule::MAX_U64)) {
			_case_begin_1ad391bc8:;
			{
				_20088172a_WriteStr(_167714_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1ad391a96:;
	};
	_20088172a_WriteStr(_167714_s, _1bd81dbc2_FmtUint(_167729_x, 10LL));
	if (_1d97522d2_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2008819d3_WriteByte(_167714_s, 'L');
	};
	_20088172a_WriteStr(_167714_s, jule::Str::lit("LU", 2));
}



inline jule::Slice<jule::U8> _1a9e55e55_concatAllParts(jule::Slice<jule::Ptr<_1a795c013_Token>> _135719_parts) {
	jule::I64 _13586_n = 0LL;;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5aae8b:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_13599_part = it;
			{
				_13586_n+=(*((*(_13599_part))))._field_Kind.len();
			}
			_iter_next_1ad5aae8b:;
			++it;
			goto _iter_begin_1ad5aae8b;
		}
		_iter_end_1ad5aae8b:;
	};
	if ((_13586_n == 0LL)) {
		return nullptr;;
	};
	_200880c8a_StrBuilder _13656_s = static__2008811b9_New(_13586_n);;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5ac289:;
		if (it != expr_end) {
			jule::Ptr<_1a795c013_Token> *_13669_p = it;
			{
				_20088172a_WriteStr(&_13656_s, (*((*(_13669_p))))._field_Kind);
			}
			_iter_next_1ad5ac289:;
			++it;
			goto _iter_begin_1ad5ac289;
		}
		_iter_end_1ad5ac289:;
	};
	return _2008829c3_Buf(&_13656_s);;
}



inline jule::Bool _1a9e56263_isHeadDecl(jule::Ptr<_1a79a8328_Fn>* _137320_m) {
	if ((((*((*(_137320_m))))._field_Generics.len() > 0LL) || ((*((*(_137320_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a6446290_IsOpMethod(_137320_m)) {
		return true;;
	};
	jule::Ptr<_1a79ab309_FnIns> _13806_mi = (*((*(_137320_m))))._field_Instances[0LL];;
	;
	return static__1a685bb28_Dispose(_1a799714c_FindMethod((*(_13806_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1a9e6511d_shouldInitialized(jule::Ptr<_1a7a828ec_TypeKind>* _46427_t) {
	jule::Ptr<_1a7a8a4c6_Prim> _4652_prim = _1a7a8504d_Prim((*(_46427_t)).ptr());;
	if ((_4652_prim != nullptr)) {
		return ((!(_1a7a8dbe4_IsAny(_4652_prim))) && (!(_1a7a8d95d_IsStr(_4652_prim))));;
	};
	{
		
		if ((_1a7a852d4_Sptr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e9b35:;
			{
				return false;;
			}
		}
		else if ((_1a7a86add_Map((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e9b9b:;
			{
				return false;;
			}
		}
		else if ((_1a7a860a4_Slc((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e9c12:;
			{
				return false;;
			}
		}
		else if ((_1a7a86857_Trait((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e8d65:;
			{
				return false;;
			}
		}
		else if ((_1a7a8633a_Fn((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e9cbc:;
			{
				return false;;
			}
		}
		else if ((_1a7a85d1d_Arr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e9d33:;
			{
				jule::Ptr<_1a7a91ce6_Arr> _4817_arr = _1a7a85d1d_Arr((*(_46427_t)).ptr());;
				return _1a9e6511d_shouldInitialized(&((*(_4817_arr))._field_Elem));;
			}
		}
		else if ((_1a7a865c1_Struct((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1ad6e9d99:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad6e8cdd:;
			{
				return true;;
			}
		}
		_match_end_1ad6e9140:;
	};
}



inline void _1d7ce3de7_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1d7ce416c_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1d7ce3de7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _1d7ce3c1b_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1d7ce3c1b_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7949e3:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1ad7949e3:;
			++it;
			goto _iter_begin_1ad7949e3;
		}
		_iter_end_1ad7949e3:;
	};
	_200880c8a_StrBuilder _496_s = static__2008811b9_New(32LL);;
	;
	{
		auto expr = &(_1d7ce3c1b_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad796330:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_20088172a_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_20088172a_WriteStr(&_496_s, _1d969d5e6_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_20088172a_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_2008819d3_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1ad796330:;
			++it;
			_516_i++;
			goto _iter_begin_1ad796330;
		}
		_iter_end_1ad796330:;
	};
	jule::outln(_496_s);
}



inline void _1d7ce439d_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1d7ce3de7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _1d7ce45ac_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1d7ce4722_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1d7ce4920_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1d7ce3de7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1ad79c16b:;
			{
				_1d7ce45ac_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1ad79c237:;
			{
				_1d7ce4722_toolDistarch();
			}
		}
		else {
			_case_begin_1ad79ab70:;
			{
				_1d7ce3de7_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1ad79bc5e:;
	};
}



inline void _1d7ce4b51_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1d7ce3de7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _21a1ba19d_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _21a1bb7a9_CppStd));
}



inline void _1d7ce4e92_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1d7ce3de7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1ad7a0757:;
			{
				({
					auto except = static__21a5cee31_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1d7ce3de7_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1ad79e349:;
			{
				_1d7ce3de7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1ad7a023a:;
	};
}



inline jule::Bool _1d7ce51d4_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1ad7a1c31:;
			{
				_1d7ce416c_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1ad7a1c97:;
			{
				_1d7ce439d_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1ad7a1d0d:;
			{
				_1d7ce4920_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1ad7a14e4:;
			{
				_1d7ce4b51_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1ad7a155a:;
			{
				_1d7ce4e92_mod(_15320_args);
			}
		}
		else {
			_case_begin_1ad7a038e:;
			{
				return false;;
			}
		}
		_match_end_1ad7a0e1c:;
	};
	return true;;
}



inline void _1d7ce537c_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _2008b076a_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1d7ce537c_showInfo();
		return;;
	};
	if (_1d7ce51d4_processCommand(&(_1896_args))) {
		return;;
	};
	_1a9a9380c_compileCommand(&(_1896_args));
}



inline void _1d7ce5da5_enableVtp(void) {
	jule::Uintptr _192_hOut = _21a5b5620_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_192_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _246_dwMode = 0LL;;
	if ((!(_21a5b7b94_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_21a5b829e_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _1d7ce6070_init(void) {
	_1d7ce5da5_enableVtp();
}



inline void _1a9a9072c_init(void) {
	_21a1ba19d_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_21a5ce0d9_File> _1a9a909e6_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _1d96a97cd_Dir((*(_4316_path)));;
	({
		auto except = static__1d96aadc8_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__1d96aa2d4_Create(_442_dir);
				if (!except.ok()) {
					_1a8705a58_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21a5ce7c1_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a8705a58_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a9a90b8e_clearObjects(void) {
	({
		auto except = static__21a6de02e_Remove(_1a9a91ce4_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1d96aa515_Remove(_1a9a8eece_OutDir);
}



inline void _1a9a90e9c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1d7cd778c_Cmd> _736_cmd = static__1d7cd7baa_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_1d96a2b06_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1d7cd7da8_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1ad7a91ab:;
					{
						static__1a8701e2d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1ad7a8d7b:;
					{
						static__1a8701e2d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1ad7a8bb1:;
					{
						static__1a8701e2d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1ad7a8cc1:;
			};
			_1a8705a58_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _1d7cd833c_Wait(_736_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _21a1ba19d_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a8701e2d_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1a8705a58_Throw(jule::Str());
	};
	_1a9a90b8e_clearObjects();
}



inline jule::Bool _1a9a91266_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _1d96a16b5_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _1d9740787_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1a9a91497_pushCompCmdClang(_200880c8a_StrBuilder* _10726_cmd) {
	_20088172a_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_20088172a_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _21a1bb7a9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ad7abed3:;
			{
				_20088172a_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ad7acd91:;
			{
				_20088172a_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad7ace07:;
			{
				_20088172a_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1ad7ac05a:;
	};
	_2008819d3_WriteByte(_10726_cmd, ' ');
	if (_21a1bc90e_Production) {
		_20088172a_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_20088172a_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_20088172a_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_20088172a_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_20088172a_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a9a916c8_pushCompCmdGcc(_200880c8a_StrBuilder* _13324_cmd) {
	_20088172a_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_20088172a_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _21a1bb7a9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ad7ae425:;
			{
				_20088172a_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ad7b0d50:;
			{
				_20088172a_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad7b0db6:;
			{
				_20088172a_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1ad7ae4ad:;
	};
	_2008819d3_WriteByte(_13324_cmd, ' ');
	if (_21a1bc90e_Production) {
		_20088172a_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_20088172a_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_20088172a_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_20088172a_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a9a91b5c_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a6439bac_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_21a1bb59a_CompilerPath);;
	_200880c8a_StrBuilder _1616_cmd = static__2008811b9_New(64LL);;
	{
		auto &_match_expr{ _21a1ba19d_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ad7b3a67:;
			{
				_1a9a916c8_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ad7b40a6:;
			{
				_1a9a91497_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1ad7b3d42:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7b435e:;
		if (it != expr_end) {
			jule::Ptr<_1a6817474_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1a9a91266_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_20088172a_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_2008819d3_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1ad7b435e:;
			++it;
			goto _iter_begin_1ad7b435e;
		}
		_iter_end_1ad7b435e:;
	};
	if (!(_1a9a90573_Out).empty()) {
		_20088172a_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_20088172a_WriteStr(&_1616_cmd, _1a9a90573_Out);
		_2008819d3_WriteByte(&_1616_cmd, ' ');
	};
	_20088172a_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad7b6d67:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_2008819d3_WriteByte(&_1616_cmd, ' ');
				_20088172a_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1ad7b6d67:;
			++it;
			goto _iter_begin_1ad7b6d67;
		}
		_iter_end_1ad7b6d67:;
	};
	if (_1d7ce0982_Os.equal("windows", 7)) {
		_20088172a_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _200882022_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a9a91ce4_getCompilePath(void) {
	return _1d96a8ada_Join(jule::Slice<jule::Str>::make({_1a9a8eece_OutDir,_1a9a902ba_OutName}));;
}



inline void _1a9a92025_applyTargetIndependentOptimizations(jule::Ptr<_1a6439bac_IR>* _20545_ir) {
	jule::Ptr<_1a86cba51_Optimizer> _2066_opt = static__1a86cbec4_New(_20545_ir);;
	_1a86cd5ad_Optimize(_2066_opt.ptr());
}



inline void _1a9a921bd_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _21a1ba19d_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ad7b9540:;
			{
				_1a8705a58_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ad7b9474:;
			{
				if ((_21a1bb59a_CompilerPath).empty()) {
					_21a1bb59a_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ad7b9155:;
			{
				if ((_21a1bb59a_CompilerPath).empty()) {
					_21a1bb59a_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1ad7b8c37:;
			{
				_1a8705a58_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _21a1ba19d_Compiler));
			}
		}
		_match_end_1ad7b8e8a:;
	};
}



inline void _1a9a923cc_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a8705a58_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a9a9260d_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a8705a58_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a9a9283e_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1a8705a58_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _1d96a2b06_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1a8705a58_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1a9a9260d_checkTargetOs(_2532_os);
		_1d7ce0982_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1a9a923cc_checkTargetArch(_2536_arch);
		_1d7ce0c3a_Arch=_2536_arch;
	};
	_1bd823721_UpdateTarget();
}



inline void _1a9a92a70_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1a8705a58_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1ad7c0e1a:;
			{
				goto _match_end_1ad7c0678;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1ad7c0eb4:;
			{
				_1a6462311_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1ad7c0766:;
			{
				_1a8705a58_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1ad7c0678:;
	};
}



inline void _1a9a92e38_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _21a1bb7a9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad7c1c73:;
			{
				goto _match_end_1ad7c1756;
			}
		}
		else {
			_case_begin_1ad7c0b51:;
			{
				_1a8705a58_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _21a1bb7a9_CppStd));
			}
		}
		_match_end_1ad7c1756:;
	};
}



inline jule::Slice<jule::Str> _1a9a93103_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a9a609a5_FlagSet> _2966_fs = static__1a9a60c91_New();;
	_1ad7c3648_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1ad7c3648_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1ad7c3648_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1a9a90573_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21a1bb9da_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21a1bbc93_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1ad7c3648_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_21a1ba19d_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1ad7c3648_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_21a1bb59a_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21a1bc90e_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21a1bc304_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21a1bc6bc_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1ad7c3648_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_21a1bb7a9_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a645e9e5_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a645ece2_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a646009a_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6460397_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6460650_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6460908_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6460bb1_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6461079_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a64612bb_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6461563_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a646181b_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6461ac4_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6461d7c_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1ad7ca991_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a6462135_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1a9a8b11d_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1a8705a58_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a9a921bd_checkCompilerFlag();
	_1a9a92e38_checkCppStdFlag();
	_1a9a9283e_checkTargetFlag(&(_2946_target));
	_1a9a92a70_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1a9a93312_setupSemaFlags(jule::I64* _33724_flags) {
	if (_21a1bb9da_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a6439bac_IR> _1a9a935cb_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1a9a93103_checkFlags(_34313_args);;
	jule::I64 _3466_semaFlags = static_cast<jule::I64>(0LL);;
	_1a9a93312_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1a8705a58_Throw(_1d974cc6c_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1a8705a58_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d96a913a_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1a8705a58_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_21a5d121d_Status> _3602_inf = ({
		auto except = static__1d96aadc8_Of(_1d7cdedd2_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a8705a58_Throw(_1d974cc6c_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_21a5d121d_Status>(nullptr);});
	});;
	if ((!(_21a5d15e7_IsDir(_3602_inf.ptr())))) {
		_1a8705a58_Throw(_1d974cc6c_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a6439bac_IR> _3686_ir;
	jule::Slice<_1d974c80a_Log> _36810_logs;
	({
		__jule_tuple_x_1a6439bac_IR__jule_tuple_s_1d974c80a_Log __jule_assign_result = static__1a643a152_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1a8705a58_Throw(_1d974cc6c_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3546_path, &__jule_any_type4)})));
	};
	if ((_36810_logs != nullptr)) {
		static__1a8705096_PrintLogs(&(_36810_logs));
		_1a8705a58_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1a9a9380c_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_21a1bc04b_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a6439bac_IR> _3896_ir = _1a9a935cb_buildIr(_38324_args);;
	;
	if ((!(_21a1bc04b_Test))) {
		jule::Ptr<_1a79a8328_Fn> _3947_main = _1a681b92e_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1a8705a58_Throw(_1d974cc6c_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a9a92025_applyTargetIndependentOptimizations(&(_3896_ir));
	_1a643b1b9_Order(_3896_ir);
	jule::Str _4052_compPath = _1a9a91ce4_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a9a91b5c_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a9e48563_ObjectCoder> _4086_oc = static__1a9e4895e_New(&(_3896_ir), _1a9e467b4_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_21a1bc04b_Test) {
		jule::Ptr<_1a9d8863a_TestCoder> _4137_tc = static__1a9d88aad_New(&(_4086_oc));;
		_1a9d89e33_Serialize(_4137_tc);
	} else {
		_1a9e55a8c_Serialize(_4086_oc);
	};
	jule::Ptr<_21a5ce0d9_File> _4196_file = _1a9a909e6_openOutput(&(_4052_compPath));;
	({
		auto except = _21a6de3a3_Write(_4196_file.ptr(), _2008829c3_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1a8705a58_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _21a5d066d_Close(_4196_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_21a1bbc93_Transpilation))) {
		_1a9a90e9c_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1d7ce0d7d_init();
	_1bd823897_init();
	_1d7ce6070_init();
	_1a9a9072c_init();

}

inline jule::Bool __jule_anon1ab8e5ea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79aa281_ParamIns> _24021_p1, jule::Ptr<_1a79aa281_ParamIns> _24036_p2) {
	if (((*((*(_24021_p1))._field_Decl))._field_Mutable != (*(*(_24036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a79a6e70_IsSelf((*(_24021_p1))._field_Decl)) {
		if ((!(_1a79a6e70_IsSelf((*(_24036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1a79a7206_IsRef((*(_24021_p1))._field_Decl) != _1a79a7206_IsRef((*(_24036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Reference != (*(*(_24036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_24036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a7a83106_Equal((*_24021_p1.alloc)._field_Kind, (*(_24036_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1ab23e00b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _50039_spkg) {
	jule::Ptr<__jule_anon_1ab23e00b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab23e00b_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49838_pkg))))._field_Path == (*(_50039_spkg))._field_Path);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab798730(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _8821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _8836_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab798730_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab798730_ctx>();
	return _1a79c4ec1__Name(__jule_closure_ctx.alloc->_self_, _8821_e, _8836_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab79a6cc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _9521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _9536_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab79a6cc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab79a6cc_ctx>();
	return _1a79c57b8__Public(__jule_closure_ctx.alloc->_self_, _9521_e, _9536_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab79c635(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _10221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _10236_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab79c635_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab79c635_ctx>();
	return _1a79c53bc__Type(__jule_closure_ctx.alloc->_self_, _10221_e, _10236_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7ae3d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _21121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _21136_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7ae3d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7ae3d3_ctx>();
	return _1a79c82c1__Name(__jule_closure_ctx.alloc->_self_, _21121_e, _21136_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7b133b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _21821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _21836_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7b133b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7b133b_ctx>();
	return _1a79c8ab8__Public(__jule_closure_ctx.alloc->_self_, _21821_e, _21836_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7b3294(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _22521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _22536_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7b3294_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7b3294_ctx>();
	return _1a79c86bc__Type(__jule_closure_ctx.alloc->_self_, _22521_e, _22536_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7c00b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _31321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _31336_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7c00b4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7c00b4_ctx>();
	return _1a79cb4d3__Name(__jule_closure_ctx.alloc->_self_, _31321_e, _31336_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7d4b34(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _43521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _43536_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7d4b34_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7d4b34_ctx>();
	return _1a79ce151__Name(__jule_closure_ctx.alloc->_self_, _43521_e, _43536_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7d6a8c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _44221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _44236_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7d6a8c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7d6a8c_ctx>();
	return _1a79ce948__Variadic(__jule_closure_ctx.alloc->_self_, _44221_e, _44236_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7d89e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _44921_e, jule::Ptr<_1a797a52b_FnCallExpr>* _44936_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7d89e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7d89e5_ctx>();
	return _1a79ced44__Reference(__jule_closure_ctx.alloc->_self_, _44921_e, _44936_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab7da94d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _45621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _45636_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab7da94d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7da94d_ctx>();
	return _1a79ce54c__Type(__jule_closure_ctx.alloc->_self_, _45621_e, _45636_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9c684d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _99821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _99836_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9c684d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9c684d_ctx>();
	return _1a79d3d8c__Str(__jule_closure_ctx.alloc->_self_, _99821_e, _99836_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9c87ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _100521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _100536_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9c87ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9c87ea_ctx>();
	return _1a79d4684__Bits(__jule_closure_ctx.alloc->_self_, _100521_e, _100536_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9ca753(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _101221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _101236_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9ca753_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9ca753_ctx>();
	return _1a79d4a80__Elem(__jule_closure_ctx.alloc->_self_, _101221_e, _101236_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9cc6ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _101921_e, jule::Ptr<_1a797a52b_FnCallExpr>* _101936_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9cc6ab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9cc6ab_ctx>();
	return _1a79d4e7b__Size(__jule_closure_ctx.alloc->_self_, _101921_e, _101936_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9ce614(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _102621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _102636_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9ce614_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9ce614_ctx>();
	return _1a79d5377__Key(__jule_closure_ctx.alloc->_self_, _102621_e, _102636_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d156c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _103321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _103336_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9d156c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d156c_ctx>();
	return _1a79d5773__Value(__jule_closure_ctx.alloc->_self_, _103321_e, _103336_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d34c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _104021_e, jule::Ptr<_1a797a52b_FnCallExpr>* _104036_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9d34c5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d34c5_ctx>();
	return _1a79d5b6e__Fields(__jule_closure_ctx.alloc->_self_, _104021_e, _104036_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d542d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _104721_e, jule::Ptr<_1a797a52b_FnCallExpr>* _104736_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9d542d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d542d_ctx>();
	return _1a79d606a__Statics(__jule_closure_ctx.alloc->_self_, _104721_e, _104736_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d74c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _105421_e, jule::Ptr<_1a797a52b_FnCallExpr>* _105436_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9d74c9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d74c9_ctx>();
	return _1a79d8e3b__Params(__jule_closure_ctx.alloc->_self_, _105421_e, _105436_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9d9432(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _106121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _106136_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9d9432_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9d9432_ctx>();
	return _1a79d7951__Types(__jule_closure_ctx.alloc->_self_, _106121_e, _106136_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9db38a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _106821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _106836_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9db38a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9db38a_ctx>();
	return _1a79d6466__Public(__jule_closure_ctx.alloc->_self_, _106821_e, _106836_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9dd2e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _107521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _107536_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9dd2e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9dd2e3_ctx>();
	return _1a79d6862__Binded(__jule_closure_ctx.alloc->_self_, _107521_e, _107536_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e024b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _108221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _108236_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9e024b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9e024b_ctx>();
	return _1a79d6c5d__Ordered(__jule_closure_ctx.alloc->_self_, _108221_e, _108236_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e21a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _108921_e, jule::Ptr<_1a797a52b_FnCallExpr>* _108936_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9e21a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9e21a4_ctx>();
	return _1a79d7159__Comparable(__jule_closure_ctx.alloc->_self_, _108921_e, _108936_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e410c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _109621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _109636_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9e410c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9e410c_ctx>();
	return _1a79d7555__Mutable(__jule_closure_ctx.alloc->_self_, _109621_e, _109636_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e6065(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _110321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _110336_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9e6065_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9e6065_ctx>();
	return _1a79d7d4c__Exceptional(__jule_closure_ctx.alloc->_self_, _110321_e, _110336_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e7ebd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _111021_e, jule::Ptr<_1a797a52b_FnCallExpr>* _111036_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9e7ebd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9e7ebd_ctx>();
	return _1a79d8248__CanNil(__jule_closure_ctx.alloc->_self_, _111021_e, _111036_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9e9e26(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _111721_e, jule::Ptr<_1a797a52b_FnCallExpr>* _111736_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9e9e26_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9e9e26_ctx>();
	return _1a79d8644__RC(__jule_closure_ctx.alloc->_self_, _111721_e, _111736_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9ebd7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _112421_e, jule::Ptr<_1a797a52b_FnCallExpr>* _112436_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9ebd7e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9ebd7e_ctx>();
	return _1a79d8a40__Result(__jule_closure_ctx.alloc->_self_, _112421_e, _112436_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1ab9edcd7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _113121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _113136_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1ab9edcd7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab9edcd7_ctx>();
	return _1a79d4288__Kind(__jule_closure_ctx.alloc->_self_, _113121_e, _113136_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba18d9b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _124721_e, jule::Ptr<_1a797a52b_FnCallExpr>* _124736_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba18d9b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba18d9b_ctx>();
	return _1a67ed955__Unwrap(__jule_closure_ctx.alloc->_self_, _124721_e, _124736_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba1ad04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _125421_e, jule::Ptr<_1a797a52b_FnCallExpr>* _125436_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba1ad04_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba1ad04_ctx>();
	return _1a67edd51__Type(__jule_closure_ctx.alloc->_self_, _125421_e, _125436_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba1cc5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _126121_e, jule::Ptr<_1a797a52b_FnCallExpr>* _126136_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba1cc5c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba1cc5c_ctx>();
	return _1a67ee24c__Lvalue(__jule_closure_ctx.alloc->_self_, _126121_e, _126136_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba1ebb5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _126821_e, jule::Ptr<_1a797a52b_FnCallExpr>* _126836_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba1ebb5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba1ebb5_ctx>();
	return _1a67ee648__Mutable(__jule_closure_ctx.alloc->_self_, _126821_e, _126836_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba21b1d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _127521_e, jule::Ptr<_1a797a52b_FnCallExpr>* _127536_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba21b1d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba21b1d_ctx>();
	return _1a67eea44__Const(__jule_closure_ctx.alloc->_self_, _127521_e, _127536_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba23a76(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _128221_e, jule::Ptr<_1a797a52b_FnCallExpr>* _128236_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba23a76_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba23a76_ctx>();
	return _1a67eee40__Field(__jule_closure_ctx.alloc->_self_, _128221_e, _128236_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba3654a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _139621_e, jule::Ptr<_1a797a52b_FnCallExpr>* _139636_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba3654a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba3654a_ctx>();
	return _1a6802aad__Path(__jule_closure_ctx.alloc->_self_, _139621_e, _139636_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba384a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _140321_e, jule::Ptr<_1a797a52b_FnCallExpr>* _140336_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba384a3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba384a3_ctx>();
	return _1a6802ea9__Name(__jule_closure_ctx.alloc->_self_, _140321_e, _140336_fc);;
}

inline jule::Ptr<_1a7a51503_Data> __jule_anon_1aba3a40b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a5322a_Eval>* _141021_e, jule::Ptr<_1a797a52b_FnCallExpr>* _141036_fc, jule::Ptr<_1a7a51503_Data>* ) {
	jule::Ptr<__jule_anon_1aba3a40b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba3a40b_ctx>();
	return _1a68033a5__Dir(__jule_closure_ctx.alloc->_self_, _141021_e, _141036_fc);;
}

inline jule::Bool __jule_anon_1aba45e3e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6837818_Sema>* _6415_sema, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1aba45e3e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aba45e3e_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba46eea:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1a797e6c8_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a7a81016_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1aba46eea;
				};
				(*(_669_generic))._field_Constraint=jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba49c67:;
					if (it != expr_end) {
						jule::Ptr<_1a79724bd_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a7a828ec_TypeKind> _7310_kind = _1a68403d1_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a7aa24dd_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type74) {
										_case_begin_1aba4ba5a:;
										{
											jule::Ptr<_1a7972ac8_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a7972ac8_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a6807d7c_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(_1a7a9e81a_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data20)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1aba4e6b7;
											};
										}
									}
									_match_end_1aba4b9e4:;
								};
								return false;;
							};
							_julec_label_1aba4e6b7:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1a7a828ec_TypeKind>>::make({_7310_kind}));
						}
						_iter_next_1aba49c67:;
						++it;
						goto _iter_begin_1aba49c67;
					}
					_iter_end_1aba49c67:;
				};
			}
			_iter_next_1aba46eea:;
			++it;
			_659_i++;
			goto _iter_begin_1aba46eea;
		}
		_iter_end_1aba46eea:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1abc37c68(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6837818_Sema>* _110537_sema, jule::Slice<jule::Ptr<_1a7a81b0a_TypeAlias>>* _110555_generics) {
	jule::Ptr<__jule_anon_1abc37c68_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abc37c68_ctx>();
	jule::Bool _11068_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc3920e:;
		if (it != expr_end) {
			jule::Ptr<_1a79aa281_ParamIns> _110716_p = *it;
			{
				if (_1a79a6e70_IsSelf((*(_110716_p))._field_Decl.ptr())) {
					if (_1a79a7206_IsRef((*(_110716_p))._field_Decl)) {
						(*_110716_p.alloc)._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a7a8e002_Sptr>(_1a7a8e002_Sptr{._field_Elem=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data21)});
					} else {
						(*_110716_p.alloc)._field_Kind=jule::new_ptr<_1a7a828ec_TypeKind>(_1a7a828ec_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a7a82446_Kind_mptr_data0)});
					};
				} else {
					(*(_110716_p))._field_Kind=_1a684157a_buildTypeWithGenerics((*(_110537_sema)), &((*((*((*_110716_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110555_generics)), (*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Refers);
					if (((*_110716_p.alloc)._field_Kind != nullptr)) {
						_1a6846096_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_110716_p));
					} else {
						_11068_ok=false;
					};
				};
			}
			_iter_next_1abc3920e:;
			++it;
			goto _iter_begin_1abc3920e;
		}
		_iter_end_1abc3920e:;
	};
	if ((!(_1a79a879b_IsVoid((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Result=_1a684157a_buildTypeWithGenerics((*(_110537_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_110137_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110555_generics)), (*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Refers);
		_11068_ok=(((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Result != nullptr) && _11068_ok);
	};
	return _11068_ok;;
}

inline jule::Bool __jule_anon_1ac3844d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _183143_imp) {
	jule::Ptr<__jule_anon_1ac3844d5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac3844d5_ctx>();
	if ((((*__jule_closure_ctx.alloc->_182931_s.alloc)._field_Ns.len() == 1LL) && ((*(_183143_imp))._field_Alias == __jule_closure_ctx.alloc->_18303_path))) {
		return true;;
	};
	return (((*_183143_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18303_path) && _1a681a08c_isAccessibleViaSelection(_183143_imp));;
}

inline jule::Str __jule_anon1ac60082d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84719_def) {
	{
		auto &_match_expr{ (*(_84719_def)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac6018ea:;
			{
				return (*((*(_84719_def)).cast_ptr<_1a7a81b0a_TypeAlias>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac60171e:;
			{
				return (*((*(_84719_def)).cast_ptr<_1a7993357_Struct>(&__jule_any_type64)))._field_Ident;;
			}
		}
		else {
			_case_begin_1ac6012e0:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac60128a:;
	};
}

inline jule::Bool __jule_anon_1ac67b931(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _151943_imp) {
	jule::Ptr<__jule_anon_1ac67b931_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac67b931_ctx>();
	if ((((*__jule_closure_ctx.alloc->_151736_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151943_imp))._field_Alias == __jule_closure_ctx.alloc->_15183_path))) {
		return true;;
	};
	return (((*_151943_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15183_path) && _1a681a08c_isAccessibleViaSelection(_151943_imp));;
}

inline void __jule_anon_1acea3279(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1acea3279_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acea3279_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1acea3bb4:;
			{
				jule::Ptr<_1a799c4b5_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1a86c695d_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1acea3a1b:;
			{
				jule::Ptr<_1a799d2eb_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1a799d2eb_AnonFnExprModel>(&__jule_any_type100);;
				_1a86c9400_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1acea3b4d:;
	};
}

inline void __jule_anon_1ad125770(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55147_m) {
	jule::Ptr<__jule_anon_1ad125770_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad125770_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_55147_m));
	};
	{
		auto &_match_expr{ (*(_55147_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ad1260de:;
			{
				{
					_1a645437a_binary(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799a4d5_BinaryExprModel>(&__jule_any_type111));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ad126342:;
			{
				{
					_1a6454633_unary(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799a8ae_UnaryExprModel>(&__jule_any_type110));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ad126155:;
			{
				{
					_1a64548db_structureLit(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799b283_StructLitExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad1261bb:;
			{
				{
					_1a6454b94_casting(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799bb13_CastingExprModel>(&__jule_any_type93));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad126232:;
			{
				{
					_1a6455568_funcCall(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799c4b5_FnCallExprModel>(&__jule_any_type33));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad126a4b:;
			{
				{
					_1a6455821_indexing(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799cd45_IndexingExprModel>(&__jule_any_type44));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad126ab2:;
			{
				{
					_1a6455ac9_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a799d2eb_AnonFnExprModel>(&__jule_any_type100));
				};
			}
		}
		_match_end_1ad126001:;
	};
}

inline void __jule_anon_1ad25a278(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad25a278_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad25a278_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1ad25dc3d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad25dc3d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad25dc3d_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1ad26d214(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad26d214_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad26d214_ctx>();
	_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1ad270689(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad270689_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad270689_ctx>();
	_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1ad2893b7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad2893b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad2893b7_ctx>();
	_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1ad308c3e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad308c3e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad308c3e_ctx>();
	_1a9e48c17_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1ad30a04d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad30a04d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad30a04d_ctx>();
	_1a9d7b177_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_63330_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1ad37a1de(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a685a682_Var> _100967_v) {
	jule::Ptr<__jule_anon_1ad37a1de_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad37a1de_ctx>();
	return _1a9d75319_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_100334_m), &(_100967_v));;
}

inline void __jule_anon_1ad668433(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _82738_pkg) {
	jule::Ptr<__jule_anon_1ad668433_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad668433_ctx>();
	_1a643c72b_IterFiles(_82738_pkg, jule::__new_closure<void,jule::Ptr<_1a7a4b18a_SymbolTable>*>((void*)__jule_anon_1ad669335, jule::Ptr<__jule_anon_1ad669335_ctx>::make(__jule_anon_1ad669335_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad669335_ctx_handler));
}

inline void __jule_anon_1ad66990c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn>* _84036_m) {
	jule::Ptr<__jule_anon_1ad66990c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad66990c_ctx>();
	jule::Ptr<_1a79ab309_FnIns> _8418_ins = (*((*(_84036_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_8418_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad66caa8:;
		if (it != expr_end) {
			jule::I64 _8429_i = it - expr.begin();
			jule::Ptr<_1a79aa281_ParamIns> _84216_ip = *it;
			{
				if (_1a795ebb4_IsAnonIdent((*((*(_84216_ip))._field_Decl))._field_Ident)) {
					(*(*(_84216_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1bd81e354_Itoa(_8429_i));
				};
			}
			_iter_next_1ad66caa8:;
			++it;
			_8429_i++;
			goto _iter_begin_1ad66caa8;
		}
		_iter_end_1ad66caa8:;
	};
	_1a9e4a93e_pushResult(__jule_closure_ctx.alloc->_self_, _84036_m);
	_1a9e4eb85_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _84036_m);
}

inline void __jule_anon_1ad66eeea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _85338_pkg) {
	jule::Ptr<__jule_anon_1ad66eeea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad66eeea_ctx>();
	_1a643c72b_IterFiles(_85338_pkg, jule::__new_closure<void,jule::Ptr<_1a7a4b18a_SymbolTable>*>((void*)__jule_anon_1ad670dec, jule::Ptr<__jule_anon_1ad670dec_ctx>::make(__jule_anon_1ad670dec_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad670dec_ctx_handler));
}

inline void __jule_anon_1ad680a55(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad680a55_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad680a55_ctx>();
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a9d85a44_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1ad682b56(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad682b56_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad682b56_ctx>();
	_1a9d7b177_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1ad685373(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad685373_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad685373_ctx>();
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1ad6864ea(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ad6864ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6864ea_ctx>();
	_1a9d85cec_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92024_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1ad6a4639(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _106238_pkg) {
	jule::Ptr<__jule_anon_1ad6a4639_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6a4639_ctx>();
	_1a643c72b_IterFiles(_106238_pkg, jule::__new_closure<void,jule::Ptr<_1a7a4b18a_SymbolTable>*>((void*)__jule_anon_1ad6a553b, jule::Ptr<__jule_anon_1ad6a553b_ctx>::make(__jule_anon_1ad6a553b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad6a553b_ctx_handler));
}

inline void __jule_anon_1ad6a59c0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn>* _107736_m) {
	jule::Ptr<__jule_anon_1ad6a59c0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6a59c0_ctx>();
	_1a9e495b9_indent(__jule_closure_ctx.alloc->_self_);
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1a9d8c6a5_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _107736_m);
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1a79ab309_FnIns> _10824_mepf;
	jule::Bool _108210_exist;
	({
		__jule_tuple_x_1a79ab309_FnIns__jule_tuple_bool __jule_assign_result = _1a9e525c2_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _107736_m);
		_10824_mepf = __jule_assign_result.__jule_result_arg0;
		_108210_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_108210_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1084:5"));;
	};
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10824_mepf)), 15LL));
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, _1bd81dbc2_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_107649_s)), 15LL));
	_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1ad6b32c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _111438_pkg) {
	jule::Ptr<__jule_anon_1ad6b32c4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6b32c4_ctx>();
	_1a643c72b_IterFiles(_111438_pkg, jule::__new_closure<void,jule::Ptr<_1a7a4b18a_SymbolTable>*>((void*)__jule_anon_1ad6b41c6, jule::Ptr<__jule_anon_1ad6b41c6_ctx>::make(__jule_anon_1ad6b41c6_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad6b41c6_ctx_handler));
}

inline void __jule_anon_1ad6d1259(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _123938_pkg) {
	jule::Ptr<__jule_anon_1ad6d1259_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6d1259_ctx>();
	_1a643c72b_IterFiles(_123938_pkg, jule::__new_closure<void,jule::Ptr<_1a7a4b18a_SymbolTable>*>((void*)__jule_anon_1ad6d215b, jule::Ptr<__jule_anon_1ad6d215b_ctx>::make(__jule_anon_1ad6d215b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ad6d215b_ctx_handler));
}

inline void __jule_anon_1ad6d2733(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _125531_file) {
	jule::Ptr<__jule_anon_1ad6d2733_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6d2733_ctx>();
	{
		auto expr = &((*((*(_125531_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6d567b:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _125611_f = *it;
			{
				if ((*(_125611_f))._field_Ident.equal("init", 4)) {
					_1a9e495b9_indent(__jule_closure_ctx.alloc->_self_);
					static__1a9d8c6a5_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_125611_f));
					_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1ad6d567b:;
			++it;
			goto _iter_begin_1ad6d567b;
		}
		_iter_end_1ad6d567b:;
	};
}

inline void __jule_anon_1ad6da50a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a681a39a_Package>* _128438_pkg) {
	jule::Ptr<__jule_anon_1ad6da50a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6da50a_ctx>();
	_1a9e54c34_pushInit(__jule_closure_ctx.alloc->_self_, _128438_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1ad76d7e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1bd80c9d5_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1ad7766a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1bd80c52e_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1ab78badb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a6817474_ImportInfo> _143025_pkg) {
	return (*(_143025_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1ad669335(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _82832_file) {
	jule::Ptr<__jule_anon_1ad669335_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad669335_ctx>();
	{
		auto expr = &((*((*(_82832_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad669cb4:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _82917_f = *it;
			{
				if (((!((*(_82917_f))._field_Binded)) && ((*_82917_f.alloc)._field_Token != nullptr))) {
					_1a9e4a93e_pushResult(__jule_closure_ctx.alloc->_self_, &(_82917_f));
					_1a9e4e8cc_funcDecl(__jule_closure_ctx.alloc->_self_, &(_82917_f), false);
				};
			}
			_iter_next_1ad669cb4:;
			++it;
			goto _iter_begin_1ad669cb4;
		}
		_iter_end_1ad669cb4:;
	};
}

inline void __jule_anon_1ad670dec(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _85432_file) {
	jule::Ptr<__jule_anon_1ad670dec_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad670dec_ctx>();
	{
		auto expr = &((*((*(_85432_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad67187b:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _85517_t = *it;
			{
				if ((((*(_85517_t))._field_Token == nullptr) || ((*_85517_t.alloc)._field_Implemented.len() == 0LL))) {
					goto _iter_next_1ad67187b;
				};
				_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1a9d8cc7c_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _85517_t);
				_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1a9e491bd_addIndent(__jule_closure_ctx.alloc->_self_);
				_1a9e495b9_indent(__jule_closure_ctx.alloc->_self_);
				_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a9e5013b_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_85517_t));
				_1a9e493bb_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1a9e495b9_indent(__jule_closure_ctx.alloc->_self_);
				_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1ad67187b:;
			++it;
			goto _iter_begin_1ad67187b;
		}
		_iter_end_1ad67187b:;
	};
}

inline void __jule_anon_1ad6a553b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _106332_file) {
	jule::Ptr<__jule_anon_1ad6a553b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6a553b_ctx>();
	{
		auto expr = &((*((*(_106332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6a5eba:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _106417_t = *it;
			{
				if (((*(_106417_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1ad6a5eba;
				};
				_1a643d298_IterTraitMethods(&(_106417_t), jule::__new_closure<void,jule::Ptr<_1a79a8328_Fn>*>((void*)__jule_anon_1ad6a74d8, jule::Ptr<__jule_anon_1ad6a74d8_ctx>::make(__jule_anon_1ad6a74d8_ctx{._self_=__jule_closure_ctx.alloc->_self_,._106417_t=_106417_t}).as<jule::Uintptr>(), __jule_anon_1ad6a74d8_ctx_handler));
			}
			_iter_next_1ad6a5eba:;
			++it;
			goto _iter_begin_1ad6a5eba;
		}
		_iter_end_1ad6a5eba:;
	};
}

inline void __jule_anon_1ad6b41c6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _111532_file) {
	jule::Ptr<__jule_anon_1ad6b41c6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6b41c6_ctx>();
	{
		auto expr = &((*((*(_111532_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6b4b55:;
		if (it != expr_end) {
			jule::Ptr<_1a79bb6d2_Trait> _111617_t = *it;
			{
				jule::I64 _111710_i = 0LL;;
				{
					auto expr = &((*(_111617_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6b5969:;
					if (it != expr_end) {
						jule::Ptr<_1a7993357_Struct> _111818_s = *it;
						{
							{
								auto expr = &((*(_111818_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad6b631b:;
								if (it != expr_end) {
									jule::Ptr<_1a79960d5_StructIns> _111919_ins = *it;
									{
										_1a9e533b4_traitData(__jule_closure_ctx.alloc->_self_, &(_111617_t), _111710_i, &(_111919_ins));
										(_111710_i)++;
									}
									_iter_next_1ad6b631b:;
									++it;
									goto _iter_begin_1ad6b631b;
								}
								_iter_end_1ad6b631b:;
							};
						}
						_iter_next_1ad6b5969:;
						++it;
						goto _iter_begin_1ad6b5969;
					}
					_iter_end_1ad6b5969:;
				};
			}
			_iter_next_1ad6b4b55:;
			++it;
			goto _iter_begin_1ad6b4b55;
		}
		_iter_end_1ad6b4b55:;
	};
}

inline void __jule_anon_1ad6d215b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a7a4b18a_SymbolTable>* _124032_file) {
	jule::Ptr<__jule_anon_1ad6d215b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6d215b_ctx>();
	{
		auto expr = &((*((*(_124032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6d2ada:;
		if (it != expr_end) {
			jule::Ptr<_1a79a8328_Fn> _124117_f = *it;
			{
				if (((!(_21a1bc04b_Test)) && _1a6447769_HasDirective(&((*(_124117_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1ad6d2ada;
				};
				if (((!((*_124117_f.alloc)._field_Binded)) && ((*_124117_f.alloc)._field_Token != nullptr))) {
					_1a9e51e1d_func(__jule_closure_ctx.alloc->_self_, &(_124117_f));
					_1a9e48c17_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ad6d2ada:;
			++it;
			goto _iter_begin_1ad6d2ada;
		}
		_iter_end_1ad6d2ada:;
	};
}

inline void __jule_anon_1ad6a74d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a79a8328_Fn>* _106839_m) {
	jule::Ptr<__jule_anon_1ad6a74d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad6a74d8_ctx>();
	_1a9e52935_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_106417_t), _106839_m);
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}