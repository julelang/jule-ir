// Auto generated by JuleC.
// JuleC version: jule0.0.11 @master
// Date: 10/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1be270546_Importer{};
struct _1be3d417c_Kind{};
struct _1be3eedce_Lookup{};
struct _1aa3ad665_CommonFlag{};
struct _200ba6588_accept_range;
struct _201b81dae_Range16;
struct _201b82332_Range32;
struct _201b827a5_RangeTable;
struct _200c9307b_LazyBuff;
struct _1eedea426_DirEntry;
struct _1eedec15e_Directory;
struct _200ad484b_File;
struct _200ad4c14_Status;
struct _201c35bcc_Cmd;
struct _201be0d52_Log;
struct _20201c3d1_Token;
struct _20202276b_File;
struct _2020247c3_KindPair;
struct _20202a400_Lex;
struct _1d705abdc_Ast;
struct _1d705b968_Node;
struct _1d705bd64_Directive;
struct _1d709023d_TypeDecl;
struct _1d7090804_IdentTypeDecl;
struct _1d7090e53_SubIdentTypeDecl;
struct _1d709130a_NamespaceTypeDecl;
struct _1d70915e6_SptrTypeDecl;
struct _1d70919e2_SlcTypeDecl;
struct _1d7091ccd_TupleTypeDecl;
struct _1d70920b9_PtrTypeDecl;
struct _1d709274b_ArrTypeDecl;
struct _1d7092e99_MapTypeDecl;
struct _1d7093351_RetTypeDecl;
struct _1d709475e_Expr;
struct _1d7094a4a_RangeExpr;
struct _1d7095100_UseExpr;
struct _1d70953db_TupleExpr;
struct _1d7095793_LitExpr;
struct _1d7095e9c_UnsafeExpr;
struct _1d7096354_CoExpr;
struct _1d70967c7_IdentExpr;
struct _1d7096ed1_UnaryExpr;
struct _1d7097388_VariadicExpr;
struct _1d7097740_CastExpr;
struct _1d7097ae7_NsSelectionExpr;
struct _1d709806a_SubIdentExpr;
struct _1d70984dd_BinopExpr;
struct _1d7098ae8_FnCallExpr;
struct _1d7099577_FieldExprPair;
struct _1d7099cc5_StructLit;
struct _1d709a248_BraceLit;
struct _1d709ac60_KeyValPair;
struct _1d709b1d3_SliceExpr;
struct _1d709ba74_IndexingExpr;
struct _1d709c17e_SlicingExpr;
struct _1d709c536_GenericDecl;
struct _1d709c8dd_LabelSt;
struct _1d709cc95_GotoSt;
struct _1d709d081_FallSt;
struct _1d709d68b_AssignLeft;
struct _1d709dbca_AssignSt;
struct _1d709eb65_Stmt;
struct _1d70a0270_ScopeTree;
struct _1d70a0946_ParamDecl;
struct _1d70a1c66_FnDecl;
struct _1d70a2c45_VarDecl;
struct _1d70a30ec_RetSt;
struct _1d70a375c_Iter;
struct _1d70a4032_WhileKind;
struct _1d70a48c3_RangeKind;
struct _1d70a4c7a_BreakSt;
struct _1d70a5132_ContSt;
struct _1d70a55a5_If;
struct _1d70a595c_Else;
struct _1d70a5dd0_Conditional;
struct _1d70a65a6_TypeAliasDecl;
struct _1d70a6a29_Case;
struct _1d70a7200_MatchCase;
struct _1d70a7992_UseDecl;
struct _1d70a7e15_EnumItemDecl;
struct _1d70a893d_EnumDecl;
struct _1d70a9444_TypeEnumItemDecl;
struct _1d70a9a4e_TypeEnumDecl;
struct _1d70a9c4c_FieldDecl;
struct _1d70aa500_StructDecl;
struct _1d70aab0a_TraitDecl;
struct _1d70ab215_Impl;
struct _1bdbe553d_FloatInfo;
struct _1bdae6175_DecimalSlice;
struct _1be126980_LeftCheat;
struct _1be126ce3_Decimal;
struct _1be159e14_Const;
struct _1d7080926_Field;
struct _1d7082351_Operators;
struct _1d7073276_Struct;
struct _1d708808d_FieldIns;
struct _1d70abbb6_OperandExprModel;
struct _1d70abda3_BinopExprModel;
struct _1bc9c45c6_UnaryExprModel;
struct _1bc9c47b3_StructArgExprModel;
struct _1bc9c49a0_StructLitExprModel;
struct _1bc9c4b8c_AllocStructLitExprModel;
struct _1bc9c4d79_CastingExprModel;
struct _1bc9c5066_FnCallExprModel;
struct _1bc9c5253_SliceExprModel;
struct _1bc9c5440_IndexingExprModel;
struct _1bc9c562c_AnonFnExprModel;
struct _1bc9c5819_KeyValPairExprModel;
struct _1bc9c5a06_MapExprModel;
struct _1bc9c5be3_SlicingExprModel;
struct _1bc9c5dd0_TraitSubIdentExprModel;
struct _1bc9c62ed_StructSubIdentExprModel;
struct _1bc9c64da_StructStaticIdentExprModel;
struct _1bc9c66c7_ArrayExprModel;
struct _1bc9c68b4_CommonIdentExprModel;
struct _1bc9c6aa1_CommonSubIdentExprModel;
struct _1bc9c6c8d_TupleExprModel;
struct _1bc9c6e7a_BuiltinOutCallExprModel;
struct _1bc9c7167_BuiltinOutlnCallExprModel;
struct _1bc9c7354_BuiltinCloneCallExprModel;
struct _1bc9c7541_BuiltinNewCallExprModel;
struct _1bc9c772d_BuiltinPanicCallExprModel;
struct _1bc9c791a_BuiltinAssertCallExprModel;
struct _1bc9c7b07_BuiltinMakeCallExprModel;
struct _1bc9c7ce4_BuiltinAppendCallExprModel;
struct _1bc9c7ed1_BuiltinCopyCallExprModel;
struct _1bc9c81bd_BuiltinErrorCallExprModel;
struct _1bc9c60bc_SizeofExprModel;
struct _1bc9c882d_AlignofExprModel;
struct _1bc9c8a1a_RuneExprModel;
struct _1bc9c8c07_IntegratedToStrExprModel;
struct _1bc9c8de4_BackendEmitExprModel;
struct _1bc9c90d1_FreeExprModel;
struct _1bc9c9499_RetType;
struct _1bc9c9686_Param;
struct _1bc9c9873_Fn;
struct _1bc9c9a60_ParamIns;
struct _1bc9c9c4c_FnIns;
struct _1bc9cb402_ReferenceStack;
struct _1bc9cc7bb_Pass;
struct _1bc9d1c65_SymbolBuilder;
struct _1bd929d66_Trait;
struct _1bcb66966_EnumItem;
struct _1bc9dceb3_Enum;
struct _1bcb58ddc_TypeEnumItem;
struct _1bd9c99a4_TypeEnum;
struct _1bcac892d_Impl;
struct _1be1ca25e_Scope;
struct _1be2437b1_If;
struct _1be249c6d_Else;
struct _1be25830e_Conditional;
struct _1be2584eb_InfIter;
struct _1be2586d8_WhileIter;
struct _1be2588c5_RangeIter;
struct _1be258ab2_ContSt;
struct _1be258c9e_BreakSt;
struct _1be258e8b_Label;
struct _1be259178_GotoSt;
struct _1be259365_Postfix;
struct _1be259552_Assign;
struct _1be25973e_MultiAssign;
struct _1be25992b_Match;
struct _1be259d49_Case;
struct _1be25a036_FallSt;
struct _1be25a223_RetSt;
struct _1be25a410_ScopeLabel;
struct _1be25a5ec_ScopeGoto;
struct _1be25aee3_ScopeChecker;
struct _1be26c136_DirectiveChecker;
struct _1be272d40_ImportInfo;
struct _1be275c99_Package;
struct _1be348311_Sema;
struct _1be360988_MissingRetChecker;
struct _1be3626e3_IterRelation;
struct _1be36365b_Var;
struct _1be364184_FuncPattern;
struct _1be394bed_TypeCompatibilityChecker;
struct _1be396826_AssignTypeChecker;
struct _1be398174_DynamicTypeAnnotation;
struct _1be39ae35_FnCallArgChecker;
struct _1be39d83e_StructLitChecker;
struct _1be3a0423_RangeChecker;
struct _1be3a25ac_RetTypeChecker;
struct _1be3a4339_SymbolTable;
struct _1be3a92d9_Data;
struct _1be3aa362_Value;
struct _1be3aad57_Eval;
struct _1be3c659d_UnaryEval;
struct _1be3c833b_BinaryEval;
struct _1be3d3874_TypeAlias;
struct _1be3d45ab_TypeKind;
struct _1be3d86c0_TypeSymbol;
struct _1be3d9083_Prim;
struct _1be3dc592_Sptr;
struct _1be3dceee_Slc;
struct _1be3dd9e4_Tuple;
struct _1be3de5a5_Map;
struct _1be3e0199_Arr;
struct _1be3e0b06_Ptr;
struct _1be3e1a4c_Referencer;
struct _1be3e2795_TypeChecker;
struct _1be3e9ea6_IdentTypeLookup;
struct _1a8ed48b9_FileInfo;
struct _1a902d9e0_stmt;
struct _1a902e31a_ScopeParser;
struct _1a903a8dc_CallData;
struct _1a903bd72_ExprBuilder;
struct _1a9047102_AssignInfo;
struct _1a904a28c_Parser;
struct _1a905b666_TypeBuilder;
struct _1c0186516_CompileInfo;
struct _1c0187869_DirectiveEval;
struct _1a8add45c_JuleImporter;
struct _1d6983e2e_OrderedDefines;
struct _1a901a57b_DefineOrderer;
struct _1a9105b72_LiveTable;
struct _1a9109cca_ScopeDeadCode;
struct _1a910d99e_ExprDeadCode;
struct _1be48e7a9_UnsafeBinopExprModel;
struct _1be48eac8_UnsafeIndexingExprModel;
struct _1be48ee91_PushToSliceExprModel;
struct _1be490557_MutSlicingExprModel;
struct _1be4908ed_StrInsertBeginExprModel;
struct _1be491a75_ScopeOptimizer;
struct _1be4971a7_ExprOptimizer;
struct _1a90d5b1e_Optimizer;
struct _1a912096c_AnsiEscape;
struct _1a9121e8a_Logger;
struct _1aa38819a_AbsTime;
struct _1aa38883d_Time;
struct _1aa3123aa_ScopeCoder;
struct _1aa319a00_ExprCoder;
struct _1aa327b73_DeriveCoder;
struct _1aa3290a3_TestCoder;
struct _1aa32b704_IdentCoder;
struct _1aa38db62_SerializationInfo;
struct _1aa38dd4e_TraitHash;
struct _1aa394aad_CustomType;
struct _1aa3953a5_TypeCoder;
struct _1acd50049_Flag;
struct _1acd53ba7_Flag;
struct _1acd57639_Flag;
struct _1acd5b110_Flag;
struct _1acd5ea92_Flag;
struct _1aa3e4d83_FlagSet;
struct _1a8900659_IR;
struct _1d70ab9c9_StructIns;
struct _1a9105e3b_ObjectDeadCode;
struct _1aa38e03b_ObjectCoder;
struct _1aa3e755b_ArgParser;
struct _200ba6588_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_200ba6588_accept_range(void) = default;

	inline bool operator==(_200ba6588_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_200ba6588_accept_range _other) { return !this->operator==(_other); }


};
struct _201b81dae_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_201b81dae_Range16(void) = default;

	inline bool operator==(_201b81dae_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_201b81dae_Range16 _other) { return !this->operator==(_other); }


};
struct _201b82332_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_201b82332_Range32(void) = default;

	inline bool operator==(_201b82332_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_201b82332_Range32 _other) { return !this->operator==(_other); }


};
struct _201b827a5_RangeTable {
	jule::Slice<_201b81dae_Range16> _field_r16 = jule::Slice<_201b81dae_Range16>();
	jule::Slice<_201b82332_Range32> _field_r32 = jule::Slice<_201b82332_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_201b827a5_RangeTable(void) = default;

	inline bool operator==(_201b827a5_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_201b827a5_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _200c93543_index(_200c9307b_LazyBuff*, jule::I64);
inline void _200c98a54_append(_200c9307b_LazyBuff*, jule::U8);
inline jule::Str _200c998bd_string(_200c9307b_LazyBuff*);
struct _200c9307b_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_200c9307b_LazyBuff(void) = default;

	inline bool operator==(_200c9307b_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_200c9307b_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1eedea426_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_200ad4c14_Status> _field_stat = jule::Ptr<_200ad4c14_Status>();
	

	_1eedea426_DirEntry(void) = default;

	inline bool operator==(_1eedea426_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1eedea426_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1eedea426_DirEntry>>> static__200bbb14c_read(jule::Str);
inline jule::VoidExceptional static__200c21092_create(jule::Str);
inline jule::VoidExceptional static__200cca338_remove(jule::Str);
struct _1eedec15e_Directory {
	

	_1eedec15e_Directory(void) = default;

	inline bool operator==(_1eedec15e_Directory _other) { return true; }

	inline bool operator!=(_1eedec15e_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_200ad484b_File> static__1eedd6ad8_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_200ad484b_File>> static__1eedd9aec_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1eedeae71_read(jule::Str);
inline jule::VoidExceptional static__1eedeb14c_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1eedee68e_seek(_200ad484b_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _1eedec34b_close(_200ad484b_File*);
inline jule::Exceptional<jule::Ptr<_200ad484b_File>> static__200b3cce4_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__200b68c43_remove(jule::Str);
inline jule::Exceptional<jule::I64> _200b79ade_write(_200ad484b_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _200b3e08c_read(_200ad484b_File*, jule::Slice<jule::U8>);
struct _200ad484b_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_200ad484b_File(void) = default;

	inline bool operator==(_200ad484b_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_200ad484b_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _1eed19972_is_dir(_200ad4c14_Status*);
inline jule::Bool _1eed196db_is_reg(_200ad4c14_Status*);
inline jule::Exceptional<jule::Ptr<_200ad4c14_Status>> static__200ccda01_of(jule::Str);
struct _200ad4c14_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_200ad4c14_Status(void) = default;

	inline bool operator==(_200ad4c14_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_200ad4c14_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_201c35bcc_Cmd> static__201c3610b_new(jule::Str);
inline jule::Exceptional<jule::I64> _201c36370_spawn(_201c35bcc_Cmd*);
inline jule::Exceptional<jule::I64> _201c461d7___spawn(_201c35bcc_Cmd*);
struct _201c35bcc_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_201c35bcc_Cmd(void) = default;

	inline bool operator==(_201c35bcc_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_201c35bcc_Cmd _other) { return !this->operator==(_other); }


};
struct _201be0d52_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_201be0d52_Log(void) = default;

	inline bool operator==(_201be0d52_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_201be0d52_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _20201c788_prec(_20201c3d1_Token*);
struct _20201c3d1_Token {
	jule::Ptr<_20202276b_File> _field_file = jule::Ptr<_20202276b_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_20201c3d1_Token(void) = default;

	inline bool operator==(_20201c3d1_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20201c3d1_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _202022b78_is_ok(_20202276b_File*);
inline void _202022ded_fill(_20202276b_File*, jule::Slice<jule::U8>);
inline jule::Str _202023162_dir(_20202276b_File*);
inline jule::Str _2020233c6_name(_20202276b_File*);
inline jule::Uintptr _20202363a_addr(_20202276b_File*);
inline jule::Str _202023948_get_row(_20202276b_File*, jule::I64);
struct _20202276b_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	

	_20202276b_File(void) = default;

	inline bool operator==(_20202276b_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_20202276b_File _other) { return !this->operator==(_other); }


};
struct _2020247c3_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_2020247c3_KindPair(void) = default;

	inline bool operator==(_2020247c3_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2020247c3_KindPair _other) { return !this->operator==(_other); }


};
inline void _20202a994_push_err(_20202a400_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _20202acb3_push_err_tok(_20202a400_Lex*, jule::Ptr<_20201c3d1_Token>&, jule::Str);
inline void _20202ae8e_lex(_20202a400_Lex*);
inline jule::Str _20202b29c_id(_20202a400_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _20202b511_resume(_20202a400_Lex*);
inline void _20202b786_lex_line_comment(_20202a400_Lex*, jule::Ptr<_20201c3d1_Token>&);
inline void _20202ba0b_lex_range_comment(_20202a400_Lex*, jule::Ptr<_20201c3d1_Token>&);
inline jule::Str _20202bd19_num(_20202a400_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _20202c127_escape_seq(_20202a400_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _20202c4ce_get_rune(_20202a400_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _20202c7dc_lex_rune(_20202a400_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _20202ca51_lex_str(_20202a400_Lex*);
inline jule::Bool _20202ccb5_is_first_token_of_line(_20202a400_Lex*);
inline void _20202ce91_new_line(_20202a400_Lex*);
inline jule::Bool _20202d48b_is_op(_20202a400_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _20202d843_lex_basic_ops(_20202a400_Lex*, jule::Slice<jule::U8>, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _20202dbea_lex_id(_20202a400_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _20202e0a2_lex_num(_20202a400_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Ptr<_20201c3d1_Token> _20202e316_token(_20202a400_Lex*);
struct _20202a400_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Ptr<_20202276b_File> _field_file = jule::Ptr<_20202276b_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_201be0d52_Log> _field_errors = jule::Slice<_201be0d52_Log>();
	

	_20202a400_Lex(void) = default;

	inline bool operator==(_20202a400_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_20202a400_Lex _other) { return !this->operator==(_other); }


};
struct _1d705abdc_Ast {
	jule::Ptr<_20202276b_File> _field_file = jule::Ptr<_20202276b_File>();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Slice<jule::Ptr<_1d70a7992_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1d70a7992_UseDecl>>();
	jule::Slice<_1d705b968_Node> _field_nodes = jule::Slice<_1d705b968_Node>();
	

	_1d705abdc_Ast(void) = default;

	inline bool operator==(_1d705abdc_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1d705abdc_Ast _other) { return !this->operator==(_other); }


};
struct _1d705b968_Node {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_data = jule::Any();
	

	_1d705b968_Node(void) = default;

	inline bool operator==(_1d705b968_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d705b968_Node _other) { return !this->operator==(_other); }


};
struct _1d705bd64_Directive {
	jule::Ptr<_20201c3d1_Token> _field_tag = jule::Ptr<_20201c3d1_Token>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_args = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	

	_1d705bd64_Directive(void) = default;

	inline bool operator==(_1d705bd64_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1d705bd64_Directive _other) { return !this->operator==(_other); }


};
struct _1d709023d_TypeDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1d709023d_TypeDecl(void) = default;

	inline bool operator==(_1d709023d_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d709023d_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7090b67_is_prim(_1d7090804_IdentTypeDecl*);
struct _1d7090804_IdentTypeDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d709023d_TypeDecl>>();
	

	_1d7090804_IdentTypeDecl(void) = default;

	inline bool operator==(_1d7090804_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d7090804_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7090e53_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1d7090804_IdentTypeDecl>> _field_idents = jule::Slice<jule::Ptr<_1d7090804_IdentTypeDecl>>();
	

	_1d7090e53_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1d7090e53_SubIdentTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d7090e53_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d709130a_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_idents = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d709130a_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1d709130a_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d709130a_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d70915e6_SptrTypeDecl {
	jule::Ptr<_1d709023d_TypeDecl> _field_elem = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d70915e6_SptrTypeDecl(void) = default;

	inline bool operator==(_1d70915e6_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d70915e6_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d70919e2_SlcTypeDecl {
	jule::Ptr<_1d709023d_TypeDecl> _field_elem = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d70919e2_SlcTypeDecl(void) = default;

	inline bool operator==(_1d70919e2_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d70919e2_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7091ccd_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1d709023d_TypeDecl>>();
	

	_1d7091ccd_TupleTypeDecl(void) = default;

	inline bool operator==(_1d7091ccd_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1d7091ccd_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d709241b_is_unsafe(_1d70920b9_PtrTypeDecl*);
struct _1d70920b9_PtrTypeDecl {
	jule::Ptr<_1d709023d_TypeDecl> _field_elem = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d70920b9_PtrTypeDecl(void) = default;

	inline bool operator==(_1d70920b9_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d70920b9_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7092b25_auto_sized(_1d709274b_ArrTypeDecl*);
struct _1d709274b_ArrTypeDecl {
	jule::Ptr<_1d709023d_TypeDecl> _field_elem = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709475e_Expr> _field_size = jule::Ptr<_1d709475e_Expr>();
	

	_1d709274b_ArrTypeDecl(void) = default;

	inline bool operator==(_1d709274b_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d709274b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7092e99_MapTypeDecl {
	jule::Ptr<_1d709023d_TypeDecl> _field_key = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709023d_TypeDecl> _field_val = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d7092e99_MapTypeDecl(void) = default;

	inline bool operator==(_1d7092e99_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1d7092e99_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7093351_RetTypeDecl {
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_idents = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	

	_1d7093351_RetTypeDecl(void) = default;

	inline bool operator==(_1d7093351_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d7093351_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d709475e_Expr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1d709475e_Expr(void) = default;

	inline bool operator==(_1d709475e_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d709475e_Expr _other) { return !this->operator==(_other); }


};
struct _1d7094a4a_RangeExpr {
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7094a4a_RangeExpr(void) = default;

	inline bool operator==(_1d7094a4a_RangeExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7094a4a_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1d7095100_UseExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7095100_UseExpr(void) = default;

	inline bool operator==(_1d7095100_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7095100_UseExpr _other) { return !this->operator==(_other); }


};
struct _1d70953db_TupleExpr {
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_expr = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	

	_1d70953db_TupleExpr(void) = default;

	inline bool operator==(_1d70953db_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d70953db_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7095ae5_is_nil(_1d7095793_LitExpr*);
struct _1d7095793_LitExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_value = jule::Str();
	

	_1d7095793_LitExpr(void) = default;

	inline bool operator==(_1d7095793_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1d7095793_LitExpr _other) { return !this->operator==(_other); }


};
struct _1d7095e9c_UnsafeExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7095e9c_UnsafeExpr(void) = default;

	inline bool operator==(_1d7095e9c_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7095e9c_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1d7096354_CoExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7096354_CoExpr(void) = default;

	inline bool operator==(_1d7096354_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7096354_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7096b29_is_self(_1d70967c7_IdentExpr*);
struct _1d70967c7_IdentExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1d70967c7_IdentExpr(void) = default;

	inline bool operator==(_1d70967c7_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1d70967c7_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1d7096ed1_UnaryExpr {
	jule::Ptr<_20201c3d1_Token> _field_op = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7096ed1_UnaryExpr(void) = default;

	inline bool operator==(_1d7096ed1_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7096ed1_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1d7097388_VariadicExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7097388_VariadicExpr(void) = default;

	inline bool operator==(_1d7097388_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7097388_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1d7097740_CastExpr {
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7097740_CastExpr(void) = default;

	inline bool operator==(_1d7097740_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7097740_CastExpr _other) { return !this->operator==(_other); }


};
struct _1d7097ae7_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_ns = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Ptr<_20201c3d1_Token> _field_ident = jule::Ptr<_20201c3d1_Token>();
	

	_1d7097ae7_NsSelectionExpr(void) = default;

	inline bool operator==(_1d7097ae7_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d7097ae7_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1d709806a_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_20201c3d1_Token> _field_ident = jule::Ptr<_20201c3d1_Token>();
	

	_1d709806a_SubIdentExpr(void) = default;

	inline bool operator==(_1d709806a_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d709806a_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1d70984dd_BinopExpr {
	jule::Ptr<_1d709475e_Expr> _field_left = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d709475e_Expr> _field_right = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_20201c3d1_Token> _field_op = jule::Ptr<_20201c3d1_Token>();
	

	_1d70984dd_BinopExpr(void) = default;

	inline bool operator==(_1d70984dd_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d70984dd_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7098e5b_unhandled(_1d7098ae8_FnCallExpr*);
inline jule::Bool _1d70991c0_ignored(_1d7098ae8_FnCallExpr*);
struct _1d7098ae8_FnCallExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d709023d_TypeDecl>>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_args = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_exception = jule::Ptr<_1d70a0270_ScopeTree>();
	

	_1d7098ae8_FnCallExpr(void) = default;

	inline bool operator==(_1d7098ae8_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1d7098ae8_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70998c9_is_targeted(_1d7099577_FieldExprPair*);
struct _1d7099577_FieldExprPair {
	jule::Ptr<_20201c3d1_Token> _field_field = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d7099577_FieldExprPair(void) = default;

	inline bool operator==(_1d7099577_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7099577_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1d7099cc5_StructLit {
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	

	_1d7099cc5_StructLit(void) = default;

	inline bool operator==(_1d7099cc5_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d7099cc5_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d709a8b9_is_empty(_1d709a248_BraceLit*);
struct _1d709a248_BraceLit {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	

	_1d709a248_BraceLit(void) = default;

	inline bool operator==(_1d709a248_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d709a248_BraceLit _other) { return !this->operator==(_other); }


};
struct _1d709ac60_KeyValPair {
	jule::Ptr<_1d709475e_Expr> _field_key = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d709475e_Expr> _field_val = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_20201c3d1_Token> _field_colon = jule::Ptr<_20201c3d1_Token>();
	

	_1d709ac60_KeyValPair(void) = default;

	inline bool operator==(_1d709ac60_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1d709ac60_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d709b535_is_empty(_1d709b1d3_SliceExpr*);
struct _1d709b1d3_SliceExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	

	_1d709b1d3_SliceExpr(void) = default;

	inline bool operator==(_1d709b1d3_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d709b1d3_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1d709ba74_IndexingExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d709475e_Expr> _field_index = jule::Ptr<_1d709475e_Expr>();
	

	_1d709ba74_IndexingExpr(void) = default;

	inline bool operator==(_1d709ba74_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1d709ba74_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1d709c17e_SlicingExpr {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d709475e_Expr> _field_start = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d709475e_Expr> _field_to = jule::Ptr<_1d709475e_Expr>();
	

	_1d709c17e_SlicingExpr(void) = default;

	inline bool operator==(_1d709c17e_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1d709c17e_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1d709c536_GenericDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1d709c536_GenericDecl(void) = default;

	inline bool operator==(_1d709c536_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d709c536_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1d709c8dd_LabelSt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1d709c8dd_LabelSt(void) = default;

	inline bool operator==(_1d709c8dd_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d709c8dd_LabelSt _other) { return !this->operator==(_other); }


};
struct _1d709cc95_GotoSt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_label = jule::Ptr<_20201c3d1_Token>();
	

	_1d709cc95_GotoSt(void) = default;

	inline bool operator==(_1d709cc95_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d709cc95_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d709d081_FallSt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	

	_1d709d081_FallSt(void) = default;

	inline bool operator==(_1d709d081_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1d709d081_FallSt _other) { return !this->operator==(_other); }


};
struct _1d709d68b_AssignLeft {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d709d68b_AssignLeft(void) = default;

	inline bool operator==(_1d709d68b_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d709d68b_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1d709dbca_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_20201c3d1_Token> _field_setter = jule::Ptr<_20201c3d1_Token>();
	jule::Slice<jule::Ptr<_1d709d68b_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1d709d68b_AssignLeft>>();
	jule::Ptr<_1d709475e_Expr> _field_right = jule::Ptr<_1d709475e_Expr>();
	

	_1d709dbca_AssignSt(void) = default;

	inline bool operator==(_1d709dbca_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1d709dbca_AssignSt _other) { return !this->operator==(_other); }


};
struct _1d709eb65_Stmt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_data = jule::Any();
	

	_1d709eb65_Stmt(void) = default;

	inline bool operator==(_1d709eb65_Stmt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d709eb65_Stmt _other) { return !this->operator==(_other); }


};
struct _1d70a0270_ScopeTree {
	jule::Ptr<_1d70a0270_ScopeTree> _field_parent = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1d709eb65_Stmt> _field_stmts = jule::Slice<_1d709eb65_Stmt>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	

	_1d70a0270_ScopeTree(void) = default;

	inline bool operator==(_1d70a0270_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d70a0270_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70a0ca9_is_self(_1d70a0946_ParamDecl*);
inline jule::Bool _1d70a101d_is_ref(_1d70a0946_ParamDecl*);
struct _1d70a0946_ParamDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1d70a0946_ParamDecl(void) = default;

	inline bool operator==(_1d70a0946_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d70a0946_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70a20b8_is_anon(_1d70a1c66_FnDecl*);
struct _1d70a1c66_FnDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>();
	jule::Ptr<_1d7093351_RetTypeDecl> _field_result = jule::Ptr<_1d7093351_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>>();
	

	_1d70a1c66_FnDecl(void) = default;

	inline bool operator==(_1d70a1c66_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1d70a1c66_FnDecl _other) { return !this->operator==(_other); }


};
struct _1d70a2c45_VarDecl {
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d70a2c45_VarDecl(void) = default;

	inline bool operator==(_1d70a2c45_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d70a2c45_VarDecl _other) { return !this->operator==(_other); }


};
struct _1d70a30ec_RetSt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d70a30ec_RetSt(void) = default;

	inline bool operator==(_1d70a30ec_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d70a30ec_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70a3aae_is_inf(_1d70a375c_Iter*);
struct _1d70a375c_Iter {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	

	_1d70a375c_Iter(void) = default;

	inline bool operator==(_1d70a375c_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d70a375c_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70a4384_is_while_next(_1d70a4032_WhileKind*);
struct _1d70a4032_WhileKind {
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_20201c3d1_Token> _field_next_token = jule::Ptr<_20201c3d1_Token>();
	

	_1d70a4032_WhileKind(void) = default;

	inline bool operator==(_1d70a4032_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1d70a4032_WhileKind _other) { return !this->operator==(_other); }


};
struct _1d70a48c3_RangeKind {
	jule::Ptr<_20201c3d1_Token> _field_in_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d70a2c45_VarDecl> _field_key_a = jule::Ptr<_1d70a2c45_VarDecl>();
	jule::Ptr<_1d70a2c45_VarDecl> _field_key_b = jule::Ptr<_1d70a2c45_VarDecl>();
	

	_1d70a48c3_RangeKind(void) = default;

	inline bool operator==(_1d70a48c3_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1d70a48c3_RangeKind _other) { return !this->operator==(_other); }


};
struct _1d70a4c7a_BreakSt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_label = jule::Ptr<_20201c3d1_Token>();
	

	_1d70a4c7a_BreakSt(void) = default;

	inline bool operator==(_1d70a4c7a_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d70a4c7a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d70a5132_ContSt {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_label = jule::Ptr<_20201c3d1_Token>();
	

	_1d70a5132_ContSt(void) = default;

	inline bool operator==(_1d70a5132_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d70a5132_ContSt _other) { return !this->operator==(_other); }


};
struct _1d70a55a5_If {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	

	_1d70a55a5_If(void) = default;

	inline bool operator==(_1d70a55a5_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d70a55a5_If _other) { return !this->operator==(_other); }


};
struct _1d70a595c_Else {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	

	_1d70a595c_Else(void) = default;

	inline bool operator==(_1d70a595c_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d70a595c_Else _other) { return !this->operator==(_other); }


};
struct _1d70a5dd0_Conditional {
	jule::Ptr<_1d70a55a5_If> _field_head = jule::Ptr<_1d70a55a5_If>();
	jule::Slice<jule::Ptr<_1d70a55a5_If>> _field_tail = jule::Slice<jule::Ptr<_1d70a55a5_If>>();
	jule::Ptr<_1d70a595c_Else> _field_default = jule::Ptr<_1d70a595c_Else>();
	

	_1d70a5dd0_Conditional(void) = default;

	inline bool operator==(_1d70a5dd0_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d70a5dd0_Conditional _other) { return !this->operator==(_other); }


};
struct _1d70a65a6_TypeAliasDecl {
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d70a65a6_TypeAliasDecl(void) = default;

	inline bool operator==(_1d70a65a6_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d70a65a6_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1d70a6a29_Case {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	

	_1d70a6a29_Case(void) = default;

	inline bool operator==(_1d70a6a29_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d70a6a29_Case _other) { return !this->operator==(_other); }


};
struct _1d70a7200_MatchCase {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Slice<jule::Ptr<_1d70a6a29_Case>> _field_cases = jule::Slice<jule::Ptr<_1d70a6a29_Case>>();
	jule::Ptr<_1d70a595c_Else> _field_default = jule::Ptr<_1d70a595c_Else>();
	

	_1d70a7200_MatchCase(void) = default;

	inline bool operator==(_1d70a7200_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d70a7200_MatchCase _other) { return !this->operator==(_other); }


};
struct _1d70a7992_UseDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_selected = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1d70a7992_UseDecl(void) = default;

	inline bool operator==(_1d70a7992_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1d70a7992_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70a8267_auto_expr(_1d70a7e15_EnumItemDecl*);
struct _1d70a7e15_EnumItemDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	

	_1d70a7e15_EnumItemDecl(void) = default;

	inline bool operator==(_1d70a7e15_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d70a7e15_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70a8ec1_default_typed(_1d70a893d_EnumDecl*);
struct _1d70a893d_EnumDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	

	_1d70a893d_EnumDecl(void) = default;

	inline bool operator==(_1d70a893d_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d70a893d_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1d70a9444_TypeEnumItemDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	

	_1d70a9444_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1d70a9444_TypeEnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d70a9444_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1d70a9a4e_TypeEnumDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	

	_1d70a9a4e_TypeEnumDecl(void) = default;

	inline bool operator==(_1d70a9a4e_TypeEnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d70a9a4e_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1d70a9c4c_FieldDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d709023d_TypeDecl> _field_kind = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709475e_Expr> _field_default = jule::Ptr<_1d709475e_Expr>();
	

	_1d70a9c4c_FieldDecl(void) = default;

	inline bool operator==(_1d70a9c4c_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d70a9c4c_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1d70aa500_StructDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>();
	

	_1d70aa500_StructDecl(void) = default;

	inline bool operator==(_1d70aa500_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d70aa500_StructDecl _other) { return !this->operator==(_other); }


};
struct _1d70aab0a_TraitDecl {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>>();
	

	_1d70aab0a_TraitDecl(void) = default;

	inline bool operator==(_1d70aab0a_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1d70aab0a_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70ab578_is_trait_impl(_1d70ab215_Impl*);
inline jule::Bool _1d70ab7dc_is_struct_impl(_1d70ab215_Impl*);
struct _1d70ab215_Impl {
	jule::Ptr<_20201c3d1_Token> _field_end = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d709023d_TypeDecl> _field_base = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709023d_TypeDecl> _field_dest = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>>();
	jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>>();
	

	_1d70ab215_Impl(void) = default;

	inline bool operator==(_1d70ab215_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1d70ab215_Impl _other) { return !this->operator==(_other); }


};
struct _1bdbe553d_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1bdbe553d_FloatInfo(void) = default;

	inline bool operator==(_1bdbe553d_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1bdbe553d_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1bdae6175_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1bdae6175_DecimalSlice(void) = default;

	inline bool operator==(_1bdae6175_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1bdae6175_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1be126980_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1be126980_LeftCheat(void) = default;

	inline bool operator==(_1be126980_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1be126980_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bdde94de_set(_1be126ce3_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1bde3c994_float_bits(_1be126ce3_Decimal*, _1bdbe553d_FloatInfo&);
inline void _1be126ed0_assign(_1be126ce3_Decimal*, jule::U64);
inline void _1be127112_shift(_1be126ce3_Decimal*, jule::I64);
inline void _1be127244_round_down(_1be126ce3_Decimal*, jule::I64);
inline void _1be127376_round_up(_1be126ce3_Decimal*, jule::I64);
inline void _1be1274a8_round(_1be126ce3_Decimal*, jule::I64);
inline jule::U64 _1be1275da_rounded_integer(_1be126ce3_Decimal*);
struct _1be126ce3_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1be126ce3_Decimal(void) = default;

	inline bool operator==(_1be126ce3_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1be126ce3_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be159e14_Const> static__1be1b2532_new_i64(jule::I64);
inline jule::Ptr<_1be159e14_Const> static__1be1b2664_new_u64(jule::U64);
inline jule::Ptr<_1be159e14_Const> static__1be1b2796_new_bool(jule::Bool);
inline jule::Ptr<_1be159e14_Const> static__1be1b29c7_new_str(jule::Str);
inline jule::Ptr<_1be159e14_Const> static__1be1b2c6e_new_f64(jule::F64);
inline jule::Ptr<_1be159e14_Const> static__1be1b2e6c_new_nil(void);
inline jule::I64 _1be1b3566_read_i64(_1be159e14_Const*);
inline jule::U64 _1be1b37ca_read_u64(_1be159e14_Const*);
inline jule::Bool _1be1b3a3e_read_bool(_1be159e14_Const*);
inline jule::Str _1be1b3ca3_read_str(_1be159e14_Const*);
inline jule::F64 _1be1b4017_read_f64(_1be159e14_Const*);
inline jule::I64 _1be1b427b_as_i64(_1be159e14_Const*);
inline jule::U64 _1be1b44e0_as_u64(_1be159e14_Const*);
inline jule::F64 _1be1b4754_as_f64(_1be159e14_Const*);
inline void _1be1b49c9_set_i64(_1be159e14_Const*, jule::I64);
inline void _1be1b4c4e_set_u64(_1be159e14_Const*, jule::U64);
inline void _1be1b4ec4_set_bool(_1be159e14_Const*, jule::Bool);
inline void _1be1b5249_set_str(_1be159e14_Const*, jule::Str);
inline void _1be1b54be_set_f64(_1be159e14_Const*, jule::F64);
inline void _1be1b569a_set_nil(_1be159e14_Const*);
inline jule::Bool _1be1b590e_is_i64(_1be159e14_Const*);
inline jule::Bool _1be1b5b73_is_u64(_1be159e14_Const*);
inline jule::Bool _1be1b5dd7_is_bool(_1be159e14_Const*);
inline jule::Bool _1be1b614b_is_str(_1be159e14_Const*);
inline jule::Bool _1be1b63b0_is_f64(_1be159e14_Const*);
inline jule::Bool _1be1b6624_is_nil(_1be159e14_Const*);
inline jule::Bool _1be1b6932_are_same_types(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b6c40_and(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b704d_or(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b735b_eq(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b7669_lt(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b7977_lt_eq(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b7c85_gt(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b8093_gt_eq(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b83a1_add(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b86ae_sub(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b89bc_mul(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b8cca_div(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b90d8_mod(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b93e6_bitwise_and(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b9704_bitwise_or(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b9a12_xor(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1b9d20_lshift(_1be159e14_Const*, _1be159e14_Const);
inline jule::Bool _1be1ba12d_rshift(_1be159e14_Const*, _1be159e14_Const);
struct _1be159e14_Const {
	jule::Any _field_data = jule::Any();
	

	_1be159e14_Const(void) = default;

	inline jule::Bool operator==(_1be159e14_Const _other) { return _1be1b735b_eq(this, _other); }

	inline bool operator!=(_1be159e14_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1be159e14_Const _other) { return _1be1b7c85_gt(this, _other); }

	inline jule::Bool operator>=(_1be159e14_Const _other) { return _1be1b8093_gt_eq(this, _other); }

	inline jule::Bool operator<(_1be159e14_Const _other) { return _1be1b7669_lt(this, _other); }

	inline jule::Bool operator<=(_1be159e14_Const _other) { return _1be1b7977_lt_eq(this, _other); }


};
inline jule::Ptr<_1d708808d_FieldIns> _1d7062056_instance(jule::Ptr<_1d7080926_Field>);
struct _1d7080926_Field {
	jule::Ptr<_1d7073276_Struct> _field_owner = jule::Ptr<_1d7073276_Struct>();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	jule::Ptr<_1d709475e_Expr> _field_default = jule::Ptr<_1d709475e_Expr>();
	

	_1d7080926_Field(void) = default;

	inline bool operator==(_1d7080926_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d7080926_Field _other) { return !this->operator==(_other); }


};
struct _1d7082351_Operators {
	jule::Ptr<_1bc9c9c4c_FnIns> _field_eq = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_gt = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_gt_eq = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_lt = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_lt_eq = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_shl = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_shr = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_add = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_sub = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_div = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_mul = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_mod = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_and = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_or = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_xor = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_neg = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_pos = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_not = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_add_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_sub_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_div_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_mul_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_mod_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_shl_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_shr_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_or_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_and_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_bit_xor_assign = jule::Ptr<_1bc9c9c4c_FnIns>();
	

	_1d7082351_Operators(void) = default;

	inline bool operator==(_1d7082351_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1d7082351_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d70ab9c9_StructIns> _1d706814a_instance(jule::Ptr<_1d7073276_Struct>);
inline jule::Ptr<_1d70ab9c9_StructIns> _1d706c3b3_append_instance(_1d7073276_Struct*, jule::Ptr<_1d70ab9c9_StructIns>&);
inline jule::Ptr<_1bc9c9873_Fn> _1d706d11c_find_method(_1d7073276_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1be36365b_Var> _1d7070372_find_static(_1d7073276_Struct*, jule::Str);
inline jule::Ptr<_1d7080926_Field> _1d7071384_find_field(_1d7073276_Struct*, jule::Str);
inline jule::Bool _1d70707c3_is_implements(_1d7073276_Struct*, jule::Ptr<_1bd929d66_Trait>);
inline jule::Bool _1d7072aa0_is_derives(_1d7073276_Struct*, jule::Str);
inline jule::Bool _1d7071eab_is_uses(_1d7073276_Struct*, jule::Ptr<_1d7073276_Struct>);
inline jule::Bool _1d70736c7_has_ref_accessible(_1d7073276_Struct*);
struct _1d7073276_Struct {
	jule::Ptr<_1be348311_Sema> _field_sema = jule::Ptr<_1be348311_Sema>();
	jule::Slice<jule::Ptr<_1d7073276_Struct>> _field_depends = jule::Slice<jule::Ptr<_1d7073276_Struct>>();
	jule::Slice<jule::Ptr<_1d7073276_Struct>> _field_uses = jule::Slice<jule::Ptr<_1d7073276_Struct>>();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d7080926_Field>> _field_fields = jule::Slice<jule::Ptr<_1d7080926_Field>>();
	jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _field_methods = jule::Slice<jule::Ptr<_1bc9c9873_Fn>>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_statics = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>();
	jule::Slice<jule::Ptr<_1bd929d66_Trait>> _field_implements = jule::Slice<jule::Ptr<_1bd929d66_Trait>>();
	jule::Slice<jule::Ptr<_1d70ab9c9_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1d70ab9c9_StructIns>>();
	

	_1d7073276_Struct(void) = default;

	inline bool operator==(_1d7073276_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1d7073276_Struct _other) { return !this->operator==(_other); }


};
struct _1d708808d_FieldIns {
	jule::Ptr<_1d7080926_Field> _field_decl = jule::Ptr<_1d7080926_Field>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be3a92d9_Data> _field_default = jule::Ptr<_1be3a92d9_Data>();
	

	_1d708808d_FieldIns(void) = default;

	inline bool operator==(_1d708808d_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d708808d_FieldIns _other) { return !this->operator==(_other); }


};
struct _1d70abbb6_OperandExprModel {
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1d70abbb6_OperandExprModel(void) = default;

	inline bool operator==(_1d70abbb6_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d70abbb6_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1d70abda3_BinopExprModel {
	jule::Ptr<_1d70abbb6_OperandExprModel> _field_left = jule::Ptr<_1d70abbb6_OperandExprModel>();
	jule::Ptr<_1d70abbb6_OperandExprModel> _field_right = jule::Ptr<_1d70abbb6_OperandExprModel>();
	jule::Ptr<_20201c3d1_Token> _field_op = jule::Ptr<_20201c3d1_Token>();
	

	_1d70abda3_BinopExprModel(void) = default;

	inline bool operator==(_1d70abda3_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d70abda3_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c45c6_UnaryExprModel {
	jule::Ptr<_1be3a92d9_Data> _field_expr = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_20201c3d1_Token> _field_op = jule::Ptr<_20201c3d1_Token>();
	

	_1bc9c45c6_UnaryExprModel(void) = default;

	inline bool operator==(_1bc9c45c6_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1bc9c45c6_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c47b3_StructArgExprModel {
	jule::Ptr<_1d708808d_FieldIns> _field_field = jule::Ptr<_1d708808d_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1bc9c47b3_StructArgExprModel(void) = default;

	inline bool operator==(_1bc9c47b3_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c47b3_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c49a0_StructLitExprModel {
	jule::Ptr<_1d70ab9c9_StructIns> _field_strct = jule::Ptr<_1d70ab9c9_StructIns>();
	jule::Slice<jule::Ptr<_1bc9c47b3_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1bc9c47b3_StructArgExprModel>>();
	

	_1bc9c49a0_StructLitExprModel(void) = default;

	inline bool operator==(_1bc9c49a0_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1bc9c49a0_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c4b8c_AllocStructLitExprModel {
	jule::Ptr<_1bc9c49a0_StructLitExprModel> _field_lit = jule::Ptr<_1bc9c49a0_StructLitExprModel>();
	

	_1bc9c4b8c_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1bc9c4b8c_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1bc9c4b8c_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c4d79_CastingExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_expr_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1bc9c4d79_CastingExprModel(void) = default;

	inline bool operator==(_1bc9c4d79_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1bc9c4d79_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5066_FnCallExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_func = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1be1ca25e_Scope> _field_except = jule::Ptr<_1be1ca25e_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1bc9c5066_FnCallExprModel(void) = default;

	inline bool operator==(_1bc9c5066_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1bc9c5066_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5253_SliceExprModel {
	jule::Ptr<_1be3d45ab_TypeKind> _field_elem_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1bc9c5253_SliceExprModel(void) = default;

	inline bool operator==(_1bc9c5253_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1bc9c5253_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5440_IndexingExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1be3a92d9_Data> _field_expr = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_1be3a92d9_Data> _field_index = jule::Ptr<_1be3a92d9_Data>();
	

	_1bc9c5440_IndexingExprModel(void) = default;

	inline bool operator==(_1bc9c5440_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1bc9c5440_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c562c_AnonFnExprModel {
	jule::Ptr<_1bc9c9c4c_FnIns> _field_func = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1bc9c562c_AnonFnExprModel(void) = default;

	inline bool operator==(_1bc9c562c_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1bc9c562c_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5819_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1bc9c5819_KeyValPairExprModel(void) = default;

	inline bool operator==(_1bc9c5819_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1bc9c5819_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5a06_MapExprModel {
	jule::Ptr<_1be3d45ab_TypeKind> _field_key_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_val_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Slice<jule::Ptr<_1bc9c5819_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1bc9c5819_KeyValPairExprModel>>();
	

	_1bc9c5a06_MapExprModel(void) = default;

	inline bool operator==(_1bc9c5a06_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1bc9c5a06_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5be3_SlicingExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1bc9c5be3_SlicingExprModel(void) = default;

	inline bool operator==(_1bc9c5be3_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1bc9c5be3_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c5dd0_TraitSubIdentExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1bc9c9873_Fn> _field_method = jule::Ptr<_1bc9c9873_Fn>();
	jule::Ptr<_1bd929d66_Trait> _field_trt = jule::Ptr<_1bd929d66_Trait>();
	

	_1bc9c5dd0_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1bc9c5dd0_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1bc9c5dd0_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c62ed_StructSubIdentExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1be3a92d9_Data> _field_expr = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_expr_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_method = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1d708808d_FieldIns> _field_field = jule::Ptr<_1d708808d_FieldIns>();
	

	_1bc9c62ed_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1bc9c62ed_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1bc9c62ed_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c64da_StructStaticIdentExprModel {
	jule::Ptr<_1d70ab9c9_StructIns> _field_structure = jule::Ptr<_1d70ab9c9_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_method = jule::Ptr<_1bc9c9c4c_FnIns>();
	

	_1bc9c64da_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1bc9c64da_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1bc9c64da_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c66c7_ArrayExprModel {
	jule::Ptr<_1be3e0199_Arr> _field_kind = jule::Ptr<_1be3e0199_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1bc9c66c7_ArrayExprModel(void) = default;

	inline bool operator==(_1bc9c66c7_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1bc9c66c7_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c68b4_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1bc9c68b4_CommonIdentExprModel(void) = default;

	inline bool operator==(_1bc9c68b4_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1bc9c68b4_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c6aa1_CommonSubIdentExprModel {
	jule::Ptr<_1be3d45ab_TypeKind> _field_expr_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1bc9c6aa1_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1bc9c6aa1_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1bc9c6aa1_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c6c8d_TupleExprModel {
	jule::Slice<jule::Ptr<_1be3a92d9_Data>> _field_datas = jule::Slice<jule::Ptr<_1be3a92d9_Data>>();
	

	_1bc9c6c8d_TupleExprModel(void) = default;

	inline bool operator==(_1bc9c6c8d_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1bc9c6c8d_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c6e7a_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1bc9c6e7a_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1bc9c6e7a_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1bc9c6e7a_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7167_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1bc9c7167_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1bc9c7167_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1bc9c7167_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7354_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1bc9c7354_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1bc9c7354_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c7354_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7541_BuiltinNewCallExprModel {
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1bc9c7541_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1bc9c7541_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1bc9c7541_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c772d_BuiltinPanicCallExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1bc9c772d_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1bc9c772d_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c772d_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c791a_BuiltinAssertCallExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1bc9c791a_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1bc9c791a_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1bc9c791a_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7b07_BuiltinMakeCallExprModel {
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1bc9c7b07_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1bc9c7b07_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1bc9c7b07_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7ce4_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1bc9c7ce4_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1bc9c7ce4_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1bc9c7ce4_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c7ed1_BuiltinCopyCallExprModel {
	jule::Ptr<_1be3a92d9_Data> _field_dest = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_1be3a92d9_Data> _field_src = jule::Ptr<_1be3a92d9_Data>();
	

	_1bc9c7ed1_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1bc9c7ed1_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1bc9c7ed1_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c81bd_BuiltinErrorCallExprModel {
	jule::Ptr<_1bc9c9c4c_FnIns> _field_func = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1bc9c81bd_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1bc9c81bd_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1bc9c81bd_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c60bc_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1bc9c60bc_SizeofExprModel(void) = default;

	inline bool operator==(_1bc9c60bc_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c60bc_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c882d_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1bc9c882d_AlignofExprModel(void) = default;

	inline bool operator==(_1bc9c882d_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c882d_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c8a1a_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1bc9c8a1a_RuneExprModel(void) = default;

	inline bool operator==(_1bc9c8a1a_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1bc9c8a1a_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c8c07_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1bc9c8c07_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1bc9c8c07_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c8c07_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c8de4_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1bc9c8de4_BackendEmitExprModel(void) = default;

	inline bool operator==(_1bc9c8de4_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1bc9c8de4_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c90d1_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1bc9c90d1_FreeExprModel(void) = default;

	inline bool operator==(_1bc9c90d1_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1bc9c90d1_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1bc9c9499_RetType {
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_idents = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	

	_1bc9c9499_RetType(void) = default;

	inline bool operator==(_1bc9c9499_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1bc9c9499_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bc9c9a60_ParamIns> _1d7086de4_instance(jule::Ptr<_1bc9c9686_Param>);
inline jule::Bool _1d708990d_is_self(_1bc9c9686_Param*);
inline jule::Bool _1d7061462_is_ref(_1bc9c9686_Param*);
struct _1bc9c9686_Param {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1bc9c9686_Param(void) = default;

	inline bool operator==(_1bc9c9686_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1bc9c9686_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d70884de_is_void(_1bc9c9873_Fn*);
inline jule::Bool _1d70615d8_is_method(_1bc9c9873_Fn*);
inline jule::Bool _1d7063475_is_entry_point(_1bc9c9873_Fn*);
inline jule::Bool _1d706926c_is_init(_1bc9c9873_Fn*);
inline jule::Bool _1d706a8cd_is_anon(_1bc9c9873_Fn*);
inline jule::Bool _1d7075ba2_any_var(_1bc9c9873_Fn*);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1d707cbba_instance_force(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1d707ec77_instance(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1d708c768_append_instance(_1bc9c9873_Fn*, jule::Ptr<_1bc9c9c4c_FnIns>&);
struct _1bc9c9873_Fn {
	jule::Ptr<_1be348311_Sema> _field_sema = jule::Ptr<_1be348311_Sema>();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>();
	jule::Ptr<_1bc9c9499_RetType> _field_result = jule::Ptr<_1bc9c9499_RetType>();
	jule::Slice<jule::Ptr<_1bc9c9686_Param>> _field_params = jule::Slice<jule::Ptr<_1bc9c9686_Param>>();
	jule::Ptr<_1d7073276_Struct> _field_owner = jule::Ptr<_1d7073276_Struct>();
	jule::Slice<jule::Ptr<_1bc9c9c4c_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1bc9c9c4c_FnIns>>();
	

	_1bc9c9873_Fn(void) = default;

	inline bool operator==(_1bc9c9873_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1bc9c9873_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1d707d935_to_str(_1bc9c9a60_ParamIns*);
struct _1bc9c9a60_ParamIns {
	jule::Ptr<_1bc9c9686_Param> _field_decl = jule::Ptr<_1bc9c9686_Param>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1bc9c9a60_ParamIns(void) = default;

	inline bool operator==(_1bc9c9a60_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1bc9c9a60_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1d70782c0_to_str(_1bc9c9c4c_FnIns*);
inline jule::Bool _1d7067622_equals(jule::Ptr<_1bc9c9c4c_FnIns>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _1d7078bd8_types(_1bc9c9c4c_FnIns*);
inline jule::Bool _1d707b559_is_builtin(_1bc9c9c4c_FnIns*);
inline jule::Bool _1d70812b7_is_anon(_1bc9c9c4c_FnIns*);
inline jule::Bool _1bc9c9e39_same(_1bc9c9c4c_FnIns*, jule::Ptr<_1bc9c9c4c_FnIns>);
inline jule::Str _1bc9ca214_get_kind_str(_1bc9c9c4c_FnIns*, jule::Bool);
struct _1bc9c9c4c_FnIns {
	jule::Ptr<_1d70ab9c9_StructIns> _field_owner = jule::Ptr<_1d70ab9c9_StructIns>();
	jule::Ptr<_1bc9c9873_Fn> _field_decl = jule::Ptr<_1bc9c9873_Fn>();
	jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>();
	jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_result = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	jule::Ptr<_1bc9cb402_ReferenceStack> _field_refers = jule::Ptr<_1bc9cb402_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1bc9c9c4c_FnIns(void) = default;

	inline bool operator==(_1bc9c9c4c_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1bc9c9c4c_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bc9cb402_ReferenceStack> static__1bc9cb6dd_new(void);
inline jule::I64 _1bc9cba73_len(_1bc9cb402_ReferenceStack*);
inline jule::Any _1bc9cbd81_at(_1bc9cb402_ReferenceStack*, jule::I64);
inline void _1bc9cc106_push(_1bc9cb402_ReferenceStack*, jule::Any);
inline jule::Bool _1abe33ccc_exist(_1bc9cb402_ReferenceStack*, jule::Ptr<_1bc9c9c4c_FnIns>);
inline jule::Bool _1abe49bd3_exist(_1bc9cb402_ReferenceStack*, jule::Ptr<_1be36365b_Var>);
inline jule::Bool _1abed48b6_exist(_1bc9cb402_ReferenceStack*, jule::Ptr<_1d70ab9c9_StructIns>);
inline jule::Bool _1a9647911_exist(_1bc9cb402_ReferenceStack*, jule::Ptr<_1bd929d66_Trait>);
struct _1bc9cb402_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1bc9cb402_ReferenceStack(void) = default;

	inline bool operator==(_1bc9cb402_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1bc9cb402_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1bc9cc7bb_Pass {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_text = jule::Str();
	

	_1bc9cc7bb_Pass(void) = default;

	inline bool operator==(_1bc9cc7bb_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1bc9cc7bb_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bc9d1c65_SymbolBuilder> _1bc9d221b_get_root(jule::Ptr<_1bc9d1c65_SymbolBuilder>);
inline void _1bc9d25d4_push_err(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_20201c3d1_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1bc9d299c_push_err_text(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_20201c3d1_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1bc9d2cbb_push_suggestion(_1bc9d1c65_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc9d3195_check_cpp_use_decl_path(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1d70a7992_UseDecl>&, jule::Str);
inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d34a3_build_cpp_header_import(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d37c2_build_std_import(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d3ad0_build_ident_import(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d3ddd_build_import(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Bool _1bc9d421d_check_duplicate_use_decl(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1be272d40_ImportInfo>&);
inline void _1bc9d454d_impl_import_selections(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1be272d40_ImportInfo>&, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Str _1bc9d485b_get_as_link_path(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Str);
inline void _1bc9d4c24_push_cycle_error(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1bc9d1c65_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1bc9d50dc_push_cross_cycle_error(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1bc9d1c65_SymbolBuilder>&, jule::Ptr<_1be272d40_ImportInfo>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _1bc9d5494_check_import_cycles(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1be272d40_ImportInfo>, jule::Ptr<_1d70a7992_UseDecl>&);
inline void _1bc9d587e_check_package_accessibility(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1d70a7992_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1bc9d5c47_import_package(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1be272d40_ImportInfo>&, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d6055_import_use_decl(jule::Ptr<_1bc9d1c65_SymbolBuilder>, jule::Ptr<_1d70a7992_UseDecl>&);
inline void _1bc9d6231_import_use_decls(jule::Ptr<_1bc9d1c65_SymbolBuilder>);
inline void _1bc9d64a6_append_node(_1bc9d1c65_SymbolBuilder*, _1d705b968_Node&);
inline void _1bc9d6682_append_nodes(_1bc9d1c65_SymbolBuilder*);
inline void _1bc9d6907_push_directive_pass(_1bc9d1c65_SymbolBuilder*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1bc9d6ad3_append_top_directives(_1bc9d1c65_SymbolBuilder*);
inline void _1bc9d6cae_build(jule::Ptr<_1bc9d1c65_SymbolBuilder>);
struct _1bc9d1c65_SymbolBuilder {
	jule::Ptr<_1bc9d1c65_SymbolBuilder> _field_owner = jule::Ptr<_1bc9d1c65_SymbolBuilder>();
	jule::Trait<_1be270546_Importer> _field_importer = jule::Trait<_1be270546_Importer>();
	jule::Slice<_201be0d52_Log> _field_errors = jule::Slice<_201be0d52_Log>();
	jule::Ptr<_1d705abdc_Ast> _field_ast = jule::Ptr<_1d705abdc_Ast>();
	jule::Ptr<_1be3a4339_SymbolTable> _field_table = jule::Ptr<_1be3a4339_SymbolTable>();
	

	_1bc9d1c65_SymbolBuilder(void) = default;

	inline bool operator==(_1bc9d1c65_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1bc9d1c65_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1bca37e97_to_str(_1bd929d66_Trait*);
inline jule::Bool _1bca383e8_equals(jule::Ptr<_1bd929d66_Trait>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Bool _1bca57604_is_builtin(_1bd929d66_Trait*);
inline jule::Ptr<_1bc9c9873_Fn> _1bca6e82a_find_method(_1bd929d66_Trait*, jule::Str);
struct _1bd929d66_Trait {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _field_methods = jule::Slice<jule::Ptr<_1bc9c9873_Fn>>();
	jule::Slice<jule::Ptr<_1d7073276_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1d7073276_Struct>>();
	

	_1bd929d66_Trait(void) = default;

	inline bool operator==(_1bd929d66_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1bd929d66_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bca8383e_auto_expr(_1bcb66966_EnumItem*);
struct _1bcb66966_EnumItem {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1be3aa362_Value> _field_value = jule::Ptr<_1be3aa362_Value>();
	

	_1bcb66966_EnumItem(void) = default;

	inline bool operator==(_1bcb66966_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1bcb66966_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1bcabed97_to_str(_1bc9dceb3_Enum*);
inline jule::Bool _1bcac75b9_equals(jule::Ptr<_1bc9dceb3_Enum>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Ptr<_1bcb66966_EnumItem> _1bcb599d1_find_item(_1bc9dceb3_Enum*, jule::Str);
struct _1bc9dceb3_Enum {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	jule::Slice<jule::Ptr<_1bcb66966_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1bcb66966_EnumItem>>();
	

	_1bc9dceb3_Enum(void) = default;

	inline bool operator==(_1bc9dceb3_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1bc9dceb3_Enum _other) { return !this->operator==(_other); }


};
struct _1bcb58ddc_TypeEnumItem {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	

	_1bcb58ddc_TypeEnumItem(void) = default;

	inline bool operator==(_1bcb58ddc_TypeEnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1bcb58ddc_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1bcc49b37_to_str(_1bd9c99a4_TypeEnum*);
inline jule::Bool _1bcc68d98_equals(jule::Ptr<_1bd9c99a4_TypeEnum>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Ptr<_1bcb58ddc_TypeEnumItem> _1bd92a6a2_find_item(_1bd9c99a4_TypeEnum*, jule::Str);
struct _1bd9c99a4_TypeEnum {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>> _field_items = jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>>();
	

	_1bd9c99a4_TypeEnum(void) = default;

	inline bool operator==(_1bd9c99a4_TypeEnum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1bd9c99a4_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bd9437ca_is_trait_impl(_1bcac892d_Impl*);
inline jule::Bool _1bd944006_is_struct_impl(_1bcac892d_Impl*);
struct _1bcac892d_Impl {
	jule::Ptr<_1d709023d_TypeDecl> _field_base = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1d709023d_TypeDecl> _field_dest = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _field_methods = jule::Slice<jule::Ptr<_1bc9c9873_Fn>>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_statics = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	

	_1bcac892d_Impl(void) = default;

	inline bool operator==(_1bcac892d_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1bcac892d_Impl _other) { return !this->operator==(_other); }


};
struct _1be1ca25e_Scope {
	jule::Ptr<_1be1ca25e_Scope> _field_parent = jule::Ptr<_1be1ca25e_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1be1ca25e_Scope(void) = default;

	inline bool operator==(_1be1ca25e_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1be1ca25e_Scope _other) { return !this->operator==(_other); }


};
struct _1be2437b1_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	

	_1be2437b1_If(void) = default;

	inline bool operator==(_1be2437b1_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1be2437b1_If _other) { return !this->operator==(_other); }


};
struct _1be249c6d_Else {
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	

	_1be249c6d_Else(void) = default;

	inline bool operator==(_1be249c6d_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1be249c6d_Else _other) { return !this->operator==(_other); }


};
struct _1be25830e_Conditional {
	jule::Slice<jule::Ptr<_1be2437b1_If>> _field_elifs = jule::Slice<jule::Ptr<_1be2437b1_If>>();
	jule::Ptr<_1be249c6d_Else> _field_default = jule::Ptr<_1be249c6d_Else>();
	

	_1be25830e_Conditional(void) = default;

	inline bool operator==(_1be25830e_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1be25830e_Conditional _other) { return !this->operator==(_other); }


};
struct _1be2584eb_InfIter {
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	

	_1be2584eb_InfIter(void) = default;

	inline bool operator==(_1be2584eb_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1be2584eb_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be23520e_is_while_next(_1be2586d8_WhileIter*);
struct _1be2586d8_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	

	_1be2586d8_WhileIter(void) = default;

	inline bool operator==(_1be2586d8_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1be2586d8_WhileIter _other) { return !this->operator==(_other); }


};
struct _1be2588c5_RangeIter {
	jule::Ptr<_1be3a92d9_Data> _field_expr = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	jule::Ptr<_1be36365b_Var> _field_key_a = jule::Ptr<_1be36365b_Var>();
	jule::Ptr<_1be36365b_Var> _field_key_b = jule::Ptr<_1be36365b_Var>();
	

	_1be2588c5_RangeIter(void) = default;

	inline bool operator==(_1be2588c5_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1be2588c5_RangeIter _other) { return !this->operator==(_other); }


};
struct _1be258ab2_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_1be258ab2_ContSt(void) = default;

	inline bool operator==(_1be258ab2_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1be258ab2_ContSt _other) { return !this->operator==(_other); }


};
struct _1be258c9e_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_1be258c9e_BreakSt(void) = default;

	inline bool operator==(_1be258c9e_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1be258c9e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1be258e8b_Label {
	jule::Str _field_ident = jule::Str();
	

	_1be258e8b_Label(void) = default;

	inline bool operator==(_1be258e8b_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1be258e8b_Label _other) { return !this->operator==(_other); }


};
struct _1be259178_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1be259178_GotoSt(void) = default;

	inline bool operator==(_1be259178_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1be259178_GotoSt _other) { return !this->operator==(_other); }


};
struct _1be259365_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1be259365_Postfix(void) = default;

	inline bool operator==(_1be259365_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1be259365_Postfix _other) { return !this->operator==(_other); }


};
struct _1be259552_Assign {
	jule::Ptr<_1d70abbb6_OperandExprModel> _field_l = jule::Ptr<_1d70abbb6_OperandExprModel>();
	jule::Ptr<_1d70abbb6_OperandExprModel> _field_r = jule::Ptr<_1d70abbb6_OperandExprModel>();
	jule::Ptr<_20201c3d1_Token> _field_op = jule::Ptr<_20201c3d1_Token>();
	

	_1be259552_Assign(void) = default;

	inline bool operator==(_1be259552_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1be259552_Assign _other) { return !this->operator==(_other); }


};
struct _1be25973e_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1be25973e_MultiAssign(void) = default;

	inline bool operator==(_1be25973e_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1be25973e_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be2360bc_is_generic_type_match(_1be25992b_Match*);
struct _1be25992b_Match {
	jule::Ptr<_1be3a92d9_Data> _field_expr = jule::Ptr<_1be3a92d9_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1be259d49_Case>> _field_cases = jule::Slice<jule::Ptr<_1be259d49_Case>>();
	jule::Ptr<_1be259d49_Case> _field_default = jule::Ptr<_1be259d49_Case>();
	

	_1be25992b_Match(void) = default;

	inline bool operator==(_1be25992b_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1be25992b_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be244284_is_default(_1be259d49_Case*);
struct _1be259d49_Case {
	jule::Ptr<_1be25992b_Match> _field_owner = jule::Ptr<_1be25992b_Match>();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	jule::Slice<jule::Ptr<_1be3a92d9_Data>> _field_exprs = jule::Slice<jule::Ptr<_1be3a92d9_Data>>();
	jule::Ptr<_1be259d49_Case> _field_next = jule::Ptr<_1be259d49_Case>();
	

	_1be259d49_Case(void) = default;

	inline bool operator==(_1be259d49_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1be259d49_Case _other) { return !this->operator==(_other); }


};
struct _1be25a036_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_1be25a036_FallSt(void) = default;

	inline bool operator==(_1be25a036_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1be25a036_FallSt _other) { return !this->operator==(_other); }


};
struct _1be25a223_RetSt {
	jule::Ptr<_1bc9c9c4c_FnIns> _field_func = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_vars = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1be25a223_RetSt(void) = default;

	inline bool operator==(_1be25a223_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1be25a223_RetSt _other) { return !this->operator==(_other); }


};
struct _1be25a410_ScopeLabel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1be258e8b_Label> _field_label = jule::Ptr<_1be258e8b_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1be25aee3_ScopeChecker> _field_scope = jule::Ptr<_1be25aee3_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1be25a410_ScopeLabel(void) = default;

	inline bool operator==(_1be25a410_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1be25a410_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1be25a5ec_ScopeGoto {
	jule::Ptr<_1d709cc95_GotoSt> _field_gt = jule::Ptr<_1d709cc95_GotoSt>();
	jule::Ptr<_1be25aee3_ScopeChecker> _field_scope = jule::Ptr<_1be25aee3_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1be25a5ec_ScopeGoto(void) = default;

	inline bool operator==(_1be25a5ec_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1be25a5ec_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be272d40_ImportInfo> _1be25b444_find_package(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Ptr<_1be272d40_ImportInfo> _1be25b752_select_package(_1be25aee3_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>);
inline jule::Ptr<_1be36365b_Var> _1be25bb09_find_var(_1be25aee3_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be25beb1_find_type_alias(_1be25aee3_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d7073276_Struct> _1be25c368_find_struct(_1be25aee3_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc9c9873_Fn> _1be25c720_find_fn(_1be25aee3_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1bd929d66_Trait> _1be25ca2d_find_trait(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Ptr<_1bc9dceb3_Enum> _1be25cd3b_find_enum(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be25d149_find_type_enum(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Bool _1be25d479_is_unsafe(jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Bool _1be25d6dd_is_root(_1be25aee3_ScopeChecker*);
inline void _1be25d8b9_stop(_1be25aee3_ScopeChecker*);
inline jule::Bool _1be25db2d_stopped(_1be25aee3_ScopeChecker*);
inline jule::Bool _1be25dd92_is_deferred(jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Ptr<_1be25aee3_ScopeChecker> _1be25e106_get_root(jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Ptr<_1be25aee3_ScopeChecker> _1be25e36a_get_hard_root(jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Ptr<_1be258e8b_Label> _1be25e678_find_label(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Ptr<_1be25a410_ScopeLabel> _1be25e986_find_label_scope(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Str);
inline jule::Ptr<_1be25a410_ScopeLabel> _1be25ec94_find_label_all(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Bool _1be26014b_is_duplicated_ident(_1be25aee3_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _1be2603c1_check_var_decl(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a2c45_VarDecl>);
inline void _1be260646_check_type_alias_decl(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a65a6_TypeAliasDecl>);
inline jule::Ptr<_1be1ca25e_Scope> _1be2608aa_get_child(_1be25aee3_ScopeChecker*);
inline void _1be260c73_check_child_ssc(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a0270_ScopeTree>&, jule::Ptr<_1be1ca25e_Scope>&, jule::Ptr<_1be25aee3_ScopeChecker>&);
inline jule::Ptr<_1be1ca25e_Scope> _1be26112a_check_child_sc(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a0270_ScopeTree>&, jule::Ptr<_1be25aee3_ScopeChecker>&);
inline jule::Ptr<_1be1ca25e_Scope> _1be261438_check_child(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a0270_ScopeTree>&);
inline void _1be2616ad_check_anon_scope(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a0270_ScopeTree>);
inline void _1be2619cc_process_error_call(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>&, jule::Ptr<_20201c3d1_Token>);
inline void _1be261c52_check_expr(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709475e_Expr>);
inline void _1be261ec7_check_co_expr(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d7096354_CoExpr>);
inline jule::Ptr<_1be2437b1_If> _1be2622d5_check_if(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a55a5_If>);
inline jule::Ptr<_1be249c6d_Else> _1be2625e3_check_else(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a595c_Else>);
inline void _1be262868_check_conditional(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a5dd0_Conditional>);
inline void _1be262cca_check_iter_scope_ssc(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Uintptr, jule::Ptr<_1d70a0270_ScopeTree>, jule::Ptr<_1be1ca25e_Scope>&, jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Ptr<_1be1ca25e_Scope> _1be26322b_check_iter_scope_sc(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Uintptr, jule::Ptr<_1d70a0270_ScopeTree>, jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Ptr<_1be1ca25e_Scope> _1be2635d3_check_iter_scope(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Uintptr, jule::Ptr<_1d70a0270_ScopeTree>&);
inline void _1be263858_check_inf_iter(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a375c_Iter>&);
inline void _1be263acd_check_while_iter(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a375c_Iter>&);
inline void _1be263d53_check_range_iter(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a375c_Iter>&);
inline void _1be2640c8_check_iter(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a375c_Iter>);
inline jule::Bool _1be2643d6_check_valid_cont_label(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Uintptr);
inline jule::Bool _1be264716_check_valid_break_label(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_1be258ab2_ContSt> _1be264a35_check_cont_valid_scope(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a5132_ContSt>);
inline void _1be264caa_check_cont(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a5132_ContSt>);
inline void _1be265030_check_label(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709c8dd_LabelSt>);
inline void _1be2652a5_push_goto(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709cc95_GotoSt>);
inline void _1be26552a_check_postfix(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709dbca_AssignSt>);
inline jule::Bool _1be265838_is_new_assign_ident(_1be25aee3_ScopeChecker*, jule::Str);
inline jule::Bool _1be265cab_check_structure_assign_op(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70ab9c9_StructIns>&, jule::Ptr<_1d709dbca_AssignSt>&, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be266042_check_single_assign(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709dbca_AssignSt>&);
inline void _1be266581___process_end_part_of_multi_assign(_1be25aee3_ScopeChecker*, jule::Ptr<_1be25973e_MultiAssign>, jule::Ptr<_1d709dbca_AssignSt>, jule::Ptr<_1d709d68b_AssignLeft>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_1be3a92d9_Data>);
inline void _1be266806_check_ret_multi_assign(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709dbca_AssignSt>&);
inline void _1be266a7b_check_multi_assign(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709dbca_AssignSt>&);
inline void _1be266d01_check_assign_st(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709dbca_AssignSt>);
inline jule::Ptr<_1be1ca25e_Scope> _1be2671a8_check_case_scope(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1be259d49_Case>&, jule::Ptr<_1d70a0270_ScopeTree>&);
inline jule::Ptr<_1be259d49_Case> _1be2676a3_check_case(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1be25992b_Match>, jule::I64, jule::Ptr<_1d70a6a29_Case>, jule::Ptr<_1be3a92d9_Data>);
inline void _1be267a6b_check_cases(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a7200_MatchCase>&, jule::Ptr<_1be25992b_Match>, jule::Ptr<_1be3a92d9_Data>);
inline jule::Ptr<_1be259d49_Case> _1be267e23_check_default(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1be25992b_Match>, jule::Ptr<_1d70a595c_Else>);
inline void _1be268198_check_comptime_panic(_1be25aee3_ScopeChecker*, jule::Ptr<_1be1ca25e_Scope>&);
inline void _1be2684b7_push_type_match(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1be25992b_Match>, jule::Ptr<_1d70a7200_MatchCase>&);
inline void _1be26873c_check_type_match(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a7200_MatchCase>&);
inline void _1be2689b2_check_common_match(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a7200_MatchCase>&);
inline void _1be268c37_check_match(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a7200_MatchCase>);
inline void _1be268eac_check_fall(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d709d081_FallSt>);
inline jule::Ptr<_1be258c9e_BreakSt> _1be2692ba_check_break_with_label(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a4c7a_BreakSt>);
inline jule::Ptr<_1be258c9e_BreakSt> _1be2695c8_check_plain_break(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a4c7a_BreakSt>);
inline void _1be26984d_check_break(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a4c7a_BreakSt>);
inline void _1be269ac3_check_ret(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a30ec_RetSt>);
inline void _1be269d48_check_use_expr(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d7095100_UseExpr>);
inline void _1be26a0bd_check_node(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Any&);
inline void _1be26a299_check_result(jule::Ptr<_1be25aee3_ScopeChecker>);
inline void _1be26a475_check_tree(jule::Ptr<_1be25aee3_ScopeChecker>);
inline void _1be26a794_check_goto(_1be25aee3_ScopeChecker*, jule::Ptr<_1be25a5ec_ScopeGoto>&, jule::Ptr<_1be25a410_ScopeLabel>&);
inline void _1be26a970_check_gotos(_1be25aee3_ScopeChecker*);
inline void _1be26ab4b_check_labels(_1be25aee3_ScopeChecker*);
inline void _1be26ad27_check_vars(_1be25aee3_ScopeChecker*);
inline void _1be26b003_check_aliases(_1be25aee3_ScopeChecker*);
inline void _1be26b322_check(jule::Ptr<_1be25aee3_ScopeChecker>, jule::Ptr<_1d70a0270_ScopeTree>&, jule::Ptr<_1be1ca25e_Scope>&);
inline jule::Ptr<_1be25aee3_ScopeChecker> _1be26b586_new_child_checker(jule::Ptr<_1be25aee3_ScopeChecker>);
struct _1be25aee3_ScopeChecker {
	jule::Ptr<_20201c3d1_Token> _field_called_from = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1be348311_Sema> _field_s = jule::Ptr<_1be348311_Sema>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_owner = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1be25aee3_ScopeChecker> _field_parent = jule::Ptr<_1be25aee3_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1be3a4339_SymbolTable> _field_table = jule::Ptr<_1be3a4339_SymbolTable>();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_tree = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_result = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1be25a410_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1be25a410_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1be25a5ec_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1be25a5ec_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1be25aee3_ScopeChecker(void) = default;

	inline bool operator==(_1be25aee3_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1be25aee3_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1be26c576_check_cdef(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26c7eb_check_typedef(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26ca71_check_derive(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26cce6_check_namespace(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26d06b_check_deprecated(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26d2e1_check_test(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26d566_check_directive(_1be26c136_DirectiveChecker*, jule::Ptr<_1d705bd64_Directive>&);
inline void _1be26d742_check(_1be26c136_DirectiveChecker*);
struct _1be26c136_DirectiveChecker {
	jule::Ptr<_1be348311_Sema> _field_s = jule::Ptr<_1be348311_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1d705bd64_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1d705bd64_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1be26c136_DirectiveChecker(void) = default;

	inline bool operator==(_1be26c136_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1be26c136_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be272d40_ImportInfo> _1be27335c_find_package(_1be272d40_ImportInfo*, jule::Str);
inline jule::Ptr<_1be272d40_ImportInfo> _1be27366a_select_package(_1be272d40_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>);
inline jule::Ptr<_1be36365b_Var> _1be273a22_find_var(_1be272d40_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be273dc9_find_type_alias(_1be272d40_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d7073276_Struct> _1be274281_find_struct(_1be272d40_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc9c9873_Fn> _1be274638_find_fn(_1be272d40_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1bd929d66_Trait> _1be274946_find_trait(_1be272d40_ImportInfo*, jule::Str);
inline jule::Ptr<_1bc9dceb3_Enum> _1be274c54_find_enum(_1be272d40_ImportInfo*, jule::Str);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be275062_find_type_enum(_1be272d40_ImportInfo*, jule::Str);
inline jule::Bool _1be275408_is_lookupable(_1be272d40_ImportInfo*, jule::Str);
inline jule::Bool _1be275716_exist_ident(_1be272d40_ImportInfo*, jule::Str);
inline jule::Bool _1be27599c_is_accessible_via_selection(_1be272d40_ImportInfo*);
struct _1be272d40_ImportInfo {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_selected = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Ptr<_1be275c99_Package> _field_package = jule::Ptr<_1be275c99_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1be272d40_ImportInfo(void) = default;

	inline bool operator==(_1be272d40_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1be272d40_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be272d40_ImportInfo> _1be276272_find_package(_1be275c99_Package*, jule::Str);
inline jule::Ptr<_1be272d40_ImportInfo> _1be276580_select_package(_1be275c99_Package*, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>);
inline jule::Ptr<_1be36365b_Var> _1be276937_find_var(_1be275c99_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be276cde_find_type_alias(_1be275c99_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d7073276_Struct> _1be277196_find_struct(_1be275c99_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc9c9873_Fn> _1be27754d_find_fn(_1be275c99_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1bd929d66_Trait> _1be27785b_find_trait(_1be275c99_Package*, jule::Str);
inline jule::Ptr<_1bc9dceb3_Enum> _1be277b69_find_enum(_1be275c99_Package*, jule::Str);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be277e77_find_type_enum(_1be275c99_Package*, jule::Str);
struct _1be275c99_Package {
	jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>();
	

	_1be275c99_Package(void) = default;

	inline bool operator==(_1be275c99_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1be275c99_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be272d40_ImportInfo> _1be34882d_find_package(_1be348311_Sema*, jule::Str);
inline jule::Ptr<_1be272d40_ImportInfo> _1be348b3b_select_package(_1be348311_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>);
inline jule::Ptr<_1be36365b_Var> _1be348ee3_find_var(_1be348311_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be34939a_find_type_alias(_1be348311_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d7073276_Struct> _1be349752_find_struct(_1be348311_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc9c9873_Fn> _1be349b09_find_fn(_1be348311_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1bd929d66_Trait> _1be349e17_find_trait(_1be348311_Sema*, jule::Str);
inline jule::Ptr<_1bc9dceb3_Enum> _1be34a225_find_enum(_1be348311_Sema*, jule::Str);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be34a533_find_type_enum(_1be348311_Sema*, jule::Str);
inline jule::Bool _1be34a885_is_flag(_1be348311_Sema*, jule::I64);
inline void _1be34ab0a_set_current_file(_1be348311_Sema*, jule::Ptr<_1be3a4339_SymbolTable>);
inline void _1be34aec3_push_err(_1be348311_Sema*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1be34b2e2_push_suggestion(_1be348311_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be34b699_is_accessible_define(_1be348311_Sema*, jule::Bool, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1be34baea_is_duplicated_ident(_1be348311_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1be34be19_check_directives(jule::Ptr<_1be348311_Sema>, jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Any);
inline jule::Bool _1be34c36a_check_generic_quantity(_1be348311_Sema*, jule::I64, jule::I64, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1be34c744_is_duplicated_import_selection(_1be348311_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1be34cb0c_get_import_def(_1be348311_Sema*, jule::Str, jule::Ptr<_1be272d40_ImportInfo>&);
inline jule::Bool _1be34ce3c_check_import_selections(_1be348311_Sema*, jule::Ptr<_1be272d40_ImportInfo>&);
inline jule::Bool _1be34d27d_is_use_alias_duplication(_1be348311_Sema*, jule::Ptr<_1be272d40_ImportInfo>&);
inline jule::Bool _1be34d59c_check_import(_1be348311_Sema*, jule::Ptr<_1be272d40_ImportInfo>&);
inline void _1be34d778_check_imports(_1be348311_Sema*);
inline void _1be34d954_impl_file_impls(jule::Ptr<_1be348311_Sema>);
inline void _1be34db30_impl_impls(jule::Ptr<_1be348311_Sema>);
inline void _1be34dd0b_check_enums(jule::Ptr<_1be348311_Sema>);
inline jule::Bool _1be34e25c_check_type_with_refers(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be3d86c0_TypeSymbol>&, jule::Trait<_1be3eedce_Lookup>, jule::Ptr<_1be3e1a4c_Referencer>);
inline jule::Bool _1be34e614_check_type(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be3d86c0_TypeSymbol>&, jule::Trait<_1be3eedce_Lookup>);
inline jule::Ptr<_1be3d45ab_TypeKind> _1be34ea87_build_type_with_generics(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d709023d_TypeDecl>&, jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>, jule::Ptr<_1bc9cb402_ReferenceStack>);
inline jule::Ptr<_1be3d45ab_TypeKind> _1be34eda6_build_type(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d709023d_TypeDecl>&);
inline jule::Ptr<_1be3d45ab_TypeKind> _1be3501b4_select_type(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d709023d_TypeDecl>&);
inline jule::Ptr<_1be3aad57_Eval> _1be350615_evalpd(jule::Ptr<_1be348311_Sema>, jule::Trait<_1be3eedce_Lookup>, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be36365b_Var>);
inline jule::Ptr<_1be3aad57_Eval> _1be3509bc_evalp(jule::Ptr<_1be348311_Sema>, jule::Trait<_1be3eedce_Lookup>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Ptr<_1be3aad57_Eval> _1be350cca_eval(jule::Ptr<_1be348311_Sema>, jule::Trait<_1be3eedce_Lookup>);
inline jule::Bool _1be3512c5_check_assign_type(jule::Ptr<_1be348311_Sema>, jule::Bool, jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1be351748_check_type_compatibility(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Ptr<_1be3d45ab_TypeKind> _1be351b33_build_non_generic_type_kind(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d709023d_TypeDecl>&, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>&);
inline void _1be351ddb_build_fn_non_generic_type_kinds(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1be35222c_get_trait_check_fn_kind(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9873_Fn>&);
inline jule::Bool _1be35254b_reload_fn_ins_types(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Bool _1be3529d0_check_ref_validity_for_init_expr(jule::Ptr<_1be348311_Sema>, jule::Bool, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _1be3530c9_check_validity_for_init_expr(jule::Ptr<_1be348311_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _1be353481_check_type_alias_decl_kind(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be3d3874_TypeAlias>&, jule::Trait<_1be3eedce_Lookup>);
inline void _1be3537b1_check_type_alias_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be3d3874_TypeAlias>&, jule::Trait<_1be3eedce_Lookup>);
inline void _1be353a58_check_type_alias_decl_dup(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be3d3874_TypeAlias>&);
inline jule::Bool _1be353ccd_check_type_alias_decls(jule::Ptr<_1be348311_Sema>);
inline void _1abb4a571_check_enum_items_dup(_1be348311_Sema*, jule::Slice<jule::Ptr<_1bcb66966_EnumItem>>);
inline void _1abb5713d_check_enum_items_dup(_1be348311_Sema*, jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>>);
inline void _1be3542c8_check_enum_items_str(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9dceb3_Enum>&);
inline void _1be35454d_check_enum_items_int(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9dceb3_Enum>&);
inline void _1be3547c3_check_enum_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9dceb3_Enum>&);
inline void _1be354a48_check_type_enum_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bd9c99a4_TypeEnum>&);
inline jule::Bool _1be354cac_check_enum_decls(jule::Ptr<_1be348311_Sema>);
inline jule::Bool _1be355021_check_type_enum_decls(jule::Ptr<_1be348311_Sema>);
inline jule::Bool _1be35532e_check_decl_generics(_1be348311_Sema*, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>&);
inline jule::Bool _1be35565e_check_fn_decl_params_dup(_1be348311_Sema*, jule::Ptr<_1bc9c9873_Fn>&);
inline jule::Bool _1be3559a0_check_fn_decl_result_dup(_1be348311_Sema*, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1be355c58_check_fn_decl_prototype(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1be356011_check_trait_decl_method(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1be3562b9_check_trait_decl_methods(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bd929d66_Trait>&);
inline void _1be356550_check_trait_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bd929d66_Trait>&);
inline jule::Bool _1be3567b4_check_trait_decls(jule::Ptr<_1be348311_Sema>);
inline jule::Bool _1be356b8d_check_trait_impl_methods(_1be348311_Sema*, jule::Ptr<_1bd929d66_Trait>&, jule::Ptr<_1bcac892d_Impl>&);
inline jule::Bool _1be357056_impl_to_struct(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&, jule::Ptr<_1bcac892d_Impl>&);
inline void _1be3572cb_impl_trait(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bcac892d_Impl>&);
inline void _1be357551_impl_struct(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bcac892d_Impl>&);
inline void _1be3577c6_impl_impl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bcac892d_Impl>&);
inline void _1be357ae5_check_var_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be36365b_Var>&, jule::Trait<_1be3eedce_Lookup>);
inline void _1be357d6a_check_global_var_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be36365b_Var>&);
inline jule::Bool _1be3580ce_check_global_decls(jule::Ptr<_1be348311_Sema>);
inline jule::Bool _1be3584a8_check_struct_trait_impl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&, jule::Ptr<_1bd929d66_Trait>&);
inline jule::Bool _1be3587c7_check_struct_impls(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&);
inline jule::Bool _1be358ad5_check_struct_fields(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&);
inline void _1be358d5a_check_struct_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&);
inline jule::Bool _1be3590be_check_struct_decls(jule::Ptr<_1be348311_Sema>);
inline void _1be359344_check_fn_decl(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9873_Fn>&);
inline jule::Bool _1be3595a8_check_fn_decls(jule::Ptr<_1be348311_Sema>);
inline void _1be359971_push_cycle_error(_1be348311_Sema*, jule::Ptr<_1d7073276_Struct>&, jule::Ptr<_1d7073276_Struct>&, jule::Str&);
inline jule::Bool _1be359dc2_check_cross_cycle(_1be348311_Sema*, jule::Ptr<_1d7073276_Struct>&, jule::Ptr<_1d7073276_Struct>&, jule::Str&);
inline jule::Bool _1be35a356_check_struct_derive_illegal_cycles(_1be348311_Sema*, jule::Str, jule::Ptr<_1d7073276_Struct>&, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be35a686_check_struct_ins_derive_clone(_1be348311_Sema*, jule::Ptr<_1d70ab9c9_StructIns>);
inline void _1be35a873_check_package_decls(jule::Ptr<_1be348311_Sema>);
inline void _1be35abb4_check_data_for_type_inference(_1be348311_Sema*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>&);
inline void _1be35ae4a_check_var(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be36365b_Var>&);
inline void _1be35b269_check_type_var(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1be36365b_Var>&, jule::Trait<_1be3eedce_Lookup>);
inline void _1be35b445_check_global_types(jule::Ptr<_1be348311_Sema>);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1be35b7ec_ready_to_check_fn(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>&, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1be35bb1b_check_type_method(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>&, jule::Ptr<_1bc9c9873_Fn>&);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1be35c06c_check_struct_ins_op(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>&, jule::Ptr<_1bc9c9873_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>);
inline jule::Bool _1be35c37a_check_fields(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline jule::Bool _1be35c688_precheck_struct_ins(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1be35c90d_check_struct_ins(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1be35cb83_check_type_struct(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&);
inline void _1be35cd5e_check_struct_types(jule::Ptr<_1be348311_Sema>);
inline void _1be35d106_check_struct_ins_operators(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d70ab9c9_StructIns>);
inline void _1be35d38c_precheck_struct_type(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1d7073276_Struct>&);
inline void _1be35d568_precheck_struct_types(jule::Ptr<_1be348311_Sema>);
inline void _1be35d7dd_check_rets(_1be348311_Sema*, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline void _1be35db0c_check_fn_ins_sc(_1be348311_Sema*, jule::Ptr<_1bc9c9c4c_FnIns>&, jule::Ptr<_1be25aee3_ScopeChecker>&);
inline void _1be35de2b_check_fn_ins_caller(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9c4c_FnIns>&, jule::Ptr<_20201c3d1_Token>);
inline void _1be35e1a1_check_fn_ins(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline void _1be35e426_check_type_fn(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1be35e69b_check_test_fn(_1be348311_Sema*, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline void _1be35e921_precheck_type_fn(jule::Ptr<_1be348311_Sema>, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1be35eaec_precheck_fn_types(jule::Ptr<_1be348311_Sema>);
inline void _1be35ecc8_check_fn_types(jule::Ptr<_1be348311_Sema>);
inline void _1be35eea4_check_package_types(jule::Ptr<_1be348311_Sema>);
inline void _1be360180_set_file_sema_fields(jule::Ptr<_1be348311_Sema>);
inline void _1be36035b_set_sema_fields(jule::Ptr<_1be348311_Sema>);
inline void _1be3605d1_check(jule::Ptr<_1be348311_Sema>, jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&);
struct _1be348311_Sema {
	jule::Slice<_201be0d52_Log> _field_errors = jule::Slice<_201be0d52_Log>();
	jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>();
	jule::Ptr<_1be3a4339_SymbolTable> _field_file = jule::Ptr<_1be3a4339_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1be348311_Sema(void) = default;

	inline bool operator==(_1be348311_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1be348311_Sema _other) { return !this->operator==(_other); }


};
inline _1be360988_MissingRetChecker static__1be360d51_new(void);
inline jule::Bool _1be36112b_check_conditional(_1be360988_MissingRetChecker*, jule::Ptr<_1be25830e_Conditional>);
inline jule::Bool _1be361439_check_match(_1be360988_MissingRetChecker*, jule::Ptr<_1be25992b_Match>);
inline jule::Bool _1be361747_check_inf_iter(_1be360988_MissingRetChecker*, jule::Ptr<_1be2584eb_InfIter>);
inline jule::Bool _1be361a55_check_scope(_1be360988_MissingRetChecker*, jule::Ptr<_1be1ca25e_Scope>);
inline jule::Bool _1be361d63_check(_1be360988_MissingRetChecker*, jule::Ptr<_1be1ca25e_Scope>);
struct _1be360988_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1be360988_MissingRetChecker(void) = default;

	inline bool operator==(_1be360988_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1be360988_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1be3626e3_IterRelation {
	jule::Ptr<_1be36365b_Var> _field_range = jule::Ptr<_1be36365b_Var>();
	

	_1be3626e3_IterRelation(void) = default;

	inline bool operator==(_1be3626e3_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1be3626e3_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be363a13_is_initialized(_1be36365b_Var*);
inline jule::Bool _1be363c77_is_type_inferred(_1be36365b_Var*);
struct _1be36365b_Var {
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	jule::Ptr<_1be3aa362_Value> _field_value = jule::Ptr<_1be3aa362_Value>();
	jule::Ptr<_1bc9cb402_ReferenceStack> _field_refers = jule::Ptr<_1bc9cb402_ReferenceStack>();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Ptr<_1be3626e3_IterRelation> _field_iter_relation = jule::Ptr<_1be3626e3_IterRelation>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_depends = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	

	_1be36365b_Var(void) = default;

	inline bool operator==(_1be36365b_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1be36365b_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1be364805_dispose(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be364a9c_to_str(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be364ddd_logical(jule::Ptr<_1bc9c9873_Fn>&, jule::Str);
inline jule::Bool static__1be365185_eq(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36542c_gt(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be3656c4_gt_eq(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36596b_lt(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be365c13_lt_eq(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be366054_result(jule::Ptr<_1bc9c9873_Fn>&, jule::Str);
inline jule::Bool static__1be3662eb_shl(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be366593_shr(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36683a_add(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be366ad2_sub(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be366d79_div(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be367121_mul(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be3673b8_mod(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be367660_bit_and(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be367907_bit_or(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be367b9e_bit_xor(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be367ee0_unary(jule::Ptr<_1bc9c9873_Fn>&, jule::Str);
inline jule::Bool static__1be368287_neg(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36852e_pos(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be3687c6_bit_not(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be368b17_assign(jule::Ptr<_1bc9c9873_Fn>&, jule::Str);
inline jule::Bool static__1be368dae_add_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be369156_sub_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be3693ed_div_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be369695_mul_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36993c_mod_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be369bd4_shl_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be369e7b_shr_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36a223_bit_or_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36a4ba_bit_and_assign(jule::Ptr<_1bc9c9873_Fn>);
inline jule::Bool static__1be36a762_bit_xor_assign(jule::Ptr<_1bc9c9873_Fn>);
struct _1be364184_FuncPattern {
	

	_1be364184_FuncPattern(void) = default;

	inline bool operator==(_1be364184_FuncPattern _other) { return true; }

	inline bool operator!=(_1be364184_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1be39521a_push_err(_1be394bed_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be39547e_check_trait(_1be394bed_TypeCompatibilityChecker*);
inline jule::Bool _1be3956e3_check_ptr(_1be394bed_TypeCompatibilityChecker*);
inline jule::Bool _1be395957_check_prim(_1be394bed_TypeCompatibilityChecker*);
inline jule::Bool _1be395d0e___type_enum(_1be394bed_TypeCompatibilityChecker*, jule::Ptr<_1bd9c99a4_TypeEnum>&, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be396073_check_type_enum(_1be394bed_TypeCompatibilityChecker*);
inline jule::Bool _1be3962d7_check(_1be394bed_TypeCompatibilityChecker*);
struct _1be394bed_TypeCompatibilityChecker {
	jule::Ptr<_1be348311_Sema> _field_s = jule::Ptr<_1be348311_Sema>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_dest = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_src = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	

	_1be394bed_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1be394bed_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1be394bed_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1be396c88_push_err(_1be396826_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be396eec_check_validity(_1be396826_AssignTypeChecker*);
inline jule::Bool _1be397261_check_const(_1be396826_AssignTypeChecker*);
inline jule::Bool _1be3974c5_is_prim(_1be396826_AssignTypeChecker*);
inline jule::Bool _1be397739_check_compatibility(_1be396826_AssignTypeChecker*);
inline jule::Bool _1be39799d_check(_1be396826_AssignTypeChecker*);
struct _1be396826_AssignTypeChecker {
	jule::Ptr<_1be348311_Sema> _field_s = jule::Ptr<_1be348311_Sema>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_dest = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be3a92d9_Data> _field_d = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	

	_1be396826_AssignTypeChecker(void) = default;

	inline bool operator==(_1be396826_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1be396826_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1be398707_push_generic(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&, jule::I64);
inline jule::Bool _1be3989d2_annotate_prim(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be398ce0_annotate_slc(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be399197_check_map_key(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be3994a5_annotate_map(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be3997b3_annotate_fn(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be399ac1_annotate_ptr(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be399dce_annotate_sptr(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be39a1dc_annotate_any(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be39a4ea_annotate_kind(_1be398174_DynamicTypeAnnotation*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be39a75e_annotate(_1be398174_DynamicTypeAnnotation*);
struct _1be398174_DynamicTypeAnnotation {
	jule::Ptr<_1be3aad57_Eval> _field_e = jule::Ptr<_1be3aad57_Eval>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_f = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Ptr<_1bc9c9a60_ParamIns> _field_p = jule::Ptr<_1bc9c9a60_ParamIns>();
	jule::Ptr<_1be3a92d9_Data> _field_a = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1be3d45ab_TypeKind>* _field_k = nullptr;
	

	_1be398174_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1be398174_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1be398174_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1be39b485_push_err_token(_1be39ae35_FnCallArgChecker*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1be39b7a4_push_err(_1be39ae35_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>> _1be39ba18_get_params(_1be39ae35_FnCallArgChecker*);
inline jule::Bool _1be39bd26_check_counts(_1be39ae35_FnCallArgChecker*, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>&);
inline jule::Bool _1be39c277_check_arg(_1be39ae35_FnCallArgChecker*, jule::Ptr<_1bc9c9a60_ParamIns>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Bool _1be39c62e_push(_1be39ae35_FnCallArgChecker*, jule::Ptr<_1bc9c9a60_ParamIns>&, jule::Ptr<_1d709475e_Expr>);
inline jule::Bool _1be39c9d6_push_variadic(_1be39ae35_FnCallArgChecker*, jule::Ptr<_1bc9c9a60_ParamIns>&, jule::I64);
inline jule::Bool _1be39cce4_check_args(_1be39ae35_FnCallArgChecker*, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>&);
inline jule::Bool _1be39d07a_check_dynamic_type_annotation(_1be39ae35_FnCallArgChecker*);
inline jule::Bool _1be39d300_check(_1be39ae35_FnCallArgChecker*);
struct _1be39ae35_FnCallArgChecker {
	jule::Ptr<_1be3aad57_Eval> _field_e = jule::Ptr<_1be3aad57_Eval>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_args = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_f = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1be39ae35_FnCallArgChecker(void) = default;

	inline bool operator==(_1be39ae35_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1be39ae35_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1be39dd4a_push_err(_1be39d83e_StructLitChecker*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1be39e169_push_suggestion(_1be39d83e_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1be39e532_push_match(_1be39d83e_StructLitChecker*, jule::Ptr<_1d708808d_FieldIns>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>&);
inline void _1be39e851_check_pair(_1be39d83e_StructLitChecker*, jule::Ptr<_1d7099577_FieldExprPair>&, jule::Slice<jule::Ptr<_1d709475e_Expr>>&);
inline jule::Bool _1be39eb5e_ready_exprs(_1be39d83e_StructLitChecker*, jule::Slice<jule::Ptr<_1d709475e_Expr>>&);
inline void _1be39edd4_check(_1be39d83e_StructLitChecker*, jule::Slice<jule::Ptr<_1d709475e_Expr>>&);
struct _1be39d83e_StructLitChecker {
	jule::Ptr<_1be3aad57_Eval> _field_e = jule::Ptr<_1be3aad57_Eval>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	jule::Ptr<_1d70ab9c9_StructIns> _field_s = jule::Ptr<_1d70ab9c9_StructIns>();
	jule::Slice<jule::Ptr<_1bc9c47b3_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1bc9c47b3_StructArgExprModel>>();
	

	_1be39d83e_StructLitChecker(void) = default;

	inline bool operator==(_1be39d83e_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1be39d83e_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be36365b_Var> _1be3a08b8_build_var(_1be3a0423_RangeChecker*, jule::Ptr<_1d70a2c45_VarDecl>&);
inline void _1be3a0a94_set_size_key(_1be3a0423_RangeChecker*);
inline void _1be3a0e7e_check_range_expr_validity(_1be3a0423_RangeChecker*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be36365b_Var>&, jule::Ptr<_1be3d45ab_TypeKind>&);
inline void _1be3a116b_check_slice(_1be3a0423_RangeChecker*);
inline void _1be3a1347_check_array(_1be3a0423_RangeChecker*);
inline void _1be3a1523_check_map_key_a(_1be3a0423_RangeChecker*);
inline void _1be3a16ee_check_map_key_b(_1be3a0423_RangeChecker*);
inline void _1be3a18ca_check_map(_1be3a0423_RangeChecker*);
inline void _1be3a1aa6_check_str(_1be3a0423_RangeChecker*);
inline jule::Bool _1be3a1d1a_check(_1be3a0423_RangeChecker*);
struct _1be3a0423_RangeChecker {
	jule::Ptr<_1be25aee3_ScopeChecker> _field_sc = jule::Ptr<_1be25aee3_ScopeChecker>();
	jule::Ptr<_1d70a48c3_RangeKind> _field_rang = jule::Ptr<_1d70a48c3_RangeKind>();
	jule::Ptr<_1be2588c5_RangeIter> _field_kind = jule::Ptr<_1be2588c5_RangeIter>();
	jule::Ptr<_1be3a92d9_Data> _field_d = jule::Ptr<_1be3a92d9_Data>();
	

	_1be3a0423_RangeChecker(void) = default;

	inline bool operator==(_1be3a0423_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1be3a0423_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1be3a2a63_prepare_types(_1be3a25ac_RetTypeChecker*);
inline void _1be3a2cd8_prepare_exprs(_1be3a25ac_RetTypeChecker*, jule::Ptr<_1d709475e_Expr>&);
inline void _1be3a2eb4_ret_vars(_1be3a25ac_RetTypeChecker*);
inline void _1be3a3190_check_exprs(_1be3a25ac_RetTypeChecker*);
inline jule::Bool _1be3a349d_check(_1be3a25ac_RetTypeChecker*, jule::Ptr<_1d709475e_Expr>&);
struct _1be3a25ac_RetTypeChecker {
	jule::Ptr<_1be25aee3_ScopeChecker> _field_sc = jule::Ptr<_1be25aee3_ScopeChecker>();
	jule::Ptr<_1bc9c9c4c_FnIns> _field_f = jule::Ptr<_1bc9c9c4c_FnIns>();
	jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>();
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d709475e_Expr>>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_vars = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_model = jule::Any();
	

	_1be3a25ac_RetTypeChecker(void) = default;

	inline bool operator==(_1be3a25ac_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1be3a25ac_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be272d40_ImportInfo> _1be3a4856_find_package(_1be3a4339_SymbolTable*, jule::Str);
inline jule::Ptr<_1be272d40_ImportInfo> _1be3a4b64_select_package(_1be3a4339_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>);
inline jule::Ptr<_1be36365b_Var> _1be3a501b_find_var(_1be3a4339_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3a53c3_find_type_alias(_1be3a4339_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d7073276_Struct> _1be3a577a_find_struct(_1be3a4339_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1bc9c9873_Fn> _1be3a5b32_find_fn(_1be3a4339_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1bd929d66_Trait> _1be3a5e40_find_trait(_1be3a4339_SymbolTable*, jule::Str);
inline jule::Ptr<_1bc9dceb3_Enum> _1be3a624d_find_enum(_1be3a4339_SymbolTable*, jule::Str);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3a655b_find_type_enum(_1be3a4339_SymbolTable*, jule::Str);
inline jule::Ptr<_1be36365b_Var> _1be3a6acd___find_var(_1be3a4339_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3a702e___find_type_alias(_1be3a4339_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1be3a73d6_def_by_ident(_1be3a4339_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1be3a7837_is_duplicated_ident(_1be3a4339_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1be3a4339_SymbolTable {
	jule::Ptr<_20202276b_File> _field_file = jule::Ptr<_20202276b_File>();
	jule::Slice<_1bc9cc7bb_Pass> _field_passes = jule::Slice<_1bc9cc7bb_Pass>();
	jule::Slice<jule::Ptr<_1be272d40_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1be272d40_ImportInfo>>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_vars = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>();
	jule::Slice<jule::Ptr<_1d7073276_Struct>> _field_structs = jule::Slice<jule::Ptr<_1d7073276_Struct>>();
	jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1bc9c9873_Fn>>();
	jule::Slice<jule::Ptr<_1bd929d66_Trait>> _field_traits = jule::Slice<jule::Ptr<_1bd929d66_Trait>>();
	jule::Slice<jule::Ptr<_1bc9dceb3_Enum>> _field_enums = jule::Slice<jule::Ptr<_1bc9dceb3_Enum>>();
	jule::Slice<jule::Ptr<_1bd9c99a4_TypeEnum>> _field_type_enums = jule::Slice<jule::Ptr<_1bd9c99a4_TypeEnum>>();
	jule::Slice<jule::Ptr<_1bcac892d_Impl>> _field_impls = jule::Slice<jule::Ptr<_1bcac892d_Impl>>();
	

	_1be3a4339_SymbolTable(void) = default;

	inline bool operator==(_1be3a4339_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_type_enums == _other._field_type_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1be3a4339_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a96c4_is_nil(_1be3a92d9_Data*);
inline jule::Bool _1be3a9938_is_void(_1be3a92d9_Data*);
inline jule::Bool _1be3a9b9c_is_const(_1be3a92d9_Data*);
inline jule::Bool _1be3a9eaa_good_operand(_1be3a92d9_Data*, jule::Ptr<_1be3a92d9_Data>&);
struct _1be3a92d9_Data {
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1be159e14_Const> _field_constant = jule::Ptr<_1be159e14_Const>();
	

	_1be3a92d9_Data(void) = default;

	inline bool operator==(_1be3a92d9_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1be3a92d9_Data _other) { return !this->operator==(_other); }


};
struct _1be3aa362_Value {
	jule::Ptr<_1d709475e_Expr> _field_expr = jule::Ptr<_1d709475e_Expr>();
	jule::Ptr<_1be3a92d9_Data> _field_data = jule::Ptr<_1be3a92d9_Data>();
	

	_1be3aa362_Value(void) = default;

	inline bool operator==(_1be3aa362_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1be3aa362_Value _other) { return !this->operator==(_other); }


};
inline void _1be3ab363_push_err(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1be3ab682_push_suggestion(_1be3aad57_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1be3ab85d_allow_builtin(_1be3aad57_Eval*);
inline void _1be3aba39_disallow_builtin(_1be3aad57_Eval*);
inline jule::Bool _1be3abc9d_is_unsafe(_1be3aad57_Eval*);
inline jule::Bool _1be3ac012_is_global(_1be3aad57_Eval*);
inline jule::Bool _1be3ac2dc_apply_numeric_prefix(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3ac551_lit_nil(_1be3aad57_Eval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3ac85e_lit_str(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3acb6c_lit_bool(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3ace7a_lit_rune(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3ad288_lit_float(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3ad596_lit_int(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3ad8a4_lit_num(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3adbb2_eval_lit(_1be3aad57_Eval*, jule::Ptr<_1d7095793_LitExpr>);
inline jule::Any _1be3adec0_find_builtins(_1be3aad57_Eval*, jule::Str);
inline jule::Any _1be3ae377_get_def(_1be3aad57_Eval*, jule::Str, jule::Bool);
inline void _1abe31406_push_reference(_1be3aad57_Eval*, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline void _1abe474b6_push_reference(_1be3aad57_Eval*, jule::Ptr<_1be36365b_Var>&);
inline void _1abed2045_push_reference(_1be3aad57_Eval*, jule::Ptr<_1d70ab9c9_StructIns>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3ae90a___eval_enum(_1be3aad57_Eval*, jule::Ptr<_1bc9dceb3_Enum>);
inline jule::Ptr<_1be3a92d9_Data> _1be3aecb2_eval_enum(_1be3aad57_Eval*, jule::Ptr<_1bc9dceb3_Enum>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b00c0___eval_type_enum(_1be3aad57_Eval*, jule::Ptr<_1bd9c99a4_TypeEnum>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b0477_eval_type_enum(_1be3aad57_Eval*, jule::Ptr<_1bd9c99a4_TypeEnum>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b0785___eval_struct(_1be3aad57_Eval*, jule::Ptr<_1d70ab9c9_StructIns>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b0b3c_eval_struct(_1be3aad57_Eval*, jule::Ptr<_1d70ab9c9_StructIns>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b0e4a_eval_fn_ins(_1be3aad57_Eval*, jule::Ptr<_1bc9c9c4c_FnIns>);
inline void _1be3b1269_check_deprecated(_1be3aad57_Eval*, jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b1621_eval_fn(_1be3aad57_Eval*, jule::Ptr<_1bc9c9873_Fn>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b1a0b_push_illegal_cycle_error(_1be3aad57_Eval*, jule::Ptr<_1be36365b_Var>&, jule::Ptr<_1be36365b_Var>&, jule::Str&);
inline jule::Bool _1be3b1dc4_check_cross_cycle(_1be3aad57_Eval*, jule::Ptr<_1be36365b_Var>&, jule::Str&);
inline jule::Bool _1be3b227b_check_illegal_cycles(_1be3aad57_Eval*, jule::Ptr<_1be36365b_Var>&, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b2633_eval_var(_1be3aad57_Eval*, jule::Ptr<_1be36365b_Var>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b29da_eval_type_alias(_1be3aad57_Eval*, jule::Ptr<_1be3d3874_TypeAlias>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b2d92_eval_def(_1be3aad57_Eval*, jule::Any, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b31a0_eval_ident(_1be3aad57_Eval*, jule::Ptr<_1d70967c7_IdentExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b34ad_eval_unary(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7096ed1_UnaryExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b37bb_eval_variadic(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7097388_VariadicExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b3ac9_eval_unsafe(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7095e9c_UnsafeExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b3dd7_eval_arr(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709b1d3_SliceExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b428e_eval_exp_slc(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709b1d3_SliceExpr>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Ptr<_1be3a92d9_Data> _1be3b459c_eval_slice_expr(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709b1d3_SliceExpr>);
inline void _1be3b48dd_check_integer_indexing_by_data(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b4cb7_indexing_ptr(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline void _1be3b5180_indexing_arr(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline void _1be3b5548_indexing_slc(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline void _1be3b5911_indexing_map(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline void _1be3b5cc9_indexing_str(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline void _1be3b6192_to_indexing(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline jule::Bool _1be3b6626_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709806a_SubIdentExpr>&, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline jule::Bool _1be3b6a33_push_generics_from_index_data(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3b6dda_eval_ident_decl_from_indexing(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709ba74_IndexingExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3b7209_eval_indexing(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709ba74_IndexingExpr>);
inline std::tuple<jule::Ptr<_1be3a92d9_Data>,jule::Ptr<_1be3a92d9_Data>> _1be3b7517_eval_slicing_exprs(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709c17e_SlicingExpr>&);
inline void _1be3b778c_slicing_arr(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3b7b55_slicing_str(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3b80b7_check_slicing(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1d709c17e_SlicingExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3b83c5_eval_slicing(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709c17e_SlicingExpr>);
inline void _1be3b878d_cast_ptr(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b8b56_cast_struct(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b901e_cast_ref(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b93d7_cast_slc(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b9706_cast_str(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b9abe_cast_int(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3b9e87_cast_num(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3ba350_cast_prim(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline void _1be3ba66e_cast_constant(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3baa37_cast_type_enum(_1be3aad57_Eval*, jule::Ptr<_1bd9c99a4_TypeEnum>, jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3baeaa_eval_cast_by_type_n_data(_1be3aad57_Eval*, jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bb2c9_eval_cast(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7097740_CastExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bb5d7_eval_ns_selection(_1be3aad57_Eval*, jule::Ptr<_1d7097ae7_NsSelectionExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bba5a_eval_struct_lit_explicit(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d70ab9c9_StructIns>, jule::Slice<jule::Ptr<_1d709475e_Expr>>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bbd79_eval_struct_lit(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7099cc5_StructLit>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bc187_eval_type(_1be3aad57_Eval*, jule::Ptr<_1d709023d_TypeDecl>);
inline void _1be3bc4a6_call_type_fn(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1be3bc85d_check_fn_call_generics(_1be3aad57_Eval*, jule::Ptr<_1bc9c9c4c_FnIns>, jule::Ptr<_1d7098ae8_FnCallExpr>);
inline void _1be3bcb7c_call_builtin_fn(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3bcebd_check_fn_of_concurrent_call(_1be3aad57_Eval*, jule::Ptr<_1bc9c9c4c_FnIns>&, jule::Ptr<_20201c3d1_Token>);
inline void _1be3bd3b9_process_exceptional_handler(_1be3aad57_Eval*, jule::Ptr<_1bc9c9c4c_FnIns>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3bd6e9_call_fn(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3bda07_eval_fn_call(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d7098ae8_FnCallExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bddae_eval_enum_static(_1be3aad57_Eval*, jule::Ptr<_1bc9dceb3_Enum>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3be266_eval_type_enum_static(_1be3aad57_Eval*, jule::Ptr<_1bd9c99a4_TypeEnum>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3be61d_eval_struct_static(_1be3aad57_Eval*, jule::Ptr<_1d70ab9c9_StructIns>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3bea6e_eval_trait_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_1bd929d66_Trait>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c0069_eval_struct_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_1d70ab9c9_StructIns>, jule::Ptr<_1d709806a_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1be3a92d9_Data> _1be3c0421_eval_slice_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c07c8_eval_array_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c0b80_eval_map_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c1037_eval_str_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c1345_eval_int_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c1653_eval_uint_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c1961_eval_i8_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c1c6e_eval_i16_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c207c_eval_i32_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c238a_eval_i64_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c2698_eval_u8_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c29a6_eval_u16_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c2cb4_eval_u32_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c30c2_eval_u64_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c33d0_eval_f32_type_tatic(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c36dd_eval_f64_type_static(_1be3aad57_Eval*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c3a95_eval_prim_static(_1be3aad57_Eval*, jule::Str, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c3e4c_eval_type_static(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_1d709806a_SubIdentExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c4304_eval_obj_sub_ident(_1be3aad57_Eval*, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_1d709806a_SubIdentExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c4612_eval_sub_ident(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709806a_SubIdentExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c4920_eval_tuple(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d70953db_TupleExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c4cc7_eval_map(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1be3de5a5_Map>, jule::Ptr<_1d709a248_BraceLit>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c50d5_eval_brace_lit(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709a248_BraceLit>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c53e3_eval_anon_fn(_1be3aad57_Eval*, jule::Ptr<_1d70a1c66_FnDecl>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c5701_eval_binop(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d70984dd_BinopExpr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c5a0e_eval_expr_kind(jule::Ptr<_1be3aad57_Eval>, jule::Any);
inline jule::Ptr<_1be3a92d9_Data> _1be3c5d1c_eval(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709475e_Expr>);
inline jule::Ptr<_1be3a92d9_Data> _1be3c612a_eval_expr(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_1d709475e_Expr>);
struct _1be3aad57_Eval {
	jule::Ptr<_1be348311_Sema> _field_s = jule::Ptr<_1be348311_Sema>();
	jule::Trait<_1be3eedce_Lookup> _field_lookup = jule::Trait<_1be3eedce_Lookup>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_prefix = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1be36365b_Var> _field_owner = jule::Ptr<_1be36365b_Var>();
	jule::Ptr<_1d708808d_FieldIns> _field_field = jule::Ptr<_1d708808d_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1be3aad57_Eval(void) = default;

	inline bool operator==(_1be3aad57_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1be3aad57_Eval _other) { return !this->operator==(_other); }


};
inline _1be3c659d_UnaryEval static__1be3c6a54_new(jule::Ptr<_1be3aad57_Eval>);
inline void _1be3c6c30_minus(_1be3c659d_UnaryEval*);
inline void _1be3c6e0b_plus(_1be3c659d_UnaryEval*);
inline void _1be3c70d7_caret(_1be3c659d_UnaryEval*);
inline void _1be3c72b3_excl(_1be3c659d_UnaryEval*);
inline void _1be3c748e_star(_1be3c659d_UnaryEval*);
inline void _1be3c766a_amper(_1be3c659d_UnaryEval*);
inline void _1be3c7846_type_decl(_1be3c659d_UnaryEval*);
inline void _1be3c7a22_eval_data(_1be3c659d_UnaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3c7cec_eval(_1be3c659d_UnaryEval*, jule::Ptr<_1d7096ed1_UnaryExpr>);
struct _1be3c659d_UnaryEval {
	jule::Ptr<_1be3aad57_Eval> _field_e = jule::Ptr<_1be3aad57_Eval>();
	jule::Ptr<_1be3a92d9_Data> _field_d = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_1d7096ed1_UnaryExpr> _field_u = jule::Ptr<_1d7096ed1_UnaryExpr>();
	

	_1be3c659d_UnaryEval(void) = default;

	inline bool operator==(_1be3c659d_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1be3c659d_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1be3c833b_BinaryEval static__1be3c8902_new_plain(jule::Ptr<_1be3aad57_Eval>);
inline _1be3c833b_BinaryEval static__1be3c8c43_new(jule::Ptr<_1be3aad57_Eval>, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1be3c8ec9_check_type_compatibility(_1be3c833b_BinaryEval*);
inline jule::Bool _1be3c9282_check_struct_common_operator_compatibility(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3c9529_eval_nil(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3c978d_eval_enum(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3c9a02_eval_type_enum(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3c9c66_eval_sptr(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3c9eca_eval_ptr(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3ca23e_eval_arr(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3ca4a3_eval_slc(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3ca717_eval_fn(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3ca97b_eval_struct(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cabe0_eval_trait(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cae54_eval_any(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cb1b8_eval_bool(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cb42c_eval_str(_1be3c833b_BinaryEval*);
inline void _1be3cb608_set_type_to_greater(_1be3c833b_BinaryEval*);
inline void _1be3cb84a_check_mod_data(_1be3c833b_BinaryEval*, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3cba26_mod(_1be3c833b_BinaryEval*);
inline jule::Bool _1be3cbe00_numbers_are_compatibile(_1be3c833b_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1be3a92d9_Data> _1be3cc175_eval_float(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cc3d9_eval_int(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cc64d_eval_prim(_1be3c833b_BinaryEval*);
inline jule::Ptr<_1be3a92d9_Data> _1be3cc8b2_eval_op(_1be3c833b_BinaryEval*);
inline void _1be3ccb37_eval_const(_1be3c833b_BinaryEval*, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3ccdac_check_data(_1be3c833b_BinaryEval*, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3cd088_check_datas(_1be3c833b_BinaryEval*);
inline void _1be3cd30d_set_model(_1be3c833b_BinaryEval*, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3cd583_post_eval(_1be3c833b_BinaryEval*, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3cd93a_solve_explicit(_1be3c833b_BinaryEval*, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3cdc48_eval(_1be3c833b_BinaryEval*, jule::Ptr<_1d70984dd_BinopExpr>&);
struct _1be3c833b_BinaryEval {
	jule::Ptr<_1be3aad57_Eval> _field_e = jule::Ptr<_1be3aad57_Eval>();
	jule::Ptr<_1be3a92d9_Data> _field_l = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_1be3a92d9_Data> _field_r = jule::Ptr<_1be3a92d9_Data>();
	jule::Ptr<_20201c3d1_Token> _field_op = jule::Ptr<_20201c3d1_Token>();
	

	_1be3c833b_BinaryEval(void) = default;

	inline bool operator==(_1be3c833b_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1be3c833b_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1be3d3874_TypeAlias {
	jule::Ptr<_1d70a0270_ScopeTree> _field_scope = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1be3d86c0_TypeSymbol> _field_kind = jule::Ptr<_1be3d86c0_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>();
	

	_1be3d3874_TypeAlias(void) = default;

	inline bool operator==(_1be3d3874_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1be3d3874_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3d4963_to_str(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d4c71_equals(jule::Ptr<_1be3d45ab_TypeKind>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Bool _1be3d5227_cpp_linked(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d548b_is_nil(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d5700_void(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d5964_mutable(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d5bc8_nil_compatible(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d5e3c_performs_rc(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d61a1_supports_cloning(_1be3d45ab_TypeKind*);
inline jule::Bool _1be3d6415_variadicable(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3d9083_Prim> _1be3d6679_prim(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3dc592_Sptr> _1be3d68dd_sptr(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3e0b06_Ptr> _1be3d6b52_ptr(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1bc9dceb3_Enum> _1be3d6db6_enm(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3d712a_tenm(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3e0199_Arr> _1be3d738e_arr(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3dceee_Slc> _1be3d7603_slc(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1be3d7867_fnc(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1d70ab9c9_StructIns> _1be3d7acb_strct(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1bd929d66_Trait> _1be3d7d40_trt(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3de5a5_Map> _1be3d80a4_map(_1be3d45ab_TypeKind*);
inline jule::Ptr<_1be3dd9e4_Tuple> _1be3d8318_tup(_1be3d45ab_TypeKind*);
struct _1be3d45ab_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1be3d417c_Kind> _field_kind = jule::Trait<_1be3d417c_Kind>();
	

	_1be3d45ab_TypeKind(void) = default;

	inline bool operator==(_1be3d45ab_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1be3d45ab_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3d8abb_checked(_1be3d86c0_TypeSymbol*);
inline void _1be3d8c97_remove_kind(_1be3d86c0_TypeSymbol*);
struct _1be3d86c0_TypeSymbol {
	jule::Ptr<_1d709023d_TypeDecl> _field_decl = jule::Ptr<_1d709023d_TypeDecl>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_kind = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1be3d86c0_TypeSymbol(void) = default;

	inline bool operator==(_1be3d86c0_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1be3d86c0_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3d93e6_to_str(_1be3d9083_Prim*);
inline jule::Bool _1be3d9704_equals(jule::Ptr<_1be3d9083_Prim>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Bool _1be3d9b66_is_i8(_1be3d9083_Prim*);
inline jule::Bool _1be3d9dca_is_i16(_1be3d9083_Prim*);
inline jule::Bool _1be3da13e_is_i32(_1be3d9083_Prim*);
inline jule::Bool _1be3da3a3_is_i64(_1be3d9083_Prim*);
inline jule::Bool _1be3da617_is_u8(_1be3d9083_Prim*);
inline jule::Bool _1be3da87b_is_u16(_1be3d9083_Prim*);
inline jule::Bool _1be3daae0_is_u32(_1be3d9083_Prim*);
inline jule::Bool _1be3dad54_is_u64(_1be3d9083_Prim*);
inline jule::Bool _1be3db0b8_is_f32(_1be3d9083_Prim*);
inline jule::Bool _1be3db32c_is_f64(_1be3d9083_Prim*);
inline jule::Bool _1be3db591_is_int(_1be3d9083_Prim*);
inline jule::Bool _1be3db805_is_uint(_1be3d9083_Prim*);
inline jule::Bool _1be3dba69_is_uintptr(_1be3d9083_Prim*);
inline jule::Bool _1be3dbccd_is_bool(_1be3d9083_Prim*);
inline jule::Bool _1be3dc042_is_str(_1be3d9083_Prim*);
inline jule::Bool _1be3dc2a6_is_any(_1be3d9083_Prim*);
struct _1be3d9083_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1be3d9083_Prim(void) = default;

	inline bool operator==(_1be3d9083_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1be3d9083_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3dc905_to_str(_1be3dc592_Sptr*);
inline jule::Bool _1be3dcc13_equals(jule::Ptr<_1be3dc592_Sptr>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1be3dc592_Sptr {
	jule::Ptr<_1be3d45ab_TypeKind> _field_elem = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1be3dc592_Sptr(void) = default;

	inline bool operator==(_1be3dc592_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1be3dc592_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3dd472_to_str(_1be3dceee_Slc*);
inline jule::Bool _1be3dd780_equals(jule::Ptr<_1be3dceee_Slc>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1be3dceee_Slc {
	jule::Ptr<_1be3d45ab_TypeKind> _field_elem = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1be3dceee_Slc(void) = default;

	inline bool operator==(_1be3dceee_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1be3dceee_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3dde67_to_str(_1be3dd9e4_Tuple*);
inline jule::Bool _1be3de275_equals(jule::Ptr<_1be3dd9e4_Tuple>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1be3dd9e4_Tuple {
	jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>();
	

	_1be3dd9e4_Tuple(void) = default;

	inline bool operator==(_1be3dd9e4_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1be3dd9e4_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3de918_to_str(_1be3de5a5_Map*);
inline jule::Bool _1be3dec26_equals(jule::Ptr<_1be3de5a5_Map>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1be3de5a5_Map {
	jule::Ptr<_1be3d45ab_TypeKind> _field_key = jule::Ptr<_1be3d45ab_TypeKind>();
	jule::Ptr<_1be3d45ab_TypeKind> _field_val = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1be3de5a5_Map(void) = default;

	inline bool operator==(_1be3de5a5_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1be3de5a5_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3e050c_to_str(_1be3e0199_Arr*);
inline jule::Bool _1be3e081a_equals(jule::Ptr<_1be3e0199_Arr>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1be3e0199_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1be3d45ab_TypeKind> _field_elem = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1be3e0199_Arr(void) = default;

	inline bool operator==(_1be3e0199_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1be3e0199_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1be3e0e69_to_str(_1be3e0b06_Ptr*);
inline jule::Bool _1be3e1277_equals(jule::Ptr<_1be3e0b06_Ptr>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Bool _1be3e15c9_is_unsafe(_1be3e0b06_Ptr*);
struct _1be3e0b06_Ptr {
	jule::Ptr<_1be3d45ab_TypeKind> _field_elem = jule::Ptr<_1be3d45ab_TypeKind>();
	

	_1be3e0b06_Ptr(void) = default;

	inline bool operator==(_1be3e0b06_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1be3e0b06_Ptr _other) { return !this->operator==(_other); }


};
struct _1be3e1a4c_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1be3e1a4c_Referencer(void) = default;

	inline bool operator==(_1be3e1a4c_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1be3e1a4c_Referencer _other) { return !this->operator==(_other); }


};
inline void _1be3e2e9e_push_err(_1be3e2795_TypeChecker*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1be3e317a_allow_builtin(_1be3e2795_TypeChecker*);
inline void _1be3e3356_disallow_builtin(_1be3e2795_TypeChecker*);
inline jule::Ptr<_1be3d9083_Prim> _1be3e3664_build_prim(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&);
inline void _1a9642b2b_push_reference(_1be3e2795_TypeChecker*, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1a9645c83_push_reference(_1be3e2795_TypeChecker*, jule::Ptr<_1bd929d66_Trait>&);
inline void _1be3e3b5e_push_reference_by_kind(_1be3e2795_TypeChecker*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline void _1be3e4027_push_cycle_error(_1be3e2795_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1be3e43ce_check_cross_cycle(_1be3e2795_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1be3e4786_check_illegal_cycles(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1be3d417c_Kind> _1be3e4b3d_from_type_alias(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1be3d3874_TypeAlias>&);
inline jule::Ptr<_1bc9dceb3_Enum> _1be3e4ee5_from_enum(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1bc9dceb3_Enum>&);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3e539c_from_type_enum(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1bd9c99a4_TypeEnum>&);
inline jule::Ptr<_1bd929d66_Trait> _1be3e5754_from_trait(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1bd929d66_Trait>&);
inline jule::Bool _1be3e5b0b_check_struct_ins(_1be3e2795_TypeChecker*, jule::Ptr<_1d70ab9c9_StructIns>&, jule::Ptr<_20201c3d1_Token>&);
inline void _1be3e5da3_append_used_struct_reference(_1be3e2795_TypeChecker*, jule::Ptr<_1d7073276_Struct>&);
inline jule::Ptr<_1d70ab9c9_StructIns> _1be3e626b_build_struct_instance(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1d7073276_Struct>&);
inline jule::Ptr<_1d70ab9c9_StructIns> _1be3e6623_from_struct(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&, jule::Ptr<_1d7073276_Struct>&);
inline jule::Trait<_1be3d417c_Kind> _1be3e6931_get_def(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>&);
inline jule::Trait<_1be3d417c_Kind> _1be3e6c3e_build_ident(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090804_IdentTypeDecl>);
inline jule::Trait<_1be3d417c_Kind> _1be3e704c_build_sub_ident(_1be3e2795_TypeChecker*, jule::Ptr<_1d7090e53_SubIdentTypeDecl>);
inline jule::Ptr<_1be3dc592_Sptr> _1be3e735a_build_sptr_from_type(_1be3e2795_TypeChecker*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Ptr<_1be3dc592_Sptr> _1be3e7668_build_sptr(_1be3e2795_TypeChecker*, jule::Ptr<_1d70915e6_SptrTypeDecl>);
inline jule::Ptr<_1be3e0b06_Ptr> _1be3e7976_build_ptr_from_type(_1be3e2795_TypeChecker*, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Ptr<_1be3e0b06_Ptr> _1be3e7c84_build_ptr(_1be3e2795_TypeChecker*, jule::Ptr<_1d70920b9_PtrTypeDecl>);
inline jule::Ptr<_1be3dceee_Slc> _1be3e8092_build_slc(_1be3e2795_TypeChecker*, jule::Ptr<_1d70919e2_SlcTypeDecl>);
inline jule::Ptr<_1be3e0199_Arr> _1be3e83a0_build_arr(_1be3e2795_TypeChecker*, jule::Ptr<_1d709274b_ArrTypeDecl>);
inline jule::Ptr<_1be3de5a5_Map> _1be3e86ad_build_map(_1be3e2795_TypeChecker*, jule::Ptr<_1d7092e99_MapTypeDecl>);
inline jule::Ptr<_1be3dd9e4_Tuple> _1be3e89bb_build_tuple(_1be3e2795_TypeChecker*, jule::Ptr<_1d7091ccd_TupleTypeDecl>);
inline jule::Bool _1be3e8cc9_check_fn_types(_1be3e2795_TypeChecker*, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1be3e90d7_build_fn(_1be3e2795_TypeChecker*, jule::Ptr<_1d70a1c66_FnDecl>);
inline jule::Trait<_1be3d417c_Kind> _1be3e93e5_build_by_namespace(_1be3e2795_TypeChecker*, jule::Ptr<_1d709130a_NamespaceTypeDecl>);
inline jule::Ptr<_1be3d45ab_TypeKind> _1be3e9703_build(_1be3e2795_TypeChecker*, jule::Any&);
inline jule::Ptr<_1be3d45ab_TypeKind> _1be3e9a11_check_decl(_1be3e2795_TypeChecker*, jule::Ptr<_1d709023d_TypeDecl>&);
inline void _1be3e9c86_check(_1be3e2795_TypeChecker*, jule::Ptr<_1be3d86c0_TypeSymbol>&);
struct _1be3e2795_TypeChecker {
	jule::Ptr<_1be348311_Sema> _field_s = jule::Ptr<_1be348311_Sema>();
	jule::Trait<_1be3eedce_Lookup> _field_lookup = jule::Trait<_1be3eedce_Lookup>();
	jule::Ptr<_1be3e1a4c_Referencer> _field_referencer = jule::Ptr<_1be3e1a4c_Referencer>();
	jule::Ptr<_1bc9cb402_ReferenceStack> _field_refers = jule::Ptr<_1bc9cb402_ReferenceStack>();
	jule::Ptr<_20201c3d1_Token> _field_error_token = jule::Ptr<_20201c3d1_Token>();
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>();
	jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1be3d3874_TypeAlias> _field_owner_alias = jule::Ptr<_1be3d3874_TypeAlias>();
	jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1be3e2795_TypeChecker(void) = default;

	inline bool operator==(_1be3e2795_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1be3e2795_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1be3ea3e6___ident_type_decl(jule::Str&, jule::Ptr<_1d7090804_IdentTypeDecl>);
inline jule::Bool static__1be3ea737_exist(jule::Str&, jule::Any&);
struct _1be3e9ea6_IdentTypeLookup {
	

	_1be3e9ea6_IdentTypeLookup(void) = default;

	inline bool operator==(_1be3e9ea6_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1be3e9ea6_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a8ed48b9_FileInfo {
	jule::Ptr<_1d705abdc_Ast> _field_ast = jule::Ptr<_1d705abdc_Ast>();
	jule::Slice<_201be0d52_Log> _field_errors = jule::Slice<_201be0d52_Log>();
	

	_1a8ed48b9_FileInfo(void) = default;

	inline bool operator==(_1a8ed48b9_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a8ed48b9_FileInfo _other) { return !this->operator==(_other); }


};
struct _1a902d9e0_stmt {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1a902d9e0_stmt(void) = default;

	inline bool operator==(_1a902d9e0_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1a902d9e0_stmt _other) { return !this->operator==(_other); }


};
inline void _1a902e99c_stop(_1a902e31a_ScopeParser*);
inline jule::Bool _1a902ec11_stopped(_1a902e31a_ScopeParser*);
inline jule::Bool _1a902ee75_finished(_1a902e31a_ScopeParser*);
inline jule::Bool _1a90301d9_is_last_st(_1a902e31a_ScopeParser*);
inline void _1a9030508_push_err(_1a902e31a_ScopeParser*, jule::Ptr<_20201c3d1_Token>, jule::Str);
inline void _1a9030827_push_suggestion(_1a902e31a_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a9030a9c_insert_as_next(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1a902d9e0_stmt> _1a9030d11_next(_1a902e31a_ScopeParser*);
inline jule::Ptr<_1d70a0270_ScopeTree> _1a90311b8_build_scope(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1d70a2c45_VarDecl> _1a90314c6_build_var_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a30ec_RetSt> _1a90317d4_build_ret_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a375c_Iter> _1a9031ae2_build_while_next_iter(_1a902e31a_ScopeParser*, jule::Ptr<_1a902d9e0_stmt>&);
inline jule::Ptr<_1d70a4032_WhileKind> _1a9031e00_build_while_iter_kind(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a9032230_get_range_kind_keys_tokens(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a2c45_VarDecl> _1a903254e_build_range_kind_key(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>> _1a903285c_build_range_kind_keys(_1a902e31a_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>&);
inline void _1a9032b9d_setup_range_kind_keys_plain(_1a902e31a_ScopeParser*, jule::Ptr<_1d70a48c3_RangeKind>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9033000_setup_range_kind_keys_explicit(_1a902e31a_ScopeParser*, jule::Ptr<_1d70a48c3_RangeKind>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9033330_setup_range_kind_keys(_1a902e31a_ScopeParser*, jule::Ptr<_1d70a48c3_RangeKind>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a48c3_RangeKind> _1a9033781_build_range_iter_kind(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Any _1a9033b38_build_common_iter_kind(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Ptr<_1d70a375c_Iter> _1a9033e46_build_common_iter(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a375c_Iter> _1a9034254_build_iter_st(_1a902e31a_ScopeParser*, jule::Ptr<_1a902d9e0_stmt>&);
inline jule::Ptr<_1d70a4c7a_BreakSt> _1a9034562_build_break_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a5132_ContSt> _1a9034870_build_cont_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a55a5_If> _1a9034b7d_build_if(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a595c_Else> _1a9034e8b_build_else(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a5dd0_Conditional> _1a9035299_build_if_else_chain(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d7096354_CoExpr> _1a90355a7_build_co_call_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709cc95_GotoSt> _1a90358b5_build_goto_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709d081_FallSt> _1a9035bc3_build_fall_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a65a6_TypeAliasDecl> _1a9035ed1_build_type_alias_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9036443_push_case_expr(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Ptr<_20201c3d1_Token>, jule::Bool, jule::Slice<jule::Ptr<_1d709475e_Expr>>&);
inline jule::Slice<jule::Ptr<_1d709475e_Expr>> _1a90367ea_build_case_exprs(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Bool);
inline jule::Ptr<_1d70a0270_ScopeTree> _1a9036b08_build_case_scope(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline std::tuple<jule::Ptr<_1d70a6a29_Case>,jule::Bool> _1a9036eb0_build_case(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1d70a6a29_Case>>,jule::Ptr<_1d70a595c_Else>> _1a9037367_build_cases(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Bool);
inline jule::Ptr<_1d70a7200_MatchCase> _1a9037675_build_match_case(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a0270_ScopeTree> _1a9037983_build_scope_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709c8dd_LabelSt> _1a9037c91_build_label_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1a903809e_build_id_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1a9047102_AssignInfo> _1a90383ac_build_assign_info(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709d68b_AssignLeft> _1a90386ba_build_assign_l(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_1d709d68b_AssignLeft>> _1a90389c8_build_assign_ls(_1a902e31a_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>&);
inline std::tuple<jule::Ptr<_1d709dbca_AssignSt>,jule::Bool> _1a9038cd6_build_plain_assign(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline std::tuple<jule::Ptr<_1d709dbca_AssignSt>,jule::Bool> _1a90390e4_build_decl_assign(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline std::tuple<jule::Ptr<_1d709dbca_AssignSt>,jule::Bool> _1a9039402_build_assign_st(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d7095100_UseExpr> _1a9039710_build_use_expr(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Any _1a9039a1d_build_st(_1a902e31a_ScopeParser*, jule::Ptr<_1a902d9e0_stmt>&);
inline void _1a9039d3c_build(_1a902e31a_ScopeParser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Ptr<_1d70a0270_ScopeTree>&);
struct _1a902e31a_ScopeParser {
	jule::Ptr<_1a904a28c_Parser> _field_p = jule::Ptr<_1a904a28c_Parser>();
	jule::Ptr<_1d70a0270_ScopeTree> _field_s = jule::Ptr<_1d70a0270_ScopeTree>();
	jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1a902d9e0_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1a902e31a_ScopeParser(void) = default;

	inline bool operator==(_1a902e31a_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a902e31a_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1a903a8dc_CallData {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	

	_1a903a8dc_CallData(void) = default;

	inline bool operator==(_1a903a8dc_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1a903a8dc_CallData _other) { return !this->operator==(_other); }


};
inline void _1a903c636_push_err(_1a903bd72_ExprBuilder*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a903c955_push_suggestion(_1a903bd72_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d70953db_TupleExpr> _1a903cc63_build_tuple(_1a903bd72_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>&);
inline jule::Ptr<_1d7095793_LitExpr> _1a903d071_build_lit(_1a903bd72_ExprBuilder*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1d709023d_TypeDecl> _1a903d37e_build_primitive_type(_1a903bd72_ExprBuilder*, jule::Ptr<_20201c3d1_Token>&);
inline jule::Any _1a903d68c_build_single(_1a903bd72_ExprBuilder*, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1d70967c7_IdentExpr> _1a903d99a_build_cpp_linked_ident(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d7096ed1_UnaryExpr> _1a903dca8_build_unary(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709806a_SubIdentExpr> _1a903e0b6_build_obj_sub_ident(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d7097ae7_NsSelectionExpr> _1a903e3c4_build_ns_sub_ident(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709023d_TypeDecl> _1a903e6d2_build_type(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Any _1a903e9e0_build_sub_ident(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d7097388_VariadicExpr> _1a903eced_build_variadic(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Any _1a904010b_build_op_right(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d7094a4a_RangeExpr> _1a904043b_build_between_parentheses(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d7097740_CastExpr> _1a904075a_try_build_cast(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9040b23_push_arg(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_1d709475e_Expr>>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Ptr<_20201c3d1_Token>);
inline jule::Slice<jule::Ptr<_1d709475e_Expr>> _1a9040e31_build_args(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _1a904123e_build_call_generics(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d7098ae8_FnCallExpr> _1a90415e6_build_fn_call(_1a903bd72_ExprBuilder*, jule::Ptr<_20201c3d1_Token>&, jule::Ptr<_1a903a8dc_CallData>&);
inline jule::Any _1a9041926_build_parentheses_range(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d7095e9c_UnsafeExpr> _1a9041c45_build_unsafe_expr(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a1c66_FnDecl> _1a9042053_build_anon_fn(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Any _1a9042361_build_unsafe(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9042729_push_range_lit_part(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Ptr<_20201c3d1_Token>, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a9042a59_get_brace_range_lit_expr_parts(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d7099577_FieldExprPair> _1a9042d78_build_field_expr_pair(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709475e_Expr> _1a9043186_build_struct_lit_expr(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_1d709475e_Expr>> _1a9043494_build_struct_lit_exprs(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d7099cc5_StructLit> _1a90437c4_build_typed_struct_literal(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709475e_Expr> _1a9043ae3_build_brace_lit_part(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709a248_BraceLit> _1a9043e01_build_brace_lit(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Any _1a904420e_build_brace_range(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a904451c_get_enumerable_parts(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709b1d3_SliceExpr> _1a904482a_build_slice(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709ba74_IndexingExpr> _1a9044c7b_build_indexing(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Ptr<_20201c3d1_Token>);
inline jule::Ptr<_1d709c17e_SlicingExpr> _1a9045320_build_slicing(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64&, jule::Ptr<_20201c3d1_Token>&, jule::Ptr<_20201c3d1_Token>);
inline jule::Any _1a904562d_build_bracket_range(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Any _1a904593b_build_data(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70984dd_BinopExpr> _1a9045ce3_build_binop(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64);
inline jule::Any _1a9046101_build(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Any _1a904640e_build_kind(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709475e_Expr> _1a904671c_build_from_tokens(_1a903bd72_ExprBuilder*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
struct _1a903bd72_ExprBuilder {
	jule::Ptr<_1a904a28c_Parser> _field_p = jule::Ptr<_1a904a28c_Parser>();
	

	_1a903bd72_ExprBuilder(void) = default;

	inline bool operator==(_1a903bd72_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a903bd72_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1a9047102_AssignInfo {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_l = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_r = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Ptr<_20201c3d1_Token> _field_setter = jule::Ptr<_20201c3d1_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1a9047102_AssignInfo(void) = default;

	inline bool operator==(_1a9047102_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1a9047102_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1a904a5bc_stop(_1a904a28c_Parser*);
inline jule::Bool _1a904a831_stopped(_1a904a28c_Parser*);
inline void _1a904abe9_push_err(_1a904a28c_Parser*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a904b018_push_suggestion(_1a904a28c_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d709475e_Expr> _1a904b326_build_expr(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d705bd64_Directive> _1a904b634_build_directive(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a904b8a9_push_directive(_1a904a28c_Parser*, jule::Ptr<_1d705bd64_Directive>);
inline jule::Ptr<_1d70a0270_ScopeTree> _1a904bc61_build_scope(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Ptr<_20201c3d1_Token>);
inline std::tuple<jule::Ptr<_1d709023d_TypeDecl>,jule::Bool> _1a904c1b2___build_type(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1d709023d_TypeDecl>,jule::Bool> _1a904c613_build_type(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1d70a65a6_TypeAliasDecl> _1a904c921_build_type_alias_decl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a904cc62_build_var_type_and_expr(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_1d70a2c45_VarDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a904d01a_build_var_common(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_1d70a2c45_VarDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a904d3d3_build_var_begin(_1a904a28c_Parser*, jule::Ptr<_1d70a2c45_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a2c45_VarDecl> _1a904d6e1_build_var(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d709c536_GenericDecl> _1a904d9ee_build_generic(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _1a904dda6_build_generics(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Ptr<_20201c3d1_Token>&);
inline jule::Ptr<_1d70a0946_ParamDecl> _1a904e1b4_build_self_param(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a904e57c_param_type_begin(_1a904a28c_Parser*, jule::Ptr<_1d70a0946_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a904e89b_build_param_type(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_1d70a0946_ParamDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a904ebba_build_param_body(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_1d70a0946_ParamDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a0946_ParamDecl> _1a904eec8_build_param(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a905024d_check_params(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>> _1a9050605_build_params(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1d7093351_RetTypeDecl>,jule::Bool> _1a90509ac_build_multi_ret_type(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1d7093351_RetTypeDecl>,jule::Bool> _1a9050d64_build_ret_type(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64&);
inline jule::Ptr<_1d70a1c66_FnDecl> _1a90512b5_build_fn_prototype(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1d70a1c66_FnDecl> _1a9051716_build_fn(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20201c3d1_Token>> _1a9051a24_get_use_decl_selectors(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a9051d43_build_cpp_use_decl(_1a904a28c_Parser*, jule::Ptr<_1d70a7992_UseDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9052162_build_std_use_decl(_1a904a28c_Parser*, jule::Ptr<_1d70a7992_UseDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a9052481_build_ident_use_decl(_1a904a28c_Parser*, jule::Ptr<_1d70a7992_UseDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a90527a0_parse_use_decl(_1a904a28c_Parser*, jule::Ptr<_1d70a7992_UseDecl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a7992_UseDecl> _1a9052b57_build_use_decl(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>, jule::Bool);
inline jule::Ptr<_1d709023d_TypeDecl> _1a9053031_build_type_enum_item_kind(jule::Ptr<_1a904a28c_Parser>, jule::I64&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>> _1a9053350_build_type_enum_items(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a9a4e_TypeEnumDecl> _1a905365d_build_type_enum_decl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709475e_Expr> _1a9053a15_build_enum_item_expr(jule::Ptr<_1a904a28c_Parser>, jule::I64&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>> _1a9053d23_build_enum_items(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a893d_EnumDecl> _1a9054131_build_enum_decl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Any _1a905443e_build_node_enum_decl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a9c4c_FieldDecl> _1a905474c_build_field(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>> _1a9054a7c_build_struct_decl_fields(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70aa500_StructDecl> _1a9054d9b_build_struct_decl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9055121_check_method_receiver(_1a904a28c_Parser*, jule::Ptr<_1d70a1c66_FnDecl>&);
inline jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>> _1a905542e_build_trait_methods(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70aab0a_TraitDecl> _1a905573c_build_trait_decl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a1c66_FnDecl> _1a9055a4a_build_cpp_link_fn(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a2c45_VarDecl> _1a9055d58_build_cpp_link_var(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70aa500_StructDecl> _1a9056166_build_cpp_link_struct(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a65a6_TypeAliasDecl> _1a9056496_build_cpp_link_type_alias(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d70a7992_UseDecl> _1a90567b5_build_cpp_link_use(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Any _1a9056ac3_build_cpp_link(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70a1c66_FnDecl> _1a9056dd1_get_method(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9057200_parse_impl_body(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_1d70ab215_Impl>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70ab215_Impl> _1a905750d_build_impl(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Any _1a905781b_build_node_data(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9057b3a_apply_fn_meta(_1a904a28c_Parser*, jule::Ptr<_1d70a1c66_FnDecl>&, jule::Bool);
inline void _1a9057e59_apply_meta(_1a904a28c_Parser*, _1d705b968_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _1a9058289_build_general_scope_node_data(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline void _1a9058520_push_use_decl(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_1d70a7992_UseDecl>&);
inline jule::Bool _1a905882d_push_meta_nodes(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline _1d705b968_Node _1a9058b3b_parse_node(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9058db1_append_node(jule::Ptr<_1a904a28c_Parser>, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a9059323_remove_range(_1a904a28c_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Slice<jule::I64>&);
inline void _1a905970d_push_wrong_order_close_err(_1a904a28c_Parser*, jule::Ptr<_20201c3d1_Token>&, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Slice<jule::I64>&);
inline void _1a9059b81_push_range_close(_1a904a28c_Parser*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::Slice<jule::I64>&);
inline void _1a9059e06_check_ranges(_1a904a28c_Parser*, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline void _1a905a17b_parse(jule::Ptr<_1a904a28c_Parser>, jule::Ptr<_20202276b_File>&);
struct _1a904a28c_Parser {
	jule::Ptr<_1d705abdc_Ast> _field_ast = jule::Ptr<_1d705abdc_Ast>();
	jule::Slice<jule::Ptr<_1d705bd64_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d705bd64_Directive>>();
	jule::Slice<_201be0d52_Log> _field_errors = jule::Slice<_201be0d52_Log>();
	

	_1a904a28c_Parser(void) = default;

	inline bool operator==(_1a904a28c_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1a904a28c_Parser _other) { return !this->operator==(_other); }


};
inline void _1a905bc0a_push_err(_1a905b666_TypeBuilder*, jule::Ptr<_20201c3d1_Token>, jule::Str);
inline void _1a905c029_push_suggestion(_1a905b666_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905c28d_build_prim(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905c502_build_namespace(_1a905b666_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _1a905c766_build_generics(_1a905b666_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a905c9ca_ident_generics(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905cc3e_build_ident(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905cea3_build_cpp_link(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905d217_build_fn(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905d47b_build_ptr(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905d6e0_build_sptr(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905d954_build_op(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905dbb8_build_slc(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905de2c_build_arr(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905e2d4_build_map(_1a905b666_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905e548_build_enumerable(_1a905b666_TypeBuilder*);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905e7ac_step(_1a905b666_TypeBuilder*);
inline std::tuple<jule::Ptr<_1d709023d_TypeDecl>,jule::Bool> _1a905ea21_build(_1a905b666_TypeBuilder*);
struct _1a905b666_TypeBuilder {
	jule::Ptr<_1a904a28c_Parser> _field_p = jule::Ptr<_1a904a28c_Parser>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _field_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1a905b666_TypeBuilder(void) = default;

	inline bool operator==(_1a905b666_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a905b666_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1c0186516_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1c0186516_CompileInfo(void) = default;

	inline bool operator==(_1c0186516_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1c0186516_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1c0187db9_push_err(_1c0187869_DirectiveEval*, jule::Ptr<_20201c3d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1c0188271_split_operans(_1c0187869_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Bool _1c018857e_eval_directive_ident(_1c0187869_DirectiveEval*, jule::Str);
inline jule::Bool _1c018888c_eval_directive_part(_1c0187869_DirectiveEval*, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Bool _1c0188b01_eval(_1c0187869_DirectiveEval*);
struct _1c0187869_DirectiveEval {
	jule::Slice<_201be0d52_Log> _field_logs = jule::Slice<_201be0d52_Log>();
	jule::Ptr<_1d705bd64_Directive> _field_d = jule::Ptr<_1d705bd64_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c0187869_DirectiveEval(void) = default;

	inline bool operator==(_1c0187869_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c0187869_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8add45c_JuleImporter> static__1d698d576_new(_1c0186516_CompileInfo);
inline jule::Slice<jule::Ptr<_1be272d40_ImportInfo>> _1d69923c1_all_packages(_1a8add45c_JuleImporter*);
inline void _1d69ead75_set_mod_path(_1a8add45c_JuleImporter*, jule::Str);
inline jule::Str _1d6a06688_get_mod_path(_1a8add45c_JuleImporter*);
inline jule::Str _1d6a18865_mod_by_id(_1a8add45c_JuleImporter*, jule::I64);
inline jule::Ptr<_1be272d40_ImportInfo> _1a8a388e6_get_import(_1a8add45c_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1d705abdc_Ast>>,jule::Slice<_201be0d52_Log>> _1a8a3a233_import_package(_1a8add45c_JuleImporter*, jule::Str, jule::Bool);
inline void _1a8a4445c_imported(_1a8add45c_JuleImporter*, jule::Ptr<_1be272d40_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_201be0d52_Log>> _1a8a588d3_is_pass_build_directives(_1a8add45c_JuleImporter*, jule::Ptr<_1d705abdc_Ast>&);
struct _1a8add45c_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1be272d40_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1be272d40_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1a8add45c_JuleImporter(void) = default;

	inline bool operator==(_1a8add45c_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1a8add45c_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1d6983e2e_OrderedDefines {
	jule::Slice<jule::Ptr<_1d7073276_Struct>> _field_structs = jule::Slice<jule::Ptr<_1d7073276_Struct>>();
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_globals = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	

	_1d6983e2e_OrderedDefines(void) = default;

	inline bool operator==(_1d6983e2e_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1d6983e2e_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac74e460_is_common_ordered(jule::Slice<jule::Ptr<_1d7073276_Struct>>&, jule::Ptr<_1d7073276_Struct>);
inline jule::Bool _1ac757a62_is_common_ordered(jule::Slice<jule::Ptr<_1be36365b_Var>>&, jule::Ptr<_1be36365b_Var>);
inline void _1ac749636_order_common(jule::Slice<jule::Ptr<_1d7073276_Struct>>&);
inline void _1ac74a25d_order_common(jule::Slice<jule::Ptr<_1be36365b_Var>>&);
inline void static__1a8b9d2b9_order_structures(jule::Slice<jule::Ptr<_1d7073276_Struct>>&);
inline void static__1a8e817ab_order_vars(jule::Slice<jule::Ptr<_1be36365b_Var>>&);
struct _1a901a57b_DefineOrderer {
	

	_1a901a57b_DefineOrderer(void) = default;

	inline bool operator==(_1a901a57b_DefineOrderer _other) { return true; }

	inline bool operator!=(_1a901a57b_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1a9105b72_LiveTable {
	jule::Slice<jule::Ptr<_1be36365b_Var>> _field_vars = jule::Slice<jule::Ptr<_1be36365b_Var>>();
	jule::Slice<jule::Ptr<_1bc9c9c4c_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1bc9c9c4c_FnIns>>();
	jule::Slice<jule::Ptr<_1d70ab9c9_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1d70ab9c9_StructIns>>();
	jule::Slice<jule::Ptr<_1bd929d66_Trait>> _field_traits = jule::Slice<jule::Ptr<_1bd929d66_Trait>>();
	

	_1a9105b72_LiveTable(void) = default;

	inline bool operator==(_1a9105b72_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1a9105b72_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1a910a292_optimize_child(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be1ca25e_Scope>&);
inline void _1a910a517_optimize_body_child(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be1ca25e_Scope>&);
inline void _1a910a78c_optimize_expr_model(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Any&);
inline void _1a910a968_eliminate_followed(_1a9109cca_ScopeDeadCode*);
inline void _1a910abdd_push_goto(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be259178_GotoSt>);
inline void _1a910ae63_push_label(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be258e8b_Label>);
inline void _1a910b1d8_optimize_range_iter(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be2588c5_RangeIter>);
inline void _1a910b45d_optimize_while_iter(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be2586d8_WhileIter>);
inline void _1a910b6d3_optimize_inf_iter(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be2584eb_InfIter>);
inline void _1a910b958_optimize_conditional(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be25830e_Conditional>);
inline void _1a910bbcd_optimize_match(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be25992b_Match>);
inline void _1a910be53_optimize_assign(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be259552_Assign>);
inline void _1a910c1c8_optimize_multi_assign(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Ptr<_1be25973e_MultiAssign>);
inline void _1a910c44d_optimize_stmt(jule::Ptr<_1a9109cca_ScopeDeadCode>, jule::Any);
inline void _1a910c629_optimize_stmts(jule::Ptr<_1a9109cca_ScopeDeadCode>);
struct _1a9109cca_ScopeDeadCode {
	jule::Ptr<_1a9109cca_ScopeDeadCode> _field_parent = jule::Ptr<_1a9109cca_ScopeDeadCode>();
	jule::Ptr<_1be1ca25e_Scope> _field_s = jule::Ptr<_1be1ca25e_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1be258e8b_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1be258e8b_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1be259178_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1be259178_GotoSt>>>();
	

	_1a9109cca_ScopeDeadCode(void) = default;

	inline bool operator==(_1a9109cca_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos;
	}

	inline bool operator!=(_1a9109cca_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a910d99e_ExprDeadCode static__1a910e098_new(jule::Ptr<_1a9109cca_ScopeDeadCode>&);
inline void _1a910e31d_binary(_1a910d99e_ExprDeadCode*, jule::Ptr<_1d70abda3_BinopExprModel>);
inline void _1a910e593_unary(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c45c6_UnaryExprModel>);
inline void _1a910e818_structure_lit(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c49a0_StructLitExprModel>);
inline void _1a910ea8d_alloc_structure(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>);
inline void _1a910ed13_casting(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c4d79_CastingExprModel>);
inline void _1a9110088_args(_1a910d99e_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1a911030d_func_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c5066_FnCallExprModel>);
inline void _1a9110583_slice(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c5253_SliceExprModel>);
inline void _1a9110808_array(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c66c7_ArrayExprModel>);
inline void _1a9110a7d_indexing(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c5440_IndexingExprModel>);
inline void _1a9110d03_anon_func(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c562c_AnonFnExprModel>);
inline void _1a9111078_map(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c5a06_MapExprModel>);
inline void _1a91112ed_slicing(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c5be3_SlicingExprModel>);
inline void _1a9111573_trait_sub(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>);
inline void _1a91117e8_structure_sub(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>);
inline void _1a9111a6d_common_sub(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>);
inline void _1a9111ce3_tuple(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c6c8d_TupleExprModel>);
inline void _1a9112068_new_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>);
inline void _1a91122dd_out_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>);
inline void _1a9112563_outln_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>);
inline void _1a91127d8_panic_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>);
inline void _1a9112a5d_assert_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>);
inline void _1a9112cd3_error_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>);
inline void _1a9113058_make_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>);
inline void _1a91132cd_append_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>);
inline void _1a9113553_clone_call(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>);
inline void _1a91137c8_sizeof(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c60bc_SizeofExprModel>);
inline void _1a9113a4d_alignof(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c882d_AlignofExprModel>);
inline void _1a9113cc3_integrated_to_str(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>);
inline void _1a9114048_free(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c90d1_FreeExprModel>);
inline void _1a91142bd_backend_emit(_1a910d99e_ExprDeadCode*, jule::Ptr<_1bc9c8de4_BackendEmitExprModel>);
inline void _1a9114543_optimize(_1a910d99e_ExprDeadCode*, jule::Any&);
struct _1a910d99e_ExprDeadCode {
	jule::Ptr<_1a9109cca_ScopeDeadCode> _field_s = jule::Ptr<_1a9109cca_ScopeDeadCode>();
	

	_1a910d99e_ExprDeadCode(void) = default;

	inline bool operator==(_1a910d99e_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a910d99e_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1be48e7a9_UnsafeBinopExprModel {
	jule::Ptr<_1d70abda3_BinopExprModel> _field_node = jule::Ptr<_1d70abda3_BinopExprModel>();
	

	_1be48e7a9_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1be48e7a9_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1be48e7a9_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1be48eac8_UnsafeIndexingExprModel {
	jule::Ptr<_1bc9c5440_IndexingExprModel> _field_node = jule::Ptr<_1bc9c5440_IndexingExprModel>();
	

	_1be48eac8_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1be48eac8_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1be48eac8_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1be48ee91_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1bc9c5253_SliceExprModel> _field_elems = jule::Ptr<_1bc9c5253_SliceExprModel>();
	

	_1be48ee91_PushToSliceExprModel(void) = default;

	inline bool operator==(_1be48ee91_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1be48ee91_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1be490557_MutSlicingExprModel {
	jule::Ptr<_20201c3d1_Token> _field_token = jule::Ptr<_20201c3d1_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1be490557_MutSlicingExprModel(void) = default;

	inline bool operator==(_1be490557_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1be490557_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1be4908ed_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1be4908ed_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1be4908ed_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1be4908ed_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be491a75_ScopeOptimizer> static__1be4920c5_new(jule::Ptr<_1be1ca25e_Scope>);
inline void _1be49234a_set_current_stmt(_1be491a75_ScopeOptimizer*, jule::Any);
inline void _1be4925c0_optimize_data(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be3a92d9_Data>);
inline void _1be492845_optimize_var(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be36365b_Var>);
inline void _1be492aba_optimize_conditional(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be25830e_Conditional>);
inline void _1be492ea5_build_default_constat_true_case(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be259d49_Case>, jule::I64&, jule::Ptr<_1be25992b_Match>&);
inline void _1be4931b4_optimize_match(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be25992b_Match>);
inline void _1be493439_optimize_range_iter(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be2588c5_RangeIter>);
inline void _1be4936ae_optimize_while_iter(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be2586d8_WhileIter>);
inline jule::Bool _1be4939bc_substr(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be259552_Assign>);
inline jule::Bool _1be493cca_str_insert(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be259552_Assign>);
inline jule::Bool _1be4940d8_str_assign(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be259552_Assign>);
inline void _1be49435d_optimize_assign(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be259552_Assign>);
inline void _1be4945d3_optimize_multi_assign(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be25973e_MultiAssign>);
inline void _1be494858_optimize_ret(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be25a223_RetSt>);
inline void _1be494acd_optimize_stmt(_1be491a75_ScopeOptimizer*, jule::Any);
inline void _1be494d53_optimize_child(_1be491a75_ScopeOptimizer*, jule::Ptr<_1be1ca25e_Scope>);
inline void _1be49502e_optimize(_1be491a75_ScopeOptimizer*);
struct _1be491a75_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1be1ca25e_Scope> _field_scope = jule::Ptr<_1be1ca25e_Scope>();
	

	_1be491a75_ScopeOptimizer(void) = default;

	inline bool operator==(_1be491a75_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1be491a75_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1be497680_optimize(jule::Any&);
inline jule::Bool _1be49798d_str_cond(_1be4971a7_ExprOptimizer*, jule::Ptr<_1d70abda3_BinopExprModel>);
inline void _1be497c13_binary(_1be4971a7_ExprOptimizer*, jule::Ptr<_1d70abda3_BinopExprModel>);
inline void _1be497e88_unary(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c45c6_UnaryExprModel>);
inline void _1be49820d_structure_lit(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c49a0_StructLitExprModel>);
inline void _1be498483_alloc_structure(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>);
inline void _1be498708_casting(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c4d79_CastingExprModel>);
inline void _1be49897d_args(_1be4971a7_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1be498c03_scope(_1be4971a7_ExprOptimizer*, jule::Ptr<_1be1ca25e_Scope>&);
inline void _1be498e78_func_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c5066_FnCallExprModel>);
inline void _1be4991ed_slice(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c5253_SliceExprModel>);
inline void _1be499473_array(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c66c7_ArrayExprModel>);
inline void _1be4996e8_indexing(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c5440_IndexingExprModel>);
inline void _1be49996d_anon_func(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c562c_AnonFnExprModel>);
inline void _1be499be3_map(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c5a06_MapExprModel>);
inline void _1be499e68_slicing(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c5be3_SlicingExprModel>);
inline void _1be49a1dd_trait_sub(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>);
inline void _1be49a463_structure_sub(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>);
inline void _1be49a6d8_common_sub(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>);
inline void _1be49a95d_tuple(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c6c8d_TupleExprModel>);
inline void _1be49abd3_new_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>);
inline void _1be49ae58_out_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>);
inline void _1be49b1cd_outln_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>);
inline void _1be49b453_panic_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>);
inline void _1be49b6c8_assert_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>);
inline void _1be49b94d_error_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>);
inline void _1be49bbc3_make_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>);
inline void _1c00ac55d_append_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>);
inline void _1c00ac7d3_clone_call(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>);
inline void _1c00aca58_sizeof(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c60bc_SizeofExprModel>);
inline void _1c00acccd_alignof(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c882d_AlignofExprModel>);
inline void _1c00ad053_integrated_to_str(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>);
inline void _1c00ad2c8_free(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c90d1_FreeExprModel>);
inline void _1c00ad54d_backend_emit(_1be4971a7_ExprOptimizer*, jule::Ptr<_1bc9c8de4_BackendEmitExprModel>);
inline void _1c00ad729_do(_1be4971a7_ExprOptimizer*);
struct _1be4971a7_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1be4971a7_ExprOptimizer(void) = default;

	inline bool operator==(_1be4971a7_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1be4971a7_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a90d5b1e_Optimizer> static__1a90a7470_new(jule::Ptr<_1a8900659_IR>&);
inline void _1a90d635b_optimize_global(_1a90d5b1e_Optimizer*, jule::Ptr<_1be36365b_Var>&);
inline void _1a90dbad1_optimize_function(_1a90d5b1e_Optimizer*, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1a9079233_optimize_struct(_1a90d5b1e_Optimizer*, jule::Ptr<_1d7073276_Struct>&);
inline void _1a90a8e44_optimize_globals(_1a90d5b1e_Optimizer*, jule::Ptr<_1be275c99_Package>&);
inline void _1a90dc83a_optimize_functions(_1a90d5b1e_Optimizer*, jule::Ptr<_1be275c99_Package>&);
inline void _1a90de397_optimize_structs(_1a90d5b1e_Optimizer*, jule::Ptr<_1be275c99_Package>&);
inline void _1a90a1de8_optimize_package(_1a90d5b1e_Optimizer*, jule::Ptr<_1be275c99_Package>&);
inline void _1a90a799d_optimize(_1a90d5b1e_Optimizer*);
struct _1a90d5b1e_Optimizer {
	jule::Ptr<_1a8900659_IR> _field_ir = jule::Ptr<_1a8900659_IR>();
	

	_1a90d5b1e_Optimizer(void) = default;

	inline bool operator==(_1a90d5b1e_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a90d5b1e_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a911e77e_reset(void);
inline void static__1a9120b59_print(jule::Str, jule::Str);
struct _1a912096c_AnsiEscape {
	

	_1a912096c_AnsiEscape(void) = default;

	inline bool operator==(_1a912096c_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a912096c_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a9122243_log_flat(_201be0d52_Log&);
inline void static__1a9122452_log_error(_201be0d52_Log&);
inline void static__1a9122661_log(_201be0d52_Log&);
inline void static__1a9122870_print_logs(jule::Slice<_201be0d52_Log>&);
struct _1a9121e8a_Logger {
	

	_1a9121e8a_Logger(void) = default;

	inline bool operator==(_1a9121e8a_Logger _other) { return true; }

	inline bool operator!=(_1a9121e8a_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1aa388552_unix(_1aa38819a_AbsTime*);
struct _1aa38819a_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1aa38819a_AbsTime(void) = default;

	inline bool operator==(_1aa38819a_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1aa38819a_AbsTime _other) { return !this->operator==(_other); }


};
inline _1aa38883d_Time static__1aa388bd4_unix(jule::U64);
inline _1aa38883d_Time static__1aa388dd2_now(void);
inline jule::U64 _1aa389333_unix(_1aa38883d_Time*);
inline jule::U64 _1aa389597_day(_1aa38883d_Time*);
inline jule::U64 _1aa38980b_month(_1aa38883d_Time*);
inline jule::U64 _1aa389a70_year(_1aa38883d_Time*);
inline jule::U64 _1aa389cd4_second(_1aa38883d_Time*);
inline jule::U64 _1aa38a048_minute(_1aa38883d_Time*);
inline jule::U64 _1aa38a2ac_hour(_1aa38883d_Time*);
inline _1aa38819a_AbsTime _1aa38a521_abs(_1aa38883d_Time*);
struct _1aa38883d_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1aa38883d_Time(void) = default;

	inline bool operator==(_1aa38883d_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1aa38883d_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa3123aa_ScopeCoder> static__1aa3129b5_new(jule::Ptr<_1aa38e03b_ObjectCoder>&);
inline void _1aa312c3a_range_index_iter(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be2588c5_RangeIter>&);
inline void _1aa312eb0_range_hashmap_iter(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be2588c5_RangeIter>&);
inline void _1aa313235_if_case(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be2437b1_If>);
inline void _1aa3134aa_conditional(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25830e_Conditional>);
inline void _1aa313730_inf_iter(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be2584eb_InfIter>);
inline void _1aa3139a5_while_iter(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be2586d8_WhileIter>);
inline void _1aa313c2a_range_iter(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be2588c5_RangeIter>);
inline void _1aa313ea0_cont(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be258ab2_ContSt>);
inline void _1aa314225_label(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be258e8b_Label>);
inline void _1aa31449a_goto_st(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be259178_GotoSt>);
inline void _1aa314720_postfix(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be259365_Postfix>);
inline void _1aa314995_assign(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be259552_Assign>);
inline void _1aa314c1a_multi_assign(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25973e_MultiAssign>);
inline jule::Fn<void(void)> _1aa315028_match_expr(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25992b_Match>);
inline void _1aa315347_case(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25992b_Match>, jule::Ptr<_1be259d49_Case>);
inline void _1aa3155bc_match_st(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25992b_Match>);
inline void _1aa315842_fall_st(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25a036_FallSt>);
inline void _1aa315ab7_break_st(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be258c9e_BreakSt>);
inline void _1aa315d3c_ret_with_vars(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25a223_RetSt>);
inline void _1aa3160b2_ret_tuple(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25a223_RetSt>);
inline void _1aa316337_ret_with_exprs(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25a223_RetSt>);
inline void _1aa3165ac_ret_st(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be25a223_RetSt>);
inline void _1aa316aa7_var(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be36365b_Var>);
inline void _1aa316d2c_st(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Any);
inline void _1aa3170a2_scope_stmts(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be1ca25e_Scope>&);
inline void _1aa317327_scope(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1be1ca25e_Scope>);
inline void _1aa31759c_func_scope(jule::Ptr<_1aa3123aa_ScopeCoder>, jule::Ptr<_1bc9c9c4c_FnIns>);
struct _1aa3123aa_ScopeCoder {
	jule::Ptr<_1aa38e03b_ObjectCoder> _field_oc = jule::Ptr<_1aa38e03b_ObjectCoder>();
	

	_1aa3123aa_ScopeCoder(void) = default;

	inline bool operator==(_1aa3123aa_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa3123aa_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa319a00_ExprCoder> static__1aa319deb_new(jule::Ptr<_1aa38e03b_ObjectCoder>&);
inline void _1aa31a171_string(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be159e14_Const>&);
inline void _1aa31a3e6_boolean(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be159e14_Const>&);
inline void _1aa31a5c2_nil_lit(jule::Ptr<_1aa319a00_ExprCoder>);
inline jule::Bool _1aa31a8d0_ftoa_special_cases(jule::Ptr<_1aa319a00_ExprCoder>, jule::F64&);
inline void _1aa31ab55_float32(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be159e14_Const>&);
inline void _1aa31adca_float64(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be159e14_Const>&);
inline void _1aa31b1e9_constant(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be159e14_Const>, jule::Bool);
inline void _1aa31b5b2_div_by_zero_binary(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_20201c3d1_Token>&, jule::Ptr<_1d70abbb6_OperandExprModel>&, jule::Ptr<_1d70abbb6_OperandExprModel>&);
inline void _1aa31b837_unsafe_binary(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1d70abda3_BinopExprModel>);
inline void _1aa31baac_binary(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1d70abda3_BinopExprModel>);
inline void _1aa31bd32_var(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be36365b_Var>);
inline void _1aa31c0a7_structure(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1d7073276_Struct>);
inline void _1aa31c32c_structure_ins(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1d70ab9c9_StructIns>);
inline void _1aa31c5a2_unary(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c45c6_UnaryExprModel>);
inline void _1aa31c827_structure_lit(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c49a0_StructLitExprModel>);
inline void _1aa31ca9c_alloc_structure(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>);
inline void _1aa31cd22_casting(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c4d79_CastingExprModel>);
inline void _1aa31d097_args(jule::Ptr<_1aa319a00_ExprCoder>, jule::Slice<jule::Any>);
inline void _1aa31d31c_model_for_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Any);
inline void _1aa31d592_push_call_inf(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5066_FnCallExprModel>&);
inline jule::Bool _1aa31d8a0_is_wrapped(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5066_FnCallExprModel>&);
inline void _1aa31db25_pure_func_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5066_FnCallExprModel>&);
inline void _1aa31dd9a_func_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5066_FnCallExprModel>);
inline void _1aa31e120_slice(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5253_SliceExprModel>);
inline void _1aa31e395_indexing(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5440_IndexingExprModel>);
inline void _1aa31e61a_unsafe_indexing(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be48eac8_UnsafeIndexingExprModel>);
inline void _1aa31e890_anon_func(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c562c_AnonFnExprModel>);
inline void _1aa31eb15_map(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5a06_MapExprModel>);
inline void _1aa31ed8a_slicing(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5be3_SlicingExprModel>);
inline void _1aa320110_trait_sub(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>);
inline void _1aa320385_structure_sub(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>);
inline void _1aa32060a_common_ident(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c68b4_CommonIdentExprModel>);
inline void _1aa320880_common_sub(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>);
inline void _1aa320b05_array(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c66c7_ArrayExprModel>);
inline void _1aa320d7a_func_ins_common(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c9c4c_FnIns>);
inline void _1aa321100_func_ins(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c9c4c_FnIns>);
inline void _1aa321375_tuple(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c6c8d_TupleExprModel>);
inline void _1aa3215ea_new_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>);
inline void _1aa321870_out_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>);
inline void _1aa321ae5_outln_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>);
inline void _1aa321d6a_panic_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>);
inline void _1aa3220e0_assert_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>);
inline void _1aa322365_error_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>);
inline void _1aa3225da_copy_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7ed1_BuiltinCopyCallExprModel>);
inline void _1aa322860_make_call_slice(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>&);
inline void _1aa322ad5_make_call_str(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>&);
inline void _1aa322d5a_make_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>);
inline void _1aa3230d0_push_to_slice(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be48ee91_PushToSliceExprModel>);
inline void _1aa323355_append_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>);
inline void _1aa3235ca_clone_call(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>);
inline void _1aa323850_sizeof(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c60bc_SizeofExprModel>);
inline void _1aa323ac5_alignof(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c882d_AlignofExprModel>);
inline jule::Str _1aa323dd3_rune_lit(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c8a1a_RuneExprModel>);
inline void _1aa324158_structure_static(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c64da_StructStaticIdentExprModel>);
inline void _1aa3243cd_integrated_to_str(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>);
inline void _1aa324653_backend_emit(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c8de4_BackendEmitExprModel>);
inline void _1aa3248c8_free(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1bc9c90d1_FreeExprModel>);
inline void _1aa324b4d_mut_slicing(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be490557_MutSlicingExprModel>);
inline void _1aa324dc3_str_insert_begin(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be4908ed_StrInsertBeginExprModel>);
inline void _1aa325148_model(jule::Ptr<_1aa319a00_ExprCoder>, jule::Any);
inline void _1aa3253bd_expr(jule::Ptr<_1aa319a00_ExprCoder>, jule::Any);
inline void _1aa325643_val(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be3aa362_Value>);
inline void _1aa3258b8_init_expr(jule::Ptr<_1aa319a00_ExprCoder>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1aa319a00_ExprCoder {
	jule::Ptr<_1aa38e03b_ObjectCoder> _field_oc = jule::Ptr<_1aa38e03b_ObjectCoder>();
	

	_1aa319a00_ExprCoder(void) = default;

	inline bool operator==(_1aa319a00_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa319a00_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aa327e2b_clone_func_decl(jule::Ptr<_1d7073276_Struct>&);
inline jule::Str static__1aa3281c3_clone_func_def(jule::Ptr<_1d7073276_Struct>&);
struct _1aa327b73_DeriveCoder {
	

	_1aa327b73_DeriveCoder(void) = default;

	inline bool operator==(_1aa327b73_DeriveCoder _other) { return true; }

	inline bool operator!=(_1aa327b73_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa3290a3_TestCoder> static__1aa329526_new(jule::Ptr<_1aa38e03b_ObjectCoder>&);
inline jule::Ptr<_1be272d40_ImportInfo> _1aa32978a_find_testing_package(jule::Ptr<_1aa3290a3_TestCoder>);
inline void _1aa329a10_append_test(jule::Ptr<_1aa3290a3_TestCoder>, jule::Ptr<_1bc9c9c4c_FnIns>);
inline void _1aa329c85_append_package_tests(jule::Ptr<_1aa3290a3_TestCoder>, jule::Ptr<_1be275c99_Package>&);
inline jule::Bool _1aa329ee9_ready_testing_package(jule::Ptr<_1aa3290a3_TestCoder>);
inline void _1aa32a1c5_call_tm_reset(jule::Ptr<_1aa3290a3_TestCoder>);
inline void _1aa32a3a1_call_tm_failed(jule::Ptr<_1aa3290a3_TestCoder>);
inline void _1aa32a57c_call_tm_skipped(jule::Ptr<_1aa3290a3_TestCoder>);
inline void _1aa32a758_serialize(jule::Ptr<_1aa3290a3_TestCoder>);
struct _1aa3290a3_TestCoder {
	jule::Ptr<_1d70ab9c9_StructIns> _field_t = jule::Ptr<_1d70ab9c9_StructIns>();
	jule::Ptr<_1bc9c9873_Fn> _field_tm_reset = jule::Ptr<_1bc9c9873_Fn>();
	jule::Ptr<_1bc9c9873_Fn> _field_tm_failed = jule::Ptr<_1bc9c9873_Fn>();
	jule::Ptr<_1bc9c9873_Fn> _field_tm_skipped = jule::Ptr<_1bc9c9873_Fn>();
	jule::Ptr<_1aa38e03b_ObjectCoder> _field_oc = jule::Ptr<_1aa38e03b_ObjectCoder>();
	

	_1aa3290a3_TestCoder(void) = default;

	inline bool operator==(_1aa3290a3_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa3290a3_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aa32bc10_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__1aa32c0ea_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1aa32c392_func(jule::Ptr<_1bc9c9873_Fn>&);
inline jule::Str static__1aa32c639_func_ins(jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Str static__1aa32c8d1_trait_decl(jule::Ptr<_1bd929d66_Trait>);
inline jule::Str static__1aa32cb78_param(jule::Ptr<_1bc9c9686_Param>&);
inline jule::Str static__1aa32ce20_structure(jule::Ptr<_1d7073276_Struct>&);
inline jule::Str static__1aa32d1b7_structure_ins(jule::Ptr<_1d70ab9c9_StructIns>&);
inline jule::Str static__1aa32d45e_field(jule::Ptr<_1d7080926_Field>&);
inline jule::Str static__1aa32d706_var(jule::Ptr<_1be36365b_Var>);
inline jule::Str static__1aa32d99d_iter_begin(jule::Uintptr);
inline jule::Str static__1aa32dc45_iter_end(jule::Uintptr);
inline jule::Str static__1aa32dedc_iter_next(jule::Uintptr);
inline jule::Str static__1aa32e284_label(jule::Str&);
inline jule::Str static__1aa32e52b_match_end(jule::Uintptr);
inline jule::Str static__1aa32e7c3_case_begin(jule::Uintptr);
struct _1aa32b704_IdentCoder {
	

	_1aa32b704_IdentCoder(void) = default;

	inline bool operator==(_1aa32b704_IdentCoder _other) { return true; }

	inline bool operator!=(_1aa32b704_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1aa38db62_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1aa38db62_SerializationInfo(void) = default;

	inline bool operator==(_1aa38db62_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1aa38db62_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1aa38dd4e_TraitHash {
	jule::Ptr<_1bd929d66_Trait> _field_t = jule::Ptr<_1bd929d66_Trait>();
	jule::Ptr<_1d70ab9c9_StructIns> _field_s = jule::Ptr<_1d70ab9c9_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1aa38dd4e_TraitHash(void) = default;

	inline bool operator==(_1aa38dd4e_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aa38dd4e_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa394d77_to_str(_1aa394aad_CustomType*);
inline jule::Bool _1aa395185_equals(jule::Ptr<_1aa394aad_CustomType>, jule::Ptr<_1be3d45ab_TypeKind>);
struct _1aa394aad_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1aa394aad_CustomType(void) = default;

	inline bool operator==(_1aa394aad_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aa394aad_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aa3958d3_to_type(jule::Str);
inline jule::Str static__1aa395b7a_prim(jule::Ptr<_1be3d9083_Prim>);
inline jule::Str static__1aa395e22_tuple(jule::Ptr<_1be3dd9e4_Tuple>);
inline jule::Str static__1aa3961b9_as_sptr(jule::Str);
inline jule::Str static__1aa396461_as_ptr(jule::Str);
inline jule::Str static__1aa396708_sptr(jule::Ptr<_1be3dc592_Sptr>);
inline jule::Str static__1aa3969a0_ptr(jule::Ptr<_1be3e0b06_Ptr>);
inline jule::Str static__1aa396c47_enum_decl(jule::Ptr<_1bc9dceb3_Enum>);
inline jule::Str static__1aa396ede_type_enum_decl(jule::Ptr<_1bd9c99a4_TypeEnum>);
inline jule::Str static__1aa397286_as_slice(jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Str static__1aa39752d_slice(jule::Ptr<_1be3dceee_Slc>);
inline jule::Str static__1aa3977c5_map(jule::Ptr<_1be3de5a5_Map>);
inline jule::Str static__1aa397a6c_trait_ident(jule::Str);
inline jule::Str static__1aa397d14_trait_decl(jule::Ptr<_1bd929d66_Trait>);
inline jule::Str static__1aa3980ab_structure(jule::Ptr<_1d7073276_Struct>);
inline jule::Str static__1aa398353_structure_ins(jule::Ptr<_1d70ab9c9_StructIns>);
inline jule::Str static__1aa3985ea_array(jule::Ptr<_1be3e0199_Arr>);
inline jule::Str static__1aa398b39_param_ins(jule::Ptr<_1bc9c9a60_ParamIns>&);
inline jule::Str static__1aa399178_func_ins_result(jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Str static__1aa399420_anon_func(jule::Ptr<_1bc9c9c4c_FnIns>);
inline jule::Str static__1aa3996b7_func(jule::Ptr<_1bc9c9c4c_FnIns>);
inline jule::Str static__1aa39995e_kind(jule::Ptr<_1be3d45ab_TypeKind>);
struct _1aa3953a5_TypeCoder {
	

	_1aa3953a5_TypeCoder(void) = default;

	inline bool operator==(_1aa3953a5_TypeCoder _other) { return true; }

	inline bool operator!=(_1aa3953a5_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1acd4e8d9_name(_1acd50049_Flag*);
inline jule::Str _1acd50434_what(_1acd50049_Flag*);
inline void _1acd50566_reset(_1acd50049_Flag*);
inline jule::I32 _1acd50698_short(_1acd50049_Flag*);
struct _1acd50049_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1acd50049_Flag(void) = default;

	inline bool operator==(_1acd50049_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1acd50049_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1acd53701_name(_1acd53ba7_Flag*);
inline jule::Str _1acd53e71_what(_1acd53ba7_Flag*);
inline void _1acd540a3_reset(_1acd53ba7_Flag*);
inline jule::I32 _1acd541d5_short(_1acd53ba7_Flag*);
struct _1acd53ba7_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1acd53ba7_Flag(void) = default;

	inline bool operator==(_1acd53ba7_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1acd53ba7_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1acd57183_name(_1acd57639_Flag*);
inline jule::Str _1acd57903_what(_1acd57639_Flag*);
inline void _1acd57a35_reset(_1acd57639_Flag*);
inline jule::I32 _1acd57b67_short(_1acd57639_Flag*);
struct _1acd57639_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1acd57639_Flag(void) = default;

	inline bool operator==(_1acd57639_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1acd57639_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1acd5ab59_name(_1acd5b110_Flag*);
inline jule::Str _1acd5b3c9_what(_1acd5b110_Flag*);
inline void _1acd5b50b_reset(_1acd5b110_Flag*);
inline jule::I32 _1acd5b63d_short(_1acd5b110_Flag*);
struct _1acd5b110_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1acd5b110_Flag(void) = default;

	inline bool operator==(_1acd5b110_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1acd5b110_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1acd5e5db_name(_1acd5ea92_Flag*);
inline jule::Str _1acd5ed5b_what(_1acd5ea92_Flag*);
inline void _1acd5ee8d_reset(_1acd5ea92_Flag*);
inline jule::I32 _1acd600c0_short(_1acd5ea92_Flag*);
struct _1acd5ea92_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1acd5ea92_Flag(void) = default;

	inline bool operator==(_1acd5ea92_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1acd5ea92_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa3e4d83_FlagSet> static__1aa3e516e_new(void);
inline jule::Trait<_1aa3ad665_CommonFlag> _1aa3e5603_find_flag(_1aa3e4d83_FlagSet*, jule::Str);
inline jule::Trait<_1aa3ad665_CommonFlag> _1aa3e5911_find_flag_short(_1aa3e4d83_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1aa3ad665_CommonFlag>> _1aa3e5b75_flags(_1aa3e4d83_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aa3e5e83_parse(_1aa3e4d83_FlagSet*, jule::Slice<jule::Str>);
inline void _1aa3e615e_reset(_1aa3e4d83_FlagSet*);
inline jule::Ptr<_1acd5ea92_Flag> _1acde1ddd_add_flag_common(_1aa3e4d83_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1acd5b110_Flag> _1acdeb700_add_flag_common(_1aa3e4d83_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1acdde57d_add_var(_1aa3e4d83_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1acde8d6d_add_var(_1aa3e4d83_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1aa3e4d83_FlagSet {
	jule::Slice<jule::Trait<_1aa3ad665_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1aa3ad665_CommonFlag>>();
	

	_1aa3e4d83_FlagSet(void) = default;

	inline bool operator==(_1aa3e4d83_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1aa3e4d83_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1a8900659_IR>,jule::Slice<_201be0d52_Log>> static__1a8a5942d_build(jule::Str, jule::I64);
inline void _1a8a63eb5_append_structs(_1a8900659_IR*, jule::Ptr<_1be275c99_Package>&, jule::Slice<jule::Ptr<_1d7073276_Struct>>&);
inline jule::Slice<jule::Ptr<_1d7073276_Struct>> _1a8a79b02_get_all_structures(_1a8900659_IR*);
inline void _1a8a7a916_append_globals(_1a8900659_IR*, jule::Ptr<_1be275c99_Package>&, jule::Slice<jule::Ptr<_1be36365b_Var>>&);
inline jule::Slice<jule::Ptr<_1be36365b_Var>> _1a8a902bb_get_all_globals(_1a8900659_IR*);
inline void _1a8aa2a92_order(_1a8900659_IR*);
struct _1a8900659_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1be275c99_Package> _field_main = jule::Ptr<_1be275c99_Package>();
	jule::Slice<jule::Ptr<_1be272d40_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1be272d40_ImportInfo>>();
	_1d6983e2e_OrderedDefines _field_ordered = _1d6983e2e_OrderedDefines();
	

	_1a8900659_IR(void) = default;

	inline bool operator==(_1a8900659_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1a8900659_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1d707572e_to_str(_1d70ab9c9_StructIns*);
inline jule::Bool _1d7075de4_equals(jule::Ptr<_1d70ab9c9_StructIns>, jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Bool _1d7082609_same(_1d70ab9c9_StructIns*, jule::Ptr<_1d70ab9c9_StructIns>);
inline jule::Ptr<_1bc9c9873_Fn> _1d7083770_find_method(_1d70ab9c9_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1d708808d_FieldIns> _1d7085ac4_find_field(_1d70ab9c9_StructIns*, jule::Str);
struct _1d70ab9c9_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1d7073276_Struct> _field_decl = jule::Ptr<_1d7073276_Struct>();
	jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>();
	jule::Slice<jule::Ptr<_1d708808d_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1d708808d_FieldIns>>();
	jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _field_methods = jule::Slice<jule::Ptr<_1bc9c9873_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1bc9cb402_ReferenceStack> _field_refers = jule::Ptr<_1bc9cb402_ReferenceStack>();
	_1d7082351_Operators _field_operators = _1d7082351_Operators();
	

	_1d70ab9c9_StructIns(void) = default;

	inline bool operator==(_1d70ab9c9_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1d70ab9c9_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9105e3b_ObjectDeadCode> static__1a9106337_new(jule::Ptr<_1a8900659_IR>&);
inline jule::Bool _1ac781b8a_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1bd929d66_Trait>&);
inline jule::Bool _1ac7878a5_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Bool _1ac78de61_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline jule::Bool _1ac795d47_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1be36365b_Var>&);
inline void _1ac784c37_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1bd929d66_Trait>);
inline void _1ac78b0e5_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1bc9c9c4c_FnIns>);
inline void _1ac78e329_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1d70ab9c9_StructIns>);
inline void _1ac7996ec_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1be36365b_Var>);
inline void _1a9106b40_set_references_as_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1bc9cb402_ReferenceStack>&);
inline void _1a9106db5_inits(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1be275c99_Package>&);
inline void _1a910713a_collect_live_package(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1be275c99_Package>&);
inline void _1a9107316_collect_live(jule::Ptr<_1a9105e3b_ObjectDeadCode>);
inline void _1a910758b_remove_dead_globals(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1be36365b_Var>>&);
inline void _1a9107811_remove_dead_fns(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1bc9c9873_Fn>>&);
inline void _1a9107a86_remove_dead_structs(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d7073276_Struct>>&);
inline void _1a9107d0b_remove_dead_traits(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Slice<jule::Ptr<_1bd929d66_Trait>>&);
inline void _1a9108081_remove_deads_file(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1be3a4339_SymbolTable>&);
inline void _1a9108306_remove_deads_package(jule::Ptr<_1a9105e3b_ObjectDeadCode>, jule::Ptr<_1be275c99_Package>&);
inline void _1a91084d2_remove_deads(jule::Ptr<_1a9105e3b_ObjectDeadCode>);
inline void _1a91086ad_elimanate(jule::Ptr<_1a9105e3b_ObjectDeadCode>);
struct _1a9105e3b_ObjectDeadCode {
	_1a9105b72_LiveTable _field_live = _1a9105b72_LiveTable();
	jule::Ptr<_1a8900659_IR> _field_ir = jule::Ptr<_1a8900659_IR>();
	

	_1a9105e3b_ObjectDeadCode(void) = default;

	inline bool operator==(_1a9105e3b_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a9105e3b_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa38e03b_ObjectCoder> static__1aa37201e_new(jule::Ptr<_1a8900659_IR>&, _1aa38db62_SerializationInfo);
inline void _1aa37234e_write(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Str);
inline void _1aa372ae1_add_indent(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa373ad1_done_indent(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa37432e_indent(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline jule::I64 _1aa37575e_find_type_offset(_1aa38e03b_ObjectCoder*, jule::Ptr<_1bd929d66_Trait>, jule::Ptr<_1be3d45ab_TypeKind>);
inline void _1aa357301_loc_info(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_20201c3d1_Token>&);
inline void _1aa354bb1_head(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa37333e_links(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa360947_prepare_structures(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa36185a_iter_packages(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>);
inline void _1aa362042_build_trait_map(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa362729_trait_decls(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa35e77b_structure_plain_decl(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d7073276_Struct>&);
inline void _1aa3584de_structure_plain_decls(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa3603b4_field_decl(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d708808d_FieldIns>&);
inline void _1aa3598a8_structure_destructor(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa362e11_structure_derive_defs_decls(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa38e5d0_structure_operator_eq(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Str&, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa38e712_structure_operator_not_eq(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Str&, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa38e844_structure_operator(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Str&, jule::Ptr<_1bc9c9c4c_FnIns>&, jule::Str);
inline void _1aa38e976_structure_operators(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa38eaa8_structure_ins_decl(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa38ebda_structure_decl(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d7073276_Struct>&);
inline void _1aa38ed1c_structure_decls(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa38ee4e_params_decls(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>&);
inline void _1aa390081_func_head(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1bc9c9c4c_FnIns>&, jule::Bool);
inline void _1aa3901b3_func_decl(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1bc9c9873_Fn>&, jule::Bool);
inline void _1aa3902e5_func_decls(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa390427_trait_data_types(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa390636_param_ins(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1bc9c9a60_ParamIns>&);
inline void _1aa3908ab_params_ins(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>&);
inline void _1aa390bca_var_init_expr(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1be36365b_Var>&, jule::Fn<void(void)>);
inline void _1aa390e50_var(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1be36365b_Var>);
inline void _1aa3911c5_func(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1bc9c9873_Fn>&);
inline void _1aa3913a1_trait_wrappers(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa39157c_trait_datas(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa391758_globals(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa391934_decls(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa391ba9_structure_methods(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa391e2e_structure_derive_defs(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa3921a4_structure_ostream(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa392429_structure_ins(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d70ab9c9_StructIns>&);
inline void _1aa39269e_structure(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1d7073276_Struct>&);
inline void _1aa39287a_structures(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa392a56_funcs(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa392ccb_push_init(jule::Ptr<_1aa38e03b_ObjectCoder>, jule::Ptr<_1be275c99_Package>&);
inline void _1aa392ea7_init_caller(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa393183_end(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa39335e_serialize_head(jule::Ptr<_1aa38e03b_ObjectCoder>);
inline void _1aa39353a_serialize(jule::Ptr<_1aa38e03b_ObjectCoder>);
struct _1aa38e03b_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1a8900659_IR> _field_ir = jule::Ptr<_1a8900659_IR>();
	_1aa38db62_SerializationInfo _field_info = _1aa38db62_SerializationInfo();
	jule::Slice<jule::Ptr<_1aa38dd4e_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1aa38dd4e_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1aa319a00_ExprCoder> _field_ec = jule::Ptr<_1aa319a00_ExprCoder>();
	jule::Ptr<_1aa3123aa_ScopeCoder> _field_sc = jule::Ptr<_1aa3123aa_ScopeCoder>();
	

	_1aa38e03b_ObjectCoder(void) = default;

	inline bool operator==(_1aa38e03b_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1aa38e03b_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1acd73c60_parse_integer(_1aa3e755b_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1acd7c9c2_parse_integer(_1aa3e755b_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1aa3e7d53_get_data(_1aa3e755b_ArgParser*);
inline jule::VoidExceptional _1aa3e8095_process_flag(_1aa3e755b_ArgParser*, jule::Trait<_1aa3ad665_CommonFlag>&);
inline jule::VoidExceptional _1aa3e831a_single_dash(_1aa3e755b_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1aa3e8590_double_dash(_1aa3e755b_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1aa3e876b_try_arg(_1aa3e755b_ArgParser*);
inline jule::VoidExceptional _1aa3e8947_parse(_1aa3e755b_ArgParser*);
struct _1aa3e755b_ArgParser {
	_1aa3e4d83_FlagSet _field_set = _1aa3e4d83_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1aa3e755b_ArgParser(void) = default;

	inline bool operator==(_1aa3e755b_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aa3e755b_ArgParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _200abe33b_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _200abe5d3_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _200abeb99_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _200abeea7_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _200aa9832_utf16_from_str(jule::Str);
inline jule::Str _200aaa46a_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _200aaa59c_u16_ptr_to_str(jule::U16*);
inline jule::I64 _1eed17970_get_last_errno(void);
inline jule::Uintptr _200ac1706_get_std_handle(jule::Uintptr);
inline jule::I64 _200ac1a25_wstat(jule::U16*, struct stat*);
inline jule::I64 _200ac1e10__wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _200ac210d_get_last_error(void);
inline jule::U32 _200ac244e_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _200ac298d_delete_file(jule::U16*);
inline jule::Bool _200ac2c35_create_directory(jule::U16*);
inline jule::Bool _200ac2ecc_remove_directory(jule::U16*);
inline _WDIR* _200ac3274__wopendir(jule::U16*);
inline struct _wdirent* _200ac351b__wreaddir(_WDIR*);
inline jule::I64 _200ac37b3__wclosedir(_WDIR*);
inline jule::U32 _200ac3e89_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _200ac42ca_get_console_mode(jule::Uintptr, jule::I64&);
inline jule::Bool _200ac461b_set_console_mode(jule::Uintptr, jule::I64);
inline jule::Bool _200ac4b49_write_console(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _200ac5177_read_console(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _200ac750e_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _200ac78e9_read(jule::I64, void*, jule::U64);
inline jule::I64 _200ac7c6d_close(jule::I64);
inline jule::I64 _200ac8158_write(jule::I64, void*, jule::U64);
inline void _200ac8367_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _200ba716b_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _200ba7732_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _200ba7c71_rune_len(jule::I32);
inline jule::I64 _200ba818e_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _200ba84d0_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _200ba8821_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _200ba8d60_rune_count_str(jule::Str);
inline jule::Bool _200ba9107_rune_start(jule::U8);
inline jule::I64 _200c57705_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _200c5b572_args(void);
inline jule::Exceptional<jule::Str> _200c5b9e5_working_dir(void);
inline jule::Exceptional<jule::Str> _200c5c3a8___getwd(void);
inline jule::Slice<jule::U8> _200ce2c79_stobs(jule::Str&);
inline jule::Bool _201b11547_is_letter(jule::I32);
inline jule::Bool _201b83971_is16(jule::Slice<_201b81dae_Range16>, jule::U16);
inline jule::Bool _201b83cb2_is32(jule::Slice<_201b82332_Range32>, jule::U32);
inline jule::Bool _201b84554_is_excluding_latin(jule::Ptr<_201b827a5_RangeTable>, jule::I32);
inline jule::Str _200cecaa8_repeat(jule::Str, jule::I64);
inline jule::Bool _200d002e7__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _201adbc1a_has_prefix(jule::Str, jule::Str);
inline jule::Bool _2019b6430__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _200ced34a_has_suffix(jule::Str, jule::Str);
inline jule::I64 _200cebed6_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _201adc237_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _201adc754_find_last(jule::Str, jule::Str);
inline jule::I64 _201b8519d__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _201b85643_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _201b85b1b_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _201b85d80_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _201b85eb2_contains(jule::Str, jule::Str);
inline jule::Bool _201b86358_contains_any(jule::Str, jule::Str);
inline jule::Str _201b865bc_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _201b85412__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _201b87018_trim_left(jule::Str, jule::Str);
inline void _201b8714a__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _201b873ae_trim(jule::Str, jule::Str);
inline jule::Bool _200c38780_is_path_sep(jule::U8);
inline jule::Bool _200c322a1_is_slash(jule::U8);
inline jule::U8 _200c323d3_to_upper(jule::U8);
inline jule::I64 _200c32812_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _200c32aa9_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _200c32d51_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _200c331c5___abs(jule::Str);
inline jule::Str _200c3346c___join(jule::Slice<jule::Str>);
inline jule::Str _200ca1221_clean(jule::Str);
inline jule::Str _200ca836b_from_slash(jule::Str);
inline jule::Str _200cabda8_join(jule::Slice<jule::Str>);
inline jule::Str _200caec13_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _200cb1c59_abs(jule::Str);
inline jule::Str _200cbad1d_base(jule::Str);
inline jule::Str _200cc16e7_dir(jule::Str);
inline jule::Str _200cc3155_volume_name(jule::Str);
inline jule::I64 _1eedd6324_get_last_fs_error(void);
inline jule::Bool _200b3c5c9_is_console_handle(jule::Uintptr);
inline jule::I64 _201c3544b_get_last_process_error(void);
inline jule::Slice<wchar_t*> _201c45307_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _201c4559e_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _201c45901_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _201c45cdb_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _201c46a12_exit(jule::I64);
inline jule::Str _201c46c10_executable(void);
inline jule::Bool _201bd4461_is_std_header_path(jule::Str);
inline jule::Bool _201bd4593_is_valid_header_ext(jule::Str);
inline jule::Bool _201bd47d5_is_valid_cpp_ext(jule::Str);
inline jule::Str _201be1292_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _201be157d_arg_to_str(jule::Any);
inline jule::I64 _201be1825_find_next_fmt(jule::Str);
inline jule::Str _201be1baa_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _201be2c77_is_top_directive(jule::Str);
inline jule::Bool _201be484a_is_windows(jule::Str);
inline jule::Bool _201be4b36_is_darwin(jule::Str);
inline jule::Bool _201be4dcd_is_linux(jule::Str);
inline jule::Bool _201be51ec_is_i386(jule::Str);
inline jule::Bool _201be5494_is_amd64(jule::Str);
inline jule::Bool _201be573b_is_arm64(jule::Str);
inline jule::Bool _201be59d3_is_unix(jule::Str);
inline jule::Bool _201be5d57_is_32bit(jule::Str);
inline jule::Bool _201be60ee_is_64bit(jule::Str);
inline void _201c034d5_init(void);
inline jule::Bool _20201cada_is_unary_op(jule::Str);
inline jule::Bool _20201cdc6_is_bin_op(jule::Str);
inline jule::Bool _20201d48c_is_str(jule::Str);
inline jule::Bool _20201d734_is_raw_str(jule::Str);
inline jule::Bool _20201d9cb_is_rune(jule::Str);
inline jule::Bool _20201e0e7_is_bool(jule::Str);
inline jule::Bool _20201e38e_is_float(jule::Str);
inline jule::Bool _20201e636_is_num(jule::Str);
inline jule::Bool _20201eb75_is_ignore_ident(jule::Str);
inline jule::Bool _20201ee1c_is_anon_ident(jule::Str);
inline jule::Bool _20202045b_is_space(jule::I32);
inline jule::Bool _2020208ac_is_letter(jule::I32);
inline jule::Bool _202020deb_is_decimal(jule::U8);
inline jule::Bool _202021193_is_binary(jule::U8);
inline jule::Bool _20202143a_is_octal(jule::U8);
inline jule::Bool _2020216d2_is_hex(jule::U8);
inline jule::Bool _202021979_is_assign(jule::U64);
inline jule::Bool _202021c21_is_postfix_op(jule::Str);
inline jule::Bool _202021eb8_is_assign_op(jule::Str);
inline jule::Ptr<_20202276b_File> _202023c9a_new_file_set(jule::Str);
inline _201be0d52_Log _2020255c6_make_err(jule::I64, jule::I64, jule::Ptr<_20202276b_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20202595b_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _202025c9c_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202026132_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202026473_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2020267b4_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202026b05_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202027056_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2020272ed_common_num(jule::Slice<jule::U8>&);
inline jule::Str _202027595_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _2020278d6_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _202027c27_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _202028068_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _2020283a9_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _2020286ea_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _202028b4b_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _202028de3_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _202029234_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2020294ed_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _2020296b8_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _202029971_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _202029c18_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_201be0d52_Log> _20202e712_lex(jule::Ptr<_20202276b_File>, jule::I64);
inline jule::I64 _1be0d6896_leading_zeros64(jule::U64);
inline jule::I64 _1be0d78ec_trailing_zeros(jule::U64);
inline jule::I64 _1be0d82e3_trailing_zeros32(jule::U32);
inline jule::I64 _1be0d858a_trailing_zeros64(jule::U64);
inline jule::I64 _1be0ddd10_len32(jule::U32);
inline jule::I64 _1be0de0a7_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1be0dec67_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1be0e13ea_mul64(jule::U64, jule::U64);
inline jule::U32 _1be00a4e0_f32_bits(jule::F32);
inline jule::F32 _1be00a7cb_f32_from_bits(jule::U32);
inline jule::U64 _1be00aa73_f64_bits(jule::F64);
inline jule::F64 _1be00ad92_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1be00d49e_frexp(jule::F64);
inline jule::F64 _1be082e2a_nan(void);
inline jule::Bool _1be08ca4a_is_nan(jule::F64);
inline jule::F64 _1be093138_inf(jule::I64);
inline jule::Bool _1be09517e_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1be09dcc0_normalize(jule::F64);
inline jule::F64 _1be06a253_log(jule::F64);
inline jule::F64 _1be0d3cd3_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1be0e9c94_modf(jule::F64);
inline jule::F64 _1be0ea558_log2(jule::F64);
inline jule::Str _1bda4ec05_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1bda50772_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1bda64ed4_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1bdbe553d_FloatInfo&);
inline jule::Slice<jule::U8> _1bdabd713_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1bdae6175_DecimalSlice, jule::I64, jule::U8);
inline void _1bdae5806_round_shortest(_1be126ce3_Decimal&, jule::U64, jule::I64, _1bdbe553d_FloatInfo&);
inline jule::Slice<jule::U8> _1bdb06dbc_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1bdae6175_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1bdb08550_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1bdae6175_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1bdbc2cac_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1bdbe553d_FloatInfo&);
inline jule::Slice<jule::U8> _1bdbe6594_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1bdbe553d_FloatInfo&);
inline jule::I64 _1bdbeb973_min(jule::I64, jule::I64);
inline jule::I64 _1bdc582c6_max(jule::I64, jule::I64);
inline jule::U8 _1bdc785b0_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1bdc9ad74___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1bdd2d0d2_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1bdd4e873_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1bda41532_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1bddb838c_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1bdb05d11_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1bdcdd16e_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1bddbde0e_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1bda65a73_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1bda87457_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1bdacba73_atof_hex(jule::Str, _1bdbe553d_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1bdb2c2cc_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1bdca263e_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1bdd2d6ed_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1bdd79ace_parse_float(jule::Str, jule::I64);
inline void _1bde8d682_ryu_ftoa_fixed32(_1bdae6175_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1bdee570b_ryu_ftoa_fixed64(_1bdae6175_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1bdeec191_format_decimal(_1bdae6175_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1bdaaa986_ryu_ftoa_shortest(_1bdae6175_DecimalSlice&, jule::U64, jule::I64, _1bdbe553d_FloatInfo&);
inline jule::I64 _1bdae7a5b_mul_by_log2_log10(jule::I64);
inline jule::I64 _1bdb06680_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1bdb07571_compute_bounds(jule::U64, jule::I64, _1bdbe553d_FloatInfo&);
inline void _1bde8b96b_ryu_digits(_1bdae6175_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1be125d9c_ryu_digits32(_1bdae6175_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1be125ece_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1be126111_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1be126243_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1be126375_divmod1e9(jule::U64);
inline void _1be12784e_trim(_1be126ce3_Decimal&);
inline void _1be127981_right_shift(_1be126ce3_Decimal&, jule::U64);
inline jule::Bool _1be127ab3_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1be127be5_left_shift(_1be126ce3_Decimal&, jule::U64);
inline jule::Bool _1be127d27_should_round_up(_1be126ce3_Decimal&, jule::I64);
inline jule::Str _1be1288a5_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1be1289d7_fmt_int(jule::I64, jule::I64);
inline jule::Str _1be128b19_itoa(jule::I64);
inline jule::Str _1be128c4b_small(jule::I64);
inline jule::Bool _1be128d7d_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1be128eb0_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline void _1be1ba491_lshift_unsig(_1be159e14_Const&, _1be159e14_Const&);
inline void _1be1ba78d_rshift_unsig(_1be159e14_Const&, _1be159e14_Const&);
inline jule::Str _1be24ab81_real_kind_of(jule::Str);
inline jule::I64 _1be24ae28_bitsize_of(jule::Str);
inline jule::Str _1be24b247_int_from_bits(jule::I64);
inline jule::Str _1be24b4de_uint_from_bits(jule::I64);
inline jule::Str _1be24b786_float_from_bits(jule::I64);
inline jule::Bool _1be24c336_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1be24c5cd_bitsize_of_float(jule::F64);
inline jule::I64 _1be24c875_bitsize_of_int(jule::I64);
inline jule::I64 _1be24cb1c_bitsize_of_uint(jule::U64);
inline void _1be24cc82_update_target(void);
inline void _1be24cde7_init(void);
inline jule::F64 _1be2521a4_min(jule::Str);
inline jule::F64 _1be252490_max(jule::Str);
inline jule::Bool _1be252814_is_i8_compatible(jule::Str);
inline jule::Bool _1be252b00_is_i16_compatible(jule::Str);
inline jule::Bool _1be252d97_is_i32_compatible(jule::Str);
inline jule::Bool _1be2531b6_is_i64_compatible(jule::Str);
inline jule::Bool _1be25345d_is_u8_compatible(jule::Str);
inline jule::Bool _1be253705_is_u16_compatible(jule::Str);
inline jule::Bool _1be25399c_is_u32_compatible(jule::Str);
inline jule::Bool _1be253d21_is_u64_compatible(jule::Str);
inline jule::Bool _1be2540b8_is_f32_compatible(jule::Str);
inline jule::Bool _1be254360_is_f64_compatible(jule::Str);
inline jule::Bool _1be2546a1_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1be254948_is_i16_greater(jule::Str);
inline jule::Bool _1be254be0_is_i32_greater(jule::Str);
inline jule::Bool _1be254e87_is_i64_greater(jule::Str);
inline jule::Bool _1be25522e_is_u16_greater(jule::Str);
inline jule::Bool _1be255680_is_u32_greater(jule::Str);
inline jule::Bool _1be255927_is_u64_greater(jule::Str);
inline jule::Bool _1be255bbe_is_f32_greater(jule::Str);
inline jule::Bool _1be255e66_is_f64_greater(jule::Str);
inline jule::Bool _1be2562a7_is_greater(jule::Str, jule::Str);
inline jule::Bool _1be2572db_is_sig_int(jule::Str);
inline jule::Bool _1be2575c7_is_unsig_int(jule::Str);
inline jule::Bool _1be25786e_is_int(jule::Str);
inline jule::Bool _1be257b8d_is_float(jule::Str);
inline jule::Bool _1be257e35_is_num(jule::Str);
inline jule::Bool _1be380535_is_ascii(jule::I32);
inline jule::I32 _1be3922b1_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1be37bb3b_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1be393e50_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1be3941e7_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1be394505_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1be394846_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1be47db94_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1be44d24b_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1be44ca31_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1be45c645_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1be4662ca_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1be48059c_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1be47e854_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1bc9ca632_parameter_uses_generics(jule::Ptr<_1bc9c9686_Param>&, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>&);
inline jule::Ptr<_1be3d86c0_TypeSymbol> _1bc9ccb1d_build_type(jule::Ptr<_1d709023d_TypeDecl>);
inline jule::Ptr<_1be3aa362_Value> _1bc9cce09_build_expr(jule::Ptr<_1d709475e_Expr>);
inline jule::Ptr<_1be3d3874_TypeAlias> _1bc9cd1a1_build_type_alias(jule::Ptr<_1d70a65a6_TypeAliasDecl>);
inline jule::Ptr<_1d7080926_Field> _1bc9cd4c0_build_field(jule::Ptr<_1d70a9c4c_FieldDecl>);
inline jule::Slice<jule::Ptr<_1d7080926_Field>> _1bc9cd767_build_fields(jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>>&);
inline jule::Ptr<_1d7073276_Struct> _1bc9cda0e_build_struct(jule::Ptr<_1d70aa500_StructDecl>);
inline jule::Ptr<_1bc9c9686_Param> _1bc9cdca6_build_param(jule::Ptr<_1d70a0946_ParamDecl>);
inline jule::Slice<jule::Ptr<_1bc9c9686_Param>> _1bc9ce12a_build_params(jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>>&);
inline jule::Ptr<_1bc9c9499_RetType> _1bc9ce3c2_build_ret_type(jule::Ptr<_1d7093351_RetTypeDecl>);
inline jule::Ptr<_1bc9c9873_Fn> _1bc9ce669_build_fn(jule::Ptr<_1d70a1c66_FnDecl>);
inline jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _1bc9ce911_build_methods(jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>>&);
inline jule::Ptr<_1bd929d66_Trait> _1bc9ceba8_build_trait(jule::Ptr<_1d70aab0a_TraitDecl>);
inline jule::Ptr<_1bcb66966_EnumItem> _1bc9cee50_build_enum_item(jule::Ptr<_1d70a7e15_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1bcb66966_EnumItem>> _1bc9d01e7_build_enum_items(jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>>&);
inline jule::Ptr<_1bc9dceb3_Enum> _1bc9d048e_build_enum(jule::Ptr<_1d70a893d_EnumDecl>);
inline jule::Ptr<_1bcb58ddc_TypeEnumItem> _1bc9d08e0_build_type_enum_item(jule::Ptr<_1d70a9444_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>> _1bc9d0b87_build_type_enum_items(jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>>&);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1bc9d0e2e_build_type_enum(jule::Ptr<_1d70a9a4e_TypeEnumDecl>);
inline jule::Ptr<_1be36365b_Var> _1bc9d11c6_build_var(jule::Ptr<_1d70a2c45_VarDecl>);
inline jule::Slice<jule::Ptr<_1be36365b_Var>> _1bc9d146d_build_vars(jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>>);
inline jule::Ptr<_1bcac892d_Impl> _1bc9d1715_build_impl(jule::Ptr<_1d70ab215_Impl>);
inline jule::Ptr<_1be25aee3_ScopeChecker> _1be1e2034_new_scope_checker_base(jule::Ptr<_1be348311_Sema>&, jule::Ptr<_1bc9c9c4c_FnIns>);
inline jule::Ptr<_1be25aee3_ScopeChecker> _1be1e3ae6_new_scope_checker(jule::Ptr<_1be348311_Sema>&, jule::Ptr<_1bc9c9c4c_FnIns>);
inline jule::Ptr<_1be25a410_ScopeLabel> _1be207e3a_find_label_parent(jule::Str, jule::Ptr<_1be25aee3_ScopeChecker>);
inline jule::Bool _1be223043_model_is_goto_scope(jule::Any, jule::Ptr<_1be1ca25e_Scope>&);
inline jule::Bool _1be224d8b_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1be1ca25e_Scope>&);
inline jule::I64 _1be226079_count_match_type(jule::Ptr<_1be25992b_Match>&, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Slice<jule::Ptr<_1be3a92d9_Data>> _1be2267c7_get_datas_from_tuple_data(jule::Ptr<_1be3a92d9_Data>&);
inline jule::Slice<jule::Any> _1be2295aa_get_expr_models(jule::Any&);
inline jule::Bool _1be229d08_check_mut(jule::Ptr<_1be348311_Sema>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1be232805_check_assign(jule::Ptr<_1be348311_Sema>&, jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3a92d9_Data>, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1be233383_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1be234241_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1be228224_stmt_is_def(jule::Any&);
inline jule::Ptr<_1be36365b_Var> _1be2708cb_find_var_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be270d2c_find_type_alias_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d7073276_Struct> _1be271228_find_struct_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1bc9c9873_Fn> _1be27168a_find_fn_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1bd929d66_Trait> _1be271998_find_trait_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1bc9dceb3_Enum> _1be271cd9_find_enum_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be27214c_find_type_enum_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Str);
inline jule::Bool _1be278373_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1be346452_is_valid_model_for_ref(jule::Any&);
inline _201be0d52_Log _1be3468e7_compiler_err(jule::Ptr<_20201c3d1_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be346c38_imp_is_lookupable(jule::Ptr<_1be272d40_ImportInfo>&, jule::Str);
inline void _1be347035_append_ret_vars(jule::Slice<jule::Ptr<_1be36365b_Var>>&, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline void _1be3472dd_append_param_vars(jule::Slice<jule::Ptr<_1be36365b_Var>>&, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline void _1be3475b8_append_generic_type_aliases(jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>&, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Ptr<_1be3a4339_SymbolTable> _1be34791a_find_file(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>&, jule::Ptr<_20202276b_File>&);
inline void _1be347d7c_push_suggestion(_201be0d52_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be38975e_trait_has_reference_receiver(jule::Ptr<_1bd929d66_Trait>&);
inline jule::Bool _1be37bc90_float_assignable(jule::Str, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1be37bdc2_sig_assignable(jule::Str, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1be393977_unsig_assignable(jule::Str, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1be393aa9_int_assignable(jule::Str, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1d705bd64_Directive> _1be3ce144_find_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Str);
inline jule::Any _1be3ce4c9_find_builtins_import(jule::Str, jule::Ptr<_1be272d40_ImportInfo>);
inline void _1be3ce6d8_fit_bitsize(jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3ce9d5_make_struct_lit_alloc(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1bc9c49a0_StructLitExprModel>&);
inline jule::Ptr<_1be36365b_Var> _1be3ced26_build_error_var(jule::Ptr<_1be1ca25e_Scope>&, jule::Ptr<_1d7098ae8_FnCallExpr>&);
inline jule::Any _1be3d0167_find_builtins_sema(jule::Str, jule::Ptr<_1be348311_Sema>);
inline jule::Bool _1be3d040e_is_ok_for_shifting(jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1be3d07b6_is_instanced_struct(jule::Ptr<_1d70ab9c9_StructIns>);
inline jule::Bool _1be3d0a91_is_ptr_arithmetic_compatible_int(jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3d0cc2_apply_cast_kind_model(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3d45ab_TypeKind>&);
inline void _1be3d107a_apply_cast_kind(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Ptr<_1be3a92d9_Data> _1be3d1278_build_void_data(void);
inline jule::Str _1be3d1542_check_data_for_integer_indexing(jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3d182d_apply_cast_model_by_enum(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1bc9dceb3_Enum>);
inline void _1be3d1ae7_cast_const_by_type(jule::Str&, jule::Ptr<_1be3a92d9_Data>&);
inline void _1be3d2103_update_model_to_generic_ins(jule::Ptr<_1bc9c5066_FnCallExprModel>&, jule::Ptr<_1bc9c9c4c_FnIns>&);
inline jule::Bool _1be3d2367_push_sub_ident_from_expr(jule::Any, jule::Ptr<_1d7090e53_SubIdentTypeDecl>&);
inline jule::Bool _1be3eab33_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>&);
inline jule::Bool _1be3eaeb8_has_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Str);
inline jule::Bool _1be3eb260_can_get_ptr(jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1be3eb57e_is_valid_for_sptr_type(jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be3eb826_is_valid_for_ref(jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Bool _1be3ebae0_is_builtin_str_convertable(jule::Ptr<_1be3d45ab_TypeKind>&);
inline jule::Str _1be3ebd87_build_link_path_by_tokens(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1be3d9083_Prim> _1be3ec250_build_prim_type(jule::Str);
inline jule::Ptr<_1d7073276_Struct> _1be3ec4e7_get_struct_from_kind(jule::Ptr<_1be3d45ab_TypeKind>);
inline jule::Bool _1be3ec78e_is_prim(jule::Str);
inline void _1be3eca47_apply_implicit_cast(jule::Ptr<_1be3d45ab_TypeKind>&, jule::Ptr<_1be3a92d9_Data>&);
inline std::tuple<jule::Ptr<_1be3a4339_SymbolTable>,jule::Slice<_201be0d52_Log>> _1be40093a_build_symbols(jule::Ptr<_1d705abdc_Ast>&, jule::Trait<_1be270546_Importer>&, jule::Ptr<_1bc9d1c65_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1be275c99_Package>,jule::Slice<_201be0d52_Log>> _1be400d69___analyze_package(jule::Slice<jule::Ptr<_1d705abdc_Ast>>&, jule::Trait<_1be270546_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1be275c99_Package>,jule::Slice<_201be0d52_Log>> _1be401254_analyze_package(jule::Slice<jule::Ptr<_1d705abdc_Ast>>, jule::Trait<_1be270546_Importer>, jule::I64);
inline jule::Ptr<_1bc9c9c4c_FnIns> _1be40ce64_find_builtin_fn(jule::Str);
inline jule::Ptr<_1be3d3874_TypeAlias> _1be40d9e2_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1bd929d66_Trait> _1be437ea0_find_builtin_trait(jule::Str);
inline jule::Any _1be40b1c6_find_builtin_def(jule::Str);
inline jule::Any _1be42594e_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1be45c04b_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1be4669a1_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1be45cbea_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1be3a92d9_Data> _1be44c558_builtin_caller_common_plain(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be47c423_builtin_caller_common(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be464d56_builtin_caller_common_mut(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be45d019_builtin_caller_error(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&);
inline jule::Ptr<_1be3a92d9_Data> _1be45b743_builtin_caller_out(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be408932_builtin_caller_outln(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be4721b5_builtin_caller_new(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be425223_builtin_caller_panic(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be425355_builtin_caller_make(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be410d79_builtin_caller_append(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be410eab_caller_copy_slice(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be441cde_caller_copy_str(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be441e21_builtin_caller_copy(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48c488_builtin_caller_clone(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48c5ba_builtin_caller_assert(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48c796_builtin_caller_std_mem_size_of(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48caa4_builtin_caller_std_mem_align_of(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48cec2_builtin_caller_std_mem_free(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48d401_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48d81e_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48dc5e_builtin_caller_std_debug_out(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Ptr<_1be3a92d9_Data> _1be48e149_builtin_caller_std_debug_outln(jule::Ptr<_1be3aad57_Eval>&, jule::Ptr<_1d7098ae8_FnCallExpr>&, jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1c019777a_find_module_file(jule::Slice<jule::Ptr<_1eedea426_DirEntry>>&);
inline jule::Str _1c01978ac_find_module_file_deep(jule::Str);
inline jule::Slice<_201be0d52_Log> _1c0197b43_check_module_file(jule::Str);
inline jule::Ptr<_1a8ed48b9_FileInfo> _1a902b955_parse_file(jule::Ptr<_20202276b_File>);
inline std::tuple<jule::Ptr<_1d705abdc_Ast>,jule::Slice<_201be0d52_Log>> _1a902be83_parse_fileset(jule::Ptr<_20202276b_File>);
inline jule::Ptr<_1d70a0270_ScopeTree> _1a902c88a_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1a902cb98_is_st(jule::Ptr<_20201c3d1_Token>, jule::Ptr<_20201c3d1_Token>);
inline jule::Bool _1a902d00b_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1a902d3a2_next_st_pos(jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::Bool> _1a902d6e3_skip_st(jule::I64&, jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _1a902dd86_split_stmts(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1a903a8dc_CallData> _1a903ac50_get_call_data(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Slice<jule::Ptr<_20201c3d1_Token>> _1a903b03b_get_block_expr(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a903b2d3_split_colon(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::I64 _1a903b602_find_lowest_prec_op(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d70967c7_IdentExpr> _1a903b899_build_ident_expr(jule::Ptr<_20201c3d1_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::I64> _1a903bb41_get_range_expr_tokens(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Bool _1a9047498_check_assign_tokens(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline _201be0d52_Log _1a9048389_make_err(jule::I64, jule::I64, jule::Ptr<_20202276b_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20201c3d1_Token>> _1a904882e_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a9048ac6_range_last(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>,jule::Slice<_201be0d52_Log>> _1a9049038_parts(jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1a9049302_get_close_kind_of_brace(jule::Str);
inline _201be0d52_Log _1a90496ba_compiler_err(jule::Ptr<_20201c3d1_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1a9049a1c_push_suggestion(_201be0d52_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a9049dc4_tokstoa(jule::Slice<jule::Ptr<_20201c3d1_Token>>&);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905aaa5_build_void_type(void);
inline jule::Ptr<_1d709023d_TypeDecl> _1a905ad19_build_prim_type(jule::Ptr<_20201c3d1_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::I64> _1a905b15a_split_map_range(jule::Slice<jule::Ptr<_20201c3d1_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1c0171cb5_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1c016bc49_check_arch(jule::Str);
inline jule::Bool _1c016bd7b_is_pass_file_annotation(jule::Str);
inline void _1c0186824_set_os_vars(jule::Slice<jule::Str>&);
inline void _1c0186a77_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1c0186d30_init_vars(jule::Slice<jule::Str>&, _1c0186516_CompileInfo&);
inline jule::Slice<jule::U8> _1d697798e_read_buff(jule::Str);
inline _201be0d52_Log _1d697675c_flat_compiler_err(jule::Str);
inline void _1a8b1ab93_push_passes(jule::Ptr<_1be275c99_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a8b26374_get_all_unique_passes(jule::Ptr<_1be275c99_Package>&, jule::Slice<jule::Ptr<_1be272d40_ImportInfo>>);
inline _1c0186516_CompileInfo _1a8b38d59_build_compile_info(void);
inline void _1a9108977_eliminate_defines(jule::Ptr<_1a8900659_IR>&);
inline jule::Ptr<_1d705bd64_Directive> _1a9108d0c_find_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Str);
inline jule::Bool _1a910914d_has_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Str);
inline void _1a910c915_eliminate_dead_code_of_scope(jule::Ptr<_1be1ca25e_Scope>);
inline void _1a910cb9b_eliminate_scope_functions(jule::Slice<jule::Ptr<_1bc9c9873_Fn>>&);
inline void _1a910cdee_eliminate_functions_scope_package(jule::Ptr<_1be275c99_Package>&);
inline void _1a910d1a7_eliminate_scope_package(jule::Ptr<_1be275c99_Package>&);
inline void _1a910d394_eliminate_scopes(jule::Ptr<_1a8900659_IR>&);
inline jule::Bool _1be49542a_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1be495749_is_constant_valid_conditional_case(jule::Ptr<_1be2437b1_If>&);
inline jule::Bool _1be495a24_is_unreachable_expr(jule::Any&);
inline jule::Bool _1be495d32_is_constant_valid_match_case(jule::Ptr<_1be259d49_Case>&);
inline jule::Bool _1be4960c9_is_unreachable_conditional_case(jule::Ptr<_1be2437b1_If>&);
inline jule::Bool _1be4963a4_is_unreachable_match_case(jule::Ptr<_1be259d49_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1c00adb47_check_for_bit_shift_opt(jule::Ptr<_1d70abbb6_OperandExprModel>&, jule::Ptr<_1d70abbb6_OperandExprModel>&);
inline void _1c00b0dd0_push_opt_level(jule::I64);
inline void _1a90dd187_detect_enabled(void);
inline void _1a91232dd_throw(jule::Str);
inline jule::U64 _1aa38d326_unix(void);
inline jule::U64 _1aa38d667_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1aa38d9ec_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1aa3178ee_is_copy_optimizable(jule::Ptr<_1be3a92d9_Data>&);
inline jule::Bool _1aa317ca6_is_iter_copy_optimizable(jule::Ptr<_1be3a92d9_Data>&, jule::Ptr<_1be36365b_Var>&);
inline jule::Str _1aa325c1a_decompose_common_esq(jule::U8);
inline jule::Str _1aa326006_sbtoa(jule::U8);
inline jule::Str _1aa32629d_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1aa3265bc_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1aa3268ca_ftoa(jule::F64, jule::I64);
inline jule::Str _1aa326b72_itoa(jule::I64);
inline jule::Str _1aa326e19_utoa(jule::U64);
inline jule::Bool _1aa3272c1_is_forwarded(jule::Ptr<_1be1ca25e_Scope>&);
inline jule::Bool _1aa32758a_is_builtin_call_has_debuginf(jule::Ptr<_1bc9c5066_FnCallExprModel>&);
inline void _1aa39389d_iter_files(jule::Ptr<_1be275c99_Package>&, jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>);
inline void _1aa393b01_prepare_structure(jule::Ptr<_1d7073276_Struct>&);
inline jule::Str _1aa393d98_concat_all_parts(jule::Slice<jule::Ptr<_20201c3d1_Token>>);
inline jule::Ptr<_1d705bd64_Directive> _1aa39c2be_find_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Str);
inline jule::Bool _1aa39c654_has_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>&, jule::Str);
inline void _201baa35a_print_error_message(jule::Str);
inline void _201bab25c_help(jule::Slice<jule::Str>&);
inline void _201bc09d0_version(jule::Slice<jule::Str>&);
inline void _201bc2394_tool_distos(void);
inline void _201bc2ae2_tool_distarch(void);
inline void _201bc3340_tool(jule::Slice<jule::Str>&);
inline void _201bc3a8d_julenv(jule::Slice<jule::Str>&);
inline void _201bc42db_mod(jule::Slice<jule::Str>&);
inline jule::Bool _201bc4d69_process_command(jule::Slice<jule::Str>&);
inline void _201bd32ea_show_info(void);
void entry_point(void);
inline void _201bb24b6_enable_vtp(void);
inline void _201bca49b_init(void);
inline void _1aa3b501d_init(void);
inline jule::Ptr<_200ad484b_File> _1aa3b6b13_open_output(jule::Str&);
inline void _1aa3ae1e3_clear_objects(void);
inline void _1aa3b336d_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1aa3adb60_is_cpp_source_file(jule::Str);
inline void _1aa3b1536_push_comp_cmd_clang(jule::Str&);
inline void _1aa3b104c_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1aa3bdbe7_gen_compile_cmd(jule::Str, jule::Ptr<_1a8900659_IR>&);
inline jule::Str _1aa3b25ae_get_compile_path(void);
inline void _1aa3b26e1_apply_target_independent_optimizations(jule::Ptr<_1a8900659_IR>&);
inline void _1aa3e8b67_check_compiler_flag(void);
inline void _1aa3e8c99_check_target_arch(jule::Str);
inline void _1aa3e8dcb_check_target_os(jule::Str);
inline void _1aa3e900d_check_target_flag(jule::Str&);
inline void _1aa3e9140_check_opt_flag(jule::Str&);
inline void _1aa3e94a3_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1aa3e95d5_check_flags(jule::Slice<jule::Str>&);
inline void _1aa3e9717_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1a8900659_IR> _1aa3e9849_build_ir(jule::Slice<jule::Str>&);
inline void _1aa3e997b_compile_command(jule::Slice<jule::Str>&);


struct _1be270546_ImporterMptrData {
	void(*_1be26e468_set_mod_path)(jule::Trait<_1be270546_Importer>, jule::Str);
	jule::Str(*_1be26e6aa_get_mod_path)(jule::Trait<_1be270546_Importer>);
	jule::Str(*_1be26e9b8_mod_by_id)(jule::Trait<_1be270546_Importer>, jule::I64);
	jule::Ptr<_1be272d40_ImportInfo>(*_1be26ecc6_get_import)(jule::Trait<_1be270546_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1d705abdc_Ast>>,jule::Slice<_201be0d52_Log>>(*_1be27017d_import_package)(jule::Trait<_1be270546_Importer>, jule::Str, jule::Bool);
	void(*_1be270403_imported)(jule::Trait<_1be270546_Importer>, jule::Ptr<_1be272d40_ImportInfo>);
};

struct _1be3d417c_KindMptrData {
	jule::Str(*_1be3d3c2b_to_str)(jule::Trait<_1be3d417c_Kind>);
	jule::Bool(*_1be3d4039_equals)(jule::Trait<_1be3d417c_Kind>, jule::Ptr<_1be3d45ab_TypeKind>);
};

struct _1be3eedce_LookupMptrData {
	jule::Ptr<_1be272d40_ImportInfo>(*_1be3ed086_find_package)(jule::Trait<_1be3eedce_Lookup>, jule::Str);
	jule::Ptr<_1be272d40_ImportInfo>(*_1be3ed394_select_package)(jule::Trait<_1be3eedce_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>);
	jule::Ptr<_1be36365b_Var>(*_1be3ed74b_find_var)(jule::Trait<_1be3eedce_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1be3d3874_TypeAlias>(*_1be3edb03_find_type_alias)(jule::Trait<_1be3eedce_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d7073276_Struct>(*_1be3edeaa_find_struct)(jule::Trait<_1be3eedce_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1bc9c9873_Fn>(*_1be3ee362_find_fn)(jule::Trait<_1be3eedce_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1bd929d66_Trait>(*_1be3ee670_find_trait)(jule::Trait<_1be3eedce_Lookup>, jule::Str);
	jule::Ptr<_1bc9dceb3_Enum>(*_1be3ee97d_find_enum)(jule::Trait<_1be3eedce_Lookup>, jule::Str);
	jule::Ptr<_1bd9c99a4_TypeEnum>(*_1be3eec8b_find_type_enum)(jule::Trait<_1be3eedce_Lookup>, jule::Str);
};

struct _1aa3ad665_CommonFlagMptrData {
	jule::Str(*_1aa3ad236_name)(jule::Trait<_1aa3ad665_CommonFlag>);
	jule::I32(*_1aa3ad368_short)(jule::Trait<_1aa3ad665_CommonFlag>);
	jule::Str(*_1aa3ad4de_what)(jule::Trait<_1aa3ad665_CommonFlag>);
	void(*_1aa3e3447_reset)(jule::Trait<_1aa3ad665_CommonFlag>);
};



inline void _1be26e468_set_mod_path_0(jule::Trait<_1be270546_Importer> _self_, jule::Str _1735_path) {
	_1d69ead75_set_mod_path(_self_.safe_ptr<_1a8add45c_JuleImporter>(), _1735_path);
}
inline jule::Str _1be26e6aa_get_mod_path_0(jule::Trait<_1be270546_Importer> _self_) {
	return _1d6a06688_get_mod_path(_self_.safe_ptr<_1a8add45c_JuleImporter>());
}
inline jule::Str _1be26e9b8_mod_by_id_0(jule::Trait<_1be270546_Importer> _self_, jule::I64 _2528_id) {
	return _1d6a18865_mod_by_id(_self_.safe_ptr<_1a8add45c_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be26ecc6_get_import_0(jule::Trait<_1be270546_Importer> _self_, jule::Str _3133_path) {
	return _1a8a388e6_get_import(_self_.safe_ptr<_1a8add45c_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1d705abdc_Ast>>,jule::Slice<_201be0d52_Log>> _1be27017d_import_package_0(jule::Trait<_1be270546_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1a8a3a233_import_package(_self_.safe_ptr<_1a8add45c_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1be270403_imported_0(jule::Trait<_1be270546_Importer> _self_, jule::Ptr<_1be272d40_ImportInfo> _4135__0) {
	_1a8a4445c_imported(_self_.safe_ptr<_1a8add45c_JuleImporter>(), _4135__0);
}
inline jule::Str _1be3d3c2b_to_str_0(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1d707572e_to_str(_self_.safe_ptr<_1d70ab9c9_StructIns>());
}
inline jule::Bool _1be3d4039_equals_0(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1d7075de4_equals(_self_.data.as<_1d70ab9c9_StructIns>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_1(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1d70782c0_to_str(_self_.safe_ptr<_1bc9c9c4c_FnIns>());
}
inline jule::Bool _1be3d4039_equals_1(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1d7067622_equals(_self_.data.as<_1bc9c9c4c_FnIns>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_2(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1bca37e97_to_str(_self_.safe_ptr<_1bd929d66_Trait>());
}
inline jule::Bool _1be3d4039_equals_2(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1bca383e8_equals(_self_.data.as<_1bd929d66_Trait>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_3(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1bcabed97_to_str(_self_.safe_ptr<_1bc9dceb3_Enum>());
}
inline jule::Bool _1be3d4039_equals_3(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1bcac75b9_equals(_self_.data.as<_1bc9dceb3_Enum>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_4(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1bcc49b37_to_str(_self_.safe_ptr<_1bd9c99a4_TypeEnum>());
}
inline jule::Bool _1be3d4039_equals_4(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1bcc68d98_equals(_self_.data.as<_1bd9c99a4_TypeEnum>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_5(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3d4963_to_str(_self_.safe_ptr<_1be3d45ab_TypeKind>());
}
inline jule::Bool _1be3d4039_equals_5(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3d4c71_equals(_self_.data.as<_1be3d45ab_TypeKind>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_6(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3d93e6_to_str(_self_.safe_ptr<_1be3d9083_Prim>());
}
inline jule::Bool _1be3d4039_equals_6(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3d9704_equals(_self_.data.as<_1be3d9083_Prim>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_7(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3dc905_to_str(_self_.safe_ptr<_1be3dc592_Sptr>());
}
inline jule::Bool _1be3d4039_equals_7(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3dcc13_equals(_self_.data.as<_1be3dc592_Sptr>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_8(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3dd472_to_str(_self_.safe_ptr<_1be3dceee_Slc>());
}
inline jule::Bool _1be3d4039_equals_8(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3dd780_equals(_self_.data.as<_1be3dceee_Slc>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_9(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3dde67_to_str(_self_.safe_ptr<_1be3dd9e4_Tuple>());
}
inline jule::Bool _1be3d4039_equals_9(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3de275_equals(_self_.data.as<_1be3dd9e4_Tuple>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_10(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3de918_to_str(_self_.safe_ptr<_1be3de5a5_Map>());
}
inline jule::Bool _1be3d4039_equals_10(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3dec26_equals(_self_.data.as<_1be3de5a5_Map>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_11(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3e050c_to_str(_self_.safe_ptr<_1be3e0199_Arr>());
}
inline jule::Bool _1be3d4039_equals_11(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3e081a_equals(_self_.data.as<_1be3e0199_Arr>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_12(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1be3e0e69_to_str(_self_.safe_ptr<_1be3e0b06_Ptr>());
}
inline jule::Bool _1be3d4039_equals_12(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1be3e1277_equals(_self_.data.as<_1be3e0b06_Ptr>(), _5026_other);
}
inline jule::Str _1be3d3c2b_to_str_13(jule::Trait<_1be3d417c_Kind> _self_) {
	return _1aa394d77_to_str(_self_.safe_ptr<_1aa394aad_CustomType>());
}
inline jule::Bool _1be3d4039_equals_13(jule::Trait<_1be3d417c_Kind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _5026_other) {
	return _1aa395185_equals(_self_.data.as<_1aa394aad_CustomType>(), _5026_other);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed086_find_package_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _935_ident) {
	return _1be25b444_find_package(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed394_select_package_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _1337_selector) {
	return _1be25b752_select_package(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1be36365b_Var> _1be3ed74b_find_var_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1be25bb09_find_var(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3edb03_find_type_alias_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1be25beb1_find_type_alias(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d7073276_Struct> _1be3edeaa_find_struct_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1be25c368_find_struct(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1bc9c9873_Fn> _1be3ee362_find_fn_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1be25c720_find_fn(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1bd929d66_Trait> _1be3ee670_find_trait_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3333_ident) {
	return _1be25ca2d_find_trait(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1bc9dceb3_Enum> _1be3ee97d_find_enum_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3732_ident) {
	return _1be25cd3b_find_enum(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3eec8b_find_type_enum_0(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _4137_ident) {
	return _1be25d149_find_type_enum(_self_.safe_ptr<_1be25aee3_ScopeChecker>(), _4137_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed086_find_package_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _935_ident) {
	return _1be27335c_find_package(_self_.safe_ptr<_1be272d40_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed394_select_package_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _1337_selector) {
	return _1be27366a_select_package(_self_.safe_ptr<_1be272d40_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1be36365b_Var> _1be3ed74b_find_var_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1be273a22_find_var(_self_.safe_ptr<_1be272d40_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3edb03_find_type_alias_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1be273dc9_find_type_alias(_self_.safe_ptr<_1be272d40_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d7073276_Struct> _1be3edeaa_find_struct_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1be274281_find_struct(_self_.safe_ptr<_1be272d40_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1bc9c9873_Fn> _1be3ee362_find_fn_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1be274638_find_fn(_self_.safe_ptr<_1be272d40_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1bd929d66_Trait> _1be3ee670_find_trait_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3333_ident) {
	return _1be274946_find_trait(_self_.safe_ptr<_1be272d40_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1bc9dceb3_Enum> _1be3ee97d_find_enum_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3732_ident) {
	return _1be274c54_find_enum(_self_.safe_ptr<_1be272d40_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3eec8b_find_type_enum_1(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _4137_ident) {
	return _1be275062_find_type_enum(_self_.safe_ptr<_1be272d40_ImportInfo>(), _4137_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed086_find_package_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _935_ident) {
	return _1be276272_find_package(_self_.safe_ptr<_1be275c99_Package>(), _935_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed394_select_package_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _1337_selector) {
	return _1be276580_select_package(_self_.safe_ptr<_1be275c99_Package>(), _1337_selector);
}
inline jule::Ptr<_1be36365b_Var> _1be3ed74b_find_var_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1be276937_find_var(_self_.safe_ptr<_1be275c99_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3edb03_find_type_alias_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1be276cde_find_type_alias(_self_.safe_ptr<_1be275c99_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d7073276_Struct> _1be3edeaa_find_struct_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1be277196_find_struct(_self_.safe_ptr<_1be275c99_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1bc9c9873_Fn> _1be3ee362_find_fn_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1be27754d_find_fn(_self_.safe_ptr<_1be275c99_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1bd929d66_Trait> _1be3ee670_find_trait_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3333_ident) {
	return _1be27785b_find_trait(_self_.safe_ptr<_1be275c99_Package>(), _3333_ident);
}
inline jule::Ptr<_1bc9dceb3_Enum> _1be3ee97d_find_enum_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3732_ident) {
	return _1be277b69_find_enum(_self_.safe_ptr<_1be275c99_Package>(), _3732_ident);
}
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3eec8b_find_type_enum_2(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _4137_ident) {
	return _1be277e77_find_type_enum(_self_.safe_ptr<_1be275c99_Package>(), _4137_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed086_find_package_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _935_ident) {
	return _1be34882d_find_package(_self_.safe_ptr<_1be348311_Sema>(), _935_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed394_select_package_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _1337_selector) {
	return _1be348b3b_select_package(_self_.safe_ptr<_1be348311_Sema>(), _1337_selector);
}
inline jule::Ptr<_1be36365b_Var> _1be3ed74b_find_var_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1be348ee3_find_var(_self_.safe_ptr<_1be348311_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3edb03_find_type_alias_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1be34939a_find_type_alias(_self_.safe_ptr<_1be348311_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d7073276_Struct> _1be3edeaa_find_struct_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1be349752_find_struct(_self_.safe_ptr<_1be348311_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1bc9c9873_Fn> _1be3ee362_find_fn_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1be349b09_find_fn(_self_.safe_ptr<_1be348311_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1bd929d66_Trait> _1be3ee670_find_trait_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3333_ident) {
	return _1be349e17_find_trait(_self_.safe_ptr<_1be348311_Sema>(), _3333_ident);
}
inline jule::Ptr<_1bc9dceb3_Enum> _1be3ee97d_find_enum_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3732_ident) {
	return _1be34a225_find_enum(_self_.safe_ptr<_1be348311_Sema>(), _3732_ident);
}
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3eec8b_find_type_enum_3(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _4137_ident) {
	return _1be34a533_find_type_enum(_self_.safe_ptr<_1be348311_Sema>(), _4137_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed086_find_package_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _935_ident) {
	return _1be3a4856_find_package(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1be272d40_ImportInfo> _1be3ed394_select_package_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _1337_selector) {
	return _1be3a4b64_select_package(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1be36365b_Var> _1be3ed74b_find_var_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1be3a501b_find_var(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1be3d3874_TypeAlias> _1be3edb03_find_type_alias_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1be3a53c3_find_type_alias(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1d7073276_Struct> _1be3edeaa_find_struct_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1be3a577a_find_struct(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1bc9c9873_Fn> _1be3ee362_find_fn_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1be3a5b32_find_fn(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1bd929d66_Trait> _1be3ee670_find_trait_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3333_ident) {
	return _1be3a5e40_find_trait(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1bc9dceb3_Enum> _1be3ee97d_find_enum_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _3732_ident) {
	return _1be3a624d_find_enum(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _3732_ident);
}
inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3eec8b_find_type_enum_4(jule::Trait<_1be3eedce_Lookup> _self_, jule::Str _4137_ident) {
	return _1be3a655b_find_type_enum(_self_.safe_ptr<_1be3a4339_SymbolTable>(), _4137_ident);
}
inline jule::Str _1aa3ad236_name_0(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd4e8d9_name(_self_.safe_ptr<_1acd50049_Flag>());
}
inline jule::I32 _1aa3ad368_short_0(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd50698_short(_self_.safe_ptr<_1acd50049_Flag>());
}
inline jule::Str _1aa3ad4de_what_0(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd50434_what(_self_.safe_ptr<_1acd50049_Flag>());
}
inline void _1aa3e3447_reset_0(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	_1acd50566_reset(_self_.safe_ptr<_1acd50049_Flag>());
}
inline jule::Str _1aa3ad236_name_1(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd53701_name(_self_.safe_ptr<_1acd53ba7_Flag>());
}
inline jule::I32 _1aa3ad368_short_1(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd541d5_short(_self_.safe_ptr<_1acd53ba7_Flag>());
}
inline jule::Str _1aa3ad4de_what_1(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd53e71_what(_self_.safe_ptr<_1acd53ba7_Flag>());
}
inline void _1aa3e3447_reset_1(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	_1acd540a3_reset(_self_.safe_ptr<_1acd53ba7_Flag>());
}
inline jule::Str _1aa3ad236_name_2(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd57183_name(_self_.safe_ptr<_1acd57639_Flag>());
}
inline jule::I32 _1aa3ad368_short_2(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd57b67_short(_self_.safe_ptr<_1acd57639_Flag>());
}
inline jule::Str _1aa3ad4de_what_2(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd57903_what(_self_.safe_ptr<_1acd57639_Flag>());
}
inline void _1aa3e3447_reset_2(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	_1acd57a35_reset(_self_.safe_ptr<_1acd57639_Flag>());
}
inline jule::Str _1aa3ad236_name_3(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd5ab59_name(_self_.safe_ptr<_1acd5b110_Flag>());
}
inline jule::I32 _1aa3ad368_short_3(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd5b63d_short(_self_.safe_ptr<_1acd5b110_Flag>());
}
inline jule::Str _1aa3ad4de_what_3(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd5b3c9_what(_self_.safe_ptr<_1acd5b110_Flag>());
}
inline void _1aa3e3447_reset_3(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	_1acd5b50b_reset(_self_.safe_ptr<_1acd5b110_Flag>());
}
inline jule::Str _1aa3ad236_name_4(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd5e5db_name(_self_.safe_ptr<_1acd5ea92_Flag>());
}
inline jule::I32 _1aa3ad368_short_4(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd600c0_short(_self_.safe_ptr<_1acd5ea92_Flag>());
}
inline jule::Str _1aa3ad4de_what_4(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	return _1acd5ed5b_what(_self_.safe_ptr<_1acd5ea92_Flag>());
}
inline void _1aa3e3447_reset_4(jule::Trait<_1aa3ad665_CommonFlag> _self_) {
	_1acd5ee8d_reset(_self_.safe_ptr<_1acd5ea92_Flag>());
}


static _1be270546_ImporterMptrData _1be270546_Importer_mptr_data[] = {
	{
		._1be26e468_set_mod_path=_1be26e468_set_mod_path_0,
		._1be26e6aa_get_mod_path=_1be26e6aa_get_mod_path_0,
		._1be26e9b8_mod_by_id=_1be26e9b8_mod_by_id_0,
		._1be26ecc6_get_import=_1be26ecc6_get_import_0,
		._1be27017d_import_package=_1be27017d_import_package_0,
		._1be270403_imported=_1be270403_imported_0,
	},
};
static _1be3d417c_KindMptrData _1be3d417c_Kind_mptr_data[] = {
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_0,
		._1be3d4039_equals=_1be3d4039_equals_0,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_1,
		._1be3d4039_equals=_1be3d4039_equals_1,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_2,
		._1be3d4039_equals=_1be3d4039_equals_2,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_3,
		._1be3d4039_equals=_1be3d4039_equals_3,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_4,
		._1be3d4039_equals=_1be3d4039_equals_4,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_5,
		._1be3d4039_equals=_1be3d4039_equals_5,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_6,
		._1be3d4039_equals=_1be3d4039_equals_6,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_7,
		._1be3d4039_equals=_1be3d4039_equals_7,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_8,
		._1be3d4039_equals=_1be3d4039_equals_8,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_9,
		._1be3d4039_equals=_1be3d4039_equals_9,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_10,
		._1be3d4039_equals=_1be3d4039_equals_10,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_11,
		._1be3d4039_equals=_1be3d4039_equals_11,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_12,
		._1be3d4039_equals=_1be3d4039_equals_12,
	},
	{
		._1be3d3c2b_to_str=_1be3d3c2b_to_str_13,
		._1be3d4039_equals=_1be3d4039_equals_13,
	},
};
static _1be3eedce_LookupMptrData _1be3eedce_Lookup_mptr_data[] = {
	{
		._1be3ed086_find_package=_1be3ed086_find_package_0,
		._1be3ed394_select_package=_1be3ed394_select_package_0,
		._1be3ed74b_find_var=_1be3ed74b_find_var_0,
		._1be3edb03_find_type_alias=_1be3edb03_find_type_alias_0,
		._1be3edeaa_find_struct=_1be3edeaa_find_struct_0,
		._1be3ee362_find_fn=_1be3ee362_find_fn_0,
		._1be3ee670_find_trait=_1be3ee670_find_trait_0,
		._1be3ee97d_find_enum=_1be3ee97d_find_enum_0,
		._1be3eec8b_find_type_enum=_1be3eec8b_find_type_enum_0,
	},
	{
		._1be3ed086_find_package=_1be3ed086_find_package_1,
		._1be3ed394_select_package=_1be3ed394_select_package_1,
		._1be3ed74b_find_var=_1be3ed74b_find_var_1,
		._1be3edb03_find_type_alias=_1be3edb03_find_type_alias_1,
		._1be3edeaa_find_struct=_1be3edeaa_find_struct_1,
		._1be3ee362_find_fn=_1be3ee362_find_fn_1,
		._1be3ee670_find_trait=_1be3ee670_find_trait_1,
		._1be3ee97d_find_enum=_1be3ee97d_find_enum_1,
		._1be3eec8b_find_type_enum=_1be3eec8b_find_type_enum_1,
	},
	{
		._1be3ed086_find_package=_1be3ed086_find_package_2,
		._1be3ed394_select_package=_1be3ed394_select_package_2,
		._1be3ed74b_find_var=_1be3ed74b_find_var_2,
		._1be3edb03_find_type_alias=_1be3edb03_find_type_alias_2,
		._1be3edeaa_find_struct=_1be3edeaa_find_struct_2,
		._1be3ee362_find_fn=_1be3ee362_find_fn_2,
		._1be3ee670_find_trait=_1be3ee670_find_trait_2,
		._1be3ee97d_find_enum=_1be3ee97d_find_enum_2,
		._1be3eec8b_find_type_enum=_1be3eec8b_find_type_enum_2,
	},
	{
		._1be3ed086_find_package=_1be3ed086_find_package_3,
		._1be3ed394_select_package=_1be3ed394_select_package_3,
		._1be3ed74b_find_var=_1be3ed74b_find_var_3,
		._1be3edb03_find_type_alias=_1be3edb03_find_type_alias_3,
		._1be3edeaa_find_struct=_1be3edeaa_find_struct_3,
		._1be3ee362_find_fn=_1be3ee362_find_fn_3,
		._1be3ee670_find_trait=_1be3ee670_find_trait_3,
		._1be3ee97d_find_enum=_1be3ee97d_find_enum_3,
		._1be3eec8b_find_type_enum=_1be3eec8b_find_type_enum_3,
	},
	{
		._1be3ed086_find_package=_1be3ed086_find_package_4,
		._1be3ed394_select_package=_1be3ed394_select_package_4,
		._1be3ed74b_find_var=_1be3ed74b_find_var_4,
		._1be3edb03_find_type_alias=_1be3edb03_find_type_alias_4,
		._1be3edeaa_find_struct=_1be3edeaa_find_struct_4,
		._1be3ee362_find_fn=_1be3ee362_find_fn_4,
		._1be3ee670_find_trait=_1be3ee670_find_trait_4,
		._1be3ee97d_find_enum=_1be3ee97d_find_enum_4,
		._1be3eec8b_find_type_enum=_1be3eec8b_find_type_enum_4,
	},
};
static _1aa3ad665_CommonFlagMptrData _1aa3ad665_CommonFlag_mptr_data[] = {
	{
		._1aa3ad236_name=_1aa3ad236_name_0,
		._1aa3ad368_short=_1aa3ad368_short_0,
		._1aa3ad4de_what=_1aa3ad4de_what_0,
		._1aa3e3447_reset=_1aa3e3447_reset_0,
	},
	{
		._1aa3ad236_name=_1aa3ad236_name_1,
		._1aa3ad368_short=_1aa3ad368_short_1,
		._1aa3ad4de_what=_1aa3ad4de_what_1,
		._1aa3e3447_reset=_1aa3e3447_reset_1,
	},
	{
		._1aa3ad236_name=_1aa3ad236_name_2,
		._1aa3ad368_short=_1aa3ad368_short_2,
		._1aa3ad4de_what=_1aa3ad4de_what_2,
		._1aa3e3447_reset=_1aa3e3447_reset_2,
	},
	{
		._1aa3ad236_name=_1aa3ad236_name_3,
		._1aa3ad368_short=_1aa3ad368_short_3,
		._1aa3ad4de_what=_1aa3ad4de_what_3,
		._1aa3e3447_reset=_1aa3e3447_reset_3,
	},
	{
		._1aa3ad236_name=_1aa3ad236_name_4,
		._1aa3ad368_short=_1aa3ad368_short_4,
		._1aa3ad4de_what=_1aa3ad4de_what_4,
		._1aa3e3447_reset=_1aa3e3447_reset_4,
	},
};


jule::Str _1aa3b8d13_OUT_DIR = jule::Str("dist", 4);
jule::Str _1aa3b997e_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1aa3c2dc7_OUT = jule::Str();
jule::Str _1eec80322_COMPILER = jule::Str();
jule::Str _1eec81873_COMPILER_PATH = jule::Str();
jule::Str _1eec81ad7_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _1eec81d4b_SHADOWING = false;
jule::Bool _1eec820b0_TRANSPILATION = false;
jule::Bool _1eec82324_TEST = false;
jule::Bool _1eec825bb_RC = true;
jule::Bool _1eec829d9_SAFETY = true;
jule::Bool _1eec82ce7_PRODUCTION = false;
jule::Ptr<_201b827a5_RangeTable> _201b1379c__L = jule::new_ptr<_201b827a5_RangeTable>(_201b827a5_RangeTable{._field_r16=jule::Slice<_201b81dae_Range16>::make({_201b81dae_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_201b81dae_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_201b81dae_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_201b81dae_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_201b81dae_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_201b81dae_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_201b81dae_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_201b81dae_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_201b81dae_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_201b81dae_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_201b81dae_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_201b81dae_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_201b81dae_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_201b81dae_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_201b81dae_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_201b81dae_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_201b81dae_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_201b81dae_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_201b81dae_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_201b81dae_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_201b81dae_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_201b81dae_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_201b81dae_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_201b81dae_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_201b81dae_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_201b81dae_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_201b81dae_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_201b81dae_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_201b81dae_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_201b81dae_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_201b81dae_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_201b81dae_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_201b81dae_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_201b81dae_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_201b81dae_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_201b81dae_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_201b81dae_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_201b81dae_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_201b81dae_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_201b81dae_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_201b81dae_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_201b81dae_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_201b81dae_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_201b81dae_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_201b81dae_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_201b81dae_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_201b81dae_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_201b81dae_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_201b81dae_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_201b81dae_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_201b81dae_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_201b81dae_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_201b81dae_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_201b81dae_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_201b81dae_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_201b82332_Range32>::make({_201b82332_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_201b82332_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_201b82332_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_201b82332_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_201b82332_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_201b82332_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_201b82332_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_201b82332_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_201b82332_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_201b82332_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_201b82332_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_201b82332_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_201b82332_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_201b82332_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_201b82332_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_201b82332_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_201b82332_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_201b82332_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_201b82332_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_201b82332_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_201b82332_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_201b82332_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_201b82332_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_201b82332_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_201b82332_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_201b82332_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_201b82332_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _1eec8b7c3_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _201bd2d11_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _201bd4373_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _201be4262_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _201be45e7_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _201c13726_PATH_STDLIB = jule::Str();
jule::Str _201c14381_PATH_EXEC = jule::Str();
jule::Str _201c152b6_PATH_WD = jule::Str();
jule::Str _201c33ed8_PATH_API = jule::Str();
jule::Array<jule::I32,5> _201e6bb38_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _201e6bd9c_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _201e6c1dd_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _2020168a3_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _202016be4_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_2020247c3_KindPair,47> _202024c57_KEYWORDS = jule::Array<_2020247c3_KindPair,47>({_2020247c3_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_2020247c3_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_2020247c3_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_2020247c3_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_2020247c3_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_2020247c3_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_2020247c3_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_2020247c3_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_2020247c3_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_2020247c3_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_2020247c3_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_2020247c3_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_2020247c3_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_2020247c3_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_2020247c3_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_2020247c3_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_2020247c3_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_2020247c3_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_2020247c3_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_2020247c3_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_2020247c3_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_2020247c3_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_2020247c3_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_2020247c3_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_2020247c3_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_2020247c3_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_2020247c3_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_2020247c3_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_2020247c3_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_2020247c3_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_2020247c3_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_2020247c3_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_2020247c3_KindPair,39> _2020250dc_BASIC_OPS = jule::Array<_2020247c3_KindPair,39>({_2020247c3_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_2020247c3_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_2020247c3_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_2020247c3_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_2020247c3_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_2020247c3_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_2020247c3_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1be0d704a_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1be0d7699_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1bdbe553d_FloatInfo _1bda40454_F32_INFO = _1bdbe553d_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1bdbe553d_FloatInfo _1bda45943_F64_INFO = _1bdbe553d_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1bdae2a67_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1bdb359bc_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1bdb4c86e_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1bdbb45ea_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1bdbe76b6_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1be126980_LeftCheat> _1bdc1db71_LEFTCHEATS = jule::Slice<_1be126980_LeftCheat>::make({_1be126980_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1be126980_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1be126980_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1be126980_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1be126980_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1be126980_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1be126980_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1be126980_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1be126980_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1be126980_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1be126980_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1be126980_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1be126980_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1be126980_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1be126980_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1be126980_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1be126980_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1be126980_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1be126980_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1be126980_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1be126980_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1be126980_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1be126980_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1be126980_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1be126980_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1be126980_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1be126980_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1be126980_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1be126980_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1be126980_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1be126980_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1be126980_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1be126980_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1be126980_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1be126980_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1be126980_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1be126980_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1be126980_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1be126980_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1be126980_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1be126980_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1be126980_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1be126980_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1be126980_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1be126980_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1be126980_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1be126980_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1be126980_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1be126980_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1be126980_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1be126980_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1be126980_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1be126980_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1be126980_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1be126980_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1be126980_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1be126980_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1be126980_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1be126980_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1be126980_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1be126980_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1be2427c1_BIT_SIZE = 0LL;
jule::Str _1be24a378_SYS_INT = jule::Str();
jule::Str _1be24a5dc_SYS_UINT = jule::Str();
jule::Bool _1c00ae40b_COPY = false;
jule::Bool _1c00ae75d_DEADCODE = false;
jule::Bool _1c00aea6b_APPEND = false;
jule::Bool _1c00aedbd_MATH = false;
jule::Bool _1c00b01cb_ACCESS = false;
jule::Bool _1c00b04d9_INLINE = false;
jule::Bool _1c00b07e7_PTR = false;
jule::Bool _1c00b0c15_COND = false;
jule::Bool _1a9077660_expr_enabled = false;
jule::Bool _1a90787b5_scope_enabled = false;
jule::Array<jule::U64,12> _1aa38773d_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Uintptr _200aac604_STDERR = _200ac1706_get_std_handle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<_200ba6588_accept_range,16> _200ba68eb_ACCEPT_RANGES = jule::Array<_200ba6588_accept_range,16>({_200ba6588_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_200ba6588_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_200ba6588_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_200ba6588_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_200ba6588_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _201bb45a6_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_201b827a5_RangeTable> _201b1b4b9_LETTER = _201b1379c__L;
jule::Uintptr _1eee7b4da_STDIN = _200ac1706_get_std_handle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Str _201c347be_OS = jule::Str("windows", 7);
jule::Str _201c12b32_ARCH = jule::Str("arm64", 5);
jule::Uintptr _1eee822c1_STDOUT = _200ac1706_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Array<jule::U8,256> _200ba6016_FIRST = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<jule::U8,256> _201b7aa9a__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _200ba6588_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201b81dae_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201b82332_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201b827a5_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _200c93543_index(_200c9307b_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _200c98a54_append(_200c9307b_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _200c998bd_string(_200c9307b_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _200c9307b_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eedea426_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1eedea426_DirEntry>>> static__200bbb14c_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1eedea426_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1eedea426_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _200aa9832_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _200ac3274__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1eedea426_DirEntry>>>(_1eedd6324_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _200ac351b__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1aac64e2d;
			};
			jule::Str _2617_name = _200aaa59c_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_200ad4c14_Status> _2721_stat = ({
				auto except = static__200ccda01_of(_200cabda8_join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1eedea426_DirEntry>>>(except.error);
				} jule::Ptr<_200ad4c14_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1eedea426_DirEntry>(_1eedea426_DirEntry{._field_name=_2617_name, ._field_stat=_2721_stat}));;
		}
	_iter_next_1aac64e2d:;
	}
	_iter_end_1aac64e2d:;;
	_200ac37b3__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1eedea426_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__200c21092_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _200aa9832_utf16_from_str(_4026_path);;
	if ((!(_200ac2c35_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1eedd6324_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__200cca338_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _200aa9832_utf16_from_str(_5426_path);;
	if ((!(_200ac2ecc_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1eedd6324_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1eedec15e_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_200ad484b_File> static__1eedd6ad8_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_200ad484b_File>(_200ad484b_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_200ad484b_File>> static__1eedd9aec_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_200ad484b_File>>(jule::Any(),({
		auto except = static__200b3cce4_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_200ad484b_File>>(except.error);
		} jule::Ptr<_200ad484b_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1eedeae71_read(jule::Str _6724_path) {
	jule::Ptr<_200ad4c14_Status> _6813_s = ({
		auto except = static__200ccda01_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_200ad4c14_Status>();});
	});;
	if ((!(_1eed196db_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_200ad484b_File> _7817_f = ({
		auto except = static__200b3cce4_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_200ad484b_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1eedec34b_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _200b3e08c_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1eedeb14c_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_200ad484b_File> _9217_f = ({
		auto except = static__200b3cce4_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_200ad484b_File>();});
	});;
	({
		auto except = _200b79ade_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1eedec34b_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1eedee68e_seek(_200ad484b_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _200ac750e_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1eedd6324_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1eedec34b_close(_200ad484b_File* _self_) {
	if ((_200ac7c6d_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1eedd6324_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_200ad484b_File>> static__200b3cce4_open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _200aa9832_utf16_from_str(_2124_path);;
	jule::I64 _2313_handle = _200ac1e10__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_200ad484b_File>>(_1eedd6324_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_200ad484b_File>>(jule::Any(),static__1eedd6ad8_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__200b68c43_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _200aa9832_utf16_from_str(_3426_path);;
	if ((!(_200ac298d_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1eedd6324_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _200b79ade_write(_200ad484b_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_200b3c5c9_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _200aa9832_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _200ac4b49_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_1eedd6324_get_last_fs_error());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_200ac8158_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1eedd6324_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _200b3e08c_read(_200ad484b_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	if (_200b3c5c9_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _200ac5177_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_1eedd6324_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _200abeb99_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1aac80b08:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I64 _9721_size = _200ba7c71_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1aac80b08;
					};
					_200ba818e_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1aac80b08:;
				++it;
				goto _iter_begin_1aac80b08;
			}
			_iter_end_1aac80b08:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I64>(_200ac78e9_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1eedd6324_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _200ad484b_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1eed19972_is_dir(_200ad4c14_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1eed196db_is_reg(_200ad4c14_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_200ad4c14_Status>> static__200ccda01_of(jule::Str _1222_path) {
	if (_1222_path.empty()) {
		return jule::Exceptional<jule::Ptr<_200ad4c14_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16_path = _200aa9832_utf16_from_str(_1222_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _200ac1a25_wstat((&(_1613_utf16_path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_200ad4c14_Status>>(jule::Any(),jule::new_ptr<_200ad4c14_Status>(_200ad4c14_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_200ad4c14_Status>>(_1eedd6324_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _200ad4c14_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_201c35bcc_Cmd> static__201c3610b_new(jule::Str _2023_path) {
	return jule::new_ptr<_201c35bcc_Cmd>(_201c35bcc_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _201c36370_spawn(_201c35bcc_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _201c461d7___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _201c461d7___spawn(_201c35bcc_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_201c45901_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_201c45cdb_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_201c3544b_get_last_process_error());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_201c3544b_get_last_process_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _201c35bcc_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201be0d52_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20201c788_prec(_20201c3d1_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1aad48e9b:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aad49012:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1aad488a2:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aad48918:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1aad4897e:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1aad48660:;
			{
				return 0LLU;
			}
		}
		_match_end_1aad4860a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20201c3d1_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _202022b78_is_ok(_20202276b_File* _self_) {
	({
		auto except = static__200ccda01_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_200ad4c14_Status>();});
	});
	return true;
}



inline void _202022ded_fill(_20202276b_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _202023162_dir(_20202276b_File* _self_) {
	return _200cc16e7_dir((*_self_)._field_path);
}



inline jule::Str _2020233c6_name(_20202276b_File* _self_) {
	return _200cbad1d_base((*_self_)._field_path);
}



inline jule::Uintptr _20202363a_addr(_20202276b_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _202023948_get_row(_20202276b_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1aad4dc92;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1aad4dc92:;
	}
	_iter_end_1aad4dc92:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _20202276b_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2020247c3_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20202a994_push_err(_20202a400_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2020255c6_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _20202acb3_push_err_tok(_20202a400_Lex* _self_, jule::Ptr<_20201c3d1_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2020255c6_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _20202ae8e_lex(_20202a400_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_20202ce91_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_20201c3d1_Token> _47321_token = _20202e316_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1aad8ca39:;
	}
	_iter_end_1aad8ca39:;;
}



inline jule::Str _20202b29c_id(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _200ba716b_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_2020208ac_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _200ba716b_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_202020deb_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_2020208ac_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1aad91356:;
	}
	_iter_end_1aad91356:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _20202b511_resume(_20202a400_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_20202045b_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aad961c4:;
						{
							_20202ce91_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aad9623a:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aad940e5:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1aad95c2e:;
				};
				goto _iter_next_1aad9439d;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1aad950e6;
					};
				}
			_iter_next_1aad950e6:;
			}
			_iter_end_1aad950e6:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1aad9439d:;
	}
	_iter_end_1aad9439d:;;
	return nullptr;
}



inline void _20202b786_lex_line_comment(_20202a400_Lex* _self_, jule::Ptr<_20201c3d1_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1aad98baa;
			};
		}
	_iter_next_1aad98baa:;
	}
	_iter_end_1aad98baa:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _20202ba0b_lex_range_comment(_20202a400_Lex* _self_, jule::Ptr<_20201c3d1_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1aad9c065;
			};
			if ((_55517_r == '\n')) {
				_20202ce91_new_line(&(*_self_));
				goto _iter_next_1aad9c065;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aad9c065:;
	}
	_iter_end_1aad9c065:;;
	_20202a994_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _20202bd19_num(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_202028de3_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_202028b4b_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_202027595_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_2020272ed_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _20202c127_escape_seq(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aada747c:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aada7180:;
			{
				_60217_seq=_2020294ed_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aada71e6:;
			{
				_60217_seq=_2020296b8_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aada725c:;
			{
				_60217_seq=_202029971_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1aada6910:;
			{
				_60217_seq=_202029c18_byte_escape(_60130_txt);
			}
		}
		_match_end_1aada703c:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_20202a994_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _20202c4ce_get_rune(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _20202c127_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _200ba716b_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _20202c7dc_lex_rune(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1aadae7c5;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_20202a994_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_20202ce91_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _20202c4ce_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_200ba8d60_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1aadae7c5;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1aadae7c5:;
	}
	_iter_end_1aadae7c5:;;
	if ((_64417_n == 0LL)) {
		_20202a994_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_20202a994_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _20202ca51_lex_str(_20202a400_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1aadb5cc6;
			};
			if ((_68917_ch == '\n')) {
				_20202ce91_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_20202a994_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _20202c4ce_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_200ba8d60_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1aadb5cc6;
			};
		}
	_iter_next_1aadb5cc6:;
	}
	_iter_end_1aadb5cc6:;;
	return _68117_s;
}



inline jule::Bool _20202ccb5_is_first_token_of_line(_20202a400_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _20202ce91_new_line(_20202a400_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _20202d48b_is_op(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_20201c3d1_Token>& _72267_t) {
	if ((!(_20202595b_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _20202d843_lex_basic_ops(_20202a400_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_20201c3d1_Token>& _73350_tok) {
	{
		auto &expr = _2020250dc_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1aadbc6b2:;
		if (it != expr.end()) {
			_2020247c3_KindPair &_73416_pair = *it;
			{
				if (_20202d48b_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1aadbc6b2:;
			++it;
			goto _iter_begin_1aadbc6b2;
		}
		_iter_end_1aadbc6b2:;
	};
	return false;
}



inline jule::Bool _20202dbea_lex_id(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_20201c3d1_Token>& _74344_t) {
	jule::Str _74413_lex = _20202b29c_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _20202e0a2_lex_num(_20202a400_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_20201c3d1_Token>& _75445_t) {
	jule::Str _75513_lex = _20202bd19_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_20201c3d1_Token> _20202e316_token(_20202a400_Lex* _self_) {
	jule::Ptr<_20201c3d1_Token> _76717_t = jule::new_ptr<_20201c3d1_Token>(_20201c3d1_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _20202b511_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_20202e0a2_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aadc3da0:;
			{
				goto _match_end_1aadc2882;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1aadc3e16:;
			{
				_76717_t.get()._field_kind=_20202c7dc_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1aadc4ae8:;
			{
				_76717_t.get()._field_kind=_20202ca51_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_20202595b_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1aadc4b5e:;
			{
				_20202b786_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_20202595b_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1aadc4bc5:;
			{
				_20202ba0b_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_20202d48b_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20202d48b_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20202d48b_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20202d48b_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20202d48b_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20202d48b_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20202d843_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aadc32ab:;
			{
				goto _match_end_1aadc2882;
			}
		}
		else if (_20202dbea_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aadc3322:;
			{
				{
					auto &expr = _202024c57_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1aadcbb00:;
					if (it != expr.end()) {
						_2020247c3_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1aadcbb00;
							};
						}
						_iter_next_1aadcbb00:;
						++it;
						goto _iter_begin_1aadcbb00;
					}
					_iter_end_1aadcbb00:;
				};
			}
		}
		else {
			_case_begin_1aadc3245:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _200ba716b_decode_rune(_77213_txt);
				_20202a994_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1aadc2882:;
	};
	(*_self_)._field_column+=_200ba8d60_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _20202a400_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d705abdc_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d705b968_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d705bd64_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709023d_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7090b67_is_prim(_1d7090804_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7090804_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7090e53_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709130a_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70915e6_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70919e2_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7091ccd_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d709241b_is_unsafe(_1d70920b9_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d70920b9_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7092b25_auto_sized(_1d709274b_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d709274b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7092e99_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7093351_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709475e_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7094a4a_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7095100_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70953db_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7095ae5_is_nil(_1d7095793_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7095793_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7095e9c_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7096354_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7096b29_is_self(_1d70967c7_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1d70967c7_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7096ed1_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7097388_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7097740_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7097ae7_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709806a_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70984dd_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7098e5b_unhandled(_1d7098ae8_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1d70991c0_ignored(_1d7098ae8_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7098ae8_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70998c9_is_targeted(_1d7099577_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7099577_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7099cc5_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d709a8b9_is_empty(_1d709a248_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d709a248_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709ac60_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d709b535_is_empty(_1d709b1d3_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d709b1d3_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709ba74_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709c17e_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709c536_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709c8dd_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709cc95_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709d081_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709d68b_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709dbca_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d709eb65_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a0270_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70a0ca9_is_self(_1d70a0946_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1d70a101d_is_ref(_1d70a0946_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a0946_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70a20b8_is_anon(_1d70a1c66_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a1c66_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a2c45_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a30ec_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70a3aae_is_inf(_1d70a375c_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a375c_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70a4384_is_while_next(_1d70a4032_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a4032_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a48c3_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a4c7a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a5132_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a55a5_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a595c_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a5dd0_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a65a6_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a6a29_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a7200_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a7992_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70a8267_auto_expr(_1d70a7e15_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a7e15_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70a8ec1_default_typed(_1d70a893d_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a893d_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a9444_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a9a4e_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70a9c4c_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70aa500_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70aab0a_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70ab578_is_trait_impl(_1d70ab215_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1d70ab7dc_is_struct_impl(_1d70ab215_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d70ab215_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bdbe553d_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bdae6175_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be126980_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bdde94de_set(_1be126ce3_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1ab4866b5:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1ab48672b:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1ab48651c:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1ab4889b4:;
					{
						goto _iter_next_1ab488200;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1ab488a3b:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1ab488200;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1ab488ab3:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1ab488200;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1ab488200;
					}
				}
				_match_end_1ab488882:;
			};
			goto _iter_end_1ab488200;
		}
	_iter_next_1ab488200:;
	}
	_iter_end_1ab488200:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1bdc785b0_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1ab491505;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1ab491505:;
		}
		_iter_end_1ab491505:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1bde3c994_float_bits(_1be126ce3_Decimal* _self_, _1bdbe553d_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1bdb359bc_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1bdb359bc_POWTAB[(*_self_)._field_dp];
			};
			_1be127112_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1ab498122:;
	}
	_iter_end_1ab498122:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1bdb359bc_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1bdb359bc_POWTAB[(-((*_self_)._field_dp))];
			};
			_1be127112_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1ab49883c:;
	}
	_iter_end_1ab49883c:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1be127112_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1be127112_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1be1275da_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1be126ed0_assign(_1be126ce3_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1ab4a6b47:;
	}
	_iter_end_1ab4a6b47:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1ab4a8132:;
	}
	_iter_end_1ab4a8132:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1be12784e_trim((*_self_));
}



inline void _1be127112_shift(_1be126ce3_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1ab4a981a:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1ab4a9892:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1be127be5_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1ab4a9ebe:;
				}
				_iter_end_1ab4a9ebe:;;
				_1be127be5_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1ab4a9919:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1be127981_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1ab4ab003:;
				}
				_iter_end_1ab4ab003:;;
				_1be127981_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1ab4a96d8:;
	};
}



inline void _1be127244_round_down(_1be126ce3_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1be12784e_trim((*_self_));
}



inline void _1be127376_round_up(_1be126ce3_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1ab4ae842:;
	}
	_iter_end_1ab4ae842:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1be1274a8_round(_1be126ce3_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1be127d27_should_round_up((*_self_),_29124_nd)) {
		_1be127376_round_up(&(*_self_), _29124_nd);
	} else {
		_1be127244_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1be1275da_rounded_integer(_1be126ce3_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1ab4b2cc9:;
	}
	_iter_end_1ab4b2cc9:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1ab4b53e7:;
	}
	_iter_end_1ab4b53e7:;;
	if (_1be127d27_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1be126ce3_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be159e14_Const> static__1be1b2532_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1be159e14_Const>(_1be159e14_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1be159e14_Const> static__1be1b2664_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1be159e14_Const>(_1be159e14_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1be159e14_Const> static__1be1b2796_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1be159e14_Const>(_1be159e14_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1be159e14_Const> static__1be1b29c7_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1be159e14_Const>(_1be159e14_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1be159e14_Const> static__1be1b2c6e_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1be159e14_Const>(_1be159e14_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1be159e14_Const> static__1be1b2e6c_new_nil(void) {
	return jule::new_ptr<_1be159e14_Const>(_1be159e14_Const{._field_data=nullptr});
}



inline jule::I64 _1be1b3566_read_i64(_1be159e14_Const* _self_) {
	if ((!(_1be1b590e_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1be1b37ca_read_u64(_1be159e14_Const* _self_) {
	if ((!(_1be1b5b73_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1be1b3a3e_read_bool(_1be159e14_Const* _self_) {
	if ((!(_1be1b5dd7_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1be1b3ca3_read_str(_1be159e14_Const* _self_) {
	if ((!(_1be1b614b_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1be1b4017_read_f64(_1be159e14_Const* _self_) {
	if ((!(_1be1b63b0_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1be1b427b_as_i64(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab4e95c4:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab4e963a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab4e8eb9:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ab4e8e20:;
			{
				return 0LL;
			}
		}
		_match_end_1ab4e8dba:;
	};
}



inline jule::U64 _1be1b44e0_as_u64(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab4ea570:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab4eb10e:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab4eb175:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ab4e93e8:;
			{
				return 0LLU;
			}
		}
		_match_end_1ab4e9393:;
	};
}



inline jule::F64 _1be1b4754_as_f64(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab4ec0aa:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab4ecb49:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab4ecbb0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1ab4eb32e:;
			{
				return 0LL;
			}
		}
		_match_end_1ab4eb2c9:;
	};
}



inline void _1be1b49c9_set_i64(_1be159e14_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1be1b4c4e_set_u64(_1be159e14_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1be1b4ec4_set_bool(_1be159e14_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1be1b5249_set_str(_1be159e14_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1be1b54be_set_f64(_1be159e14_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1be1b569a_set_nil(_1be159e14_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1be1b590e_is_i64(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab5018ea:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab50181d:;
			{
				return false;
			}
		}
		_match_end_1ab5017b8:;
	};
}



inline jule::Bool _1be1b5b73_is_u64(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab5024bc:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab50219d:;
			{
				return false;
			}
		}
		_match_end_1ab501db2:;
	};
}



inline jule::Bool _1be1b5dd7_is_bool(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1ab502ee5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab502bc6:;
			{
				return false;
			}
		}
		_match_end_1ab5028b8:;
	};
}



inline jule::Bool _1be1b614b_is_str(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ab503a1d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab5036ee:;
			{
				return false;
			}
		}
		_match_end_1ab5033e1:;
	};
}



inline jule::Bool _1be1b63b0_is_f64(_1be159e14_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab504546:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab504227:;
			{
				return false;
			}
		}
		_match_end_1ab503e19:;
	};
}



inline jule::Bool _1be1b6624_is_nil(_1be159e14_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1be1b6932_are_same_types(_1be159e14_Const* _self_, _1be159e14_Const _21033_x) {
	{
		
		if ((_1be1b590e_is_i64(&(*_self_)) == _1be1b590e_is_i64(&_21033_x))) {
			_case_begin_1ab505dd8:;
			{
				return true;
			}
		}
		else if ((_1be1b5b73_is_u64(&(*_self_)) == _1be1b5b73_is_u64(&_21033_x))) {
			_case_begin_1ab505679:;
			{
				return true;
			}
		}
		else if ((_1be1b63b0_is_f64(&(*_self_)) == _1be1b63b0_is_f64(&_21033_x))) {
			_case_begin_1ab505701:;
			{
				return true;
			}
		}
		else if ((_1be1b5dd7_is_bool(&(*_self_)) == _1be1b5dd7_is_bool(&_21033_x))) {
			_case_begin_1ab505778:;
			{
				return true;
			}
		}
		else if ((_1be1b614b_is_str(&(*_self_)) == _1be1b614b_is_str(&_21033_x))) {
			_case_begin_1ab505800:;
			{
				return true;
			}
		}
		else if ((_1be1b6624_is_nil(&(*_self_)) == _1be1b6624_is_nil(&_21033_x))) {
			_case_begin_1ab505a97:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab505602:;
			{
				return false;
			}
		}
		_match_end_1ab505525:;
	};
}



inline jule::Bool _1be1b6c40_and(_1be159e14_Const* _self_, _1be159e14_Const _23522_x) {
	{
		
		if ((_1be1b5dd7_is_bool(&(*_self_)) && _1be1b5dd7_is_bool(&_23522_x))) {
			_case_begin_1ab50934d:;
			{
				return (_1be1b3a3e_read_bool(&(*_self_)) && _1be1b3a3e_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1ab508957:;
			{
				return false;
			}
		}
		_match_end_1ab50887a:;
	};
}



inline jule::Bool _1be1b704d_or(_1be159e14_Const* _self_, _1be159e14_Const _24621_x) {
	{
		
		if ((_1be1b5dd7_is_bool(&(*_self_)) && _1be1b5dd7_is_bool(&_24621_x))) {
			_case_begin_1ab50a76c:;
			{
				return (_1be1b3a3e_read_bool(&(*_self_)) || _1be1b3a3e_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1ab5096b1:;
			{
				return false;
			}
		}
		_match_end_1ab5095d4:;
	};
}



inline jule::Bool _1be1b735b_eq(_1be159e14_Const* _self_, _1be159e14_Const _25721_x) {
	{
		
		if (_1be1b6624_is_nil(&(*_self_))) {
			_case_begin_1ab50bbe1:;
			{
				return _1be1b6624_is_nil(&_25721_x);
			}
		}
		else if (_1be1b5dd7_is_bool(&(*_self_))) {
			_case_begin_1ab50b4c6:;
			{
				return (_1be1b5dd7_is_bool(&_25721_x) && (_1be1b3a3e_read_bool(&(*_self_)) == _1be1b3a3e_read_bool(&_25721_x)));
			}
		}
		else if (_1be1b614b_is_str(&(*_self_))) {
			_case_begin_1ab50b53c:;
			{
				return (_1be1b614b_is_str(&_25721_x) && (_1be1b3ca3_read_str(&(*_self_)) == _1be1b3ca3_read_str(&_25721_x)));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab50b5b4:;
			{
				return (_1be1b3566_read_i64(&(*_self_)) == _1be1b427b_as_i64(&_25721_x));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab50b63b:;
			{
				return (_1be1b37ca_read_u64(&(*_self_)) == _1be1b44e0_as_u64(&_25721_x));
			}
		}
		else if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab50b8c2:;
			{
				return (_1be1b4017_read_f64(&(*_self_)) == _1be1b4754_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1ab50ab13:;
			{
				return false;
			}
		}
		_match_end_1ab50aa36:;
	};
}



inline jule::Bool _1be1b7669_lt(_1be159e14_Const* _self_, _1be159e14_Const _28421_x) {
	{
		
		if (_1be1b614b_is_str(&(*_self_))) {
			_case_begin_1ab510e48:;
			{
				return (_1be1b614b_is_str(&_28421_x) && (_1be1b3ca3_read_str(&(*_self_)) < _1be1b3ca3_read_str(&_28421_x)));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab5107e9:;
			{
				return (_1be1b3566_read_i64(&(*_self_)) < _1be1b427b_as_i64(&_28421_x));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab510860:;
			{
				return (_1be1b37ca_read_u64(&(*_self_)) < _1be1b44e0_as_u64(&_28421_x));
			}
		}
		else if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab5108c6:;
			{
				return (_1be1b4017_read_f64(&(*_self_)) < _1be1b4754_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1ab50c021:;
			{
				return false;
			}
		}
		_match_end_1ab510255:;
	};
}



inline jule::Bool _1be1b7977_lt_eq(_1be159e14_Const* _self_, _1be159e14_Const _30724_x) {
	{
		
		if (_1be1b614b_is_str(&(*_self_))) {
			_case_begin_1ab513ed4:;
			{
				return (_1be1b614b_is_str(&_30724_x) && (_1be1b3ca3_read_str(&(*_self_)) <= _1be1b3ca3_read_str(&_30724_x)));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab513885:;
			{
				return (_1be1b3566_read_i64(&(*_self_)) <= _1be1b427b_as_i64(&_30724_x));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab5138eb:;
			{
				return (_1be1b37ca_read_u64(&(*_self_)) <= _1be1b44e0_as_u64(&_30724_x));
			}
		}
		else if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab513962:;
			{
				return (_1be1b4017_read_f64(&(*_self_)) <= _1be1b4754_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1ab511157:;
			{
				return false;
			}
		}
		_match_end_1ab51309e:;
	};
}



inline jule::Bool _1be1b7c85_gt(_1be159e14_Const* _self_, _1be159e14_Const _33021_x) {
	{
		
		if (_1be1b614b_is_str(&(*_self_))) {
			_case_begin_1ab517070:;
			{
				return (_1be1b614b_is_str(&_33021_x) && (_1be1b3ca3_read_str(&(*_self_)) > _1be1b3ca3_read_str(&_33021_x)));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab516921:;
			{
				return (_1be1b3566_read_i64(&(*_self_)) > _1be1b427b_as_i64(&_33021_x));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab516987:;
			{
				return (_1be1b37ca_read_u64(&(*_self_)) > _1be1b44e0_as_u64(&_33021_x));
			}
		}
		else if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab5169ed:;
			{
				return (_1be1b4017_read_f64(&(*_self_)) > _1be1b4754_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1ab5141e3:;
			{
				return false;
			}
		}
		_match_end_1ab51613a:;
	};
}



inline jule::Bool _1be1b8093_gt_eq(_1be159e14_Const* _self_, _1be159e14_Const _35324_x) {
	{
		
		if (_1be1b614b_is_str(&(*_self_))) {
			_case_begin_1ab51a10b:;
			{
				return (_1be1b614b_is_str(&_35324_x) && (_1be1b3ca3_read_str(&(*_self_)) >= _1be1b3ca3_read_str(&_35324_x)));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab5199ac:;
			{
				return (_1be1b3566_read_i64(&(*_self_)) >= _1be1b427b_as_i64(&_35324_x));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab519a23:;
			{
				return (_1be1b37ca_read_u64(&(*_self_)) >= _1be1b44e0_as_u64(&_35324_x));
			}
		}
		else if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab519a89:;
			{
				return (_1be1b4017_read_f64(&(*_self_)) >= _1be1b4754_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1ab51727e:;
			{
				return false;
			}
		}
		_match_end_1ab5191c6:;
	};
}



inline jule::Bool _1be1b83a1_add(_1be159e14_Const* _self_, _1be159e14_Const _37426_x) {
	{
		
		if (_1be1b614b_is_str(&(*_self_))) {
			_case_begin_1ab51d197:;
			{
				if ((!(_1be1b614b_is_str(&_37426_x)))) {
					return false;
				};
				_1be1b5249_set_str(&(*_self_), (_1be1b3ca3_read_str(&(*_self_)) + _1be1b3ca3_read_str(&_37426_x)));
			}
		}
		else if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab51ca48:;
			{
				_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4017_read_f64(&(*_self_)) + _1be1b4754_as_f64(&_37426_x))));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab51caae:;
			{
				if (_1be1b63b0_is_f64(&_37426_x)) {
					_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4754_as_f64(&(*_self_)) + _1be1b4017_read_f64(&_37426_x))));
				} else {
					_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_1be1b3566_read_i64(&(*_self_)) + _1be1b427b_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab51cb25:;
			{
				if (_1be1b63b0_is_f64(&_37426_x)) {
					_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4754_as_f64(&(*_self_)) + _1be1b4017_read_f64(&_37426_x))));
				} else {
					_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>((_1be1b37ca_read_u64(&(*_self_)) + _1be1b44e0_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1ab51a31a:;
			{
				return false;
			}
		}
		_match_end_1ab51c262:;
	};
	return true;
}



inline jule::Bool _1be1b86ae_sub(_1be159e14_Const* _self_, _1be159e14_Const _40326_x) {
	{
		
		if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab523c4c:;
			{
				_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4017_read_f64(&(*_self_)) - _1be1b4754_as_f64(&_40326_x))));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab523554:;
			{
				if (_1be1b63b0_is_f64(&_40326_x)) {
					_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4754_as_f64(&(*_self_)) - _1be1b4017_read_f64(&_40326_x))));
				} else {
					_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_1be1b3566_read_i64(&(*_self_)) - _1be1b427b_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab5235ba:;
			{
				if (_1be1b63b0_is_f64(&_40326_x)) {
					_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4754_as_f64(&(*_self_)) - _1be1b4017_read_f64(&_40326_x))));
				} else {
					_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>((_1be1b37ca_read_u64(&(*_self_)) - _1be1b44e0_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1ab5234dd:;
			{
				return false;
			}
		}
		_match_end_1ab522b19:;
	};
	return true;
}



inline jule::Bool _1be1b89bc_mul(_1be159e14_Const* _self_, _1be159e14_Const _42726_x) {
	{
		
		if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab5286e1:;
			{
				_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4017_read_f64(&(*_self_)) * _1be1b4754_as_f64(&_42726_x))));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab527ee8:;
			{
				if (_1be1b63b0_is_f64(&_42726_x)) {
					_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4754_as_f64(&(*_self_)) * _1be1b4017_read_f64(&_42726_x))));
				} else {
					_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_1be1b3566_read_i64(&(*_self_)) * _1be1b427b_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab52805e:;
			{
				if (_1be1b63b0_is_f64(&_42726_x)) {
					_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>((_1be1b4754_as_f64(&(*_self_)) * _1be1b4017_read_f64(&_42726_x))));
				} else {
					_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>((_1be1b37ca_read_u64(&(*_self_)) * _1be1b44e0_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1ab527e82:;
			{
				return false;
			}
		}
		_match_end_1ab527404:;
	};
	return true;
}



inline jule::Bool _1be1b8cca_div(_1be159e14_Const* _self_, _1be159e14_Const _45526_x) {
	{
		
		if (_1be1b63b0_is_f64(&(*_self_))) {
			_case_begin_1ab52d185:;
			{
				jule::F64 _45817_l = _1be1b4754_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1be1b4017_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab52c98c:;
			{
				jule::F64 _46417_l = _1be1b4754_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1be1b4754_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab52ca03:;
			{
				jule::F64 _47017_l = _1be1b4754_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1be1b54be_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1be1b4754_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1ab52c926:;
			{
				return false;
			}
		}
		_match_end_1ab52bd98:;
	};
	return true;
}



inline jule::Bool _1be1b90d8_mod(_1be159e14_Const* _self_, _1be159e14_Const _48426_x) {
	{
		
		if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab532aa2:;
			{
				jule::I64 _48717_l = _1be1b427b_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1be1b3566_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab532376:;
			{
				jule::U64 _49317_l = _1be1b44e0_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1be1b37ca_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1ab532310:;
			{
				return false;
			}
		}
		_match_end_1ab532233:;
	};
	return true;
}



inline jule::Bool _1be1b93e6_bitwise_and(_1be159e14_Const* _self_, _1be159e14_Const _50634_x) {
	{
		
		if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab535ed4:;
			{
				_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_1be1b3566_read_i64(&(*_self_)) & _1be1b427b_as_i64(&_50634_x))));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab5357a8:;
			{
				_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>((_1be1b37ca_read_u64(&(*_self_)) & _1be1b44e0_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1ab535742:;
			{
				return false;
			}
		}
		_match_end_1ab535665:;
	};
	return true;
}



inline jule::Bool _1be1b9704_bitwise_or(_1be159e14_Const* _self_, _1be159e14_Const _52033_x) {
	{
		
		if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab53824a:;
			{
				_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_1be1b3566_read_i64(&(*_self_)) | _1be1b427b_as_i64(&_52033_x))));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab537a1e:;
			{
				_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>((_1be1b37ca_read_u64(&(*_self_)) | _1be1b44e0_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1ab5379a8:;
			{
				return false;
			}
		}
		_match_end_1ab5378cb:;
	};
	return true;
}



inline jule::Bool _1be1b9a12_xor(_1be159e14_Const* _self_, _1be159e14_Const _53426_x) {
	{
		
		if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab53a4b1:;
			{
				_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_1be1b3566_read_i64(&(*_self_)) ^ _1be1b427b_as_i64(&_53426_x))));
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab539c85:;
			{
				_1be1b4c4e_set_u64(&(*_self_), static_cast<jule::U64>((_1be1b37ca_read_u64(&(*_self_)) ^ _1be1b44e0_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1ab539c1e:;
			{
				return false;
			}
		}
		_match_end_1ab539b42:;
	};
	return true;
}



inline jule::Bool _1be1b9d20_lshift(_1be159e14_Const* _self_, _1be159e14_Const _54829_x) {
	{
		
		if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab53c727:;
			{
				jule::I64 _55117_l = _1be1b427b_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1be1b44e0_as_u64(&_54829_x);;
					_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1be1ba491_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab53beeb:;
			{
				_1be1ba491_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1ab53be85:;
			{
				return false;
			}
		}
		_match_end_1ab53bda8:;
	};
	return true;
}



inline jule::Bool _1be1ba12d_rshift(_1be159e14_Const* _self_, _1be159e14_Const _56829_x) {
	{
		
		if (_1be1b590e_is_i64(&(*_self_))) {
			_case_begin_1ab540483:;
			{
				jule::I64 _57117_l = _1be1b427b_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1be1b44e0_as_u64(&_56829_x);;
					_1be1b49c9_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1be1ba78d_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1be1b5b73_is_u64(&(*_self_))) {
			_case_begin_1ab53ec57:;
			{
				_1be1ba78d_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1ab53ebe1:;
			{
				return false;
			}
		}
		_match_end_1ab53eb14:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1be159e14_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d708808d_FieldIns> _1d7062056_instance(jule::Ptr<_1d7080926_Field> _self_) {
	return jule::new_ptr<_1d708808d_FieldIns>(_1d708808d_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1d7080926_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7082351_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d70ab9c9_StructIns> _1d706814a_instance(jule::Ptr<_1d7073276_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1d70ab9c9_StructIns> _9917_ins = jule::new_ptr<_1d70ab9c9_StructIns>(_1d70ab9c9_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1d708808d_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1bc9cb6dd_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab7e74e8:;
		if (it != expr.end()) {
			jule::Ptr<_1d7080926_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1d7062056_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1be3d5964_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1ab7e74e8:;
			++it;
			goto _iter_begin_1ab7e74e8;
		}
		_iter_end_1ab7e74e8:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1bc9c9873_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1ab7ea793:;
			if (it != expr.end()) {
				jule::Ptr<_1bc9c9873_Fn> _11625_f = *it;
				{
					jule::Ptr<_1bc9c9873_Fn> _11725_fins = jule::new_ptr<_1bc9c9873_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1ab7ea793:;
				++it;
				goto _iter_begin_1ab7ea793;
			}
			_iter_end_1ab7ea793:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1d70ab9c9_StructIns> _1d706c3b3_append_instance(_1d7073276_Struct* _self_, jule::Ptr<_1d70ab9c9_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab7ecb91:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _13421_ains = *it;
			{
				if (_1d7082609_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1ab7ecb91:;
			++it;
			goto _iter_begin_1ab7ecb91;
		}
		_iter_end_1ab7ecb91:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1bc9c9873_Fn> _1d706d11c_find_method(_1d7073276_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab7ee2be:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1ab7ee2be:;
			++it;
			goto _iter_begin_1ab7ee2be;
		}
		_iter_end_1ab7ee2be:;
	};
	return nullptr;
}



inline jule::Ptr<_1be36365b_Var> _1d7070372_find_static(_1d7073276_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1ab800523:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1ab800523:;
			++it;
			goto _iter_begin_1ab800523;
		}
		_iter_end_1ab800523:;
	};
	return nullptr;
}



inline jule::Ptr<_1d7080926_Field> _1d7071384_find_field(_1d7073276_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab8014ad:;
		if (it != expr.end()) {
			jule::Ptr<_1d7080926_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1ab8014ad:;
			++it;
			goto _iter_begin_1ab8014ad;
		}
		_iter_end_1ab8014ad:;
	};
	return nullptr;
}



inline jule::Bool _1d70707c3_is_implements(_1d7073276_Struct* _self_, jule::Ptr<_1bd929d66_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1ab801986:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1ab801986:;
			++it;
			goto _iter_begin_1ab801986;
		}
		_iter_end_1ab801986:;
	};
	return false;
}



inline jule::Bool _1d7072aa0_is_derives(_1d7073276_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ab802998:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1ab802998:;
			++it;
			goto _iter_begin_1ab802998;
		}
		_iter_end_1ab802998:;
	};
	return false;
}



inline jule::Bool _1d7071eab_is_uses(_1d7073276_Struct* _self_, jule::Ptr<_1d7073276_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1ab80524d:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1ab805a01:;
				}
				_iter_end_1ab805a01:;;
			}
			_iter_next_1ab80524d:;
			++it;
			goto _iter_begin_1ab80524d;
		}
		_iter_end_1ab80524d:;
	};
	return false;
}



inline jule::Bool _1d70736c7_has_ref_accessible(_1d7073276_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab805bee:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1d7061462_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1ab805bee:;
			++it;
			goto _iter_begin_1ab805bee;
		}
		_iter_end_1ab805bee:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7073276_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d708808d_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70abbb6_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70abda3_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c45c6_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c47b3_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c49a0_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c4b8c_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c4d79_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5066_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5253_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5440_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c562c_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5819_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5a06_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5be3_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c5dd0_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c62ed_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c64da_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c66c7_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c68b4_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c6aa1_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c6c8d_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c6e7a_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c7167_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c7354_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c7541_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c772d_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c791a_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c7b07_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c7ce4_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c7ed1_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c81bd_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c60bc_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c882d_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c8a1a_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c8c07_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c8de4_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c90d1_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c9499_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc9c9a60_ParamIns> _1d7086de4_instance(jule::Ptr<_1bc9c9686_Param> _self_) {
	return jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1d708990d_is_self(_1bc9c9686_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1d7061462_is_ref(_1bc9c9686_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c9686_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d70884de_is_void(_1bc9c9873_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1d70615d8_is_method(_1bc9c9873_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1d7063475_is_entry_point(_1bc9c9873_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1d706926c_is_init(_1bc9c9873_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1d706a8cd_is_anon(_1bc9c9873_Fn* _self_) {
	return _20201ee1c_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1d7075ba2_any_var(_1bc9c9873_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1d707cbba_instance_force(jule::Ptr<_1bc9c9873_Fn> _self_) {
	jule::Ptr<_1bc9c9c4c_FnIns> _10017_ins = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1be1ca25e_Scope>(), ._field_refers=static__1bc9cb6dd_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab81920c:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9686_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1d7086de4_instance(_10721_p));;
			}
			_iter_next_1ab81920c:;
			++it;
			goto _iter_begin_1ab81920c;
		}
		_iter_end_1ab81920c:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1d707ec77_instance(jule::Ptr<_1bc9c9873_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1d707cbba_instance_force(_self_);
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1d708c768_append_instance(_1bc9c9873_Fn* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab81d6d9:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9c4c_FnIns> _14421_ains = *it;
			{
				if (_1bc9c9e39_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1ab81d6d9:;
			++it;
			goto _iter_begin_1ab81d6d9;
		}
		_iter_end_1ab81d6d9:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c9873_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d707d935_to_str(_1bc9c9a60_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1d708990d_is_self((*_self_)._field_decl.ptr())) {
		if (_1d7061462_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1be3d4963_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c9a60_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d70782c0_to_str(_1bc9c9c4c_FnIns* _self_) {
	;
	return _1bc9ca214_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1d7067622_equals(jule::Ptr<_1bc9c9c4c_FnIns> _self_, jule::Ptr<_1be3d45ab_TypeKind> _21726_other) {
	jule::Ptr<_1bc9c9c4c_FnIns> _21813_f = _1be3d7867_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1d70884de_is_void(_self_.get()._field_decl.ptr()) != _1d70884de_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_1be3d4c71_equals(_self_.get()._field_generics[_23917_i], _21813_f.get()._field_generics[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1ab82c4b7:;
	}
	_iter_end_1ab82c4b7:;;
	jule::Fn<jule::Bool(jule::Ptr<_1bc9c9a60_ParamIns>,jule::Ptr<_1bc9c9a60_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_1bc9c9a60_ParamIns>,jule::Ptr<_1bc9c9a60_ParamIns>)>([=](jule::Ptr<_1bc9c9a60_ParamIns> _24631_p1, jule::Ptr<_1bc9c9a60_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1d708990d_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_1d708990d_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1d7061462_is_ref(_24631_p1.get()._field_decl.ptr()) != _1d7061462_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1be3d4c71_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1ab8330a0:;
	}
	_iter_end_1ab8330a0:;;
	if ((!(_1d70884de_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1be3d4c71_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _1d7078bd8_types(_1bc9c9c4c_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1ab8352a0:;
			{
				return nullptr;
			}
		}
		else if ((_1be3d8318_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1ab835316:;
			{
				return jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1ab835239:;
			{
				return _1be3d8318_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1ab83515c:;
	};
}



inline jule::Bool _1d707b559_is_builtin(_1bc9c9c4c_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1d70812b7_is_anon(_1bc9c9c4c_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1d706a8cd_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1bc9c9e39_same(_1bc9c9c4c_FnIns* _self_, jule::Ptr<_1bc9c9c4c_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab838bbb:;
		if (it != expr.end()) {
			jule::I64 _32813_i = it - expr.begin();
			jule::Ptr<_1be3d45ab_TypeKind> &_32816_g = *it;
			{
				if ((!(_1be3d4c71_equals(_32816_g, _32323_f.get()._field_generics[_32813_i])))) {
					return false;
				};
			}
			_iter_next_1ab838bbb:;
			++it;
			_32813_i++;
			goto _iter_begin_1ab838bbb;
		}
		_iter_end_1ab838bbb:;
	};
	return true;
}



inline jule::Str _1bc9ca214_get_kind_str(_1bc9c9c4c_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab83c395:;
			if (it != expr.end()) {
				jule::I64 _35417_i = it - expr.begin();
				jule::Ptr<_1be3d45ab_TypeKind> &_35420_t = *it;
				{
					_34017_s+=_1be3d4963_to_str(_35420_t.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1ab83c395:;
				++it;
				_35417_i++;
				goto _iter_begin_1ab83c395;
			}
			_iter_end_1ab83c395:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab83e30e:;
			if (it != expr.end()) {
				jule::I64 _36317_i = it - expr.begin();
				jule::Ptr<_1d709c536_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1ab83e30e:;
				++it;
				_36317_i++;
				goto _iter_begin_1ab83e30e;
			}
			_iter_end_1ab83e30e:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I64 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1ab841a09:;
			if (it != expr.end()) {
				jule::Ptr<_1bc9c9a60_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_1d707d935_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_1ab841a09:;
				++it;
				goto _iter_begin_1ab841a09;
			}
			_iter_end_1ab841a09:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_1d70884de_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_1be3d4963_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9c9c4c_FnIns _Src) {
	_Stream << _1d70782c0_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1bc9cb402_ReferenceStack> static__1bc9cb6dd_new(void) {
	return jule::new_ptr<_1bc9cb402_ReferenceStack>(_1bc9cb402_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1bc9cba73_len(_1bc9cb402_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1bc9cbd81_at(_1bc9cb402_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1bc9cc106_push(_1bc9cb402_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1abe33ccc_exist(_1bc9cb402_ReferenceStack* _self_, jule::Ptr<_1bc9c9c4c_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1abe3500e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1abe3500e:;
			++it;
			goto _iter_begin_1abe3500e;
		}
		_iter_end_1abe3500e:;
	};
	return false;
}

inline jule::Bool _1abe49bd3_exist(_1bc9cb402_ReferenceStack* _self_, jule::Ptr<_1be36365b_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1abe4adc1:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1abe4adc1:;
			++it;
			goto _iter_begin_1abe4adc1;
		}
		_iter_end_1abe4adc1:;
	};
	return false;
}

inline jule::Bool _1abed48b6_exist(_1bc9cb402_ReferenceStack* _self_, jule::Ptr<_1d70ab9c9_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1abed5ae8:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1abed5ae8:;
			++it;
			goto _iter_begin_1abed5ae8;
		}
		_iter_end_1abed5ae8:;
	};
	return false;
}

inline jule::Bool _1a9647911_exist(_1bc9cb402_ReferenceStack* _self_, jule::Ptr<_1bd929d66_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a9648aee:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1a9648aee:;
			++it;
			goto _iter_begin_1a9648aee;
		}
		_iter_end_1a9648aee:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9cb402_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9cc7bb_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bc9d1c65_SymbolBuilder> _1bc9d221b_get_root(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_) {
	jule::Ptr<_1bc9d1c65_SymbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1ab85ae96:;
	}
	_iter_end_1ab85ae96:;;
	return _31617_root;
}



inline void _1bc9d25d4_push_err(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_20201c3d1_Token>& _32328_token, jule::Str _32343_fmt, jule::Slice<jule::Any> _32356_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1be3468e7_compiler_err(_32328_token,true,_32343_fmt,jule::Any(_32356_args)));;
}



inline void _1bc9d299c_push_err_text(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_20201c3d1_Token>& _32733_token, jule::Str _32748_fmt, jule::Slice<jule::Any> _32761_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1be3468e7_compiler_err(_32733_token,false,_32748_fmt,jule::Any(_32761_args)));;
}



inline void _1bc9d2cbb_push_suggestion(_1bc9d1c65_SymbolBuilder* _self_, jule::Str _33234_fmt, jule::Slice<jule::Any> _33247_args) {
	{
		_1be347d7c_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33234_fmt,jule::Any(_33247_args));
	};
}



inline jule::Bool _1bc9d3195_check_cpp_use_decl_path(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1d70a7992_UseDecl>& _33643_decl, jule::Str _33659_path) {
	jule::Bool _33672_ok = jule::Bool();
	jule::Str _33713_ext = _200caec13_ext(_33659_path);;
	if (((!(_201bd4593_is_valid_header_ext(_33713_ext))) && (!(_201bd47d5_is_valid_cpp_ext(_33713_ext))))) {
		_1bc9d25d4_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33672_ok = false;
		return _33672_ok;
	};
	jule::Ptr<_200ad4c14_Status> _34413_info = ({
		auto except = static__200ccda01_of(_33659_path);
		(except.ok()) ? (except.result) : ({{
			_1bc9d25d4_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
			_33672_ok = false;
			return _33672_ok;
		} jule::Ptr<_200ad4c14_Status>();});
	});;
	if (_1eed19972_is_dir(_34413_info.ptr())) {
		_1bc9d25d4_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
		_33672_ok = false;
		return _33672_ok;
	};
	_33672_ok = true;
	return _33672_ok;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d34a3_build_cpp_header_import(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1d70a7992_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl.get()._field_link_path;;
	if ((!(_201bd4461_is_std_header_path(_35647_decl.get()._field_link_path)))) {
		_35717_path=_200cabda8_join(jule::Slice<jule::Str>::make({_202023162_dir(_35647_decl.get()._field_token.get()._field_file.ptr()),_35647_decl.get()._field_link_path}));
		jule::Bool _36121_ok = _1bc9d3195_check_cpp_use_decl_path(&(*_self_), _35647_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _200cb1c59_abs(_35717_path);
		if ((!(_36121_ok))) {
			_1bc9d25d4_push_err(&(*_self_), _35647_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35647_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1be272d40_ImportInfo>(_1be272d40_ImportInfo{._field_token=_35647_decl.get()._field_token, ._field_path=_35717_path, ._field_link_path=_35647_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d37c2_build_std_import(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1d70a7992_UseDecl>& _38440_decl) {
	jule::Str _38517_path = _38440_decl.get()._field_link_path.slice(5LL);;
	_38517_path=_201b865bc_replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_200cabda8_join(jule::Slice<jule::Str>::make({_201c13726_PATH_STDLIB,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _200cb1c59_abs(_38517_path);
	if ((!(_38820_ok))) {
		_1bc9d25d4_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_200ad4c14_Status> _39513_info = ({
		auto except = static__200ccda01_of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1bc9d25d4_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_200ad4c14_Status>();});
	});;
	if ((!(_1eed19972_is_dir(_39513_info.ptr())))) {
		_1bc9d25d4_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_201adc754_find_last(_38440_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38440_decl.get()._field_link_path.slice(_40513_i);;
	return jule::new_ptr<_1be272d40_ImportInfo>(_1be272d40_ImportInfo{._field_token=_38440_decl.get()._field_token, ._field_path=_38517_path, ._field_link_path=_38440_decl.get()._field_link_path, ._field_ident=_40613_ident, ._field_alias=_38440_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_38440_decl.get()._field_full, ._field_package=jule::new_ptr<_1be275c99_Package>(_1be275c99_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d3ad0_build_ident_import(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1d70a7992_UseDecl>& _42343_decl) {
	jule::Str _42413_mod_path = _1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e6aa_get_mod_path(_self_.get()._field_importer);;
	if ((_42413_mod_path.len() == 0LL)) {
		_1bc9d25d4_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1bc9d2cbb_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42343_decl.get()._field_link_path;;
	_43117_path=_201b865bc_replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_200cabda8_join(jule::Slice<jule::Str>::make({_42413_mod_path,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _200cb1c59_abs(_43117_path);
	if ((!(_43520_ok))) {
		_1bc9d25d4_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_200ad4c14_Status> _44213_info = ({
		auto except = static__200ccda01_of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1bc9d25d4_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_200ad4c14_Status>();});
	});;
	if ((!(_1eed19972_is_dir(_44213_info.ptr())))) {
		_1bc9d25d4_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_201adc754_find_last(_42343_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42343_decl.get()._field_link_path.slice(_45213_i);;
	return jule::new_ptr<_1be272d40_ImportInfo>(_1be272d40_ImportInfo{._field_token=_42343_decl.get()._field_token, ._field_path=_43117_path, ._field_link_path=_42343_decl.get()._field_link_path, ._field_ident=_45313_ident, ._field_alias=_42343_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_42343_decl.get()._field_full, ._field_package=jule::new_ptr<_1be275c99_Package>(_1be275c99_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d3ddd_build_import(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1d70a7992_UseDecl>& _47037_decl) {
	{
		
		if (_47037_decl.get()._field_cpp_linked) {
			_case_begin_1ab87739c:;
			{
				return _1bc9d34a3_build_cpp_header_import(_self_.ptr(), _47037_decl);
			}
		}
		else if (_47037_decl.get()._field_std) {
			_case_begin_1ab876863:;
			{
				return _1bc9d37c2_build_std_import(_self_.ptr(), _47037_decl);
			}
		}
		else {
			_case_begin_1ab8767ec:;
			{
				return _1bc9d3ad0_build_ident_import(_self_, _47037_decl);
			}
		}
		_match_end_1ab876720:;
	};
}



inline jule::Bool _1bc9d421d_check_duplicate_use_decl(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1be272d40_ImportInfo>& _48144_pkg) {
	jule::Bool _48164_ok = jule::Bool();
	jule::Ptr<_1be272d40_ImportInfo> _48313_lpkg = _1be3a4b64_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>([=](jule::Ptr<_1be272d40_ImportInfo> _48349_spkg) mutable -> jule::Bool {
		return (_48144_pkg.get()._field_path == _48349_spkg.get()._field_path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48164_ok = true;
		return _48164_ok;
	};
	_1bc9d25d4_push_err(&(*_self_), _48144_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48144_pkg.get()._field_link_path)}));
	_1bc9d2cbb_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48164_ok = false;
	return _48164_ok;
}



inline void _1bc9d454d_impl_import_selections(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1be272d40_ImportInfo>& _49546_imp, jule::Ptr<_1d70a7992_UseDecl>& _49569_decl) {
	_49546_imp.get()._field_selected=_49569_decl.get()._field_selected;
	{
		auto &expr = _49546_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1ab87b2b3:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> _49716_item = *it;
			{
				{
					auto &expr = _49546_imp.get()._field_selected;
					auto it = expr.begin();
					_iter_begin_1ab87bd41:;
					if (it != expr.end()) {
						jule::Ptr<_20201c3d1_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1ab87bd41;
							} else if ((_49716_item.get()._field_kind == _49820_citem.get()._field_kind)) {
								_1bc9d25d4_push_err(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_kind)}));
								_1bc9d2cbb_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1ab87bd41;
							};
						}
						_iter_next_1ab87bd41:;
						++it;
						goto _iter_begin_1ab87bd41;
					}
					_iter_end_1ab87bd41:;
				};
			}
			_iter_next_1ab87b2b3:;
			++it;
			goto _iter_begin_1ab87b2b3;
		}
		_iter_end_1ab87b2b3:;
	};
}



inline jule::Str _1bc9d485b_get_as_link_path(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Str _51040_path) {
	if (_201adbc1a_has_prefix(_51040_path,_201c13726_PATH_STDLIB)) {
		(_51040_path).mut_slice(_201c13726_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _201b865bc_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _200cb1c59_abs(_1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e6aa_get_mod_path(_self_.get()._field_importer));
	(_51040_path).mut_slice(_51614_root.len());;
	if ((_51040_path[0LL] == 92LLU)) {
		(_51040_path).mut_slice(1LL);;
	};
	return _201b865bc_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1bc9d4c24_push_cycle_error(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1bc9d1c65_SymbolBuilder>& _52437_sb, jule::Str _52457_path, jule::Str& _52473_message) {
	;
	jule::Str _52713_refers_to = _201be1292_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1bc9d485b_get_as_link_path(_self_, _202023162_dir(_52437_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1bc9d485b_get_as_link_path(_self_, _52457_path))}));;
	(_52473_message).buffer.insert(0, (((_200cecaa8_repeat(jule::Str(" ", 1),4LL) + _52713_refers_to) + jule::Str("\n", 1))));;
}



inline void _1bc9d50dc_push_cross_cycle_error(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1bc9d1c65_SymbolBuilder>& _53443_target, jule::Ptr<_1be272d40_ImportInfo>& _53468_imp, jule::Ptr<_20201c3d1_Token>& _53487_error_token) {
	jule::Str _53517_message = jule::Str();;
	_1bc9d4c24_push_cycle_error(_self_, _self_,_53468_imp.get()._field_path,_53517_message);
	jule::Ptr<_1bc9d1c65_SymbolBuilder> _53917_owner = _self_.get()._field_owner;;
	jule::Ptr<_1bc9d1c65_SymbolBuilder> _54017_old = _self_;;
	while ((_53917_owner.get()._field_owner != nullptr)) {
		{
			_1bc9d4c24_push_cycle_error(_self_, _54017_old.get()._field_owner,_202023162_dir(_54017_old.get()._field_table.get()._field_file.ptr()),_53517_message);
			if ((_53917_owner.get()._field_owner == _53443_target)) {
				_1bc9d4c24_push_cycle_error(_self_, _53443_target,_202023162_dir(_53917_owner.get()._field_table.get()._field_file.ptr()),_53517_message);
				goto _iter_end_1ab88581c;
			};
			_54017_old=_53917_owner;
			_53917_owner=_53917_owner.get()._field_owner;
		}
	_iter_next_1ab88581c:;
	}
	_iter_end_1ab88581c:;;
	_1bc9d25d4_push_err(_self_.ptr(), _53487_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53517_message)}));
}



inline jule::Bool _1bc9d5494_check_import_cycles(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1be272d40_ImportInfo> _55739_imp, jule::Ptr<_1d70a7992_UseDecl>& _55758_decl) {
	if ((_55739_imp.get()._field_path == _202023162_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1bc9d25d4_push_err(_self_.ptr(), _55758_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1bc9d485b_get_as_link_path(_self_, _55739_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_202023162_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1bc9d50dc_push_cross_cycle_error(_self_, _self_.get()._field_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1bc9d1c65_SymbolBuilder> _57217_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_202023162_dir(_57217_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1bc9d50dc_push_cross_cycle_error(_self_, _57217_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	if ((_57217_owner.get()._field_owner != nullptr)) {
		_57217_owner=_57217_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1bc9d587e_check_package_accessibility(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1d70a7992_UseDecl>& _59347_decl, jule::Str& _59364_mod, jule::Str& _59375_path) {
	if (((_1be270546_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1be26e6aa_get_mod_path((*_self_)._field_importer) != _59364_mod) && _201b85eb2_contains(_59375_path,jule::Str("internal", 8)))) {
		_1bc9d25d4_push_err(&(*_self_), _59347_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bc9d5c47_import_package(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1be272d40_ImportInfo>& _59939_imp, jule::Ptr<_1d70a7992_UseDecl>& _59962_decl) {
	jule::Bool _59980_ok = jule::Bool();
	if (_59939_imp.get()._field_cpp_linked) {
		_59980_ok = true;
		return _59980_ok;
	};
	jule::Ptr<_1be272d40_ImportInfo> _60417_port = _1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26ecc6_get_import(_self_.get()._field_importer, _59939_imp.get()._field_path);;
	if ((_60417_port != nullptr)) {
		_59939_imp.get()._field_package=_60417_port.get()._field_package;
		_59939_imp.get()._field_duplicate=true;
		jule::Str _60917_old_mod = _1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e6aa_get_mod_path(_self_.get()._field_importer);;
		_1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e468_set_mod_path(_self_.get()._field_importer, _1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e9b8_mod_by_id(_self_.get()._field_importer, _59939_imp.get()._field_mod_id));
		_1bc9d587e_check_package_accessibility(_self_.ptr(), _59962_decl,_60917_old_mod,_60417_port.get()._field_path);
		_1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e468_set_mod_path(_self_.get()._field_importer, _60917_old_mod);
	} else {
		if ((!(_1bc9d5494_check_import_cycles(_self_, _59939_imp,_59962_decl)))) {
			_59980_ok = false;
			return _59980_ok;
		};
		jule::Str _61817_old_mod = _1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e6aa_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e468_set_mod_path(_self_.get()._field_importer, _61817_old_mod);
		});;
		if (_59939_imp.get()._field_std) {
			_1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be26e468_set_mod_path(_self_.get()._field_importer, _201c13726_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1d705abdc_Ast>> _62322_asts;;
		jule::Slice<_201be0d52_Log> _62332_errors;;
		std::tie(_62322_asts,_62332_errors) = _1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be27017d_import_package(_self_.get()._field_importer, _59939_imp.get()._field_path,(!(_59939_imp.get()._field_std)));
		if ((_62332_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
			_59980_ok = false;
			return _59980_ok;
		};
		_1bc9d587e_check_package_accessibility(_self_.ptr(), _59962_decl,_61817_old_mod,_59939_imp.get()._field_path);
		{
			auto &expr = _62322_asts;
			auto it = expr.begin();
			_iter_begin_1ab896476:;
			if (it != expr.end()) {
				jule::Ptr<_1d705abdc_Ast> _63125_ast = *it;
				{
					jule::Ptr<_1be3a4339_SymbolTable> _63225_table = nullptr;;
					std::tie(_63225_table,_62332_errors) = _1be40093a_build_symbols(_63125_ast,_self_.get()._field_importer,_self_);
					if ((_62332_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
						_1bc9d299c_push_err_text(_self_.ptr(), _59939_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59939_imp.get()._field_link_path)}));
						_59980_ok = false;
						return _59980_ok;
					};
					_59939_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_59939_imp.get()._field_package.get()._field_files,1);_59939_imp.get()._field_package.get()._field_files.__push(_63225_table);;
				}
				_iter_next_1ab896476:;
				++it;
				goto _iter_begin_1ab896476;
			}
			_iter_end_1ab896476:;
		};
	};
	_1bc9d454d_impl_import_selections(_self_.ptr(), _59939_imp,_59962_decl);
	_59980_ok = true;
	return _59980_ok;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1bc9d6055_import_use_decl(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_, jule::Ptr<_1d70a7992_UseDecl>& _65140_decl) {
	jule::Ptr<_1be272d40_ImportInfo> _65217_imp = _1bc9d3ddd_build_import(_self_, _65140_decl);;
	if ((_65217_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65817_ok = _1bc9d421d_check_duplicate_use_decl(_self_.ptr(), _65217_imp);;
	if ((!(_65817_ok))) {
		return nullptr;
	};
	_65817_ok=_1bc9d5c47_import_package(_self_, _65217_imp,_65140_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_65217_imp);;
	if (_65817_ok) {
		_1be270546_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1be270403_imported(_self_.get()._field_importer, _65217_imp);
		return _65217_imp;
	};
	return nullptr;
}



inline void _1bc9d6231_import_use_decls(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1ab89c9dd:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a7992_UseDecl> _67321_decl = *it;
			{
				_1bc9d6055_import_use_decl(_self_, _67321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1ab89c9dd;
				};
			}
			_iter_next_1ab89c9dd:;
			++it;
			goto _iter_begin_1ab89c9dd;
		}
		_iter_end_1ab89c9dd:;
	};
}



inline void _1bc9d64a6_append_node(_1bc9d1c65_SymbolBuilder* _self_, _1d705b968_Node& _68335_node) {
	{
		auto &_match_expr{ _68335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d70ab215_Impl>>()) {
			_case_begin_1ab89e5d3:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1bc9d1715_build_impl(_68335_node._field_data.operator jule::Ptr<_1d70ab215_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a65a6_TypeAliasDecl>>()) {
			_case_begin_1ab89d25d:;
			{
				jule::Ptr<_1be3d3874_TypeAlias> _68821_ta = _1bc9cd1a1_build_type_alias(_68335_node._field_data.operator jule::Ptr<_1d70a65a6_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_68821_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70aa500_StructDecl>>()) {
			_case_begin_1ab89e22b:;
			{
				jule::Ptr<_1d7073276_Struct> _69121_srct = _1bc9cda0e_build_struct(_68335_node._field_data.operator jule::Ptr<_1d70aa500_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_69121_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a1c66_FnDecl>>()) {
			_case_begin_1ab89e292:;
			{
				jule::Ptr<_1bc9c9873_Fn> _69421_f = _1bc9ce669_build_fn(_68335_node._field_data.operator jule::Ptr<_1d70a1c66_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_69421_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70aab0a_TraitDecl>>()) {
			_case_begin_1ab89eb77:;
			{
				jule::Ptr<_1bd929d66_Trait> _69721_t = _1bc9ceba8_build_trait(_68335_node._field_data.operator jule::Ptr<_1d70aab0a_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_69721_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a2c45_VarDecl>>()) {
			_case_begin_1ab89ebdd:;
			{
				jule::Ptr<_1be36365b_Var> _70021_v = _1bc9d11c6_build_var(_68335_node._field_data.operator jule::Ptr<_1d70a2c45_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_70021_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a893d_EnumDecl>>()) {
			_case_begin_1ab89ec54:;
			{
				jule::Ptr<_1bc9dceb3_Enum> _70321_e = _1bc9d048e_build_enum(_68335_node._field_data.operator jule::Ptr<_1d70a893d_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_70321_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a9a4e_TypeEnumDecl>>()) {
			_case_begin_1ab89ecba:;
			{
				jule::Ptr<_1bd9c99a4_TypeEnum> _70621_e = _1bc9d0e2e_build_type_enum(_68335_node._field_data.operator jule::Ptr<_1d70a9a4e_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_type_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_type_enums,1);(*_self_)._field_table.get()._field_type_enums.__push(_70621_e);;
			}
		}
		else {
			_case_begin_1ab89e0d8:;
			{
				_1bc9d25d4_push_err(&(*_self_), _68335_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab89e083:;
	};
}



inline void _1bc9d6682_append_nodes(_1bc9d1c65_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1ab8a7586:;
		if (it != expr.end()) {
			_1d705b968_Node _71421_node = *it;
			{
				_1bc9d64a6_append_node(&(*_self_), _71421_node);
			}
			_iter_next_1ab8a7586:;
			++it;
			goto _iter_begin_1ab8a7586;
		}
		_iter_end_1ab8a7586:;
	};
}



inline void _1bc9d6907_push_directive_pass(_1bc9d1c65_SymbolBuilder* _self_, jule::Ptr<_1d705bd64_Directive>& _71943_d) {
	if ((_71943_d.get()._field_args.len() == 0LL)) {
		_1bc9d25d4_push_err(&(*_self_), _71943_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71943_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_20201c3d1_Token> _72417_arg = _71943_d.get()._field_args[1LL];;
		_1bc9d25d4_push_err(&(*_self_), _72417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20201c3d1_Token> _72813_arg = _71943_d.get()._field_args[0LL];;
	if ((_72813_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1bc9d25d4_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72813_arg.get()._field_kind[0LL] != '\"')) {
		_1bc9d25d4_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1bc9cc7bb_Pass{._field_token=_71943_d.get()._field_tag, ._field_text=_72813_arg.get()._field_kind.slice(1LL,(_72813_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1bc9d6ad3_append_top_directives(_1bc9d1c65_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1ab8ae0b5:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _74621_d = *it;
			{
				{
					auto &_match_expr{ _74621_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ab8b0391:;
						{
							_1bc9d6907_push_directive_pass(&(*_self_), _74621_d);
						}
					}
					_match_end_1ab8b02d6:;
				};
			}
			_iter_next_1ab8ae0b5:;
			++it;
			goto _iter_begin_1ab8ae0b5;
		}
		_iter_end_1ab8ae0b5:;
	};
}



inline void _1bc9d6cae_build(jule::Ptr<_1bc9d1c65_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1be3a4339_SymbolTable>(_1be3a4339_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1bc9d6ad3_append_top_directives(_self_.ptr());
	_1bc9d6231_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1bc9d6682_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9d1c65_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bca37e97_to_str(_1bd929d66_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1bca383e8_equals(jule::Ptr<_1bd929d66_Trait> _self_, jule::Ptr<_1be3d45ab_TypeKind> _2626_other) {
	jule::Ptr<_1bd929d66_Trait> _2713_trt = _1be3d7d40_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1bca57604_is_builtin(_1bd929d66_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1bc9c9873_Fn> _1bca6e82a_find_method(_1bd929d66_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab8b4373:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1ab8b4373:;
			++it;
			goto _iter_begin_1ab8b4373;
		}
		_iter_end_1ab8b4373:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd929d66_Trait _Src) {
	_Stream << _1bca37e97_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1bca8383e_auto_expr(_1bcb66966_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1bcb66966_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bcabed97_to_str(_1bc9dceb3_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1bcac75b9_equals(jule::Ptr<_1bc9dceb3_Enum> _self_, jule::Ptr<_1be3d45ab_TypeKind> _3826_other) {
	jule::Ptr<_1bc9dceb3_Enum> _3913_enm = _1be3d6db6_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1bcb66966_EnumItem> _1bcb599d1_find_item(_1bc9dceb3_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1ab8b6b39:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb66966_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1ab8b6b39:;
			++it;
			goto _iter_begin_1ab8b6b39;
		}
		_iter_end_1ab8b6b39:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1bc9dceb3_Enum _Src) {
	_Stream << _1bcabed97_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bcb58ddc_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bcc49b37_to_str(_1bd9c99a4_TypeEnum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1bcc68d98_equals(jule::Ptr<_1bd9c99a4_TypeEnum> _self_, jule::Ptr<_1be3d45ab_TypeKind> _8026_other) {
	jule::Ptr<_1bd9c99a4_TypeEnum> _8113_tenm = _1be3d712a_tenm(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1bcb58ddc_TypeEnumItem> _1bd92a6a2_find_item(_1bd9c99a4_TypeEnum* _self_, jule::Str _8932_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1ab8b8d8e:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb58ddc_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_ident == _8932_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1ab8b8d8e:;
			++it;
			goto _iter_begin_1ab8b8d8e;
		}
		_iter_end_1ab8b8d8e:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd9c99a4_TypeEnum _Src) {
	_Stream << _1bcc49b37_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1bd9437ca_is_trait_impl(_1bcac892d_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1bd944006_is_struct_impl(_1bcac892d_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1bcac892d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be1ca25e_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be2437b1_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be249c6d_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25830e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be2584eb_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be23520e_is_while_next(_1be2586d8_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be2586d8_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be2588c5_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be258ab2_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be258c9e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be258e8b_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be259178_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be259365_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be259552_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25973e_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be2360bc_is_generic_type_match(_1be25992b_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1be25992b_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be244284_is_default(_1be259d49_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be259d49_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25a036_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25a223_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25a410_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25a5ec_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be25b444_find_package(_1be25aee3_ScopeChecker* _self_, jule::Str _45635_ident) {
	return _1be34882d_find_package((*_self_)._field_s.ptr(), _45635_ident);
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be25b752_select_package(_1be25aee3_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _46637_selector) {
	return _1be348b3b_select_package((*_self_)._field_s.ptr(), _46637_selector);
}



inline jule::Ptr<_1be36365b_Var> _1be25bb09_find_var(_1be25aee3_ScopeChecker* _self_, jule::Str _47731_ident, jule::Bool _47743_cpp_linked) {
	;
	jule::Ptr<_1be36365b_Var> _48017_v = _1be3a6acd___find_var((*_self_)._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1be25aee3_ScopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1be3a6acd___find_var(_48517_parent.get()._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1ab8e41c7:;
	}
	_iter_end_1ab8e41c7:;;
	return _1be348ee3_find_var((*_self_)._field_s.ptr(), _47731_ident,_47743_cpp_linked);
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be25beb1_find_type_alias(_1be25aee3_ScopeChecker* _self_, jule::Str _50438_ident, jule::Bool _50450_cpp_linked) {
	;
	jule::Ptr<_1be3d3874_TypeAlias> _50717_ta = _1be3a702e___find_type_alias((*_self_)._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1be25aee3_ScopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1be3a702e___find_type_alias(_51217_parent.get()._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1ab8e741c:;
	}
	_iter_end_1ab8e741c:;;
	return _1be34939a_find_type_alias((*_self_)._field_s.ptr(), _50438_ident,_50450_cpp_linked);
}



inline jule::Ptr<_1d7073276_Struct> _1be25c368_find_struct(_1be25aee3_ScopeChecker* _self_, jule::Str _52934_ident, jule::Bool _52946_cpp_linked) {
	return _1be349752_find_struct((*_self_)._field_s.ptr(), _52934_ident,_52946_cpp_linked);
}



inline jule::Ptr<_1bc9c9873_Fn> _1be25c720_find_fn(_1be25aee3_ScopeChecker* _self_, jule::Str _53830_ident, jule::Bool _53842_cpp_linked) {
	return _1be349b09_find_fn((*_self_)._field_s.ptr(), _53830_ident,_53842_cpp_linked);
}



inline jule::Ptr<_1bd929d66_Trait> _1be25ca2d_find_trait(_1be25aee3_ScopeChecker* _self_, jule::Str _54733_ident) {
	return _1be349e17_find_trait((*_self_)._field_s.ptr(), _54733_ident);
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be25cd3b_find_enum(_1be25aee3_ScopeChecker* _self_, jule::Str _55632_ident) {
	return _1be34a225_find_enum((*_self_)._field_s.ptr(), _55632_ident);
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be25d149_find_type_enum(_1be25aee3_ScopeChecker* _self_, jule::Str _56537_ident) {
	return _1be34a533_find_type_enum((*_self_)._field_s.ptr(), _56537_ident);
}



inline jule::Bool _1be25d479_is_unsafe(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	jule::Ptr<_1be25aee3_ScopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1be25d6dd_is_root(_1be25aee3_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1be25d8b9_stop(_1be25aee3_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1be25db2d_stopped(_1be25aee3_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1be25dd92_is_deferred(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	jule::Ptr<_1be25aee3_ScopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1be25aee3_ScopeChecker> _1be25e106_get_root(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	jule::Ptr<_1be25aee3_ScopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1ab902092:;
	}
	_iter_end_1ab902092:;;
	return _62417_root;
}



inline jule::Ptr<_1be25aee3_ScopeChecker> _1be25e36a_get_hard_root(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	jule::Ptr<_1be25aee3_ScopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1ab90335c:;
	}
	_iter_end_1ab90335c:;;
	return _63417_root;
}



inline jule::Ptr<_1be258e8b_Label> _1be25e678_find_label(_1be25aee3_ScopeChecker* _self_, jule::Str _64429_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ab90411b:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1be258e8b_Label>>()) {
						_case_begin_1ab904924:;
						{
							jule::Ptr<_1be258e8b_Label> _64825_label = _64521_st.operator jule::Ptr<_1be258e8b_Label>();;
							if ((_64825_label.get()._field_ident == _64429_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1ab904825:;
				};
			}
			_iter_next_1ab90411b:;
			++it;
			goto _iter_begin_1ab90411b;
		}
		_iter_end_1ab90411b:;
	};
	return nullptr;
}



inline jule::Ptr<_1be25a410_ScopeLabel> _1be25e986_find_label_scope(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Str _66036_ident) {
	jule::Ptr<_1be25a410_ScopeLabel> _66117_label = _1be25ec94_find_label_all(_self_.ptr(), _66036_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1be25a410_ScopeLabel> _1be25ec94_find_label_all(_1be25aee3_ScopeChecker* _self_, jule::Str _67233_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1ab906d77:;
		if (it != expr.end()) {
			jule::Ptr<_1be25a410_ScopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_ident == _67233_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1ab906d77:;
			++it;
			goto _iter_begin_1ab906d77;
		}
		_iter_end_1ab906d77:;
	};
	return nullptr;
}



inline jule::Bool _1be26014b_is_duplicated_ident(_1be25aee3_ScopeChecker* _self_, jule::Uintptr _68438_itself, jule::Str _68455_ident) {
	jule::Ptr<_1be36365b_Var> _68513_v = _1be25bb09_find_var(&(*_self_), _68455_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68438_itself))) {
		if ((_68513_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_scope == (*_self_)._field_scope) || (!(_1be34a885_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1be3d3874_TypeAlias> _69313_ta = _1be25beb1_find_type_alias(&(*_self_), _68455_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68438_itself))) {
		if ((_69313_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1be34a885_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1be2603c1_check_var_decl(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a2c45_VarDecl> _70438_decl) {
	jule::Ptr<_1be36365b_Var> _70517_v = _1bc9d11c6_build_var(_70438_decl);;
	_70517_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1be26014b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_ident)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _70517_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1be25d8b9_stop(_self_.ptr());
		return;;
	};
	_1be357ae5_check_var_decl(_self_.get()._field_s, _70517_v,jule::Trait<_1be3eedce_Lookup>(_self_, 0));
	if (((!(_1be363c77_is_type_inferred(_70517_v.ptr()))) && ((_70517_v.get()._field_kind == nullptr) || (_70517_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1be35b269_check_type_var(_self_.get()._field_s, _70517_v,jule::Trait<_1be3eedce_Lookup>(_self_, 0));
}



inline void _1be260646_check_type_alias_decl(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a65a6_TypeAliasDecl> _72845_decl) {
	jule::Ptr<_1be3d3874_TypeAlias> _72917_ta = _1bc9cd1a1_build_type_alias(_72845_decl);;
	if (_1be26014b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_ident)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _72917_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1be25d8b9_stop(_self_.ptr());
		return;;
	};
	_1be3537b1_check_type_alias_decl(_self_.get()._field_s, _72917_ta,jule::Trait<_1be3eedce_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1be25d8b9_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1be1ca25e_Scope> _1be2608aa_get_child(_1be25aee3_ScopeChecker* _self_) {
	return jule::new_ptr<_1be1ca25e_Scope>(_1be1ca25e_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1be260c73_check_child_ssc(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a0270_ScopeTree>& _75240_tree, jule::Ptr<_1be1ca25e_Scope>& _75263_s, jule::Ptr<_1be25aee3_ScopeChecker>& _75279_ssc) {
	_75279_ssc.get()._field_parent=_self_;
	_1be26b322_check(_75279_ssc, _75240_tree,_75263_s);
}



inline jule::Ptr<_1be1ca25e_Scope> _1be26112a_check_child_sc(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a0270_ScopeTree>& _75739_tree, jule::Ptr<_1be25aee3_ScopeChecker>& _75762_ssc) {
	jule::Ptr<_1be1ca25e_Scope> _75817_s = _1be2608aa_get_child(_self_.ptr());;
	_1be260c73_check_child_ssc(_self_, _75739_tree,_75817_s,_75762_ssc);
	return _75817_s;
}



inline jule::Ptr<_1be1ca25e_Scope> _1be261438_check_child(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a0270_ScopeTree>& _76336_tree) {
	jule::Ptr<_1be25aee3_ScopeChecker> _76417_ssc = _1be26b586_new_child_checker(_self_);;
	return _1be26112a_check_child_sc(_self_, _76336_tree,_76417_ssc);
}



inline void _1be2616ad_check_anon_scope(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a0270_ScopeTree> _76840_tree) {
	jule::Ptr<_1be1ca25e_Scope> _76917_s = _1be261438_check_child(_self_, _76840_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1be2619cc_process_error_call(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>& _77343_m, jule::Ptr<_20201c3d1_Token> _77374_err) {
	if (_1be25dd92_is_deferred(_self_)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be25aee3_ScopeChecker> _77817_root = _1be25e106_get_root(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77343_m.get()._field_func=_77817_root.get()._field_owner;
}



inline void _1be261c52_check_expr(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709475e_Expr> _78634_expr) {
	jule::Ptr<_1be3aad57_Eval> _78717_eval = _1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1be3a92d9_Data> _78917_d = _1be3c612a_eval_expr(_78717_eval, _78634_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ab920038:;
			{
				jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_model.operator jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>();;
				_1be2619cc_process_error_call(_self_, _79621_m,_78634_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8de4_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c7ed1_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c90d1_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1ab920247:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1ab91ee5b:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _78634_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab91ee06:;
	};
}



inline void _1be261ec7_check_co_expr(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d7096354_CoExpr> _81537_expr) {
	jule::Ptr<_1be3aad57_Eval> _81617_eval = _1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1be3a92d9_Data> _81817_d = _1be3c612a_eval_expr(_81617_eval, _81537_expr.get()._field_expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1ab92589b:;
			{
				jule::Ptr<_1bc9c5066_FnCallExprModel> _82521_model = _81817_d.get()._field_model.operator jule::Ptr<_1bc9c5066_FnCallExprModel>();;
				if (_82521_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1be34aec3_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_is_co=true;
				_1be3bcebd_check_fn_of_concurrent_call(_81617_eval.ptr(), _82521_model.get()._field_func,_81537_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1ab92568c:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab925637:;
	};
}



inline jule::Ptr<_1be2437b1_If> _1be2622d5_check_if(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a55a5_If> _83932_i) {
	jule::Ptr<_1be1ca25e_Scope> _84017_s = _1be261438_check_child(_self_, _83932_i.get()._field_scope);;
	jule::Ptr<_1be3a92d9_Data> _84217_d = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _83932_i.get()._field_expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be3d9083_Prim> _84717_prim = _1be3d6679_prim(_84217_d.get()._field_kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1be3dbccd_is_bool(_84717_prim.ptr()))))) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _83932_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1be2437b1_If>(_1be2437b1_If{._field_expr=jule::Any(_84217_d.get()._field_model), ._field_scope=_84017_s});
}



inline jule::Ptr<_1be249c6d_Else> _1be2625e3_check_else(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a595c_Else> _85934_e) {
	return jule::new_ptr<_1be249c6d_Else>(_1be249c6d_Else{._field_scope=_1be261438_check_child(_self_, _85934_e.get()._field_scope)});
}



inline void _1be262868_check_conditional(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a5dd0_Conditional> _86541_conditional) {
	jule::Ptr<_1be25830e_Conditional> _86617_c = jule::new_ptr<_1be25830e_Conditional>(_1be25830e_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_elifs=jule::Slice<jule::Ptr<_1be2437b1_If>>::alloc(0LL,(_86541_conditional.get()._field_tail.len() + 1LL));
	_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1be2622d5_check_if(_self_, _86541_conditional.get()._field_head));;
	{
		auto &expr = _86541_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1ab930543:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a55a5_If> _87221_elif = *it;
			{
				_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1be2622d5_check_if(_self_, _87221_elif));;
			}
			_iter_next_1ab930543:;
			++it;
			goto _iter_begin_1ab930543;
		}
		_iter_end_1ab930543:;
	};
	if ((_86541_conditional.get()._field_default != nullptr)) {
		_86617_c.get()._field_default=_1be2625e3_check_else(_self_, _86541_conditional.get()._field_default);
	};
}



inline void _1be262cca_check_iter_scope_ssc(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Uintptr _88140_it, jule::Ptr<_1d70a0270_ScopeTree> _88157_tree, jule::Ptr<_1be1ca25e_Scope>& _88180_s, jule::Ptr<_1be25aee3_ScopeChecker> _88195_ssc) {
	_88195_ssc.get()._field_it=_88140_it;
	_1be260c73_check_child_ssc(_self_, _88157_tree,_88180_s,_88195_ssc);
}



inline jule::Ptr<_1be1ca25e_Scope> _1be26322b_check_iter_scope_sc(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Uintptr _88639_it, jule::Ptr<_1d70a0270_ScopeTree> _88656_tree, jule::Ptr<_1be25aee3_ScopeChecker> _88678_ssc) {
	jule::Ptr<_1be1ca25e_Scope> _88717_scope = _1be2608aa_get_child(_self_.ptr());;
	_1be262cca_check_iter_scope_ssc(_self_, _88639_it,_88656_tree,_88717_scope,_88678_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1be1ca25e_Scope> _1be2635d3_check_iter_scope(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Uintptr _89236_it, jule::Ptr<_1d70a0270_ScopeTree>& _89254_tree) {
	jule::Ptr<_1be25aee3_ScopeChecker> _89317_ssc = _1be26b586_new_child_checker(_self_);;
	return _1be26322b_check_iter_scope_sc(_self_, _89236_it,_89254_tree,_89317_ssc);
}



inline void _1be263858_check_inf_iter(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a375c_Iter>& _89739_it) {
	jule::Ptr<_1be2584eb_InfIter> _89817_kind = jule::new_ptr<_1be2584eb_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_scope=_1be2635d3_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89739_it.get()._field_scope);
}



inline void _1be263acd_check_while_iter(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a375c_Iter>& _90341_it) {
	jule::Ptr<_1d70a4032_WhileKind> _90417_wh = _90341_it.get()._field_kind.operator jule::Ptr<_1d70a4032_WhileKind>();;
	if (((_90417_wh.get()._field_expr == nullptr) && (_90417_wh.get()._field_next == nullptr))) {
		_1be263858_check_inf_iter(_self_, _90341_it);
		return;;
	};
	jule::Ptr<_1be2586d8_WhileIter> _91017_kind = jule::new_ptr<_1be2586d8_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_scope=_1be2635d3_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90341_it.get()._field_scope);
	if ((_90417_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1be3a92d9_Data> _91521_d = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _90417_wh.get()._field_expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1be3d9083_Prim> _92017_prim = _1be3d6679_prim(_91521_d.get()._field_kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1be3dbccd_is_bool(_92017_prim.ptr())))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_expr=jule::Any(_91521_d.get()._field_model);
	};
	if (_1d70a4384_is_while_next(_90417_wh.ptr())) {
		if ((!(_1be233383_is_valid_ast_st_for_next_st(_90417_wh.get()._field_next)))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1be26a0bd_check_node(_self_, _90417_wh.get()._field_next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_94017_n);
			if ((!(_1be234241_is_valid_st_for_next_st(_94325_st)))) {
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_next=_94325_st;
		};
	};
}



inline void _1be263d53_check_range_iter(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a375c_Iter>& _95441_it) {
	jule::Ptr<_1d70a48c3_RangeKind> _95517_rang = _95441_it.get()._field_kind.operator jule::Ptr<_1d70a48c3_RangeKind>();;
	jule::Ptr<_1be3a92d9_Data> _95717_d = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _95517_rang.get()._field_expr);;
	if ((_95717_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1be2588c5_RangeIter> _96217_kind = jule::new_ptr<_1be2588c5_RangeIter>(_1be2588c5_RangeIter{._field_expr=_95717_d, });;
	_1be3a0423_RangeChecker _96617_rc = _1be3a0423_RangeChecker{._field_sc=_self_, ._field_rang=_95517_rang, ._field_kind=_96217_kind, ._field_d=_95717_d};;
	jule::Bool _97213_ok = _1be3a1d1a_check(&_96617_rc);;
	if ((!(_97213_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_96217_kind));;
	jule::Ptr<_1be25aee3_ScopeChecker> _97917_ssc = _1be26b586_new_child_checker(_self_);;
	jule::Ptr<_1be1ca25e_Scope> _98017_scope = _1be2608aa_get_child(_self_.ptr());;
	if ((_96217_kind.get()._field_key_a != nullptr)) {
		if (((!(_1be34a885_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1be26014b_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_a.get()._field_ident))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_a.get()._field_ident)}));
			_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_a.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_a);;
	};
	if ((_96217_kind.get()._field_key_b != nullptr)) {
		if (((!(_1be34a885_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1be26014b_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_b.get()._field_ident))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_b.get()._field_ident)}));
			_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_b.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_b);;
	};
	_1be262cca_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96217_kind)),_95441_it.get()._field_scope,_98017_scope,_97917_ssc);
	_96217_kind.get()._field_scope=_98017_scope;
}



inline void _1be2640c8_check_iter(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a375c_Iter> _100434_it) {
	if (_1d70a3aae_is_inf(_100434_it.ptr())) {
		_1be263858_check_inf_iter(_self_, _100434_it);
		return;;
	};
	{
		auto &_match_expr{ _100434_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d70a4032_WhileKind>>()) {
			_case_begin_1ab94e2ba:;
			{
				_1be263acd_check_while_iter(_self_, _100434_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a48c3_RangeKind>>()) {
			_case_begin_1ab94d693:;
			{
				_1be263d53_check_range_iter(_self_, _100434_it);
			}
		}
		else {
			_case_begin_1ab94d550:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ab94d4ea:;
	};
}



inline jule::Bool _1be2643d6_check_valid_cont_label(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Uintptr _102042_it) {
	jule::Ptr<_1be25aee3_ScopeChecker> _102117_scope = _self_;;
	_julec_label_iter:;
	if ((_102117_scope.get()._field_it == _102042_it)) {
		return true;
	};
	if ((_102117_scope.get()._field_parent != nullptr)) {
		_102117_scope=_102117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1be264716_check_valid_break_label(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Uintptr _103643_ptr) {
	jule::Ptr<_1be25aee3_ScopeChecker> _103717_scope = _self_;;
	_julec_label_iter:;
	if ((_103717_scope.get()._field_it == _103643_ptr)) {
		return true;
	};
	if ((_103717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104517_mtch = static_cast<jule::Uintptr>(((_1be259d49_Case*)(_103717_scope.get()._field_cse))->_field_owner);;
		if ((_104517_mtch == _103643_ptr)) {
			return true;
		};
	};
	if ((_103717_scope.get()._field_parent != nullptr)) {
		_103717_scope=_103717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1be258ab2_ContSt> _1be264a35_check_cont_valid_scope(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a5132_ContSt> _105942_c) {
	if (_1be25dd92_is_deferred(_self_)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105942_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1be258ab2_ContSt>();
	};
	jule::Ptr<_1be25aee3_ScopeChecker> _106917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106917_scope.get()._field_it == 0LLU) && (_106917_scope.get()._field_parent != nullptr)) && (_106917_scope.get()._field_owner == nullptr))) {
			_case_begin_1ab956aec:;
			{
				_106917_scope=_106917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106917_scope.get()._field_it != 0LLU)) {
			_case_begin_1ab956b74:;
			{
				return jule::new_ptr<_1be258ab2_ContSt>(_1be258ab2_ContSt{._field_it=_106917_scope.get()._field_it});
			}
		}
		_match_end_1ab956a42:;
	};
	_1be34aec3_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1be264caa_check_cont(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a5132_ContSt> _108330_c) {
	jule::Ptr<_1be258ab2_ContSt> _108417_cont = _1be264a35_check_cont_valid_scope(_self_, _108330_c);;
	if ((_108417_cont == nullptr)) {
		return;;
	};
	if ((_108330_c.get()._field_label != nullptr)) {
		jule::Ptr<_1be25a410_ScopeLabel> _109021_label = _1be207e3a_find_label_parent(_108330_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_109021_label == nullptr)) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_109021_label.get()._field_used=true;
		if (((_109021_label.get()._field_pos + 1LL) >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _110317_i = (_109021_label.get()._field_pos + 1LL);;
		if ((_110317_i >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110725_st = _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts[_110317_i];;
			{
				auto &_match_expr{ _110725_st };
				
				if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
					_case_begin_1ab95c916:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1be2584eb_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1be2588c5_RangeIter>>()) {
					_case_begin_1ab960c38:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1be2588c5_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1be2586d8_WhileIter>>()) {
					_case_begin_1ab960c9e:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1be2586d8_WhileIter>()));
					}
				}
				else {
					_case_begin_1ab960ad4:;
					{
						_1be34aec3_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1ab960a07:;
			};
		};
	};
	if ((_108417_cont.get()._field_it != 0LLU)) {
		if ((!(_1be2643d6_check_valid_cont_label(_self_, _108417_cont.get()._field_it)))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_108417_cont));;
}



inline void _1be265030_check_label(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709c8dd_LabelSt> _113035_l) {
	if ((_1be25e678_find_label(_self_.ptr(), _113035_l.get()._field_ident) != nullptr)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _113035_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_113035_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1be258e8b_Label> _113617_label = jule::new_ptr<_1be258e8b_Label>(_1be258e8b_Label{._field_ident=_113035_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_113617_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1be25a410_ScopeLabel>>::make({jule::new_ptr<_1be25a410_ScopeLabel>(_1be25a410_ScopeLabel{._field_token=_113035_l.get()._field_token, ._field_label=_113617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1be2652a5_push_goto(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709cc95_GotoSt> _114933_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1be259178_GotoSt>(_1be259178_GotoSt{._field_ident=_114933_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1be25a5ec_ScopeGoto>>::make({jule::new_ptr<_1be25a5ec_ScopeGoto>(_1be25a5ec_ScopeGoto{._field_gt=_114933_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1be26552a_check_postfix(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709dbca_AssignSt> _116137_a) {
	if ((_116137_a.get()._field_left.len() > 1LL)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d709475e_Expr> _116717_expr = _116137_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1be3a92d9_Data> _116817_d = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _116717_expr);;
	if ((_116817_d == nullptr)) {
		return;;
	};
	_1be232805_check_assign(_self_.get()._field_s,_116817_d,nullptr,_116137_a.get()._field_setter);
	if ((_1be3d6b52_ptr(_116817_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1be3e0b06_Ptr> _117621_ptr = _1be3d6b52_ptr(_116817_d.get()._field_kind.ptr());;
		if (_1be3e15c9_is_unsafe(_117621_ptr.ptr())) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1be3d4963_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1be3d6679_prim(_116817_d.get()._field_kind.ptr()) == nullptr) || (!(_1be257e35_is_num(_1be3d6679_prim(_116817_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1be3d4963_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1be259365_Postfix>(_1be259365_Postfix{._field_expr=jule::Any(_116817_d.get()._field_model), ._field_op=_116137_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1be265838_is_new_assign_ident(_1be25aee3_ScopeChecker* _self_, jule::Str _119438_ident) {
	if ((_20201eb75_is_ignore_ident(_119438_ident) || _119438_ident.empty())) {
		return false;
	};
	return (_1be3a73d6_def_by_ident((*_self_)._field_table.ptr(), _119438_ident,false) == nullptr);
}



inline jule::Bool _1be265cab_check_structure_assign_op(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _120250_s, jule::Ptr<_1d709dbca_AssignSt>& _120270_a, jule::Ptr<_1be3a92d9_Data>& _120289_r) {
	jule::Ptr<_1bc9c9c4c_FnIns> _120517_overload = nullptr;;
	{
		auto &_match_expr{ _120270_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1ab9749e9:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1ab974a60:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1ab975a50:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1ab975ab6:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1ab975b2c:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1ab975b93:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1ab975c09:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1ab975c70:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1ab975ce7:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1ab975d5d:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1ab9748b7:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1d707572e_to_str(_120250_s.ptr()))}));
				return false;
			}
		}
		_match_end_1ab974862:;
	};
	if ((_120517_overload == nullptr)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1d707572e_to_str(_120250_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1bc9c9a60_ParamIns> _123717_p = _120517_overload.get()._field_params[1LL];;
	return _1be3512c5_check_assign_type(_self_.get()._field_s, _123717_p.get()._field_decl.get()._field_reference,_123717_p.get()._field_kind,_120289_r,_120270_a.get()._field_setter);
}



inline void _1be266042_check_single_assign(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709dbca_AssignSt>& _124144_a) {
	jule::Ptr<_1be3a92d9_Data> _124217_l = nullptr;;
	if ((!(_20201eb75_is_ignore_ident(_124144_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1d709475e_Expr> _124521_expr = _124144_a.get()._field_left[0LL].get()._field_expr;;
		_124217_l=_1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _124521_expr);
		if ((_124217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1be3aad57_Eval> _125217_eval = nullptr;;
	if ((_124217_l != nullptr)) {
		_125217_eval=_1be3509bc_evalp(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0),_124217_l.get()._field_kind);
	} else {
		_125217_eval=_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0));
	};
	_125217_eval.get()._field_unsafety=_1be25d479_is_unsafe(_self_);
	jule::Ptr<_1be3a92d9_Data> _125917_r = _1be3c612a_eval_expr(_125217_eval, _124144_a.get()._field_right);;
	if ((_125917_r == nullptr)) {
		return;;
	};
	if ((_124217_l == nullptr)) {
		if (_1be3d5700_void(_125917_r.get()._field_kind.ptr())) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_125917_r));;
		return;;
	};
	if ((!(_1be232805_check_assign(_self_.get()._field_s,_124217_l,_125917_r,_124144_a.get()._field_setter)))) {
		return;;
	};
	if ((_1be3d8318_tup(_125917_r.get()._field_kind.ptr()) != nullptr)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d70abbb6_OperandExprModel> _128117_lm = jule::new_ptr<_1d70abbb6_OperandExprModel>(_1d70abbb6_OperandExprModel{._field_kind=_124217_l.get()._field_kind, ._field_model=jule::Any(_124217_l.get()._field_model)});;
	jule::Ptr<_1d70abbb6_OperandExprModel> _128517_rm = jule::new_ptr<_1d70abbb6_OperandExprModel>(_1d70abbb6_OperandExprModel{._field_kind=_125917_r.get()._field_kind, ._field_model=jule::Any(_125917_r.get()._field_model)});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1be259552_Assign>(_1be259552_Assign{._field_l=_128117_lm, ._field_r=_128517_rm, ._field_op=_124144_a.get()._field_setter})));;
	if ((_124144_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1d70ab9c9_StructIns> _129221_strct = _1be3d7acb_strct(_124217_l.get()._field_kind.ptr());;
		if ((_129221_strct != nullptr)) {
			_1be265cab_check_structure_assign_op(_self_, _129221_strct,_124144_a,_125917_r);
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind=_124144_a.get()._field_setter.get()._field_kind.slice(0LL,(_124144_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1be3c833b_BinaryEval _129921_solver = static__1be3c8c43_new(_125217_eval,_124144_a.get()._field_setter);;
		_125917_r=_1be3cd93a_solve_explicit(&_129921_solver, _124217_l,_125917_r);
		if ((_125917_r == nullptr)) {
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1be396826_AssignTypeChecker _130817_checker = _1be396826_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124217_l.get()._field_kind, ._field_d=_125917_r, ._field_error_token=_124144_a.get()._field_setter};;
	if (_1be39799d_check(&_130817_checker)) {
		_128517_rm.get()._field_model=jule::Any(_125917_r.get()._field_model);
		_128117_lm.get()._field_model=jule::Any(_124217_l.get()._field_model);
	};
}



inline void _1be266581___process_end_part_of_multi_assign(_1be25aee3_ScopeChecker* _self_, jule::Ptr<_1be25973e_MultiAssign> _132057_st, jule::Ptr<_1d709dbca_AssignSt> _132113_a, jule::Ptr<_1d709d68b_AssignLeft> _132131_lexpr, jule::Ptr<_1be3a92d9_Data> _132155_l, jule::Ptr<_1be3a92d9_Data> _132169_r) {
	if (_20201eb75_is_ignore_ident(_132131_lexpr.get()._field_ident)) {
		if (_1be3d5700_void(_132169_r.get()._field_kind.ptr())) {
			_1be34aec3_push_err((*_self_)._field_s.ptr(), _132113_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_132113_a.get()._field_declarative && _1be265838_is_new_assign_ident(&(*_self_), _132131_lexpr.get()._field_ident))) {
		if (_1be26014b_is_duplicated_ident(&(*_self_), 0LLU,_132131_lexpr.get()._field_ident)) {
			_1be34aec3_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
			_1be34b2e2_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1be25d8b9_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1be36365b_Var> _133921_v = jule::new_ptr<_1be36365b_Var>(_1be36365b_Var{._field_scope=(*_self_)._field_scope, ._field_token=_132131_lexpr.get()._field_token, ._field_ident=_132131_lexpr.get()._field_ident, ._field_mutable=_132131_lexpr.get()._field_mutable, ._field_reference=_132131_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_expr=_132113_a.get()._field_right, ._field_data=_132169_r}), });;
		_1be35ae4a_check_var((*_self_)._field_s, _133921_v);
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(jule::Any(_133921_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_133921_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_133921_v));;
		return;;
	};
	if ((_132131_lexpr.get()._field_mutable || _132131_lexpr.get()._field_reference)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
		_1be34b2e2_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1be232805_check_assign((*_self_)._field_s,_132155_l,_132169_r,_132113_a.get()._field_setter)))) {
		return;;
	};
	;
	_1be3530c9_check_validity_for_init_expr((*_self_)._field_s, _132155_l.get()._field_mutable,false,_132155_l.get()._field_kind,_132169_r,_132113_a.get()._field_setter);
	_1be396826_AssignTypeChecker _137417_checker = _1be396826_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_132155_l.get()._field_kind, ._field_d=_132169_r, ._field_error_token=_132113_a.get()._field_setter};;
	_1be39799d_check(&_137417_checker);
	_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(jule::Any(_132155_l.get()._field_model));;
}



inline void _1be266806_check_ret_multi_assign(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709dbca_AssignSt>& _138547_a) {
	jule::Ptr<_1be3a92d9_Data> _138617_rd = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _138547_a.get()._field_right);;
	if ((_138617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1be3a92d9_Data>> _139117_r = _1be2267c7_get_datas_from_tuple_data(_138617_rd);;
	{
		
		if ((_138547_a.get()._field_left.len() > _139117_r.len())) {
			_case_begin_1ab99cb76:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138547_a.get()._field_left.len() < _139117_r.len())) {
			_case_begin_1ab99cbed:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab99c8bd:;
	};
	jule::Ptr<_1be25973e_MultiAssign> _140217_st = jule::new_ptr<_1be25973e_MultiAssign>(_1be25973e_MultiAssign{._field_r=jule::Any(_138617_rd.get()._field_model)});;
	if ((_1be3d8318_tup(_138617_rd.get()._field_kind.ptr()) == nullptr)) {
		_140217_st.get()._field_r=jule::Any(jule::new_ptr<_1bc9c6c8d_TupleExprModel>(_1bc9c6c8d_TupleExprModel{._field_datas=_139117_r}));
	};
	{
		auto &expr = _138547_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1ab9a0bbd:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			{
				jule::Ptr<_1d709d68b_AssignLeft> _141121_lexpr = _138547_a.get()._field_left[_141013_i];;
				jule::Ptr<_1be3a92d9_Data> _141221_l = nullptr;;
				if (((!(_20201eb75_is_ignore_ident(_141121_lexpr.get()._field_ident))) && ((!(_138547_a.get()._field_declarative)) || (!(_1be265838_is_new_assign_ident(_self_.ptr(), _141121_lexpr.get()._field_ident)))))) {
					_141221_l=_1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _141121_lexpr.get()._field_expr);
					if ((_141221_l == nullptr)) {
						goto _iter_next_1ab9a0bbd;
					};
				};
				_1be266581___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_138547_a,_141121_lexpr,_141221_l,_139117_r[_141013_i]);
			}
			_iter_next_1ab9a0bbd:;
			++it;
			_141013_i++;
			goto _iter_begin_1ab9a0bbd;
		}
		_iter_end_1ab9a0bbd:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_140217_st));;
}



inline void _1be266a7b_check_multi_assign(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709dbca_AssignSt>& _142843_a) {
	{
		auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7098ae8_FnCallExpr>>()) {
			_case_begin_1ab9a5167:;
			{
				_1be266806_check_ret_multi_assign(_self_, _142843_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7095e9c_UnsafeExpr>>()) {
			_case_begin_1ab9a51cd:;
			{
				{
					auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1d7095e9c_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7098ae8_FnCallExpr>>()) {
						_case_begin_1ab9a6542:;
						{
							_1be266806_check_ret_multi_assign(_self_, _142843_a);
							return;;
						}
					}
					_match_end_1ab9a64dc:;
				};
			}
		}
		_match_end_1ab9a5112:;
	};
	jule::Slice<jule::Any> _144117_right = _1be2295aa_get_expr_models(_142843_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_142843_a.get()._field_left.len() > _144117_right.len())) {
			_case_begin_1ab9a7466:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142843_a.get()._field_left.len() < _144117_right.len())) {
			_case_begin_1ab9a74cc:;
			{
				_1be34aec3_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab9a7323:;
	};
	jule::Ptr<_1bc9c6c8d_TupleExprModel> _145217_right_tuple = jule::new_ptr<_1bc9c6c8d_TupleExprModel>();;
	jule::Ptr<_1be25973e_MultiAssign> _145417_st = jule::new_ptr<_1be25973e_MultiAssign>(_1be25973e_MultiAssign{._field_r=jule::Any(_145217_right_tuple)});;
	{
		auto &expr = _142843_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1ab9aa03a:;
		if (it != expr.end()) {
			jule::I64 _145813_i = it - expr.begin();
			{
				jule::Ptr<_1d709d68b_AssignLeft> _145921_lexpr = _142843_a.get()._field_left[_145813_i];;
				jule::Ptr<_1be3a92d9_Data> _146021_l = nullptr;;
				if (((!(_20201eb75_is_ignore_ident(_145921_lexpr.get()._field_ident))) && ((!(_142843_a.get()._field_declarative)) || (!(_1be265838_is_new_assign_ident(_self_.ptr(), _145921_lexpr.get()._field_ident)))))) {
					_146021_l=_1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _145921_lexpr.get()._field_expr);
					if ((_146021_l == nullptr)) {
						goto _iter_next_1ab9aa03a;
					};
				};
				jule::Ptr<_1d709475e_Expr> _147021_expr = jule::new_ptr<_1d709475e_Expr>(_1d709475e_Expr{._field_token=_142843_a.get()._field_right.get()._field_token, ._field_kind=_144117_right[_145813_i]});;
				jule::Ptr<_1be3aad57_Eval> _147421_eval = nullptr;;
				if ((_146021_l != nullptr)) {
					_147421_eval=_1be3509bc_evalp(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0),_146021_l.get()._field_kind);
				} else {
					_147421_eval=_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0));
				};
				jule::Ptr<_1be3a92d9_Data> _148021_r = _1be3c612a_eval_expr(_147421_eval, _147021_expr);;
				if ((_148021_r == nullptr)) {
					goto _iter_next_1ab9aa03a;
				};
				_145217_right_tuple.get()._field_datas = jule::alloc_for_append(_145217_right_tuple.get()._field_datas,1);_145217_right_tuple.get()._field_datas.__push(_148021_r);;
				_1be266581___process_end_part_of_multi_assign(_self_.ptr(), _145417_st,_142843_a,_145921_lexpr,_146021_l,_148021_r);
			}
			_iter_next_1ab9aa03a:;
			++it;
			_145813_i++;
			goto _iter_begin_1ab9aa03a;
		}
		_iter_end_1ab9aa03a:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_145417_st));;
}



inline void _1be266d01_check_assign_st(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709dbca_AssignSt> _149339_a) {
	{
		
		if (_202021c21_is_postfix_op(_149339_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1ab9b24d7:;
			{
				_1be26552a_check_postfix(_self_, _149339_a);
			}
		}
		else if (((_149339_a.get()._field_left.len() == 1LL) && (!(_149339_a.get()._field_declarative)))) {
			_case_begin_1ab9b22a6:;
			{
				_1be266042_check_single_assign(_self_, _149339_a);
			}
		}
		else {
			_case_begin_1ab9b1e32:;
			{
				_1be266a7b_check_multi_assign(_self_, _149339_a);
			}
		}
		_match_end_1ab9aa69a:;
	};
}



inline jule::Ptr<_1be1ca25e_Scope> _1be2671a8_check_case_scope(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1be259d49_Case>& _150437_c, jule::Ptr<_1d70a0270_ScopeTree>& _150452_tree) {
	jule::Ptr<_1be25aee3_ScopeChecker> _150517_ssc = _1be26b586_new_child_checker(_self_);;
	_150517_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150437_c));
	return _1be26112a_check_child_sc(_self_, _150452_tree,_150517_ssc);
}



inline jule::Ptr<_1be259d49_Case> _1be2676a3_check_case(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1be25992b_Match> _151034_m, jule::I64 _151045_i, jule::Ptr<_1d70a6a29_Case> _151057_c, jule::Ptr<_1be3a92d9_Data> _151076_expr) {
	jule::Ptr<_1be259d49_Case> _151117__case = _151034_m.get()._field_cases[_151045_i];;
	_151117__case.get()._field_exprs=jule::Slice<jule::Ptr<_1be3a92d9_Data>>::alloc(0LL,_151057_c.get()._field_exprs.len());
	jule::Bool _151317_generic_matched = false;;
	jule::Ptr<_1be3aad57_Eval> _151417_eval = _1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0));;
	{
		auto &expr = _151057_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ab9b7696:;
		if (it != expr.end()) {
			jule::Ptr<_1d709475e_Expr> _151521_e = *it;
			{
				jule::Ptr<_1be3a92d9_Data> _151621_d = _1be3c5a0e_eval_expr_kind(_151417_eval, _151521_e.get()._field_kind);;
				if ((_151621_d == nullptr)) {
					goto _iter_next_1ab9b7696;
				};
				if (_151034_m.get()._field_type_match) {
					_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
					if ((_1be226079_count_match_type(_151034_m,_151621_d.get()._field_kind) > 1LL)) {
						_1be34aec3_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_151621_d.get()._field_kind.ptr()))}));
					};
					if (_151076_expr.get()._field_kind.get()._field_generic) {
						_151317_generic_matched=(_151317_generic_matched || _1be3d4c71_equals(_151076_expr.get()._field_kind, _151621_d.get()._field_kind));
					} else {
						if ((_1be3d712a_tenm(_151076_expr.get()._field_kind.ptr()) != nullptr)) {
							_1be351748_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
						} else {
							jule::Ptr<_1bd929d66_Trait> _153129_trt = _1be3d7d40_trt(_151076_expr.get()._field_kind.ptr());;
							if ((_153129_trt != nullptr)) {
								_1be351748_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
							};
						};
					};
					goto _iter_next_1ab9b7696;
				};
				if (_151621_d.get()._field_decl) {
					_1be34aec3_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1ab9b7696;
				};
				_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
				_1be396826_AssignTypeChecker _154921_checker = _1be396826_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_151076_expr.get()._field_kind, ._field_d=_151621_d, ._field_error_token=_151521_e.get()._field_token};;
				_1be39799d_check(&_154921_checker);
			}
			_iter_next_1ab9b7696:;
			++it;
			goto _iter_begin_1ab9b7696;
		}
		_iter_end_1ab9b7696:;
	};
	if ((((!(_151034_m.get()._field_type_match)) || (!(_151076_expr.get()._field_kind.get()._field_generic))) || _151317_generic_matched)) {
		_151117__case.get()._field_scope=_1be2671a8_check_case_scope(_self_, _151117__case,_151057_c.get()._field_scope);
	};
	return _151117__case;
}



inline void _1be267a6b_check_cases(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a7200_MatchCase>& _156336_m, jule::Ptr<_1be25992b_Match> _156355_rm, jule::Ptr<_1be3a92d9_Data> _156371_expr) {
	_156355_rm.get()._field_cases=jule::Slice<jule::Ptr<_1be259d49_Case>>::alloc(0LL,_156336_m.get()._field_cases.len());
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ab9c1d43:;
		if (it != expr.end()) {
			jule::I64 _156513_i = it - expr.begin();
			{
				jule::Ptr<_1be259d49_Case> _156621__case = jule::new_ptr<_1be259d49_Case>(_1be259d49_Case{._field_owner=_156355_rm, });;
				if ((_156513_i > 0LL)) {
					_156355_rm.get()._field_cases[(_156513_i - 1LL)].get()._field_next=_156621__case;
				};
				_156355_rm.get()._field_cases = jule::alloc_for_append(_156355_rm.get()._field_cases,1);_156355_rm.get()._field_cases.__push(_156621__case);;
			}
			_iter_next_1ab9c1d43:;
			++it;
			_156513_i++;
			goto _iter_begin_1ab9c1d43;
		}
		_iter_end_1ab9c1d43:;
	};
	if (((_156355_rm.get()._field_default != nullptr) && (_156336_m.get()._field_cases.len() > 0LL))) {
		_156355_rm.get()._field_cases[(_156355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_156355_rm.get()._field_default;
	};
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ab9c4d46:;
		if (it != expr.end()) {
			jule::I64 _157914_i = it - expr.begin();
			jule::Ptr<_1d70a6a29_Case> _157921_c = *it;
			{
				_1be2676a3_check_case(_self_, _156355_rm,_157914_i,_157921_c,_156371_expr);
			}
			_iter_next_1ab9c4d46:;
			++it;
			_157914_i++;
			goto _iter_begin_1ab9c4d46;
		}
		_iter_end_1ab9c4d46:;
	};
}



inline jule::Ptr<_1be259d49_Case> _1be267e23_check_default(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1be25992b_Match> _158437_m, jule::Ptr<_1d70a595c_Else> _158452_d) {
	jule::Ptr<_1be259d49_Case> _158517_def = jule::new_ptr<_1be259d49_Case>(_1be259d49_Case{._field_owner=_158437_m, });;
	_158517_def.get()._field_scope=_1be2671a8_check_case_scope(_self_, _158517_def,_158452_d.get()._field_scope);
	return _158517_def;
}



inline void _1be268198_check_comptime_panic(_1be25aee3_ScopeChecker* _self_, jule::Ptr<_1be1ca25e_Scope>& _159240_s) {
	if ((_159240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159713_stmt = _159240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _159713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ab9c8410:;
			{
				jule::Ptr<_1be3a92d9_Data> _160017_d = _159713_stmt.operator jule::Ptr<_1be3a92d9_Data>();;
				{
					auto &_match_expr{ _160017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>()) {
						_case_begin_1ab9c9246:;
						{
							jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel> _160321_m = _160017_d.get()._field_model.operator jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
									_case_begin_1ab9ca236:;
									{
										jule::Ptr<_1be159e14_Const> _160625_c = _160321_m.get()._field_expr.operator jule::Ptr<_1be159e14_Const>();;
										if (_1be1b614b_is_str(_160625_c.ptr())) {
											_1be34aec3_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1be1b3ca3_read_str(_160625_c.ptr()))}));
										};
									}
								}
								_match_end_1ab9ca027:;
							};
						}
					}
					_match_end_1ab9c908c:;
				};
			}
		}
		_match_end_1ab9c83aa:;
	};
}



inline void _1be2684b7_push_type_match(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1be25992b_Match> _161539_tm, jule::Ptr<_1d70a7200_MatchCase>& _161556_m) {
	if (_161539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _161539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1ab9c87b7:;
			if (it != expr.end()) {
				jule::Ptr<_1be259d49_Case> _161925_c = *it;
				{
					if ((_161925_c.get()._field_scope != nullptr)) {
						_1be268198_check_comptime_panic(_self_.ptr(), _161925_c.get()._field_scope);
						_161539_tm.get()._field_default=_161925_c;
						_161539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1ab9c87b7:;
				++it;
				goto _iter_begin_1ab9c87b7;
			}
			_iter_end_1ab9c87b7:;
		};
		if ((_161556_m.get()._field_default != nullptr)) {
			_161539_tm.get()._field_cases=nullptr;
			_161539_tm.get()._field_default=_1be267e23_check_default(_self_, _161539_tm,_161556_m.get()._field_default);
			if ((_161539_tm.get()._field_default != nullptr)) {
				_1be268198_check_comptime_panic(_self_.ptr(), _161539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_161539_tm));;
}



inline void _1be26873c_check_type_match(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a7200_MatchCase>& _163941_m) {
	jule::Ptr<_1be3a92d9_Data> _164017_d = _1be3c5d1c_eval(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _163941_m.get()._field_expr);;
	if ((_164017_d == nullptr)) {
		return;;
	};
	if (((!(_164017_d.get()._field_kind.get()._field_generic)) && (!(((((_1be3d6679_prim(_164017_d.get()._field_kind.ptr()) != nullptr) && _1be3dc2a6_is_any(_1be3d6679_prim(_164017_d.get()._field_kind.ptr()).ptr())) || (_1be3d7d40_trt(_164017_d.get()._field_kind.ptr()) != nullptr)) || (_1be3d712a_tenm(_164017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _163941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be25992b_Match> _165117_tm = jule::new_ptr<_1be25992b_Match>(_1be25992b_Match{._field_expr=_164017_d, ._field_type_match=true, });;
	if (((!(_165117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_163941_m.get()._field_default != nullptr))) {
		_165117_tm.get()._field_default=_1be267e23_check_default(_self_, _165117_tm,_163941_m.get()._field_default);
	};
	_1be267a6b_check_cases(_self_, _163941_m,_165117_tm,_164017_d);
	_1be2684b7_push_type_match(_self_, _165117_tm,_163941_m);
}



inline void _1be2689b2_check_common_match(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a7200_MatchCase>& _166443_m) {
	jule::Ptr<_1be3a92d9_Data> _166517_d = nullptr;;
	if ((_166443_m.get()._field_expr == nullptr)) {
		_166517_d=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_constant=static__1be1b2796_new_bool(true)});
		_166517_d.get()._field_model=jule::Any(_166517_d.get()._field_constant);
	} else {
		_166517_d=_1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _166443_m.get()._field_expr);
		if ((_166517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1be25992b_Match> _167917_mc = jule::new_ptr<_1be25992b_Match>(_1be25992b_Match{._field_expr=_166517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_167917_mc));;
	if ((_166443_m.get()._field_default != nullptr)) {
		_167917_mc.get()._field_default=_1be267e23_check_default(_self_, _167917_mc,_166443_m.get()._field_default);
	};
	_1be267a6b_check_cases(_self_, _166443_m,_167917_mc,_166517_d);
}



inline void _1be268c37_check_match(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a7200_MatchCase> _169135_m) {
	if (_169135_m.get()._field_type_match) {
		_1be26873c_check_type_match(_self_, _169135_m);
		return;;
	};
	_1be2689b2_check_common_match(_self_, _169135_m);
}



inline void _1be268eac_check_fall(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d709d081_FallSt> _169930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1be25dd92_is_deferred(_self_))) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1be259d49_Case* _170717__case = ((_1be259d49_Case*)(_self_.get()._field_cse));;
	if ((_170717__case->_field_next == nullptr)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1be25a036_FallSt>(_1be25a036_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170717__case->_field_next))})));;
}



inline jule::Ptr<_1be258c9e_BreakSt> _1be2692ba_check_break_with_label(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a4c7a_BreakSt> _171942_b) {
	jule::Ptr<_1be258c9e_BreakSt> _172017_brk = _1be2695c8_check_plain_break(_self_, _171942_b);;
	if ((_172017_brk == nullptr)) {
		return nullptr;
	};
	_172017_brk.get()._field_it=0LLU;
	_172017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1be25a410_ScopeLabel> _173017_label = _1be207e3a_find_label_parent(_171942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_173017_label == nullptr)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_173017_label.get()._field_used=true;
	if (((_173017_label.get()._field_pos + 1LL) >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _174313_i = (_173017_label.get()._field_pos + 1LL);;
	if ((_174313_i >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _174721_st = _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_174313_i];;
		{
			auto &_match_expr{ _174721_st };
			
			if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
				_case_begin_1ab9e4b02:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1be2584eb_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1be2588c5_RangeIter>>()) {
				_case_begin_1ab9e83db:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1be2588c5_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1be2586d8_WhileIter>>()) {
				_case_begin_1ab9e8452:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1be2586d8_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1be25992b_Match>>()) {
				_case_begin_1ab9e84b8:;
				{
					_172017_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1be25992b_Match>()));
				}
			}
			else {
				_case_begin_1ab9e8287:;
				{
					_1be34aec3_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1ab9e81aa:;
		};
	};
	if ((_172017_brk.get()._field_it != 0LLU)) {
		if ((!(_1be264716_check_valid_break_label(_self_, _172017_brk.get()._field_it)))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_172017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1be264716_check_valid_break_label(_self_, _172017_brk.get()._field_mtch)))) {
			_1be34aec3_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _172017_brk;
}



inline jule::Ptr<_1be258c9e_BreakSt> _1be2695c8_check_plain_break(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a4c7a_BreakSt> _177737_b) {
	if (_1be25dd92_is_deferred(_self_)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be25aee3_ScopeChecker> _178317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178317_scope.get()._field_it == 0LLU) && (_178317_scope.get()._field_cse == 0LLU)) && (_178317_scope.get()._field_parent != nullptr)) && (_178317_scope.get()._field_owner == nullptr))) {
			_case_begin_1ab9eed82:;
			{
				_178317_scope=_178317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178317_scope.get()._field_it != 0LLU)) {
			_case_begin_1ab9eee09:;
			{
				return jule::new_ptr<_1be258c9e_BreakSt>(_1be258c9e_BreakSt{._field_it=_178317_scope.get()._field_it, });
			}
		}
		else if ((_178317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1ab9eee81:;
			{
				return jule::new_ptr<_1be258c9e_BreakSt>(_1be258c9e_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1be259d49_Case*)(_178317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1ab9eecb6:;
	};
	_1be34aec3_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1be26984d_check_break(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a4c7a_BreakSt> _179931_b) {
	if ((_179931_b.get()._field_label != nullptr)) {
		jule::Ptr<_1be258c9e_BreakSt> _180121_brk = _1be2692ba_check_break_with_label(_self_, _179931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180121_brk));;
		return;;
	};
	jule::Ptr<_1be258c9e_BreakSt> _180617_brk = _1be2695c8_check_plain_break(_self_, _179931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180617_brk));;
}



inline void _1be269ac3_check_ret(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a30ec_RetSt> _181033_r) {
	if (_1be25dd92_is_deferred(_self_)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _181033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be25a223_RetSt> _181517_rt = jule::new_ptr<_1be25a223_RetSt>(_1be25a223_RetSt{._field_func=_1be25e106_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_181517_rt));;
	jule::Ptr<_1be3a25ac_RetTypeChecker> _182017_rtc = jule::new_ptr<_1be3a25ac_RetTypeChecker>(_1be3a25ac_RetTypeChecker{._field_sc=_self_, ._field_f=_181517_rt.get()._field_func, ._field_error_token=_181033_r.get()._field_token, });;
	jule::Bool _182513_ok = _1be3a349d_check(_182017_rtc.ptr(), _181033_r.get()._field_expr);;
	if ((!(_182513_ok))) {
		return;;
	};
	if (((_181033_r.get()._field_expr == nullptr) && (_182017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181517_rt.get()._field_vars=_182017_rtc.get()._field_vars;
	if ((_181033_r.get()._field_expr != nullptr)) {
		_181517_rt.get()._field_expr=jule::Any(_182017_rtc.get()._field_model);
	};
}



inline void _1be269d48_check_use_expr(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d7095100_UseExpr> _184134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1be25dd92_is_deferred(_self_)) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1be34aec3_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1be26a0bd_check_node(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Any& _185735_node) {
	{
		auto &_match_expr{ _185735_node };
		
		if (_match_expr.type_is<jule::Ptr<_1d70a0270_ScopeTree>>()) {
			_case_begin_1aba0ddb3:;
			{
				_1be2616ad_check_anon_scope(_self_, _185735_node.operator jule::Ptr<_1d70a0270_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a2c45_VarDecl>>()) {
			_case_begin_1aba0d8a7:;
			{
				_1be2603c1_check_var_decl(_self_, _185735_node.operator jule::Ptr<_1d70a2c45_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a65a6_TypeAliasDecl>>()) {
			_case_begin_1aba0dcb4:;
			{
				_1be260646_check_type_alias_decl(_self_, _185735_node.operator jule::Ptr<_1d70a65a6_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709475e_Expr>>()) {
			_case_begin_1aba0e105:;
			{
				_1be261c52_check_expr(_self_, _185735_node.operator jule::Ptr<_1d709475e_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7096354_CoExpr>>()) {
			_case_begin_1aba0e2ae:;
			{
				_1be261ec7_check_co_expr(_self_, _185735_node.operator jule::Ptr<_1d7096354_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a5dd0_Conditional>>()) {
			_case_begin_1aba0e325:;
			{
				_1be262868_check_conditional(_self_, _185735_node.operator jule::Ptr<_1d70a5dd0_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a375c_Iter>>()) {
			_case_begin_1aba0e38b:;
			{
				_1be2640c8_check_iter(_self_, _185735_node.operator jule::Ptr<_1d70a375c_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a5132_ContSt>>()) {
			_case_begin_1aba0e402:;
			{
				_1be264caa_check_cont(_self_, _185735_node.operator jule::Ptr<_1d70a5132_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709c8dd_LabelSt>>()) {
			_case_begin_1aba0e468:;
			{
				_1be265030_check_label(_self_, _185735_node.operator jule::Ptr<_1d709c8dd_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709cc95_GotoSt>>()) {
			_case_begin_1aba0e4ce:;
			{
				_1be2652a5_push_goto(_self_, _185735_node.operator jule::Ptr<_1d709cc95_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709dbca_AssignSt>>()) {
			_case_begin_1aba0e545:;
			{
				_1be266d01_check_assign_st(_self_, _185735_node.operator jule::Ptr<_1d709dbca_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a7200_MatchCase>>()) {
			_case_begin_1aba0e5ab:;
			{
				_1be268c37_check_match(_self_, _185735_node.operator jule::Ptr<_1d70a7200_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709d081_FallSt>>()) {
			_case_begin_1aba0e622:;
			{
				_1be268eac_check_fall(_self_, _185735_node.operator jule::Ptr<_1d709d081_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a4c7a_BreakSt>>()) {
			_case_begin_1aba0e688:;
			{
				_1be26984d_check_break(_self_, _185735_node.operator jule::Ptr<_1d70a4c7a_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a30ec_RetSt>>()) {
			_case_begin_1aba0e6ee:;
			{
				_1be269ac3_check_ret(_self_, _185735_node.operator jule::Ptr<_1d70a30ec_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7095100_UseExpr>>()) {
			_case_begin_1aba0e765:;
			{
				_1be269d48_check_use_expr(_self_, _185735_node.operator jule::Ptr<_1d7095100_UseExpr>());
			}
		}
		else {
			_case_begin_1aba0da2d:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1aba0d951:;
	};
}



inline void _1be26a299_check_result(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	_1d709eb65_Stmt _189717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7095100_UseExpr>>()) {
			_case_begin_1aba17b58:;
			{
				jule::Ptr<_1d7095100_UseExpr> _190021_ue = _189717_stmt._field_data.operator jule::Ptr<_1d7095100_UseExpr>();;
				jule::Ptr<_1be3a92d9_Data> _190121_d = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _190021_ue.get()._field_expr);;
				if ((_190121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_190121_d));;
				jule::Ptr<_1be3a25ac_RetTypeChecker> _190621_rtc = jule::new_ptr<_1be3a25ac_RetTypeChecker>(_1be3a25ac_RetTypeChecker{._field_sc=_self_, ._field_types=_1d7078bd8_types(_self_.get()._field_result.ptr()), ._field_error_token=_190021_ue.get()._field_expr.get()._field_token, });;
				_1be3a349d_check(_190621_rtc.ptr(), _190021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709475e_Expr>>()) {
			_case_begin_1aba19154:;
			{
				jule::Ptr<_1d709475e_Expr> _191321_expr = _189717_stmt._field_data.operator jule::Ptr<_1d709475e_Expr>();;
				jule::Ptr<_1be3a92d9_Data> _191421_d = _1be3c612a_eval_expr(_1be350cca_eval(_self_.get()._field_s, jule::Trait<_1be3eedce_Lookup>(_self_, 0)), _191321_expr);;
				if ((_191421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
						_case_begin_1aba1dae8:;
						{
							jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel> _192025_m = _191421_d.get()._field_model.operator jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>();;
							_1be2619cc_process_error_call(_self_, _192025_m,_191321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_191421_d));;
						}
					}
					else {
						_case_begin_1aba1d9d8:;
						{
							return;;
						}
					}
					_match_end_1aba1d983:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709cc95_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1d70a4c7a_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1d70a5132_ContSt>>() || _match_expr.type_is<jule::Ptr<_1d70a30ec_RetSt>>()) {
			_case_begin_1aba191ba:;
			{
				_1be26a0bd_check_node(_self_, _189717_stmt._field_data);
			}
		}
		else {
			_case_begin_1aba18708:;
			{
				_1be26a0bd_check_node(_self_, _189717_stmt._field_data);
				return;;
			}
		}
		_match_end_1aba18582:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1be26a475_check_tree(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194217_n)--;
	};
	for (; (_self_.get()._field_i < _194217_n); (_self_.get()._field_i)++) {
		{
			_1d709eb65_Stmt _195021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1be26a0bd_check_node(_self_, _195021_stmt._field_data);
			if (_1be25db2d_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1aba22228:;
	}
	_iter_end_1aba22228:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1be26a299_check_result(_self_);
	};
}



inline void _1be26a794_check_goto(_1be25aee3_ScopeChecker* _self_, jule::Ptr<_1be25a5ec_ScopeGoto>& _196134_gt, jule::Ptr<_1be25a410_ScopeLabel>& _196155_label) {
	jule::Ptr<_1be25aee3_ScopeChecker> _196217_gtsc = _196134_gt.get()._field_scope;;
	while (((_196217_gtsc.get()._field_child_index - 1LL) > _196155_label.get()._field_scope.get()._field_child_index)) {
		{
			_196217_gtsc=_196217_gtsc.get()._field_parent;
		}
	_iter_next_1aba253c4:;
	}
	_iter_end_1aba253c4:;;
	jule::I64 _196717_n = 0LL;;
	if ((_196217_gtsc.get()._field_scope == _196155_label.get()._field_scope.get()._field_scope)) {
		if ((_196134_gt.get()._field_pos > _196155_label.get()._field_pos)) {
			return;;
		};
		_196717_n=_196134_gt.get()._field_pos;
	};
	jule::I64 _198017_i = (_196155_label.get()._field_pos - 1LL);;
	if ((_196717_n == 0LL)) {
		{
			auto &expr = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1aba279c0:;
			if (it != expr.end()) {
				jule::I64 _198317_j = it - expr.begin();
				jule::Any _198320_stmt = *it;
				{
					if (_1be224d8b_stmt_is_goto_scope(_198320_stmt,_196217_gtsc.get()._field_scope)) {
						_196717_n=_198317_j;
						goto _iter_end_1aba279c0;
					};
				}
				_iter_next_1aba279c0:;
				++it;
				_198317_j++;
				goto _iter_begin_1aba279c0;
			}
			_iter_end_1aba279c0:;
		};
	};
	for (; (_198017_i >= _196717_n); (_198017_i)--) {
		{
			jule::Any _199321_stmt = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_198017_i];;
			if (_1be228224_stmt_is_def(_199321_stmt)) {
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _196134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_196134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1aba2763a:;
	}
	_iter_end_1aba2763a:;;
}



inline void _1be26a970_check_gotos(_1be25aee3_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1aba2a96d:;
		if (it != expr.end()) {
			jule::Ptr<_1be25a5ec_ScopeGoto> _200221_gt = *it;
			{
				jule::Ptr<_1be25a410_ScopeLabel> _200321_label = _1be25ec94_find_label_all(&(*_self_), _200221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_200321_label == nullptr)) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _200221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1aba2a96d;
				};
				_200321_label.get()._field_used=true;
				_1be26a794_check_goto(&(*_self_), _200221_gt,_200321_label);
			}
			_iter_next_1aba2a96d:;
			++it;
			goto _iter_begin_1aba2a96d;
		}
		_iter_end_1aba2a96d:;
	};
}



inline void _1be26ab4b_check_labels(_1be25aee3_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aba2ae35:;
		if (it != expr.end()) {
			jule::Ptr<_1be25a410_ScopeLabel> _201516_l = *it;
			{
				if ((!(_201516_l.get()._field_used))) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _201516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1aba2ae35:;
			++it;
			goto _iter_begin_1aba2ae35;
		}
		_iter_end_1aba2ae35:;
	};
}



inline void _1be26ad27_check_vars(_1be25aee3_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aba2d90a:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _202316_v = *it;
			{
				if (((((!(_202316_v.get()._field_used)) && (!(_20201eb75_is_ignore_ident(_202316_v.get()._field_ident)))) && (!(_20201ee1c_is_anon_ident(_202316_v.get()._field_ident)))) && (_202316_v.get()._field_ident != jule::Str("self", 4)))) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _202316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202316_v.get()._field_ident)}));
				};
			}
			_iter_next_1aba2d90a:;
			++it;
			goto _iter_begin_1aba2d90a;
		}
		_iter_end_1aba2d90a:;
	};
}



inline void _1be26b003_check_aliases(_1be25aee3_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1aba3070e:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d3874_TypeAlias> _203116_a = *it;
			{
				if ((((!(_203116_a.get()._field_used)) && (!(_20201eb75_is_ignore_ident(_203116_a.get()._field_ident)))) && (!(_20201ee1c_is_anon_ident(_203116_a.get()._field_ident))))) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _203116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_203116_a.get()._field_ident)}));
				};
			}
			_iter_next_1aba3070e:;
			++it;
			goto _iter_begin_1aba3070e;
		}
		_iter_end_1aba3070e:;
	};
}



inline void _1be26b322_check(jule::Ptr<_1be25aee3_ScopeChecker> _self_, jule::Ptr<_1d70a0270_ScopeTree>& _203930_tree, jule::Ptr<_1be1ca25e_Scope>& _203953_s) {
	_203953_s.get()._field_deferred=_203930_tree.get()._field_deferred;
	_203953_s.get()._field_unsafety=_203930_tree.get()._field_unsafety;
	jule::I64 _204313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203930_tree;
	_self_.get()._field_scope=_203953_s;
	_1be26a475_check_tree(_self_);
	if ((_204313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1be26ad27_check_vars(_self_.ptr());
		_1be26b003_check_aliases(_self_.ptr());
		if (_1be25d6dd_is_root(_self_.ptr())) {
			_1be26a970_check_gotos(_self_.ptr());
			_1be26ab4b_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1be25aee3_ScopeChecker> _1be26b586_new_child_checker(jule::Ptr<_1be25aee3_ScopeChecker> _self_) {
	jule::Ptr<_1be25aee3_ScopeChecker> _206317_base = _1be1e2034_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_206317_base.get()._field_parent=_self_;
	_206317_base.get()._field_labels=_self_.get()._field_labels;
	_206317_base.get()._field_gotos=_self_.get()._field_gotos;
	_206317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _206317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1be25aee3_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1be26c576_check_cdef(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c9873_Fn>>()) {
			_case_begin_1aba3865c:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1bc9c9873_Fn>().get()._field_cpp_linked) {
					goto _match_end_1aba3889e;
				};
				goto _case_begin_1aba38904;
			}
		}
		else {
			_case_begin_1aba38904:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aba3889e:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1be26c7eb_check_typedef(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1aba3b165:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d7073276_Struct>().get()._field_cpp_linked) {
					goto _match_end_1aba3b385;
				};
				goto _case_begin_1aba3b3da;
			}
		}
		else {
			_case_begin_1aba3b3da:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aba3b385:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1be26ca71_check_derive(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1aba3e4cb:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1d7073276_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1aba3dd8d;
				};
				goto _case_begin_1aba3dde3;
			}
		}
		else {
			_case_begin_1aba3dde3:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aba3dd8d:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1aba42d2b:;
		}
		else {
			_case_begin_1aba4191d:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1aba428db:;
	};
}



inline void _1be26cce6_check_namespace(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1aba43ed6:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1d7073276_Struct>().get()._field_cpp_linked))) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c9873_Fn>>()) {
			_case_begin_1aba4447b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1bc9c9873_Fn>().get()._field_cpp_linked))) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1aba444e2:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1be36365b_Var>().get()._field_cpp_linked))) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1aba44349:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aba442e4:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20201c3d1_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1aba4d5b7:;
			{
				if ((_1be3ce144_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1d705bd64_Directive> _11625_typedef = jule::new_ptr<_1d705bd64_Directive>(_1d705bd64_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1d705bd64_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1aba4d045:;
	};
}



inline void _1be26d06b_check_deprecated(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1aba50069:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1d7073276_Struct>().get()._field_cpp_linked) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c9873_Fn>>()) {
			_case_begin_1aba50a09:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1bc9c9873_Fn>().get()._field_cpp_linked) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1aba50a70:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1be36365b_Var>().get()._field_cpp_linked) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1aba4d93b:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aba4d8d6:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20201c3d1_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1be26d2e1_check_test(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c9873_Fn>>()) {
			_case_begin_1aba58bee:;
			{
				jule::Ptr<_1bc9c9873_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1bc9c9873_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1d706926c_is_init(_16717_f.ptr())))) && (!(_1d7063475_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1aba59716;
				};
				if (_1d70615d8_is_method(_16717_f.ptr())) {
					_1be34aec3_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1aba59716;
				};
				goto _case_begin_1aba5976b;
			}
		}
		else {
			_case_begin_1aba5976b:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aba59716:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1be34aec3_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1be26d566_check_directive(_1be26c136_DirectiveChecker* _self_, jule::Ptr<_1d705bd64_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1aba5db27:;
			{
				_1be26c576_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1aba5db8d:;
			{
				_1be26c7eb_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1aba5dc04:;
			{
				_1be26ca71_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1aba5dc6a:;
			{
				_1be26cce6_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1aba5e991:;
			{
				_1be26d06b_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1aba5ea07:;
			{
				_1be26d2e1_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1aba5ea6d:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1aba5dab1:;
			{
				_1be34aec3_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aba5da06:;
	};
}



inline void _1be26d742_check(_1be26c136_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1aba624bb:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _20821_d = *it;
			{
				_1be26d566_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1aba624bb:;
			++it;
			goto _iter_begin_1aba624bb;
		}
		_iter_end_1aba624bb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be26c136_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be27335c_find_package(_1be272d40_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be27366a_select_package(_1be272d40_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1be36365b_Var> _1be273a22_find_var(_1be272d40_ImportInfo* _self_, jule::Str _18131_ident, jule::Bool _18143_cpp_linked) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _18131_ident)))) {
		return nullptr;
	};
	return _1be2708cb_find_var_in_package((*_self_)._field_package.get()._field_files,_18131_ident,false);
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be273dc9_find_type_alias(_1be272d40_ImportInfo* _self_, jule::Str _19338_ident, jule::Bool _19350_cpp_linked) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _19338_ident)))) {
		return nullptr;
	};
	return _1be270d2c_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_19338_ident,false);
}



inline jule::Ptr<_1d7073276_Struct> _1be274281_find_struct(_1be272d40_ImportInfo* _self_, jule::Str _20534_ident, jule::Bool _20546_cpp_linked) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _20534_ident)))) {
		return nullptr;
	};
	return _1be271228_find_struct_in_package((*_self_)._field_package.get()._field_files,_20534_ident,false);
}



inline jule::Ptr<_1bc9c9873_Fn> _1be274638_find_fn(_1be272d40_ImportInfo* _self_, jule::Str _21730_ident, jule::Bool _21742_cpp_linked) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _21730_ident)))) {
		return nullptr;
	};
	return _1be27168a_find_fn_in_package((*_self_)._field_package.get()._field_files,_21730_ident,false);
}



inline jule::Ptr<_1bd929d66_Trait> _1be274946_find_trait(_1be272d40_ImportInfo* _self_, jule::Str _22833_ident) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _22833_ident)))) {
		return nullptr;
	};
	return _1be271998_find_trait_in_package((*_self_)._field_package.get()._field_files,_22833_ident);
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be274c54_find_enum(_1be272d40_ImportInfo* _self_, jule::Str _23932_ident) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _23932_ident)))) {
		return nullptr;
	};
	return _1be271cd9_find_enum_in_package((*_self_)._field_package.get()._field_files,_23932_ident);
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be275062_find_type_enum(_1be272d40_ImportInfo* _self_, jule::Str _25037_ident) {
	if ((!(_1be275408_is_lookupable(&(*_self_), _25037_ident)))) {
		return nullptr;
	};
	return _1be27214c_find_type_enum_in_package((*_self_)._field_package.get()._field_files,_25037_ident);
}



inline jule::Bool _1be275408_is_lookupable(_1be272d40_ImportInfo* _self_, jule::Str _25928_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1be275716_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1be275716_exist_ident(&(*_self_), _25928_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1be275716_exist_ident(_1be272d40_ImportInfo* _self_, jule::Str _27926_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1aba78bdb:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_kind == _27926_ident)) {
					return true;
				};
			}
			_iter_next_1aba78bdb:;
			++it;
			goto _iter_begin_1aba78bdb;
		}
		_iter_end_1aba78bdb:;
	};
	return false;
}



inline jule::Bool _1be27599c_is_accessible_via_selection(_1be272d40_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1be275716_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1be272d40_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be276272_find_package(_1be275c99_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be276580_select_package(_1be275c99_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1be36365b_Var> _1be276937_find_var(_1be275c99_Package* _self_, jule::Str _30931_ident, jule::Bool _30943_cpp_linked) {
	return _1be2708cb_find_var_in_package((*_self_)._field_files,_30931_ident,_30943_cpp_linked);
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be276cde_find_type_alias(_1be275c99_Package* _self_, jule::Str _31538_ident, jule::Bool _31550_cpp_linked) {
	return _1be270d2c_find_type_alias_in_package((*_self_)._field_files,_31538_ident,_31550_cpp_linked);
}



inline jule::Ptr<_1d7073276_Struct> _1be277196_find_struct(_1be275c99_Package* _self_, jule::Str _32134_ident, jule::Bool _32146_cpp_linked) {
	return _1be271228_find_struct_in_package((*_self_)._field_files,_32134_ident,_32146_cpp_linked);
}



inline jule::Ptr<_1bc9c9873_Fn> _1be27754d_find_fn(_1be275c99_Package* _self_, jule::Str _32730_ident, jule::Bool _32742_cpp_linked) {
	return _1be27168a_find_fn_in_package((*_self_)._field_files,_32730_ident,_32742_cpp_linked);
}



inline jule::Ptr<_1bd929d66_Trait> _1be27785b_find_trait(_1be275c99_Package* _self_, jule::Str _33333_ident) {
	return _1be271998_find_trait_in_package((*_self_)._field_files,_33333_ident);
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be277b69_find_enum(_1be275c99_Package* _self_, jule::Str _33932_ident) {
	return _1be271cd9_find_enum_in_package((*_self_)._field_files,_33932_ident);
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be277e77_find_type_enum(_1be275c99_Package* _self_, jule::Str _34537_ident) {
	return _1be27214c_find_type_enum_in_package((*_self_)._field_files,_34537_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1be275c99_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be34882d_find_package(_1be348311_Sema* _self_, jule::Str _22435_ident) {
	return _1be3a4856_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be348b3b_select_package(_1be348311_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _23437_selector) {
	return _1be3a4b64_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1be36365b_Var> _1be348ee3_find_var(_1be348311_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1be36365b_Var> _24617_v = _1be2708cb_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aba9c957:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1aba9c957;
				};
				_24617_v=_1be273a22_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1aba9c957:;
			++it;
			goto _iter_begin_1aba9c957;
		}
		_iter_end_1aba9c957:;
	};
	return nullptr;
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be34939a_find_type_alias(_1be348311_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1be3d3874_TypeAlias> _27317_ta = _1be270d2c_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abaa07c3:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1abaa07c3;
				};
				_27317_ta=_1be273dc9_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1abaa07c3:;
			++it;
			goto _iter_begin_1abaa07c3;
		}
		_iter_end_1abaa07c3:;
	};
	return nullptr;
}



inline jule::Ptr<_1d7073276_Struct> _1be349752_find_struct(_1be348311_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1d7073276_Struct> _30017_s = _1be271228_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abaa36e9:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1abaa36e9;
				};
				_30017_s=_1be274281_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1abaa36e9:;
			++it;
			goto _iter_begin_1abaa36e9;
		}
		_iter_end_1abaa36e9:;
	};
	return nullptr;
}



inline jule::Ptr<_1bc9c9873_Fn> _1be349b09_find_fn(_1be348311_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1bc9c9873_Fn> _32717_f = _1be27168a_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abaa6598:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1abaa6598;
				};
				_32717_f=_1be274638_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1abaa6598:;
			++it;
			goto _iter_begin_1abaa6598;
		}
		_iter_end_1abaa6598:;
	};
	return nullptr;
}



inline jule::Ptr<_1bd929d66_Trait> _1be349e17_find_trait(_1be348311_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1bd929d66_Trait> _35417_t = _1be271998_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abaa92d2:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1abaa92d2;
				};
				_35417_t=_1be274946_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1abaa92d2:;
			++it;
			goto _iter_begin_1abaa92d2;
		}
		_iter_end_1abaa92d2:;
	};
	return nullptr;
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be34a225_find_enum(_1be348311_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1bc9dceb3_Enum> _38117_e = _1be271cd9_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abaabd40:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1abaabd40;
				};
				_38117_e=_1be274c54_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1abaabd40:;
			++it;
			goto _iter_begin_1abaabd40;
		}
		_iter_end_1abaabd40:;
	};
	return nullptr;
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be34a533_find_type_enum(_1be348311_Sema* _self_, jule::Str _40637_ident) {
	jule::Ptr<_1bd9c99a4_TypeEnum> _40817_e = _1be27214c_find_type_enum_in_package((*_self_)._field_files,_40637_ident);;
	if ((_40817_e != nullptr)) {
		return _40817_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abaae89d:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _41421_imp = *it;
			{
				if ((!(_1be346c38_imp_is_lookupable(_41421_imp,_40637_ident)))) {
					goto _iter_next_1abaae89d;
				};
				_40817_e=_1be275062_find_type_enum(_41421_imp.ptr(), _40637_ident);
				if (((_40817_e != nullptr) && _1be34b699_is_accessible_define(&(*_self_), _40817_e.get()._field_public,_40817_e.get()._field_token))) {
					return _40817_e;
				};
			}
			_iter_next_1abaae89d:;
			++it;
			goto _iter_begin_1abaae89d;
		}
		_iter_end_1abaae89d:;
	};
	return nullptr;
}



inline jule::Bool _1be34a885_is_flag(_1be348311_Sema* _self_, jule::I64 _43022_flags) {
	return (((*_self_)._field_flags & _43022_flags) == _43022_flags);
}



inline void _1be34ab0a_set_current_file(_1be348311_Sema* _self_, jule::Ptr<_1be3a4339_SymbolTable> _43239_f) {
	(*_self_)._field_file=_43239_f;
}



inline void _1be34aec3_push_err(_1be348311_Sema* _self_, jule::Ptr<_20201c3d1_Token> _43427_token, jule::Str _43442_fmt, jule::Slice<jule::Any> _43455_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1be3468e7_compiler_err(_43427_token,true,_43442_fmt,jule::Any(_43455_args)));;
}



inline void _1be34b2e2_push_suggestion(_1be348311_Sema* _self_, jule::Str _43934_fmt, jule::Slice<jule::Any> _43947_args) {
	{
		_1be347d7c_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43934_fmt,jule::Any(_43947_args));
	};
}



inline jule::Bool _1be34b699_is_accessible_define(_1be348311_Sema* _self_, jule::Bool _44435_public, jule::Ptr<_20201c3d1_Token> _44449_token) {
	return ((_44435_public || (_44449_token.get()._field_file == nullptr)) || (_202023162_dir((*_self_)._field_file.get()._field_file.ptr()) == _202023162_dir(_44449_token.get()._field_file.ptr())));
}



inline jule::Bool _1be34baea_is_duplicated_ident(_1be348311_Sema* _self_, jule::Uintptr _45134_itself, jule::Str _45151_ident, jule::Bool _45163_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1abab694e:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> &_45216_f = *it;
			{
				if (_1be3a7837_is_duplicated_ident(_45216_f.ptr(), _45134_itself,_45151_ident,_45163_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _45216_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1abab7554:;
					if (it != expr.end()) {
						jule::Ptr<_1be272d40_ImportInfo> &_45720_imp = *it;
						{
							{
								auto &expr = _45720_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1abab8302:;
								if (it != expr.end()) {
									jule::Ptr<_20201c3d1_Token> &_45824_selected = *it;
									{
										if ((_45824_selected.get()._field_kind == _45151_ident)) {
											return true;
										};
									}
									_iter_next_1abab8302:;
									++it;
									goto _iter_begin_1abab8302;
								}
								_iter_end_1abab8302:;
							};
						}
						_iter_next_1abab7554:;
						++it;
						goto _iter_begin_1abab7554;
					}
					_iter_end_1abab7554:;
				};
			}
			_iter_next_1abab694e:;
			++it;
			goto _iter_begin_1abab694e;
		}
		_iter_end_1abab694e:;
	};
	return false;
}



inline void _1be34be19_check_directives(jule::Ptr<_1be348311_Sema> _self_, jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _46841_d, jule::Any _46867_o) {
	_1be26c136_DirectiveChecker _46917_dc = _1be26c136_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1d705bd64_Directive>>>)((&(_46841_d)))), ._field_o=jule::Any(_46867_o)};;
	_1be26d742_check(&_46917_dc);
}



inline jule::Bool _1be34c36a_check_generic_quantity(_1be348311_Sema* _self_, jule::I64 _47741_required, jule::I64 _47756_given, jule::Ptr<_20201c3d1_Token> _47768_token) {
	jule::Bool _47785_ok = jule::Bool();
	{
		
		if (((_47741_required == 0LL) && (_47756_given > 0LL))) {
			_case_begin_1ababb06e:;
			{
				_1be34aec3_push_err(&(*_self_), _47768_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if (((_47741_required > 0LL) && (_47756_given == 0LL))) {
			_case_begin_1ababb14b:;
			{
				_1be34aec3_push_err(&(*_self_), _47768_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if ((_47741_required < _47756_given)) {
			_case_begin_1ababb1b2:;
			{
				_1be34aec3_push_err(&(*_self_), _47768_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if ((_47741_required > _47756_given)) {
			_case_begin_1ababad93:;
			{
				_1be34aec3_push_err(&(*_self_), _47768_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else {
			_case_begin_1ababa90e:;
			{
				_47785_ok = true;
				return _47785_ok;
			}
		}
		_match_end_1ababa832:;
	};
}



inline jule::Bool _1be34c744_is_duplicated_import_selection(_1be348311_Sema* _self_, jule::Uintptr _49645_itself, jule::Str _49662_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ababe605:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> &_49716_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49716_imp) == _49645_itself)) {
					goto _iter_end_1ababe605;
				};
				if (_1be275716_exist_ident(_49716_imp.ptr(), _49662_ident)) {
					return true;
				};
			}
			_iter_next_1ababe605:;
			++it;
			goto _iter_begin_1ababe605;
		}
		_iter_end_1ababe605:;
	};
	return false;
}



inline jule::Any _1be34cb0c_get_import_def(_1be348311_Sema* _self_, jule::Str _51129_ident, jule::Ptr<_1be272d40_ImportInfo>& _51146_imp) {
	if ((_1be45cbea_find_package_builtin_def(_51146_imp.get()._field_link_path,_51129_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _51146_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abac1816:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _51621_f = *it;
			{
				;
				jule::Any _51821_def = _1be3a73d6_def_by_ident(_51621_f.ptr(), _51129_ident,false);;
				if ((_51821_def != nullptr)) {
					return jule::Any(_51821_def);
				};
			}
			_iter_next_1abac1816:;
			++it;
			goto _iter_begin_1abac1816;
		}
		_iter_end_1abac1816:;
	};
	return nullptr;
}



inline jule::Bool _1be34ce3c_check_import_selections(_1be348311_Sema* _self_, jule::Ptr<_1be272d40_ImportInfo>& _52747_imp) {
	jule::Bool _52767_ok = jule::Bool();
	_52767_ok=true;
	{
		auto &expr = _52747_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1abac3719:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> _52916_ident = *it;
			{
				if ((_52916_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1abac3719;
				};
				if (_1be34c744_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_52747_imp)),_52916_ident.get()._field_kind)) {
					_1be34aec3_push_err(&(*_self_), _52916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
					_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_52767_ok=false;
					goto _iter_next_1abac3719;
				};
				jule::Any _54121_def = _1be34cb0c_get_import_def(&(*_self_), _52916_ident.get()._field_kind,_52747_imp);;
				{
					auto &_match_expr{ _54121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1abac71ac:;
						{
							goto _iter_next_1abac3719;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
						_case_begin_1abac3eab:;
						{
							jule::Ptr<_1be36365b_Var> _54725_v = _54121_def.operator jule::Ptr<_1be36365b_Var>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _54725_v.get()._field_public,_54725_v.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
						_case_begin_1abac6662:;
						{
							jule::Ptr<_1be3d3874_TypeAlias> _55225_ta = _54121_def.operator jule::Ptr<_1be3d3874_TypeAlias>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _55225_ta.get()._field_public,_55225_ta.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
						_case_begin_1abac66c8:;
						{
							jule::Ptr<_1d7073276_Struct> _55725_strct = _54121_def.operator jule::Ptr<_1d7073276_Struct>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _55725_strct.get()._field_public,_55725_strct.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1bd929d66_Trait>>()) {
						_case_begin_1abac73ee:;
						{
							jule::Ptr<_1bd929d66_Trait> _56225_t = _54121_def.operator jule::Ptr<_1bd929d66_Trait>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _56225_t.get()._field_public,_56225_t.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1bc9dceb3_Enum>>()) {
						_case_begin_1abac7465:;
						{
							jule::Ptr<_1bc9dceb3_Enum> _56725_e = _54121_def.operator jule::Ptr<_1bc9dceb3_Enum>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _56725_e.get()._field_public,_56725_e.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1bd9c99a4_TypeEnum>>()) {
						_case_begin_1abac74cb:;
						{
							jule::Ptr<_1bd9c99a4_TypeEnum> _57225_e = _54121_def.operator jule::Ptr<_1bd9c99a4_TypeEnum>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _57225_e.get()._field_public,_57225_e.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1bc9c9873_Fn>>()) {
						_case_begin_1abac7542:;
						{
							jule::Ptr<_1bc9c9873_Fn> _57725_f = _54121_def.operator jule::Ptr<_1bc9c9873_Fn>();;
							if (_1be34b699_is_accessible_define(&(*_self_), _57725_f.get()._field_public,_57725_f.get()._field_token)) {
								goto _iter_next_1abac3719;
							};
						}
					}
					else {
						_case_begin_1abac64ec:;
						{
							_1be34aec3_push_err(&(*_self_), _52916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
							_52767_ok=false;
							goto _iter_next_1abac3719;
						}
					}
					_match_end_1abac5ead:;
				};
				_1be34aec3_push_err(&(*_self_), _52916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
				_1be34b2e2_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_52767_ok=false;
			}
			_iter_next_1abac3719:;
			++it;
			goto _iter_begin_1abac3719;
		}
		_iter_end_1abac3719:;
	};
	return _52767_ok;
}



inline jule::Bool _1be34d27d_is_use_alias_duplication(_1be348311_Sema* _self_, jule::Ptr<_1be272d40_ImportInfo>& _59444_imp) {
	if ((_59444_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abad0a89:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _59921_imp2 = *it;
			{
				if ((_59921_imp2 == _59444_imp)) {
					goto _iter_end_1abad0a89;
				};
				if ((_59921_imp2.get()._field_alias == _59444_imp.get()._field_alias)) {
					return true;
				};
				if (((_59921_imp2.get()._field_ident == _59921_imp2.get()._field_link_path) && (_59921_imp2.get()._field_ident == _59444_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1abad0a89:;
			++it;
			goto _iter_begin_1abad0a89;
		}
		_iter_end_1abad0a89:;
	};
	return false;
}



inline jule::Bool _1be34d59c_check_import(_1be348311_Sema* _self_, jule::Ptr<_1be272d40_ImportInfo>& _61536_imp) {
	if ((_61536_imp.get()._field_cpp_linked || (_61536_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1be34d27d_is_use_alias_duplication(&(*_self_), _61536_imp)) {
		_1be34aec3_push_err(&(*_self_), _61536_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_61536_imp.get()._field_alias)}));
		_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_61536_imp.get()._field_duplicate))) {
		jule::Ptr<_1be348311_Sema> _62621_sema = jule::new_ptr<_1be348311_Sema>(_1be348311_Sema{._field_flags=(*_self_)._field_flags});;
		_1be3605d1_check(_62621_sema, _61536_imp.get()._field_package.get()._field_files);
		if ((_62621_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_62621_sema.get()._field_errors);
			_62621_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1be34ce3c_check_import_selections(&(*_self_), _61536_imp);
}



inline void _1be34d778_check_imports(_1be348311_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1abad484b:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _64021_file = *it;
			{
				_1be34ab0a_set_current_file(&(*_self_), _64021_file);
				{
					auto &expr = _64021_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1abad7684:;
					if (it != expr.end()) {
						jule::Ptr<_1be272d40_ImportInfo> _64325_imp = *it;
						{
							jule::Bool _64421_ok = _1be34d59c_check_import(&(*_self_), _64325_imp);;
							if ((!(_64421_ok))) {
								_1be34aec3_push_err(&(*_self_), _64325_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_64325_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1abad7684:;
						++it;
						goto _iter_begin_1abad7684;
					}
					_iter_end_1abad7684:;
				};
			}
			_iter_next_1abad484b:;
			++it;
			goto _iter_begin_1abad484b;
		}
		_iter_end_1abad484b:;
	};
}



inline void _1be34d954_impl_file_impls(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1abad73ed:;
		if (it != expr.end()) {
			jule::Ptr<_1bcac892d_Impl> _65621_imp = *it;
			{
				_1be3577c6_impl_impl(_self_, _65621_imp);
			}
			_iter_next_1abad73ed:;
			++it;
			goto _iter_begin_1abad73ed;
		}
		_iter_end_1abad73ed:;
	};
}



inline void _1be34db30_impl_impls(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abad99e9:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _66221_file = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _66221_file);
				_1be34d954_impl_file_impls(_self_);
			}
			_iter_next_1abad99e9:;
			++it;
			goto _iter_begin_1abad99e9;
		}
		_iter_end_1abad99e9:;
	};
}



inline void _1be34dd0b_check_enums(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abae0ed9:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _66921_file = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _66921_file);
				_1be354cac_check_enum_decls(_self_);
			}
			_iter_next_1abae0ed9:;
			++it;
			goto _iter_begin_1abae0ed9;
		}
		_iter_end_1abae0ed9:;
	};
}



inline jule::Bool _1be34e25c_check_type_with_refers(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be3d86c0_TypeSymbol>& _67747_t, jule::Trait<_1be3eedce_Lookup> _67813_l, jule::Ptr<_1be3e1a4c_Referencer> _67828_referencer) {
	jule::Bool _67855_ok = jule::Bool();
	if (_1be3d8abb_checked(_67747_t.ptr())) {
		_67855_ok = true;
		return _67855_ok;
	};
	_1be3e2795_TypeChecker _68217_tc = _1be3e2795_TypeChecker{._field_s=_self_, ._field_lookup=_67813_l, ._field_referencer=_67828_referencer, };;
	{
		auto &_match_expr{ _67813_l };
		
		if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abae3151:;
			{
				jule::Ptr<_1be25aee3_ScopeChecker> _69021_hard = _1be25e36a_get_hard_root(_67813_l.operator jule::Ptr<_1be25aee3_ScopeChecker>());;
				_68217_tc._field_refers=_69021_hard.get()._field_owner.get()._field_refers;
			}
		}
		_match_end_1abae30c9:;
	};
	if (((_67828_referencer != nullptr) && (_67828_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _67828_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
				_case_begin_1abae45b4:;
				{
					_68217_tc._field_owner_alias=_67828_referencer.get()._field_owner.operator jule::Ptr<_1be3d3874_TypeAlias>();
				}
			}
			_match_end_1abae455e:;
		};
	};
	_1be3e9c86_check(&_68217_tc, _67747_t);
	_67855_ok = _1be3d8abb_checked(_67747_t.ptr());
	return _67855_ok;
}



inline jule::Bool _1be34e614_check_type(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be3d86c0_TypeSymbol>& _71035_t, jule::Trait<_1be3eedce_Lookup> _71055_l) {
	return _1be34e25c_check_type_with_refers(_self_, _71035_t,_71055_l,nullptr);
}



inline jule::Ptr<_1be3d45ab_TypeKind> _1be34ea87_build_type_with_generics(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d709023d_TypeDecl>& _71649_t, jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _71713_generics, jule::Ptr<_1bc9cb402_ReferenceStack> _71741_refers) {
	jule::Ptr<_1be3e2795_TypeChecker> _71817_tc = jule::new_ptr<_1be3e2795_TypeChecker>(_1be3e2795_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1be3eedce_Lookup>(_self_, 3), ._field_refers=_71741_refers, ._field_use_generics=_71713_generics, });;
	return _1be3e9a11_check_decl(_71817_tc.ptr(), _71649_t);
}



inline jule::Ptr<_1be3d45ab_TypeKind> _1be34eda6_build_type(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d709023d_TypeDecl>& _72835_t) {
	return _1be34ea87_build_type_with_generics(_self_, _72835_t,nullptr,nullptr);
}



inline jule::Ptr<_1be3d45ab_TypeKind> _1be3501b4_select_type(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d709023d_TypeDecl>& _73336_t) {
	jule::Ptr<_1be3e2795_TypeChecker> _73417_tc = jule::new_ptr<_1be3e2795_TypeChecker>(_1be3e2795_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1be3eedce_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1be3e9a11_check_decl(_73417_tc.ptr(), _73336_t);
}



inline jule::Ptr<_1be3aad57_Eval> _1be350615_evalpd(jule::Ptr<_1be348311_Sema> _self_, jule::Trait<_1be3eedce_Lookup> _74430_l, jule::Ptr<_1be3d45ab_TypeKind> _74445_p, jule::Ptr<_1be36365b_Var> _74463_owner) {
	jule::Ptr<_1be3aad57_Eval> _74517_e = jule::new_ptr<_1be3aad57_Eval>(_1be3aad57_Eval{._field_s=_self_, ._field_lookup=_74430_l, ._field_owner=_74463_owner, });;
	{
		auto &_match_expr{ _74430_l };
		
		if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abaea6a8:;
			{
				_74517_e.get()._field_unsafety=_1be25d479_is_unsafe(_74430_l.operator jule::Ptr<_1be25aee3_ScopeChecker>());
			}
		}
		_match_end_1abaea653:;
	};
	_74517_e.get()._field_prefix=_74445_p;
	return _74517_e;
}



inline jule::Ptr<_1be3aad57_Eval> _1be3509bc_evalp(jule::Ptr<_1be348311_Sema> _self_, jule::Trait<_1be3eedce_Lookup> _76229_l, jule::Ptr<_1be3d45ab_TypeKind> _76244_p) {
	return _1be350615_evalpd(_self_, _76229_l,_76244_p,nullptr);
}



inline jule::Ptr<_1be3aad57_Eval> _1be350cca_eval(jule::Ptr<_1be348311_Sema> _self_, jule::Trait<_1be3eedce_Lookup> _76728_l) {
	return _1be3509bc_evalp(_self_, _76728_l,nullptr);
}



inline jule::Bool _1be3512c5_check_assign_type(jule::Ptr<_1be348311_Sema> _self_, jule::Bool _77137_dest_is_ref, jule::Ptr<_1be3d45ab_TypeKind>& _77161_dest, jule::Ptr<_1be3a92d9_Data>& _77214_d, jule::Ptr<_20201c3d1_Token> _77228_error_token) {
	if (_77214_d.get()._field_decl) {
		_1be34aec3_push_err(_self_.ptr(), _77228_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77137_dest_is_ref) {
		if ((!(_1be3d4c71_equals(_77161_dest, _77214_d.get()._field_kind)))) {
			_1be34aec3_push_err(_self_.ptr(), _77228_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_77161_dest.ptr())),jule::Any(_1be3d4963_to_str(_77214_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1be396826_AssignTypeChecker> _78321_atc = jule::new_ptr<_1be396826_AssignTypeChecker>(_1be396826_AssignTypeChecker{._field_s=_self_, ._field_dest=_77161_dest, ._field_d=_77214_d, ._field_error_token=_77228_error_token});;
		jule::Bool _78917_ok = _1be39799d_check(_78321_atc.ptr());;
		if ((!(_78917_ok))) {
			return false;
		};
	};
	if (((!(_1be3a9b9c_is_const(_77214_d.ptr()))) || (_1be3d6679_prim(_77161_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79917_kind = _1be3d6679_prim(_77161_dest.ptr()).get()._field_kind;;
	{
		
		if (_1be2572db_is_sig_int(_79917_kind)) {
			_case_begin_1abb02638:;
			{
				_1be1b49c9_set_i64(_77214_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_77214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1be2575c7_is_unsig_int(_79917_kind)) {
			_case_begin_1abb026b0:;
			{
				_1be1b4c4e_set_u64(_77214_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_77214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1be257b8d_is_float(_79917_kind)) {
			_case_begin_1abb02737:;
			{
				_1be1b54be_set_f64(_77214_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1be1b4754_as_f64(_77214_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1abb0256c:;
	};
	return true;
}



inline jule::Bool _1be351748_check_type_compatibility(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be3d45ab_TypeKind>& _81349_dest, jule::Ptr<_1be3d45ab_TypeKind>& _81414_src, jule::Ptr<_20201c3d1_Token>& _81435_error_token) {
	if ((_81414_src == nullptr)) {
		_1be34aec3_push_err(_self_.ptr(), _81435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_81349_dest.ptr())),jule::Any(_1be3d4963_to_str(_81414_src.ptr()))}));
		return false;
	};
	if ((_1be3d8318_tup(_81414_src.ptr()) != nullptr)) {
		_1be34aec3_push_err(_self_.ptr(), _81435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_81349_dest.ptr())),jule::Any(_1be3d4963_to_str(_81414_src.ptr()))}));
		return false;
	};
	_1be394bed_TypeCompatibilityChecker _82817_tcc = _1be394bed_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_81349_dest, ._field_src=_81414_src, ._field_error_token=_81435_error_token};;
	if (_1be3962d7_check(&_82817_tcc)) {
		return true;
	};
	_1be34aec3_push_err(_self_.ptr(), _81435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_81349_dest.ptr())),jule::Any(_1be3d4963_to_str(_81414_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1be3d45ab_TypeKind> _1be351b33_build_non_generic_type_kind(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d709023d_TypeDecl>& _84952_ast, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>& _85014_generics) {
	jule::Ptr<_1be3e2795_TypeChecker> _85117_tc = jule::new_ptr<_1be3e2795_TypeChecker>(_1be3e2795_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1be3eedce_Lookup>(_self_, 3), ._field_ignore_generics=_85014_generics, });;
	return _1be3e9a11_check_decl(_85117_tc.ptr(), _84952_ast);
}



inline void _1be351ddb_build_fn_non_generic_type_kinds(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _85956_f) {
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _86017_generics = nullptr;;
	if (_1d70615d8_is_method(_85956_f.get()._field_decl.ptr())) {
		_86017_generics=jule::append(_85956_f.get()._field_decl.get()._field_generics,_85956_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_86017_generics=_85956_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _85956_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abb0aa4d:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9a60_ParamIns> _86721_p = *it;
			{
				if ((!(_1d708990d_is_self(_86721_p.get()._field_decl.ptr())))) {
					_86721_p.get()._field_kind=_1be351b33_build_non_generic_type_kind(_self_, _86721_p.get()._field_decl.get()._field_kind.get()._field_decl,_86017_generics);
				};
			}
			_iter_next_1abb0aa4d:;
			++it;
			goto _iter_begin_1abb0aa4d;
		}
		_iter_end_1abb0aa4d:;
	};
	if ((!(_1d70884de_is_void(_85956_f.get()._field_decl.ptr())))) {
		_85956_f.get()._field_result=_1be351b33_build_non_generic_type_kind(_self_, _85956_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86017_generics);
	};
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1be35222c_get_trait_check_fn_kind(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9873_Fn>& _87748_f) {
	if ((_87748_f.get()._field_instances.len() == 1LL)) {
		return _87748_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _88117_ins = _1d707cbba_instance_force(_87748_f);;
	jule::Ptr<_1be3e2795_TypeChecker> _88317_tc = jule::new_ptr<_1be3e2795_TypeChecker>(_1be3e2795_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1be3eedce_Lookup>(_self_, 3), });;
	{
		auto &expr = _88117_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abb10613:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9a60_ParamIns> _88721_p = *it;
			{
				if ((!(_1d708990d_is_self(_88721_p.get()._field_decl.ptr())))) {
					_88721_p.get()._field_kind=_1be3e9a11_check_decl(_88317_tc.ptr(), _88721_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1abb10613:;
			++it;
			goto _iter_begin_1abb10613;
		}
		_iter_end_1abb10613:;
	};
	if ((!(_1d70884de_is_void(_87748_f.ptr())))) {
		_88117_ins.get()._field_result=_1be3e9a11_check_decl(_88317_tc.ptr(), _87748_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _88117_ins;
}



inline jule::Bool _1be35254b_reload_fn_ins_types(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _89944_f) {
	jule::Bool _89957_ok = jule::Bool();
	if ((_1d707b559_is_builtin(_89944_f.ptr()) || _1d70812b7_is_anon(_89944_f.ptr()))) {
		_89957_ok = true;
		return _89957_ok;
	};
	jule::Ptr<_1be348311_Sema> _90417_sema = _89944_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1be3a4339_SymbolTable> _90617_old = _89944_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1be34ab0a_set_current_file(_89944_f.get()._field_decl.get()._field_sema.ptr(), _90617_old);
	});;
	jule::Ptr<_1be3a4339_SymbolTable> _90817_file = _1be34791a_find_file(_89944_f.get()._field_decl.get()._field_sema.get()._field_files,_89944_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_90817_file != nullptr)) {
		_1be34ab0a_set_current_file(_89944_f.get()._field_decl.get()._field_sema.ptr(), _90817_file);
	};
	jule::I64 _91317_size = _89944_f.get()._field_generics.len();;
	if (((_89944_f.get()._field_decl != nullptr) && (_89944_f.get()._field_decl.get()._field_owner != nullptr))) {
		_91317_size+=_89944_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _91817_generics = jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>::alloc(0LL,_91317_size);;
	{
		auto &expr = _89944_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1abb1774c:;
		if (it != expr.end()) {
			jule::I64 _92014_i = it - expr.begin();
			jule::Ptr<_1be3d45ab_TypeKind> _92021_g = *it;
			{
				_91817_generics = jule::alloc_for_append(_91817_generics,1);_91817_generics.__push(jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_ident=_89944_f.get()._field_decl.get()._field_generics[_92014_i].get()._field_ident, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_92021_g}), }));;
			}
			_iter_next_1abb1774c:;
			++it;
			_92014_i++;
			goto _iter_begin_1abb1774c;
		}
		_iter_end_1abb1774c:;
	};
	if (((_89944_f.get()._field_decl != nullptr) && (_89944_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1d70ab9c9_StructIns> _93021_owner = _89944_f.get()._field_owner;;
		{
			auto &expr = _93021_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1abb19430:;
			if (it != expr.end()) {
				jule::I64 _93118_i = it - expr.begin();
				jule::Ptr<_1be3d45ab_TypeKind> _93125_g = *it;
				{
					_91817_generics = jule::alloc_for_append(_91817_generics,1);_91817_generics.__push(jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_ident=_93021_owner.get()._field_decl.get()._field_generics[_93118_i].get()._field_ident, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_93125_g}), }));;
				}
				_iter_next_1abb19430:;
				++it;
				_93118_i++;
				goto _iter_begin_1abb19430;
			}
			_iter_end_1abb19430:;
		};
	};
	_89957_ok=true;
	{
		auto &expr = _89944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abb19ead:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9a60_ParamIns> _94221_p = *it;
			{
				if (_1d708990d_is_self(_94221_p.get()._field_decl.ptr())) {
					if (_1d7061462_is_ref(_94221_p.get()._field_decl.ptr())) {
						_94221_p.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dc592_Sptr>(_1be3dc592_Sptr{._field_elem=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_89944_f.get()._field_owner, 0)})}), 7)});
					} else {
						_94221_p.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_89944_f.get()._field_owner, 0)});
					};
				} else {
					_94221_p.get()._field_kind=_1be34ea87_build_type_with_generics(_90417_sema, _94221_p.get()._field_decl.get()._field_kind.get()._field_decl,_91817_generics,_89944_f.get()._field_refers);
					if ((_94221_p.get()._field_kind != nullptr)) {
						_94221_p.get()._field_kind.get()._field_variadic=_94221_p.get()._field_decl.get()._field_variadic;
						if ((_94221_p.get()._field_decl.get()._field_reference && (!(_1be3eb826_is_valid_for_ref(_94221_p.get()._field_kind))))) {
							_1be34aec3_push_err(_self_.ptr(), _94221_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_94221_p.get()._field_kind.ptr()))}));
						};
					} else {
						_89957_ok=false;
					};
				};
			}
			_iter_next_1abb19ead:;
			++it;
			goto _iter_begin_1abb19ead;
		}
		_iter_end_1abb19ead:;
	};
	if ((!(_1d70884de_is_void(_89944_f.get()._field_decl.ptr())))) {
		_89944_f.get()._field_result=_1be34ea87_build_type_with_generics(_90417_sema, _89944_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_91817_generics,_89944_f.get()._field_refers);
		_89957_ok=((_89944_f.get()._field_result != nullptr) && _89957_ok);
	};
	if ((_90417_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_90417_sema.get()._field_errors);
		_90417_sema.get()._field_errors=nullptr;
	};
	return _89957_ok;
}



inline jule::Bool _1be3529d0_check_ref_validity_for_init_expr(jule::Ptr<_1be348311_Sema> _self_, jule::Bool _98352_left_mut, jule::Ptr<_1be3a92d9_Data>& _98373_d, jule::Ptr<_20201c3d1_Token>& _98388_error_token) {
	{
		auto &_match_expr{ _98373_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1abb233e5:;
			{
				goto _match_end_1abb2313c;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>>()) {
			_case_begin_1abb2345b:;
			{
				jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel> _98821_model = _98373_d.get()._field_model.operator jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>();;
				if ((!(_1be346452_is_valid_model_for_ref(_98821_model.get()._field_expr)))) {
					_1be34aec3_push_err(_self_.ptr(), _98388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_98821_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1abb234c2:;
			{
				jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _99421_model = _98373_d.get()._field_model.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>();;
				if ((!(_1be346452_is_valid_model_for_ref(_99421_model.get()._field_expr.get()._field_model)))) {
					_1be34aec3_push_err(_self_.ptr(), _98388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_99421_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c68b4_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>>()) {
			_case_begin_1abb23d41:;
			{
				_1be34aec3_push_err(_self_.ptr(), _98388_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c45c6_UnaryExprModel>>()) {
			_case_begin_1abb23da7:;
			{
				jule::Ptr<_1bc9c45c6_UnaryExprModel> _100421_unary = _98373_d.get()._field_model.operator jule::Ptr<_1bc9c45c6_UnaryExprModel>();;
				if ((_100421_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1be346452_is_valid_model_for_ref(_98373_d.get()._field_model)))) {
						_1be34aec3_push_err(_self_.ptr(), _98388_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1abb2313c;
				};
				goto _case_begin_1abb232d5;
			}
		}
		else {
			_case_begin_1abb232d5:;
			{
				_1be34aec3_push_err(_self_.ptr(), _98388_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1abb2313c:;
	};
	if ((_98352_left_mut && (!(_98373_d.get()._field_mutable)))) {
		_1be34aec3_push_err(_self_.ptr(), _98388_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1be3530c9_check_validity_for_init_expr(jule::Ptr<_1be348311_Sema> _self_, jule::Bool _102548_left_mut, jule::Bool _102564_left_ref, jule::Ptr<_1be3d45ab_TypeKind>& _102610_left_kind, jule::Ptr<_1be3a92d9_Data>& _102637_d, jule::Ptr<_20201c3d1_Token>& _102652_error_token) {
	if (((_102548_left_mut && (!(_102637_d.get()._field_mutable))) && _1be3d5964_mutable(_102637_d.get()._field_kind.ptr()))) {
		_1be34aec3_push_err(_self_.ptr(), _102652_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_102637_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_102564_left_ref) {
		if ((!(_1be3529d0_check_ref_validity_for_init_expr(_self_, _102548_left_mut,_102637_d,_102652_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1be396826_AssignTypeChecker> _103717_atc = jule::new_ptr<_1be396826_AssignTypeChecker>(_1be396826_AssignTypeChecker{._field_s=_self_, ._field_d=_102637_d, ._field_error_token=_102652_error_token});;
	return _1be396eec_check_validity(_103717_atc.ptr());
}



inline jule::Bool _1be353481_check_type_alias_decl_kind(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be3d3874_TypeAlias>& _104551_ta, jule::Trait<_1be3eedce_Lookup> _104571_l) {
	jule::Bool _104584_ok = jule::Bool();
	jule::Ptr<_1be3a4339_SymbolTable> _104617_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1be34ab0a_set_current_file(_self_.ptr(), _104617_old);
	});;
	if ((_104551_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1be3a4339_SymbolTable> _105121_file = _1be34791a_find_file(_self_.get()._field_files,_104551_ta.get()._field_token.get()._field_file);;
		if ((_105121_file != nullptr)) {
			_1be34ab0a_set_current_file(_self_.ptr(), _105121_file);
		};
	};
	_104584_ok=_1be34e25c_check_type_with_refers(_self_, _104551_ta.get()._field_kind,_104571_l,jule::new_ptr<_1be3e1a4c_Referencer>(_1be3e1a4c_Referencer{._field_ident=_104551_ta.get()._field_ident, ._field_owner=jule::Any(_104551_ta), ._field_refs=(&(_104551_ta.get()._field_refers))}));
	if (((_104584_ok && (_1be3d738e_arr(_104551_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1be3d738e_arr(_104551_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1be34aec3_push_err(_self_.ptr(), _104551_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_104584_ok=false;
	};
	return _104584_ok;
}



inline void _1be3537b1_check_type_alias_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be3d3874_TypeAlias>& _106846_ta, jule::Trait<_1be3eedce_Lookup> _106866_l) {
	if (_20201eb75_is_ignore_ident(_106846_ta.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _106846_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1be353481_check_type_alias_decl_kind(_self_, _106846_ta,_106866_l);
}



inline void _1be353a58_check_type_alias_decl_dup(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be3d3874_TypeAlias>& _107650_ta) {
	if (_20201eb75_is_ignore_ident(_107650_ta.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _107650_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_107650_ta)),_107650_ta.get()._field_ident,_107650_ta.get()._field_cpp_linked)) {
		_1be34aec3_push_err(_self_.ptr(), _107650_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_107650_ta.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1be353481_check_type_alias_decl_kind(_self_, _107650_ta,jule::Trait<_1be3eedce_Lookup>(_self_, 3));
}



inline jule::Bool _1be353ccd_check_type_alias_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _108844_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1abb37b8a:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d3874_TypeAlias> _108921_ta = *it;
			{
				_1be353a58_check_type_alias_decl_dup(_self_, _108921_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_108844_ok = false;
					return _108844_ok;
				};
			}
			_iter_next_1abb37b8a:;
			++it;
			goto _iter_begin_1abb37b8a;
		}
		_iter_end_1abb37b8a:;
	};
	_108844_ok = true;
	return _108844_ok;
}



inline void _1abb4a571_check_enum_items_dup(_1be348311_Sema* _self_, jule::Slice<jule::Ptr<_1bcb66966_EnumItem>> _110042_items) {
	{
		auto &expr = _110042_items;
		auto it = expr.begin();
		_iter_begin_1abb4b9d4:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb66966_EnumItem> &_110116_item = *it;
			{
				if (_110116_item.get()._field_ident.empty()) {
					goto _iter_next_1abb4b9d4;
				} else if (_20201eb75_is_ignore_ident(_110116_item.get()._field_ident)) {
					_1be34aec3_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110042_items;
						auto it = expr.begin();
						_iter_begin_1abb4c9d5:;
						if (it != expr.end()) {
							jule::Ptr<_1bcb66966_EnumItem> &_110724_citem = *it;
							{
								if ((_110116_item == _110724_citem)) {
									goto _iter_end_1abb4c9d5;
								} else if ((_110116_item.get()._field_ident == _110724_citem.get()._field_ident)) {
									_1be34aec3_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110116_item.get()._field_ident)}));
									_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1abb4c9d5;
								};
							}
							_iter_next_1abb4c9d5:;
							++it;
							goto _iter_begin_1abb4c9d5;
						}
						_iter_end_1abb4c9d5:;
					};
				};
			}
			_iter_next_1abb4b9d4:;
			++it;
			goto _iter_begin_1abb4b9d4;
		}
		_iter_end_1abb4b9d4:;
	};
}

inline void _1abb5713d_check_enum_items_dup(_1be348311_Sema* _self_, jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>> _110042_items) {
	{
		auto &expr = _110042_items;
		auto it = expr.begin();
		_iter_begin_1abb58518:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb58ddc_TypeEnumItem> &_110116_item = *it;
			{
				if (_110116_item.get()._field_ident.empty()) {
					goto _iter_next_1abb58518;
				} else if (_20201eb75_is_ignore_ident(_110116_item.get()._field_ident)) {
					_1be34aec3_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110042_items;
						auto it = expr.begin();
						_iter_begin_1abb59519:;
						if (it != expr.end()) {
							jule::Ptr<_1bcb58ddc_TypeEnumItem> &_110724_citem = *it;
							{
								if ((_110116_item == _110724_citem)) {
									goto _iter_end_1abb59519;
								} else if ((_110116_item.get()._field_ident == _110724_citem.get()._field_ident)) {
									_1be34aec3_push_err(&(*_self_), _110116_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110116_item.get()._field_ident)}));
									_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1abb59519;
								};
							}
							_iter_next_1abb59519:;
							++it;
							goto _iter_begin_1abb59519;
						}
						_iter_end_1abb59519:;
					};
				};
			}
			_iter_next_1abb58518:;
			++it;
			goto _iter_begin_1abb58518;
		}
		_iter_end_1abb58518:;
	};
}



inline void _1be3542c8_check_enum_items_str(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9dceb3_Enum>& _112045_e) {
	jule::Ptr<_1be3aad57_Eval> _112117_eval = _1be350cca_eval(_self_, jule::Trait<_1be3eedce_Lookup>(_self_, 3));;
	{
		auto &expr = _112045_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abb39ae3:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb66966_EnumItem> _112221_item = *it;
			{
				if (_1bca8383e_auto_expr(_112221_item.ptr())) {
					_112221_item.get()._field_value=jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_data=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_constant=static__1be1b29c7_new_str(_112221_item.get()._field_ident)})});
					_112221_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_112221_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1be3a92d9_Data> _113125_d = _1be3c612a_eval_expr(_112117_eval, _112221_item.get()._field_value.get()._field_expr);;
					if ((_113125_d == nullptr)) {
						goto _iter_next_1abb39ae3;
					};
					if ((!(_1be3a9b9c_is_const(_113125_d.ptr())))) {
						_1be34aec3_push_err(_self_.ptr(), _112221_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1be3512c5_check_assign_type(_self_, false,_112045_e.get()._field_kind.get()._field_kind,_113125_d,_112221_item.get()._field_token);
					_112221_item.get()._field_value.get()._field_data=_113125_d;
				};
			}
			_iter_next_1abb39ae3:;
			++it;
			goto _iter_begin_1abb39ae3;
		}
		_iter_end_1abb39ae3:;
	};
}



inline void _1be35454d_check_enum_items_int(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9dceb3_Enum>& _114645_e) {
	jule::Ptr<_1be3d9083_Prim> _114713_prim = _1be3d6679_prim(_114645_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _114817_max = static_cast<jule::U64>(_1be252490_max(_1be3d93e6_to_str(_114713_prim.ptr())));;
	jule::Ptr<_1be3aad57_Eval> _114917_eval = _1be350cca_eval(_self_, jule::Trait<_1be3eedce_Lookup>(_self_, 3));;
	{
		auto &expr = _114645_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abb402d0:;
		if (it != expr.end()) {
			jule::I64 _115014_i = it - expr.begin();
			jule::Ptr<_1bcb66966_EnumItem> _115021_item = *it;
			{
				if ((_114817_max == 0LLU)) {
					_1be34aec3_push_err(_self_.ptr(), _115021_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_114817_max)--;
				};
				if (_1bca8383e_auto_expr(_115021_item.ptr())) {
					_115021_item.get()._field_value=jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_data=jule::new_ptr<_1be3a92d9_Data>()});
					{
						
						if (_1be2572db_is_sig_int(_1be3d93e6_to_str(_114713_prim.ptr()))) {
							_case_begin_1abb42cb6:;
							{
								_115021_item.get()._field_value.get()._field_data.get()._field_constant=static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_114817_max - (_114817_max - static_cast<jule::U64>(_115014_i))))));
							}
						}
						else {
							_case_begin_1abb42920:;
							{
								_115021_item.get()._field_value.get()._field_data.get()._field_constant=static__1be1b2664_new_u64(static_cast<jule::U64>((_114817_max - (_114817_max - static_cast<jule::U64>(_115014_i)))));
							}
						}
						_match_end_1abb428a9:;
					};
					_115021_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_115021_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1be3a92d9_Data> _116825_d = _1be3c612a_eval_expr(_114917_eval, _115021_item.get()._field_value.get()._field_expr);;
					if ((_116825_d == nullptr)) {
						goto _iter_next_1abb402d0;
					};
					if ((!(_1be3a9b9c_is_const(_116825_d.ptr())))) {
						_1be34aec3_push_err(_self_.ptr(), _115021_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1be3512c5_check_assign_type(_self_, false,_114645_e.get()._field_kind.get()._field_kind,_116825_d,_115021_item.get()._field_token);
					_115021_item.get()._field_value.get()._field_data=_116825_d;
				};
			}
			_iter_next_1abb402d0:;
			++it;
			_115014_i++;
			goto _iter_begin_1abb402d0;
		}
		_iter_end_1abb402d0:;
	};
}



inline void _1be3547c3_check_enum_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9dceb3_Enum>& _118340_e) {
	if (_20201eb75_is_ignore_ident(_118340_e.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_118340_e)),_118340_e.get()._field_ident,false)) {
		_1be34aec3_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_118340_e.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_118340_e.get()._field_items.len() == 0LL)) {
		_1be34aec3_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_118340_e.get()._field_ident)}));
	};
	_1abb4a571_check_enum_items_dup(_self_.ptr(), _118340_e.get()._field_items);
	if ((_118340_e.get()._field_kind != nullptr)) {
		if ((!(_1be34e614_check_type(_self_, _118340_e.get()._field_kind,jule::Trait<_1be3eedce_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_118340_e.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1be3d9083_Prim> _121017_t = _1be3d6679_prim(_118340_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_121017_t == nullptr)) {
		_1be34aec3_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1be3dc042_is_str(_121017_t.ptr())) {
			_case_begin_1abb524ce:;
			{
				_1be3542c8_check_enum_items_str(_self_, _118340_e);
			}
		}
		else if (_1be25786e_is_int(_1be3d93e6_to_str(_121017_t.ptr()))) {
			_case_begin_1abb52226:;
			{
				_1be35454d_check_enum_items_int(_self_, _118340_e);
			}
		}
		else {
			_case_begin_1abb515ee:;
			{
				_1be34aec3_push_err(_self_.ptr(), _118340_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abb51445:;
	};
}



inline void _1be354a48_check_type_enum_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bd9c99a4_TypeEnum>& _122745_e) {
	if (_20201eb75_is_ignore_ident(_122745_e.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _122745_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122745_e)),_122745_e.get()._field_ident,false)) {
		_1be34aec3_push_err(_self_.ptr(), _122745_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122745_e.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122745_e.get()._field_items.len() == 0LL)) {
		_1be34aec3_push_err(_self_.ptr(), _122745_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122745_e.get()._field_ident)}));
		return;;
	};
	_1abb5713d_check_enum_items_dup(_self_.ptr(), _122745_e.get()._field_items);
	{
		auto &expr = _122745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abb53da4:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb58ddc_TypeEnumItem> _124121_item = *it;
			{
				if ((_124121_item.get()._field_kind == nullptr)) {
					_1be34aec3_push_err(_self_.ptr(), _124121_item.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1abb53da4;
				};
				jule::Bool _124617_ok = _1be34e614_check_type(_self_, _124121_item.get()._field_kind,jule::Trait<_1be3eedce_Lookup>(_self_, 3));;
				if ((!(_124617_ok))) {
					goto _iter_next_1abb53da4;
				};
				jule::Ptr<_1be3d9083_Prim> _125017_p = _1be3d6679_prim(_124121_item.get()._field_kind.get()._field_kind.ptr());;
				if (((_125017_p != nullptr) && _1be3dc2a6_is_any(_125017_p.ptr()))) {
					_1be34aec3_push_err(_self_.ptr(), _124121_item.get()._field_token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1abb53da4:;
			++it;
			goto _iter_begin_1abb53da4;
		}
		_iter_end_1abb53da4:;
	};
	if ((_122745_e.get()._field_items.len() == 1LL)) {
		jule::Ptr<_1bcb58ddc_TypeEnumItem> _125621_item = _122745_e.get()._field_items[0LL];;
		_1be3d45ab_TypeKind _125717_tk = _1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_122745_e, 4)};;
		if (((_125621_item.get()._field_kind.get()._field_kind != nullptr) && _1be3d4c71_equals(_125621_item.get()._field_kind.get()._field_kind, ((jule::Ptr<_1be3d45ab_TypeKind>)((&(_125717_tk))))))) {
			_1be34aec3_push_err(_self_.ptr(), _125621_item.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1bcc49b37_to_str(_122745_e.ptr()))}));
		};
	};
}



inline jule::Bool _1be354cac_check_enum_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _126738_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1abb62313:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9dceb3_Enum> _126821_e = *it;
			{
				_1be3547c3_check_enum_decl(_self_, _126821_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_126738_ok = false;
					return _126738_ok;
				};
			}
			_iter_next_1abb62313:;
			++it;
			goto _iter_begin_1abb62313;
		}
		_iter_end_1abb62313:;
	};
	_126738_ok = true;
	return _126738_ok;
}



inline jule::Bool _1be355021_check_type_enum_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _128043_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1abb63a84:;
		if (it != expr.end()) {
			jule::Ptr<_1bd9c99a4_TypeEnum> _128121_e = *it;
			{
				_1be354a48_check_type_enum_decl(_self_, _128121_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128043_ok = false;
					return _128043_ok;
				};
			}
			_iter_next_1abb63a84:;
			++it;
			goto _iter_begin_1abb63a84;
		}
		_iter_end_1abb63a84:;
	};
	_128043_ok = true;
	return _128043_ok;
}



inline jule::Bool _1be35532e_check_decl_generics(_1be348311_Sema* _self_, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>& _129239_generics) {
	jule::Bool _129272_ok = jule::Bool();
	_129272_ok=true;
	{
		auto &expr = _129239_generics;
		auto it = expr.begin();
		_iter_begin_1abb65459:;
		if (it != expr.end()) {
			jule::I64 _129413_i = it - expr.begin();
			jule::Ptr<_1d709c536_GenericDecl> &_129416_g = *it;
			{
				if (_20201eb75_is_ignore_ident(_129416_g.get()._field_ident)) {
					_1be34aec3_push_err(&(*_self_), _129416_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129272_ok=false;
					goto _iter_next_1abb65459;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _129239_generics;
					auto it = expr.begin();
					_iter_begin_1abb665d1:;
					if (it != expr.end()) {
						jule::I64 _130317_j = it - expr.begin();
						jule::Ptr<_1d709c536_GenericDecl> &_130320_ct = *it;
						{
							{
								
								if ((_130317_j >= _129413_i)) {
									_case_begin_1abb6800b:;
									{
										goto _iter_end_1abb665d1;
									}
								}
								else if ((_129416_g.get()._field_ident == _130320_ct.get()._field_ident)) {
									_case_begin_1abb68083:;
									{
										_1be34aec3_push_err(&(*_self_), _129416_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129416_g.get()._field_ident)}));
										_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129272_ok=false;
										goto _iter_end_1abb665d1;
									}
								}
								_match_end_1abb67dda:;
							};
						}
						_iter_next_1abb665d1:;
						++it;
						_130317_j++;
						goto _iter_begin_1abb665d1;
					}
					_iter_end_1abb665d1:;
				};
			}
			_iter_next_1abb65459:;
			++it;
			_129413_i++;
			goto _iter_begin_1abb65459;
		}
		_iter_end_1abb65459:;
	};
	return _129272_ok;
}



inline jule::Bool _1be35565e_check_fn_decl_params_dup(_1be348311_Sema* _self_, jule::Ptr<_1bc9c9873_Fn>& _131944_f) {
	jule::Bool _131954_ok = jule::Bool();
	_131954_ok=true;
	_julec_label_check:;
	{
		auto &expr = _131944_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abb6a629:;
		if (it != expr.end()) {
			jule::I64 _132213_i = it - expr.begin();
			jule::Ptr<_1bc9c9686_Param> &_132216_p = *it;
			{
				{
					auto &expr = _131944_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1abb6b394:;
					if (it != expr.end()) {
						jule::Ptr<_1d709c536_GenericDecl> &_132420_g = *it;
						{
							if ((_132216_p.get()._field_ident == _132420_g.get()._field_ident)) {
								_131954_ok=false;
								_1be34aec3_push_err(&(*_self_), _132216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132216_p.get()._field_ident)}));
								_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1abb6a629;
							};
						}
						_iter_next_1abb6b394:;
						++it;
						goto _iter_begin_1abb6b394;
					}
					_iter_end_1abb6b394:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _131944_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1abb6b828:;
					if (it != expr.end()) {
						jule::I64 _133417_j = it - expr.begin();
						jule::Ptr<_1bc9c9686_Param> &_133420_jp = *it;
						{
							{
								
								if ((_133417_j >= _132213_i)) {
									_case_begin_1abb6dd47:;
									{
										goto _iter_end_1abb6b828;
									}
								}
								else if ((_20201ee1c_is_anon_ident(_132216_p.get()._field_ident) || _20201ee1c_is_anon_ident(_133420_jp.get()._field_ident))) {
									_case_begin_1abb6ddbe:;
									{
										goto _iter_end_1abb6b828;
									}
								}
								else if ((_132216_p.get()._field_ident == _133420_jp.get()._field_ident)) {
									_case_begin_1abb6de46:;
									{
										_131954_ok=false;
										_1be34aec3_push_err(&(*_self_), _132216_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132216_p.get()._field_ident)}));
										_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1abb6a629;
									}
								}
								_match_end_1abb6dc15:;
							};
						}
						_iter_next_1abb6b828:;
						++it;
						_133417_j++;
						goto _iter_begin_1abb6b828;
					}
					_iter_end_1abb6b828:;
				};
			}
			_iter_next_1abb6a629:;
			++it;
			_132213_i++;
			goto _iter_begin_1abb6a629;
		}
		_iter_end_1abb6a629:;
	};
	return _131954_ok;
}



inline jule::Bool _1be3559a0_check_fn_decl_result_dup(_1be348311_Sema* _self_, jule::Ptr<_1bc9c9873_Fn>& _135344_f) {
	jule::Bool _135354_ok = jule::Bool();
	_135354_ok=true;
	if (_1d70884de_is_void(_135344_f.ptr())) {
		return _135354_ok;
	};
	{
		auto &expr = _135344_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1abb71d17:;
		if (it != expr.end()) {
			jule::I64 _136013_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> &_136016_v = *it;
			{
				if ((_20201eb75_is_ignore_ident(_136016_v.get()._field_kind) || _20201ee1c_is_anon_ident(_136016_v.get()._field_kind))) {
					goto _iter_next_1abb71d17;
				};
				{
					auto &expr = _135344_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1abb73632:;
					if (it != expr.end()) {
						jule::Ptr<_1d709c536_GenericDecl> &_136520_g = *it;
						{
							if ((_136016_v.get()._field_kind == _136520_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1abb73632:;
						++it;
						goto _iter_begin_1abb73632;
					}
					_iter_end_1abb73632:;
				};
				{
					auto &expr = _135344_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1abb748b9:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9686_Param> &_137120_p = *it;
						{
							if ((_136016_v.get()._field_kind == _137120_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1abb748b9:;
						++it;
						goto _iter_begin_1abb748b9;
					}
					_iter_end_1abb748b9:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _135344_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1abb75b62:;
					if (it != expr.end()) {
						jule::I64 _137917_j = it - expr.begin();
						jule::Ptr<_20201c3d1_Token> &_137920_jv = *it;
						{
							{
								
								if ((_137917_j >= _136013_i)) {
									_case_begin_1abb768ee:;
									{
										goto _iter_end_1abb75b62;
									}
								}
								else if ((_137920_jv.get()._field_kind == _136016_v.get()._field_kind)) {
									_case_begin_1abb76976:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1abb767cd:;
							};
						}
						_iter_next_1abb75b62:;
						++it;
						_137917_j++;
						goto _iter_begin_1abb75b62;
					}
					_iter_end_1abb75b62:;
				};
				goto _iter_next_1abb71d17;
				_julec_label_exist:;
				_1be34aec3_push_err(&(*_self_), _136016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136016_v.get()._field_kind)}));
				_1be34b2e2_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_135354_ok=false;
			}
			_iter_next_1abb71d17:;
			++it;
			_136013_i++;
			goto _iter_begin_1abb71d17;
		}
		_iter_end_1abb71d17:;
	};
	return _135354_ok;
}



inline void _1be355c58_check_fn_decl_prototype(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9873_Fn>& _140048_f) {
	if ((_140048_f.get()._field_exceptional && _140048_f.get()._field_cpp_linked)) {
		_1be34aec3_push_err(_self_.ptr(), _140048_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_140048_f.get()._field_exceptional) {
		if (_1d7063475_is_entry_point(_140048_f.ptr())) {
			_1be34aec3_push_err(_self_.ptr(), _140048_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1d706926c_is_init(_140048_f.ptr())) {
			_1be34aec3_push_err(_self_.ptr(), _140048_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1be35532e_check_decl_generics(_self_.ptr(), _140048_f.get()._field_generics)))) {
			_case_begin_1abb7a0c8:;
		}
		else if ((!(_1be35565e_check_fn_decl_params_dup(_self_.ptr(), _140048_f)))) {
			_case_begin_1abb7b6e5:;
		}
		else if ((!(_1be3559a0_check_fn_decl_result_dup(_self_.ptr(), _140048_f)))) {
			_case_begin_1abb7b75b:;
		}
		_match_end_1abb79e1e:;
	};
}



inline void _1be356011_check_trait_decl_method(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9873_Fn>& _142148_f) {
	if (_20201eb75_is_ignore_ident(_142148_f.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_142148_f.get()._field_sema=_self_;
	_1be355c58_check_fn_decl_prototype(_self_, _142148_f);
	jule::Ptr<_1bc9c9c4c_FnIns> _142817_ins = _1d707ec77_instance(_142148_f);;
	_1be35254b_reload_fn_ins_types(_self_, _142817_ins);
	_142817_ins.get()._field_reloaded=true;
	_1d708c768_append_instance(_142148_f.ptr(), _142817_ins);
}



inline void _1be3562b9_check_trait_decl_methods(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bd929d66_Trait>& _143449_t) {
	{
		auto &expr = _143449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abb8030e:;
		if (it != expr.end()) {
			jule::I64 _143514_i = it - expr.begin();
			jule::Ptr<_1bc9c9873_Fn> _143521_f = *it;
			{
				_1be356011_check_trait_decl_method(_self_, _143521_f);
				_143449_t.get()._field_mutable=(_143449_t.get()._field_mutable || _143521_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _143449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1abb820e1:;
					if (it != expr.end()) {
						jule::I64 _144617_j = it - expr.begin();
						jule::Ptr<_1bc9c9873_Fn> _144620_jf = *it;
						{
							{
								
								if ((_144617_j >= _143514_i)) {
									_case_begin_1abb83279:;
									{
										goto _iter_end_1abb820e1;
									}
								}
								else if ((_143521_f.get()._field_ident == _144620_jf.get()._field_ident)) {
									_case_begin_1abb83301:;
									{
										_1be34aec3_push_err(_self_.ptr(), _143521_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_143521_f.get()._field_ident)}));
										_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1abb820e1;
									}
								}
								_match_end_1abb83158:;
							};
						}
						_iter_next_1abb820e1:;
						++it;
						_144617_j++;
						goto _iter_begin_1abb820e1;
					}
					_iter_end_1abb820e1:;
				};
			}
			_iter_next_1abb8030e:;
			++it;
			_143514_i++;
			goto _iter_begin_1abb8030e;
		}
		_iter_end_1abb8030e:;
	};
}



inline void _1be356550_check_trait_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bd929d66_Trait>& _146541_t) {
	if (_20201eb75_is_ignore_ident(_146541_t.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _146541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_146541_t)),_146541_t.get()._field_ident,false)) {
		_1be34aec3_push_err(_self_.ptr(), _146541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_146541_t.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1be3562b9_check_trait_decl_methods(_self_, _146541_t);
}



inline jule::Bool _1be3567b4_check_trait_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _147739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1abb87b1e:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> _147821_t = *it;
			{
				_1be356550_check_trait_decl(_self_, _147821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_147739_ok = false;
					return _147739_ok;
				};
			}
			_iter_next_1abb87b1e:;
			++it;
			goto _iter_begin_1abb87b1e;
		}
		_iter_end_1abb87b1e:;
	};
	_147739_ok = true;
	return _147739_ok;
}



inline jule::Bool _1be356b8d_check_trait_impl_methods(_1be348311_Sema* _self_, jule::Ptr<_1bd929d66_Trait>& _148948_base, jule::Ptr<_1bcac892d_Impl>& _148963_ipl) {
	jule::Bool _148977_ok = jule::Bool();
	_148977_ok=true;
	{
		auto &expr = _148963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abb89934:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> &_149116_f = *it;
			{
				if ((_1bca6e82a_find_method(_148948_base.ptr(), _149116_f.get()._field_ident) == nullptr)) {
					_1be34aec3_push_err(&(*_self_), _149116_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_148948_base.get()._field_ident),jule::Any(_149116_f.get()._field_ident)}));
					_148977_ok=false;
				};
			}
			_iter_next_1abb89934:;
			++it;
			goto _iter_begin_1abb89934;
		}
		_iter_end_1abb89934:;
	};
	return _148977_ok;
}



inline jule::Bool _1be357056_impl_to_struct(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _150039_dest, jule::Ptr<_1bcac892d_Impl>& _150059_ipl) {
	jule::Bool _150073_ok = jule::Bool();
	_150073_ok=true;
	{
		auto &expr = _150059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abb8be53:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _150421_f = *it;
			{
				if (((_1d706d11c_find_method(_150039_dest.ptr(), _150421_f.get()._field_ident,_150421_f.get()._field_statically) != nullptr) || (_1d7071384_find_field(_150039_dest.ptr(), _150421_f.get()._field_ident) != nullptr))) {
					_1be34aec3_push_err(_self_.ptr(), _150421_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150039_dest.get()._field_ident),jule::Any(_150421_f.get()._field_ident)}));
					_150073_ok=false;
					goto _iter_next_1abb8be53;
				};
				if (((_150039_dest.get()._field_generics.len() > 0LL) && (_150421_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _150421_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1abb8e829:;
						if (it != expr.end()) {
							jule::Ptr<_1d709c536_GenericDecl> _151224_fg = *it;
							{
								{
									auto &expr = _150039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1abb90165:;
									if (it != expr.end()) {
										jule::Ptr<_1d709c536_GenericDecl> _151328_dg = *it;
										{
											if ((_151224_fg.get()._field_ident == _151328_dg.get()._field_ident)) {
												_1be34aec3_push_err(_self_.ptr(), _151224_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_150073_ok=false;
											};
										}
										_iter_next_1abb90165:;
										++it;
										goto _iter_begin_1abb90165;
									}
									_iter_end_1abb90165:;
								};
							}
							_iter_next_1abb8e829:;
							++it;
							goto _iter_begin_1abb8e829;
						}
						_iter_end_1abb8e829:;
					};
				};
				_1be34be19_check_directives(_self_, _150421_f.get()._field_directives,jule::Any(_150421_f));
				_150421_f.get()._field_sema=_self_;
				_150421_f.get()._field_owner=_150039_dest;
				_150039_dest.get()._field_methods = jule::alloc_for_append(_150039_dest.get()._field_methods,1);_150039_dest.get()._field_methods.__push(_150421_f);;
			}
			_iter_next_1abb8be53:;
			++it;
			goto _iter_begin_1abb8be53;
		}
		_iter_end_1abb8be53:;
	};
	{
		auto &expr = _150059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1abb92be5:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _152921_v = *it;
			{
				;
				if (((_1d706d11c_find_method(_150039_dest.ptr(), _152921_v.get()._field_ident,true) != nullptr) || (_1d7070372_find_static(_150039_dest.ptr(), _152921_v.get()._field_ident) != nullptr))) {
					_1be34aec3_push_err(_self_.ptr(), _152921_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150039_dest.get()._field_ident),jule::Any(_152921_v.get()._field_ident)}));
					_150073_ok=false;
					goto _iter_next_1abb92be5;
				};
				_1be357ae5_check_var_decl(_self_, _152921_v,jule::Trait<_1be3eedce_Lookup>(_self_, 3));
				_1be35b269_check_type_var(_self_, _152921_v,jule::Trait<_1be3eedce_Lookup>(_self_, 3));
				_150039_dest.get()._field_statics = jule::alloc_for_append(_150039_dest.get()._field_statics,1);_150039_dest.get()._field_statics.__push(_152921_v);;
			}
			_iter_next_1abb92be5:;
			++it;
			goto _iter_begin_1abb92be5;
		}
		_iter_end_1abb92be5:;
	};
	return _150073_ok;
}



inline void _1be3572cb_impl_trait(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bcac892d_Impl>& _154535_decl) {
	jule::Ptr<_1be3d45ab_TypeKind> _154617_base_t = _1be3501b4_select_type(_self_, _154535_decl.get()._field_base);;
	if ((_154617_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1bd929d66_Trait> _155017_base = _1be3d7d40_trt(_154617_base_t.ptr());;
	if ((_155017_base == nullptr)) {
		_1be34aec3_push_err(_self_.ptr(), _154535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_154617_base_t.ptr()))}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _155717_dest_t = _1be3501b4_select_type(_self_, _154535_decl.get()._field_dest);;
	if ((_155717_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _156117_dest_s = _1be3d7acb_strct(_155717_dest_t.ptr());;
	if ((_156117_dest_s == nullptr)) {
		_1be34aec3_push_err(_self_.ptr(), _154535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_155717_dest_t.ptr()))}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d7073276_Struct> _156817_dest = _156117_dest_s.get()._field_decl;;
	if ((_202023162_dir(_156817_dest.get()._field_token.get()._field_file.ptr()) != _202023162_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1be34aec3_push_err(_self_.ptr(), _154535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_155017_base.get()._field_implemented = jule::alloc_for_append(_155017_base.get()._field_implemented,1);_155017_base.get()._field_implemented.__push(_156817_dest);;
	_156817_dest.get()._field_implements = jule::alloc_for_append(_156817_dest.get()._field_implements,1);_156817_dest.get()._field_implements.__push(_155017_base);;
	if ((_154535_decl.get()._field_statics.len() > 0LL)) {
		_1be34aec3_push_err(_self_.ptr(), _154535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1be356b8d_check_trait_impl_methods(_self_.ptr(), _155017_base,_154535_decl)))) {
			_case_begin_1abb9dabe:;
			{
				return;;
			}
		}
		else if ((!(_1be357056_impl_to_struct(_self_, _156817_dest,_154535_decl)))) {
			_case_begin_1abb9db35:;
			{
				return;;
			}
		}
		_match_end_1abb9b3a2:;
	};
}



inline void _1be357551_impl_struct(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bcac892d_Impl>& _159036_decl) {
	jule::Ptr<_1be3d45ab_TypeKind> _159117_dest_t = _1be3501b4_select_type(_self_, _159036_decl.get()._field_dest);;
	if ((_159117_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _159517_dest_s = _1be3d7acb_strct(_159117_dest_t.ptr());;
	if ((_159517_dest_s == nullptr)) {
		_1be34aec3_push_err(_self_.ptr(), _159036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_159117_dest_t.ptr()))}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d7073276_Struct> _160217_dest = _159517_dest_s.get()._field_decl;;
	if ((_202023162_dir(_160217_dest.get()._field_token.get()._field_file.ptr()) != _202023162_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1be34aec3_push_err(_self_.ptr(), _159036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1be357056_impl_to_struct(_self_, _160217_dest,_159036_decl)))) {
			_case_begin_1abba3c8e:;
			{
				return;;
			}
		}
		_match_end_1abba251d:;
	};
}



inline void _1be3577c6_impl_impl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bcac892d_Impl>& _161534_decl) {
	{
		
		if (_1bd9437ca_is_trait_impl(_161534_decl.ptr())) {
			_case_begin_1abba4960:;
			{
				_1be3572cb_impl_trait(_self_, _161534_decl);
			}
		}
		else if (_1bd944006_is_struct_impl(_161534_decl.ptr())) {
			_case_begin_1abba49d7:;
			{
				_1be357551_impl_struct(_self_, _161534_decl);
			}
		}
		_match_end_1abba483e:;
	};
}



inline void _1be357ae5_check_var_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be36365b_Var>& _162639_decl, jule::Trait<_1be3eedce_Lookup> _162655_l) {
	if (_20201eb75_is_ignore_ident(_162639_decl.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1be363c77_is_type_inferred(_162639_decl.ptr())) {
		if ((!(_1be363a13_is_initialized(_162639_decl.ptr())))) {
			_1be34aec3_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1be34e614_check_type(_self_, _162639_decl.get()._field_kind,_162655_l);
	};
	if ((_162639_decl.get()._field_constant && _162639_decl.get()._field_reference)) {
		_1be34aec3_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1be363a13_is_initialized(_162639_decl.ptr())))) {
		if (_162639_decl.get()._field_constant) {
			_1be34aec3_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_162639_decl.get()._field_statically) {
			_1be34aec3_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_162639_decl.get()._field_reference) {
			_1be34aec3_push_err(_self_.ptr(), _162639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1be357d6a_check_global_var_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be36365b_Var>& _165846_decl) {
	if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165846_decl)),_165846_decl.get()._field_ident,_165846_decl.get()._field_cpp_linked)) {
		_1be34aec3_push_err(_self_.ptr(), _165846_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_165846_decl.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_165846_decl.get()._field_cpp_linked && _165846_decl.get()._field_constant)) {
		_1be34aec3_push_err(_self_.ptr(), _165846_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_165846_decl.get()._field_cpp_linked)) && (!(_165846_decl.get()._field_constant))) && (!(_165846_decl.get()._field_statically)))) {
		_1be34aec3_push_err(_self_.ptr(), _165846_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1be34be19_check_directives(_self_, _165846_decl.get()._field_directives,jule::Any(_165846_decl));
	_1be357ae5_check_var_decl(_self_, _165846_decl,jule::Trait<_1be3eedce_Lookup>(_self_, 3));
}



inline jule::Bool _1be3580ce_check_global_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _167740_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1abbb087d:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _167821_decl = *it;
			{
				_1be357d6a_check_global_var_decl(_self_, _167821_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167740_ok = false;
					return _167740_ok;
				};
			}
			_iter_next_1abbb087d:;
			++it;
			goto _iter_begin_1abbb087d;
		}
		_iter_end_1abbb087d:;
	};
	_167740_ok = true;
	return _167740_ok;
}



inline jule::Bool _1be3584a8_check_struct_trait_impl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _168948_strct, jule::Ptr<_1bd929d66_Trait>& _168969_trt) {
	jule::Bool _168984_ok = jule::Bool();
	{
		auto &expr = _168969_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abbb2440:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _169021_tf = *it;
			{
				jule::Bool _169121_exist = false;;
				jule::Ptr<_1bc9c9873_Fn> _169221_sf = _1d706d11c_find_method(_168948_strct.ptr(), _169021_tf.get()._field_ident,_169021_tf.get()._field_statically);;
				jule::Ptr<_1bc9c9c4c_FnIns> _169317_tf_k = _1be35222c_get_trait_check_fn_kind(_self_, _169021_tf);;
				if ((_169221_sf != nullptr)) {
					jule::Ptr<_1bc9c9c4c_FnIns> _169525_sf_k = _1be35222c_get_trait_check_fn_kind(_self_, _169221_sf);;
					_169121_exist=(((_169317_tf_k.get()._field_decl.get()._field_public == _169525_sf_k.get()._field_decl.get()._field_public) && (_169317_tf_k.get()._field_decl.get()._field_ident == _169525_sf_k.get()._field_decl.get()._field_ident)) && _1d7067622_equals(_169317_tf_k, jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_169525_sf_k, 1)})));
				};
				if (_169121_exist) {
					jule::Ptr<_1d705bd64_Directive> _170121_d = _1be3ce144_find_directive(_169221_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_170121_d != nullptr)) {
						_1be34aec3_push_err(_self_.ptr(), _170121_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_168984_ok=false;
				} else {
					;
					jule::Str _170825_s = _1bc9ca214_get_kind_str(_169317_tf_k.ptr(), true);;
					if (_169021_tf.get()._field_public) {
						(_170825_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1be34aec3_push_err(_self_.ptr(), _168948_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_168969_trt.get()._field_ident),jule::Any(_170825_s)}));
					_168984_ok=false;
				};
			}
			_iter_next_1abbb2440:;
			++it;
			goto _iter_begin_1abbb2440;
		}
		_iter_end_1abbb2440:;
	};
	return _168984_ok;
}



inline jule::Bool _1be3587c7_check_struct_impls(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _171943_s) {
	jule::Bool _171957_ok = jule::Bool();
	_171957_ok=true;
	{
		auto &expr = _171943_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1abbb9a0d:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> _172121_trt = *it;
			{
				_171957_ok=(_1be3584a8_check_struct_trait_impl(_self_, _171943_s,_172121_trt) && _171957_ok);
			}
			_iter_next_1abbb9a0d:;
			++it;
			goto _iter_begin_1abbb9a0d;
		}
		_iter_end_1abbb9a0d:;
	};
	return _171957_ok;
}



inline jule::Bool _1be358ad5_check_struct_fields(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _172744_st) {
	jule::Bool _172759_ok = jule::Bool();
	_172759_ok=true;
	{
		auto &expr = _172744_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1abbbb02b:;
		if (it != expr.end()) {
			jule::Ptr<_1d7080926_Field> _172921_f = *it;
			{
				_172921_f.get()._field_owner=_172744_st;
				{
					auto &expr = _172744_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1abbbbb20:;
					if (it != expr.end()) {
						jule::Ptr<_1d7080926_Field> _173120_cf = *it;
						{
							if ((_172921_f == _173120_cf)) {
								goto _iter_end_1abbbbb20;
							} else if ((_172921_f.get()._field_ident == _173120_cf.get()._field_ident)) {
								_1be34aec3_push_err(_self_.ptr(), _172921_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_172921_f.get()._field_ident)}));
								_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_172759_ok=false;
							};
						}
						_iter_next_1abbbbb20:;
						++it;
						goto _iter_begin_1abbbbb20;
					}
					_iter_end_1abbbbb20:;
				};
			}
			_iter_next_1abbbb02b:;
			++it;
			goto _iter_begin_1abbbb02b;
		}
		_iter_end_1abbbb02b:;
	};
	return _172759_ok;
}



inline void _1be358d5a_check_struct_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _174442_s) {
	if (_20201eb75_is_ignore_ident(_174442_s.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _174442_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174442_s)),_174442_s.get()._field_ident,_174442_s.get()._field_cpp_linked)) {
		_1be34aec3_push_err(_self_.ptr(), _174442_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174442_s.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1be34be19_check_directives(_self_, _174442_s.get()._field_directives,jule::Any(_174442_s));
	{
		
		if ((!(_1be35532e_check_decl_generics(_self_.ptr(), _174442_s.get()._field_generics)))) {
			_case_begin_1abbc1361:;
		}
		else if ((!(_1be358ad5_check_struct_fields(_self_, _174442_s)))) {
			_case_begin_1abbc13c7:;
		}
		else if ((!(_1be3587c7_check_struct_impls(_self_, _174442_s)))) {
			_case_begin_1abbc143d:;
		}
		_match_end_1abbc121d:;
	};
}



inline jule::Bool _1be3590be_check_struct_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _176240_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1abbc28c3:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _176321_s = *it;
			{
				_1be358d5a_check_struct_decl(_self_, _176321_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_176240_ok = false;
					return _176240_ok;
				};
			}
			_iter_next_1abbc28c3:;
			++it;
			goto _iter_begin_1abbc28c3;
		}
		_iter_end_1abbc28c3:;
	};
	_176240_ok = true;
	return _176240_ok;
}



inline void _1be359344_check_fn_decl(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9873_Fn>& _177538_f) {
	if (_20201eb75_is_ignore_ident(_177538_f.get()._field_ident)) {
		_1be34aec3_push_err(_self_.ptr(), _177538_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1be34be19_check_directives(_self_, _177538_f.get()._field_directives,jule::Any(_177538_f));
	_177538_f.get()._field_sema=_self_;
	_1be355c58_check_fn_decl_prototype(_self_, _177538_f);
	if (_1be34baea_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177538_f)),_177538_f.get()._field_ident,_177538_f.get()._field_cpp_linked)) {
		if ((_177538_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1bc9c9873_Fn> _178721_init = _1be349b09_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_178721_init != nullptr)) {
				return;;
			};
		};
		_1be34aec3_push_err(_self_.ptr(), _177538_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177538_f.get()._field_ident)}));
		_1be34b2e2_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1be3595a8_check_fn_decls(jule::Ptr<_1be348311_Sema> _self_) {
	jule::Bool _179836_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abbc8467:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _179921_f = *it;
			{
				_1be359344_check_fn_decl(_self_, _179921_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179836_ok = false;
					return _179836_ok;
				};
			}
			_iter_next_1abbc8467:;
			++it;
			goto _iter_begin_1abbc8467;
		}
		_iter_end_1abbc8467:;
	};
	_179836_ok = true;
	return _179836_ok;
}



inline void _1be359971_push_cycle_error(_1be348311_Sema* _self_, jule::Ptr<_1d7073276_Struct>& _181032_st1, jule::Ptr<_1d7073276_Struct>& _181047_st2, jule::Str& _181066_message) {
	;
	jule::Str _181313_refers_to = _201be1292_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_181032_st1.get()._field_ident),jule::Any(_181047_st2.get()._field_ident)}));;
	(_181066_message).buffer.insert(0, (((_200cecaa8_repeat(jule::Str(" ", 1),4LL) + _181313_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1be359dc2_check_cross_cycle(_1be348311_Sema* _self_, jule::Ptr<_1d7073276_Struct>& _181733_st1, jule::Ptr<_1d7073276_Struct>& _181748_st2, jule::Str& _181767_message) {
	{
		auto &expr = _181748_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1abbcbd61:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> &_181816_u = *it;
			{
				if ((_181816_u == _181733_st1)) {
					_1be359971_push_cycle_error(&(*_self_), _181748_st2,_181816_u,_181767_message);
					return false;
				};
				if ((!(_1be359dc2_check_cross_cycle(&(*_self_), _181733_st1,_181816_u,_181767_message)))) {
					_1be359971_push_cycle_error(&(*_self_), _181748_st2,_181816_u,_181767_message);
					return false;
				};
			}
			_iter_next_1abbcbd61:;
			++it;
			goto _iter_begin_1abbcbd61;
		}
		_iter_end_1abbcbd61:;
	};
	return true;
}



inline jule::Bool _1be35a356_check_struct_derive_illegal_cycles(_1be348311_Sema* _self_, jule::Str _183353_derive, jule::Ptr<_1d7073276_Struct>& _183367_st1, jule::Ptr<_1be3d45ab_TypeKind>& _183386_k) {
	jule::Bool _1833102_ok = jule::Bool();
	jule::Ptr<_1d7073276_Struct> _183417_st2 = _1be3ec4e7_get_struct_from_kind(_183386_k);;
	if ((_183417_st2 == nullptr)) {
		_1833102_ok = true;
		return _1833102_ok;
	};
	if ((_183367_st1 == _183417_st2)) {
		_1be34aec3_push_err(&(*_self_), _183367_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_183353_derive),jule::Any(_183367_st1.get()._field_ident)}));
		_1833102_ok = false;
		return _1833102_ok;
	};
	jule::Str _184617_message = jule::Str();;
	if ((!(_1be359dc2_check_cross_cycle(&(*_self_), _183367_st1,_183417_st2,_184617_message)))) {
		jule::Str _184921_err_msg = _184617_message;;
		_184617_message=jule::Str();
		_1be359971_push_cycle_error(&(*_self_), _183367_st1,_183417_st2,_184617_message);
		_184921_err_msg=(_184921_err_msg + _184617_message);
		_1be34aec3_push_err(&(*_self_), _183367_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_183353_derive),jule::Any(_184921_err_msg)}));
		_1833102_ok = false;
		return _1833102_ok;
	};
	_1833102_ok = true;
	return _1833102_ok;
}



inline jule::Bool _1be35a686_check_struct_ins_derive_clone(_1be348311_Sema* _self_, jule::Ptr<_1d70ab9c9_StructIns> _186052_st) {
	jule::Bool _186070_ok = jule::Bool();
	if ((!(_1d7072aa0_is_derives(_186052_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_186070_ok = true;
		return _186070_ok;
	};
	{
		auto &expr = _186052_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1abbd4077:;
		if (it != expr.end()) {
			jule::Ptr<_1d708808d_FieldIns> _186521_f = *it;
			{
				if ((_186521_f.get()._field_kind == nullptr)) {
					goto _iter_next_1abbd4077;
				};
				if ((!(_1be3d61a1_supports_cloning(_186521_f.get()._field_kind.ptr())))) {
					_1be34aec3_push_err(&(*_self_), _186052_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_186521_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_186070_ok = false;
					return _186070_ok;
				};
				if ((!(_1be35a356_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_186052_st.get()._field_decl,_186521_f.get()._field_kind)))) {
					_186070_ok = false;
					return _186070_ok;
				};
			}
			_iter_next_1abbd4077:;
			++it;
			goto _iter_begin_1abbd4077;
		}
		_iter_end_1abbd4077:;
	};
	_186070_ok = true;
	return _186070_ok;
}



inline void _1be35a873_check_package_decls(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abbd6c39:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _188621_f = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _188621_f);
				if ((!(_1be355021_check_type_enum_decls(_self_)))) {
					return;;
				};
				if ((!(_1be353ccd_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abbd6c39:;
			++it;
			goto _iter_begin_1abbd6c39;
		}
		_iter_end_1abbd6c39:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abbd8367:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _189621_f = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _189621_f);
				if ((!(_1be3567b4_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abbd8367:;
			++it;
			goto _iter_begin_1abbd8367;
		}
		_iter_end_1abbd8367:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abbd8301:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _190321_f = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _190321_f);
				if ((!(_1be3580ce_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abbd8301:;
			++it;
			goto _iter_begin_1abbd8301;
		}
		_iter_end_1abbd8301:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abbd9e4b:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _191021_f = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _191021_f);
				{
					
					if ((!(_1be3595a8_check_fn_decls(_self_)))) {
						_case_begin_1abbdac0a:;
					}
					else if ((!(_1be3590be_check_struct_decls(_self_)))) {
						_case_begin_1abbdac71:;
					}
					else {
						_case_begin_1abbdab94:;
						{
							goto _iter_next_1abbd9e4b;
						}
					}
					_match_end_1abbdab2d:;
				};
				return;;
			}
			_iter_next_1abbd9e4b:;
			++it;
			goto _iter_begin_1abbd9e4b;
		}
		_iter_end_1abbd9e4b:;
	};
}



inline void _1be35abb4_check_data_for_type_inference(_1be348311_Sema* _self_, jule::Ptr<_1be3a92d9_Data>& _192249_d, jule::Ptr<_20201c3d1_Token>& _192260_err_token) {
	{
		
		if (_1be3a96c4_is_nil(_192249_d.ptr())) {
			_case_begin_1abbdbc72:;
			{
				_1be34aec3_push_err(&(*_self_), _192260_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1be3a9938_is_void(_192249_d.ptr())) {
			_case_begin_1abbdbce9:;
			{
				_1be34aec3_push_err(&(*_self_), _192260_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_192249_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1abbdbd71:;
			{
				_1be34aec3_push_err(&(*_self_), _192260_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abbdbb40:;
	};
}



inline void _1be35ae4a_check_var(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be36365b_Var>& _193334_v) {
	if (_193334_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1be363c77_is_type_inferred(_193334_v.ptr())) {
		_193334_v.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_193334_v.get()._field_value.get()._field_data.get()._field_kind});
		_1be35abb4_check_data_for_type_inference(_self_.ptr(), _193334_v.get()._field_value.get()._field_data,_193334_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1be3e0199_Arr> _194421_arr = _1be3d738e_arr(_193334_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_194421_arr != nullptr)) {
			if (_194421_arr.get()._field_auto) {
				jule::Ptr<_1be3e0199_Arr> _194725_data_arr = _1be3d738e_arr(_193334_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_194725_data_arr != nullptr)) {
					_194421_arr.get()._field_n=_194725_data_arr.get()._field_n;
				};
			};
		};
		_1be3512c5_check_assign_type(_self_, _193334_v.get()._field_reference,_193334_v.get()._field_kind.get()._field_kind,_193334_v.get()._field_value.get()._field_data,_193334_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_193334_v.get()._field_reference && (!(_1be3eb826_is_valid_for_ref(_193334_v.get()._field_kind.get()._field_kind))))) {
		_1be34aec3_push_err(_self_.ptr(), _193334_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_193334_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1be3530c9_check_validity_for_init_expr(_self_, _193334_v.get()._field_mutable,_193334_v.get()._field_reference,_193334_v.get()._field_kind.get()._field_kind,_193334_v.get()._field_value.get()._field_data,_193334_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_193334_v.get()._field_constant) {
		if ((!(_1be3a9b9c_is_const(_193334_v.get()._field_value.get()._field_data.ptr())))) {
			_1be34aec3_push_err(_self_.ptr(), _193334_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_193334_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1be3d8318_tup(_193334_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_193334_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1be35b269_check_type_var(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1be36365b_Var>& _198239_decl, jule::Trait<_1be3eedce_Lookup> _198255_l) {
	if ((_198239_decl.get()._field_cpp_linked || (!(_1be363a13_is_initialized(_198239_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1be3aad57_Eval> _198717_eval = nullptr;;
	if ((_198239_decl.get()._field_kind != nullptr)) {
		_198717_eval=_1be350615_evalpd(_self_, _198255_l,_198239_decl.get()._field_kind.get()._field_kind,_198239_decl);
	} else {
		_198717_eval=_1be350615_evalpd(_self_, _198255_l,nullptr,_198239_decl);
	};
	_198717_eval.get()._field_immutable=(!(_198239_decl.get()._field_mutable));
	_198239_decl.get()._field_value.get()._field_data=_1be3c612a_eval_expr(_198717_eval, _198239_decl.get()._field_value.get()._field_expr);
	if ((_198239_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1be35ae4a_check_var(_self_, _198239_decl);
}



inline void _1be35b445_check_global_types(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1abbeb27b:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _200421_decl = *it;
			{
				if (((_1be363a13_is_initialized(_200421_decl.ptr()) && (_200421_decl.get()._field_value.get()._field_data == nullptr)) || (_1be363c77_is_type_inferred(_200421_decl.ptr()) && (_200421_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1be35b269_check_type_var(_self_, _200421_decl,jule::Trait<_1be3eedce_Lookup>(_self_, 3));
				};
			}
			_iter_next_1abbeb27b:;
			++it;
			goto _iter_begin_1abbeb27b;
		}
		_iter_end_1abbeb27b:;
	};
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1be35b7ec_ready_to_check_fn(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _201542_s, jule::Ptr<_1bc9c9873_Fn>& _201562_f) {
	jule::Ptr<_1bc9c9c4c_FnIns> _201617_ins = _1d707ec77_instance(_201562_f);;
	if ((_201562_f.get()._field_instances.len() != 0LL)) {
		return _201617_ins;
	};
	_201617_ins.get()._field_owner=_201542_s;
	_1d708c768_append_instance(_201562_f.ptr(), _201617_ins);
	_201617_ins.get()._field_reloaded=true;
	if (_1be35254b_reload_fn_ins_types(_self_, _201617_ins)) {
		return _201617_ins;
	};
	return nullptr;
}



inline void _1be35bb1b_check_type_method(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _202942_s, jule::Ptr<_1bc9c9873_Fn>& _202962_f) {
	if ((_202962_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _203417_ins = _202962_f.get()._field_instances[0LL];;
	if ((_203417_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		return;;
	};
	_1be35e1a1_check_fn_ins(_self_, _203417_ins);
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1be35c06c_check_struct_ins_op(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _204244_s, jule::Ptr<_1bc9c9873_Fn>& _204264_f, jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)> _204272_p) {
	if ((((_204264_f == nullptr) || (_204264_f.get()._field_generics.len() > 0LL)) || (!(_204272_p(_204264_f))))) {
		return nullptr;
	};
	return _204264_f.get()._field_instances[0LL];
}



inline jule::Bool _1be35c37a_check_fields(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _204937_s) {
	jule::Bool _204954_ok = jule::Bool();
	_1be3e2795_TypeChecker _205017_tc = _1be3e2795_TypeChecker{._field_s=_204937_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1be3eedce_Lookup>(_204937_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1be3e1a4c_Referencer>(_1be3e1a4c_Referencer{._field_ident=_204937_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_204937_s.get()._field_decl), }), ._field_refers=_204937_s.get()._field_refers, };;
	if ((_204937_s.get()._field_generics.len() > 0LL)) {
		_205017_tc._field_use_generics=jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>::alloc(0LL,_204937_s.get()._field_generics.len());
		{
			auto &expr = _204937_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1abc05560:;
			if (it != expr.end()) {
				jule::I64 _206218_i = it - expr.begin();
				jule::Ptr<_1be3d45ab_TypeKind> _206225_g = *it;
				{
					_205017_tc._field_use_generics = jule::alloc_for_append(_205017_tc._field_use_generics,1);_205017_tc._field_use_generics.__push(jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_ident=_204937_s.get()._field_decl.get()._field_generics[_206218_i].get()._field_ident, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_206225_g}), }));;
				}
				_iter_next_1abc05560:;
				++it;
				_206218_i++;
				goto _iter_begin_1abc05560;
			}
			_iter_end_1abc05560:;
		};
	};
	jule::Ptr<_1be3a4339_SymbolTable> _207217_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1be34ab0a_set_current_file(_self_.ptr(), _207217_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _204937_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1be3a4339_SymbolTable> _207621_file = _1be34791a_find_file(_self_.get()._field_files,_204937_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_207621_file != nullptr)) {
			_1be34ab0a_set_current_file(_self_.ptr(), _207621_file);
		};
	};
	jule::Ptr<_1be3aad57_Eval> _208217_eval = _1be350cca_eval(_self_, jule::Trait<_1be3eedce_Lookup>(_self_, 3));;
	_204954_ok=true;
	{
		auto &expr = _204937_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1abc06011:;
		if (it != expr.end()) {
			jule::Ptr<_1d708808d_FieldIns> _208421_f = *it;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _208521_kind = _1be3e9a11_check_decl(&_205017_tc, _208421_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_204954_ok=((_208521_kind != nullptr) && _204954_ok);
				if ((_208521_kind == nullptr)) {
					if (((_self_ != _204937_s.get()._field_decl.get()._field_sema) && (_204937_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_204937_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_204937_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1abc06011;
				};
				_208421_f.get()._field_kind=_208521_kind;
				_204937_s.get()._field_mutable=(_204937_s.get()._field_mutable || ((!(_208421_f.get()._field_decl.get()._field_mutable)) && _1be3d5964_mutable(_208421_f.get()._field_kind.ptr())));
				_1be35a686_check_struct_ins_derive_clone(_self_.ptr(), _204937_s);
				if ((_208421_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1abc06011;
				};
				_208217_eval.get()._field_prefix=_208421_f.get()._field_kind;
				_208217_eval.get()._field_field=_208421_f;
				_208421_f.get()._field_default=_1be3c612a_eval_expr(_208217_eval, _208421_f.get()._field_decl.get()._field_default);
				if ((_208421_f.get()._field_default == nullptr)) {
					goto _iter_next_1abc06011;
				};
				;
				_1be3512c5_check_assign_type(_self_, false,_208421_f.get()._field_kind,_208421_f.get()._field_default,_208421_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1abc06011:;
			++it;
			goto _iter_begin_1abc06011;
		}
		_iter_end_1abc06011:;
	};
	return _204954_ok;
}



inline jule::Bool _1be35c688_precheck_struct_ins(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _211844_s) {
	jule::Bool _211861_ok = jule::Bool();
	_211861_ok=_1be35c37a_check_fields(_self_, _211844_s);
	if ((!(_211861_ok))) {
		_211861_ok = false;
		return _211861_ok;
	};
	{
		auto &expr = _211844_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abc11c20:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _212321_f = *it;
			{
				if ((_212321_f.get()._field_generics.len() == 0LL)) {
					if ((_1be35b7ec_ready_to_check_fn(_self_, _211844_s,_212321_f) == nullptr)) {
						_211861_ok = false;
						return _211861_ok;
					};
				};
			}
			_iter_next_1abc11c20:;
			++it;
			goto _iter_begin_1abc11c20;
		}
		_iter_end_1abc11c20:;
	};
	_211861_ok = true;
	return _211861_ok;
}



inline void _1be35c90d_check_struct_ins(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _213341_s) {
	{
		auto &expr = _213341_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abc1356d:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _213421_f = *it;
			{
				_1be35bb1b_check_type_method(_self_, _213341_s,_213421_f);
			}
			_iter_next_1abc1356d:;
			++it;
			goto _iter_begin_1abc1356d;
		}
		_iter_end_1abc1356d:;
	};
}



inline void _1be35cb83_check_type_struct(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _213942_s) {
	if (_213942_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_213942_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _213942_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1abc14b79:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _215221_ins = *it;
			{
				_1be35c90d_check_struct_ins(_self_, _215221_ins);
			}
			_iter_next_1abc14b79:;
			++it;
			goto _iter_begin_1abc14b79;
		}
		_iter_end_1abc14b79:;
	};
}



inline void _1be35cd5e_check_struct_types(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1abc15c79:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _215821_s = *it;
			{
				_1be35cb83_check_type_struct(_self_, _215821_s);
			}
			_iter_next_1abc15c79:;
			++it;
			goto _iter_begin_1abc15c79;
		}
		_iter_end_1abc15c79:;
	};
}



inline void _1be35d106_check_struct_ins_operators(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d70ab9c9_StructIns> _216350_s) {
	{
		auto &expr = _216350_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abc16bd1:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _216421_m = *it;
			{
				{
					auto &_match_expr{ _216421_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1abc17990:;
						{
							_216350_s.get()._field_operators._field_eq=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _216768_f) mutable -> jule::Bool {
								return static__1be365185_eq(_216768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1abc17a06:;
						{
							_216350_s.get()._field_operators._field_gt=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _216968_f) mutable -> jule::Bool {
								return static__1be36542c_gt(_216968_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1abc17a7d:;
						{
							_216350_s.get()._field_operators._field_gt_eq=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _217171_f) mutable -> jule::Bool {
								return static__1be3656c4_gt_eq(_217171_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1abc17b05:;
						{
							_216350_s.get()._field_operators._field_lt=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _217368_f) mutable -> jule::Bool {
								return static__1be36596b_lt(_217368_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1abc17b7c:;
						{
							_216350_s.get()._field_operators._field_lt_eq=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _217571_f) mutable -> jule::Bool {
								return static__1be365c13_lt_eq(_217571_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1abc17c04:;
						{
							_216350_s.get()._field_operators._field_shl=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _217769_f) mutable -> jule::Bool {
								return static__1be3662eb_shl(_217769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1abc17c7b:;
						{
							_216350_s.get()._field_operators._field_shr=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _217969_f) mutable -> jule::Bool {
								return static__1be366593_shr(_217969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1abc17d03:;
						{
							_216350_s.get()._field_operators._field_add=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _218169_f) mutable -> jule::Bool {
								return static__1be36683a_add(_218169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1abc17d7a:;
						{
							_216350_s.get()._field_operators._field_sub=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _218369_f) mutable -> jule::Bool {
								return static__1be366ad2_sub(_218369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1abc17e02:;
						{
							_216350_s.get()._field_operators._field_div=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _218569_f) mutable -> jule::Bool {
								return static__1be366d79_div(_218569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1abc17e79:;
						{
							_216350_s.get()._field_operators._field_mul=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _218769_f) mutable -> jule::Bool {
								return static__1be367121_mul(_218769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1abc18001:;
						{
							_216350_s.get()._field_operators._field_mod=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _218969_f) mutable -> jule::Bool {
								return static__1be3673b8_mod(_218969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1abc18078:;
						{
							_216350_s.get()._field_operators._field_bit_and=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _219173_f) mutable -> jule::Bool {
								return static__1be367660_bit_and(_219173_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1abc18100:;
						{
							_216350_s.get()._field_operators._field_bit_or=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _219372_f) mutable -> jule::Bool {
								return static__1be367907_bit_or(_219372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1abc18177:;
						{
							_216350_s.get()._field_operators._field_bit_xor=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _219573_f) mutable -> jule::Bool {
								return static__1be367b9e_bit_xor(_219573_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1abc181ee:;
						{
							_216350_s.get()._field_operators._field_neg=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _219769_f) mutable -> jule::Bool {
								return static__1be368287_neg(_219769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1abc18276:;
						{
							_216350_s.get()._field_operators._field_pos=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _219969_f) mutable -> jule::Bool {
								return static__1be36852e_pos(_219969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1abc182ed:;
						{
							_216350_s.get()._field_operators._field_bit_not=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _220173_f) mutable -> jule::Bool {
								return static__1be3687c6_bit_not(_220173_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1abc18375:;
						{
							_216350_s.get()._field_operators._field_add_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _220376_f) mutable -> jule::Bool {
								return static__1be368dae_add_assign(_220376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1abc183ec:;
						{
							_216350_s.get()._field_operators._field_sub_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _220576_f) mutable -> jule::Bool {
								return static__1be369156_sub_assign(_220576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1abc18474:;
						{
							_216350_s.get()._field_operators._field_div_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _220776_f) mutable -> jule::Bool {
								return static__1be3693ed_div_assign(_220776_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1abc184eb:;
						{
							_216350_s.get()._field_operators._field_mul_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _220976_f) mutable -> jule::Bool {
								return static__1be369695_mul_assign(_220976_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1abc18573:;
						{
							_216350_s.get()._field_operators._field_mod_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _221176_f) mutable -> jule::Bool {
								return static__1be36993c_mod_assign(_221176_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1abc185ea:;
						{
							_216350_s.get()._field_operators._field_shl_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _221376_f) mutable -> jule::Bool {
								return static__1be369bd4_shl_assign(_221376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1abc18672:;
						{
							_216350_s.get()._field_operators._field_shr_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _221576_f) mutable -> jule::Bool {
								return static__1be369e7b_shr_assign(_221576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1abc186e9:;
						{
							_216350_s.get()._field_operators._field_bit_or_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _221779_f) mutable -> jule::Bool {
								return static__1be36a223_bit_or_assign(_221779_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1abc18771:;
						{
							_216350_s.get()._field_operators._field_bit_and_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _221980_f) mutable -> jule::Bool {
								return static__1be36a4ba_bit_and_assign(_221980_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1abc187e8:;
						{
							_216350_s.get()._field_operators._field_bit_xor_assign=_1be35c06c_check_struct_ins_op(_self_, _216350_s,_216421_m,jule::Fn<jule::Bool(jule::Ptr<_1bc9c9873_Fn>)>([=](jule::Ptr<_1bc9c9873_Fn> _222180_f) mutable -> jule::Bool {
								return static__1be36a762_bit_xor_assign(_222180_f);
							}));
						}
					}
					_match_end_1abc17572:;
				};
			}
			_iter_next_1abc16bd1:;
			++it;
			goto _iter_begin_1abc16bd1;
		}
		_iter_end_1abc16bd1:;
	};
}



inline void _1be35d38c_precheck_struct_type(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1d7073276_Struct>& _222645_s) {
	if (_222645_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_222645_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_222645_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1d70ab9c9_StructIns> _223721_ins = _1d706814a_instance(_222645_s);;
		_223721_ins.get()._field_checked=true;
		_1d706c3b3_append_instance(_222645_s.ptr(), _223721_ins);
		_1be35c688_precheck_struct_ins(_self_, _223721_ins);
	};
	_1be35d106_check_struct_ins_operators(_self_, _222645_s.get()._field_instances[0LL]);
}



inline void _1be35d568_precheck_struct_types(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1abc4cc4a:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _224721_s = *it;
			{
				_1be35d38c_precheck_struct_type(_self_, _224721_s);
			}
			_iter_next_1abc4cc4a:;
			++it;
			goto _iter_begin_1abc4cc4a;
		}
		_iter_end_1abc4cc4a:;
	};
}



inline void _1be35d7dd_check_rets(_1be348311_Sema* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _225234_f) {
	if (_1d70884de_is_void(_225234_f.get()._field_decl.ptr())) {
		return;;
	};
	_1be360988_MissingRetChecker _225613_mrc = static__1be360d51_new();;
	jule::Bool _225713_ok = _1be361d63_check(&_225613_mrc, _225234_f.get()._field_scope);;
	if ((!(_225713_ok))) {
		_1be34aec3_push_err(&(*_self_), _225234_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1be35db0c_check_fn_ins_sc(_1be348311_Sema* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _226339_f, jule::Ptr<_1be25aee3_ScopeChecker>& _226355_sc) {
	if (_226339_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1be347035_append_ret_vars(_226355_sc.get()._field_table.get()._field_vars,_226339_f);
	_1be3472dd_append_param_vars(_226355_sc.get()._field_table.get()._field_vars,_226339_f);
	_1be3475b8_append_generic_type_aliases(_226355_sc.get()._field_table.get()._field_type_aliases,_226339_f);
	_1be26b322_check(_226355_sc, _226339_f.get()._field_decl.get()._field_scope,_226339_f.get()._field_scope);
	if ((!(_1be25db2d_stopped(_226355_sc.ptr())))) {
		_1be35d7dd_check_rets(&(*_self_), _226339_f);
	};
}



inline void _1be35de2b_check_fn_ins_caller(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _228044_f, jule::Ptr<_20201c3d1_Token> _228059_caller) {
	if (_228044_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1be3a4339_SymbolTable> _228517_old = _228044_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1be34ab0a_set_current_file(_228044_f.get()._field_decl.get()._field_sema.ptr(), _228517_old);
	});;
	jule::Ptr<_1be3a4339_SymbolTable> _228717_file = _1be34791a_find_file(_228044_f.get()._field_decl.get()._field_sema.get()._field_files,_228044_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_228717_file != nullptr)) {
		_1be34ab0a_set_current_file(_228044_f.get()._field_decl.get()._field_sema.ptr(), _228717_file);
	};
	jule::Ptr<_1be25aee3_ScopeChecker> _229217_sc = _1be1e3ae6_new_scope_checker(_228044_f.get()._field_decl.get()._field_sema,_228044_f);;
	_229217_sc.get()._field_called_from=_228059_caller;
	_1be35db0c_check_fn_ins_sc(_self_.ptr(), _228044_f,_229217_sc);
	if ((_228044_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_228044_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_228044_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1be35e1a1_check_fn_ins(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _230237_f) {
	_1be35de2b_check_fn_ins_caller(_self_, _230237_f,nullptr);
}



inline void _1be35e426_check_type_fn(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9873_Fn>& _230638_f) {
	if (_230638_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_230638_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _230638_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1abc595a3:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9c4c_FnIns> _231621_ins = *it;
			{
				_1be35e1a1_check_fn_ins(_self_, _231621_ins);
			}
			_iter_next_1abc595a3:;
			++it;
			goto _iter_begin_1abc595a3;
		}
		_iter_end_1abc595a3:;
	};
}



inline void _1be35e69b_check_test_fn(_1be348311_Sema* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _232137_f) {
	if (_232137_f.get()._field_decl.get()._field_public) {
		_1be34aec3_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_232137_f.get()._field_params.len() != 1LL) || (_232137_f.get()._field_result != nullptr))) {
		_1be34aec3_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be3dc592_Sptr> _233417_sptr = _1be3d68dd_sptr(_232137_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_233417_sptr == nullptr)) {
		_1be34aec3_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _234113_s = _1be3d7acb_strct(_233417_sptr.get()._field_elem.ptr());;
	if (((_234113_s == nullptr) || (!(_1be278373_is_std_package(_234113_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1be34aec3_push_err(&(*_self_), _232137_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1be34b2e2_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1be35e921_precheck_type_fn(jule::Ptr<_1be348311_Sema> _self_, jule::Ptr<_1bc9c9873_Fn>& _234941_f) {
	if (_234941_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_234941_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_234941_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1bc9c9c4c_FnIns> _236021_ins = _1d707ec77_instance(_234941_f);;
		_234941_f.get()._field_instances = jule::alloc_for_append(_234941_f.get()._field_instances,1);_234941_f.get()._field_instances.__push(_236021_ins);;
		_1be35254b_reload_fn_ins_types(_self_, _236021_ins);
		_236021_ins.get()._field_reloaded=true;
		if (_1be3eaeb8_has_directive(_234941_f.get()._field_directives,jule::Str("test", 4))) {
			_1be35e69b_check_test_fn(_self_.ptr(), _236021_ins);
		};
	};
}



inline void _1be35eaec_precheck_fn_types(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1abc64ee8:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> _237321_decl = *it;
			{
				{
					auto &expr = _237321_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1abc658ab:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _237425_m = *it;
						{
							_1be35e921_precheck_type_fn(_self_, _237425_m);
						}
						_iter_next_1abc658ab:;
						++it;
						goto _iter_begin_1abc658ab;
					}
					_iter_end_1abc658ab:;
				};
			}
			_iter_next_1abc64ee8:;
			++it;
			goto _iter_begin_1abc64ee8;
		}
		_iter_end_1abc64ee8:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abc6556a:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _237821_decl = *it;
			{
				_1be35e921_precheck_type_fn(_self_, _237821_decl);
			}
			_iter_next_1abc6556a:;
			++it;
			goto _iter_begin_1abc6556a;
		}
		_iter_end_1abc6556a:;
	};
}



inline void _1be35ecc8_check_fn_types(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abc66d74:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _238521_decl = *it;
			{
				_1be35e426_check_type_fn(_self_, _238521_decl);
			}
			_iter_next_1abc66d74:;
			++it;
			goto _iter_begin_1abc66d74;
		}
		_iter_end_1abc66d74:;
	};
}



inline void _1be35eea4_check_package_types(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abc67bdd:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _239321_f = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _239321_f);
				_1be35b445_check_global_types(_self_);
				_1be35eaec_precheck_fn_types(_self_);
				_1be35d568_precheck_struct_types(_self_);
			}
			_iter_next_1abc67bdd:;
			++it;
			goto _iter_begin_1abc67bdd;
		}
		_iter_end_1abc67bdd:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abc6934e:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _240421_f = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _240421_f);
				_1be35ecc8_check_fn_types(_self_);
				_1be35cd5e_check_struct_types(_self_);
			}
			_iter_next_1abc6934e:;
			++it;
			goto _iter_begin_1abc6934e;
		}
		_iter_end_1abc6934e:;
	};
}



inline void _1be360180_set_file_sema_fields(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abc69ccd:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _241221_f = *it;
			{
				_241221_f.get()._field_sema=_self_;
			}
			_iter_next_1abc69ccd:;
			++it;
			goto _iter_begin_1abc69ccd;
		}
		_iter_end_1abc69ccd:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1abc6ae22:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _241621_st = *it;
			{
				_241621_st.get()._field_sema=_self_;
			}
			_iter_next_1abc6ae22:;
			++it;
			goto _iter_begin_1abc6ae22;
		}
		_iter_end_1abc6ae22:;
	};
}



inline void _1be36035b_set_sema_fields(jule::Ptr<_1be348311_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abc6b928:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _242221_file = *it;
			{
				_1be34ab0a_set_current_file(_self_.ptr(), _242221_file);
				_1be360180_set_file_sema_fields(_self_);
			}
			_iter_next_1abc6b928:;
			++it;
			goto _iter_begin_1abc6b928;
		}
		_iter_end_1abc6b928:;
	};
}



inline void _1be3605d1_check(jule::Ptr<_1be348311_Sema> _self_, jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _242830_files) {
	_self_.get()._field_files=_242830_files;
	_1be34d778_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1be36035b_set_sema_fields(_self_);
	_1be34dd0b_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1be34db30_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1be35a873_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1be35eea4_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1be348311_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1be360988_MissingRetChecker static__1be360d51_new(void) {
	return _1be360988_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1be36112b_check_conditional(_1be360988_MissingRetChecker* _self_, jule::Ptr<_1be25830e_Conditional> _247136_c) {
	{
		auto &expr = _247136_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abc70ee3:;
		if (it != expr.end()) {
			jule::Ptr<_1be2437b1_If> _247221_elif = *it;
			{
				if ((_247221_elif == nullptr)) {
					return false;
				};
				if ((!(_1be361a55_check_scope(&(*_self_), _247221_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1abc70ee3:;
			++it;
			goto _iter_begin_1abc70ee3;
		}
		_iter_end_1abc70ee3:;
	};
	return ((_247136_c.get()._field_default != nullptr) && _1be361a55_check_scope(&(*_self_), _247136_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1be361439_check_match(_1be360988_MissingRetChecker* _self_, jule::Ptr<_1be25992b_Match> _248330_m) {
	{
		auto &expr = _248330_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abc73545:;
		if (it != expr.end()) {
			jule::Ptr<_1be259d49_Case> _248421_c = *it;
			{
				if ((_248421_c == nullptr)) {
					return false;
				};
				jule::I64 _248817_n = (*_self_)._field_breaked.len();;
				jule::Bool _248917_ok = _1be361a55_check_scope(&(*_self_), _248421_c.get()._field_scope);;
				{
					
					if ((_248817_n != (*_self_)._field_breaked.len())) {
						_case_begin_1abc75338:;
						{
							return false;
						}
					}
					else if ((!(_248917_ok))) {
						_case_begin_1abc7539e:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1abc75426;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1abc75426:;
						{
							(*_self_)._field_falled=false;
							if ((_248421_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1abc73545;
						}
					}
					_match_end_1abc74601:;
				};
			}
			_iter_next_1abc73545:;
			++it;
			goto _iter_begin_1abc73545;
		}
		_iter_end_1abc73545:;
	};
	return ((_248330_m.get()._field_default != nullptr) && _1be361a55_check_scope(&(*_self_), _248330_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1be361747_check_inf_iter(_1be360988_MissingRetChecker* _self_, jule::Ptr<_1be2584eb_InfIter> _250933_it) {
	jule::I64 _251013_n = (*_self_)._field_breaked.len();;
	if (_1be361a55_check_scope(&(*_self_), _250933_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_251013_n);
		return true;
	};
	if ((_251013_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _251617_itaddr = static_cast<jule::Uintptr>(_250933_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_251013_n);
			auto it = expr.begin();
			_iter_begin_1abc79271:;
			if (it != expr.end()) {
				jule::Uintptr _251720_addr = *it;
				{
					if ((_251617_itaddr == _251720_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_251013_n);
						return false;
					};
				}
				_iter_next_1abc79271:;
				++it;
				goto _iter_begin_1abc79271;
			}
			_iter_end_1abc79271:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_251013_n);
	};
	return true;
}



inline jule::Bool _1be361a55_check_scope(_1be360988_MissingRetChecker* _self_, jule::Ptr<_1be1ca25e_Scope> _252830_s) {
	if ((_252830_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _252830_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1abc7ae54:;
		if (it != expr.end()) {
			jule::Any _253221_st = *it;
			{
				{
					auto &_match_expr{ _253221_st };
					
					if (_match_expr.type_is<jule::Ptr<_1be25a036_FallSt>>()) {
						_case_begin_1abc7b84a:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be258c9e_BreakSt>>()) {
						_case_begin_1abc7b8e4:;
						{
							jule::Uintptr _253821_addr = _253221_st.operator jule::Ptr<_1be258c9e_BreakSt>().get()._field_it;;
							if ((_253821_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_253821_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be258ab2_ContSt>>()) {
						_case_begin_1abc7b95a:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
						_case_begin_1abc7b9c1:;
						{
							if (_1be361747_check_inf_iter(&(*_self_), _253221_st.operator jule::Ptr<_1be2584eb_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be25a223_RetSt>>()) {
						_case_begin_1abc7ba37:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be1ca25e_Scope>>()) {
						_case_begin_1abc7ba9d:;
						{
							if (_1be361a55_check_scope(&(*_self_), _253221_st.operator jule::Ptr<_1be1ca25e_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
						_case_begin_1abc7bb25:;
						{
							{
								auto &_match_expr{ _253221_st.operator jule::Ptr<_1be3a92d9_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
									_case_begin_1abc808e8:;
									{
										return true;
									}
								}
								_match_end_1abc8084e:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be25830e_Conditional>>()) {
						_case_begin_1abc7bb9c:;
						{
							if (_1be36112b_check_conditional(&(*_self_), _253221_st.operator jule::Ptr<_1be25830e_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be25992b_Match>>()) {
						_case_begin_1abc7bc24:;
						{
							if (_1be361439_check_match(&(*_self_), _253221_st.operator jule::Ptr<_1be25992b_Match>())) {
								return true;
							};
						}
					}
					_match_end_1abc7b6a2:;
				};
			}
			_iter_next_1abc7ae54:;
			++it;
			goto _iter_begin_1abc7ae54;
		}
		_iter_end_1abc7ae54:;
	};
	return false;
}



inline jule::Bool _1be361d63_check(_1be360988_MissingRetChecker* _self_, jule::Ptr<_1be1ca25e_Scope> _257424_s) {
	return _1be361a55_check_scope(&(*_self_), _257424_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1be360988_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3626e3_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be363a13_is_initialized(_1be36365b_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1be363c77_is_type_inferred(_1be36365b_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1be36365b_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1be364805_dispose(jule::Ptr<_1bc9c9873_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1d70884de_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1d7061462_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1be364a9c_to_str(jule::Ptr<_1bc9c9873_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1d70884de_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1d7061462_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1be3d9083_Prim> _4113_prim = _1be3d6679_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1be3dc042_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1be364ddd_logical(jule::Ptr<_1bc9c9873_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1d70884de_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1d7061462_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1be3d9083_Prim> _6713_prim = _1be3d6679_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1be3dbccd_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1be3d7acb_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1be365185_eq(jule::Ptr<_1bc9c9873_Fn> _7522_f) {
	return static__1be364ddd_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1be36542c_gt(jule::Ptr<_1bc9c9873_Fn> _8022_f) {
	return static__1be364ddd_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1be3656c4_gt_eq(jule::Ptr<_1bc9c9873_Fn> _8525_f) {
	return static__1be364ddd_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1be36596b_lt(jule::Ptr<_1bc9c9873_Fn> _9022_f) {
	return static__1be364ddd_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1be365c13_lt_eq(jule::Ptr<_1bc9c9873_Fn> _9525_f) {
	return static__1be364ddd_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1be366054_result(jule::Ptr<_1bc9c9873_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1d70884de_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1d7061462_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1be3d7acb_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1be3662eb_shl(jule::Ptr<_1bc9c9873_Fn> _12223_f) {
	return static__1be366054_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1be366593_shr(jule::Ptr<_1bc9c9873_Fn> _12723_f) {
	return static__1be366054_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1be36683a_add(jule::Ptr<_1bc9c9873_Fn> _13223_f) {
	return static__1be366054_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1be366ad2_sub(jule::Ptr<_1bc9c9873_Fn> _13723_f) {
	return static__1be366054_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1be366d79_div(jule::Ptr<_1bc9c9873_Fn> _14223_f) {
	return static__1be366054_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1be367121_mul(jule::Ptr<_1bc9c9873_Fn> _14723_f) {
	return static__1be366054_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1be3673b8_mod(jule::Ptr<_1bc9c9873_Fn> _15223_f) {
	return static__1be366054_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1be367660_bit_and(jule::Ptr<_1bc9c9873_Fn> _15727_f) {
	return static__1be366054_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1be367907_bit_or(jule::Ptr<_1bc9c9873_Fn> _16226_f) {
	return static__1be366054_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1be367b9e_bit_xor(jule::Ptr<_1bc9c9873_Fn> _16727_f) {
	return static__1be366054_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1be367ee0_unary(jule::Ptr<_1bc9c9873_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1d70884de_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1d7061462_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1be3d7acb_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1be368287_neg(jule::Ptr<_1bc9c9873_Fn> _19223_f) {
	return static__1be367ee0_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1be36852e_pos(jule::Ptr<_1bc9c9873_Fn> _19723_f) {
	return static__1be367ee0_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1be3687c6_bit_not(jule::Ptr<_1bc9c9873_Fn> _20227_f) {
	return static__1be367ee0_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1be368b17_assign(jule::Ptr<_1bc9c9873_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1d70884de_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1d7061462_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1be368dae_add_assign(jule::Ptr<_1bc9c9873_Fn> _22730_f) {
	return static__1be368b17_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1be369156_sub_assign(jule::Ptr<_1bc9c9873_Fn> _23230_f) {
	return static__1be368b17_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1be3693ed_div_assign(jule::Ptr<_1bc9c9873_Fn> _23730_f) {
	return static__1be368b17_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1be369695_mul_assign(jule::Ptr<_1bc9c9873_Fn> _24230_f) {
	return static__1be368b17_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1be36993c_mod_assign(jule::Ptr<_1bc9c9873_Fn> _24730_f) {
	return static__1be368b17_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1be369bd4_shl_assign(jule::Ptr<_1bc9c9873_Fn> _25230_f) {
	return static__1be368b17_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1be369e7b_shr_assign(jule::Ptr<_1bc9c9873_Fn> _25730_f) {
	return static__1be368b17_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1be36a223_bit_or_assign(jule::Ptr<_1bc9c9873_Fn> _26233_f) {
	return static__1be368b17_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1be36a4ba_bit_and_assign(jule::Ptr<_1bc9c9873_Fn> _26734_f) {
	return static__1be368b17_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1be36a762_bit_xor_assign(jule::Ptr<_1bc9c9873_Fn> _27234_f) {
	return static__1be368b17_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1be364184_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1be39521a_push_err(_1be394bed_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1be34aec3_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1be39547e_check_trait(_1be394bed_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1be3d548b_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1bd929d66_Trait> _12513_trt = _1be3d7d40_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1be3d68dd_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1abcbe12e:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1be3d68dd_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1be3d7acb_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1abcbe21c;
			}
		}
		else if ((_1be3d7acb_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1abcbe21c:;
			{
				jule::Ptr<_1d70ab9c9_StructIns> _13617_s = _1be3d7acb_strct((*_self_)._field_src.ptr());;
				if ((!(_1d70707c3_is_implements(_13617_s.get()._field_decl.ptr(), _12513_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12617_ref)) && _1be38975e_trait_has_reference_receiver(_12513_trt))) {
					_1be39521a_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1be3d7d40_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1abcbe283:;
			{
				_12132_ok = (_12513_trt == _1be3d7d40_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1abcbd9be:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1abcbd969:;
	};
}



inline jule::Bool _1be3956e3_check_ptr(_1be394bed_TypeCompatibilityChecker* _self_) {
	jule::Bool _15230_ok = jule::Bool();
	if (_1be3d548b_is_nil((*_self_)._field_src.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	jule::Ptr<_1be3e0b06_Ptr> _15617_dest = _1be3d6b52_ptr((*_self_)._field_dest.ptr());;
	if (_1be3e15c9_is_unsafe(_15617_dest.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	_15230_ok = _1be3d4c71_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15230_ok;
}



inline jule::Bool _1be395957_check_prim(_1be394bed_TypeCompatibilityChecker* _self_) {
	jule::Bool _16331_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1be3d9083_Prim> _16517_prim = _1be3d6679_prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1be3dc2a6_is_any(_16517_prim.ptr()))) {
			_16331_ok = true;
			return _16331_ok;
		};
	};
	_16331_ok = _1be3d4c71_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16331_ok;
}



inline jule::Bool _1be395d0e___type_enum(_1be394bed_TypeCompatibilityChecker* _self_, jule::Ptr<_1bd9c99a4_TypeEnum>& _17331_e, jule::Ptr<_1be3d45ab_TypeKind>& _17350_t2) {
	jule::Bool _17367_ok = jule::Bool();
	{
		auto &expr = _17331_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abcc70b0:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb58ddc_TypeEnumItem> _17421_item = *it;
			{
				if (_1be3d4c71_equals(_17421_item.get()._field_kind.get()._field_kind, _17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
				jule::Ptr<_1bd9c99a4_TypeEnum> _17821_ke = _1be3d712a_tenm(_17421_item.get()._field_kind.get()._field_kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1abcc70b0;
				};
				if (_1be395d0e___type_enum(&(*_self_), _17821_ke,_17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
			}
			_iter_next_1abcc70b0:;
			++it;
			goto _iter_begin_1abcc70b0;
		}
		_iter_end_1abcc70b0:;
	};
	_17367_ok = false;
	return _17367_ok;
}



inline jule::Bool _1be396073_check_type_enum(_1be394bed_TypeCompatibilityChecker* _self_) {
	jule::Bool _18936_ok = jule::Bool();
	if (_1be3d4c71_equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18936_ok = true;
		return _18936_ok;
	};
	jule::Ptr<_1bd9c99a4_TypeEnum> _19317_e = _1be3d712a_tenm((*_self_)._field_dest.ptr());;
	_18936_ok = _1be395d0e___type_enum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18936_ok;
}



inline jule::Bool _1be3962d7_check(_1be394bed_TypeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1be3d6b52_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1be3956e3_check_ptr(&(*_self_));
		return _19726_ok;
	};
	if (_1be3d5bc8_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1be3d548b_is_nil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1be3d6679_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1abccc956:;
			{
				_19726_ok = _1be395957_check_prim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1be3d712a_tenm((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1abccc7e1:;
			{
				_19726_ok = _1be396073_check_type_enum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1be3d7d40_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1abccc857:;
			{
				_19726_ok = _1be39547e_check_trait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1abccb988:;
			{
				_19726_ok = _1be3d4c71_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1abccb845:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be394bed_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1be396c88_push_err(_1be396826_AssignTypeChecker* _self_, jule::Str _22927_fmt, jule::Slice<jule::Any> _22940_args) {
	_1be34aec3_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22927_fmt,jule::Any(_22940_args));
}



inline jule::Bool _1be396eec_check_validity(_1be396826_AssignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1be3d7867_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abcd1174:;
			{
				jule::Ptr<_1bc9c9c4c_FnIns> _23717_f = _1be3d7867_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1d707b559_is_builtin(_23717_f.ptr())) {
						_case_begin_1abcd274c:;
						{
							_1be396c88_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1abcd27c4:;
						{
							_1be396c88_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_1d70615d8_is_method(_23717_f.get()._field_decl.ptr())) {
						_case_begin_1abcd284b:;
						{
							_1be396c88_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if ((_23717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1abcd28c3:;
						{
							_1be396c88_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1abcd2670:;
				};
			}
		}
		else if ((_1be3d8318_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abcd11eb:;
			{
				_1be396c88_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1abcd10b9:;
	};
	return _23417_valid;
}



inline jule::Bool _1be397261_check_const(_1be396826_AssignTypeChecker* _self_) {
	if (((((!(_1be3a9b9c_is_const((*_self_)._field_d.ptr()))) || (_1be3d6679_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1be257e35_is_num(_1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _27313_kind = _1be3d6679_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1be257b8d_is_float(_27313_kind)) {
			_case_begin_1abcd96cc:;
			{
				if ((!(_1be37bc90_float_assignable(_27313_kind,(*_self_)._field_d)))) {
					_1be396c88_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1be25786e_is_int(_27313_kind)) {
			_case_begin_1abcd8ee5:;
			{
				if ((!(_1be393aa9_int_assignable(_27313_kind,(*_self_)._field_d)))) {
					_1be396c88_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1abcd8e7e:;
			{
				return false;
			}
		}
		_match_end_1abcd8e29:;
	};
	return true;
}



inline jule::Bool _1be3974c5_is_prim(_1be396826_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1be3d5227_cpp_linked((*_self_)._field_dest.ptr()) || _1be3d5227_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1be3d6679_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1be397739_check_compatibility(_1be396826_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1abcdd736:;
			{
				return false;
			}
		}
		else if ((!(_1be396eec_check_validity(&(*_self_))))) {
			_case_begin_1abcdd7ad:;
			{
				return false;
			}
		}
		else if (_1be397261_check_const(&(*_self_))) {
			_case_begin_1abcdd835:;
			{
				return true;
			}
		}
		else if ((_1be3d6db6_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abcdd8ac:;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _31521_dkind = (*_self_)._field_dest;;
				if ((_1be3d6db6_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31521_dkind=_1be3d6db6_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1be3d6679_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1abcdd615;
				};
				if (_1be2546a1_types_are_compatible(_1be3d6679_prim(_1be3d6db6_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1be3d6679_prim(_31521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1be3974c5_is_prim(&(*_self_))) {
			_case_begin_1abcdd934:;
			{
				jule::Ptr<_1be3d9083_Prim> _32517_dest = _1be3d6679_prim((*_self_)._field_dest.ptr());;
				if (_1be3dc2a6_is_any(_32517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1be3d9083_Prim> _32921_src = _1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1be2546a1_types_are_compatible(_32517_dest.get()._field_kind,_32921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1abcdd615:;
	};
	return _1be351748_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1be39799d_check(_1be396826_AssignTypeChecker* _self_) {
	jule::Bool _33813_ok = _1be397739_check_compatibility(&(*_self_));;
	if (_33813_ok) {
		_1be3eca47_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1be396826_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1be398707_push_generic(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _35636_k, jule::I64 _35650_i) {
	(*_self_)._field_f.get()._field_generics[_35650_i]=_35636_k;
}



inline jule::Bool _1be3989d2_annotate_prim(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _36044_k) {
	jule::Bool _36060_ok = jule::Bool();
	jule::Str _36113_kind = _1be3d4963_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1abce761e:;
		if (it != expr.end()) {
			jule::I64 _36213_i = it - expr.begin();
			jule::Ptr<_1d709c536_GenericDecl> _36216_g = *it;
			{
				if ((_36113_kind != _36216_g.get()._field_ident)) {
					goto _iter_next_1abce761e;
				};
				jule::Ptr<_1be3d45ab_TypeKind> _36717_t = (*_self_)._field_f.get()._field_generics[_36213_i];;
				{
					
					if ((_36717_t == nullptr)) {
						_case_begin_1abce92be:;
						{
							_1be398707_push_generic(&(*_self_), _36044_k,_36213_i);
						}
					}
					else if ((!(_1be3d4c71_equals(_36717_t, _36044_k)))) {
						_case_begin_1abce9346:;
						{
							_36060_ok = false;
							return _36060_ok;
						}
					}
					_match_end_1abce917b:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_36044_k.get()._field_kind;
				_36060_ok = true;
				return _36060_ok;
			}
			_iter_next_1abce761e:;
			++it;
			_36213_i++;
			goto _iter_begin_1abce761e;
		}
		_iter_end_1abce761e:;
	};
	_36060_ok = false;
	return _36060_ok;
}



inline jule::Bool _1be398ce0_annotate_slc(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _38343_k) {
	jule::Bool _38359_ok = jule::Bool();
	jule::Ptr<_1be3dceee_Slc> _38417_pslc = _1be3d7603_slc((*((*_self_)._field_k)).ptr());;
	if ((_38417_pslc == nullptr)) {
		_38359_ok = false;
		return _38359_ok;
	};
	jule::Ptr<_1be3dceee_Slc> _38917_slc = _1be3d7603_slc(_38343_k.ptr());;
	(*_self_)._field_k=(&(_38417_pslc.get()._field_elem));
	_38359_ok = _1be39a4ea_annotate_kind(&(*_self_), _38917_slc.get()._field_elem);
	return _38359_ok;
}



inline jule::Bool _1be399197_check_map_key(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>* _39443_k, jule::Ptr<_1be3d45ab_TypeKind>& _39463_ck) {
	jule::Bool _39480_ok = jule::Bool();
	jule::Ptr<_1be3d45ab_TypeKind>* _39517_old = (*_self_)._field_k;;
	(*_self_)._field_k=_39443_k;
	_39480_ok=_1be39a4ea_annotate_kind(&(*_self_), _39463_ck);
	(*_self_)._field_k=_39517_old;
	return _39480_ok;
}



inline jule::Bool _1be3994a5_annotate_map(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _40243_k) {
	jule::Bool _40259_ok = jule::Bool();
	jule::Ptr<_1be3de5a5_Map> _40317_pmap = _1be3d80a4_map((*((*_self_)._field_k)).ptr());;
	if ((_40317_pmap == nullptr)) {
		_40259_ok = false;
		return _40259_ok;
	};
	jule::Ptr<_1be3de5a5_Map> _40817_m = _1be3d80a4_map(_40243_k.ptr());;
	_40259_ok = (_1be399197_check_map_key(&(*_self_), (&(_40317_pmap.get()._field_key)),_40817_m.get()._field_key) && _1be399197_check_map_key(&(*_self_), (&(_40317_pmap.get()._field_val)),_40817_m.get()._field_val));
	return _40259_ok;
}



inline jule::Bool _1be3997b3_annotate_fn(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _41442_k) {
	jule::Bool _41458_ok = jule::Bool();
	jule::Ptr<_1bc9c9c4c_FnIns> _41517_pf = _1be3d7867_fnc((*((*_self_)._field_k)).ptr());;
	if ((_41517_pf == nullptr)) {
		_41458_ok = false;
		return _41458_ok;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _41917_f = _1be3d7867_fnc(_41442_k.ptr());;
	{
		
		if ((_41517_pf.get()._field_params.len() != _41917_f.get()._field_params.len())) {
			_case_begin_1abd02dbb:;
			{
				_41458_ok = false;
				return _41458_ok;
			}
		}
		else if ((_1d70884de_is_void(_41517_pf.get()._field_decl.ptr()) != _1d70884de_is_void(_41917_f.get()._field_decl.ptr()))) {
			_case_begin_1abd02e43:;
			{
				_41458_ok = false;
				return _41458_ok;
			}
		}
		_match_end_1abd02d44:;
	};
	_41458_ok=true;
	jule::Ptr<_1be3d45ab_TypeKind>* _42817_old = (*_self_)._field_k;;
	{
		auto &expr = _41917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abd04829:;
		if (it != expr.end()) {
			jule::I64 _42914_i = it - expr.begin();
			jule::Ptr<_1bc9c9a60_ParamIns> _42921_fp = *it;
			{
				(*_self_)._field_k=(&(_41517_pf.get()._field_params[_42914_i].get()._field_kind));
				_41458_ok=(_1be39a4ea_annotate_kind(&(*_self_), _42921_fp.get()._field_kind) && _41458_ok);
			}
			_iter_next_1abd04829:;
			++it;
			_42914_i++;
			goto _iter_begin_1abd04829;
		}
		_iter_end_1abd04829:;
	};
	if ((!(_1d70884de_is_void(_41517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_41517_pf.get()._field_result));
		_41458_ok=(_1be39a4ea_annotate_kind(&(*_self_), _41917_f.get()._field_result) && _41458_ok);
	};
	(*_self_)._field_k=_42817_old;
	return _41458_ok;
}



inline jule::Bool _1be399ac1_annotate_ptr(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _44343_k) {
	jule::Bool _44359_ok = jule::Bool();
	jule::Ptr<_1be3e0b06_Ptr> _44417_pptr = _1be3d6b52_ptr((*((*_self_)._field_k)).ptr());;
	if ((_44417_pptr == nullptr)) {
		_44359_ok = false;
		return _44359_ok;
	};
	jule::Ptr<_1be3e0b06_Ptr> _44917_ptr = _1be3d6b52_ptr(_44343_k.ptr());;
	(*_self_)._field_k=(&(_44417_pptr.get()._field_elem));
	_44359_ok = _1be39a4ea_annotate_kind(&(*_self_), _44917_ptr.get()._field_elem);
	return _44359_ok;
}



inline jule::Bool _1be399dce_annotate_sptr(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _45444_k) {
	jule::Bool _45460_ok = jule::Bool();
	jule::Ptr<_1be3dc592_Sptr> _45517_ssptr = _1be3d68dd_sptr((*((*_self_)._field_k)).ptr());;
	if ((_45517_ssptr == nullptr)) {
		_45460_ok = false;
		return _45460_ok;
	};
	jule::Ptr<_1be3dc592_Sptr> _46017_sptr = _1be3d68dd_sptr(_45444_k.ptr());;
	(*_self_)._field_k=(&(_45517_ssptr.get()._field_elem));
	_45460_ok = _1be39a4ea_annotate_kind(&(*_self_), _46017_sptr.get()._field_elem);
	return _45460_ok;
}



inline jule::Bool _1be39a1dc_annotate_any(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _46543_k) {
	jule::Bool _46559_ok = jule::Bool();
	jule::Str _46613_kind = _1be3d4963_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1abd0bee6:;
		if (it != expr.end()) {
			jule::I64 _46713_i = it - expr.begin();
			jule::Ptr<_1d709c536_GenericDecl> _46716_g = *it;
			{
				if ((_46613_kind != _46716_g.get()._field_ident)) {
					goto _iter_next_1abd0bee6;
				};
				jule::Ptr<_1be3d45ab_TypeKind> _47217_t = (*_self_)._field_f.get()._field_generics[_46713_i];;
				{
					
					if ((_47217_t == nullptr)) {
						_case_begin_1abd0db96:;
						{
							_1be398707_push_generic(&(*_self_), _46543_k,_46713_i);
						}
					}
					else if ((!(_1be3d4c71_equals(_47217_t, _46543_k)))) {
						_case_begin_1abd0dc1d:;
						{
							_46559_ok = false;
							return _46559_ok;
						}
					}
					_match_end_1abd0da53:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_46543_k.get()._field_kind;
				_46559_ok = true;
				return _46559_ok;
			}
			_iter_next_1abd0bee6:;
			++it;
			_46713_i++;
			goto _iter_begin_1abd0bee6;
		}
		_iter_end_1abd0bee6:;
	};
	_46559_ok = false;
	return _46559_ok;
}



inline jule::Bool _1be39a4ea_annotate_kind(_1be398174_DynamicTypeAnnotation* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _48844_k) {
	jule::Bool _48860_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _48860_ok;
	};
	{
		
		if (_1be39a1dc_annotate_any(&(*_self_), _48844_k)) {
			_case_begin_1abd11924:;
			{
				_48860_ok = true;
				return _48860_ok;
			}
		}
		else if ((_1be3d6679_prim(_48844_k.ptr()) != nullptr)) {
			_case_begin_1abd1198a:;
			{
				_48860_ok = _1be3989d2_annotate_prim(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1be3d7603_slc(_48844_k.ptr()) != nullptr)) {
			_case_begin_1abd11638:;
			{
				_48860_ok = _1be398ce0_annotate_slc(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1be3d80a4_map(_48844_k.ptr()) != nullptr)) {
			_case_begin_1abd1169e:;
			{
				_48860_ok = _1be3994a5_annotate_map(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1be3d7867_fnc(_48844_k.ptr()) != nullptr)) {
			_case_begin_1abd11715:;
			{
				_48860_ok = _1be3997b3_annotate_fn(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1be3d6b52_ptr(_48844_k.ptr()) != nullptr)) {
			_case_begin_1abd1123c:;
			{
				_48860_ok = _1be399ac1_annotate_ptr(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else if ((_1be3d68dd_sptr(_48844_k.ptr()) != nullptr)) {
			_case_begin_1abd112a3:;
			{
				_48860_ok = _1be399dce_annotate_sptr(&(*_self_), _48844_k);
				return _48860_ok;
			}
		}
		else {
			_case_begin_1abd111c6:;
			{
				_48860_ok = false;
				return _48860_ok;
			}
		}
		_match_end_1abd11171:;
	};
}



inline jule::Bool _1be39a75e_annotate(_1be398174_DynamicTypeAnnotation* _self_) {
	jule::Bool _51336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_51336_ok = _1be39a4ea_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _51336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1be398174_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1be39b485_push_err_token(_1be39ae35_FnCallArgChecker* _self_, jule::Ptr<_20201c3d1_Token> _52933_token, jule::Str _52948_fmt, jule::Slice<jule::Any> _52961_args) {
	_1be34aec3_push_err((*_self_)._field_e.get()._field_s.ptr(), _52933_token,_52948_fmt,jule::Any(_52961_args));
}



inline void _1be39b7a4_push_err(_1be39ae35_FnCallArgChecker* _self_, jule::Str _53327_fmt, jule::Slice<jule::Any> _53340_args) {
	_1be39b485_push_err_token(&(*_self_), (*_self_)._field_error_token,_53327_fmt,jule::Any(_53340_args));
}



inline jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>> _1be39ba18_get_params(_1be39ae35_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1d708990d_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1be39bd26_check_counts(_1be39ae35_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>& _54632_params) {
	jule::Bool _54655_ok = jule::Bool();
	jule::I64 _54717_n = _54632_params.len();;
	if (((_54717_n > 0LL) && _1d708990d_is_self(_54632_params[0LL].get()._field_decl.ptr()))) {
		(_54717_n)--;
	};
	jule::I64 _55217_diff = (_54717_n - (*_self_)._field_args.len());;
	{
		
		if ((_55217_diff == 0LL)) {
			_case_begin_1abd1c523:;
			{
				_54655_ok = true;
				return _54655_ok;
			}
		}
		else if (((_54717_n > 0LL) && _54632_params[(_54717_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1abd1c589:;
			{
				_54655_ok = true;
				return _54655_ok;
			}
		}
		else if (((_55217_diff < 0LL) || (_55217_diff > _54632_params.len()))) {
			_case_begin_1abd1c600:;
			{
				_1be39b7a4_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_54655_ok = false;
				return _54655_ok;
			}
		}
		_match_end_1abd1c479:;
	};
	jule::Str _56317_idents = jule::Str();;
	for (; (_55217_diff > 0LL); (_55217_diff)--) {
		{
			_56317_idents+=(jule::Str(", ", 2) + _54632_params[(_54717_n - _55217_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1abd1e04c:;
	}
	_iter_end_1abd1e04c:;;
	(_56317_idents).mut_slice(2LL);;
	_1be39b7a4_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_56317_idents)}));
	_54655_ok = false;
	return _54655_ok;
}



inline jule::Bool _1be39c277_check_arg(_1be39ae35_FnCallArgChecker* _self_, jule::Ptr<_1bc9c9a60_ParamIns>& _57333_p, jule::Ptr<_1be3a92d9_Data>& _57352_arg, jule::Ptr<_20201c3d1_Token>& _57369_error_token) {
	jule::Bool _57392_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1bc9ca632_parameter_uses_generics(_57333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_57392_ok=(!(_57333_p.get()._field_decl.get()._field_variadic));
		if (_57392_ok) {
			_1be398174_DynamicTypeAnnotation _57725_dta = _1be398174_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_57333_p, ._field_a=_57352_arg, ._field_error_token=_57369_error_token, };;
			_57392_ok=_1be39a75e_annotate(&_57725_dta);
		};
		if ((!(_57392_ok))) {
			_1be39b485_push_err_token(&(*_self_), _57369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_57392_ok = false;
			return _57392_ok;
		};
	};
	if (_1be3530c9_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _57333_p.get()._field_decl.get()._field_mutable,_57333_p.get()._field_decl.get()._field_reference,_57333_p.get()._field_kind,_57352_arg,_57369_error_token)) {
		_1be3512c5_check_assign_type((*_self_)._field_e.get()._field_s, _57333_p.get()._field_decl.get()._field_reference,_57333_p.get()._field_kind,_57352_arg,_57369_error_token);
	};
	_57392_ok = true;
	return _57392_ok;
}



inline jule::Bool _1be39c62e_push(_1be39ae35_FnCallArgChecker* _self_, jule::Ptr<_1bc9c9a60_ParamIns>& _60028_p, jule::Ptr<_1d709475e_Expr> _60046_arg) {
	jule::Bool _60060_ok = jule::Bool();
	jule::Ptr<_1be3d45ab_TypeKind> _60117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _60213_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1be3a92d9_Data> _60317_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_60028_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_60028_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_60028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_60317_d=_1be3c5a0e_eval_expr_kind((*_self_)._field_e, _60046_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_60117_old;
	(*_self_)._field_e.get()._field_immutable=_60213_old_immut;
	if ((_60317_d == nullptr)) {
		_60060_ok = false;
		return _60060_ok;
	};
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60317_d));;
	_60060_ok = _1be39c277_check_arg(&(*_self_), _60028_p,_60317_d,_60046_arg.get()._field_token);
	return _60060_ok;
}



inline jule::Bool _1be39c9d6_push_variadic(_1be39ae35_FnCallArgChecker* _self_, jule::Ptr<_1bc9c9a60_ParamIns>& _62437_p, jule::I64 _62455_i) {
	jule::Bool _62465_ok = jule::Bool();
	_62465_ok=true;
	jule::Bool _62617_variadiced = false;;
	jule::Bool _62713_more = ((_62455_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1bc9c5253_SliceExprModel> _62817_model = jule::new_ptr<_1bc9c5253_SliceExprModel>(_1bc9c5253_SliceExprModel{._field_elem_kind=_62437_p.get()._field_kind, });;
	jule::Ptr<_1be3d45ab_TypeKind> _63217_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _63713_variadic = _62437_p.get()._field_kind.get()._field_variadic;;
	_62437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_62437_p.get()._field_kind.get()._field_variadic=_63713_variadic;
	});;
	for (; (_62455_i < (*_self_)._field_args.len()); (_62455_i)++) {
		{
			jule::Ptr<_1d709475e_Expr> _64421_arg = (*_self_)._field_args[_62455_i];;
			{
				auto &_match_expr{ _64421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1d7097388_VariadicExpr>>()) {
					_case_begin_1abd2d765:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=_62437_p.get()._field_kind}), 8)});
					}
				}
				else {
					_case_begin_1abd2e17d:;
					{
						(*_self_)._field_e.get()._field_prefix=_62437_p.get()._field_kind;
					}
				}
				_match_end_1abd2e128:;
			};
			jule::Ptr<_1be3a92d9_Data> _65721_d = _1be3c5d1c_eval((*_self_)._field_e, _64421_arg);;
			if ((_65721_d == nullptr)) {
				_62465_ok=false;
				goto _iter_next_1abd2cc4d;
			};
			if (_65721_d.get()._field_kind.get()._field_variadic) {
				_62617_variadiced=true;
				{
					auto &_match_expr{ _65721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1bc9c5253_SliceExprModel>>()) {
						_case_begin_1abd31416:;
						{
							_62817_model=_65721_d.get()._field_model.operator jule::Ptr<_1bc9c5253_SliceExprModel>();
							_62817_model.get()._field_elem_kind=_62437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1abd31834:;
						{
							_62817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_65721_d));;
						}
					}
					_match_end_1abd317ce:;
				};
				_62437_p.get()._field_kind.get()._field_variadic=true;
				_62465_ok=(_62465_ok && _1be39c277_check_arg(&(*_self_), _62437_p,_65721_d,_64421_arg.get()._field_token));
				(_62455_i)++;
				goto _iter_end_1abd2cc4d;
			};
			_62465_ok=(_62465_ok && _1be39c277_check_arg(&(*_self_), _62437_p,_65721_d,_64421_arg.get()._field_token));
			_62817_model.get()._field_elems = jule::alloc_for_append(_62817_model.get()._field_elems,1);_62817_model.get()._field_elems.__push(jule::Any(_65721_d.get()._field_model));;
		}
	_iter_next_1abd2cc4d:;
	}
	_iter_end_1abd2cc4d:;;
	(*_self_)._field_e.get()._field_prefix=_63217_old;
	if ((_62617_variadiced && _62713_more)) {
		_1be39b485_push_err_token(&(*_self_), (*_self_)._field_args[_62455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_62817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_62817_model));;
	};
	return _62465_ok;
}



inline jule::Bool _1be39cce4_check_args(_1be39ae35_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>& _70334_params) {
	jule::Bool _70357_ok = jule::Bool();
	jule::Bool _70413_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_70357_ok=true;
	jule::I64 _70817_i = 0LL;;
	if (((_70334_params.len() > 0LL) && _1d708990d_is_self(_70334_params[0LL].get()._field_decl.ptr()))) {
		(_70817_i)++;
	};
	_julec_label_iter:;
	while ((_70817_i < _70334_params.len())) {
		{
			jule::Ptr<_1bc9c9a60_ParamIns> _71521_p = _70334_params[_70817_i];;
			{
				
				if (_71521_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1abd38d69:;
					{
						_70357_ok=(_1be39c9d6_push_variadic(&(*_self_), _71521_p,_70817_i) && _70357_ok);
						goto _iter_end_1abd37373;
					}
				}
				else if (((*_self_)._field_args.len() <= _70817_i)) {
					_case_begin_1abd384d9:;
					{
						_70357_ok=false;
						goto _iter_end_1abd37373;
					}
				}
				else {
					_case_begin_1abd389c3:;
					{
						_70357_ok=(_1be39c62e_push(&(*_self_), _71521_p,(*_self_)._field_args[_70817_i]) && _70357_ok);
					}
				}
				_match_end_1abd3895c:;
			};
			(_70817_i)++;
		}
	_iter_next_1abd37373:;
	}
	_iter_end_1abd37373:;;
	(*_self_)._field_e.get()._field_arg=_70413_arg;
	return _70357_ok;
}



inline jule::Bool _1be39d07a_check_dynamic_type_annotation(_1be39ae35_FnCallArgChecker* _self_) {
	jule::Bool _73450_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1abd3b0ad:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d45ab_TypeKind> _73516_g = *it;
			{
				if ((_73516_g == nullptr)) {
					_1be39b7a4_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_73450_ok = false;
					return _73450_ok;
				};
			}
			_iter_next_1abd3b0ad:;
			++it;
			goto _iter_begin_1abd3b0ad;
		}
		_iter_end_1abd3b0ad:;
	};
	_73450_ok = true;
	return _73450_ok;
}



inline jule::Bool _1be39d300_check(_1be39ae35_FnCallArgChecker* _self_) {
	jule::Bool _74426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>> _74517_params = _1be39ba18_get_params(&(*_self_));;
	_74426_ok=_1be39bd26_check_counts(&(*_self_), _74517_params);
	if ((!(_74426_ok))) {
		_74426_ok = false;
		return _74426_ok;
	};
	_74426_ok=_1be39cce4_check_args(&(*_self_), _74517_params);
	if ((_74426_ok && (*_self_)._field_dynamic_annotation)) {
		_74426_ok=_1be39d07a_check_dynamic_type_annotation(&(*_self_));
	};
	return _74426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39ae35_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1be39dd4a_push_err(_1be39d83e_StructLitChecker* _self_, jule::Ptr<_20201c3d1_Token> _76827_token, jule::Str _76842_fmt, jule::Slice<jule::Any> _76855_args) {
	_1be3ab363_push_err((*_self_)._field_e.ptr(), _76827_token,_76842_fmt,jule::Any(_76855_args));
}



inline void _1be39e169_push_suggestion(_1be39d83e_StructLitChecker* _self_, jule::Str _77334_fmt, jule::Slice<jule::Any> _77347_args) {
	_1be3ab682_push_suggestion((*_self_)._field_e.ptr(), _77334_fmt,jule::Any(_77347_args));
}



inline void _1be39e532_push_match(_1be39d83e_StructLitChecker* _self_, jule::Ptr<_1d708808d_FieldIns>& _77734_f, jule::Ptr<_1be3a92d9_Data>& _77753_d, jule::Ptr<_20201c3d1_Token>& _77768_error_token) {
	;
	if (_1be3530c9_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_77734_f.get()._field_kind,_77753_d,_77768_error_token)) {
		_1be3512c5_check_assign_type((*_self_)._field_e.get()._field_s, false,_77734_f.get()._field_kind,_77753_d,_77768_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1bc9c47b3_StructArgExprModel>(_1bc9c47b3_StructArgExprModel{._field_field=_77734_f, ._field_expr=jule::Any(_77753_d.get()._field_model)}));;
}



inline void _1be39e851_check_pair(_1be39d83e_StructLitChecker* _self_, jule::Ptr<_1d7099577_FieldExprPair>& _79034_pair, jule::Slice<jule::Ptr<_1d709475e_Expr>>& _79061_exprs) {
	jule::Ptr<_1d708808d_FieldIns> _79217_f = _1d7085ac4_find_field((*_self_)._field_s.ptr(), _79034_pair.get()._field_field.get()._field_kind);;
	if ((_79217_f == nullptr)) {
		_1be39dd4a_push_err(&(*_self_), _79034_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_79034_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _79217_f.get()._field_decl.get()._field_public,_79217_f.get()._field_decl.get()._field_token)))) {
		_1be39dd4a_push_err(&(*_self_), _79034_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_79034_pair.get()._field_field.get()._field_kind)}));
		_1be39e169_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _79061_exprs;
		auto it = expr.begin();
		_iter_begin_1abd47185:;
		if (it != expr.end()) {
			jule::Ptr<_1d709475e_Expr> _80421_expr = *it;
			{
				{
					auto &_match_expr{ _80421_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7099577_FieldExprPair>>()) {
						_case_begin_1abd47a48:;
						{
							jule::Ptr<_1d7099577_FieldExprPair> _80725_dpair = _80421_expr.get()._field_kind.operator jule::Ptr<_1d7099577_FieldExprPair>();;
							{
								
								if ((_79034_pair == _80725_dpair)) {
									_case_begin_1abd48a16:;
									{
										goto _iter_end_1abd47185;
									}
								}
								else if ((_79034_pair.get()._field_field.get()._field_kind == _80725_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1abd48a8d:;
									{
										_1be39dd4a_push_err(&(*_self_), _79034_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_79034_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1abd47185;
									}
								}
								_match_end_1abd4895b:;
							};
						}
					}
					_match_end_1abd4788e:;
				};
			}
			_iter_next_1abd47185:;
			++it;
			goto _iter_begin_1abd47185;
		}
		_iter_end_1abd47185:;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _81817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_81817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_79217_f.get()._field_kind;
	jule::Ptr<_1be3a92d9_Data> _82217_d = _1be3c5a0e_eval_expr_kind((*_self_)._field_e, _79034_pair.get()._field_expr.get()._field_kind);;
	if ((_82217_d == nullptr)) {
		return;;
	};
	_1be39e532_push_match(&(*_self_), _79217_f,_82217_d,_79034_pair.get()._field_field);
}



inline jule::Bool _1be39eb5e_ready_exprs(_1be39d83e_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1d709475e_Expr>>& _82935_exprs) {
	jule::Bool _83017_ok = true;;
	{
		auto &expr = _82935_exprs;
		auto it = expr.begin();
		_iter_begin_1abd4c872:;
		if (it != expr.end()) {
			jule::I64 _83114_i = it - expr.begin();
			jule::Ptr<_1d709475e_Expr> _83121_expr = *it;
			{
				{
					auto &_match_expr{ _83121_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d709ac60_KeyValPair>>()) {
						_case_begin_1abd4d5cb:;
						{
							jule::Ptr<_1d709ac60_KeyValPair> _83425_pair = _83121_expr.get()._field_kind.operator jule::Ptr<_1d709ac60_KeyValPair>();;
							{
								auto &_match_expr{ _83425_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
									_case_begin_1abd4de4a:;
									{
										goto _match_end_1abd4e3ce;
									}
								}
								else {
									_case_begin_1abd4e654:;
									{
										_1be39dd4a_push_err(&(*_self_), _83425_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_83017_ok=false;
										goto _iter_next_1abd4c872;
									}
								}
								_match_end_1abd4e3ce:;
							};
							_82935_exprs[_83114_i].get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d7099577_FieldExprPair>(_1d7099577_FieldExprPair{._field_field=_83425_pair.get()._field_key.get()._field_token, ._field_expr=_83425_pair.get()._field_val}));
						}
					}
					_match_end_1abd4d422:;
				};
			}
			_iter_next_1abd4c872:;
			++it;
			_83114_i++;
			goto _iter_begin_1abd4c872;
		}
		_iter_end_1abd4c872:;
	};
	return _83017_ok;
}



inline void _1be39edd4_check(_1be39d83e_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1d709475e_Expr>>& _85329_exprs) {
	if ((_85329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1be39eb5e_ready_exprs(&(*_self_), _85329_exprs)))) {
		return;;
	};
	jule::Bool _86217_paired = false;;
	{
		auto &expr = _85329_exprs;
		auto it = expr.begin();
		_iter_begin_1abd4c70c:;
		if (it != expr.end()) {
			jule::I64 _86314_i = it - expr.begin();
			jule::Ptr<_1d709475e_Expr> _86321_expr = *it;
			{
				{
					auto &_match_expr{ _86321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7099577_FieldExprPair>>()) {
						_case_begin_1abd57b35:;
						{
							jule::Ptr<_1d7099577_FieldExprPair> _86625_pair = _86321_expr.get()._field_kind.operator jule::Ptr<_1d7099577_FieldExprPair>();;
							if (((_86314_i > 0LL) && (!(_86217_paired)))) {
								_1be39dd4a_push_err(&(*_self_), _86625_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_86217_paired=true;
							_1be39e851_check_pair(&(*_self_), _86625_pair,_85329_exprs);
						}
					}
					else {
						_case_begin_1abd52ab9:;
						{
							if (_86217_paired) {
								_1be39dd4a_push_err(&(*_self_), _86321_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_86314_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1be39dd4a_push_err(&(*_self_), _86321_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1abd4c70c;
							};
							jule::Ptr<_1d708808d_FieldIns> _88125_field = (*_self_)._field_s.get()._field_fields[_86314_i];;
							if ((!(_1be34b699_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _88125_field.get()._field_decl.get()._field_public,_88125_field.get()._field_decl.get()._field_token)))) {
								_1be39dd4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1be39e169_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1be3d45ab_TypeKind> _88925_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_88925_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_88125_field.get()._field_kind;
							jule::Ptr<_1be3a92d9_Data> _89325_d = _1be3c5a0e_eval_expr_kind((*_self_)._field_e, _86321_expr.get()._field_kind);;
							if ((_89325_d == nullptr)) {
								goto _iter_next_1abd4c70c;
							};
							_1be39e532_push_match(&(*_self_), _88125_field,_89325_d,_86321_expr.get()._field_token);
						}
					}
					_match_end_1abd52943:;
				};
			}
			_iter_next_1abd4c70c:;
			++it;
			_86314_i++;
			goto _iter_begin_1abd4c70c;
		}
		_iter_end_1abd4c70c:;
	};
	if ((!(_86217_paired))) {
		jule::I64 _90417_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _90521_diff = (_90417_n - _85329_exprs.len());;
		{
			
			if ((_90521_diff <= 0LL)) {
				_case_begin_1abd5b045:;
				{
					return;;
				}
			}
			_match_end_1abd5ade1:;
		};
		jule::Str _91121_idents = jule::Str();;
		for (; (_90521_diff > 0LL); (_90521_diff)--) {
			{
				_91121_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_90417_n - _90521_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1abd5b991:;
		}
		_iter_end_1abd5b991:;;
		(_91121_idents).mut_slice(2LL);;
		_1be39dd4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_91121_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be39d83e_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be36365b_Var> _1be3a08b8_build_var(_1be3a0423_RangeChecker* _self_, jule::Ptr<_1d70a2c45_VarDecl>& _93029_decl) {
	jule::Ptr<_1be36365b_Var> _93117_v = _1bc9d11c6_build_var(_93029_decl);;
	return _93117_v;
}



inline void _1be3a0a94_set_size_key(_1be3a0423_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _20201eb75_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1be3a08b8_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1abd609ea:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1be3626e3_IterRelation>(_1be3626e3_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1be36365b_Var>()});
			}
		}
		_match_end_1abd60940:;
	};
}



inline void _1be3a0e7e_check_range_expr_validity(_1be3a0423_RangeChecker* _self_, jule::Ptr<_1be3a92d9_Data>& _96149_d, jule::Ptr<_1be36365b_Var>& _96160_key, jule::Ptr<_1be3d45ab_TypeKind>& _96176_k) {
	jule::Bool _96217__mut = _96160_key.get()._field_mutable;;
	if ((_96217__mut && (!(_1be3d5964_mutable(_96176_k.ptr()))))) {
		_96217__mut=false;
	};
	_1be3530c9_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _96217__mut,_96160_key.get()._field_reference,_96160_key.get()._field_kind.get()._field_kind,_96149_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1be3a116b_check_slice(_1be3a0423_RangeChecker* _self_) {
	_1be3a0a94_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20201eb75_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1be3dceee_Slc> _98017_slc = _1be3d7603_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1be3a08b8_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_98017_slc.get()._field_elem});
	_1be3a0e7e_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_98017_slc.get()._field_elem);
}



inline void _1be3a1347_check_array(_1be3a0423_RangeChecker* _self_) {
	_1be3a0a94_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20201eb75_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1be3e0199_Arr> _99317_arr = _1be3d738e_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1be3a08b8_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_99317_arr.get()._field_elem});
	_1be3a0e7e_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_99317_arr.get()._field_elem);
}



inline void _1be3a1523_check_map_key_a(_1be3a0423_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _20201eb75_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1be3de5a5_Map> _100517_m = _1be3d80a4_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1be3a08b8_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_100517_m.get()._field_key});
	jule::Ptr<_1be3a92d9_Data> _100917_d = jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d)));;
	_100917_d.get()._field_kind=_100517_m.get()._field_key;
	_1be3a0e7e_check_range_expr_validity(&(*_self_), _100917_d,(*_self_)._field_kind.get()._field_key_a,_100517_m.get()._field_key);
}



inline void _1be3a16ee_check_map_key_b(_1be3a0423_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20201eb75_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1be3de5a5_Map> _102017_m = _1be3d80a4_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1be3a08b8_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_102017_m.get()._field_val});
	jule::Ptr<_1be3a92d9_Data> _102417_d = jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d)));;
	_102417_d.get()._field_kind=_102017_m.get()._field_val;
	_1be3a0e7e_check_range_expr_validity(&(*_self_), _102417_d,(*_self_)._field_kind.get()._field_key_b,_102017_m.get()._field_val);
}



inline void _1be3a18ca_check_map(_1be3a0423_RangeChecker* _self_) {
	_1be3a1523_check_map_key_a(&(*_self_));
	_1be3a16ee_check_map_key_b(&(*_self_));
}



inline void _1be3a1aa6_check_str(_1be3a0423_RangeChecker* _self_) {
	_1be3a0a94_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20201eb75_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1be3a08b8_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1be3a1d1a_check(_1be3a0423_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1abd75625:;
		}
		else if ((_1be3d7603_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abd753c2:;
			{
				_1be3a116b_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1be3d738e_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abd746bd:;
			{
				_1be3a1347_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1be3d80a4_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abd74734:;
			{
				_1be3a18ca_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1abd74657:;
			{
				jule::Ptr<_1be3d9083_Prim> _106317_prim = _1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_106317_prim != nullptr) && _1be3dc042_is_str(_106317_prim.ptr()))) {
					_1be3a1aa6_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1abd7457a:;
	};
	_1be34aec3_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a0423_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1be3a2a63_prepare_types(_1be3a25ac_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1d7078bd8_types((*_self_)._field_f.ptr());
	};
}



inline void _1be3a2cd8_prepare_exprs(_1be3a25ac_RetTypeChecker* _self_, jule::Ptr<_1d709475e_Expr>& _109237_e) {
	if ((_109237_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _109237_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d70953db_TupleExpr>>()) {
			_case_begin_1abd7a22e:;
			{
				(*_self_)._field_exprs=_109237_e.get()._field_kind.operator jule::Ptr<_1d70953db_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1abd7a41b:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_109237_e);;
			}
		}
		_match_end_1abd79ecb:;
	};
}



inline void _1be3a2eb4_ret_vars(_1be3a25ac_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1d70884de_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1be36365b_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1be25aee3_ScopeChecker> _111017_root_scope = _1be25e106_get_root((*_self_)._field_sc);;
	jule::I64 _111217_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1abd7d41e:;
		if (it != expr.end()) {
			jule::I64 _111313_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _111316_ident = *it;
			{
				if (((!(_20201eb75_is_ignore_ident(_111316_ident.get()._field_kind))) && (!(_20201ee1c_is_anon_ident(_111316_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_111017_root_scope.get()._field_table.get()._field_vars[_111217_j]);;
					(_111217_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1be36365b_Var>(_1be36365b_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=(*_self_)._field_types[_111313_i]}), }));;
				};
			}
			_iter_next_1abd7d41e:;
			++it;
			_111313_i++;
			goto _iter_begin_1abd7d41e;
		}
		_iter_end_1abd7d41e:;
	};
	if ((_111217_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1be3a3190_check_exprs(_1be3a25ac_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1be3a92d9_Data>> _113617_datas = jule::Slice<jule::Ptr<_1be3a92d9_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1abd819c7:;
		if (it != expr.end()) {
			jule::I64 _113814_i = it - expr.begin();
			jule::Ptr<_1d709475e_Expr> _113821_expr = *it;
			{
				if ((_113814_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1abd819c7;
				};
				jule::Ptr<_1be3d45ab_TypeKind> _114321_t = (*_self_)._field_types[_113814_i];;
				jule::Ptr<_1be3a92d9_Data> _114521_d = _1be3c612a_eval_expr(_1be3509bc_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1be3eedce_Lookup>((*_self_)._field_sc, 0),_114321_t), _113821_expr);;
				if ((_114521_d == nullptr)) {
					goto _iter_next_1abd819c7;
				};
				_113617_datas = jule::alloc_for_append(_113617_datas,1);_113617_datas.__push(_114521_d);;
				if (((!(_114521_d.get()._field_mutable)) && _1be3d5964_mutable(_114521_d.get()._field_kind.ptr()))) {
					_1be34aec3_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1be396826_AssignTypeChecker _115721_ac = _1be396826_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_114321_t, ._field_d=_114521_d, ._field_error_token=(*_self_)._field_error_token};;
				_1be39799d_check(&_115721_ac);
			}
			_iter_next_1abd819c7:;
			++it;
			_113814_i++;
			goto _iter_begin_1abd819c7;
		}
		_iter_end_1abd819c7:;
	};
	if ((_113617_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1bc9c6c8d_TupleExprModel>(_1bc9c6c8d_TupleExprModel{._field_datas=_113617_datas}));
	} else if ((_113617_datas.len() == 1LL)) {
		(*_self_)._field_model=jule::Any(_113617_datas[0LL].get()._field_model);
	};
}



inline jule::Bool _1be3a349d_check(_1be3a25ac_RetTypeChecker* _self_, jule::Ptr<_1d709475e_Expr>& _117629_e) {
	_1be3a2a63_prepare_types(&(*_self_));
	_1be3a2cd8_prepare_exprs(&(*_self_), _117629_e);
	_1be3a2eb4_ret_vars(&(*_self_));
	jule::I64 _118113_n = (*_self_)._field_exprs.len();;
	if (((_118113_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1d7075ba2_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1be34aec3_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_118113_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1d70884de_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1be34aec3_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_118113_n > (*_self_)._field_types.len())) {
		_1be34aec3_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_118113_n < (*_self_)._field_types.len())) {
		_1be34aec3_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1be3a3190_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a25ac_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be3a4856_find_package(_1be3a4339_SymbolTable* _self_, jule::Str _2635_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1abd8e386:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_ident == _2635_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1abd8e386:;
			++it;
			goto _iter_begin_1abd8e386;
		}
		_iter_end_1abd8e386:;
	};
	return nullptr;
}



inline jule::Ptr<_1be272d40_ImportInfo> _1be3a4b64_select_package(_1be3a4339_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)> _3837_selector) {
	if ((_3837_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1abd90332:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _4321_pkg = *it;
			{
				if (_3837_selector(_4321_pkg)) {
					return _4321_pkg;
				};
			}
			_iter_next_1abd90332:;
			++it;
			goto _iter_begin_1abd90332;
		}
		_iter_end_1abd90332:;
	};
	return nullptr;
}



inline jule::Ptr<_1be36365b_Var> _1be3a501b_find_var(_1be3a4339_SymbolTable* _self_, jule::Str _5331_ident, jule::Bool _5343_cpp_linked) {
	return _1be3a6acd___find_var(&(*_self_), _5331_ident,_5343_cpp_linked,false);
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be3a53c3_find_type_alias(_1be3a4339_SymbolTable* _self_, jule::Str _5938_ident, jule::Bool _5950_cpp_linked) {
	return _1be3a702e___find_type_alias(&(*_self_), _5938_ident,_5950_cpp_linked,false);
}



inline jule::Ptr<_1d7073276_Struct> _1be3a577a_find_struct(_1be3a4339_SymbolTable* _self_, jule::Str _6534_ident, jule::Bool _6546_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1abd932be:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _6621_s = *it;
			{
				if (((_6621_s.get()._field_ident == _6534_ident) && (_6621_s.get()._field_cpp_linked == _6546_cpp_linked))) {
					return _6621_s;
				};
			}
			_iter_next_1abd932be:;
			++it;
			goto _iter_begin_1abd932be;
		}
		_iter_end_1abd932be:;
	};
	return nullptr;
}



inline jule::Ptr<_1bc9c9873_Fn> _1be3a5b32_find_fn(_1be3a4339_SymbolTable* _self_, jule::Str _7630_ident, jule::Bool _7642_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abd94765:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _7721_f = *it;
			{
				if (((_7721_f.get()._field_ident == _7630_ident) && (_7721_f.get()._field_cpp_linked == _7642_cpp_linked))) {
					return _7721_f;
				};
			}
			_iter_next_1abd94765:;
			++it;
			goto _iter_begin_1abd94765;
		}
		_iter_end_1abd94765:;
	};
	return nullptr;
}



inline jule::Ptr<_1bd929d66_Trait> _1be3a5e40_find_trait(_1be3a4339_SymbolTable* _self_, jule::Str _8733_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1abd959db:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> _8821_t = *it;
			{
				if ((_8821_t.get()._field_ident == _8733_ident)) {
					return _8821_t;
				};
			}
			_iter_next_1abd959db:;
			++it;
			goto _iter_begin_1abd959db;
		}
		_iter_end_1abd959db:;
	};
	return nullptr;
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be3a624d_find_enum(_1be3a4339_SymbolTable* _self_, jule::Str _9832_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1abd96976:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9dceb3_Enum> _9921_e = *it;
			{
				if ((_9921_e.get()._field_ident == _9832_ident)) {
					return _9921_e;
				};
			}
			_iter_next_1abd96976:;
			++it;
			goto _iter_begin_1abd96976;
		}
		_iter_end_1abd96976:;
	};
	return nullptr;
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3a655b_find_type_enum(_1be3a4339_SymbolTable* _self_, jule::Str _10937_ident) {
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1abd96e4e:;
		if (it != expr.end()) {
			jule::Ptr<_1bd9c99a4_TypeEnum> _11021_e = *it;
			{
				if ((_11021_e.get()._field_ident == _10937_ident)) {
					return _11021_e;
				};
			}
			_iter_next_1abd96e4e:;
			++it;
			goto _iter_begin_1abd96e4e;
		}
		_iter_end_1abd96e4e:;
	};
	return nullptr;
}



inline jule::Ptr<_1be36365b_Var> _1be3a6acd___find_var(_1be3a4339_SymbolTable* _self_, jule::Str _12029_ident, jule::Bool _12041_cpp_linked, jule::Bool _12059_reverse) {
	if (_12059_reverse) {
		jule::I64 _12221_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_12221_i >= 0LL); (_12221_i)--) {
			{
				jule::Ptr<_1be36365b_Var> _12425_v = (*_self_)._field_vars[_12221_i];;
				if (((_12425_v.get()._field_ident == _12029_ident) && (_12425_v.get()._field_cpp_linked == _12041_cpp_linked))) {
					return _12425_v;
				};
			}
		_iter_next_1abd9999b:;
		}
		_iter_end_1abd9999b:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1abd99407:;
			if (it != expr.end()) {
				jule::Ptr<_1be36365b_Var> _13025_v = *it;
				{
					if (((_13025_v.get()._field_ident == _12029_ident) && (_13025_v.get()._field_cpp_linked == _12041_cpp_linked))) {
						return _13025_v;
					};
				}
				_iter_next_1abd99407:;
				++it;
				goto _iter_begin_1abd99407;
			}
			_iter_end_1abd99407:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be3a702e___find_type_alias(_1be3a4339_SymbolTable* _self_, jule::Str _13936_ident, jule::Bool _13948_cpp_linked, jule::Bool _13966_reverse) {
	if (_13966_reverse) {
		jule::I64 _14121_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_14121_i >= 0LL); (_14121_i)--) {
			{
				jule::Ptr<_1be3d3874_TypeAlias> _14325_ta = (*_self_)._field_type_aliases[_14121_i];;
				if (((_14325_ta.get()._field_ident == _13936_ident) && (_14325_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
					return _14325_ta;
				};
			}
		_iter_next_1abd9cc79:;
		}
		_iter_end_1abd9cc79:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1abd9c6d5:;
			if (it != expr.end()) {
				jule::Ptr<_1be3d3874_TypeAlias> _14925_ta = *it;
				{
					if (((_14925_ta.get()._field_ident == _13936_ident) && (_14925_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
						return _14925_ta;
					};
				}
				_iter_next_1abd9c6d5:;
				++it;
				goto _iter_begin_1abd9c6d5;
			}
			_iter_end_1abd9c6d5:;
		};
	};
	return nullptr;
}



inline jule::Any _1be3a73d6_def_by_ident(_1be3a4339_SymbolTable* _self_, jule::Str _16031_ident, jule::Bool _16043_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1abd9e6b5:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _16121_v = *it;
			{
				if (((_16121_v.get()._field_ident == _16031_ident) && (_16121_v.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16121_v);
				};
			}
			_iter_next_1abd9e6b5:;
			++it;
			goto _iter_begin_1abd9e6b5;
		}
		_iter_end_1abd9e6b5:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1abda0ee1:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d3874_TypeAlias> _16721_ta = *it;
			{
				if (((_16721_ta.get()._field_ident == _16031_ident) && (_16721_ta.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16721_ta);
				};
			}
			_iter_next_1abda0ee1:;
			++it;
			goto _iter_begin_1abda0ee1;
		}
		_iter_end_1abda0ee1:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1abda6dc6:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _17321_s = *it;
			{
				if (((_17321_s.get()._field_ident == _16031_ident) && (_17321_s.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17321_s);
				};
			}
			_iter_next_1abda6dc6:;
			++it;
			goto _iter_begin_1abda6dc6;
		}
		_iter_end_1abda6dc6:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abda79ba:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _17921_f = *it;
			{
				if (((_17921_f.get()._field_ident == _16031_ident) && (_17921_f.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17921_f);
				};
			}
			_iter_next_1abda79ba:;
			++it;
			goto _iter_begin_1abda79ba;
		}
		_iter_end_1abda79ba:;
	};
	if (_16043_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1abda8d62:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> _18921_t = *it;
			{
				if ((_18921_t.get()._field_ident == _16031_ident)) {
					return jule::Any(_18921_t);
				};
			}
			_iter_next_1abda8d62:;
			++it;
			goto _iter_begin_1abda8d62;
		}
		_iter_end_1abda8d62:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1abda979c:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9dceb3_Enum> _19521_e = *it;
			{
				if ((_19521_e.get()._field_ident == _16031_ident)) {
					return jule::Any(_19521_e);
				};
			}
			_iter_next_1abda979c:;
			++it;
			goto _iter_begin_1abda979c;
		}
		_iter_end_1abda979c:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1abdaa528:;
		if (it != expr.end()) {
			jule::Ptr<_1bd9c99a4_TypeEnum> _20121_te = *it;
			{
				if ((_20121_te.get()._field_ident == _16031_ident)) {
					return jule::Any(_20121_te);
				};
			}
			_iter_next_1abdaa528:;
			++it;
			goto _iter_begin_1abdaa528;
		}
		_iter_end_1abdaa528:;
	};
	return nullptr;
}



inline jule::Bool _1be3a7837_is_duplicated_ident(_1be3a4339_SymbolTable* _self_, jule::Uintptr _21334_itself, jule::Str _21351_ident, jule::Bool _21363_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1abdaab77:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> &_21416_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_v) != _21334_itself) && (_21416_v.get()._field_ident == _21351_ident)) && (_21416_v.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1abdaab77:;
			++it;
			goto _iter_begin_1abdaab77;
		}
		_iter_end_1abdaab77:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1abdac805:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d3874_TypeAlias> &_22016_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22016_ta) != _21334_itself) && (_22016_ta.get()._field_ident == _21351_ident)) && (_22016_ta.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1abdac805:;
			++it;
			goto _iter_begin_1abdac805;
		}
		_iter_end_1abdac805:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1abdac4a3:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> &_22616_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22616_s) != _21334_itself) && (_22616_s.get()._field_ident == _21351_ident)) && (_22616_s.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1abdac4a3:;
			++it;
			goto _iter_begin_1abdac4a3;
		}
		_iter_end_1abdac4a3:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1abdad619:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> &_23216_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23216_f) != _21334_itself) && (_23216_f.get()._field_ident == _21351_ident)) && (_23216_f.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1abdad619:;
			++it;
			goto _iter_begin_1abdad619;
		}
		_iter_end_1abdad619:;
	};
	if (_21363_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1abdb1221:;
		if (it != expr.end()) {
			jule::Ptr<_1bd929d66_Trait> &_24216_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24216_t) != _21334_itself) && (_24216_t.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1abdb1221:;
			++it;
			goto _iter_begin_1abdb1221;
		}
		_iter_end_1abdb1221:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1abdb1dae:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9dceb3_Enum> &_24816_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24816_e) != _21334_itself) && (_24816_e.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1abdb1dae:;
			++it;
			goto _iter_begin_1abdb1dae;
		}
		_iter_end_1abdb1dae:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1abdb2d8d:;
		if (it != expr.end()) {
			jule::Ptr<_1bd9c99a4_TypeEnum> &_25416_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25416_te) != _21334_itself) && (_25416_te.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1abdb2d8d:;
			++it;
			goto _iter_begin_1abdb2d8d;
		}
		_iter_end_1abdb2d8d:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a4339_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "type_enums:" << _Src._field_type_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a96c4_is_nil(_1be3a92d9_Data* _self_) {
	return _1be3d548b_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1be3a9938_is_void(_1be3a92d9_Data* _self_) {
	return _1be3d5700_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1be3a9b9c_is_const(_1be3a92d9_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1be3a9eaa_good_operand(_1be3a92d9_Data* _self_, jule::Ptr<_1be3a92d9_Data>& _9636_other) {
	return ((((_1be3d6679_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_1be3dc2a6_is_any(_1be3d6679_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_1be3d7d40_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_1be3d548b_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a92d9_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3aa362_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1be3ab363_push_err(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _12427_token, jule::Str _12442_fmt, jule::Slice<jule::Any> _12455_args) {
	_1be34aec3_push_err((*_self_)._field_s.ptr(), _12427_token,_12442_fmt,jule::Any(_12455_args));
}



inline void _1be3ab682_push_suggestion(_1be3aad57_Eval* _self_, jule::Str _12934_fmt, jule::Slice<jule::Any> _12947_args) {
	_1be34b2e2_push_suggestion((*_self_)._field_s.ptr(), _12934_fmt,jule::Any(_12947_args));
}



inline void _1be3ab85d_allow_builtin(_1be3aad57_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1be3aba39_disallow_builtin(_1be3aad57_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1be3abc9d_is_unsafe(_1be3aad57_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1be3ac012_is_global(_1be3aad57_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be348311_Sema>>()) {
			_case_begin_1abde4c27:;
			{
				return true;
			}
		}
		else {
			_case_begin_1abde4b17:;
			{
				return false;
			}
		}
		_match_end_1abde472c:;
	};
}



inline jule::Bool _1be3ac2dc_apply_numeric_prefix(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _15644_d) {
	if (((((_15644_d == nullptr) || (!(_1be3a9b9c_is_const(_15644_d.ptr())))) || (_1be3d6679_prim(_15644_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1be3d9083_Prim> _16313_prim = _1be3d6679_prim((*_self_)._field_prefix.ptr());;
	if ((_16313_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1be257b8d_is_float(_1be3d93e6_to_str(_16313_prim.ptr()))) {
			_case_begin_1abde7532:;
			{
				_15644_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>((*((*_self_)._field_prefix)));
				_1be1b54be_set_f64(_15644_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1be1b4754_as_f64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1be2572db_is_sig_int(_1be3d93e6_to_str(_16313_prim.ptr()))) {
			_case_begin_1abde7598:;
			{
				if ((!(_1be37bdc2_sig_assignable(_1be3d93e6_to_str(_16313_prim.ptr()),_15644_d)))) {
					return false;
				};
				_15644_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>((*((*_self_)._field_prefix)));
				_1be1b49c9_set_i64(_15644_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1be2575c7_is_unsig_int(_1be3d93e6_to_str(_16313_prim.ptr()))) {
			_case_begin_1abde760e:;
			{
				if ((!(_1be393977_unsig_assignable(_1be3d93e6_to_str(_16313_prim.ptr()),_15644_d)))) {
					return false;
				};
				_15644_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>((*((*_self_)._field_prefix)));
				_1be1b4c4e_set_u64(_15644_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_15644_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1abde72e0:;
	};
	return true;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ac551_lit_nil(_1be3aad57_Eval* _self_) {
	jule::Ptr<_1be159e14_Const> _19217_constant = static__1be1b2e6c_new_nil();;
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_19217_constant), ._field_decl=false, ._field_constant=_19217_constant});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ac85e_lit_str(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr>& _20323_l) {
	jule::Str _20417_s = _20323_l.get()._field_value.slice(1LL,(_20323_l.get()._field_value.len() - 1LL));;
	if (_20201d734_is_raw_str(_20323_l.get()._field_value)) {
		_20417_s=_1be37bb3b_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1be393e50_to_str(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_1be159e14_Const> _21017_constant = static__1be1b29c7_new_str(_20417_s);;
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("str", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_21017_constant), ._field_decl=false, ._field_constant=_21017_constant});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3acb6c_lit_bool(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr>& _22424_l) {
	jule::Ptr<_1be159e14_Const> _22517_constant = static__1be1b2796_new_bool((_22424_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_22517_constant), ._field_decl=false, ._field_constant=_22517_constant});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ace7a_lit_rune(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr>& _23824_l) {
	;
	;
	jule::Str _24213_lt = _23824_l.get()._field_value.slice(1LL,(_23824_l.get()._field_value.len() - 1LL));;
	jule::I32 _24313_r = _1be3922b1_to_rune(static_cast<jule::Slice<jule::U8>>(_24213_lt));;
	jule::Ptr<_1be3a92d9_Data> _24417_data = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24313_r)))});;
	jule::Bool _25213_is_ascii = _1be380535_is_ascii(_24313_r);;
	if (_25213_is_ascii) {
		_24417_data.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u8", 2)), 6)});
	} else {
		_24417_data.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i32", 3)), 6)});
	};
	_24417_data.get()._field_model=jule::Any(jule::new_ptr<_1bc9c8a1a_RuneExprModel>(_1bc9c8a1a_RuneExprModel{._field_code=_24313_r}));
	_24417_data.get()._field_is_rune=true;
	return _24417_data;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ad288_lit_float(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr>& _26825_l) {
	;
	jule::F64 _27113_f = ({
		auto except = _1bdd79ace_parse_float(_26825_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1be159e14_Const> _27217_constant = static__1be1b2c6e_new_f64(_27113_f);;
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_27217_constant), ._field_decl=false, ._field_constant=_27217_constant});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ad596_lit_int(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr>& _28627_l) {
	;
	jule::Str _28917_lit = _28627_l.get()._field_value;;
	jule::I64 _29017_base = 0LL;;
	{
		
		if (_201adbc1a_has_prefix(_28917_lit,jule::Str("0x", 2))) {
			_case_begin_1abe0a08e:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LL;
			}
		}
		else if (_201adbc1a_has_prefix(_28917_lit,jule::Str("0b", 2))) {
			_case_begin_1abe09c70:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LL;
			}
		}
		else if (_201adbc1a_has_prefix(_28917_lit,jule::Str("0o", 2))) {
			_case_begin_1abe09cd6:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LL;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1abe09962:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LL;
			}
		}
		else {
			_case_begin_1abe098eb:;
			{
				_29017_base=10LL;
			}
		}
		_match_end_1abe09896:;
	};
	jule::Ptr<_1be3a92d9_Data> _31017_d = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31617_ok = true;;
	jule::I64 _31713_sig = ({
		auto except = _1bdd4e873_parse_int(_28917_lit,_29017_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31617_ok=false;
			0LL;
		});
	});;
	if (_31617_ok) {
		_31017_d.get()._field_constant=static__1be1b2532_new_i64(_31713_sig);
		_31017_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32717_unsig = ({
			auto except = _1bdd2d0d2_parse_uint(_28917_lit,_29017_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1be3ab363_push_err(&(*_self_), _28627_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1be3ab682_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_constant=static__1be1b2664_new_u64(_32717_unsig);
		_31017_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_model=jule::Any(_31017_d.get()._field_constant);
	if ((!(_1be3ac2dc_apply_numeric_prefix(&(*_self_), _31017_d)))) {
		_1be3ce6d8_fit_bitsize(_31017_d);
	};
	return _31017_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ad8a4_lit_num(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr>& _34827_l) {
	{
		
		if (_20201e38e_is_float(_34827_l.get()._field_value)) {
			_case_begin_1abe140cb:;
			{
				return _1be3ad288_lit_float(&(*_self_), _34827_l);
			}
		}
		else {
			_case_begin_1abe1352b:;
			{
				return _1be3ad596_lit_int(&(*_self_), _34827_l);
			}
		}
		_match_end_1abe13460:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3adbb2_eval_lit(_1be3aad57_Eval* _self_, jule::Ptr<_1d7095793_LitExpr> _35727_lit) {
	{
		
		if (_1d7095ae5_is_nil(_35727_lit.ptr())) {
			_case_begin_1abe15132:;
			{
				return _1be3ac551_lit_nil(&(*_self_));
			}
		}
		else if (_20201d48c_is_str(_35727_lit.get()._field_value)) {
			_case_begin_1abe149c2:;
			{
				return _1be3ac85e_lit_str(&(*_self_), _35727_lit);
			}
		}
		else if (_20201e0e7_is_bool(_35727_lit.get()._field_value)) {
			_case_begin_1abe14a49:;
			{
				return _1be3acb6c_lit_bool(&(*_self_), _35727_lit);
			}
		}
		else if (_20201d9cb_is_rune(_35727_lit.get()._field_value)) {
			_case_begin_1abe14ac1:;
			{
				return _1be3ace7a_lit_rune(&(*_self_), _35727_lit);
			}
		}
		else if (_20201e636_is_num(_35727_lit.get()._field_value)) {
			_case_begin_1abe14d35:;
			{
				return _1be3ad8a4_lit_num(&(*_self_), _35727_lit);
			}
		}
		else {
			_case_begin_1abe14472:;
			{
				return nullptr;
			}
		}
		_match_end_1abe14395:;
	};
}



inline jule::Any _1be3adec0_find_builtins(_1be3aad57_Eval* _self_, jule::Str _37432_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be272d40_ImportInfo>>()) {
			_case_begin_1abe15462:;
			{
				jule::Any _37721_def = _1be3ce4c9_find_builtins_import(_37432_ident,(*_self_)._field_lookup.operator jule::Ptr<_1be272d40_ImportInfo>());;
				if ((_37721_def != nullptr)) {
					return jule::Any(_37721_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be348311_Sema>>()) {
			_case_begin_1abe154c8:;
			{
				jule::Any _38221_def = _1be3d0167_find_builtins_sema(_37432_ident,(*_self_)._field_lookup.operator jule::Ptr<_1be348311_Sema>());;
				if ((_38221_def != nullptr)) {
					return jule::Any(_38221_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abe17b07:;
			{
				jule::Any _38721_def = _1be3d0167_find_builtins_sema(_37432_ident,(*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>().get()._field_s);;
				if ((_38721_def != nullptr)) {
					return jule::Any(_38721_def);
				};
			}
		}
		_match_end_1abe1531e:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1be40b1c6_find_builtin_def(_37432_ident));
}



inline jule::Any _1be3ae377_get_def(_1be3aad57_Eval* _self_, jule::Str _39826_ident, jule::Bool _39838_cpp_linked) {
	if ((!(_39838_cpp_linked))) {
		jule::Ptr<_1bc9dceb3_Enum> _40021_enm = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ee97d_find_enum((*_self_)._field_lookup, _39826_ident);;
		if ((_40021_enm != nullptr)) {
			return jule::Any(_40021_enm);
		};
		jule::Ptr<_1bd9c99a4_TypeEnum> _40521_tenm = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3eec8b_find_type_enum((*_self_)._field_lookup, _39826_ident);;
		if ((_40521_tenm != nullptr)) {
			return jule::Any(_40521_tenm);
		};
	};
	jule::Ptr<_1be36365b_Var> _41117_v = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ed74b_find_var((*_self_)._field_lookup, _39826_ident,_39838_cpp_linked);;
	if ((_41117_v != nullptr)) {
		return jule::Any(_41117_v);
	};
	jule::Ptr<_1bc9c9873_Fn> _41617_f = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ee362_find_fn((*_self_)._field_lookup, _39826_ident,_39838_cpp_linked);;
	if ((_41617_f != nullptr)) {
		return jule::Any(_41617_f);
	};
	jule::Ptr<_1d7073276_Struct> _42117_s = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3edeaa_find_struct((*_self_)._field_lookup, _39826_ident,_39838_cpp_linked);;
	if ((_42117_s != nullptr)) {
		return jule::Any(_42117_s);
	};
	jule::Ptr<_1be3d3874_TypeAlias> _42617_ta = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3edb03_find_type_alias((*_self_)._field_lookup, _39826_ident,_39838_cpp_linked);;
	if ((_42617_ta != nullptr)) {
		return jule::Any(_42617_ta);
	};
	return jule::Any(_1be3adec0_find_builtins(&(*_self_), _39826_ident));
}



inline void _1abe31406_push_reference(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _43441_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abe36054:;
			{
				jule::Ptr<_1be25aee3_ScopeChecker> _43721_sc = _1be25e36a_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>());;
				if ((!(_1abe33ccc_exist(_43721_sc.get()._field_owner.get()._field_refers.ptr(), _43441_ref)))) {
					_1bc9cc106_push(_43721_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43441_ref));
				};
			}
		}
		else {
			_case_begin_1abe32902:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1abe33ccc_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43441_ref))))) {
					_1bc9cc106_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43441_ref));
				};
			}
		}
		_match_end_1abe3289c:;
	};
}

inline void _1abe474b6_push_reference(_1be3aad57_Eval* _self_, jule::Ptr<_1be36365b_Var>& _43441_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abe4be16:;
			{
				jule::Ptr<_1be25aee3_ScopeChecker> _43721_sc = _1be25e36a_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>());;
				if ((!(_1abe49bd3_exist(_43721_sc.get()._field_owner.get()._field_refers.ptr(), _43441_ref)))) {
					_1bc9cc106_push(_43721_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43441_ref));
				};
			}
		}
		else {
			_case_begin_1abe4882a:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1abe49bd3_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43441_ref))))) {
					_1bc9cc106_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43441_ref));
				};
			}
		}
		_match_end_1abe487c5:;
	};
}

inline void _1abed2045_push_reference(_1be3aad57_Eval* _self_, jule::Ptr<_1d70ab9c9_StructIns>& _43441_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abed6b3d:;
			{
				jule::Ptr<_1be25aee3_ScopeChecker> _43721_sc = _1be25e36a_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>());;
				if ((!(_1abed48b6_exist(_43721_sc.get()._field_owner.get()._field_refers.ptr(), _43441_ref)))) {
					_1bc9cc106_push(_43721_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43441_ref));
				};
			}
		}
		else {
			_case_begin_1abed350d:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1abed48b6_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43441_ref))))) {
					_1bc9cc106_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43441_ref));
				};
			}
		}
		_match_end_1abed34a8:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ae90a___eval_enum(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9dceb3_Enum> _44830_enm) {
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_44830_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3aecb2_eval_enum(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9dceb3_Enum> _46032_enm, jule::Ptr<_20201c3d1_Token> _46044_error_token) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _46032_enm.get()._field_public,_46032_enm.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _46044_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46032_enm.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1be3ae90a___eval_enum(&(*_self_), _46032_enm);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b00c0___eval_type_enum(_1be3aad57_Eval* _self_, jule::Ptr<_1bd9c99a4_TypeEnum> _46935_enm) {
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_46935_enm, 4)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b0477_eval_type_enum(_1be3aad57_Eval* _self_, jule::Ptr<_1bd9c99a4_TypeEnum> _48137_enm, jule::Ptr<_20201c3d1_Token> _48153_error_token) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _48137_enm.get()._field_public,_48137_enm.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _48153_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48137_enm.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1be3b00c0___eval_type_enum(&(*_self_), _48137_enm);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b0785___eval_struct(_1be3aad57_Eval* _self_, jule::Ptr<_1d70ab9c9_StructIns> _49032_s) {
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_49032_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_49032_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b0b3c_eval_struct(_1be3aad57_Eval* _self_, jule::Ptr<_1d70ab9c9_StructIns> _50334_s, jule::Ptr<_20201c3d1_Token> _50349_error_token) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _50334_s.get()._field_decl.get()._field_public,_50334_s.get()._field_decl.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _50349_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50334_s.get()._field_decl.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1be3b1269_check_deprecated(&(*_self_), _50334_s.get()._field_decl.get()._field_directives,_50349_error_token);
	return _1be3b0785___eval_struct(&(*_self_), _50334_s);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b0e4a_eval_fn_ins(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9c9c4c_FnIns> _51330_f) {
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_51330_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_51330_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1be3b1269_check_deprecated(_1be3aad57_Eval* _self_, jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _52640_directives, jule::Ptr<_20201c3d1_Token> _52671_tok) {
	if (_1be3abc9d_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1d705bd64_Directive> _53113_d = _1be3ce144_find_directive(_52640_directives,jule::Str("deprecated", 10));;
	if ((_53113_d != nullptr)) {
		if ((_53113_d.get()._field_args.len() == 0LL)) {
			_1be3ab363_push_err(&(*_self_), _52671_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1be3ab363_push_err(&(*_self_), _52671_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_53113_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b1621_eval_fn(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9c9873_Fn> _54230_f, jule::Ptr<_20201c3d1_Token> _54238_error_token) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _54230_f.get()._field_public,_54230_f.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _54238_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_54230_f.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1be3b1269_check_deprecated(&(*_self_), _54230_f.get()._field_directives,_54238_error_token);
	jule::Ptr<_1bc9c9c4c_FnIns> _55117_ins = _1d707ec77_instance(_54230_f);;
	_1abe31406_push_reference(&(*_self_), _55117_ins);
	return _1be3b0e4a_eval_fn_ins(&(*_self_), _55117_ins);
}



inline void _1be3b1a0b_push_illegal_cycle_error(_1be3aad57_Eval* _self_, jule::Ptr<_1be36365b_Var>& _55644_v1, jule::Ptr<_1be36365b_Var>& _55655_v2, jule::Str& _55670_message) {
	;
	jule::Str _55813_refers_to = _201be1292_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_55644_v1.get()._field_ident),jule::Any(_55655_v2.get()._field_ident)}));;
	(_55670_message).buffer.insert(0, (((_200cecaa8_repeat(jule::Str(" ", 1),4LL) + _55813_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1be3b1dc4_check_cross_cycle(_1be3aad57_Eval* _self_, jule::Ptr<_1be36365b_Var>& _56237_v, jule::Str& _56251_message) {
	{
		auto &expr = _56237_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1abe39574:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> &_56316_d = *it;
			{
				if ((_56316_d == (*_self_)._field_owner)) {
					_1be3b1a0b_push_illegal_cycle_error(&(*_self_), _56237_v,_56316_d,_56251_message);
					return false;
				};
				if ((!(_1be3b1dc4_check_cross_cycle(&(*_self_), _56316_d,_56251_message)))) {
					_1be3b1a0b_push_illegal_cycle_error(&(*_self_), _56237_v,_56316_d,_56251_message);
					return false;
				};
			}
			_iter_next_1abe39574:;
			++it;
			goto _iter_begin_1abe39574;
		}
		_iter_end_1abe39574:;
	};
	return true;
}



inline jule::Bool _1be3b227b_check_illegal_cycles(_1be3aad57_Eval* _self_, jule::Ptr<_1be36365b_Var>& _58144_v, jule::Ptr<_20201c3d1_Token> _58153_decl_token) {
	jule::Bool _58175_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_58175_ok = true;
		return _58175_ok;
	};
	if (((*_self_)._field_owner == _58144_v)) {
		_1be3ab363_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_58175_ok = false;
		return _58175_ok;
	};
	jule::Str _59317_message = jule::Str();;
	if ((!(_1be3b1dc4_check_cross_cycle(&(*_self_), _58144_v,_59317_message)))) {
		jule::Str _59621_err_msg = _59317_message;;
		_59317_message=jule::Str();
		_1be3b1a0b_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_58144_v,_59317_message);
		_59621_err_msg=(_59621_err_msg + _59317_message);
		_1be3ab363_push_err(&(*_self_), _58153_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_59621_err_msg)}));
		_58175_ok = false;
		return _58175_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_58144_v);;
	_58175_ok = true;
	return _58175_ok;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b2633_eval_var(_1be3aad57_Eval* _self_, jule::Ptr<_1be36365b_Var> _60831_v, jule::Ptr<_20201c3d1_Token> _60840_error_token) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _60831_v.get()._field_public,_60831_v.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _60840_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_60831_v.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1be3b1269_check_deprecated(&(*_self_), _60831_v.get()._field_directives,_60840_error_token);
	_60831_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be348311_Sema>>()) {
			_case_begin_1abe42eea:;
			{
				jule::Bool _62217_ok = _1be3b227b_check_illegal_cycles(&(*_self_), _60831_v,_60840_error_token);;
				if ((!(_62217_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1abe430a5:;
			{
				if (((!(_60831_v.get()._field_reference)) || _1be3abc9d_is_unsafe(&(*_self_)))) {
					goto _match_end_1abe42e95;
				};
				jule::Ptr<_1be25aee3_ScopeChecker> _63021_s = (*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>();;
				while (((_63021_s.get()._field_owner == nullptr) && (_63021_s.get()._field_parent != nullptr))) {
					{
						_63021_s=_63021_s.get()._field_parent;
					}
				_iter_next_1abe45261:;
				}
				_iter_end_1abe45261:;;
				if ((((_63021_s.get()._field_owner != nullptr) && _63021_s.get()._field_owner.get()._field_anon) && (_60831_v.get()._field_scope != _63021_s.get()._field_owner.get()._field_scope))) {
					_1be3ab363_push_err(&(*_self_), _60840_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_60831_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1abe42e95:;
	};
	if ((_60831_v.get()._field_scope == nullptr)) {
		_1abe474b6_push_reference(&(*_self_), _60831_v);
	};
	if (((!(_60831_v.get()._field_cpp_linked)) && ((_60831_v.get()._field_value == nullptr) || (_60831_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_60831_v.get()._field_constant) {
			_1be35b269_check_type_var((*_self_)._field_s, _60831_v,jule::Trait<_1be3eedce_Lookup>((*_self_)._field_s, 3));
			if ((_60831_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_60831_v.get()._field_kind == nullptr) || (_60831_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_60831_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1be35b269_check_type_var((*_self_)._field_s, _60831_v,(*_self_)._field_lookup);
		if (((_60831_v.get()._field_kind == nullptr) || (_60831_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1be3a92d9_Data> _67317_d = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=_60831_v.get()._field_kind.get()._field_kind, ._field_mutable=_60831_v.get()._field_mutable, ._field_reference=_60831_v.get()._field_reference, ._field_lvalue=(!(_60831_v.get()._field_constant)), ._field_model=jule::Any(_60831_v), });;
	if ((((!(_60831_v.get()._field_cpp_linked)) && _1be363a13_is_initialized(_60831_v.ptr())) && (_60831_v.get()._field_value.get()._field_data != nullptr))) {
		_67317_d.get()._field_is_rune=_60831_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_60831_v.get()._field_constant && (_60831_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_67317_d.get()._field_constant=jule::new_ptr<_1be159e14_Const>((*(_60831_v.get()._field_value.get()._field_data.get()._field_constant)));
		_67317_d.get()._field_model=jule::Any(_67317_d.get()._field_constant);
	};
	if (_1be3a9b9c_is_const(_67317_d.ptr())) {
		_1be3ac2dc_apply_numeric_prefix(&(*_self_), _67317_d);
	};
	return _67317_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b29da_eval_type_alias(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d3874_TypeAlias> _69738_ta, jule::Ptr<_20201c3d1_Token> _69754_error_token) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _69738_ta.get()._field_public,_69738_ta.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _69754_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_69738_ta.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_69738_ta.get()._field_used=true;
	jule::Trait<_1be3d417c_Kind> _70617_kind = _69738_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1be3a92d9_Data> _70717_d = nullptr;;
	{
		auto &_match_expr{ _70617_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d70ab9c9_StructIns>>()) {
			_case_begin_1abe589d3:;
			{
				_70717_d=_1be3b0785___eval_struct(&(*_self_), _70617_kind.operator jule::Ptr<_1d70ab9c9_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9dceb3_Enum>>()) {
			_case_begin_1abe59033:;
			{
				_70717_d=_1be3ae90a___eval_enum(&(*_self_), _70617_kind.operator jule::Ptr<_1bc9dceb3_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bd9c99a4_TypeEnum>>()) {
			_case_begin_1abe57b36:;
			{
				_70717_d=_1be3b00c0___eval_type_enum(&(*_self_), _70617_kind.operator jule::Ptr<_1bd9c99a4_TypeEnum>());
			}
		}
		else {
			_case_begin_1abe579b0:;
			{
				_70717_d=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=_69738_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_69738_ta.get()._field_cpp_linked) {
					_70717_d.get()._field_kind.get()._field_cpp_ident=_69738_ta.get()._field_ident;
				} else {
					_70717_d.get()._field_kind.get()._field_cpp_ident=_69738_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_70717_d.get()._field_model=jule::Any(_70717_d.get()._field_kind);
			}
		}
		_match_end_1abe5795a:;
	};
	_70717_d.get()._field_kind.get()._field_generic=_69738_ta.get()._field_generic;
	return _70717_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b2d92_eval_def(_1be3aad57_Eval* _self_, jule::Any _73331_def, jule::Ptr<_20201c3d1_Token> _73341_ident) {
	{
		auto &_match_expr{ _73331_def };
		
		if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1abe5bae6:;
			{
				return _1be3b2633_eval_var(&(*_self_), _73331_def.operator jule::Ptr<_1be36365b_Var>(),_73341_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9dceb3_Enum>>()) {
			_case_begin_1abe5bb5c:;
			{
				return _1be3aecb2_eval_enum(&(*_self_), _73331_def.operator jule::Ptr<_1bc9dceb3_Enum>(),_73341_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bd9c99a4_TypeEnum>>()) {
			_case_begin_1abe5bbc3:;
			{
				return _1be3b0477_eval_type_enum(&(*_self_), _73331_def.operator jule::Ptr<_1bd9c99a4_TypeEnum>(),_73341_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1abe5bc4a:;
			{
				return _1be3b0b3c_eval_struct(&(*_self_), _1d706814a_instance(_73331_def.operator jule::Ptr<_1d7073276_Struct>()),_73341_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c9873_Fn>>()) {
			_case_begin_1abe5bcb1:;
			{
				jule::Ptr<_1bc9c9873_Fn> _74421_f = _73331_def.operator jule::Ptr<_1bc9c9873_Fn>();;
				if ((_74421_f.get()._field_ident != jule::Str("init", 4))) {
					return _1be3b1621_eval_fn(&(*_self_), _74421_f,_73341_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c9c4c_FnIns>>()) {
			_case_begin_1abe5bd27:;
			{
				return _1be3b0e4a_eval_fn_ins(&(*_self_), _73331_def.operator jule::Ptr<_1bc9c9c4c_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
			_case_begin_1abe5bd9e:;
			{
				return _1be3b29da_eval_type_alias(&(*_self_), _73331_def.operator jule::Ptr<_1be3d3874_TypeAlias>(),_73341_ident);
			}
		}
		_match_end_1abe5ba08:;
	};
	_1be3ab363_push_err(&(*_self_), _73341_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_73341_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b31a0_eval_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1d70967c7_IdentExpr> _75729_ident) {
	jule::Any _75817_def = _1be3ae377_get_def(&(*_self_), _75729_ident.get()._field_ident,_75729_ident.get()._field_cpp_linked);;
	return _1be3b2d92_eval_def(&(*_self_), jule::Any(_75817_def),_75729_ident.get()._field_token);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b34ad_eval_unary(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7096ed1_UnaryExpr> _76234_u) {
	_1be3c659d_UnaryEval _76317_unary = static__1be3c6a54_new(_self_);;
	return _1be3c7cec_eval(&_76317_unary, _76234_u);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b37bb_eval_variadic(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7097388_VariadicExpr> _76737_v) {
	if ((_76737_v.get()._field_expr == nullptr)) {
		_1be3ab363_push_err(_self_.ptr(), _76737_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _77317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77317_prefix;
	});;
	jule::Ptr<_1be3a92d9_Data> _77717_d = _1be3c5a0e_eval_expr_kind(_self_, _76737_v.get()._field_expr.get()._field_kind);;
	if ((_77717_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1be3d6415_variadicable(_77717_d.get()._field_kind.ptr())))) {
		_1be3ab363_push_err(_self_.ptr(), _76737_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_77717_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1be3dceee_Slc> _78713_slc = _1be3d7603_slc(_77717_d.get()._field_kind.ptr());;
	_77717_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_cpp_ident=_78713_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_78713_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_78713_slc.get()._field_elem.get()._field_kind});
	return _77717_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b3ac9_eval_unsafe(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7095e9c_UnsafeExpr> _79735_u) {
	jule::Bool _79813_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1be3a92d9_Data> _80117_d = _1be3c5a0e_eval_expr_kind(_self_, _79735_u.get()._field_expr.get()._field_kind);;
	_self_.get()._field_unsafety=_79813_unsafety;
	return _80117_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b3dd7_eval_arr(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709b1d3_SliceExpr> _80832_s) {
	jule::Ptr<_1be3e0199_Arr> _81017_pt = _1be3d738e_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1be3e0199_Arr> _81217_arr = jule::new_ptr<_1be3e0199_Arr>(_1be3e0199_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_81017_pt.get()._field_elem});;
	jule::Bool _81817_filled = false;;
	if ((_80832_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _80832_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1d7097388_VariadicExpr>>()) {
				_case_begin_1abe6c3cb:;
				{
					if ((_80832_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1d7097388_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1abe6c376;
					};
					if (_81017_pt.get()._field_auto) {
						_1be3ab363_push_err(_self_.ptr(), _80832_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_81817_filled=true;
					_80832_s.get()._field_exprs=_80832_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1abe6c376:;
		};
	};
	_81217_arr.get()._field_n=static_cast<jule::I64>(_80832_s.get()._field_exprs.len());
	if ((!(_81017_pt.get()._field_auto))) {
		if ((_81217_arr.get()._field_n > _81017_pt.get()._field_n)) {
			_1be3ab363_push_err(_self_.ptr(), _80832_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_81217_arr.get()._field_n < _81017_pt.get()._field_n)) {
			_81217_arr.get()._field_n=_81017_pt.get()._field_n;
		};
	};
	jule::Ptr<_1bc9c66c7_ArrayExprModel> _84717_model = jule::new_ptr<_1bc9c66c7_ArrayExprModel>(_1bc9c66c7_ArrayExprModel{._field_kind=_81217_arr, });;
	if (_81817_filled) {
		_84717_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_84717_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_80832_s.get()._field_exprs.len());
	};
	jule::Ptr<_1be3d45ab_TypeKind> _85617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_81217_arr.get()._field_elem;
	{
		auto &expr = _80832_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1abe72447:;
		if (it != expr.end()) {
			jule::Ptr<_1d709475e_Expr> _85821_elem = *it;
			{
				jule::Ptr<_1be3a92d9_Data> _85921_d = _1be3c5a0e_eval_expr_kind(_self_, _85821_elem.get()._field_kind);;
				if ((_85921_d == nullptr)) {
					goto _iter_next_1abe72447;
				};
				_1be3512c5_check_assign_type(_self_.get()._field_s, false,_81217_arr.get()._field_elem,_85921_d,_80832_s.get()._field_token);
				_84717_model.get()._field_elems = jule::alloc_for_append(_84717_model.get()._field_elems,1);_84717_model.get()._field_elems.__push(jule::Any(_85921_d.get()._field_model));;
			}
			_iter_next_1abe72447:;
			++it;
			goto _iter_begin_1abe72447;
		}
		_iter_end_1abe72447:;
	};
	_self_.get()._field_prefix=_85617_prefix;
	if (_81817_filled) {
		_84717_model.get()._field_elems = jule::alloc_for_append(_84717_model.get()._field_elems,1);_84717_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_81217_arr, 11)}), ._field_mutable=true, ._field_model=jule::Any(_84717_model), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b428e_eval_exp_slc(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709b1d3_SliceExpr> _88336_s, jule::Ptr<_1be3d45ab_TypeKind> _88355_elem_type) {
	jule::Ptr<_1be3dceee_Slc> _88417_slc = jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=_88355_elem_type});;
	jule::Ptr<_1bc9c5253_SliceExprModel> _88817_model = jule::new_ptr<_1bc9c5253_SliceExprModel>(_1bc9c5253_SliceExprModel{._field_elem_kind=_88355_elem_type, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_88336_s.get()._field_exprs.len())});;
	jule::Ptr<_1be3d45ab_TypeKind> _89317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_88417_slc.get()._field_elem;
	{
		auto &expr = _88336_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1abe77639:;
		if (it != expr.end()) {
			jule::Ptr<_1d709475e_Expr> _89521_elem = *it;
			{
				jule::Ptr<_1be3a92d9_Data> _89621_d = _1be3c5a0e_eval_expr_kind(_self_, _89521_elem.get()._field_kind);;
				if ((_89621_d == nullptr)) {
					goto _iter_next_1abe77639;
				};
				_1be3512c5_check_assign_type(_self_.get()._field_s, false,_88417_slc.get()._field_elem,_89621_d,_88336_s.get()._field_token);
				_88817_model.get()._field_elems = jule::alloc_for_append(_88817_model.get()._field_elems,1);_88817_model.get()._field_elems.__push(jule::Any(_89621_d.get()._field_model));;
			}
			_iter_next_1abe77639:;
			++it;
			goto _iter_begin_1abe77639;
		}
		_iter_end_1abe77639:;
	};
	_self_.get()._field_prefix=_89317_prefix;
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_88417_slc, 8)}), ._field_mutable=true, ._field_model=jule::Any(_88817_model), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b459c_eval_slice_expr(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709b1d3_SliceExpr> _91439_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1be3d738e_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1abe7a7c4:;
				{
					return _1be3b3dd7_eval_arr(_self_, _91439_s);
				}
			}
			else if ((_1be3d7603_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1abe7a84b:;
				{
					jule::Ptr<_1be3dceee_Slc> _92025_pt = _1be3d7603_slc(_self_.get()._field_prefix.ptr());;
					return _1be3b428e_eval_exp_slc(_self_, _91439_s,_92025_pt.get()._field_elem);
				}
			}
			_match_end_1abe7a6a3:;
		};
	};
	jule::Ptr<_1be3d45ab_TypeKind> _92517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_91439_s.get()._field_exprs.len() == 0LL)) {
		_1be3ab363_push_err(_self_.ptr(), _91439_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _93317_first_elem = _1be3c5a0e_eval_expr_kind(_self_, _91439_s.get()._field_exprs[0LL].get()._field_kind);;
	if ((_93317_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _93817_d = _1be3b428e_eval_exp_slc(_self_, _91439_s,_93317_first_elem.get()._field_kind);;
	_self_.get()._field_prefix=_92517_prefix;
	return _93817_d;
}



inline void _1be3b48dd_check_integer_indexing_by_data(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _94454_d, jule::Ptr<_20201c3d1_Token> _94464_token) {
	jule::Str _94513_err_key = _1be3d1542_check_data_for_integer_indexing(_94454_d);;
	{
		auto &_match_expr{ _94513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1abe80ca2:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1abe81379:;
			{
				_1be3ab363_push_err(&(*_self_), _94464_token,_94513_err_key,jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_94454_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1abe811d1:;
			{
				_1be3ab363_push_err(&(*_self_), _94464_token,_94513_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1abe8117b:;
	};
}



inline void _1be3b4cb7_indexing_ptr(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _95636_d, jule::Ptr<_1be3a92d9_Data>& _95651_index, jule::Ptr<_1d709ba74_IndexingExpr>& _95666_i) {
	_1be3b48dd_check_integer_indexing_by_data(&(*_self_), _95651_index,_95666_i.get()._field_token);
	jule::Ptr<_1be3e0b06_Ptr> _95917_ptr = _1be3d6b52_ptr(_95636_d.get()._field_kind.ptr());;
	{
		
		if (_1be3e15c9_is_unsafe(_95917_ptr.ptr())) {
			_case_begin_1abe83e09:;
			{
				_1be3ab363_push_err(&(*_self_), _95666_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1be3abc9d_is_unsafe(&(*_self_))))) {
			_case_begin_1abe83e70:;
			{
				_1be3ab363_push_err(&(*_self_), _95666_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abe83ca5:;
	};
	_95636_d.get()._field_kind=_95917_ptr.get()._field_elem;
}



inline void _1be3b5180_indexing_arr(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _97136_d, jule::Ptr<_1be3a92d9_Data>& _97151_index, jule::Ptr<_1d709ba74_IndexingExpr>& _97166_i) {
	jule::Ptr<_1be3e0199_Arr> _97217_arr = _1be3d738e_arr(_97136_d.get()._field_kind.ptr());;
	_97136_d.get()._field_kind=_97217_arr.get()._field_elem;
	_1be3b48dd_check_integer_indexing_by_data(&(*_self_), _97151_index,_97166_i.get()._field_token);
	if ((_1be3a9b9c_is_const(_97151_index.ptr()) && (_1be1b4754_as_f64(_97151_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_97217_arr.get()._field_n)))) {
		_1be3ab363_push_err(&(*_self_), _97166_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1be3b5548_indexing_slc(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _98036_d, jule::Ptr<_1be3a92d9_Data>& _98051_index, jule::Ptr<_1d709ba74_IndexingExpr>& _98066_i) {
	jule::Ptr<_1be3dceee_Slc> _98117_slc = _1be3d7603_slc(_98036_d.get()._field_kind.ptr());;
	_98036_d.get()._field_kind=_98117_slc.get()._field_elem;
	_1be3b48dd_check_integer_indexing_by_data(&(*_self_), _98051_index,_98066_i.get()._field_token);
	if ((!(_1be3a9b9c_is_const(_98051_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _98036_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c5253_SliceExprModel>>()) {
			_case_begin_1abe89dee:;
			{
				jule::Ptr<_1bc9c5253_SliceExprModel> _99121_m = _98036_d.get()._field_model.operator jule::Ptr<_1bc9c5253_SliceExprModel>();;
				jule::F64 _99217_indx = _1be1b4754_as_f64(_98051_index.get()._field_constant.ptr());;
				if ((_99217_indx >= static_cast<jule::F64>(_99121_m.get()._field_elems.len()))) {
					_1be3ab363_push_err(&(*_self_), _98066_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_98036_d.get()._field_model=jule::Any(_99121_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_99217_indx))]);
					_98036_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1abe89d77:;
	};
}



inline void _1be3b5911_indexing_map(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _100236_d, jule::Ptr<_1be3a92d9_Data>& _100251_index, jule::Ptr<_1d709ba74_IndexingExpr>& _100270_i) {
	if ((_100251_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1be3de5a5_Map> _100717_m = _1be3d80a4_map(_100236_d.get()._field_kind.ptr());;
	_1be396826_AssignTypeChecker _100817_atc = _1be396826_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_100717_m.get()._field_key, ._field_d=_100251_index, ._field_error_token=_100270_i.get()._field_token};;
	_1be39799d_check(&_100817_atc);
	_100236_d.get()._field_kind=_100717_m.get()._field_val;
}



inline void _1be3b5cc9_indexing_str(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _101936_d, jule::Ptr<_1be3a92d9_Data>& _101951_index, jule::Ptr<_1d709ba74_IndexingExpr>& _101966_i) {
	;
	_101936_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u8", 2)), 6)});
	if ((_101951_index == nullptr)) {
		return;;
	};
	_1be3b48dd_check_integer_indexing_by_data(&(*_self_), _101951_index,_101966_i.get()._field_token);
	if ((!(_1be3a9b9c_is_const(_101951_index.ptr())))) {
		_101936_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1be3a9b9c_is_const(_101936_d.ptr())) {
		jule::Ptr<_20201c3d1_Token> _103517_error_token = _101966_i.get()._field_token;;
		jule::I64 _103617_j = _1be1b427b_as_i64(_101951_index.get()._field_constant.ptr());;
		jule::Str _103717_s = _1be1b3ca3_read_str(_101936_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_103617_j) >= _103717_s.len())) {
			_1be3ab363_push_err(&(*_self_), _103517_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1be1b4c4e_set_u64(_101936_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103717_s[_103617_j])));
		};
	};
}



inline void _1be3b6192_to_indexing(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _104635_d, jule::Ptr<_1be3a92d9_Data>& _104650_index, jule::Ptr<_1d709ba74_IndexingExpr>& _104669_i) {
	{
		
		if ((_1be3d6b52_ptr(_104635_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abe952c2:;
			{
				_1be3b4cb7_indexing_ptr(&(*_self_), _104635_d,_104650_index,_104669_i);
				return;;
			}
		}
		else if ((_1be3d738e_arr(_104635_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abe95349:;
			{
				_1be3b5180_indexing_arr(&(*_self_), _104635_d,_104650_index,_104669_i);
				return;;
			}
		}
		else if ((_1be3d7603_slc(_104635_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abe953c1:;
			{
				_1be3b5548_indexing_slc(&(*_self_), _104635_d,_104650_index,_104669_i);
				return;;
			}
		}
		else if ((_1be3d80a4_map(_104635_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abe95448:;
			{
				_1be3b5911_indexing_map(&(*_self_), _104635_d,_104650_index,_104669_i);
				return;;
			}
		}
		else if ((_1be3d6679_prim(_104635_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abe954c0:;
			{
				jule::Ptr<_1be3d9083_Prim> _106117_prim = _1be3d6679_prim(_104635_d.get()._field_kind.ptr());;
				{
					
					if (_1be3dc042_is_str(_106117_prim.ptr())) {
						_case_begin_1abe99b56:;
						{
							_1be3b5cc9_indexing_str(&(*_self_), _104635_d,_104650_index,_104669_i);
							return;;
						}
					}
					_match_end_1abe99aac:;
				};
			}
		}
		_match_end_1abe9516d:;
	};
	_1be3ab363_push_err(&(*_self_), _104669_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_104635_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1be3b6626_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709806a_SubIdentExpr>& _107267_expr, jule::Ptr<_1d7090804_IdentTypeDecl>& _107314_decl, jule::Ptr<_1d709ba74_IndexingExpr>& _107341_i) {
	jule::Ptr<_1d7090e53_SubIdentTypeDecl> _107417_t = jule::new_ptr<_1d7090e53_SubIdentTypeDecl>();;
	if ((!(_1be3d2367_push_sub_ident_from_expr(static_cast<jule::Any>(_107267_expr),_107417_t)))) {
		_1be3ab363_push_err(_self_.ptr(), _107341_i.get()._field_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_107314_decl.get()._field_generics = jule::alloc_for_append(_107314_decl.get()._field_generics,1);_107314_decl.get()._field_generics.__push(jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_kind=static_cast<jule::Any>(_107417_t)}));;
	return true;
}



inline jule::Bool _1be3b6a33_push_generics_from_index_data(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _108554_decl, jule::Ptr<_1d709ba74_IndexingExpr>& _108581_i) {
	{
		auto &_match_expr{ _108581_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7096ed1_UnaryExpr>>()) {
			_case_begin_1abe9da5b:;
			{
				jule::Ptr<_1be3a92d9_Data> _109021_d = _1be3b34ad_eval_unary(_self_, _108581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d7096ed1_UnaryExpr>());;
				if ((!(_109021_d.get()._field_decl))) {
					_1be3ab363_push_err(_self_.ptr(), _108581_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_108554_decl.get()._field_generics = jule::alloc_for_append(_108554_decl.get()._field_generics,1);_108554_decl.get()._field_generics.__push(jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_kind=(*(((jule::Any*)((&(_109021_d.get()._field_kind.get()._field_kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709023d_TypeDecl>>()) {
			_case_begin_1abe9dac2:;
			{
				_108554_decl.get()._field_generics = jule::alloc_for_append(_108554_decl.get()._field_generics,1);_108554_decl.get()._field_generics.__push(_108581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d709023d_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709806a_SubIdentExpr>>()) {
			_case_begin_1abe9db38:;
			{
				jule::Ptr<_1d709806a_SubIdentExpr> _110121_expr = _108581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d709806a_SubIdentExpr>();;
				return _1be3b6626_push_generics_from_indexing_data_sub_ident(_self_, _110121_expr,_108554_decl,_108581_i);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
			_case_begin_1abe9e52e:;
			{
				jule::Ptr<_1d70967c7_IdentExpr> _110421_expr = _108581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d70967c7_IdentExpr>();;
				_108554_decl.get()._field_generics = jule::alloc_for_append(_108554_decl.get()._field_generics,1);_108554_decl.get()._field_generics.__push(jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_110421_expr.get()._field_token, ._field_ident=_110421_expr.get()._field_ident, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70953db_TupleExpr>>()) {
			_case_begin_1abe9e595:;
			{
				{
					auto &expr = _108581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d70953db_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1abea4589:;
					if (it != expr.end()) {
						jule::Ptr<_1d709475e_Expr> _111225_expr = *it;
						{
							{
								auto &_match_expr{ _111225_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d709023d_TypeDecl>>()) {
									_case_begin_1abea59ec:;
									{
										_108554_decl.get()._field_generics = jule::alloc_for_append(_108554_decl.get()._field_generics,1);_108554_decl.get()._field_generics.__push(_111225_expr.get()._field_kind.operator jule::Ptr<_1d709023d_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
									_case_begin_1abea5a63:;
									{
										jule::Ptr<_1d70967c7_IdentExpr> _111729_idexpr = _111225_expr.get()._field_kind.operator jule::Ptr<_1d70967c7_IdentExpr>();;
										_108554_decl.get()._field_generics = jule::alloc_for_append(_108554_decl.get()._field_generics,1);_108554_decl.get()._field_generics.__push(jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_111729_idexpr.get()._field_token, ._field_ident=_111729_idexpr.get()._field_ident, }))}));;
									}
								}
								_match_end_1abea57dd:;
							};
						}
						_iter_next_1abea4589:;
						++it;
						goto _iter_begin_1abea4589;
					}
					_iter_end_1abea4589:;
				};
			}
		}
		else {
			_case_begin_1abe9d97e:;
			{
				_1be3ab363_push_err(_self_.ptr(), _108581_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1abe9d929:;
	};
	return true;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b6dda_eval_ident_decl_from_indexing(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1be3a92d9_Data>& _113354_d, jule::Ptr<_1d709ba74_IndexingExpr>& _113369_i) {
	jule::Ptr<_1d709023d_TypeDecl> _113417_tdecl = jule::new_ptr<_1d709023d_TypeDecl>();;
	jule::Ptr<_1d7090804_IdentTypeDecl> _113517_decl = nullptr;;
	{
		auto &_match_expr{ _113369_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
			_case_begin_1abea8813:;
			{
				jule::Ptr<_1d70967c7_IdentExpr> _113821_expr = _113369_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d70967c7_IdentExpr>();;
				_113517_decl=jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_113821_expr.get()._field_token, ._field_ident=_113821_expr.get()._field_ident, });
				_113417_tdecl.get()._field_kind=static_cast<jule::Any>(_113517_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7097ae7_NsSelectionExpr>>()) {
			_case_begin_1abea8879:;
			{
				jule::Ptr<_1d7097ae7_NsSelectionExpr> _114521_expr = _113369_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d7097ae7_NsSelectionExpr>();;
				_113517_decl=jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_114521_expr.get()._field_ident, ._field_ident=_114521_expr.get()._field_ident.get()._field_kind, });
				_113417_tdecl.get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d709130a_NamespaceTypeDecl>(_1d709130a_NamespaceTypeDecl{._field_idents=_114521_expr.get()._field_ns, ._field_kind=jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_113517_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_113517_decl)})}));
			}
		}
		else {
			_case_begin_1abea879c:;
			{
				_1be3ab363_push_err(_self_.ptr(), _113369_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1abea866a:;
	};
	if ((!(_1be3b6a33_push_generics_from_index_data(_self_, _113517_decl,_113369_i)))) {
		return nullptr;
	};
	return _1be3bc187_eval_type(_self_.ptr(), _113417_tdecl);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b7209_eval_indexing(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709ba74_IndexingExpr> _116737_i) {
	jule::Ptr<_1be3d45ab_TypeKind> _116817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_116817_prefix;
	});;
	jule::Ptr<_1be3a92d9_Data> _117217_d = _1be3c5a0e_eval_expr_kind(_self_, _116737_i.get()._field_expr.get()._field_kind);;
	if ((_117217_d == nullptr)) {
		return nullptr;
	};
	if (_117217_d.get()._field_decl) {
		return _1be3b6dda_eval_ident_decl_from_indexing(_self_, _117217_d,_116737_i);
	};
	_1be3a92d9_Data _118217_old_d = (*(_117217_d));;
	jule::Ptr<_1be3a92d9_Data> _118417_index = _1be3c5a0e_eval_expr_kind(_self_, _116737_i.get()._field_index.get()._field_kind);;
	if ((_118417_index == nullptr)) {
		return nullptr;
	};
	_117217_d.get()._field_decl=false;
	_1be3b6192_to_indexing(_self_.ptr(), _117217_d,_118417_index,_116737_i);
	if (_1be3a9b9c_is_const(_117217_d.ptr())) {
		_117217_d.get()._field_decl=false;
		_117217_d.get()._field_model=jule::Any(_117217_d.get()._field_constant);
	} else if (_117217_d.get()._field_decl) {
		_117217_d.get()._field_decl=false;
	} else {
		_117217_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c5440_IndexingExprModel>(_1bc9c5440_IndexingExprModel{._field_token=_116737_i.get()._field_token, ._field_expr=jule::new_ptr<_1be3a92d9_Data>(_118217_old_d), ._field_index=_118417_index}));
	};
	return _117217_d;
}



inline std::tuple<jule::Ptr<_1be3a92d9_Data>,jule::Ptr<_1be3a92d9_Data>> _1be3b7517_eval_slicing_exprs(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709c17e_SlicingExpr>& _121543_s) {
	jule::Ptr<_1be3d45ab_TypeKind> _121617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121617_prefix;
	});;
	jule::Ptr<_1be3a92d9_Data> _122017_l = nullptr;;
	jule::Ptr<_1be3a92d9_Data> _122117_r = nullptr;;
	if ((_121543_s.get()._field_start != nullptr)) {
		_122017_l=_1be3c5a0e_eval_expr_kind(_self_, _121543_s.get()._field_start.get()._field_kind);
		if ((_122017_l != nullptr)) {
			_1be3b48dd_check_integer_indexing_by_data(_self_.ptr(), _122017_l,_121543_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_122017_l=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_constant=static__1be1b2532_new_i64(0LL)});
		_122017_l.get()._field_model=jule::Any(_122017_l.get()._field_constant);
	};
	if ((_121543_s.get()._field_to != nullptr)) {
		_122117_r=_1be3c5a0e_eval_expr_kind(_self_, _121543_s.get()._field_to.get()._field_kind);
		if ((_122117_r != nullptr)) {
			_1be3b48dd_check_integer_indexing_by_data(_self_.ptr(), _122117_r,_121543_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_122017_l,_122117_r);
}



inline void _1be3b778c_slicing_arr(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _125031_d) {
	jule::Ptr<_1be3d45ab_TypeKind> _125117_elem_type = _1be3d738e_arr(_125031_d.get()._field_kind.ptr()).get()._field_elem;;
	_125031_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=_125117_elem_type}), 8)});
	_125031_d.get()._field_lvalue=false;
	_125031_d.get()._field_mutable=(_125031_d.get()._field_mutable || (!(_1be3d5964_mutable(_125117_elem_type.ptr()))));
}



inline void _1be3b7b55_slicing_str(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _126531_d, jule::Ptr<_1be3a92d9_Data>& _126542_l, jule::Ptr<_1be3a92d9_Data>& _126553_r) {
	_126531_d.get()._field_lvalue=false;
	_126531_d.get()._field_mutable=true;
	if ((!(_1be3a9b9c_is_const(_126531_d.ptr())))) {
		return;;
	};
	if (((_126542_l == nullptr) || (_126553_r == nullptr))) {
		_126531_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1be3a9b9c_is_const(_126542_l.ptr()) && _1be3a9b9c_is_const(_126553_r.ptr()))) {
		jule::I64 _127817_left = _1be1b427b_as_i64(_126542_l.get()._field_constant.ptr());;
		if ((_127817_left < 0LL)) {
			return;;
		};
		jule::Str _128317_s = _1be1b3ca3_read_str(_126531_d.get()._field_constant.ptr());;
		jule::I64 _128421_right = 0LL;;
		if ((_126553_r == nullptr)) {
			_128421_right=static_cast<jule::I64>(static_cast<jule::I64>(_128317_s.len()));
		} else {
			_128421_right=static_cast<jule::I64>(_1be1b427b_as_i64(_126553_r.get()._field_constant.ptr()));
		};
		if ((_127817_left > _128421_right)) {
			return;;
		};
		_1be1b5249_set_str(_126531_d.get()._field_constant.ptr(), _128317_s.slice(_127817_left,_128421_right));
		_126531_d.get()._field_decl=true;
	} else {
		_126531_d.get()._field_constant=nullptr;
	};
}



inline void _1be3b80b7_check_slicing(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data>& _130137_d, jule::Ptr<_1be3a92d9_Data>& _130148_l, jule::Ptr<_1be3a92d9_Data>& _130159_r, jule::Ptr<_1d709c17e_SlicingExpr>& _130170_s) {
	{
		
		if ((_1be3d738e_arr(_130137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abec0e9b:;
			{
				_1be3b778c_slicing_arr(&(*_self_), _130137_d);
				return;;
			}
		}
		else if ((_1be3d7603_slc(_130137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abec1023:;
			{
				return;;
			}
		}
		else if ((_1be3d6679_prim(_130137_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1abec109a:;
			{
				jule::Ptr<_1be3d9083_Prim> _130917_prim = _1be3d6679_prim(_130137_d.get()._field_kind.ptr());;
				{
					
					if (_1be3dc042_is_str(_130917_prim.ptr())) {
						_case_begin_1abec35ec:;
						{
							_1be3b7b55_slicing_str(&(*_self_), _130137_d,_130148_l,_130159_r);
							return;;
						}
					}
					_match_end_1abec3553:;
				};
			}
		}
		_match_end_1abec0d69:;
	};
	_1be3ab363_push_err(&(*_self_), _130170_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_130137_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1be3a92d9_Data> _1be3b83c5_eval_slicing(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709c17e_SlicingExpr> _132036_s) {
	jule::Ptr<_1be3a92d9_Data> _132117_d = _1be3c5a0e_eval_expr_kind(_self_, _132036_s.get()._field_expr.get()._field_kind);;
	if ((_132117_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _132618_l;;
	jule::Ptr<_1be3a92d9_Data> _132625_r;;
	std::tie(_132618_l,_132625_r) = _1be3b7517_eval_slicing_exprs(_self_, _132036_s);
	if ((_132618_l == nullptr)) {
		return _132117_d;
	};
	_132117_d.get()._field_decl=false;
	_1be3b80b7_check_slicing(_self_.ptr(), _132117_d,_132618_l,_132625_r,_132036_s);
	if (_1be3a9b9c_is_const(_132117_d.ptr())) {
		_132117_d.get()._field_decl=false;
		_132117_d.get()._field_model=jule::Any(_132117_d.get()._field_constant);
	} else if (_132117_d.get()._field_decl) {
		_132117_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1bc9c5be3_SlicingExprModel> _134421_model = jule::new_ptr<_1bc9c5be3_SlicingExprModel>(_1bc9c5be3_SlicingExprModel{._field_token=_132036_s.get()._field_token, ._field_expr=jule::Any(_132117_d.get()._field_model), ._field_left=jule::Any(_132618_l.get()._field_model), });;
		if ((_132625_r != nullptr)) {
			_134421_model.get()._field_right=jule::Any(_132625_r.get()._field_model);
		};
		_132117_d.get()._field_model=jule::Any(_134421_model);
	};
	return _132117_d;
}



inline void _1be3b878d_cast_ptr(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _135731_t, jule::Ptr<_1be3a92d9_Data> _135749_d, jule::Ptr<_20201c3d1_Token> _135759_error_token) {
	jule::Ptr<_1be3dc592_Sptr> _135813_sptr = _1be3d68dd_sptr(_135749_d.get()._field_kind.ptr());;
	if ((_135813_sptr != nullptr)) {
		if ((!(_1be3d4c71_equals(_1be3d6b52_ptr(_135731_t.ptr()).get()._field_elem, _135813_sptr.get()._field_elem)))) {
			_1be3ab363_push_err(&(*_self_), _135759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_135749_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_135731_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1be3abc9d_is_unsafe(&(*_self_))))) {
		_1be3ab363_push_err(&(*_self_), _135759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be3d9083_Prim> _137113_prim = _1be3d6679_prim(_135749_d.get()._field_kind.ptr());;
	if (((_1be3d6b52_ptr(_135749_d.get()._field_kind.ptr()) == nullptr) && ((_137113_prim == nullptr) || (!(_1be25786e_is_int(_1be3d93e6_to_str(_137113_prim.ptr()))))))) {
		_1be3ab363_push_err(&(*_self_), _135759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_135749_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_135731_t.ptr()))}));
	};
	_135749_d.get()._field_constant=nullptr;
}



inline void _1be3b8b56_cast_struct(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _137934_t, jule::Ptr<_1be3a92d9_Data> _137952_d, jule::Ptr<_20201c3d1_Token> _137962_error_token) {
	jule::Ptr<_1bd929d66_Trait> _138017_tr = _1be3d7d40_trt(_137952_d.get()._field_kind.ptr());;
	if ((_138017_tr == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _137962_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_137952_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_137934_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _138617_s = _1be3d7acb_strct(_137934_t.ptr());;
	_1abed2045_push_reference(&(*_self_), _138617_s);
	if ((!(_1d70707c3_is_implements(_138617_s.get()._field_decl.ptr(), _138017_tr)))) {
		_1be3ab363_push_err(&(*_self_), _137962_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_137952_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_137934_t.ptr()))}));
	};
}



inline void _1be3b901e_cast_ref(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _139431_t, jule::Ptr<_1be3a92d9_Data> _139449_d, jule::Ptr<_20201c3d1_Token> _139459_error_token) {
	jule::Ptr<_1be3dc592_Sptr> _139517_sptr = _1be3d68dd_sptr(_139431_t.ptr());;
	jule::Ptr<_1be3e0b06_Ptr> _139717_ptr = _1be3d6b52_ptr(_139449_d.get()._field_kind.ptr());;
	if (((_139717_ptr != nullptr) && _1be3d4c71_equals(_139517_sptr.get()._field_elem, _139717_ptr.get()._field_elem))) {
		if ((!(_1be3abc9d_is_unsafe(&(*_self_))))) {
			_1be3ab363_push_err(&(*_self_), _139459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1be3d7acb_strct(_139517_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1be3b8b56_cast_struct(&(*_self_), _139517_sptr.get()._field_elem,_139449_d,_139459_error_token);
		return;;
	};
	_1be3ab363_push_err(&(*_self_), _139459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_139449_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_139431_t.ptr()))}));
}



inline void _1be3b93d7_cast_slc(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _141631_t, jule::Ptr<_1be3a92d9_Data> _141649_d, jule::Ptr<_20201c3d1_Token> _141659_error_token) {
	if ((_1be3d6db6_enm(_141649_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1be3d6679_prim(_1be3d6db6_enm(_141649_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1be3dc042_is_str(_1be3d6679_prim(_1be3d6db6_enm(_141649_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1be3ab363_push_err(&(*_self_), _141659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_141649_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_141631_t.ptr()))}));
			return;;
		};
	} else if (((_1be3d6679_prim(_141649_d.get()._field_kind.ptr()) == nullptr) || (!(_1be3dc042_is_str(_1be3d6679_prim(_141649_d.get()._field_kind.ptr()).ptr()))))) {
		_1be3ab363_push_err(&(*_self_), _141659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_141649_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_141631_t.ptr()))}));
		return;;
	};
	_141631_t=_1be3d7603_slc(_141631_t.ptr()).get()._field_elem;
	jule::Ptr<_1be3d9083_Prim> _142813_prim = _1be3d6679_prim(_141631_t.ptr());;
	if (((_142813_prim == nullptr) || ((!(_1be3da617_is_u8(_142813_prim.ptr()))) && (!(_1be3da13e_is_i32(_142813_prim.ptr())))))) {
		_1be3ab363_push_err(&(*_self_), _141659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_141649_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_141631_t.ptr()))}));
	};
}



inline void _1be3b9706_cast_str(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _143431_d, jule::Ptr<_20201c3d1_Token> _143441_error_token) {
	if ((_1be3d6db6_enm(_143431_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc9dceb3_Enum> _143621_e = _1be3d6db6_enm(_143431_d.get()._field_kind.ptr());;
		if (((_1be3d6679_prim(_143621_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1be3dc042_is_str(_1be3d6679_prim(_143621_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1be3d6679_prim(_143431_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1be3d9083_Prim> _144317_prim = _1be3d6679_prim(_143431_d.get()._field_kind.ptr());;
		if (((!(_1be3da617_is_u8(_144317_prim.ptr()))) && (!(_1be3da13e_is_i32(_144317_prim.ptr()))))) {
			_1be3ab363_push_err(&(*_self_), _143441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1be3d4963_to_str(_143431_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1be3d7603_slc(_143431_d.get()._field_kind.ptr()) == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _143441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1be3d4963_to_str(_143431_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _145517_t = _1be3d7603_slc(_143431_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1be3d9083_Prim> _145613_prim = _1be3d6679_prim(_145517_t.ptr());;
	if (((_145613_prim == nullptr) || ((!(_1be3da617_is_u8(_145613_prim.ptr()))) && (!(_1be3da13e_is_i32(_145613_prim.ptr())))))) {
		_1be3ab363_push_err(&(*_self_), _143441_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1be3d4963_to_str(_143431_d.get()._field_kind.ptr()))}));
	};
}



inline void _1be3b9abe_cast_int(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _146231_t, jule::Ptr<_1be3a92d9_Data> _146249_d, jule::Ptr<_20201c3d1_Token> _146259_error_token) {
	if (_1be3a9b9c_is_const(_146249_d.ptr())) {
		jule::Ptr<_1be3d9083_Prim> _146417_prim = _1be3d6679_prim(_146231_t.ptr());;
		{
			
			if (_1be2572db_is_sig_int(_146417_prim.get()._field_kind)) {
				_case_begin_1abeecc31:;
				{
					_1be1b49c9_set_i64(_146249_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_146249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1be2575c7_is_unsig_int(_146417_prim.get()._field_kind)) {
				_case_begin_1abeecca8:;
				{
					_1be1b4c4e_set_u64(_146249_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_146249_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1abeecb76:;
		};
	};
	if ((_1be3d6db6_enm(_146249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc9dceb3_Enum> _147417_e = _1be3d6db6_enm(_146249_d.get()._field_kind.ptr());;
		if (_1be257e35_is_num(_1be3d4963_to_str(_147417_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1be3d68dd_sptr(_146249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1be3d9083_Prim> _148117_prim = _1be3d6679_prim(_146231_t.ptr());;
		if ((!(_1be3dba69_is_uintptr(_148117_prim.ptr())))) {
			_1be3ab363_push_err(&(*_self_), _146259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_146249_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_146231_t.ptr()))}));
		};
		return;;
	};
	if ((_1be3d6b52_ptr(_146249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1be3d9083_Prim> _148817_prim = _1be3d6679_prim(_146231_t.ptr());;
		if (_1be3dba69_is_uintptr(_148817_prim.ptr())) {
		} else if ((!(_1be3abc9d_is_unsafe(&(*_self_))))) {
			_1be3ab363_push_err(&(*_self_), _146259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1be3da13e_is_i32(_148817_prim.ptr()))) && (!(_1be3da3a3_is_i64(_148817_prim.ptr())))) && (!(_1be3da87b_is_u16(_148817_prim.ptr())))) && (!(_1be3daae0_is_u32(_148817_prim.ptr())))) && (!(_1be3dad54_is_u64(_148817_prim.ptr()))))) {
			_1be3ab363_push_err(&(*_self_), _146259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_146249_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_146231_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1be3d9083_Prim> _149913_prim = _1be3d6679_prim(_146249_d.get()._field_kind.ptr());;
	if (((_149913_prim != nullptr) && _1be257e35_is_num(_1be3d93e6_to_str(_149913_prim.ptr())))) {
		return;;
	};
	_1be3ab363_push_err(&(*_self_), _146259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_146249_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_146231_t.ptr()))}));
}



inline void _1be3b9e87_cast_num(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _150731_t, jule::Ptr<_1be3a92d9_Data> _150749_d, jule::Ptr<_20201c3d1_Token> _150759_error_token) {
	if (_1be3a9b9c_is_const(_150749_d.ptr())) {
		jule::Ptr<_1be3d9083_Prim> _150917_prim = _1be3d6679_prim(_150731_t.ptr());;
		{
			
			if (_1be257b8d_is_float(_150917_prim.get()._field_kind)) {
				_case_begin_1ac008a0b:;
				{
					_1be1b54be_set_f64(_150749_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1be1b4754_as_f64(_150749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1be2572db_is_sig_int(_150917_prim.get()._field_kind)) {
				_case_begin_1ac008a83:;
				{
					_1be1b49c9_set_i64(_150749_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_150749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1be2575c7_is_unsig_int(_150917_prim.get()._field_kind)) {
				_case_begin_1ac008b0a:;
				{
					_1be1b4c4e_set_u64(_150749_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_150749_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ac008940:;
		};
	};
	if ((_1be3d6db6_enm(_150749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc9dceb3_Enum> _152117_e = _1be3d6db6_enm(_150749_d.get()._field_kind.ptr());;
		if (_1be257e35_is_num(_1be3d4963_to_str(_152117_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1be3d9083_Prim> _152713_prim = _1be3d6679_prim(_150749_d.get()._field_kind.ptr());;
	if (((_152713_prim != nullptr) && _1be257e35_is_num(_1be3d93e6_to_str(_152713_prim.ptr())))) {
		return;;
	};
	_1be3ab363_push_err(&(*_self_), _150759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_150749_d.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_150731_t.ptr()))}));
}



inline void _1be3ba350_cast_prim(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _153532_t, jule::Ptr<_1be3a92d9_Data> _153550_d, jule::Ptr<_20201c3d1_Token> _153560_error_token) {
	jule::Ptr<_1be3d9083_Prim> _153613_prim = _1be3d6679_prim(_153532_t.ptr());;
	{
		
		if (_1be3dc2a6_is_any(_153613_prim.ptr())) {
			_case_begin_1ac014819:;
		}
		else if (_1be3dc042_is_str(_153613_prim.ptr())) {
			_case_begin_1ac014d7a:;
			{
				_1be3b9706_cast_str(&(*_self_), _153550_d,_153560_error_token);
			}
		}
		else if (_1be25786e_is_int(_1be3d93e6_to_str(_153613_prim.ptr()))) {
			_case_begin_1ac014e02:;
			{
				_1be3b9abe_cast_int(&(*_self_), _153532_t,_153550_d,_153560_error_token);
			}
		}
		else if (_1be257e35_is_num(_1be3d93e6_to_str(_153613_prim.ptr()))) {
			_case_begin_1ac014e79:;
			{
				_1be3b9e87_cast_num(&(*_self_), _153532_t,_153550_d,_153560_error_token);
			}
		}
		else {
			_case_begin_1ac014d14:;
			{
				_1be3ab363_push_err(&(*_self_), _153560_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_153532_t.ptr()))}));
			}
		}
		_match_end_1ac014c9d:;
	};
}



inline void _1be3ba66e_cast_constant(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _155137_t, jule::Ptr<_1be3a92d9_Data>& _155156_d) {
	if (((_155156_d == nullptr) || (!(_1be3a9b9c_is_const(_155156_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1be3d9083_Prim> _155513_prim = _1be3d6679_prim(_155137_t.ptr());;
	_1be3d1ae7_cast_const_by_type(_155513_prim.get()._field_kind,_155156_d);
	_155156_d.get()._field_model=jule::Any(_155156_d.get()._field_constant);
}



inline void _1be3baa37_cast_type_enum(_1be3aad57_Eval* _self_, jule::Ptr<_1bd9c99a4_TypeEnum> _156037_t, jule::Ptr<_1be3d45ab_TypeKind>& _156056_dest, jule::Ptr<_20201c3d1_Token> _156077_error_token) {
	{
		auto &expr = _156037_t.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ac019c81:;
		if (it != expr.end()) {
			jule::Ptr<_1bcb58ddc_TypeEnumItem> _156121_item = *it;
			{
				if (_1be3d4c71_equals(_156121_item.get()._field_kind.get()._field_kind, _156056_dest)) {
					return;;
				};
			}
			_iter_next_1ac019c81:;
			++it;
			goto _iter_begin_1ac019c81;
		}
		_iter_end_1ac019c81:;
	};
	_1be3ab363_push_err(&(*_self_), _156077_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_156056_dest.ptr())),jule::Any(_1bcc49b37_to_str(_156037_t.ptr()))}));
}



inline jule::Ptr<_1be3a92d9_Data> _1be3baeaa_eval_cast_by_type_n_data(_1be3aad57_Eval* _self_, jule::Ptr<_1be3d45ab_TypeKind> _156947_t, jule::Ptr<_1be3a92d9_Data> _156965_d, jule::Ptr<_20201c3d1_Token> _156979_error_token) {
	if (((_156965_d != nullptr) && _156965_d.get()._field_decl)) {
		_1be3ab363_push_err(&(*_self_), _156979_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1be3d6679_prim(_156965_d.get()._field_kind.ptr()) != nullptr) && _1be3dc2a6_is_any(_1be3d6679_prim(_156965_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ac01cb0d:;
			{
				if ((_1be3d6db6_enm(_156947_t.ptr()) != nullptr)) {
					_1be3ab363_push_err(&(*_self_), _156979_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1be3ab682_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1be3d712a_tenm(_156947_t.ptr()) != nullptr)) {
					_1be3ab363_push_err(&(*_self_), _156979_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1be3d712a_tenm(_156965_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac01cb74:;
			{
				_1be3baa37_cast_type_enum(&(*_self_), _1be3d712a_tenm(_156965_d.get()._field_kind.ptr()),_156947_t,_156979_error_token);
			}
		}
		else if ((_1be3d6b52_ptr(_156947_t.ptr()) != nullptr)) {
			_case_begin_1ac01cbda:;
			{
				_1be3b878d_cast_ptr(&(*_self_), _156947_t,_156965_d,_156979_error_token);
			}
		}
		else if ((_1be3d68dd_sptr(_156947_t.ptr()) != nullptr)) {
			_case_begin_1ac01cc51:;
			{
				_1be3b901e_cast_ref(&(*_self_), _156947_t,_156965_d,_156979_error_token);
			}
		}
		else if ((_1be3d7603_slc(_156947_t.ptr()) != nullptr)) {
			_case_begin_1ac01da76:;
			{
				_1be3b93d7_cast_slc(&(*_self_), _156947_t,_156965_d,_156979_error_token);
			}
		}
		else if ((_1be3d7acb_strct(_156947_t.ptr()) != nullptr)) {
			_case_begin_1ac01dadc:;
			{
				_1be3b8b56_cast_struct(&(*_self_), _156947_t,_156965_d,_156979_error_token);
			}
		}
		else if ((_1be3d6679_prim(_156947_t.ptr()) != nullptr)) {
			_case_begin_1ac01db53:;
			{
				_1be3ba350_cast_prim(&(*_self_), _156947_t,_156965_d,_156979_error_token);
				_1be3ba66e_cast_constant(&(*_self_), _156947_t,_156965_d);
			}
		}
		else {
			_case_begin_1ac01ca97:;
			{
				_1be3ab363_push_err(&(*_self_), _156979_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_156947_t.ptr()))}));
				_156965_d=nullptr;
			}
		}
		_match_end_1ac01bcc7:;
	};
	if ((_156965_d == nullptr)) {
		return nullptr;
	};
	_156965_d.get()._field_mutable=(_156965_d.get()._field_mutable || ((!(_1be3d5964_mutable(_156965_d.get()._field_kind.ptr()))) && _1be3d5964_mutable(_156947_t.ptr())));
	_156965_d.get()._field_lvalue=false;
	_156965_d.get()._field_decl=false;
	if (((_1be3d6db6_enm(_156965_d.get()._field_kind.ptr()) == nullptr) || (!(_1be3d4c71_equals(_1be3d6db6_enm(_156965_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _156947_t))))) {
		_1be3d107a_apply_cast_kind(_156965_d,_156947_t);
		_156965_d.get()._field_model.operator jule::Ptr<_1bc9c4d79_CastingExprModel>().get()._field_token=_156979_error_token;
	} else {
		_156965_d.get()._field_kind=_156947_t;
	};
	return _156965_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bb2c9_eval_cast(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7097740_CastExpr> _162233_c) {
	jule::Ptr<_1be3d86c0_TypeSymbol> _162317_t = _1bc9ccb1d_build_type(_162233_c.get()._field_kind);;
	jule::Bool _162413_ok = _1be34e614_check_type(_self_.get()._field_s, _162317_t,_self_.get()._field_lookup);;
	if ((!(_162413_ok))) {
		return nullptr;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _162917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_162917_prefix;
	});;
	jule::Ptr<_1be3a92d9_Data> _163317_d = _1be3c5a0e_eval_expr_kind(_self_, _162233_c.get()._field_expr.get()._field_kind);;
	if ((_163317_d == nullptr)) {
		return nullptr;
	};
	return _1be3baeaa_eval_cast_by_type_n_data(_self_.ptr(), _162317_t.get()._field_kind,_163317_d,_162233_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bb5d7_eval_ns_selection(_1be3aad57_Eval* _self_, jule::Ptr<_1d7097ae7_NsSelectionExpr> _164136_s) {
	jule::Str _164213_path = _1be3ebd87_build_link_path_by_tokens(_164136_s.get()._field_ns);;
	jule::Ptr<_1be272d40_ImportInfo> _164317_imp = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ed394_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>([=](jule::Ptr<_1be272d40_ImportInfo> _164353_imp) mutable -> jule::Bool {
		if (((_164136_s.get()._field_ns.len() == 1LL) && (_164353_imp.get()._field_alias == _164213_path))) {
			return true;
		};
		return ((_164353_imp.get()._field_link_path == _164213_path) && _1be27599c_is_accessible_via_selection(_164353_imp.ptr()));
	}));;
	if ((_164317_imp == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _164136_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_164213_path)}));
		return nullptr;
	};
	jule::Trait<_1be3eedce_Lookup> _165517_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1be3eedce_Lookup>(_164317_imp, 1);
	;
	_1be3aba39_disallow_builtin(&(*_self_));
	jule::Any _166017_def = _1be3ae377_get_def(&(*_self_), _164136_s.get()._field_ident.get()._field_kind,false);;
	_1be3ab85d_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_165517_lookup;
	jule::Ptr<_1be3a92d9_Data> _166417_d = _1be3b2d92_eval_def(&(*_self_), jule::Any(_166017_def),_164136_s.get()._field_ident);;
	return _166417_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bba5a_eval_struct_lit_explicit(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d70ab9c9_StructIns> _166948_s, jule::Slice<jule::Ptr<_1d709475e_Expr>> _167013_exprs, jule::Ptr<_20201c3d1_Token> _167033_error_token) {
	jule::Bool _167113_ok = _1be34c36a_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_166948_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_166948_s.get()._field_generics.len()),_167033_error_token);;
	if ((!(_167113_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _166948_s.get()._field_decl))) {
		_1be3ab363_push_err(_self_.ptr(), _167033_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_166948_s.get()._field_decl.get()._field_ident)}));
	};
	_1abed2045_push_reference(_self_.ptr(), _166948_s);
	_1be3b1269_check_deprecated(_self_.ptr(), _166948_s.get()._field_decl.get()._field_directives,_167033_error_token);
	_1be39d83e_StructLitChecker _168417_slc = _1be39d83e_StructLitChecker{._field_e=_self_, ._field_error_token=_167033_error_token, ._field_s=_166948_s, };;
	_1be39edd4_check(&_168417_slc, _167013_exprs);
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_166948_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=jule::Any(jule::new_ptr<_1bc9c49a0_StructLitExprModel>(_1bc9c49a0_StructLitExprModel{._field_strct=_166948_s, ._field_args=_168417_slc._field_args})), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bbd79_eval_struct_lit(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7099cc5_StructLit> _170339_lit) {
	jule::Ptr<_1be3d86c0_TypeSymbol> _170417_t = _1bc9ccb1d_build_type(_170339_lit.get()._field_kind);;
	jule::Bool _170513_ok = _1be34e614_check_type(_self_.get()._field_s, _170417_t,_self_.get()._field_lookup);;
	if ((!(_170513_ok))) {
		return nullptr;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _171017_s = _1be3d7acb_strct(_170417_t.get()._field_kind.ptr());;
	if ((_171017_s == nullptr)) {
		if ((_1be3d68dd_sptr(_170417_t.get()._field_kind.ptr()) != nullptr)) {
			_171017_s=_1be3d7acb_strct(_1be3d68dd_sptr(_170417_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_171017_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1be3ab363_push_err(_self_.ptr(), _170339_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1be3a92d9_Data> _172317_d = _1be3bba5a_eval_struct_lit_explicit(_self_, _171017_s,_170339_lit.get()._field_exprs,_170339_lit.get()._field_kind.get()._field_token);;
	if ((_1be3d68dd_sptr(_170417_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1bc9c49a0_StructLitExprModel> _172521_model = _172317_d.get()._field_model.operator jule::Ptr<_1bc9c49a0_StructLitExprModel>();;
		_1be3ce9d5_make_struct_lit_alloc(_172317_d,_172521_model);
	};
	return _172317_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bc187_eval_type(_1be3aad57_Eval* _self_, jule::Ptr<_1d709023d_TypeDecl> _173132_t) {
	jule::Ptr<_1be3d86c0_TypeSymbol> _173217_tk = _1bc9ccb1d_build_type(_173132_t);;
	jule::Bool _173313_ok = _1be34e614_check_type((*_self_)._field_s, _173217_tk,(*_self_)._field_lookup);;
	if ((!(_173313_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=_173217_tk.get()._field_kind, ._field_model=jule::Any(_173217_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1be3bc4a6_call_type_fn(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7098ae8_FnCallExpr>& _174437_fc, jule::Ptr<_1be3a92d9_Data>& _174459_d) {
	if ((_174437_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_self_.ptr(), _174437_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_174459_d.get()._field_kind.ptr()))}));
	} else if ((_174437_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_self_.ptr(), _174437_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_174437_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_self_.ptr(), _174437_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_174437_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1be3d45ab_TypeKind> _175421_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1be3a92d9_Data> _175621_arg = _1be3c5a0e_eval_expr_kind(_self_, _174437_fc.get()._field_args[0LL].get()._field_kind);;
		_self_.get()._field_prefix=_175421_prefix;
		if ((_175621_arg != nullptr)) {
			_174459_d=_1be3baeaa_eval_cast_by_type_n_data(_self_.ptr(), _174459_d.get()._field_kind,_175621_arg,_174437_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_174459_d != nullptr)) {
		_174459_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1be3bc85d_check_fn_call_generics(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9c9c4c_FnIns> _176845_f, jule::Ptr<_1d7098ae8_FnCallExpr> _176913_fc) {
	jule::Bool _176932_ok = jule::Bool();
	jule::Bool _176942_dynamic_annotation = jule::Bool();
	{
		
		if ((((_176845_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_176913_fc.get()._field_generics.len() == 0LL)) && (_176845_f.get()._field_params.len() > 0LL))) {
			_case_begin_1ac04b048:;
			{
				_176942_dynamic_annotation=true;
				_176845_f.get()._field_generics=jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>::alloc(_176845_f.get()._field_decl.get()._field_generics.len());
				_176932_ok = true;
				_176942_dynamic_annotation = true;
				return std::make_tuple(_176932_ok,_176942_dynamic_annotation);
			}
		}
		else if ((!(_1be34c36a_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_176845_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_176913_fc.get()._field_generics.len()),_176913_fc.get()._field_token)))) {
			_case_begin_1ac049aa2:;
			{
				_176932_ok = false;
				_176942_dynamic_annotation = false;
				return std::make_tuple(_176932_ok,_176942_dynamic_annotation);
			}
		}
		else {
			_case_begin_1ac048908:;
			{
				_176845_f.get()._field_generics=jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>::alloc(0LL,_176845_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _176913_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ac049332:;
					if (it != expr.end()) {
						jule::Ptr<_1d709023d_TypeDecl> _178125_g = *it;
						{
							jule::Ptr<_1be3d86c0_TypeSymbol> _178225_k = _1bc9ccb1d_build_type(_178125_g);;
							_176932_ok=_1be34e614_check_type((*_self_)._field_s, _178225_k,(*_self_)._field_lookup);
							if ((!(_176932_ok))) {
								_176932_ok = false;
								_176942_dynamic_annotation = false;
								return std::make_tuple(_176932_ok,_176942_dynamic_annotation);
							};
							_176845_f.get()._field_generics = jule::alloc_for_append(_176845_f.get()._field_generics,1);_176845_f.get()._field_generics.__push(_178225_k.get()._field_kind);;
						}
						_iter_next_1ac049332:;
						++it;
						goto _iter_begin_1ac049332;
					}
					_iter_end_1ac049332:;
				};
				_176932_ok = true;
				_176942_dynamic_annotation = false;
				return std::make_tuple(_176932_ok,_176942_dynamic_annotation);
			}
		}
		_match_end_1ac04882b:;
	};
}



inline void _1be3bcb7c_call_builtin_fn(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7098ae8_FnCallExpr>& _179440_fc, jule::Ptr<_1be3a92d9_Data>& _179462_d) {
	_179462_d=_1be3d7867_fnc(_179462_d.get()._field_kind.ptr()).get()._field_caller(_self_,_179440_fc,_179462_d);
	if ((_179462_d == nullptr)) {
		return;;
	};
	_179462_d.get()._field_mutable=true;
}



inline void _1be3bcebd_check_fn_of_concurrent_call(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _180247_f, jule::Ptr<_20201c3d1_Token> _180258_error_token) {
	if (_1be3abc9d_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _180247_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ac051823:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9a60_ParamIns> &_180716_p = *it;
			{
				if (_180716_p.get()._field_decl.get()._field_reference) {
					_1be3ab363_push_err(&(*_self_), _180258_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ac051823:;
			++it;
			goto _iter_begin_1ac051823;
		}
		_iter_end_1ac051823:;
	};
}



inline void _1be3bd3b9_process_exceptional_handler(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _181551_f, jule::Ptr<_1d7098ae8_FnCallExpr>& _181567_fc, jule::Ptr<_1be3a92d9_Data>& _181589_d) {
	jule::Bool _181613_result_needed = ((!(_1d70884de_is_void(_181551_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1be25aee3_ScopeChecker> _181717_csc = nullptr;;
	jule::Ptr<_1be1ca25e_Scope> _181817_ch = nullptr;;
	jule::Ptr<_1bc9c5066_FnCallExprModel> _182017_model = _181589_d.get()._field_model.operator jule::Ptr<_1bc9c5066_FnCallExprModel>();;
	jule::Ptr<_1be25aee3_ScopeChecker> _182417_sc = (*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>();;
	_181717_csc=_1be26b586_new_child_checker(_182417_sc);
	if (_181613_result_needed) {
		_181717_csc.get()._field_result=_181551_f;
	};
	_181817_ch=_1be2608aa_get_child(_182417_sc.ptr());
	_181567_fc.get()._field_exception.get()._field_parent=_182417_sc.get()._field_tree;
	_181717_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_181717_csc.get()._field_table.get()._field_vars,1);_181717_csc.get()._field_table.get()._field_vars.__push(_1be3ced26_build_error_var(_181817_ch,_181567_fc));;
	_1be260c73_check_child_ssc(_182417_sc, _181567_fc.get()._field_exception,_181817_ch,_181717_csc);
	_182017_model.get()._field_assigned=_181613_result_needed;
	_182017_model.get()._field_except=_181817_ch;
	if ((_181613_result_needed && (_181717_csc.get()._field_result != nullptr))) {
		_1be3ab363_push_err(&(*_self_), _181567_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1be3bd6e9_call_fn(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7098ae8_FnCallExpr>& _184232_fc, jule::Ptr<_1be3a92d9_Data>& _184254_d) {
	jule::Ptr<_1bc9c9c4c_FnIns> _184317_f = _1be3d7867_fnc(_184254_d.get()._field_kind.ptr());;
	if ((_1be3ac012_is_global(_self_.ptr()) && _184317_f.get()._field_decl.get()._field_exceptional)) {
		_1be3ab363_push_err(_self_.ptr(), _184232_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1be3ab682_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_184254_d=nullptr;
		return;;
	};
	if (_1d707b559_is_builtin(_184317_f.ptr())) {
		_1be3bcb7c_call_builtin_fn(_self_, _184232_fc,_184254_d);
		return;;
	};
	if (((!(_1d70615d8_is_method(_184317_f.get()._field_decl.ptr()))) && _1be3eaeb8_has_directive(_184317_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1be3ab363_push_err(_self_.ptr(), _184232_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_184254_d=nullptr;
		return;;
	};
	if (((((!(_184254_d.get()._field_mutable)) && _1d70615d8_is_method(_184317_f.get()._field_decl.ptr())) && (!(_184317_f.get()._field_decl.get()._field_statically))) && _184317_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1be3ab363_push_err(_self_.ptr(), _184232_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1be3abc9d_is_unsafe(_self_.ptr()))) && _184317_f.get()._field_decl.get()._field_unsafety)) {
		_1be3ab363_push_err(_self_.ptr(), _184232_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _186818_ok;;
	jule::Bool _186822_dynamic_annotation;;
	std::tie(_186818_ok,_186822_dynamic_annotation) = _1be3bc85d_check_fn_call_generics(_self_.ptr(), _184317_f,_184232_fc);
	if ((!(_186818_ok))) {
		_184254_d=nullptr;
		return;;
	};
	jule::Ptr<_1be348311_Sema> _187417_old = _self_.get()._field_s;;
	if ((_184317_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_184317_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_187417_old != _self_.get()._field_s)) {
			_187417_old.get()._field_errors=jule::append(_187417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_187417_old;
	});;
	if ((!(_186822_dynamic_annotation))) {
		if ((!(_184317_f.get()._field_reloaded))) {
			_186818_ok=_1be35254b_reload_fn_ins_types(_self_.get()._field_s, _184317_f);
			if ((!(_186818_ok))) {
				_184254_d=nullptr;
				return;;
			};
			_184317_f.get()._field_reloaded=true;
		};
	} else if ((_184317_f.get()._field_generics.len() > 0LL)) {
		_1be351ddb_build_fn_non_generic_type_kinds(_self_.get()._field_s, _184317_f);
	};
	_1be39ae35_FnCallArgChecker _190017_fcac = _1be39ae35_FnCallArgChecker{._field_e=_self_, ._field_args=_184232_fc.get()._field_args, ._field_error_token=_184232_fc.get()._field_token, ._field_f=_184317_f, ._field_dynamic_annotation=_186822_dynamic_annotation, };;
	if ((_184317_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_187417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187417_old);
		_186818_ok=_1be39d300_check(&_190017_fcac);
		std::tie(_187417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187417_old);
	} else {
		_186818_ok=_1be39d300_check(&_190017_fcac);
	};
	if (((!(_186818_ok)) && _186822_dynamic_annotation)) {
		_184254_d=nullptr;
		return;;
	};
	if (_186822_dynamic_annotation) {
		_186818_ok=_1be35254b_reload_fn_ins_types(_self_.get()._field_s, _184317_f);
		if ((!(_186818_ok))) {
			_184254_d=nullptr;
			return;;
		};
		_184317_f.get()._field_reloaded=true;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _192917_exist_instance = _1d708c768_append_instance(_184317_f.get()._field_decl.ptr(), _184317_f);;
	if ((_192917_exist_instance != nullptr)) {
		_184317_f=_192917_exist_instance;
	};
	jule::Any _193417_call_model = _184254_d.get()._field_model;;
	if (_1d70884de_is_void(_184317_f.get()._field_decl.ptr())) {
		_184254_d=_1be3d1278_build_void_data();
	} else {
		_184254_d.get()._field_kind=_184317_f.get()._field_result;
		_184254_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1bc9c5066_FnCallExprModel> _194317_model = jule::new_ptr<_1bc9c5066_FnCallExprModel>(_1bc9c5066_FnCallExprModel{._field_token=_184232_fc.get()._field_token, ._field_func=_184317_f, ._field_expr=jule::Any(_193417_call_model), ._field_args=_190017_fcac._field_arg_models, });;
	_184254_d.get()._field_model=jule::Any(_194317_model);
	_184254_d.get()._field_mutable=true;
	if (_184317_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1d7098e5b_unhandled(_184232_fc.ptr())) {
				_case_begin_1ac06ae14:;
				{
					_1be3ab363_push_err(_self_.ptr(), _184232_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1be3ab682_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1d70991c0_ignored(_184232_fc.ptr())) {
				_case_begin_1ac06abd3:;
				{
					goto _match_end_1ac06a760;
				}
			}
			else {
				_case_begin_1ac06a83c:;
				{
					_1be3bd3b9_process_exceptional_handler(_self_.ptr(), _184317_f,_184232_fc,_184254_d);
				}
			}
			_match_end_1ac06a760:;
		};
	} else if ((!(_1d7098e5b_unhandled(_184232_fc.ptr())))) {
		_1be3ab363_push_err(_self_.ptr(), _184232_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_184317_f.get()._field_generics.len() > 0LL)) {
		if ((_192917_exist_instance != nullptr)) {
			_1be3d2103_update_model_to_generic_ins(_194317_model,_184317_f);
		} else {
			_1be35de2b_check_fn_ins_caller(_self_.get()._field_s, _184317_f,_184232_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bda07_eval_fn_call(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d7098ae8_FnCallExpr> _198236_fc) {
	jule::Ptr<_1be3d45ab_TypeKind> _198317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_198317_prefix;
	});;
	{
		auto &_match_expr{ _198236_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
			_case_begin_1ac06eb4e:;
			{
				if ((_198236_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1be45d019_builtin_caller_error(_self_,_198236_fc);
				};
			}
		}
		_match_end_1ac06eae9:;
	};
	jule::Ptr<_1be3a92d9_Data> _199617_d = _1be3c5a0e_eval_expr_kind(_self_, _198236_fc.get()._field_expr.get()._field_kind);;
	if ((_199617_d == nullptr)) {
		return nullptr;
	};
	if (_199617_d.get()._field_decl) {
		_1be3bc4a6_call_type_fn(_self_, _198236_fc,_199617_d);
		return _199617_d;
	};
	if ((_1be3d7867_fnc(_199617_d.get()._field_kind.ptr()) == nullptr)) {
		_1be3ab363_push_err(_self_.ptr(), _198236_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1be3bd6e9_call_fn(_self_, _198236_fc,_199617_d);
	return _199617_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bddae_eval_enum_static(_1be3aad57_Eval* _self_, jule::Ptr<_1bc9dceb3_Enum> _201539_enm, jule::Ptr<_20201c3d1_Token> _201551_ident) {
	jule::Ptr<_1be3a92d9_Data> _201617_d = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_201539_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1bcb66966_EnumItem> _202517_item = _1bcb599d1_find_item(_201539_enm.ptr(), _201551_ident.get()._field_kind);;
	if ((_202517_item == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _201551_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201539_enm.get()._field_ident),jule::Any(_201551_ident.get()._field_kind)}));
	} else {
		_201617_d.get()._field_constant=jule::new_ptr<_1be159e14_Const>((*(_202517_item.get()._field_value.get()._field_data.get()._field_constant)));
		_201617_d.get()._field_model=jule::Any(_201617_d.get()._field_constant);
		_1be3d182d_apply_cast_model_by_enum(_201617_d,_201539_enm);
	};
	return _201617_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3be266_eval_type_enum_static(_1be3aad57_Eval* _self_, jule::Ptr<_1bd9c99a4_TypeEnum> _203744_enm, jule::Ptr<_20201c3d1_Token> _203760_ident) {
	jule::Ptr<_1bcb58ddc_TypeEnumItem> _203817_item = _1bd92a6a2_find_item(_203744_enm.ptr(), _203760_ident.get()._field_kind);;
	if ((_203817_item == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _203760_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203744_enm.get()._field_ident),jule::Any(_203760_ident.get()._field_kind)}));
		return nullptr;
	};
	{
		
		if ((_1be3d6db6_enm(_203817_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0792a7:;
			{
				return _1be3ae90a___eval_enum(&(*_self_), _1be3d6db6_enm(_203817_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1be3d712a_tenm(_203817_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0794a5:;
			{
				return _1be3b00c0___eval_type_enum(&(*_self_), _1be3d712a_tenm(_203817_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1be3d7acb_strct(_203817_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0786c4:;
			{
				return _1be3b0785___eval_struct(&(*_self_), _1be3d7acb_strct(_203817_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else {
			_case_begin_1ac077805:;
			{
				jule::Ptr<_1be3a92d9_Data> _205121_d = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=_203817_item.get()._field_kind.get()._field_kind, ._field_decl=true, });;
				_205121_d.get()._field_model=jule::Any(_205121_d.get()._field_kind);
				return _205121_d;
			}
		}
		_match_end_1ac07778e:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3be61d_eval_struct_static(_1be3aad57_Eval* _self_, jule::Ptr<_1d70ab9c9_StructIns> _206041_s, jule::Ptr<_20201c3d1_Token> _206056_ident) {
	jule::Ptr<_1be3a92d9_Data> _206117_d = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1bc9c9873_Fn> _206917_method = _1d7083770_find_method(_206041_s.ptr(), _206056_ident.get()._field_kind,true);;
	if ((_206917_method != nullptr)) {
		if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _206917_method.get()._field_public,_206917_method.get()._field_token)))) {
			_1be3ab363_push_err(&(*_self_), _206056_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206056_ident.get()._field_kind)}));
			_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc9c9c4c_FnIns> _207621_ins = _1d707ec77_instance(_206917_method);;
		_207621_ins.get()._field_owner=_206041_s;
		_1abe31406_push_reference(&(*_self_), _207621_ins);
		_206117_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c64da_StructStaticIdentExprModel>(_1bc9c64da_StructStaticIdentExprModel{._field_structure=_206041_s, ._field_expr=jule::Any(_206117_d.get()._field_model), ._field_method=_207621_ins}));
		_206117_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_207621_ins, 1)});
		return _206117_d;
	};
	jule::Ptr<_1be36365b_Var> _209017_sttc = _1d7070372_find_static(_206041_s.get()._field_decl.ptr(), _206056_ident.get()._field_kind);;
	if ((_209017_sttc != nullptr)) {
		return _1be3b2633_eval_var(&(*_self_), _209017_sttc,_206056_ident);
	};
	_1be3ab363_push_err(&(*_self_), _206056_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206041_s.get()._field_decl.get()._field_ident),jule::Any(_206056_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3bea6e_eval_trait_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _209943_d, jule::Ptr<_1bd929d66_Trait> _209957_trt, jule::Ptr<_20201c3d1_Token> _209974_ident) {
	jule::Ptr<_1bc9c9873_Fn> _210017_f = _1bca6e82a_find_method(_209957_trt.ptr(), _209974_ident.get()._field_kind);;
	if ((_210017_f == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _209974_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209957_trt.get()._field_ident),jule::Any(_209974_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1d707ec77_instance(_210017_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(jule::new_ptr<_1bc9c5dd0_TraitSubIdentExprModel>(_1bc9c5dd0_TraitSubIdentExprModel{._field_token=_209974_ident, ._field_expr=jule::Any(_209943_d.get()._field_model), ._field_method=_210017_f, ._field_trt=_209957_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c0069_eval_struct_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _212244_d, jule::Ptr<_1d70ab9c9_StructIns> _212258_s, jule::Ptr<_1d709806a_SubIdentExpr> _212277_si, jule::Bool _212296_ref) {
	jule::Ptr<_1d708808d_FieldIns> _212317_f = _1d7085ac4_find_field(_212258_s.ptr(), _212277_si.get()._field_ident.get()._field_kind);;
	if ((_212317_f != nullptr)) {
		if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _212317_f.get()._field_decl.get()._field_public,_212317_f.get()._field_decl.get()._field_token)))) {
			_1be3ab363_push_err(&(*_self_), _212277_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_212317_f.get()._field_decl.get()._field_ident)}));
			_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _213021_model = jule::new_ptr<_1bc9c62ed_StructSubIdentExprModel>(_1bc9c62ed_StructSubIdentExprModel{._field_token=_212277_si.get()._field_ident, ._field_expr=jule::new_ptr<_1be3a92d9_Data>((*(_212244_d))), ._field_expr_kind=_212244_d.get()._field_kind, ._field_field=_212317_f});;
		_212244_d.get()._field_model=jule::Any(_213021_model);
		_212244_d.get()._field_kind=_212317_f.get()._field_kind;
		_212244_d.get()._field_lvalue=true;
		if ((_212317_f.get()._field_decl.get()._field_mutable && (!(_212244_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
					_case_begin_1ac08b660:;
					{
						jule::Ptr<_1be25aee3_ScopeChecker> _214425_scope = _1be25e106_get_root((*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>());;
						_212244_d.get()._field_mutable=((_214425_scope.get()._field_owner != nullptr) && (_214425_scope.get()._field_owner.get()._field_owner == _212258_s));
					}
				}
				_match_end_1ac08b60a:;
			};
		};
		return _212244_d;
	};
	;
	jule::Ptr<_1bc9c9873_Fn> _215317_m = _1d7083770_find_method(_212258_s.ptr(), _212277_si.get()._field_ident.get()._field_kind,false);;
	if ((_215317_m == nullptr)) {
		_1be3ab363_push_err(&(*_self_), _212277_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212258_s.get()._field_decl.get()._field_ident),jule::Any(_212277_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _215317_m.get()._field_public,_215317_m.get()._field_token)))) {
		_1be3ab363_push_err(&(*_self_), _212277_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215317_m.get()._field_ident)}));
		_1be3ab682_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1d7061462_is_ref(_215317_m.get()._field_params[0LL].ptr()) && (!(_212296_ref)))) {
		_1be3ab363_push_err(&(*_self_), _212277_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1be3b1269_check_deprecated(&(*_self_), _215317_m.get()._field_directives,_212277_si.get()._field_ident);
	jule::Ptr<_1bc9c9c4c_FnIns> _216917_ins = _1d707ec77_instance(_215317_m);;
	_216917_ins.get()._field_owner=_212258_s;
	_1abe31406_push_reference(&(*_self_), _216917_ins);
	jule::Ptr<_1be3a92d9_Data> _217217_model = jule::new_ptr<_1be3a92d9_Data>((*(_212244_d)));;
	_212244_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c62ed_StructSubIdentExprModel>(_1bc9c62ed_StructSubIdentExprModel{._field_token=_212277_si.get()._field_ident, ._field_expr=_217217_model, ._field_expr_kind=_212244_d.get()._field_kind, ._field_method=_216917_ins, }));
	_212244_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_216917_ins, 1)});
	return _212244_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c0421_eval_slice_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _218343_d, jule::Ptr<_20201c3d1_Token> _218357_ident) {
	{
		auto &_match_expr{ _218357_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac095922:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_218343_d.get()._field_kind, ._field_expr=jule::Any(_218343_d.get()._field_model), ._field_token=_218357_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ac095988:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_218343_d.get()._field_kind, ._field_expr=jule::Any(_218343_d.get()._field_model), ._field_token=_218357_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ac0959ee:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_params=jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>::make({jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be464d56_builtin_caller_common_mut), }), 1)}), ._field_mutable=_218343_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_218343_d.get()._field_kind, ._field_expr=jule::Any(_218343_d.get()._field_model), ._field_token=_218357_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ac0958ab:;
			{
				_1be3ab363_push_err(&(*_self_), _218357_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_218343_d.get()._field_kind.ptr())),jule::Any(_218357_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac095669:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c07c8_eval_array_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _224243_d, jule::Ptr<_20201c3d1_Token> _224257_ident) {
	{
		auto &_match_expr{ _224257_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac09b2a7:;
			{
				jule::Ptr<_1be159e14_Const> _224521_c = static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1be3d738e_arr(_224243_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(_224521_c), ._field_constant=_224521_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ac09b31d:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_params=jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>::make({jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be464d56_builtin_caller_common_mut), }), 1)}), ._field_mutable=_224243_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_224243_d.get()._field_kind, ._field_expr=jule::Any(_224243_d.get()._field_model), ._field_token=_224257_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ac09b20d:;
			{
				_1be3ab363_push_err(&(*_self_), _224257_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_224243_d.get()._field_kind.ptr())),jule::Any(_224257_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac09b153:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c0b80_eval_map_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _228741_d, jule::Ptr<_20201c3d1_Token> _228755_ident) {
	jule::Ptr<_1be3de5a5_Map> _228817_map_kind = _1be3d80a4_map(_228741_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _228755_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac0a1763:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_228741_d.get()._field_kind, ._field_expr=jule::Any(_228741_d.get()._field_model), ._field_token=_228755_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1ac0a17c9:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be464d56_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228741_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_228741_d.get()._field_kind, ._field_expr=jule::Any(_228741_d.get()._field_model), ._field_token=_228755_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1ac0a1840:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_result=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=_228817_map_kind.get()._field_key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be464d56_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228741_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_228741_d.get()._field_kind, ._field_expr=jule::Any(_228741_d.get()._field_model), ._field_token=_228755_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1ac0a2577:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_result=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=_228817_map_kind.get()._field_val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be464d56_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228741_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_228741_d.get()._field_kind, ._field_expr=jule::Any(_228741_d.get()._field_model), ._field_token=_228755_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1ac0a25dd:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_params=jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>::make({jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_228817_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be47c423_builtin_caller_common), }), 1)}), ._field_mutable=_228741_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_228741_d.get()._field_kind, ._field_expr=jule::Any(_228741_d.get()._field_model), ._field_token=_228755_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1ac0a2654:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_params=jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>::make({jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_228817_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be464d56_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228741_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_228741_d.get()._field_kind, ._field_expr=jule::Any(_228741_d.get()._field_model), ._field_token=_228755_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1ac0a1675:;
			{
				_1be3ab363_push_err(&(*_self_), _228755_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1be3de918_to_str(_228817_map_kind.ptr())),jule::Any(_228755_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0a15cb:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c1037_eval_str_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _241041_d, jule::Ptr<_20201c3d1_Token> _241055_ident) {
	jule::Ptr<_1be3d45ab_TypeKind> _241117_str_kind = jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _241055_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac0ab570:;
			{
				jule::Ptr<_1be3a92d9_Data> _241421_sd = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1be3a9b9c_is_const(_241041_d.ptr())) {
					_241421_sd.get()._field_constant=static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1be1b3ca3_read_str(_241041_d.get()._field_constant.ptr()).len())));
					_241421_sd.get()._field_model=jule::Any(_241421_sd.get()._field_constant);
				} else {
					_241421_sd.get()._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_241041_d.get()._field_kind, ._field_expr=jule::Any(_241041_d.get()._field_model), ._field_token=_241055_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _241421_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ac0ab5d6:;
			{
				jule::Ptr<_1be3a92d9_Data> _243021_sd = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1be3a9b9c_is_const(_241041_d.ptr())) {
					_243021_sd.get()._field_constant=static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1be1b3ca3_read_str(_241041_d.get()._field_constant.ptr()).cap())));
					_243021_sd.get()._field_model=jule::Any(_243021_sd.get()._field_constant);
				} else {
					_243021_sd.get()._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_241041_d.get()._field_kind, ._field_expr=jule::Any(_241041_d.get()._field_model), ._field_token=_241055_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _243021_sd;
			}
		}
		else {
			_case_begin_1ac0ab509:;
			{
				_1be3ab363_push_err(&(*_self_), _241055_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_241117_str_kind.ptr())),jule::Any(_241055_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0ab460:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c1345_eval_int_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _245139_ident) {
	;
	{
		auto &_match_expr{ _245139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0b2c91:;
			{
				jule::Ptr<_1be159e14_Const> _245621_c = static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1be252490_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=jule::Any(_245621_c), ._field_constant=_245621_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0b2d07:;
			{
				jule::Ptr<_1be159e14_Const> _246321_c = static__1be1b2532_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1be2521a4_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=jule::Any(_246321_c), ._field_constant=_246321_c});
			}
		}
		else {
			_case_begin_1ac0b2be7:;
			{
				_1be3ab363_push_err(&(*_self_), _245139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_245139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0b2a4e:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c1653_eval_uint_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _247540_ident) {
	;
	{
		auto &_match_expr{ _247540_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0b6a64:;
			{
				jule::Ptr<_1be159e14_Const> _248021_c = static__1be1b2664_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1be252490_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("uint", 4)), 6)}), ._field_model=jule::Any(_248021_c), ._field_constant=_248021_c});
			}
		}
		else {
			_case_begin_1ac0b69ed:;
			{
				_1be3ab363_push_err(&(*_self_), _247540_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_247540_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0b6943:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c1961_eval_i8_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _249238_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249238_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0ba749:;
			{
				jule::Ptr<_1be159e14_Const> _249921_c = static__1be1b2532_new_i64(127LL);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=jule::Any(_249921_c), ._field_constant=_249921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0b9c65:;
			{
				jule::Ptr<_1be159e14_Const> _250621_c = static__1be1b2532_new_i64(-128LL);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=jule::Any(_250621_c), ._field_constant=_250621_c});
			}
		}
		else {
			_case_begin_1ac0b9baa:;
			{
				_1be3ab363_push_err(&(*_self_), _249238_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_249238_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0b9b55:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c1c6e_eval_i16_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _251839_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0be808:;
			{
				jule::Ptr<_1be159e14_Const> _252521_c = static__1be1b2532_new_i64(32767LL);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=jule::Any(_252521_c), ._field_constant=_252521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0bdd24:;
			{
				jule::Ptr<_1be159e14_Const> _253221_c = static__1be1b2532_new_i64(-32768LL);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=jule::Any(_253221_c), ._field_constant=_253221_c});
			}
		}
		else {
			_case_begin_1ac0bdc69:;
			{
				_1be3ab363_push_err(&(*_self_), _251839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_251839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0bdc14:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c207c_eval_i32_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _254439_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _254439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0c38b7:;
			{
				jule::Ptr<_1be159e14_Const> _255121_c = static__1be1b2532_new_i64(2147483647LL);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=jule::Any(_255121_c), ._field_constant=_255121_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0c2dd3:;
			{
				jule::Ptr<_1be159e14_Const> _255821_c = static__1be1b2532_new_i64(-2147483648LL);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=jule::Any(_255821_c), ._field_constant=_255821_c});
			}
		}
		else {
			_case_begin_1ac0c2d28:;
			{
				_1be3ab363_push_err(&(*_self_), _254439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_254439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0c2cc3:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c238a_eval_i64_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _257039_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _257039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0c7976:;
			{
				jule::Ptr<_1be159e14_Const> _257721_c = static__1be1b2532_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=jule::Any(_257721_c), ._field_constant=_257721_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0c6e92:;
			{
				jule::Ptr<_1be159e14_Const> _258421_c = static__1be1b2532_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=jule::Any(_258421_c), ._field_constant=_258421_c});
			}
		}
		else {
			_case_begin_1ac0c6dd7:;
			{
				_1be3ab363_push_err(&(*_self_), _257039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_257039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0c6d82:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c2698_eval_u8_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _259638_ident) {
	;
	;
	{
		auto &_match_expr{ _259638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0cb4d5:;
			{
				jule::Ptr<_1be159e14_Const> _260221_c = static__1be1b2664_new_u64(255LLU);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u8", 2)), 6)}), ._field_model=jule::Any(_260221_c), ._field_constant=_260221_c});
			}
		}
		else {
			_case_begin_1ac0ca292:;
			{
				_1be3ab363_push_err(&(*_self_), _259638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_259638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0ca979:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c29a6_eval_u16_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _261439_ident) {
	;
	;
	{
		auto &_match_expr{ _261439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0ce120:;
			{
				jule::Ptr<_1be159e14_Const> _262021_c = static__1be1b2664_new_u64(65535LLU);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u16", 3)), 6)}), ._field_model=jule::Any(_262021_c), ._field_constant=_262021_c});
			}
		}
		else {
			_case_begin_1ac0ccdcc:;
			{
				_1be3ab363_push_err(&(*_self_), _261439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_261439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0cd5b4:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c2cb4_eval_u32_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _263239_ident) {
	;
	;
	{
		auto &_match_expr{ _263239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0d1c5a:;
			{
				jule::Ptr<_1be159e14_Const> _263821_c = static__1be1b2664_new_u64(4294967295LLU);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u32", 3)), 6)}), ._field_model=jule::Any(_263821_c), ._field_constant=_263821_c});
			}
		}
		else {
			_case_begin_1ac0d0a17:;
			{
				_1be3ab363_push_err(&(*_self_), _263239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_263239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0d11ee:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c30c2_eval_u64_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _265039_ident) {
	;
	;
	{
		auto &_match_expr{ _265039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0d4895:;
			{
				jule::Ptr<_1be159e14_Const> _265621_c = static__1be1b2664_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u64", 3)), 6)}), ._field_model=jule::Any(_265621_c), ._field_constant=_265621_c});
			}
		}
		else {
			_case_begin_1ac0d3652:;
			{
				_1be3ab363_push_err(&(*_self_), _265039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_265039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0d3d39:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c33d0_eval_f32_type_tatic(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _266838_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _266838_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0d739d:;
			{
				jule::Ptr<_1be159e14_Const> _267621_c = static__1be1b2c6e_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=jule::Any(_267621_c), ._field_constant=_267621_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0d7414:;
			{
				jule::Ptr<_1be159e14_Const> _268321_c = static__1be1b2c6e_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=jule::Any(_268321_c), ._field_constant=_268321_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ac0d747a:;
			{
				jule::Ptr<_1be159e14_Const> _269021_c = static__1be1b2c6e_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=jule::Any(_269021_c), ._field_constant=_269021_c});
			}
		}
		else {
			_case_begin_1ac0d729e:;
			{
				_1be3ab363_push_err(&(*_self_), _266838_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_266838_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0d7238:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c36dd_eval_f64_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_20201c3d1_Token> _270239_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _270239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac0dc837:;
			{
				jule::Ptr<_1be159e14_Const> _271021_c = static__1be1b2c6e_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=jule::Any(_271021_c), ._field_constant=_271021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac0dc89d:;
			{
				jule::Ptr<_1be159e14_Const> _271721_c = static__1be1b2c6e_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=jule::Any(_271721_c), ._field_constant=_271721_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ac0dc914:;
			{
				jule::Ptr<_1be159e14_Const> _272421_c = static__1be1b2c6e_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=jule::Any(_272421_c), ._field_constant=_272421_c});
			}
		}
		else {
			_case_begin_1ac0dc738:;
			{
				_1be3ab363_push_err(&(*_self_), _270239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_270239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0dc6c2:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c3a95_eval_prim_static(_1be3aad57_Eval* _self_, jule::Str _273635_kind, jule::Ptr<_20201c3d1_Token> _273646_ident) {
	{
		auto &_match_expr{ _273635_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac0e1dbe:;
			{
				return _1be3c1345_eval_int_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac0e1e35:;
			{
				return _1be3c1653_eval_uint_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac0e2870:;
			{
				return _1be3c1961_eval_i8_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac0e28d6:;
			{
				return _1be3c1c6e_eval_i16_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac0e294c:;
			{
				return _1be3c207c_eval_i32_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac0e29b3:;
			{
				return _1be3c238a_eval_i64_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac0e2a29:;
			{
				return _1be3c2698_eval_u8_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac0e2a90:;
			{
				return _1be3c29a6_eval_u16_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac0e2b39:;
			{
				return _1be3c2cb4_eval_u32_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac0e2ba0:;
			{
				return _1be3c30c2_eval_u64_type_static(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac0e2c16:;
			{
				return _1be3c33d0_eval_f32_type_tatic(&(*_self_), _273646_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac0e2c7c:;
			{
				return _1be3c36dd_eval_f64_type_static(&(*_self_), _273646_ident);
			}
		}
		else {
			_case_begin_1ac0e1bb0:;
			{
				_1be3ab363_push_err(&(*_self_), _273646_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_273635_kind),jule::Any(_273646_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac0e1374:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c3e4c_eval_type_static(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _276839_d, jule::Ptr<_1d709806a_SubIdentExpr> _276853_si) {
	{
		
		if ((_1be3d6679_prim(_276839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0e7941:;
			{
				return _1be3c3a95_eval_prim_static(&(*_self_), _1be3d93e6_to_str(_1be3d6679_prim(_276839_d.get()._field_kind.ptr()).ptr()),_276853_si.get()._field_ident);
			}
		}
		else if ((_1be3d6db6_enm(_276839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0e79a7:;
			{
				return _1be3bddae_eval_enum_static(&(*_self_), _1be3d6db6_enm(_276839_d.get()._field_kind.ptr()),_276853_si.get()._field_ident);
			}
		}
		else if ((_1be3d712a_tenm(_276839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0e7a1d:;
			{
				return _1be3be266_eval_type_enum_static(&(*_self_), _1be3d712a_tenm(_276839_d.get()._field_kind.ptr()),_276853_si.get()._field_ident);
			}
		}
		else if ((_1be3d7acb_strct(_276839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0e7a84:;
			{
				return _1be3be61d_eval_struct_static(&(*_self_), _1be3d7acb_strct(_276839_d.get()._field_kind.ptr()),_276853_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1ac0e78ca:;
			{
				_1be3ab363_push_err(&(*_self_), _276853_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_276839_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac0e7820:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c4304_eval_obj_sub_ident(_1be3aad57_Eval* _self_, jule::Ptr<_1be3a92d9_Data> _278441_d, jule::Ptr<_1d709806a_SubIdentExpr> _278455_si) {
	if (_20201eb75_is_ignore_ident(_278455_si.get()._field_ident.get()._field_kind)) {
		_1be3ab363_push_err(&(*_self_), _278455_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _279017_kind = _278441_d.get()._field_kind;;
	{
		
		if ((_1be3d6b52_ptr(_278441_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0edd10:;
			{
				jule::Ptr<_1be3e0b06_Ptr> _279317_ptr = _1be3d6b52_ptr(_278441_d.get()._field_kind.ptr());;
				if (_1be3e15c9_is_unsafe(_279317_ptr.ptr())) {
					goto _match_end_1ac0edbbc;
				};
				if (((!(_278455_si.get()._field_is_self)) && (!(_1be3abc9d_is_unsafe(&(*_self_)))))) {
					_1be3ab363_push_err(&(*_self_), _278455_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_279017_kind=_1be3d6b52_ptr(_278441_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1be3d68dd_sptr(_278441_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0edd76:;
			{
				_279017_kind=_1be3d68dd_sptr(_278441_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1ac0edbbc:;
	};
	{
		
		if ((_1be3d7d40_trt(_278441_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac101928:;
			{
				return _1be3bea6e_eval_trait_sub_ident(&(*_self_), _278441_d,_1be3d7d40_trt(_278441_d.get()._field_kind.ptr()),_278455_si.get()._field_ident);
			}
		}
		else if ((_1be3d7acb_strct(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac1019a0:;
			{
				jule::Ptr<_1d70ab9c9_StructIns> _280917_s = _1be3d7acb_strct(_279017_kind.ptr());;
				if (_1be3d07b6_is_instanced_struct(_280917_s)) {
					jule::Bool _281125_used_reference_elem = (_1be3d68dd_sptr(_278441_d.get()._field_kind.ptr()) != nullptr);;
					return _1be3c0069_eval_struct_sub_ident(&(*_self_), _278441_d,_1be3d7acb_strct(_279017_kind.ptr()),_278455_si,_281125_used_reference_elem);
				};
			}
		}
		else if ((_1be3d7603_slc(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac101a27:;
			{
				return _1be3c0421_eval_slice_sub_ident(&(*_self_), _278441_d,_278455_si.get()._field_ident);
			}
		}
		else if ((_1be3d738e_arr(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac101a9e:;
			{
				return _1be3c07c8_eval_array_sub_ident(&(*_self_), _278441_d,_278455_si.get()._field_ident);
			}
		}
		else if ((_1be3d80a4_map(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac102110:;
			{
				return _1be3c0b80_eval_map_sub_ident(&(*_self_), _278441_d,_278455_si.get()._field_ident);
			}
		}
		else if ((_1be3d6679_prim(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac102187:;
			{
				jule::Ptr<_1be3d9083_Prim> _282117_p = _1be3d6679_prim(_279017_kind.ptr());;
				{
					auto &_match_expr{ _282117_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1ac10805b:;
						{
							return _1be3c1037_eval_str_sub_ident(&(*_self_), _278441_d,_278455_si.get()._field_ident);
						}
					}
					_match_end_1ac107da2:;
				};
			}
		}
		_match_end_1ac101829:;
	};
	_1be3ab363_push_err(&(*_self_), _278455_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_278441_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c4612_eval_sub_ident(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709806a_SubIdentExpr> _283138_si) {
	jule::Ptr<_1be3d45ab_TypeKind> _283217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_283217_prefix;
	});;
	jule::Ptr<_1be3a92d9_Data> _283617_d = _1be3c5a0e_eval_expr_kind(_self_, _283138_si.get()._field_expr.get()._field_kind);;
	if ((_283617_d == nullptr)) {
		return nullptr;
	};
	if (_283617_d.get()._field_decl) {
		return _1be3c3e4c_eval_type_static(_self_.ptr(), _283617_d,_283138_si);
	};
	return _1be3c4304_eval_obj_sub_ident(_self_.ptr(), _283617_d,_283138_si);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c4920_eval_tuple(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d70953db_TupleExpr> _284834_tup) {
	jule::Ptr<_1be3dd9e4_Tuple> _284917_tup_t = jule::new_ptr<_1be3dd9e4_Tuple>(_1be3dd9e4_Tuple{});;
	_284917_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>::alloc(0LL,_284834_tup.get()._field_expr.len());
	jule::Ptr<_1bc9c6c8d_TupleExprModel> _285217_model = jule::new_ptr<_1bc9c6c8d_TupleExprModel>(_1bc9c6c8d_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1be3a92d9_Data>>::alloc(0LL,_284834_tup.get()._field_expr.len())});;
	jule::Bool _285617_ok = true;;
	{
		auto &expr = _284834_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1ac10d79d:;
		if (it != expr.end()) {
			jule::Ptr<_1d709475e_Expr> _285721_expr = *it;
			{
				jule::Ptr<_1be3a92d9_Data> _285821_d = _1be3c5a0e_eval_expr_kind(_self_, _285721_expr.get()._field_kind);;
				if ((_285821_d == nullptr)) {
					_285617_ok=false;
					goto _iter_next_1ac10d79d;
				};
				_284917_tup_t.get()._field_types = jule::alloc_for_append(_284917_tup_t.get()._field_types,1);_284917_tup_t.get()._field_types.__push(_285821_d.get()._field_kind);;
				_285217_model.get()._field_datas = jule::alloc_for_append(_285217_model.get()._field_datas,1);_285217_model.get()._field_datas.__push(_285821_d);;
			}
			_iter_next_1ac10d79d:;
			++it;
			goto _iter_begin_1ac10d79d;
		}
		_iter_end_1ac10d79d:;
	};
	if ((!(_285617_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_284917_tup_t, 9)}), ._field_model=jule::Any(_285217_model), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c4cc7_eval_map(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1be3de5a5_Map> _287732_m, jule::Ptr<_1d709a248_BraceLit> _287745_lit) {
	jule::Ptr<_1bc9c5a06_MapExprModel> _287817_model = jule::new_ptr<_1bc9c5a06_MapExprModel>(_1bc9c5a06_MapExprModel{._field_key_kind=_287732_m.get()._field_key, ._field_val_kind=_287732_m.get()._field_val, });;
	{
		auto &expr = _287745_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac111bd0:;
		if (it != expr.end()) {
			jule::Ptr<_1d709475e_Expr> _288321_expr = *it;
			{
				{
					auto &_match_expr{ _288321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d709ac60_KeyValPair>>()) {
						_case_begin_1ac112719:;
						{
							goto _match_end_1ac1124e9;
						}
					}
					else {
						_case_begin_1ac112670:;
						{
							_1be3ab363_push_err(_self_.ptr(), _287745_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1ac1124e9:;
				};
				jule::Ptr<_1d709ac60_KeyValPair> _289321_pair = _288321_expr.get()._field_kind.operator jule::Ptr<_1d709ac60_KeyValPair>();;
				jule::Ptr<_1be3a92d9_Data> _289521_key = _1be3c5a0e_eval_expr_kind(_self_, _289321_pair.get()._field_key.get()._field_kind);;
				if ((_289521_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1be3a92d9_Data> _290021_val = _1be3c5a0e_eval_expr_kind(_self_, _289321_pair.get()._field_val.get()._field_kind);;
				if ((_290021_val == nullptr)) {
					return nullptr;
				};
				_1be3512c5_check_assign_type(_self_.get()._field_s, false,_287732_m.get()._field_key,_289521_key,_289321_pair.get()._field_colon);
				_1be3512c5_check_assign_type(_self_.get()._field_s, false,_287732_m.get()._field_val,_290021_val,_289321_pair.get()._field_colon);
				_287817_model.get()._field_entries = jule::alloc_for_append(_287817_model.get()._field_entries,1);_287817_model.get()._field_entries.__push(jule::new_ptr<_1bc9c5819_KeyValPairExprModel>(_1bc9c5819_KeyValPairExprModel{._field_key=jule::Any(_289521_key.get()._field_model), ._field_val=jule::Any(_290021_val.get()._field_model)}));;
			}
			_iter_next_1ac111bd0:;
			++it;
			goto _iter_begin_1ac111bd0;
		}
		_iter_end_1ac111bd0:;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_287732_m, 10)}), ._field_mutable=true, ._field_model=jule::Any(_287817_model), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c50d5_eval_brace_lit(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709a248_BraceLit> _292138_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ac11780c:;
			{
				_1be3ab363_push_err(_self_.ptr(), _292138_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1be3d80a4_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac117873:;
			{
				return _1be3c4cc7_eval_map(_self_, _1be3d80a4_map(_self_.get()._field_prefix.ptr()),_292138_lit);
			}
		}
		else if ((_1be3d7acb_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac1178d9:;
			{
				return _1be3bba5a_eval_struct_lit_explicit(_self_, _1be3d7acb_strct(_self_.get()._field_prefix.ptr()),_292138_lit.get()._field_exprs,_292138_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1ac117752:;
			{
				_1be3ab363_push_err(_self_.ptr(), _292138_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac117697:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c53e3_eval_anon_fn(_1be3aad57_Eval* _self_, jule::Ptr<_1d70a1c66_FnDecl> _293635_decl) {
	_1be3e2795_TypeChecker _293717_tc = _1be3e2795_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup, };;
	jule::Ptr<_1bc9c9c4c_FnIns> _294117_ins = _1be3e90d7_build_fn(&_293717_tc, _293635_decl);;
	_294117_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
			_case_begin_1ac119710:;
			{
				jule::Ptr<_1be25aee3_ScopeChecker> _294621_sc = (*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>();;
				jule::Ptr<_1be25aee3_ScopeChecker> _294721_scc = _1be26b586_new_child_checker(_294621_sc);;
				_294721_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1be25a410_ScopeLabel>>>(nullptr);
				_294721_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1be25a5ec_ScopeGoto>>>(nullptr);
				_294721_scc.get()._field_owner=nullptr;
				_294721_scc.get()._field_child_index=0LL;
				_294721_scc.get()._field_it=0LLU;
				_294721_scc.get()._field_cse=0LLU;
				_294721_scc.get()._field_owner=_294117_ins;
				_1be35db0c_check_fn_ins_sc((*_self_)._field_s.ptr(), _294117_ins,_294721_scc);
			}
		}
		else {
			_case_begin_1ac11c45a:;
			{
				_1be35e1a1_check_fn_ins((*_self_)._field_s, _294117_ins);
			}
		}
		_match_end_1ac11c405:;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_294117_ins, 1)}), ._field_model=jule::Any(jule::new_ptr<_1bc9c562c_AnonFnExprModel>(_1bc9c562c_AnonFnExprModel{._field_func=_294117_ins, ._field_global=_1be3ac012_is_global(&(*_self_))})), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c5701_eval_binop(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d70984dd_BinopExpr> _296934_op) {
	_1be3c833b_BinaryEval _297017_bs = static__1be3c8902_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1be3d9083_Prim> _297417_prim = _1be3d6679_prim(_self_.get()._field_prefix.ptr());;
		if (((_297417_prim == nullptr) || (!(_1be257e35_is_num(_1be3d93e6_to_str(_297417_prim.ptr())))))) {
			jule::Ptr<_1be3d45ab_TypeKind> _297625_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_297625_prefix;
			});;
			return _1be3cdc48_eval(&_297017_bs, _296934_op);
		};
	};
	return _1be3cdc48_eval(&_297017_bs, _296934_op);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c5a0e_eval_expr_kind(jule::Ptr<_1be3aad57_Eval> _self_, jule::Any _298638_kind) {
	jule::Ptr<_1be3a92d9_Data> _298717_d = nullptr;;
	{
		auto &_match_expr{ _298638_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7094a4a_RangeExpr>>()) {
			_case_begin_1ac124e13:;
			{
				jule::Ptr<_1d7094a4a_RangeExpr> _299021_e = _298638_kind.operator jule::Ptr<_1d7094a4a_RangeExpr>();;
				_298717_d=_1be3c5a0e_eval_expr_kind(_self_, _299021_e.get()._field_expr.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7095793_LitExpr>>()) {
			_case_begin_1ac124e79:;
			{
				_298717_d=_1be3adbb2_eval_lit(_self_.ptr(), _298638_kind.operator jule::Ptr<_1d7095793_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
			_case_begin_1ac124ee0:;
			{
				_298717_d=_1be3b31a0_eval_ident(_self_.ptr(), _298638_kind.operator jule::Ptr<_1d70967c7_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7096ed1_UnaryExpr>>()) {
			_case_begin_1ac125056:;
			{
				_298717_d=_1be3b34ad_eval_unary(_self_, _298638_kind.operator jule::Ptr<_1d7096ed1_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7097388_VariadicExpr>>()) {
			_case_begin_1ac1250bc:;
			{
				_298717_d=_1be3b37bb_eval_variadic(_self_, _298638_kind.operator jule::Ptr<_1d7097388_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7095e9c_UnsafeExpr>>()) {
			_case_begin_1ac125133:;
			{
				_298717_d=_1be3b3ac9_eval_unsafe(_self_, _298638_kind.operator jule::Ptr<_1d7095e9c_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709b1d3_SliceExpr>>()) {
			_case_begin_1ac1251aa:;
			{
				_298717_d=_1be3b459c_eval_slice_expr(_self_, _298638_kind.operator jule::Ptr<_1d709b1d3_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709ba74_IndexingExpr>>()) {
			_case_begin_1ac125232:;
			{
				_298717_d=_1be3b7209_eval_indexing(_self_, _298638_kind.operator jule::Ptr<_1d709ba74_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709c17e_SlicingExpr>>()) {
			_case_begin_1ac1252a9:;
			{
				_298717_d=_1be3b83c5_eval_slicing(_self_, _298638_kind.operator jule::Ptr<_1d709c17e_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7097740_CastExpr>>()) {
			_case_begin_1ac125331:;
			{
				_298717_d=_1be3bb2c9_eval_cast(_self_, _298638_kind.operator jule::Ptr<_1d7097740_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7097ae7_NsSelectionExpr>>()) {
			_case_begin_1ac1253a8:;
			{
				_298717_d=_1be3bb5d7_eval_ns_selection(_self_.ptr(), _298638_kind.operator jule::Ptr<_1d7097ae7_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7099cc5_StructLit>>()) {
			_case_begin_1ac125430:;
			{
				_298717_d=_1be3bbd79_eval_struct_lit(_self_, _298638_kind.operator jule::Ptr<_1d7099cc5_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709023d_TypeDecl>>()) {
			_case_begin_1ac1254a7:;
			{
				_298717_d=_1be3bc187_eval_type(_self_.ptr(), _298638_kind.operator jule::Ptr<_1d709023d_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7098ae8_FnCallExpr>>()) {
			_case_begin_1ac12552e:;
			{
				_298717_d=_1be3bda07_eval_fn_call(_self_, _298638_kind.operator jule::Ptr<_1d7098ae8_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709806a_SubIdentExpr>>()) {
			_case_begin_1ac1255a6:;
			{
				_298717_d=_1be3c4612_eval_sub_ident(_self_, _298638_kind.operator jule::Ptr<_1d709806a_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70953db_TupleExpr>>()) {
			_case_begin_1ac12562d:;
			{
				_298717_d=_1be3c4920_eval_tuple(_self_, _298638_kind.operator jule::Ptr<_1d70953db_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709a248_BraceLit>>()) {
			_case_begin_1ac1256a5:;
			{
				_298717_d=_1be3c50d5_eval_brace_lit(_self_, _298638_kind.operator jule::Ptr<_1d709a248_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a1c66_FnDecl>>()) {
			_case_begin_1ac12572c:;
			{
				_298717_d=_1be3c53e3_eval_anon_fn(_self_.ptr(), _298638_kind.operator jule::Ptr<_1d70a1c66_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70984dd_BinopExpr>>()) {
			_case_begin_1ac1257a4:;
			{
				_298717_d=_1be3c5701_eval_binop(_self_, _298638_kind.operator jule::Ptr<_1d70984dd_BinopExpr>());
			}
		}
		_match_end_1ac124c15:;
	};
	return _298717_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c5d1c_eval(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709475e_Expr> _303428_expr) {
	jule::Ptr<_1be3a92d9_Data> _303517_d = _1be3c5a0e_eval_expr_kind(_self_, _303428_expr.get()._field_kind);;
	if (((_303517_d == nullptr) || (_303517_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1be3d7867_fnc(_303517_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac131859:;
			{
				jule::Ptr<_1bc9c9c4c_FnIns> _304221_f = _1be3d7867_fnc(_303517_d.get()._field_kind.ptr());;
				if (_1d707b559_is_builtin(_304221_f.ptr())) {
					goto _match_end_1ac131705;
				};
				if ((_304221_f.get()._field_generics.len() != _304221_f.get()._field_decl.get()._field_generics.len())) {
					_1be34aec3_push_err(_self_.get()._field_s.ptr(), _303428_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1d70615d8_is_method(_304221_f.get()._field_decl.ptr())) {
					_1be34aec3_push_err(_self_.get()._field_s.ptr(), _303428_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ac131705:;
	};
	return _303517_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c612a_eval_expr(jule::Ptr<_1be3aad57_Eval> _self_, jule::Ptr<_1d709475e_Expr> _306033_expr) {
	jule::Ptr<_1be3a92d9_Data> _306117_d = _1be3c5d1c_eval(_self_, _306033_expr);;
	{
		
		if ((_306117_d == nullptr)) {
			_case_begin_1ac135495:;
			{
				return nullptr;
			}
		}
		else if (_306117_d.get()._field_decl) {
			_case_begin_1ac13551c:;
			{
				_1be3ab363_push_err(_self_.ptr(), _306033_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1ac13540c:;
			{
				return _306117_d;
			}
		}
		_match_end_1ac135396:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be3aad57_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1be3c659d_UnaryEval static__1be3c6a54_new(jule::Ptr<_1be3aad57_Eval> _308123_e) {
	return _1be3c659d_UnaryEval{._field_e=_308123_e, };
}



inline void _1be3c6c30_minus(_1be3c659d_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ac137222:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac137662:;
			{
				if ((!(_1be257e35_is_num(_1be3d4963_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1be3d7acb_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac1376c8:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac136d6a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac136023:;
	};
	if (_1be3a9b9c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1be1b63b0_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac13a90c:;
				{
					_1be1b54be_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1be1b4017_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1be1b590e_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac13a984:;
				{
					_1be1b49c9_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1be1b3566_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1be1b5b73_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac13aa0b:;
				{
					_1be1b49c9_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1be1b427b_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ac13a7ca:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1be3c6e0b_plus(_1be3c659d_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ac1400c6:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac140516:;
			{
				if ((!(_1be257e35_is_num(_1be3d4963_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1be3d7acb_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac14057c:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac13ec1e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac13eb42:;
	};
	if (_1be3a9b9c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1be1b63b0_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac1437b1:;
				{
					_1be1b54be_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1be1b4017_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1be1b590e_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac143838:;
				{
					_1be1b49c9_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1be1b3566_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1be1b5b73_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac1438b0:;
				{
					_1be1b49c9_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1be1b427b_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ac14367e:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1be3c70d7_caret(_1be3c659d_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ac147e7a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac1483ba:;
			{
				if ((!(_1be25786e_is_int(_1be3d4963_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1be3d7acb_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac148431:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac147ac3:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac1479e6:;
	};
	if (_1be3a9b9c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1be1b590e_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac14b654:;
				{
					_1be1b49c9_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1be1b3566_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1be1b5b73_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac14b6cb:;
				{
					_1be1b4c4e_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1be1b37ca_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ac14b533:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1be3c72b3_excl(_1be3c659d_UnaryEval* _self_) {
	jule::Ptr<_1be3d9083_Prim> _320013_t = _1be3d6679_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_320013_t == nullptr) || (!(_1be3dbccd_is_bool(_320013_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1be3a9b9c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1be1b5dd7_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac15114d:;
				{
					_1be1b4ec4_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1be1b3a3e_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1ac15103d:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1be3c748e_star(_1be3c659d_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1be3d6b52_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac1540c9:;
			{
				if ((!(_1be3abc9d_is_unsafe((*_self_)._field_e.ptr())))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1be3e0b06_Ptr> _323221_t = _1be3d6b52_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1be3e15c9_is_unsafe(_323221_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_323221_t.get()._field_elem;
			}
		}
		else if ((_1be3d68dd_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac15452a:;
			{
				(*_self_)._field_d.get()._field_kind=_1be3d68dd_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1ac153c33:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac153bbc:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1be3c766a_amper(_1be3c659d_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c49a0_StructLitExprModel>>()) {
			_case_begin_1ac158254:;
			{
				jule::Ptr<_1bc9c49a0_StructLitExprModel> _325221_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1bc9c49a0_StructLitExprModel>();;
				_1be3ce9d5_make_struct_lit_alloc((*_self_)._field_d,_325221_lit);
			}
		}
		else {
			_case_begin_1ac1585b7:;
			{
				{
					
					if (_1be3eb260_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1ac159200:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3e0b06_Ptr>(_1be3e0b06_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 12)});
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1ac158b5b:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1ac158a7e:;
				};
			}
		}
		_match_end_1ac158540:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1be3c7846_type_decl(_1be3c659d_UnaryEval* _self_) {
	_1be3e2795_TypeChecker _327617_tc = _1be3e2795_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac15ea74:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3e7976_build_ptr_from_type(&_327617_tc, (*_self_)._field_d.get()._field_kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ac15eada:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3e735a_build_sptr_from_type(&_327617_tc, (*_self_)._field_d.get()._field_kind), 7)});
			}
		}
		else {
			_case_begin_1ac15d259:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac15d204:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1be3c7a22_eval_data(_1be3c659d_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ac15d2c0:;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _329821_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1be3c5a0e_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
				(*_self_)._field_e.get()._field_prefix=_329821_prefix;
			}
		}
		else {
			_case_begin_1ac161b86:;
			{
				(*_self_)._field_d=_1be3c5a0e_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
			}
		}
		_match_end_1ac161acb:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c7cec_eval(_1be3c659d_UnaryEval* _self_, jule::Ptr<_1d7096ed1_UnaryExpr> _330727_u) {
	(*_self_)._field_u=_330727_u;
	_1be3c7a22_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1be3c7846_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _331813_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a9486200:;
			{
				_1be3c6c30_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a948e01b:;
			{
				_1be3c6e0b_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a949d58b:;
			{
				_1be3c70d7_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a94a27d2:;
			{
				_1be3c72b3_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a94ad47a:;
			{
				_1be3c748e_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a94c08cc:;
			{
				_1be3c766a_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1a91eb11e:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1a9202d7e:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a94e8d67:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str(_331813_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1be3a9b9c_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1a92282b1:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1a923a5ae:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3c659d_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1be3c833b_BinaryEval static__1be3c8902_new_plain(jule::Ptr<_1be3aad57_Eval> _335629_e) {
	return _1be3c833b_BinaryEval{._field_e=_335629_e, };
}



inline _1be3c833b_BinaryEval static__1be3c8c43_new(jule::Ptr<_1be3aad57_Eval> _336223_e, jule::Ptr<_20201c3d1_Token> _336237_op) {
	return _1be3c833b_BinaryEval{._field_e=_336223_e, ._field_op=_336237_op};
}



inline jule::Bool _1be3c8ec9_check_type_compatibility(_1be3c833b_BinaryEval* _self_) {
	return _1be351748_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1be3c9282_check_struct_common_operator_compatibility(_1be3c833b_BinaryEval* _self_) {
	jule::Ptr<_1bc9c9c4c_FnIns> _337617_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a94a079c:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_201b244b1:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_201b121c4:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_201b1223a:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_201b122a1:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9237a84:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a9237aea:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9237b61:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a9224224:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a922428a:;
			{
				_337617_overload=_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1a94873cc:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1a9487377:;
	};
	if ((_337617_overload == nullptr)) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1bc9c9a60_ParamIns> _340817_p = _337617_overload.get()._field_params[1LL];;
	return _1be3512c5_check_assign_type((*_self_)._field_e.get()._field_s, _340817_p.get()._field_decl.get()._field_reference,_340817_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c9529_eval_nil(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3d5bc8_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1be3d4963_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a95423dd:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a9542377:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1a9542212:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c978d_eval_enum(_1be3c833b_BinaryEval* _self_) {
	jule::Ptr<_1bc9dceb3_Enum> _343317_enm = _1be3d6db6_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9544841:;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _343721_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1be3d6db6_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_343721_rkind=_1be3d6db6_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1be351748_check_type_compatibility((*_self_)._field_e.get()._field_s, _343317_enm.get()._field_kind.get()._field_kind,_343721_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a9544786:;
	};
	if (((_1be3d6db6_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_343317_enm != _1be3d6db6_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_343317_enm.get()._field_ident),jule::Any(_1be3d4963_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a954911a:;
			{
				if ((!(_1be257e35_is_num(_1be3d4963_to_str(_343317_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343317_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a9549181:;
			{
				if (((_1be3d6679_prim(_343317_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1be25786e_is_int(_1be3d93e6_to_str(_1be3d6679_prim(_343317_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343317_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a95490a4:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343317_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1a9548eb6:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c9a02_eval_type_enum(_1be3c833b_BinaryEval* _self_) {
	jule::Ptr<_1bd9c99a4_TypeEnum> _348417_enm = _1be3d712a_tenm((*_self_)._field_l.get()._field_kind.ptr());;
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a955082a:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a954eede:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1bcc49b37_to_str(_348417_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9550682:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c9c66_eval_sptr(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9552ad5:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a9552a6e:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a95528e8:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3c9eca_eval_ptr(_1be3c833b_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a9554be7:;
			{
				if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a9554c5d:;
			{
				if ((_1be3d6b52_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1be3e15c9_is_unsafe(_1be3d6b52_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1be3d0a91_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a955439a:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9553e7c:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ca23e_eval_arr(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a955b418:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a955b3a2:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a95566aa:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ca4a3_eval_slc(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a955d87c:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a955d816:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a955d690:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ca717_eval_fn(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9560ce1:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a9560c7a:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9560b04:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3ca97b_eval_struct(_1be3c833b_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a956261c:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a9562683:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a95626e9:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9562e03:;
			{
				if ((_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a9562e7a:;
			{
				if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a9562188:;
	};
	if ((!(_1be3c9282_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cabe0_eval_trait(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a956cd86:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a956cd20:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a956cb88:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cae54_eval_any(_1be3c833b_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a956ee98:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a956e64b:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1a956e22d:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cb1b8_eval_bool(_1be3c833b_BinaryEval* _self_) {
	if ((!(_1be3c8ec9_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a9572033:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a9571ebc:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1be3d4963_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a9571d46:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cb42c_eval_str(_1be3c833b_BinaryEval* _self_) {
	jule::Str _372617_rk = _1be3d4963_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_372617_rk != jule::Str("str", 3))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_372617_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a9575498:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a957550e:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1a9574288:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1a95744b9:;
	};
}



inline void _1be3cb608_set_type_to_greater(_1be3c833b_BinaryEval* _self_) {
	if (_1be3a9b9c_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1be3a9b9c_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1be3a9b9c_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1be2562a7_is_greater(_1be3d6679_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1be3cb84a_check_mod_data(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1be3a92d9_Data>& _376938_d) {
	if ((!(_1be3a9b9c_is_const(_376938_d.ptr())))) {
		if (((_1be3d6679_prim(_376938_d.get()._field_kind.ptr()) == nullptr) || (!(_1be25786e_is_int(_1be3d6679_prim(_376938_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1be37bdc2_sig_assignable(jule::Str("i64", 3),_376938_d)) {
			_case_begin_1a957c7e1:;
			{
				_1be1b49c9_set_i64(_376938_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_376938_d.get()._field_constant.ptr())));
			}
		}
		else if (_1be393977_unsig_assignable(jule::Str("u64", 3),_376938_d)) {
			_case_begin_1a957c4c2:;
			{
				_1be1b4c4e_set_u64(_376938_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_376938_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1a957c45b:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a957ab41:;
	};
}



inline void _1be3cba26_mod(_1be3c833b_BinaryEval* _self_) {
	_1be3cb84a_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1be3cb84a_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1be3cbe00_numbers_are_compatibile(_1be3c833b_BinaryEval* _self_, jule::Str& _379139_lk, jule::Str& _379149_rk) {
	if ((!(_1be257e35_is_num(_379149_rk)))) {
		return false;
	};
	if (_1be3a9b9c_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_379139_lk == jule::Str("f32", 3))) {
		if (_1be3a9b9c_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379149_rk == jule::Str("f32", 3));
	};
	if ((_379139_lk == jule::Str("f64", 3))) {
		if (_1be3a9b9c_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379149_rk == jule::Str("f64", 3));
	};
	if (_1be3a9b9c_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_379139_lk == _379149_rk);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cc175_eval_float(_1be3c833b_BinaryEval* _self_) {
	jule::Str _382113_lk = _1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _382213_rk = _1be3d6679_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1be3cbe00_numbers_are_compatibile(&(*_self_), _382113_lk,_382213_rk)))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a9585c06:;
			{
				if (((!(_1be3a9b9c_is_const((*_self_)._field_l.ptr()))) || (!(_1be393aa9_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
					return nullptr;
				};
				if (((!(_1be3a9b9c_is_const((*_self_)._field_r.ptr()))) || (!(_1be393aa9_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
					return nullptr;
				};
				_1be1b49c9_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1be1b4c4e_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1be3d040e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1a9585b18:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a958b349:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a958aea3:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a958ba53:;
			{
				_1be3cb608_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a958bab9:;
			{
				if ((!(_1be25786e_is_int(_382213_rk)))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
					return nullptr;
				};
				_1be3cba26_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1a958be82:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a958bd94:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cc3d9_eval_int(_1be3c833b_BinaryEval* _self_) {
	jule::Str _388513_lk = _1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _388613_rk = _1be3d6679_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a958d824:;
			{
				if (((!(_1be25786e_is_int(_388513_lk))) || (!(_1be25786e_is_int(_388613_rk))))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388513_lk),jule::Any(_388613_rk)}));
					return nullptr;
				};
				if ((!(_1be3d040e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1a959166d:;
	};
	if ((!(_1be3cbe00_numbers_are_compatibile(&(*_self_), _388513_lk,_388613_rk)))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388513_lk),jule::Any(_388613_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a9594d8b:;
			{
				return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1a9594cae:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a95956c7:;
			{
				_1be3cb608_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a959573d:;
			{
				_1be3cba26_mod(&(*_self_));
				_1be3cb608_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a9595b06:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a9595a18:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cc64d_eval_prim(_1be3c833b_BinaryEval* _self_) {
	jule::Ptr<_1be3d9083_Prim> _394413_prim = _1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1be3dbccd_is_bool(_394413_prim.ptr())) {
			_case_begin_1a9599137:;
			{
				return _1be3cb1b8_eval_bool(&(*_self_));
			}
		}
		else if (_1be3dc042_is_str(_394413_prim.ptr())) {
			_case_begin_1a95991ae:;
			{
				return _1be3cb42c_eval_str(&(*_self_));
			}
		}
		_match_end_1a959907c:;
	};
	if ((_1be3d6679_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d93e6_to_str(_394413_prim.ptr())),jule::Any(_1be3d4963_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1be257b8d_is_float(_394413_prim.get()._field_kind)) {
			_case_begin_1a959bc72:;
			{
				return _1be3cc175_eval_float(&(*_self_));
			}
		}
		else if (_1be25786e_is_int(_394413_prim.get()._field_kind)) {
			_case_begin_1a959b5e0:;
			{
				return _1be3cc3d9_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1a959b579:;
			{
				return nullptr;
			}
		}
		_match_end_1a959b37b:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cc8b2_eval_op(_1be3c833b_BinaryEval* _self_) {
	{
		
		if (_1be3d5700_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1a959c02a:;
			{
				_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1be3d6679_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1be3dc2a6_is_any(_1be3d6679_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1a959d58c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a959d306;
			}
		}
		else if (((_1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1be3dc2a6_is_any(_1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1a959d306:;
			{
				return _1be3cae54_eval_any(&(*_self_));
			}
		}
		else if (_1be3d548b_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1a959d36c:;
			{
				return _1be3c9529_eval_nil(&(*_self_));
			}
		}
		else if ((_1be3d6db6_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d3d3:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a959d449;
			}
		}
		else if ((_1be3d6db6_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d449:;
			{
				return _1be3c978d_eval_enum(&(*_self_));
			}
		}
		else if ((_1be3d712a_tenm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d4b0:;
			{
				return _1be3c9a02_eval_type_enum(&(*_self_));
			}
		}
		else if ((_1be3d68dd_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d669:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a959d6d0;
			}
		}
		else if ((_1be3d68dd_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d6d0:;
			{
				return _1be3c9c66_eval_sptr(&(*_self_));
			}
		}
		else if ((_1be3d6b52_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d746:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a959d7ac;
			}
		}
		else if ((_1be3d6b52_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d7ac:;
			{
				return _1be3c9eca_eval_ptr(&(*_self_));
			}
		}
		else if ((_1be3d738e_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d834:;
			{
				return _1be3ca23e_eval_arr(&(*_self_));
			}
		}
		else if ((_1be3d7603_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d8ab:;
			{
				return _1be3ca4a3_eval_slc(&(*_self_));
			}
		}
		else if ((_1be3d7867_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d933:;
			{
				return _1be3ca717_eval_fn(&(*_self_));
			}
		}
		else if ((_1be3d7d40_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959d9aa:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a959da32;
			}
		}
		else if ((_1be3d7d40_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959da32:;
			{
				return _1be3cabe0_eval_trait(&(*_self_));
			}
		}
		else if ((_1be3d7acb_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959daa9:;
			{
				return _1be3ca97b_eval_struct(&(*_self_));
			}
		}
		else if ((_1be3d6679_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a959db31:;
			{
				return _1be3cc64d_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1a959ca53:;
			{
				return nullptr;
			}
		}
		_match_end_1a959cc84:;
	};
}



inline void _1be3ccb37_eval_const(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1be3a92d9_Data>& _401634_d) {
	{
		
		if ((_401634_d == nullptr)) {
			_case_begin_1a95ac03a:;
			{
				return;;
			}
		}
		else if ((!(_1be3a9b9c_is_const((*_self_)._field_l.ptr()))) || (!(_1be3a9b9c_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1a95ac6bc:;
			{
				_401634_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1a95abe19:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a95adc84:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a95adcea:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a95add61:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(_1be1b704d_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a95addc7:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(_1be1b6c40_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a95ade3d:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a95adea4:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a95ae01a:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a95ae081:;
			{
				_401634_d.get()._field_constant=static__1be1b2796_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a95ae0e7:;
			{
				_1be1b83a1_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a95ae15d:;
			{
				_1be1b86ae_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a95ae1c4:;
			{
				_1be1b89bc_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a95ae23a:;
			{
				jule::Bool _405317_ok = _1be1b8cca_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_405317_ok)) && (_1be1b4754_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1be3d9083_Prim> _405821_prim = _1be3d6679_prim(_401634_d.get()._field_kind.ptr());;
				{
					
					if (_1be2572db_is_sig_int(_405821_prim.get()._field_kind)) {
						_case_begin_1a95bb6dc:;
						{
							_1be1b49c9_set_i64(_401634_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_401634_d.get()._field_constant.ptr())));
						}
					}
					else if (_1be2575c7_is_unsig_int(_405821_prim.get()._field_kind)) {
						_case_begin_1a95bb764:;
						{
							_1be1b4c4e_set_u64(_401634_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_401634_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1a95bb632:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a95ae2b2:;
			{
				jule::Bool _406617_ok = _1be1b90d8_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_406617_ok)) && (_1be1b4754_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a95ae339:;
			{
				_1be1b9704_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a95ae3b1:;
			{
				_1be1b93e6_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a95ae438:;
			{
				_1be1b9a12_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a95ae4b0:;
			{
				_1be1b9d20_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a95ae537:;
			{
				_1be1ba12d_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1a95ad503:;
	};
	_1be3d182d_apply_cast_model_by_enum(_401634_d,_1be3d6db6_enm(_401634_d.get()._field_kind.ptr()));
	jule::Ptr<_1be3d9083_Prim> _409017_prim = _1be3d6679_prim(_401634_d.get()._field_kind.ptr());;
	if (((_409017_prim == nullptr) || (!(_1be257e35_is_num(_1be3d93e6_to_str(_409017_prim.ptr())))))) {
		_401634_d.get()._field_model=jule::Any(_401634_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_401634_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_409017_prim=_1be3d6679_prim(_401634_d.get()._field_kind.ptr());
		};
	};
	_1be3ce6d8_fit_bitsize(_401634_d);
	_1be3d1ae7_cast_const_by_type(_409017_prim.get()._field_kind,_401634_d);
}



inline void _1be3ccdac_check_data(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1be3a92d9_Data>& _410634_d) {
	jule::Ptr<_1bc9c9c4c_FnIns> _410713_f = _1be3d7867_fnc(_410634_d.get()._field_kind.ptr());;
	if ((((_410713_f != nullptr) && (_410713_f.get()._field_decl != nullptr)) && _1d70615d8_is_method(_410713_f.get()._field_decl.ptr()))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1be3cd088_check_datas(_1be3c833b_BinaryEval* _self_) {
	_1be3ccdac_check_data(&(*_self_), (*_self_)._field_l);
	_1be3ccdac_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1be3cd30d_set_model(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1be3a92d9_Data>& _411833_d) {
	if (_1be3a9b9c_is_const(_411833_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1be3a92d9_Data> _412618_l = (*_self_)._field_l;;
	jule::Ptr<_1be3a92d9_Data> _412625_r = (*_self_)._field_r;;
	std::tie(_412618_l,_412625_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1be3a9eaa_good_operand(_412618_l.ptr(), _412625_r)))) {
		std::tie(_412618_l,_412625_r) = std::make_tuple(_412625_r,_412618_l);
	};
	_411833_d.get()._field_model=jule::Any(jule::new_ptr<_1d70abda3_BinopExprModel>(_1d70abda3_BinopExprModel{._field_left=jule::new_ptr<_1d70abbb6_OperandExprModel>(_1d70abbb6_OperandExprModel{._field_kind=_412618_l.get()._field_kind, ._field_model=jule::Any(_412618_l.get()._field_model)}), ._field_right=jule::new_ptr<_1d70abbb6_OperandExprModel>(_1d70abbb6_OperandExprModel{._field_kind=_412625_r.get()._field_kind, ._field_model=jule::Any(_412625_r.get()._field_model)}), ._field_op=(*_self_)._field_op}));
}



inline void _1be3cd583_post_eval(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1be3a92d9_Data>& _414433_d) {
	_414433_d.get()._field_lvalue=false;
	_1be3cd30d_set_model(&(*_self_), _414433_d);
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cd93a_solve_explicit(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1be3a92d9_Data>& _414938_l, jule::Ptr<_1be3a92d9_Data>& _414953_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_414938_l,_414953_r);
	_1be3cd088_check_datas(&(*_self_));
	jule::Ptr<_1be3a92d9_Data> _415417_d = _1be3cc8b2_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_414938_l,_414953_r);
	_1be3ccb37_eval_const(&(*_self_), _415417_d);
	if ((_415417_d != nullptr)) {
		_415417_d.get()._field_mutable=true;
		_1be3cd583_post_eval(&(*_self_), _415417_d);
	};
	return _415417_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3cdc48_eval(_1be3c833b_BinaryEval* _self_, jule::Ptr<_1d70984dd_BinopExpr>& _416928_op) {
	if ((_416928_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1be3ab363_push_err((*_self_)._field_e.ptr(), _416928_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1be3ab682_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _417617_l = _1be3c5a0e_eval_expr_kind((*_self_)._field_e, _416928_op.get()._field_left.get()._field_kind);;
	if (((_417617_l == nullptr) || (_417617_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _418117_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_417617_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_418117_prefix;
	});;
	jule::Ptr<_1be3a92d9_Data> _418417_r = _1be3c5a0e_eval_expr_kind((*_self_)._field_e, _416928_op.get()._field_right.get()._field_kind);;
	if (((_418417_r == nullptr) || (_418417_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_416928_op.get()._field_op;
	jule::Ptr<_1be3a92d9_Data> _419117_d = _1be3cd93a_solve_explicit(&(*_self_), _417617_l,_418417_r);;
	if ((((_419117_d != nullptr) && _417617_l.get()._field_is_rune) && _418417_r.get()._field_is_rune)) {
		_419117_d.get()._field_is_rune=true;
	};
	return _419117_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3c833b_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3d3874_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be3d4963_to_str(_1be3d45ab_TypeKind* _self_) {
	if (_1be3d548b_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _6817_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_6817_kind+=jule::Str("...", 3);
	};
	if (_1be3d5227_cpp_linked(&(*_self_))) {
		_6817_kind+=jule::Str("cpp.", 4);
		_6817_kind+=(*_self_)._field_cpp_ident;
	} else {
		_6817_kind+=_1be3d417c_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1be3d3c2b_to_str((*_self_)._field_kind);
	};
	return _6817_kind;
}



inline jule::Bool _1be3d4c71_equals(jule::Ptr<_1be3d45ab_TypeKind> _self_, jule::Ptr<_1be3d45ab_TypeKind> _8426_other) {
	if (_1be3d548b_is_nil(_self_.ptr())) {
		return _1be3d548b_is_nil(_8426_other.ptr());
	};
	if (_1be3d5227_cpp_linked(_self_.ptr())) {
		return (_1be3d5227_cpp_linked(_8426_other.ptr()) && (_self_.get()._field_cpp_ident == _8426_other.get()._field_cpp_ident));
	};
	return _1be3d417c_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1be3d4039_equals(_self_.get()._field_kind, _8426_other);
}



inline jule::Bool _1be3d5227_cpp_linked(_1be3d45ab_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1be3d548b_is_nil(_1be3d45ab_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1be3d5700_void(_1be3d45ab_TypeKind* _self_) {
	jule::Ptr<_1be3d9083_Prim> _10713_prim = _1be3d6679_prim(&(*_self_));;
	return ((_10713_prim != nullptr) && (_10713_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1be3d5964_mutable(_1be3d45ab_TypeKind* _self_) {
	{
		_1be3d45ab_TypeKind* _11421__self = (&((*_self_)));;
		if ((_1be3d7acb_strct(_11421__self) != nullptr)) {
			return _1be3d7acb_strct(_11421__self).get()._field_mutable;
		};
		if ((_1be3d7d40_trt(_11421__self) != nullptr)) {
			return _1be3d7d40_trt(_11421__self).get()._field_mutable;
		};
		if ((_1be3d6679_prim(_11421__self) != nullptr)) {
			jule::Ptr<_1be3d9083_Prim> _12321_p = _1be3d6679_prim(_11421__self);;
			return _1be3dc2a6_is_any(_12321_p.ptr());
		};
		if ((_1be3d738e_arr(_11421__self) != nullptr)) {
			return _1be3d5964_mutable(_1be3d738e_arr(_11421__self).get()._field_elem.ptr());
		};
		return (((_1be3d7603_slc(_11421__self) != nullptr) || (_1be3d6b52_ptr(_11421__self) != nullptr)) || (_1be3d68dd_sptr(_11421__self) != nullptr));
	};
}



inline jule::Bool _1be3d5bc8_nil_compatible(_1be3d45ab_TypeKind* _self_) {
	{
		_1be3d45ab_TypeKind* _13821__self = (&((*_self_)));;
		jule::Ptr<_1be3d9083_Prim> _14017_prim = _1be3d6679_prim(_13821__self);;
		if (((_14017_prim != nullptr) && _1be3dc2a6_is_any(_14017_prim.ptr()))) {
			return true;
		};
		return (((((((_1be3d548b_is_nil(_13821__self) || (_1be3d7867_fnc(_13821__self) != nullptr)) || (_1be3d68dd_sptr(_13821__self) != nullptr)) || (_1be3d6b52_ptr(_13821__self) != nullptr)) || (_1be3d7d40_trt(_13821__self) != nullptr)) || (_1be3d7603_slc(_13821__self) != nullptr)) || (_1be3d80a4_map(_13821__self) != nullptr)) || (_1be3d712a_tenm(_13821__self) != nullptr));
	};
}



inline jule::Bool _1be3d5e3c_performs_rc(_1be3d45ab_TypeKind* _self_) {
	{
		_1be3d45ab_TypeKind* _15921__self = (&((*_self_)));;
		return (((_1be3d68dd_sptr(_15921__self) != nullptr) || (_1be3d7603_slc(_15921__self) != nullptr)) || (_1be3d7d40_trt(_15921__self) != nullptr));
	};
}



inline jule::Bool _1be3d61a1_supports_cloning(_1be3d45ab_TypeKind* _self_) {
	{
		_1be3d45ab_TypeKind* _16721__self = (&((*_self_)));;
		{
			
			if ((_1be3d6679_prim(_16721__self) != nullptr)) {
				_case_begin_1a960e4ee:;
				{
					return (!(_1be3dc2a6_is_any(_1be3d6679_prim(_16721__self).ptr())));
				}
			}
			else if ((_1be3d6db6_enm(_16721__self) != nullptr)) {
				_case_begin_1a960e565:;
				{
					return true;
				}
			}
			else if ((_1be3d7867_fnc(_16721__self) != nullptr)) {
				_case_begin_1a960e862:;
				{
					return true;
				}
			}
			else if ((_1be3d6b52_ptr(_16721__self) != nullptr)) {
				_case_begin_1a960e8c8:;
				{
					return true;
				}
			}
			else if ((_1be3d7603_slc(_16721__self) != nullptr)) {
				_case_begin_1a960e93e:;
				{
					return _1be3d61a1_supports_cloning(_1be3d7603_slc(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1be3d80a4_map(_16721__self) != nullptr)) {
				_case_begin_1a960e9a5:;
				{
					jule::Ptr<_1be3de5a5_Map> _18021_m = _1be3d80a4_map(_16721__self);;
					return (_1be3d61a1_supports_cloning(_18021_m.get()._field_key.ptr()) && _1be3d61a1_supports_cloning(_18021_m.get()._field_val.ptr()));
				}
			}
			else if ((_1be3d738e_arr(_16721__self) != nullptr)) {
				_case_begin_1a960ea1b:;
				{
					return _1be3d61a1_supports_cloning(_1be3d738e_arr(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1be3d68dd_sptr(_16721__self) != nullptr)) {
				_case_begin_1a960ea82:;
				{
					return _1be3d61a1_supports_cloning(_1be3d68dd_sptr(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1be3d7acb_strct(_16721__self) != nullptr)) {
				_case_begin_1a960eb09:;
				{
					jule::Ptr<_1d70ab9c9_StructIns> _18725_s = _1be3d7acb_strct(_16721__self);;
					return (((_18725_s.get()._field_decl != nullptr) && (!(_18725_s.get()._field_decl.get()._field_cpp_linked))) && _1d7072aa0_is_derives(_18725_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1a960e3cd:;
				{
					return false;
				}
			}
			_match_end_1a960e367:;
		};
	};
}



inline jule::Bool _1be3d6415_variadicable(_1be3d45ab_TypeKind* _self_) {
	{
		_1be3d45ab_TypeKind* _20021__self = (&((*_self_)));;
		return (_1be3d7603_slc(_20021__self) != nullptr);
	};
}



inline jule::Ptr<_1be3d9083_Prim> _1be3d6679_prim(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3d9083_Prim>>()) {
			_case_begin_1a96174d5:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3d9083_Prim>();
			}
		}
		else {
			_case_begin_1a9616d97:;
			{
				return nullptr;
			}
		}
		_match_end_1a9616d42:;
	};
}



inline jule::Ptr<_1be3dc592_Sptr> _1be3d68dd_sptr(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3dc592_Sptr>>()) {
			_case_begin_1a96181c8:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3dc592_Sptr>();
			}
		}
		else {
			_case_begin_1a96177d2:;
			{
				return nullptr;
			}
		}
		_match_end_1a9617ccc:;
	};
}



inline jule::Ptr<_1be3e0b06_Ptr> _1be3d6b52_ptr(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e0b06_Ptr>>()) {
			_case_begin_1a9618e43:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3e0b06_Ptr>();
			}
		}
		else {
			_case_begin_1a9618948:;
			{
				return nullptr;
			}
		}
		_match_end_1a96188e3:;
	};
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be3d6db6_enm(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9dceb3_Enum>>()) {
			_case_begin_1a9619bad:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1bc9dceb3_Enum>();
			}
		}
		else {
			_case_begin_1a96196b3:;
			{
				return nullptr;
			}
		}
		_match_end_1a961965d:;
	};
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3d712a_tenm(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1bd9c99a4_TypeEnum>>()) {
			_case_begin_1a961a928:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1bd9c99a4_TypeEnum>();
			}
		}
		else {
			_case_begin_1a961a42d:;
			{
				return nullptr;
			}
		}
		_match_end_1a961a3c8:;
	};
}



inline jule::Ptr<_1be3e0199_Arr> _1be3d738e_arr(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e0199_Arr>>()) {
			_case_begin_1a961b693:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3e0199_Arr>();
			}
		}
		else {
			_case_begin_1a961b198:;
			{
				return nullptr;
			}
		}
		_match_end_1a961b143:;
	};
}



inline jule::Ptr<_1be3dceee_Slc> _1be3d7603_slc(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3dceee_Slc>>()) {
			_case_begin_1a961c40d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3dceee_Slc>();
			}
		}
		else {
			_case_begin_1a961be13:;
			{
				return nullptr;
			}
		}
		_match_end_1a961bdad:;
	};
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1be3d7867_fnc(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c9c4c_FnIns>>()) {
			_case_begin_1a961d178:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1bc9c9c4c_FnIns>();
			}
		}
		else {
			_case_begin_1a961cb7d:;
			{
				return nullptr;
			}
		}
		_match_end_1a961cb28:;
	};
}



inline jule::Ptr<_1d70ab9c9_StructIns> _1be3d7acb_strct(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d70ab9c9_StructIns>>()) {
			_case_begin_1a961ddc1:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1d70ab9c9_StructIns>();
			}
		}
		else {
			_case_begin_1a961d4ca:;
			{
				return nullptr;
			}
		}
		_match_end_1a961d9b4:;
	};
}



inline jule::Ptr<_1bd929d66_Trait> _1be3d7d40_trt(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1bd929d66_Trait>>()) {
			_case_begin_1a961eb3b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1bd929d66_Trait>();
			}
		}
		else {
			_case_begin_1a961e641:;
			{
				return nullptr;
			}
		}
		_match_end_1a961e5db:;
	};
}



inline jule::Ptr<_1be3de5a5_Map> _1be3d80a4_map(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3de5a5_Map>>()) {
			_case_begin_1a96208a6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3de5a5_Map>();
			}
		}
		else {
			_case_begin_1a96203ab:;
			{
				return nullptr;
			}
		}
		_match_end_1a9620356:;
	};
}



inline jule::Ptr<_1be3dd9e4_Tuple> _1be3d8318_tup(_1be3d45ab_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3dd9e4_Tuple>>()) {
			_case_begin_1a9621621:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1be3dd9e4_Tuple>();
			}
		}
		else {
			_case_begin_1a9621126:;
			{
				return nullptr;
			}
		}
		_match_end_1a96210c1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be3d45ab_TypeKind _Src) {
	_Stream << _1be3d4963_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1be3d8abb_checked(_1be3d86c0_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1be3d8c97_remove_kind(_1be3d86c0_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3d86c0_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be3d93e6_to_str(_1be3d9083_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1be3d9704_equals(jule::Ptr<_1be3d9083_Prim> _self_, jule::Ptr<_1be3d45ab_TypeKind> _35326_other) {
	jule::Ptr<_1be3d9083_Prim> _35413_prim = _1be3d6679_prim(_35326_other.ptr());;
	if ((_35413_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _35413_prim.get()._field_kind);
}



inline jule::Bool _1be3d9b66_is_i8(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1be3d9dca_is_i16(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1be3da13e_is_i32(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1be3da3a3_is_i64(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1be3da617_is_u8(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1be3da87b_is_u16(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1be3daae0_is_u32(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1be3dad54_is_u64(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1be3db0b8_is_f32(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1be3db32c_is_f64(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1be3db591_is_int(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1be3db805_is_uint(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1be3dba69_is_uintptr(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1be3dbccd_is_bool(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1be3dc042_is_str(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1be3dc2a6_is_any(_1be3d9083_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3d9083_Prim _Src) {
	_Stream << _1be3d93e6_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1be3dc905_to_str(_1be3dc592_Sptr* _self_) {
	return (jule::Str("&", 1) + _1be3d4963_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1be3dcc13_equals(jule::Ptr<_1be3dc592_Sptr> _self_, jule::Ptr<_1be3d45ab_TypeKind> _42226_other) {
	jule::Ptr<_1be3dc592_Sptr> _42313_sptr = _1be3d68dd_sptr(_42226_other.ptr());;
	if ((_42313_sptr == nullptr)) {
		return false;
	};
	return _1be3d4c71_equals(_self_.get()._field_elem, _42313_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3dc592_Sptr _Src) {
	_Stream << _1be3dc905_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1be3dd472_to_str(_1be3dceee_Slc* _self_) {
	return (jule::Str("[]", 2) + _1be3d4963_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1be3dd780_equals(jule::Ptr<_1be3dceee_Slc> _self_, jule::Ptr<_1be3d45ab_TypeKind> _44126_other) {
	jule::Ptr<_1be3dceee_Slc> _44213_slc = _1be3d7603_slc(_44126_other.ptr());;
	if ((_44213_slc == nullptr)) {
		return false;
	};
	return _1be3d4c71_equals(_self_.get()._field_elem, _44213_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3dceee_Slc _Src) {
	_Stream << _1be3dd472_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1be3dde67_to_str(_1be3dd9e4_Tuple* _self_) {
	jule::Str _45817_s = jule::Str("(", 1);;
	_45817_s+=_1be3d4963_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a962e3ed:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d45ab_TypeKind> &_46016_t = *it;
			{
				_45817_s+=jule::Str(",", 1);
				_45817_s+=_1be3d4963_to_str(_46016_t.ptr());
			}
			_iter_next_1a962e3ed:;
			++it;
			goto _iter_begin_1a962e3ed;
		}
		_iter_end_1a962e3ed:;
	};
	_45817_s+=jule::Str(")", 1);
	return _45817_s;
}



inline jule::Bool _1be3de275_equals(jule::Ptr<_1be3dd9e4_Tuple> _self_, jule::Ptr<_1be3d45ab_TypeKind> _46926_other) {
	jule::Ptr<_1be3dd9e4_Tuple> _47013_tup = _1be3d8318_tup(_46926_other.ptr());;
	if ((_47013_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _47013_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _47917_i = 0LL;;
	for (; (_47917_i < _self_.get()._field_types.len()); (_47917_i)++) {
		{
			if ((!(_1be3d4c71_equals(_self_.get()._field_types[_47917_i], _47013_tup.get()._field_types[_47917_i])))) {
				return false;
			};
		}
	_iter_next_1a9632984:;
	}
	_iter_end_1a9632984:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3dd9e4_Tuple _Src) {
	_Stream << _1be3dde67_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1be3de918_to_str(_1be3de5a5_Map* _self_) {
	jule::Str _49917_s = jule::Str("[", 1);;
	_49917_s+=_1be3d4963_to_str((*_self_)._field_key.ptr());
	_49917_s+=jule::Str(":", 1);
	_49917_s+=_1be3d4963_to_str((*_self_)._field_val.ptr());
	_49917_s+=jule::Str("]", 1);
	return _49917_s;
}



inline jule::Bool _1be3dec26_equals(jule::Ptr<_1be3de5a5_Map> _self_, jule::Ptr<_1be3d45ab_TypeKind> _50826_other) {
	jule::Ptr<_1be3de5a5_Map> _50913_map = _1be3d80a4_map(_50826_other.ptr());;
	if ((_50913_map == nullptr)) {
		return false;
	};
	return (_1be3d4c71_equals(_self_.get()._field_key, _50913_map.get()._field_key) && _1be3d4c71_equals(_self_.get()._field_val, _50913_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3de5a5_Map _Src) {
	_Stream << _1be3de918_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1be3e050c_to_str(_1be3e0199_Arr* _self_) {
	jule::Str _52717_s = jule::Str("[", 1);;
	_52717_s+=_1be128b19_itoa((*_self_)._field_n);
	_52717_s+=jule::Str("]", 1);
	_52717_s+=_1be3d4963_to_str((*_self_)._field_elem.ptr());
	return _52717_s;
}



inline jule::Bool _1be3e081a_equals(jule::Ptr<_1be3e0199_Arr> _self_, jule::Ptr<_1be3d45ab_TypeKind> _53526_other) {
	jule::Ptr<_1be3e0199_Arr> _53613_arr = _1be3d738e_arr(_53526_other.ptr());;
	if ((_53613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _53613_arr.get()._field_n) && _1be3d4c71_equals(_self_.get()._field_elem, _53613_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3e0199_Arr _Src) {
	_Stream << _1be3e050c_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1be3e0e69_to_str(_1be3e0b06_Ptr* _self_) {
	if (_1be3e15c9_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1be3d4963_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1be3e1277_equals(jule::Ptr<_1be3e0b06_Ptr> _self_, jule::Ptr<_1be3d45ab_TypeKind> _55926_other) {
	jule::Ptr<_1be3e0b06_Ptr> _56013_ptr = _1be3d6b52_ptr(_55926_other.ptr());;
	if ((_56013_ptr == nullptr)) {
		return false;
	};
	return _1be3d4c71_equals(_self_.get()._field_elem, _56013_ptr.get()._field_elem);
}



inline jule::Bool _1be3e15c9_is_unsafe(_1be3e0b06_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3e0b06_Ptr _Src) {
	_Stream << _1be3e0e69_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3e1a4c_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1be3e2e9e_push_err(_1be3e2795_TypeChecker* _self_, jule::Ptr<_20201c3d1_Token> _63727_token, jule::Str _63742_fmt, jule::Slice<jule::Any> _63755_args) {
	_1be34aec3_push_err((*_self_)._field_s.ptr(), _63727_token,_63742_fmt,jule::Any(_63755_args));
}



inline void _1be3e317a_allow_builtin(_1be3e2795_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1be3e3356_disallow_builtin(_1be3e2795_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1be3d9083_Prim> _1be3e3664_build_prim(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _64930_decl) {
	if ((!(_1be3ec78e_is_prim(_64930_decl.get()._field_ident)))) {
		_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_64930_decl.get()._field_generics.len() > 0LL)) {
		_1be3e2e9e_push_err(&(*_self_), _64930_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_64930_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1be3ec250_build_prim_type(_64930_decl.get()._field_ident);
}



inline void _1a9642b2b_push_reference(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d70ab9c9_StructIns>& _66341_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1abed48b6_exist((*_self_)._field_refers.ptr(), _66341_t)) {
		return;;
	};
	_1bc9cc106_push((*_self_)._field_refers.ptr(), jule::Any(_66341_t));
}

inline void _1a9645c83_push_reference(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1bd929d66_Trait>& _66341_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1a9647911_exist((*_self_)._field_refers.ptr(), _66341_t)) {
		return;;
	};
	_1bc9cc106_push((*_self_)._field_refers.ptr(), jule::Any(_66341_t));
}



inline void _1be3e3b5e_push_reference_by_kind(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _67346_k) {
	{
		
		if ((_1be3d7acb_strct(_67346_k.ptr()) != nullptr)) {
			_case_begin_1a9641784:;
			{
				jule::Ptr<_1d70ab9c9_StructIns> _67621_t = _1be3d7acb_strct(_67346_k.ptr());;
				_1a9642b2b_push_reference(&(*_self_), _67621_t);
			}
		}
		else if ((_1be3d7d40_trt(_67346_k.ptr()) != nullptr)) {
			_case_begin_1a964180b:;
			{
				jule::Ptr<_1bd929d66_Trait> _67921_t = _1be3d7d40_trt(_67346_k.ptr());;
				_1a9645c83_push_reference(&(*_self_), _67921_t);
			}
		}
		_match_end_1a9641663:;
	};
}



inline void _1be3e4027_push_cycle_error(_1be3e2795_TypeChecker* _self_, jule::Any _68431_def1, jule::Any _68442_def2, jule::Str& _68458_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _68713_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _68729_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _68729_def };
			
			if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
				_case_begin_1a964acdd:;
				{
					return _68729_def.operator jule::Ptr<_1be3d3874_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
				_case_begin_1a964ad54:;
				{
					return _68729_def.operator jule::Ptr<_1d7073276_Struct>().get()._field_ident;
				}
			}
			else {
				_case_begin_1a964ab56:;
				{
					return jule::Str();
				}
			}
			_match_end_1a964aa79:;
		};
	});;
	jule::Str _69813_def1_ident = _68713_get_ident(_68431_def1);;
	jule::Str _69913_def2_ident = _68713_get_ident(_68442_def2);;
	jule::Str _70013_refers_to = _201be1292_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_69813_def1_ident),jule::Any(_69913_def2_ident)}));;
	(_68458_message).buffer.insert(0, (((_200cecaa8_repeat(jule::Str(" ", 1),4LL) + _70013_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1be3e43ce_check_cross_cycle(_1be3e2795_TypeChecker* _self_, jule::Any _70432_decl, jule::Str& _70448_message) {
	{
		auto &_match_expr{ _70432_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
			_case_begin_1a964da7c:;
			{
				jule::Ptr<_1be3d3874_TypeAlias> _70717_ta = _70432_decl.operator jule::Ptr<_1be3d3874_TypeAlias>();;
				{
					auto &expr = _70717_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1a964e7c5:;
					if (it != expr.end()) {
						jule::Any &_70820_d = *it;
						{
							{
								
								if ((_70820_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1a96502ba:;
									{
										_1be3e4027_push_cycle_error(&(*_self_), jule::Any(_70717_ta),jule::Any(_70820_d),_70448_message);
										return false;
									}
								}
								else if ((!(_1be3e43ce_check_cross_cycle(&(*_self_), jule::Any(_70820_d),_70448_message)))) {
									_case_begin_1a9650342:;
									{
										_1be3e4027_push_cycle_error(&(*_self_), jule::Any(_70717_ta),jule::Any(_70820_d),_70448_message);
										return false;
									}
								}
								_match_end_1a9650199:;
							};
						}
						_iter_next_1a964e7c5:;
						++it;
						goto _iter_begin_1a964e7c5;
					}
					_iter_end_1a964e7c5:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1a964dae3:;
			{
				jule::Ptr<_1d7073276_Struct> _71917_s = _70432_decl.operator jule::Ptr<_1d7073276_Struct>();;
				{
					auto &expr = _71917_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1a9652267:;
					if (it != expr.end()) {
						jule::Ptr<_1d7073276_Struct> &_72020_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _72020_d)) {
									_case_begin_1a9652c5c:;
									{
										_1be3e4027_push_cycle_error(&(*_self_), jule::Any(_71917_s),jule::Any(_72020_d),_70448_message);
										return false;
									}
								}
								else if ((!(_1be3e43ce_check_cross_cycle(&(*_self_), jule::Any(_72020_d),_70448_message)))) {
									_case_begin_1a9652cd4:;
									{
										_1be3e4027_push_cycle_error(&(*_self_), jule::Any(_71917_s),jule::Any(_72020_d),_70448_message);
										return false;
									}
								}
								_match_end_1a9652b3b:;
							};
						}
						_iter_next_1a9652267:;
						++it;
						goto _iter_begin_1a9652267;
					}
					_iter_end_1a9652267:;
				};
			}
		}
		_match_end_1a964d98e:;
	};
	return true;
}



inline jule::Bool _1be3e4786_check_illegal_cycles(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _73840_ident, jule::Any _73867_decl) {
	jule::Bool _73880_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_73880_ok = true;
		return _73880_ok;
	};
	{
		auto &_match_expr{ _73867_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1a96527a6:;
			{
				if (((*_self_)._field_not_plain || _73867_decl.operator jule::Ptr<_1d7073276_Struct>().get()._field_cpp_linked)) {
					_73880_ok = true;
					return _73880_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
			_case_begin_1a96528e9:;
			{
				if (_73867_decl.operator jule::Ptr<_1be3d3874_TypeAlias>().get()._field_cpp_linked) {
					_73880_ok = true;
					return _73880_ok;
				};
			}
		}
		_match_end_1a9652751:;
	};
	if ((_73867_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1be3e2e9e_push_err(&(*_self_), _73840_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_73880_ok = false;
		return _73880_ok;
	};
	jule::Str _76117_message = jule::Str();;
	if ((!(_1be3e43ce_check_cross_cycle(&(*_self_), jule::Any(_73867_decl),_76117_message)))) {
		jule::Str _76421_err_msg = _76117_message;;
		_76117_message=jule::Str();
		_1be3e4027_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_73867_decl),_76117_message);
		_76421_err_msg=(_76421_err_msg + _76117_message);
		_1be3e2e9e_push_err(&(*_self_), _73840_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_76421_err_msg)}));
		_73880_ok = false;
		return _73880_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1be3d3874_TypeAlias>>()) {
			_case_begin_1a9657a86:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_73867_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1a9659b10:;
			{
				{
					auto &_match_expr{ _73867_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
						_case_begin_1a965a2a3:;
						{
							jule::Ptr<_1d7073276_Struct> _78025_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1d7073276_Struct>();;
							_78025_s.get()._field_depends = jule::alloc_for_append(_78025_s.get()._field_depends,1);_78025_s.get()._field_depends.__push(_73867_decl.operator jule::Ptr<_1d7073276_Struct>());;
						}
					}
					_match_end_1a965a1b5:;
				};
			}
		}
		_match_end_1a9657a31:;
	};
	_73880_ok = true;
	return _73880_ok;
}



inline jule::Trait<_1be3d417c_Kind> _1be3e4b3d_from_type_alias(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _78835_decl, jule::Ptr<_1be3d3874_TypeAlias>& _78862_ta) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _78862_ta.get()._field_public,_78862_ta.get()._field_token)))) {
		_1be3e2e9e_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
		return nullptr;
	};
	_78862_ta.get()._field_used=true;
	if ((_78835_decl.get()._field_generics.len() > 0LL)) {
		_1be3e2e9e_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ac16ee2a:;
			if (it != expr.end()) {
				jule::Ptr<_1be3d3874_TypeAlias> _80520_bg = *it;
				{
					if (((_80520_bg == _78862_ta) || ((_78862_ta.get()._field_kind.get()._field_kind != nullptr) && _1be3d4c71_equals(_78862_ta.get()._field_kind.get()._field_kind, _80520_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1ac16ee2a;
					};
				}
				_iter_next_1ac16ee2a:;
				++it;
				goto _iter_begin_1ac16ee2a;
			}
			_iter_end_1ac16ee2a:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ac1707cc:;
			if (it != expr.end()) {
				jule::Ptr<_1be3d3874_TypeAlias> _81620_bg = *it;
				{
					if ((_81620_bg == _78862_ta)) {
						_1be3e2e9e_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _78862_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1ac172768:;
						if (it != expr.end()) {
							jule::Ptr<_1be3d3874_TypeAlias> _82124_dg = *it;
							{
								if ((_81620_bg == _82124_dg)) {
									_1be3e2e9e_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1ac172768:;
							++it;
							goto _iter_begin_1ac172768;
						}
						_iter_end_1ac172768:;
					};
				}
				_iter_next_1ac1707cc:;
				++it;
				goto _iter_begin_1ac1707cc;
			}
			_iter_end_1ac1707cc:;
		};
	};
	jule::Bool _83017_ok = _1be3e4786_check_illegal_cycles(&(*_self_), _78835_decl,jule::Any(_78862_ta));;
	if ((!(_83017_ok))) {
		return nullptr;
	};
	_83017_ok=_1be353481_check_type_alias_decl_kind((*_self_)._field_s, _78862_ta,(*_self_)._field_lookup);
	if ((!(_83017_ok))) {
		return nullptr;
	};
	if ((_78862_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_78862_ta);;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _84717_tk = jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_generic=_78862_ta.get()._field_generic, ._field_kind=_78862_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	_1be3e3b5e_push_reference_by_kind(&(*_self_), _84717_tk);
	if (_78862_ta.get()._field_cpp_linked) {
		_84717_tk.get()._field_cpp_ident=_78862_ta.get()._field_ident;
	} else {
		_84717_tk.get()._field_cpp_ident=_78862_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1be3d417c_Kind>(_84717_tk, 5);
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be3e4ee5_from_enum(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _86029_decl, jule::Ptr<_1bc9dceb3_Enum>& _86056_e) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _86056_e.get()._field_public,_86056_e.get()._field_token)))) {
		_1be3e2e9e_push_err(&(*_self_), _86029_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_86029_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_86029_decl.get()._field_generics.len() > 0LL)) {
		_1be3e2e9e_push_err(&(*_self_), _86029_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_86029_decl.get()._field_ident)}));
		return nullptr;
	};
	return _86056_e;
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be3e539c_from_type_enum(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _87234_decl, jule::Ptr<_1bd9c99a4_TypeEnum>& _87261_e) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _87261_e.get()._field_public,_87261_e.get()._field_token)))) {
		_1be3e2e9e_push_err(&(*_self_), _87234_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87234_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_87234_decl.get()._field_generics.len() > 0LL)) {
		_1be3e2e9e_push_err(&(*_self_), _87234_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87234_decl.get()._field_ident)}));
		return nullptr;
	};
	return _87261_e;
}



inline jule::Ptr<_1bd929d66_Trait> _1be3e5754_from_trait(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _88430_decl, jule::Ptr<_1bd929d66_Trait>& _88457_t) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _88457_t.get()._field_public,_88457_t.get()._field_token)))) {
		_1be3e2e9e_push_err(&(*_self_), _88430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88430_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_88430_decl.get()._field_generics.len() > 0LL)) {
		_1be3e2e9e_push_err(&(*_self_), _88430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88430_decl.get()._field_ident)}));
		return nullptr;
	};
	_1a9645c83_push_reference(&(*_self_), _88457_t);
	return _88457_t;
}



inline jule::Bool _1be3e5b0b_check_struct_ins(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d70ab9c9_StructIns>& _89740_ins, jule::Ptr<_20201c3d1_Token>& _89758_error_token) {
	jule::Bool _89781_ok = jule::Bool();
	if (_89740_ins.get()._field_checked) {
		_89781_ok = true;
		return _89781_ok;
	};
	_89740_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _89740_ins.get()._field_decl))) {
		_89781_ok = true;
		return _89781_ok;
	};
	if ((!(_1be35c688_precheck_struct_ins((*_self_)._field_s, _89740_ins)))) {
		_89781_ok = false;
		return _89781_ok;
	};
	if ((_89740_ins.get()._field_generics.len() > 0LL)) {
		_1be35d106_check_struct_ins_operators((*_self_)._field_s, _89740_ins);
		_1be35c90d_check_struct_ins((*_self_)._field_s, _89740_ins);
	};
	_89781_ok = true;
	return _89781_ok;
}



inline void _1be3e5da3_append_used_struct_reference(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7073276_Struct>& _91852_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1ac184b76:;
			{
				jule::Ptr<_1d7073276_Struct> _92521_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1d7073276_Struct>();;
				if ((!(_1d7071eab_is_uses(_92521_ref_s.ptr(), _91852_s)))) {
					_92521_ref_s.get()._field_uses = jule::alloc_for_append(_92521_ref_s.get()._field_uses,1);_92521_ref_s.get()._field_uses.__push(_91852_s);;
				};
			}
		}
		_match_end_1ac18488a:;
	};
}



inline jule::Ptr<_1d70ab9c9_StructIns> _1be3e626b_build_struct_instance(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _93245_decl, jule::Ptr<_1d7073276_Struct>& _93272_s) {
	jule::Ptr<_1be3e1a4c_Referencer> _93417_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>> _93617_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1be25aee3_ScopeChecker>>()) {
				_case_begin_1ac187959:;
				{
					jule::Ptr<_1be25aee3_ScopeChecker> _94325_sc = (*_self_)._field_lookup.operator jule::Ptr<_1be25aee3_ScopeChecker>();;
					jule::Ptr<_1be25aee3_ScopeChecker> _94425_hard = _1be25e36a_get_hard_root(_94325_sc);;
					if (((_94425_hard.get()._field_owner.get()._field_owner == nullptr) || (_94425_hard.get()._field_owner.get()._field_owner.get()._field_decl != _93272_s))) {
						goto _match_end_1ac187904;
					};
					jule::I64 _94821_n = (_94425_hard.get()._field_owner.get()._field_generics.len() + _94425_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_94425_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_94821_n);
				}
			}
			_match_end_1ac187904:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _95817_ins = _1d706814a_instance(_93272_s);;
	_95817_ins.get()._field_generics=jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>::alloc(0LL,_93245_decl.get()._field_generics.len());
	{
		auto &expr = _93245_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac18b463:;
		if (it != expr.end()) {
			jule::Ptr<_1d709023d_TypeDecl> _96021_g = *it;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _96121_kind = _1be3e9703_build(&(*_self_), _96021_g.get()._field_kind);;
				if ((_96121_kind == nullptr)) {
					return nullptr;
				};
				_95817_ins.get()._field_generics = jule::alloc_for_append(_95817_ins.get()._field_generics,1);_95817_ins.get()._field_generics.__push(_96121_kind);;
			}
			_iter_next_1ac18b463:;
			++it;
			goto _iter_begin_1ac18b463;
		}
		_iter_end_1ac18b463:;
	};
	(*_self_)._field_banned_generics=_93617_banned_generics;
	(*_self_)._field_referencer=_93417_referencer;
	return _95817_ins;
}



inline jule::Ptr<_1d70ab9c9_StructIns> _1be3e6623_from_struct(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _97535_decl, jule::Ptr<_1d7073276_Struct>& _97562_s) {
	if ((!(_1be34b699_is_accessible_define((*_self_)._field_s.ptr(), _97562_s.get()._field_public,_97562_s.get()._field_token)))) {
		_1be3e2e9e_push_err(&(*_self_), _97535_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_97535_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_97535_decl.get()._field_generics.len() > 0LL)) {
			_1be3e2e9e_push_err(&(*_self_), _97535_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1d70ab9c9_StructIns>(_1d70ab9c9_StructIns{._field_decl=_97562_s, });
	};
	jule::Bool _99317_ok = ((*_self_)._field_not_plain || _1be3e4786_check_illegal_cycles(&(*_self_), _97535_decl,jule::Any(_97562_s)));;
	if ((!(_99317_ok))) {
		return nullptr;
	};
	_1be3e5da3_append_used_struct_reference(&(*_self_), _97562_s);
	jule::Ptr<_1d70ab9c9_StructIns> _99917_ins = _1be3e626b_build_struct_instance(&(*_self_), _97535_decl,_97562_s);;
	if ((_99917_ins == nullptr)) {
		return nullptr;
	};
	_99317_ok=_1be34c36a_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_99917_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_99917_ins.get()._field_generics.len()),_97535_decl.get()._field_token);
	if ((!(_99317_ok))) {
		return nullptr;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _100917_exist_instance = _1d706c3b3_append_instance(_97562_s.ptr(), _99917_ins);;
	if ((_100917_exist_instance != nullptr)) {
		_1a9642b2b_push_reference(&(*_self_), _100917_exist_instance);
		return _100917_exist_instance;
	};
	if ((!(_1be3e5b0b_check_struct_ins(&(*_self_), _99917_ins,_97535_decl.get()._field_token)))) {
		return nullptr;
	};
	_1a9642b2b_push_reference(&(*_self_), _99917_ins);
	return _99917_ins;
}



inline jule::Trait<_1be3d417c_Kind> _1be3e6931_get_def(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl>& _103031_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1ac19665a:;
		if (it != expr.end()) {
			jule::Ptr<_1d709c536_GenericDecl> _103116_g = *it;
			{
				if ((_103116_g.get()._field_ident == _103031_decl.get()._field_ident)) {
					return jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(_103116_g.get()._field_ident), 6);
				};
			}
			_iter_next_1ac19665a:;
			++it;
			goto _iter_begin_1ac19665a;
		}
		_iter_end_1ac19665a:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1ac1976d3:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d3874_TypeAlias> _103721_g = *it;
			{
				if ((_103721_g.get()._field_ident == _103031_decl.get()._field_ident)) {
					jule::Ptr<_1d70ab9c9_StructIns> _103925_st = _1be3d7acb_strct(_103721_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_103925_st != nullptr)) {
						jule::Bool _104125_ok = _1be3e4786_check_illegal_cycles(&(*_self_), _103031_decl,jule::Any(_103925_st.get()._field_decl));;
						if ((!(_104125_ok))) {
							return nullptr;
						};
					};
					return _103721_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1ac1976d3:;
			++it;
			goto _iter_begin_1ac1976d3;
		}
		_iter_end_1ac1976d3:;
	};
	if ((!(_103031_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1bc9dceb3_Enum> _105121_e = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ee97d_find_enum((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if ((_105121_e != nullptr)) {
			return jule::Trait<_1be3d417c_Kind>(_1be3e4ee5_from_enum(&(*_self_), _103031_decl,_105121_e), 3);
		};
		jule::Ptr<_1bd9c99a4_TypeEnum> _105621_te = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3eec8b_find_type_enum((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if ((_105621_te != nullptr)) {
			return jule::Trait<_1be3d417c_Kind>(_1be3e539c_from_type_enum(&(*_self_), _103031_decl,_105621_te), 4);
		};
		jule::Ptr<_1bd929d66_Trait> _106121_t = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ee670_find_trait((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if (((_106121_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_106121_t=_1be437ea0_find_builtin_trait(_103031_decl.get()._field_ident);
		};
		if ((_106121_t != nullptr)) {
			return jule::Trait<_1be3d417c_Kind>(_1be3e5754_from_trait(&(*_self_), _103031_decl,_106121_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1be3e2e9e_push_err(&(*_self_), _103031_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d7073276_Struct> _107317_s = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3edeaa_find_struct((*_self_)._field_lookup, _103031_decl.get()._field_ident,_103031_decl.get()._field_cpp_linked);;
	if ((_107317_s != nullptr)) {
		return jule::Trait<_1be3d417c_Kind>(_1be3e6623_from_struct(&(*_self_), _103031_decl,_107317_s), 0);
	};
	jule::Ptr<_1be3d3874_TypeAlias> _107817_ta = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3edb03_find_type_alias((*_self_)._field_lookup, _103031_decl.get()._field_ident,_103031_decl.get()._field_cpp_linked);;
	if (((_107817_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_107817_ta=_1be40d9e2_find_builtin_type_alias(_103031_decl.get()._field_ident);
	};
	if ((_107817_ta != nullptr)) {
		return _1be3e4b3d_from_type_alias(&(*_self_), _103031_decl,_107817_ta);
	};
	_1be3e2e9e_push_err(&(*_self_), _103031_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_103031_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1be3d417c_Kind> _1be3e6c3e_build_ident(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090804_IdentTypeDecl> _109034_decl) {
	{
		
		if (_1be3ec78e_is_prim(_109034_decl.get()._field_ident)) {
			_case_begin_1ac1a3b95:;
			{
				return jule::Trait<_1be3d417c_Kind>(_1be3e3664_build_prim(&(*_self_), _109034_decl), 6);
			}
		}
		else {
			_case_begin_1ac1a30e5:;
			{
				return _1be3e6931_get_def(&(*_self_), _109034_decl);
			}
		}
		_match_end_1ac1a3018:;
	};
}



inline jule::Trait<_1be3d417c_Kind> _1be3e704c_build_sub_ident(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7090e53_SubIdentTypeDecl> _109938_decl) {
	jule::Trait<_1be3d417c_Kind> _110017_ident = _1be3e6c3e_build_ident(&(*_self_), _109938_decl.get()._field_idents[0LL]);;
	if ((_110017_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _110017_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1bd9c99a4_TypeEnum>>()) {
			_case_begin_1ac1a556a:;
			{
				goto _match_end_1ac1a548d;
			}
		}
		else {
			_case_begin_1ac1a524b:;
			{
				_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac1a548d:;
	};
	jule::Ptr<_1bd9c99a4_TypeEnum> _111217_t = _110017_ident.operator jule::Ptr<_1bd9c99a4_TypeEnum>();;
	jule::Slice<jule::Ptr<_1d7090804_IdentTypeDecl>> _111317_idents = _109938_decl.get()._field_idents.slice(1LL);;
	{
		auto &expr = _111317_idents;
		auto it = expr.begin();
		_iter_begin_1ac1a69de:;
		if (it != expr.end()) {
			jule::I64 _111413_i = it - expr.begin();
			jule::Ptr<_1d7090804_IdentTypeDecl> _111416_id = *it;
			{
				jule::Ptr<_1bcb58ddc_TypeEnumItem> _111521_item = _1bd92a6a2_find_item(_111217_t.ptr(), _111416_id.get()._field_ident);;
				if ((_111521_item == nullptr)) {
					_1be3e2e9e_push_err(&(*_self_), _111416_id.get()._field_token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_111217_t.get()._field_ident),jule::Any(_111416_id.get()._field_ident)}));
					return nullptr;
				};
				if (((_111317_idents.len() - _111413_i) == 1LL)) {
					_1be3e3b5e_push_reference_by_kind(&(*_self_), _111521_item.get()._field_kind.get()._field_kind);
					return jule::Trait<_1be3d417c_Kind>(_111521_item.get()._field_kind.get()._field_kind, 5);
				};
				_111217_t=_1be3d712a_tenm(_111521_item.get()._field_kind.get()._field_kind.ptr());
				if ((_111217_t == nullptr)) {
					_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1ac1a69de:;
			++it;
			_111413_i++;
			goto _iter_begin_1ac1a69de;
		}
		_iter_end_1ac1a69de:;
	};
	return nullptr;
}



inline jule::Ptr<_1be3dc592_Sptr> _1be3e735a_build_sptr_from_type(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _113444_elem) {
	{
		
		if ((_113444_elem == nullptr)) {
			_case_begin_1ac1a74a1:;
			{
				return nullptr;
			}
		}
		else if ((_1be3d7acb_strct(_113444_elem.ptr()) != nullptr)) {
			_case_begin_1ac1a7528:;
			{
				jule::Ptr<_1d70ab9c9_StructIns> _114017_s = _1be3d7acb_strct(_113444_elem.ptr());;
				if (((_114017_s.get()._field_decl != nullptr) && _114017_s.get()._field_decl.get()._field_cpp_linked)) {
					_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1be3d738e_arr(_113444_elem.ptr()) != nullptr) && _1be3d738e_arr(_113444_elem.ptr()).get()._field_auto)) {
			_case_begin_1ac1a75a0:;
			{
				_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac1a736e:;
	};
	return jule::new_ptr<_1be3dc592_Sptr>(_1be3dc592_Sptr{._field_elem=_113444_elem});
}



inline jule::Ptr<_1be3dc592_Sptr> _1be3e7668_build_sptr(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d70915e6_SptrTypeDecl> _115433_decl) {
	jule::Bool _115513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_115513_not_plain;
	});;
	jule::Ptr<_1be3d45ab_TypeKind> _115917_elem = _1be3e9a11_check_decl(&(*_self_), _115433_decl.get()._field_elem);;
	return _1be3e735a_build_sptr_from_type(&(*_self_), _115917_elem);
}



inline jule::Ptr<_1be3e0b06_Ptr> _1be3e7976_build_ptr_from_type(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1be3d45ab_TypeKind>& _116343_elem) {
	{
		
		if ((_116343_elem == nullptr)) {
			_case_begin_1ac1b1345:;
			{
				return nullptr;
			}
		}
		else if (((_1be3d738e_arr(_116343_elem.ptr()) != nullptr) && _1be3d738e_arr(_116343_elem.ptr()).get()._field_auto)) {
			_case_begin_1ac1b13bc:;
			{
				_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1be3e0b06_Ptr>();
			}
		}
		_match_end_1ac1b1224:;
	};
	return jule::new_ptr<_1be3e0b06_Ptr>(_1be3e0b06_Ptr{._field_elem=_116343_elem});
}



inline jule::Ptr<_1be3e0b06_Ptr> _1be3e7c84_build_ptr(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d70920b9_PtrTypeDecl> _117832_decl) {
	jule::Bool _117913_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_117913_not_plain;
	});;
	jule::Ptr<_1be3d45ab_TypeKind> _118317_elem = nullptr;;
	if ((!(_1d709241b_is_unsafe(_117832_decl.ptr())))) {
		_118317_elem=_1be3e9a11_check_decl(&(*_self_), _117832_decl.get()._field_elem);
		return _1be3e7976_build_ptr_from_type(&(*_self_), _118317_elem);
	};
	return jule::new_ptr<_1be3e0b06_Ptr>(_1be3e0b06_Ptr{._field_elem=_118317_elem});
}



inline jule::Ptr<_1be3dceee_Slc> _1be3e8092_build_slc(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d70919e2_SlcTypeDecl> _119532_decl) {
	jule::Bool _119613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_119613_not_plain;
	});;
	jule::Ptr<_1be3d45ab_TypeKind> _120017_elem = _1be3e9a11_check_decl(&(*_self_), _119532_decl.get()._field_elem);;
	{
		
		if ((_120017_elem == nullptr)) {
			_case_begin_1ac1b68bc:;
			{
				return nullptr;
			}
		}
		else if (((_1be3d738e_arr(_120017_elem.ptr()) != nullptr) && _1be3d738e_arr(_120017_elem.ptr()).get()._field_auto)) {
			_case_begin_1ac1b6944:;
			{
				_1be3e2e9e_push_err(&(*_self_), _119532_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac1b6812:;
	};
	return jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=_120017_elem});
}



inline jule::Ptr<_1be3e0199_Arr> _1be3e83a0_build_arr(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d709274b_ArrTypeDecl> _121632_decl) {
	jule::Bool _121713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121713_not_plain;
	});;
	jule::I64 _122117_n = 0LL;;
	if ((!(_1d7092b25_auto_sized(_121632_decl.ptr())))) {
		jule::Ptr<_1be3a92d9_Data> _122421_size = _1be3c612a_eval_expr(_1be350cca_eval((*_self_)._field_s, (*_self_)._field_lookup), _121632_decl.get()._field_size);;
		if ((_122421_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1be3a9b9c_is_const(_122421_size.ptr())))) {
			_1be3e2e9e_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1be3d6679_prim(_122421_size.get()._field_kind.ptr()) == nullptr) || (!(_1be25786e_is_int(_1be3d6679_prim(_122421_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1be3e2e9e_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122117_n=static_cast<jule::I64>(static_cast<jule::I64>(_1be1b427b_as_i64(_122421_size.get()._field_constant.ptr())));
		if ((_122117_n < 0LL)) {
			_1be3e2e9e_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1be2427c1_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_122117_n) > _1be252490_max(jule::Str("int", 3))))) {
			_1be3e2e9e_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1be3d45ab_TypeKind> _124717_elem = _1be3e9a11_check_decl(&(*_self_), _121632_decl.get()._field_elem);;
	{
		
		if ((_124717_elem == nullptr)) {
			_case_begin_1ac1c1003:;
			{
				return nullptr;
			}
		}
		else if (((_1be3d738e_arr(_124717_elem.ptr()) != nullptr) && _1be3d738e_arr(_124717_elem.ptr()).get()._field_auto)) {
			_case_begin_1ac1c1069:;
			{
				_1be3e2e9e_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac1c0c7d:;
	};
	return jule::new_ptr<_1be3e0199_Arr>(_1be3e0199_Arr{._field_auto=_1d7092b25_auto_sized(_121632_decl.ptr()), ._field_n=_122117_n, ._field_elem=_124717_elem});
}



inline jule::Ptr<_1be3de5a5_Map> _1be3e86ad_build_map(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7092e99_MapTypeDecl> _126532_decl) {
	jule::Bool _126613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126613_not_plain;
	});;
	jule::Ptr<_1be3d45ab_TypeKind> _127017_key = _1be3e9a11_check_decl(&(*_self_), _126532_decl.get()._field_key);;
	if ((_127017_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _127517_val = _1be3e9a11_check_decl(&(*_self_), _126532_decl.get()._field_val);;
	if ((_127517_val == nullptr)) {
		return nullptr;
	};
	if ((_1be3d6db6_enm(_127517_val.ptr()) != nullptr)) {
		_1be3e2e9e_push_err(&(*_self_), _126532_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1be3de5a5_Map>(_1be3de5a5_Map{._field_key=_127017_key, ._field_val=_127517_val});
}



inline jule::Ptr<_1be3dd9e4_Tuple> _1be3e89bb_build_tuple(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d7091ccd_TupleTypeDecl> _128934_decl) {
	jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _129017_types = jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>>::alloc(0LL,_128934_decl.get()._field_types.len());;
	{
		auto &expr = _128934_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1ac1c6beb:;
		if (it != expr.end()) {
			jule::Ptr<_1d709023d_TypeDecl> _129121_t = *it;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _129221_kind = _1be3e9a11_check_decl(&(*_self_), _129121_t);;
				if ((_129221_kind == nullptr)) {
					return nullptr;
				};
				_129017_types = jule::alloc_for_append(_129017_types,1);_129017_types.__push(_129221_kind);;
			}
			_iter_next_1ac1c6beb:;
			++it;
			goto _iter_begin_1ac1c6beb;
		}
		_iter_end_1ac1c6beb:;
	};
	return jule::new_ptr<_1be3dd9e4_Tuple>(_1be3dd9e4_Tuple{._field_types=_129017_types});
}



inline jule::Bool _1be3e8cc9_check_fn_types(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _130238_f) {
	jule::Bool _130251_ok = jule::Bool();
	{
		auto &expr = _130238_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ac1c8a66:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9a60_ParamIns> _130321_p = *it;
			{
				_130321_p.get()._field_kind=_1be3e9703_build(&(*_self_), _130321_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_130251_ok=(_130321_p.get()._field_kind != nullptr);
				if ((!(_130251_ok))) {
					_130251_ok = false;
					return _130251_ok;
				};
			}
			_iter_next_1ac1c8a66:;
			++it;
			goto _iter_begin_1ac1c8a66;
		}
		_iter_end_1ac1c8a66:;
	};
	if ((!(_1d70884de_is_void(_130238_f.get()._field_decl.ptr())))) {
		_130238_f.get()._field_result=_1be3e9703_build(&(*_self_), _130238_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_130251_ok = (_130238_f.get()._field_result != nullptr);
		return _130251_ok;
	};
	_130251_ok = true;
	return _130251_ok;
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1be3e90d7_build_fn(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d70a1c66_FnDecl> _131931_decl) {
	if ((_131931_decl.get()._field_generics.len() > 0LL)) {
		_1be3e2e9e_push_err(&(*_self_), _131931_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1bc9c9873_Fn> _132517_f = _1bc9ce669_build_fn(_131931_decl);;
	jule::Ptr<_1bc9c9c4c_FnIns> _132617_ins = _1d707cbba_instance_force(_132517_f);;
	_132617_ins.get()._field_anon=true;
	jule::Bool _132913_ok = _1be3e8cc9_check_fn_types(&(*_self_), _132617_ins);;
	if ((!(_132913_ok))) {
		return nullptr;
	};
	return _132617_ins;
}



inline jule::Trait<_1be3d417c_Kind> _1be3e93e5_build_by_namespace(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d709130a_NamespaceTypeDecl> _133741_decl) {
	jule::Str _133813_path = _1be3ebd87_build_link_path_by_tokens(_133741_decl.get()._field_idents);;
	jule::Ptr<_1be272d40_ImportInfo> _133917_imp = _1be3eedce_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1be3ed394_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1be272d40_ImportInfo>)>([=](jule::Ptr<_1be272d40_ImportInfo> _133953_imp) mutable -> jule::Bool {
		if (((_133741_decl.get()._field_idents.len() == 1LL) && (_133953_imp.get()._field_alias == _133813_path))) {
			return true;
		};
		return ((_133953_imp.get()._field_link_path == _133813_path) && _1be27599c_is_accessible_via_selection(_133953_imp.ptr()));
	}));;
	if (((_133917_imp == nullptr) || (!(_1be275408_is_lookupable(_133917_imp.ptr(), jule::Str("self", 4)))))) {
		_1be3e2e9e_push_err(&(*_self_), _133741_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_133813_path)}));
		return nullptr;
	};
	_1be3e3356_disallow_builtin(&(*_self_));
	jule::Trait<_1be3eedce_Lookup> _135217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1be3eedce_Lookup>(_133917_imp, 1);
	jule::Ptr<_1be3d45ab_TypeKind> _135417_kind = _1be3e9a11_check_decl(&(*_self_), _133741_decl.get()._field_kind);;
	(*_self_)._field_lookup=_135217_lookup;
	_1be3e317a_allow_builtin(&(*_self_));
	return jule::Trait<_1be3d417c_Kind>(_135417_kind, 5);
}



inline jule::Ptr<_1be3d45ab_TypeKind> _1be3e9703_build(_1be3e2795_TypeChecker* _self_, jule::Any& _136129_decl_kind) {
	jule::Trait<_1be3d417c_Kind> _136217_kind = nullptr;;
	{
		auto &_match_expr{ _136129_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7090804_IdentTypeDecl>>()) {
			_case_begin_1ac1d5952:;
			{
				jule::Trait<_1be3d417c_Kind> _136521_t = _1be3e6c3e_build_ident(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d7090804_IdentTypeDecl>());;
				if ((_136521_t != nullptr)) {
					_136217_kind=_136521_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7090e53_SubIdentTypeDecl>>()) {
			_case_begin_1ac1d59b8:;
			{
				jule::Trait<_1be3d417c_Kind> _137021_t = _1be3e704c_build_sub_ident(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d7090e53_SubIdentTypeDecl>());;
				if ((_137021_t != nullptr)) {
					_136217_kind=_137021_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70915e6_SptrTypeDecl>>()) {
			_case_begin_1ac1d628d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be3dc592_Sptr> _137621_t = _1be3e7668_build_sptr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d70915e6_SptrTypeDecl>());;
				if ((_137621_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_137621_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70920b9_PtrTypeDecl>>()) {
			_case_begin_1ac1d6304:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be3e0b06_Ptr> _138221_t = _1be3e7c84_build_ptr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d70920b9_PtrTypeDecl>());;
				if ((_138221_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_138221_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70919e2_SlcTypeDecl>>()) {
			_case_begin_1ac1d636a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be3dceee_Slc> _138821_t = _1be3e8092_build_slc(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d70919e2_SlcTypeDecl>());;
				if ((_138821_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_138821_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709274b_ArrTypeDecl>>()) {
			_case_begin_1ac1d63d1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be3e0199_Arr> _139421_t = _1be3e83a0_build_arr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d709274b_ArrTypeDecl>());;
				if ((_139421_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_139421_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7092e99_MapTypeDecl>>()) {
			_case_begin_1ac1d6447:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be3de5a5_Map> _140021_t = _1be3e86ad_build_map(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d7092e99_MapTypeDecl>());;
				if ((_140021_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_140021_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7091ccd_TupleTypeDecl>>()) {
			_case_begin_1ac1d64ad:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be3dd9e4_Tuple> _140621_t = _1be3e89bb_build_tuple(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d7091ccd_TupleTypeDecl>());;
				if ((_140621_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_140621_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a1c66_FnDecl>>()) {
			_case_begin_1ac1d6579:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1bc9c9c4c_FnIns> _141221_t = _1be3e90d7_build_fn(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d70a1c66_FnDecl>());;
				if ((_141221_t != nullptr)) {
					_136217_kind=jule::Trait<_1be3d417c_Kind>(_141221_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709130a_NamespaceTypeDecl>>()) {
			_case_begin_1ac1d65e0:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1be3d417c_Kind> _141821_t = _1be3e93e5_build_by_namespace(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1d709130a_NamespaceTypeDecl>());;
				if ((_141821_t != nullptr)) {
					_136217_kind=_141821_t;
				};
			}
		}
		else {
			_case_begin_1ac1d56dd:;
			{
				_1be3e2e9e_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac1d5688:;
	};
	if ((_136217_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _136217_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3d45ab_TypeKind>>()) {
			_case_begin_1ac1e39d7:;
			{
				return _136217_kind.operator jule::Ptr<_1be3d45ab_TypeKind>();
			}
		}
		else {
			_case_begin_1ac1e3454:;
			{
				return jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=_136217_kind});
			}
		}
		_match_end_1ac1d68a9:;
	};
}



inline jule::Ptr<_1be3d45ab_TypeKind> _1be3e9a11_check_decl(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1d709023d_TypeDecl>& _143934_decl) {
	jule::Ptr<_20201c3d1_Token> _144117_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_143934_decl.get()._field_token;
	jule::Ptr<_1be3d45ab_TypeKind> _144417_kind = _1be3e9703_build(&(*_self_), _143934_decl.get()._field_kind);;
	(*_self_)._field_error_token=_144117_error_token;
	return _144417_kind;
}



inline void _1be3e9c86_check(_1be3e2795_TypeChecker* _self_, jule::Ptr<_1be3d86c0_TypeSymbol>& _145029_t) {
	if ((_145029_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1be3d45ab_TypeKind> _145417_kind = _1be3e9a11_check_decl(&(*_self_), _145029_t.get()._field_decl);;
	if ((_145417_kind == nullptr)) {
		_1be3d8c97_remove_kind(_145029_t.ptr());
		return;;
	};
	_145029_t.get()._field_kind=_145417_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3e2795_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1be3ea3e6___ident_type_decl(jule::Str& _146634_ident, jule::Ptr<_1d7090804_IdentTypeDecl> _146646_t) {
	if ((_146646_t.get()._field_ident == _146634_ident)) {
		return true;
	};
	{
		auto &expr = _146646_t.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac1e7711:;
		if (it != expr.end()) {
			jule::Ptr<_1d709023d_TypeDecl> &_147016_g = *it;
			{
				if (static__1be3ea737_exist(_146634_ident,_147016_g.get()._field_kind)) {
					return true;
				};
			}
			_iter_next_1ac1e7711:;
			++it;
			goto _iter_begin_1ac1e7711;
		}
		_iter_end_1ac1e7711:;
	};
	return false;
}



inline jule::Bool static__1be3ea737_exist(jule::Str& _147822_ident, jule::Any& _147835_k) {
	{
		auto &_match_expr{ _147835_k };
		
		if (_match_expr.type_is<jule::Ptr<_1d7090804_IdentTypeDecl>>()) {
			_case_begin_1ac1e88dd:;
			{
				return static__1be3ea3e6___ident_type_decl(_147822_ident,_147835_k.operator jule::Ptr<_1d7090804_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7090e53_SubIdentTypeDecl>>()) {
			_case_begin_1ac1e8954:;
			{
				jule::Ptr<_1d7090e53_SubIdentTypeDecl> _148317_sit = _147835_k.operator jule::Ptr<_1d7090e53_SubIdentTypeDecl>();;
				{
					auto &expr = _148317_sit.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1ac1ea2d5:;
					if (it != expr.end()) {
						jule::Ptr<_1d7090804_IdentTypeDecl> &_148420_id = *it;
						{
							if (static__1be3ea3e6___ident_type_decl(_147822_ident,_148420_id)) {
								return true;
							};
						}
						_iter_next_1ac1ea2d5:;
						++it;
						goto _iter_begin_1ac1ea2d5;
					}
					_iter_end_1ac1ea2d5:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70915e6_SptrTypeDecl>>()) {
			_case_begin_1ac1e8b1e:;
			{
				jule::Ptr<_1d70915e6_SptrTypeDecl> _149117_sptr = _147835_k.operator jule::Ptr<_1d70915e6_SptrTypeDecl>();;
				return static__1be3ea737_exist(_147822_ident,_149117_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70920b9_PtrTypeDecl>>()) {
			_case_begin_1ac1e8b85:;
			{
				jule::Ptr<_1d70920b9_PtrTypeDecl> _149417_ptr = _147835_k.operator jule::Ptr<_1d70920b9_PtrTypeDecl>();;
				return static__1be3ea737_exist(_147822_ident,_149417_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70919e2_SlcTypeDecl>>()) {
			_case_begin_1ac1e8beb:;
			{
				jule::Ptr<_1d70919e2_SlcTypeDecl> _149717_slc = _147835_k.operator jule::Ptr<_1d70919e2_SlcTypeDecl>();;
				return static__1be3ea737_exist(_147822_ident,_149717_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709274b_ArrTypeDecl>>()) {
			_case_begin_1ac1e8c62:;
			{
				jule::Ptr<_1d709274b_ArrTypeDecl> _150017_arr = _147835_k.operator jule::Ptr<_1d709274b_ArrTypeDecl>();;
				return static__1be3ea737_exist(_147822_ident,_150017_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7092e99_MapTypeDecl>>()) {
			_case_begin_1ac1e8cc8:;
			{
				jule::Ptr<_1d7092e99_MapTypeDecl> _150317_map = _147835_k.operator jule::Ptr<_1d7092e99_MapTypeDecl>();;
				return (static__1be3ea737_exist(_147822_ident,_150317_map.get()._field_key.get()._field_kind) || static__1be3ea737_exist(_147822_ident,_150317_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a1c66_FnDecl>>()) {
			_case_begin_1ac1e8d50:;
			{
				jule::Ptr<_1d70a1c66_FnDecl> _150717_f = _147835_k.operator jule::Ptr<_1d70a1c66_FnDecl>();;
				{
					auto &expr = _150717_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ac200c7a:;
					if (it != expr.end()) {
						jule::Ptr<_1d70a0946_ParamDecl> &_150820_p = *it;
						{
							if (_1d70a0ca9_is_self(_150820_p.ptr())) {
								goto _iter_next_1ac200c7a;
							};
							if (static__1be3ea737_exist(_147822_ident,_150820_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1ac200c7a:;
						++it;
						goto _iter_begin_1ac200c7a;
					}
					_iter_end_1ac200c7a:;
				};
				if ((_150717_f.get()._field_result != nullptr)) {
					return static__1be3ea737_exist(_147822_ident,_150717_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7091ccd_TupleTypeDecl>>()) {
			_case_begin_1ac1e8dc7:;
			{
				jule::Ptr<_1d7091ccd_TupleTypeDecl> _152117_tup = _147835_k.operator jule::Ptr<_1d7091ccd_TupleTypeDecl>();;
				{
					auto &expr = _152117_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1ac203497:;
					if (it != expr.end()) {
						jule::Ptr<_1d709023d_TypeDecl> &_152220_t = *it;
						{
							if (static__1be3ea737_exist(_147822_ident,_152220_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1ac203497:;
						++it;
						goto _iter_begin_1ac203497;
					}
					_iter_end_1ac203497:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709130a_NamespaceTypeDecl>>()) {
			_case_begin_1ac1e8e4e:;
			{
				jule::Ptr<_1d709130a_NamespaceTypeDecl> _152917_ns = _147835_k.operator jule::Ptr<_1d709130a_NamespaceTypeDecl>();;
				return static__1be3ea737_exist(_147822_ident,_152917_ns.get()._field_kind.get()._field_kind);
			}
		}
		else {
			_case_begin_1ac1e86bd:;
			{
				return false;
			}
		}
		_match_end_1ac1e85d0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be3e9ea6_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8ed48b9_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a902d9e0_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a902e99c_stop(_1a902e31a_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1a902ec11_stopped(_1a902e31a_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1a902ee75_finished(_1a902e31a_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1a90301d9_is_last_st(_1a902e31a_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1a9030508_push_err(_1a902e31a_ScopeParser* _self_, jule::Ptr<_20201c3d1_Token> _19227_token, jule::Str _19242_fmt) {
	_1a904abe9_push_err((*_self_)._field_p.ptr(), _19227_token,_19242_fmt,jule::Slice<jule::Any>());
}



inline void _1a9030827_push_suggestion(_1a902e31a_ScopeParser* _self_, jule::Str _19734_fmt, jule::Slice<jule::Any> _19747_args) {
	_1a904b018_push_suggestion((*_self_)._field_p.ptr(), _19734_fmt,jule::Any(_19747_args));
}



inline void _1a9030a9c_insert_as_next(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _20138_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1a902d9e0_stmt>(_1a902d9e0_stmt{._field_tokens=_20138_tokens, });
}



inline jule::Ptr<_1a902d9e0_stmt> _1a9030d11_next(_1a902e31a_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1d70a0270_ScopeTree> _1a90311b8_build_scope(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _21135_tokens, jule::Ptr<_20201c3d1_Token> _21157_end) {
	jule::Ptr<_1d70a0270_ScopeTree> _21217_s = _1a902c88a_new_scope();;
	_21217_s.get()._field_parent=(*_self_)._field_s;
	_21217_s.get()._field_end=_21157_end;
	_1a902e31a_ScopeParser _21517_ssp = _1a902e31a_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1a9039d3c_build(&_21517_ssp, _21135_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1d70a2c45_VarDecl> _1a90314c6_build_var_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _22236_tokens) {
	jule::Ptr<_1d70a2c45_VarDecl> _22317_v = _1a904d6e1_build_var((*_self_)._field_p, _22236_tokens);;
	_22317_v.get()._field_scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1d70a30ec_RetSt> _1a90317d4_build_ret_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _22835_tokens) {
	jule::Ptr<_1d70a30ec_RetSt> _22917_st = jule::new_ptr<_1d70a30ec_RetSt>(_1d70a30ec_RetSt{._field_token=_22835_tokens[0LL], });;
	if ((_22835_tokens.len() > 1LL)) {
		_22835_tokens=_22835_tokens.slice(1LL);
		_22917_st.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _22835_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1d70a375c_Iter> _1a9031ae2_build_while_next_iter(_1a902e31a_ScopeParser* _self_, jule::Ptr<_1a902d9e0_stmt>& _23945_s) {
	jule::Ptr<_1d70a375c_Iter> _24017_it = jule::new_ptr<_1d70a375c_Iter>(_1d70a375c_Iter{._field_token=_23945_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _24317_tokens = _23945_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1d70a4032_WhileKind> _24417_kind = jule::new_ptr<_1d70a4032_WhileKind>(_1d70a4032_WhileKind{});;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _24317_tokens);
	};
	if (_1a90301d9_is_last_st(&(*_self_))) {
		_1a9030508_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1a9030d11_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _25617_st_tokens = _1a903b03b_get_block_expr(_24317_tokens);;
	if ((_25617_st_tokens.len() > 0LL)) {
		jule::Ptr<_1a902d9e0_stmt> _25821_stmt = jule::new_ptr<_1a902d9e0_stmt>(_1a902d9e0_stmt{._field_tokens=_25617_st_tokens, ._field_terminated=_23945_s.get()._field_terminated});;
		_24417_kind.get()._field_next_token=_25617_st_tokens[0LL];
		_24417_kind.get()._field_next=_1a9039a1d_build_st(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_st_tokens.len();;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _26717_block_tokens = _1a904882e_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_block_tokens == nullptr)) {
		_1a902e99c_stop(&(*_self_));
		_1a9030508_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("body is not exist", 17));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1a9030508_push_err(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_scope=_1a90311b8_build_scope(&(*_self_), _26717_block_tokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1d70a4032_WhileKind> _1a9031e00_build_while_iter_kind(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _28445_tokens) {
	return jule::new_ptr<_1d70a4032_WhileKind>(_1d70a4032_WhileKind{._field_expr=_1a904b326_build_expr((*_self_)._field_p, _28445_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a9032230_get_range_kind_keys_tokens(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _29050_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _29118_vars;;
	jule::Slice<_201be0d52_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1a9049038_parts(_29050_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1d70a2c45_VarDecl> _1a903254e_build_range_kind_key(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _29644_tokens) {
	if ((_29644_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1d70a2c45_VarDecl> _30017_key = jule::new_ptr<_1d70a2c45_VarDecl>(_1d70a2c45_VarDecl{._field_token=_29644_tokens[0LL], });;
	if ((_30017_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_mutable=true;
		if ((_29644_tokens.len() == 1LL)) {
			_1a9030508_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_token=_29644_tokens[1LL];
	} else if ((_29644_tokens.len() > 1LL)) {
		_1a9030508_push_err(&(*_self_), _29644_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a9030508_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_ident=_30017_key.get()._field_token.get()._field_kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>> _1a903285c_build_range_kind_keys(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>& _32145_parts) {
	jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32145_parts;
		auto it = expr.begin();
		_iter_begin_1ac37ebb7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1a903254e_build_range_kind_key(&(*_self_), _32321_tokens));;
			}
			_iter_next_1ac37ebb7:;
			++it;
			goto _iter_begin_1ac37ebb7;
		}
		_iter_end_1ac37ebb7:;
	};
	return _32217_keys;
}



inline void _1a9032b9d_setup_range_kind_keys_plain(_1a902e31a_ScopeParser* _self_, jule::Ptr<_1d70a48c3_RangeKind>& _32951_rng, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _32973_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _33017_key_tokens = _1a9032230_get_range_kind_keys_tokens(&(*_self_), _32973_tokens);;
	if ((_33017_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_key_tokens.len() > 2LL)) {
		_1a9030508_push_err(&(*_self_), _32951_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>> _33717_keys = _1a903285c_build_range_kind_keys(&(*_self_), _33017_key_tokens);;
	_32951_rng.get()._field_key_a=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32951_rng.get()._field_key_b=_33717_keys[1LL];
	};
}



inline void _1a9033000_setup_range_kind_keys_explicit(_1a902e31a_ScopeParser* _self_, jule::Ptr<_1d70a48c3_RangeKind>& _34454_rng, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _34476_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _34617_rang = _1a904882e_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34476_tokens);;
	if ((_34517_i < _34476_tokens.len())) {
		_1a9030508_push_err(&(*_self_), _34454_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1a9032b9d_setup_range_kind_keys_plain(&(*_self_), _34454_rng,_34617_rang);
}



inline void _1a9033330_setup_range_kind_keys(_1a902e31a_ScopeParser* _self_, jule::Ptr<_1d70a48c3_RangeKind>& _35345_rng, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _35367_tokens) {
	if ((_35367_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35367_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1a9030508_push_err(&(*_self_), _35367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1a9033000_setup_range_kind_keys_explicit(&(*_self_), _35345_rng,_35367_tokens);
		return;;
	};
	_1a9032b9d_setup_range_kind_keys_plain(&(*_self_), _35345_rng,_35367_tokens);
}



inline jule::Ptr<_1d70a48c3_RangeKind> _1a9033781_build_range_iter_kind(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _36545_var_tokens, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _36614_expr_tokens, jule::Ptr<_20201c3d1_Token>& _36642_in_token) {
	jule::Ptr<_1d70a48c3_RangeKind> _36717_rng = jule::new_ptr<_1d70a48c3_RangeKind>(_1d70a48c3_RangeKind{._field_in_token=_36642_in_token, });;
	if ((_36614_expr_tokens.len() == 0LL)) {
		_1a9030508_push_err(&(*_self_), _36717_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _36614_expr_tokens);
	if ((_36545_var_tokens.len() > 0LL)) {
		_1a9033330_setup_range_kind_keys(&(*_self_), _36717_rng,_36545_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1a9033b38_build_common_iter_kind(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _38146_tokens, jule::Ptr<_20201c3d1_Token>& _38165_err_tok) {
	jule::I64 _38217_brace_n = 0LL;;
	{
		auto &expr = _38146_tokens;
		auto it = expr.begin();
		_iter_begin_1ac38b663:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac38c620:;
							{
								(_38217_brace_n)++;
								goto _iter_next_1ac38b663;
							}
						}
						else {
							_case_begin_1ac38c8ea:;
							{
								(_38217_brace_n)--;
							}
						}
						_match_end_1ac38c6db:;
					};
				};
				if ((_38217_brace_n != 0LL)) {
					goto _iter_next_1ac38b663;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1ac38c312:;
						{
							jule::Slice<jule::Ptr<_20201c3d1_Token>> _40025_decl_tokens = _38146_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_20201c3d1_Token>> _40125_expr_tokens = _38146_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1a9033781_build_range_iter_kind(&(*_self_), _40025_decl_tokens,_40125_expr_tokens,_38321_tok));
						}
					}
					_match_end_1ac38cdb2:;
				};
			}
			_iter_next_1ac38b663:;
			++it;
			_38314_i++;
			goto _iter_begin_1ac38b663;
		}
		_iter_end_1ac38b663:;
	};
	return static_cast<jule::Any>(_1a9031e00_build_while_iter_kind(&(*_self_), _38146_tokens));
}



inline jule::Ptr<_1d70a375c_Iter> _1a9033e46_build_common_iter(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _40840_tokens) {
	jule::Ptr<_1d70a375c_Iter> _40917_it = jule::new_ptr<_1d70a375c_Iter>(_1d70a375c_Iter{._field_token=_40840_tokens[0LL], });;
	_40840_tokens=_40840_tokens.slice(1LL);
	if ((_40840_tokens.len() == 0LL)) {
		_1a902e99c_stop(&(*_self_));
		_1a9030508_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _41917_expr_tokens = _1a903b03b_get_block_expr(_40840_tokens);;
	if ((_41917_expr_tokens.len() > 0LL)) {
		_40917_it.get()._field_kind=_1a9033b38_build_common_iter_kind(&(*_self_), _41917_expr_tokens,_40917_it.get()._field_token);
	};
	jule::I64 _42317_i = _41917_expr_tokens.len();;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _42417_scope_tokens = _1a904882e_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40840_tokens);;
	if ((_42417_scope_tokens == nullptr)) {
		_1a902e99c_stop(&(*_self_));
		_1a9030508_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40840_tokens.len())) {
		_1a9030508_push_err(&(*_self_), _40840_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_scope=_1a90311b8_build_scope(&(*_self_), _42417_scope_tokens,_40840_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1d70a375c_Iter> _1a9034254_build_iter_st(_1a902e31a_ScopeParser* _self_, jule::Ptr<_1a902d9e0_stmt>& _43837_st) {
	if (_43837_st.get()._field_terminated) {
		return _1a9031ae2_build_while_next_iter(&(*_self_), _43837_st);
	};
	return _1a9033e46_build_common_iter(&(*_self_), _43837_st.get()._field_tokens);
}



inline jule::Ptr<_1d70a4c7a_BreakSt> _1a9034562_build_break_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _44538_tokens) {
	jule::Ptr<_1d70a4c7a_BreakSt> _44617_brk = jule::new_ptr<_1d70a4c7a_BreakSt>(_1d70a4c7a_BreakSt{._field_token=_44538_tokens[0LL], });;
	if ((_44538_tokens.len() > 1LL)) {
		if ((_44538_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1a9030508_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			_1a9030827_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_label=_44538_tokens[1LL];
			if ((_44538_tokens.len() > 2LL)) {
				_1a9030508_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1d70a5132_ContSt> _1a9034870_build_cont_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _46337_tokens) {
	jule::Ptr<_1d70a5132_ContSt> _46417_cont = jule::new_ptr<_1d70a5132_ContSt>(_1d70a5132_ContSt{._field_token=_46337_tokens[0LL], });;
	if ((_46337_tokens.len() > 1LL)) {
		if ((_46337_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1a9030508_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			_1a9030827_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_label=_46337_tokens[1LL];
			if ((_46337_tokens.len() > 2LL)) {
				_1a9030508_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1d70a55a5_If> _1a9034b7d_build_if(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _48132_tokens) {
	jule::Ptr<_1d70a55a5_If> _48217_model = jule::new_ptr<_1d70a55a5_If>(_1d70a55a5_If{._field_token=_48132_tokens[0LL], });;
	_48132_tokens=_48132_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _48617_expr_tokens = _1a903b03b_get_block_expr(_48132_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_expr_tokens.len() == 0LL)) {
		_1a9030508_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _49317_scope_tokens = _1a904882e_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48132_tokens);;
	if ((_49317_scope_tokens == nullptr)) {
		_1a902e99c_stop(&(*_self_));
		_1a9030508_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("body is not exist", 17));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20201c3d1_Token> _50017_end = _48132_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48132_tokens.len())) {
		if ((_48132_tokens[_48717_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_48132_tokens=_48132_tokens.slice(_48717_i);
		} else {
			_1a9030508_push_err(&(*_self_), _48132_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48132_tokens=nullptr;
		};
	};
	_48217_model.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _48617_expr_tokens);
	_48217_model.get()._field_scope=_1a90311b8_build_scope(&(*_self_), _49317_scope_tokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1d70a595c_Else> _1a9034e8b_build_else(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _51434_tokens) {
	jule::Ptr<_1d70a595c_Else> _51517_els = jule::new_ptr<_1d70a595c_Else>(_1d70a595c_Else{._field_token=_51434_tokens[0LL], });;
	_51434_tokens=_51434_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _52017_scope_tokens = _1a904882e_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51434_tokens);;
	if ((_52017_scope_tokens == nullptr)) {
		if ((_51917_i < _51434_tokens.len())) {
			_1a9030508_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1a902e99c_stop(&(*_self_));
			_1a9030508_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("body is not exist", 17));
			_1a9030827_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51434_tokens.len())) {
		_1a9030508_push_err(&(*_self_), _51434_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_scope=_1a90311b8_build_scope(&(*_self_), _52017_scope_tokens,_51434_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1d70a5dd0_Conditional> _1a9035299_build_if_else_chain(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _53842_tokens) {
	jule::Ptr<_1d70a5dd0_Conditional> _53917_chain = jule::new_ptr<_1d70a5dd0_Conditional>(_1d70a5dd0_Conditional{._field_head=_1a9034b7d_build_if(&(*_self_), _53842_tokens), });;
	if ((_53917_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53842_tokens.len() != 0LL)) {
		{
			if ((_53842_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1ac3ab573;
			};
			if (((_53842_tokens.len() > 1LL) && (_53842_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53842_tokens=_53842_tokens.slice(1LL);
				jule::Ptr<_1d70a55a5_If> _55125_elif = _1a9034b7d_build_if(&(*_self_), _53842_tokens);;
				_53917_chain.get()._field_tail = jule::alloc_for_append(_53917_chain.get()._field_tail,1);_53917_chain.get()._field_tail.__push(_55125_elif);;
				goto _iter_next_1ac3ab573;
			};
			_53917_chain.get()._field_default=_1a9034e8b_build_else(&(*_self_), _53842_tokens);
			goto _iter_end_1ac3ab573;
		}
	_iter_next_1ac3ab573:;
	}
	_iter_end_1ac3ab573:;;
	return _53917_chain;
}



inline jule::Ptr<_1d7096354_CoExpr> _1a90355a7_build_co_call_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _56139_tokens) {
	jule::Ptr<_1d7096354_CoExpr> _56217_c = jule::new_ptr<_1d7096354_CoExpr>(_1d7096354_CoExpr{._field_token=_56139_tokens[0LL], });;
	_56139_tokens=_56139_tokens.slice(1LL);
	_56217_c.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _56139_tokens);
	return _56217_c;
}



inline jule::Ptr<_1d709cc95_GotoSt> _1a90358b5_build_goto_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _57037_tokens) {
	jule::Ptr<_1d709cc95_GotoSt> _57117_gt = jule::new_ptr<_1d709cc95_GotoSt>(_1d709cc95_GotoSt{._field_token=_57037_tokens[0LL], });;
	if ((_57037_tokens.len() == 1LL)) {
		_1a9030508_push_err(&(*_self_), _57117_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57037_tokens.len() > 2LL)) {
		_1a9030508_push_err(&(*_self_), _57037_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20201c3d1_Token> _58017_ident_token = _57037_tokens[1LL];;
	if ((_58017_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a9030508_push_err(&(*_self_), _58017_ident_token,jule::Str("invalid syntax", 14));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_label=_58017_ident_token;
	return _57117_gt;
}



inline jule::Ptr<_1d709d081_FallSt> _1a9035bc3_build_fall_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _59037_tokens) {
	jule::Ptr<_1d709d081_FallSt> _59117_fll = jule::new_ptr<_1d709d081_FallSt>(_1d709d081_FallSt{._field_token=_59037_tokens[0LL]});;
	if ((_59037_tokens.len() > 1LL)) {
		_1a9030508_push_err(&(*_self_), _59037_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1d70a65a6_TypeAliasDecl> _1a9035ed1_build_type_alias_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _60043_tokens) {
	jule::Ptr<_1d70a65a6_TypeAliasDecl> _60117_tad = _1a904c921_build_type_alias_decl((*_self_)._field_p, _60043_tokens);;
	_60117_tad.get()._field_scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1a9036443_push_case_expr(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _60637_tokens, jule::Ptr<_20201c3d1_Token> _60659_token, jule::Bool _6079_type_match, jule::Slice<jule::Ptr<_1d709475e_Expr>>& _60732_exprs) {
	if ((_60637_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_type_match) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1d709023d_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1a904c613_build_type((*_self_)._field_p, _60637_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(jule::new_ptr<_1d709475e_Expr>(_1d709475e_Expr{._field_token=_60637_tokens[0LL], ._field_end=_60637_tokens[(_60637_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60637_tokens.len())) {
				_1a9030508_push_err(&(*_self_), _60637_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(_1a904b326_build_expr((*_self_)._field_p, _60637_tokens));;
}



inline jule::Slice<jule::Ptr<_1d709475e_Expr>> _1a90367ea_build_case_exprs(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _63040_tokens, jule::Bool _63058_type_match) {
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1d709475e_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_brace_n = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63040_tokens;
		auto it = expr.begin();
		_iter_begin_1ac3bc919:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ac3bd970:;
							{
								(_63317_brace_n)++;
							}
						}
						else {
							_case_begin_1ac3bdc4a:;
							{
								(_63317_brace_n)--;
							}
						}
						_match_end_1ac3bda3b:;
					};
					goto _iter_next_1ac3bc919;
				} else if ((_63317_brace_n != 0LL)) {
					goto _iter_next_1ac3bc919;
				};
				{
					
					if (((_63521_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1ac3be93d:;
						{
							jule::Slice<jule::Ptr<_20201c3d1_Token>> _65121_expr_tokens = _63040_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_expr_tokens.len() == 0LL)) {
								_1a9030508_push_err(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1a9036443_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1ac3be9a4:;
						{
							_1a9036443_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							_63040_tokens=_63040_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1ac3be4cb:;
				};
			}
			_iter_next_1ac3bc919:;
			++it;
			_63514_i++;
			goto _iter_begin_1ac3bc919;
		}
		_iter_end_1ac3bc919:;
	};
	_1a9030508_push_err(&(*_self_), _63040_tokens[0LL],jule::Str("invalid syntax", 14));
	_63040_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1d70a0270_ScopeTree> _1a9036b08_build_case_scope(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _66940_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1a902d6e3_skip_st(_67221_i,_66940_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1ac3c3b0c;
			};
			jule::Ptr<_20201c3d1_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1ac3c3b0c;
			};
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _68221_scope_tokens = _66940_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1d70a0270_ScopeTree> _68321_scope = _1a90311b8_build_scope(&(*_self_), _68221_scope_tokens,_66940_tokens[_67017_n]);;
			_66940_tokens=_66940_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1ac3c3b0c:;
	}
	_iter_end_1ac3c3b0c:;;
	jule::Ptr<_20201c3d1_Token> _68717_end = jule::Ptr<_20201c3d1_Token>();;
	if ((_66940_tokens.len() > 0LL)) {
		_68717_end=_66940_tokens[(_66940_tokens.len() - 1LL)];
	};
	jule::Ptr<_1d70a0270_ScopeTree> _69117_scope = _1a90311b8_build_scope(&(*_self_), _66940_tokens,_68717_end);;
	_66940_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1d70a6a29_Case>,jule::Bool> _1a9036eb0_build_case(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _69634_tokens, jule::Bool _69652_type_match) {
	jule::Ptr<_1d70a6a29_Case> _69717_c = jule::new_ptr<_1d70a6a29_Case>(_1d70a6a29_Case{._field_token=_69634_tokens[0LL], });;
	_69634_tokens=_69634_tokens.slice(1LL);
	_69717_c.get()._field_exprs=_1a90367ea_build_case_exprs(&(*_self_), _69634_tokens,_69652_type_match);
	_69717_c.get()._field_scope=_1a9036b08_build_case_scope(&(*_self_), _69634_tokens);
	jule::Bool _70313_is_default = (_69717_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d70a6a29_Case>>,jule::Ptr<_1d70a595c_Else>> _1a9037367_build_cases(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _70734_tokens, jule::Bool _70752_type_match) {
	jule::Slice<jule::Ptr<_1d70a6a29_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1d70a595c_Else> _70917_def = nullptr;;
	jule::Bool _71017_def_not_last = false;;
	while ((_70734_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20201c3d1_Token> _71221_tok = _70734_tokens[0LL];;
			if (((_71221_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1a9030508_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1ac3cbbc0;
			};
			jule::Ptr<_1d70a6a29_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1a9036eb0_build_case(&(*_self_), _70734_tokens,_70752_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1d70a595c_Else>(_1d70a595c_Else{._field_token=_71722_c.get()._field_token, ._field_scope=_71722_c.get()._field_scope});
				} else {
					_1a9030508_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_def_not_last=(_71017_def_not_last || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1ac3cbbc0:;
	}
	_iter_end_1ac3cbbc0:;;
	if (_71017_def_not_last) {
		_1a9030508_push_err(&(*_self_), _70917_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1d70a7200_MatchCase> _1a9037675_build_match_case(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _74139_tokens) {
	jule::Ptr<_1d70a7200_MatchCase> _74217_m = jule::new_ptr<_1d70a7200_MatchCase>(_1d70a7200_MatchCase{._field_token=_74139_tokens[0LL], });;
	_74139_tokens=_74139_tokens.slice(1LL);
	if (((_74139_tokens.len() > 0LL) && (_74139_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_type_match=true;
		_74139_tokens=_74139_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _75217_expr_tokens = _1a903b03b_get_block_expr(_74139_tokens);;
	if ((_75217_expr_tokens.len() > 0LL)) {
		_74217_m.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _75217_expr_tokens);
	} else if (_74217_m.get()._field_type_match) {
		_1a9030508_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_expr_tokens.len();;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _76017_block_toks = _1a904882e_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74139_tokens);;
	if ((_76017_block_toks == nullptr)) {
		_1a902e99c_stop(&(*_self_));
		_1a9030508_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("body is not exist", 17));
		_1a9030827_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74139_tokens.len())) {
		_1a9030508_push_err(&(*_self_), _74139_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_end=_74139_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_cases,_74217_m.get()._field_default) = _1a9037367_build_cases(&(*_self_), _76017_block_toks,_74217_m.get()._field_type_match);
	return _74217_m;
}



inline jule::Ptr<_1d70a0270_ScopeTree> _1a9037983_build_scope_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _77437_tokens) {
	jule::Bool _77517_is_unsafe = false;;
	jule::Bool _77617_is_deferred = false;;
	jule::Ptr<_20201c3d1_Token> _77717_token = _77437_tokens[0LL];;
	if ((_77717_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77517_is_unsafe=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1a9030508_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77437_tokens[0LL];
		if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77617_is_deferred=true;
			_77437_tokens=_77437_tokens.slice(1LL);
			if ((_77437_tokens.len() == 0LL)) {
				_1a9030508_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77617_is_deferred=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1a9030508_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _80417_scope_tokens = _1a904882e_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77437_tokens);;
	if ((_80417_scope_tokens == nullptr)) {
		_1a9030508_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77437_tokens.len())) {
		_1a9030508_push_err(&(*_self_), _77437_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1d70a0270_ScopeTree> _81117_scope = _1a90311b8_build_scope(&(*_self_), _80417_scope_tokens,_77437_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_unsafety=_77517_is_unsafe;
	_81117_scope.get()._field_deferred=_77617_is_deferred;
	return _81117_scope;
}



inline jule::Ptr<_1d709c8dd_LabelSt> _1a9037c91_build_label_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _81738_tokens) {
	jule::Ptr<_1d709c8dd_LabelSt> _81817_lbl = jule::new_ptr<_1d709c8dd_LabelSt>(_1d709c8dd_LabelSt{._field_token=_81738_tokens[0LL], ._field_ident=_81738_tokens[0LL].get()._field_kind});;
	if ((_81738_tokens.len() > 2LL)) {
		_81738_tokens=_81738_tokens.slice(2LL);
		_1a9030a9c_insert_as_next(&(*_self_), _81738_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1a903809e_build_id_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _83235_tokens) {
	jule::Bool _83265_ok = jule::Bool();
	if ((_83235_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83265_ok);
	};
	jule::Ptr<_20201c3d1_Token> _83717_token = _83235_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ac3e4413:;
			{
				_83265_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1a9037c91_build_label_st(&(*_self_), _83235_tokens)),_83265_ok);
			}
		}
		_match_end_1ac3e50c3:;
	};
	return std::make_tuple(jule::Any(),_83265_ok);
}



inline jule::Ptr<_1a9047102_AssignInfo> _1a90383ac_build_assign_info(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _84641_tokens) {
	jule::Ptr<_1a9047102_AssignInfo> _84717_info = jule::new_ptr<_1a9047102_AssignInfo>(_1a9047102_AssignInfo{._field_ok=true});;
	jule::I64 _85017_brace_n = 0LL;;
	{
		auto &expr = _84641_tokens;
		auto it = expr.begin();
		_iter_begin_1ac3e6ea4:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac3e7ea5:;
							{
								(_85017_brace_n)++;
							}
						}
						else {
							_case_begin_1ac3e8280:;
							{
								(_85017_brace_n)--;
							}
						}
						_match_end_1ac3e8071:;
					};
				};
				{
					
					if ((_85017_brace_n > 0LL)) {
						_case_begin_1ac3e8967:;
						{
							goto _iter_next_1ac3e6ea4;
						}
					}
					else if ((_85121_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1ac3e89cd:;
						{
							goto _iter_next_1ac3e6ea4;
						}
					}
					else if ((!(_202021eb8_is_assign_op(_85121_token.get()._field_kind)))) {
						_case_begin_1ac3e8a55:;
						{
							goto _iter_next_1ac3e6ea4;
						}
					}
					_match_end_1ac3e8747:;
				};
				_84717_info.get()._field_l=_84641_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84641_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_202021c21_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1ac3e6ea4;
				};
				_84717_info.get()._field_r=_84641_tokens.slice((_85114_i + 1LL));
				if (_202021c21_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1a9030508_push_err(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1ac3e6ea4;
			}
			_iter_next_1ac3e6ea4:;
			++it;
			_85114_i++;
			goto _iter_begin_1ac3e6ea4;
		}
		_iter_end_1ac3e6ea4:;
	};
	return _84717_info;
}



inline jule::Ptr<_1d709d68b_AssignLeft> _1a90386ba_build_assign_l(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _89438_tokens) {
	jule::Ptr<_1d709d68b_AssignLeft> _89517_l = jule::new_ptr<_1d709d68b_AssignLeft>(_1d709d68b_AssignLeft{._field_token=_89438_tokens[0LL], });;
	if ((_89438_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_ident=_89517_l.get()._field_token.get()._field_kind;
	};
	_89517_l.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _89438_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1d709d68b_AssignLeft>> _1a90389c8_build_assign_ls(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>& _90739_parts) {
	jule::Slice<jule::Ptr<_1d709d68b_AssignLeft>> _90817_lefts = nullptr;;
	{
		auto &expr = _90739_parts;
		auto it = expr.begin();
		_iter_begin_1ac400a6d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _90921_part = *it;
			{
				jule::Ptr<_1d709d68b_AssignLeft> _91021_l = _1a90386ba_build_assign_l(&(*_self_), _90921_part);;
				_90817_lefts = jule::alloc_for_append(_90817_lefts,1);_90817_lefts.__push(_91021_l);;
			}
			_iter_next_1ac400a6d:;
			++it;
			goto _iter_begin_1ac400a6d;
		}
		_iter_end_1ac400a6d:;
	};
	return _90817_lefts;
}



inline std::tuple<jule::Ptr<_1d709dbca_AssignSt>,jule::Bool> _1a9038cd6_build_plain_assign(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _91742_tokens) {
	jule::Ptr<_1a9047102_AssignInfo> _91817_info = _1a90383ac_build_assign_info(&(*_self_), _91742_tokens);;
	if ((!(_91817_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1d709dbca_AssignSt> _92317_assign = jule::new_ptr<_1d709dbca_AssignSt>(_1d709dbca_AssignSt{._field_setter=_91817_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _92718_parts;;
	jule::Slice<_201be0d52_Log> _92725_errs;;
	std::tie(_92718_parts,_92725_errs) = _1a9049038_parts(_91817_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92725_errs);
		return std::make_tuple(nullptr,false);
	};
	_92317_assign.get()._field_left=_1a90389c8_build_assign_ls(&(*_self_), _92718_parts);
	if ((_91817_info.get()._field_r != nullptr)) {
		_92317_assign.get()._field_right=_1a904b326_build_expr((*_self_)._field_p, _91817_info.get()._field_r);
	};
	return std::make_tuple(_92317_assign,true);
}



inline std::tuple<jule::Ptr<_1d709dbca_AssignSt>,jule::Bool> _1a90390e4_build_decl_assign(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _94140_tokens) {
	if ((_94140_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94140_tokens=_94140_tokens.slice(1LL);
	jule::Ptr<_20201c3d1_Token> _94717_token = _94140_tokens[0LL];;
	if (((_94717_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94717_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1d709dbca_AssignSt> _95217_assign = jule::new_ptr<_1d709dbca_AssignSt>(_1d709dbca_AssignSt{._field_declarative=true, });;
	jule::I64 _95617_i = 0LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _95717_rang = _1a904882e_range(_95617_i,jule::Str("(", 1),jule::Str(")", 1),_94140_tokens);;
	if ((_95717_rang == nullptr)) {
		_1a9030508_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95617_i + 1LL) < _94140_tokens.len())) {
		_95217_assign.get()._field_setter=_94140_tokens[_95617_i];
		(_95617_i)++;
		jule::Slice<jule::Ptr<_20201c3d1_Token>> _96421_expr_tokens = _94140_tokens.slice(_95617_i);;
		_95217_assign.get()._field_right=_1a904b326_build_expr((*_self_)._field_p, _96421_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _96918_parts;;
	jule::Slice<_201be0d52_Log> _96925_errs;;
	std::tie(_96918_parts,_96925_errs) = _1a9049038_parts(_95717_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96925_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96925_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96918_parts;
		auto it = expr.begin();
		_iter_begin_1ac40c591:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _97521_part = *it;
			{
				jule::Bool _97621_is_mut = false;;
				jule::Bool _97721_is_ref = false;;
				_94717_token=_97521_part[0LL];
				if ((_94717_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97621_is_mut=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1a9030508_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ac40c591;
					};
				};
				if (((_97521_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97521_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97721_is_ref=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1a9030508_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ac40c591;
					};
				};
				if ((((_97521_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97521_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97521_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1a9030508_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1ac40c591;
				};
				jule::Ptr<_1d709d68b_AssignLeft> _100521_l = _1a90386ba_build_assign_l(&(*_self_), _97521_part);;
				_100521_l.get()._field_mutable=_97621_is_mut;
				_100521_l.get()._field_reference=_97721_is_ref;
				_95217_assign.get()._field_left = jule::alloc_for_append(_95217_assign.get()._field_left,1);_95217_assign.get()._field_left.__push(_100521_l);;
			}
			_iter_next_1ac40c591:;
			++it;
			goto _iter_begin_1ac40c591;
		}
		_iter_end_1ac40c591:;
	};
	return std::make_tuple(_95217_assign,true);
}



inline std::tuple<jule::Ptr<_1d709dbca_AssignSt>,jule::Bool> _1a9039402_build_assign_st(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _101439_tokens) {
	jule::Ptr<_1d709dbca_AssignSt> _101459_st = jule::Ptr<_1d709dbca_AssignSt>();
	jule::Bool _101474_ok = jule::Bool();
	if ((!(_1a9047498_check_assign_tokens(_101439_tokens)))) {
		_101459_st = nullptr;
		_101474_ok = false;
		return std::make_tuple(_101459_st,_101474_ok);
	};
	{
		auto &_match_expr{ _101439_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac416e19:;
			{
				std::tie(_101459_st,_101474_ok) = _1a90390e4_build_decl_assign(&(*_self_), _101439_tokens);
			}
		}
		else {
			_case_begin_1ac416600:;
			{
				std::tie(_101459_st,_101474_ok) = _1a9038cd6_build_plain_assign(&(*_self_), _101439_tokens);
			}
		}
		_match_end_1ac41659a:;
	};
	return std::make_tuple(_101459_st,_101474_ok);
}



inline jule::Ptr<_1d7095100_UseExpr> _1a9039710_build_use_expr(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _102938_tokens) {
	if ((_102938_tokens.len() == 1LL)) {
		_1a9030508_push_err(&(*_self_), _102938_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1d7095100_UseExpr> _103517_ue = jule::new_ptr<_1d7095100_UseExpr>(_1d7095100_UseExpr{._field_token=_102938_tokens[0LL], });;
	_102938_tokens=_102938_tokens.slice(1LL);
	_103517_ue.get()._field_expr=_1a904b326_build_expr((*_self_)._field_p, _102938_tokens);
	return _103517_ue;
}



inline jule::Any _1a9039a1d_build_st(_1a902e31a_ScopeParser* _self_, jule::Ptr<_1a902d9e0_stmt>& _104432_st) {
	jule::Ptr<_20201c3d1_Token> _104517_token = _104432_st.get()._field_tokens[0LL];;
	if ((_104517_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104722_s;;
		jule::Bool _104725_ok;;
		std::tie(_104722_s,_104725_ok) = _1a903809e_build_id_st(&(*_self_), _104432_st.get()._field_tokens);
		if (_104725_ok) {
			return _104722_s;
		};
	};
	jule::Ptr<_1d709dbca_AssignSt> _105318_s;;
	jule::Bool _105321_ok;;
	std::tie(_105318_s,_105321_ok) = _1a9039402_build_assign_st(&(*_self_), _104432_st.get()._field_tokens);
	if (_105321_ok) {
		return static_cast<jule::Any>(_105318_s);
	};
	{
		auto &_match_expr{ _104517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac41c040:;
			{
				return static_cast<jule::Any>(_1a9039710_build_use_expr(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ac41bd0e:;
			{
				return static_cast<jule::Any>(_1a90314c6_build_var_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ac41c408:;
			{
				return static_cast<jule::Any>(_1a90317d4_build_ret_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1ac41c46e:;
			{
				return static_cast<jule::Any>(_1a9034254_build_iter_st(&(*_self_), _104432_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ac41c4d5:;
			{
				return static_cast<jule::Any>(_1a9034562_build_break_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1ac41c54b:;
			{
				return static_cast<jule::Any>(_1a9034870_build_cont_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac41c5b2:;
			{
				return static_cast<jule::Any>(_1a9035299_build_if_else_chain(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ac41c628:;
			{
				return static_cast<jule::Any>(_1a90355a7_build_co_call_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ac41c68e:;
			{
				return static_cast<jule::Any>(_1a90358b5_build_goto_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ac41c705:;
			{
				return static_cast<jule::Any>(_1a9035bc3_build_fall_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac41c76b:;
			{
				return static_cast<jule::Any>(_1a9035ed1_build_type_alias_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac41c7d2:;
			{
				return static_cast<jule::Any>(_1a9037675_build_match_case(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ac41c848:;
			{
				return static_cast<jule::Any>(_1a9037983_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac41c8ae:;
			{
				if ((_104517_token.get()._field_kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1a9037983_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
				};
			}
		}
		_match_end_1ac41c22c:;
	};
	jule::Ptr<_1d709475e_Expr> _109417_expr = _1a904b326_build_expr((*_self_)._field_p, _104432_st.get()._field_tokens);;
	if ((_109417_expr != nullptr)) {
		return static_cast<jule::Any>(_109417_expr);
	};
	_1a9030508_push_err(&(*_self_), _104517_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1a9039d3c_build(_1a902e31a_ScopeParser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _110229_tokens, jule::Ptr<_1d70a0270_ScopeTree>& _110252_s) {
	if ((_110252_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1a902dd86_split_stmts(_110229_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110252_s;
	while (((!(_1a90301d9_is_last_st(&(*_self_)))) && (!(_1a902ee75_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1a902d9e0_stmt> _111121_st = _1a9030d11_next(&(*_self_));;
			jule::Any _111221_data = _1a9039a1d_build_st(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1d709eb65_Stmt{._field_token=_111121_st.get()._field_tokens[0LL], ._field_data=_111221_data});;
			};
			if (_1a902ec11_stopped(&(*_self_))) {
				goto _iter_end_1ac426c2b;
			};
		}
	_iter_next_1ac426c2b:;
	}
	_iter_end_1ac426c2b:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a902e31a_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a903a8dc_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1a903c636_push_err(_1a903bd72_ExprBuilder* _self_, jule::Ptr<_20201c3d1_Token> _21927_token, jule::Str _21942_fmt, jule::Slice<jule::Any> _21955_args) {
	_1a904abe9_push_err((*_self_)._field_p.ptr(), _21927_token,_21942_fmt,jule::Any(_21955_args));
}



inline void _1a903c955_push_suggestion(_1a903bd72_ExprBuilder* _self_, jule::Str _22434_fmt, jule::Slice<jule::Any> _22447_args) {
	_1a904b018_push_suggestion((*_self_)._field_p.ptr(), _22434_fmt,jule::Any(_22447_args));
}



inline jule::Ptr<_1d70953db_TupleExpr> _1a903cc63_build_tuple(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>& _22835_parts) {
	jule::Ptr<_1d70953db_TupleExpr> _22917_tuple = jule::new_ptr<_1d70953db_TupleExpr>(_1d70953db_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1d709475e_Expr>>::alloc(0LL,_22835_parts.len())});;
	{
		auto &expr = _22835_parts;
		auto it = expr.begin();
		_iter_begin_1ac449c71:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _23221_part = *it;
			{
				_22917_tuple.get()._field_expr = jule::alloc_for_append(_22917_tuple.get()._field_expr,1);_22917_tuple.get()._field_expr.__push(_1a904671c_build_from_tokens(&(*_self_), _23221_part));;
			}
			_iter_next_1ac449c71:;
			++it;
			goto _iter_begin_1ac449c71;
		}
		_iter_end_1ac449c71:;
	};
	return _22917_tuple;
}



inline jule::Ptr<_1d7095793_LitExpr> _1a903d071_build_lit(_1a903bd72_ExprBuilder* _self_, jule::Ptr<_20201c3d1_Token> _23828_token) {
	return jule::new_ptr<_1d7095793_LitExpr>(_1d7095793_LitExpr{._field_token=_23828_token, ._field_value=_23828_token.get()._field_kind});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a903d37e_build_primitive_type(_1a903bd72_ExprBuilder* _self_, jule::Ptr<_20201c3d1_Token>& _24540_token) {
	return _1a905ad19_build_prim_type(_24540_token);
}



inline jule::Any _1a903d68c_build_single(_1a903bd72_ExprBuilder* _self_, jule::Ptr<_20201c3d1_Token> _24935_token) {
	{
		auto &_match_expr{ _24935_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ac44bb0d:;
			{
				return static_cast<jule::Any>(_1a903d071_build_lit(&(*_self_), _24935_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac44bb74:;
			{
				if ((_24935_token.get()._field_kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1d7097388_VariadicExpr>(_1d7097388_VariadicExpr{._field_token=_24935_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ac44bbda:;
			{
				return static_cast<jule::Any>(_1a903b899_build_ident_expr(_24935_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac44bc62:;
			{
				return static_cast<jule::Any>(_1a903d37e_build_primitive_type(&(*_self_), _24935_token));
			}
		}
		_match_end_1ac44b9dc:;
	};
	_1a903c636_push_err(&(*_self_), _24935_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d70967c7_IdentExpr> _1a903d99a_build_cpp_linked_ident(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _27046_tokens) {
	if ((_27046_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_27046_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1a903c636_push_err(&(*_self_), _27046_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20201c3d1_Token> _27817_token = _27046_tokens[2LL];;
	if ((_27817_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a903c636_push_err(&(*_self_), _27046_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d70967c7_IdentExpr> _28417_expr = _1a903b899_build_ident_expr(_27817_token);;
	_28417_expr.get()._field_cpp_linked=true;
	return _28417_expr;
}



inline jule::Ptr<_1d7096ed1_UnaryExpr> _1a903dca8_build_unary(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _28934_tokens) {
	jule::Ptr<_20201c3d1_Token> _29017_op = _28934_tokens[0LL];;
	if ((_28934_tokens.len() == 1LL)) {
		_1a903c636_push_err(&(*_self_), _29017_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_20201cada_is_unary_op(_29017_op.get()._field_kind)))) {
		_1a903c636_push_err(&(*_self_), _29017_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_29017_op.get()._field_kind)}));
		return nullptr;
	};
	_28934_tokens=_28934_tokens.slice(1LL);
	return jule::new_ptr<_1d7096ed1_UnaryExpr>(_1d7096ed1_UnaryExpr{._field_op=_29017_op, ._field_expr=_1a904671c_build_from_tokens(&(*_self_), _28934_tokens)});
}



inline jule::Ptr<_1d709806a_SubIdentExpr> _1a903e0b6_build_obj_sub_ident(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _31042_tokens) {
	jule::I64 _31117_i = (_31042_tokens.len() - 1LL);;
	jule::Ptr<_20201c3d1_Token> _31217_ident_token = _31042_tokens[_31117_i];;
	(_31117_i)--;
	_31042_tokens=_31042_tokens.slice(0LL,_31117_i);
	if ((_31042_tokens.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _31217_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d709806a_SubIdentExpr>(_1d709806a_SubIdentExpr{._field_expr=_1a904671c_build_from_tokens(&(*_self_), _31042_tokens), ._field_ident=_31217_ident_token});
}



inline jule::Ptr<_1d7097ae7_NsSelectionExpr> _1a903e3c4_build_ns_sub_ident(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _32542_tokens) {
	jule::Ptr<_1d7097ae7_NsSelectionExpr> _32617_ns = jule::new_ptr<_1d7097ae7_NsSelectionExpr>(_1d7097ae7_NsSelectionExpr{});;
	{
		auto &expr = _32542_tokens;
		auto it = expr.begin();
		_iter_begin_1ac459236:;
		if (it != expr.end()) {
			jule::I64 _32714_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _32721_token = *it;
			{
				if (((_32714_i & 1LL) == 0LL)) {
					if ((_32721_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1a903c636_push_err(&(*_self_), _32721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1a903c955_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32617_ns.get()._field_ns = jule::alloc_for_append(_32617_ns.get()._field_ns,1);_32617_ns.get()._field_ns.__push(_32721_token);;
				} else if ((_32721_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a903c636_push_err(&(*_self_), _32721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1a903c955_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ac459236:;
			++it;
			_32714_i++;
			goto _iter_begin_1ac459236;
		}
		_iter_end_1ac459236:;
	};
	_32617_ns.get()._field_ident=_32617_ns.get()._field_ns[(_32617_ns.get()._field_ns.len() - 1LL)];
	_32617_ns.get()._field_ns=_32617_ns.get()._field_ns.slice(0LL,(_32617_ns.get()._field_ns.len() - 1LL));
	return _32617_ns;
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a903e6d2_build_type(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _34434_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Ptr<_1d709023d_TypeDecl> _34618_t;;
	jule::Bool _34621_ok;;
	std::tie(_34618_t,_34621_ok) = _1a904c613_build_type((*_self_)._field_p, _34434_tokens,(&(_34517_i)),false);
	if ((!(_34621_ok))) {
		_1a903c636_push_err(&(*_self_), _34434_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34517_i < _34434_tokens.len())) {
		_1a903c636_push_err(&(*_self_), _34434_tokens[_34517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34618_t;
}



inline jule::Any _1a903e9e0_build_sub_ident(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _35839_tokens) {
	jule::I64 _35913_i = (_35839_tokens.len() - 2LL);;
	jule::Ptr<_20201c3d1_Token> _36013_token = _35839_tokens[_35913_i];;
	{
		auto &_match_expr{ _36013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ac462096:;
			{
				return static_cast<jule::Any>(_1a903e0b6_build_obj_sub_ident(&(*_self_), _35839_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac4625c4:;
			{
				return static_cast<jule::Any>(_1a903e3c4_build_ns_sub_ident(&(*_self_), _35839_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac46263a:;
			{
				if ((_36013_token.get()._field_kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1a903e6d2_build_type(&(*_self_), _35839_tokens));
				};
			}
		}
		_match_end_1ac46242b:;
	};
	_1a903c636_push_err(&(*_self_), _36013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d7097388_VariadicExpr> _1a903eced_build_variadic(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _37637_tokens) {
	jule::Ptr<_20201c3d1_Token> _37717_token = _37637_tokens[(_37637_tokens.len() - 1LL)];;
	_37637_tokens=_37637_tokens.slice(0LL,(_37637_tokens.len() - 1LL));
	return jule::new_ptr<_1d7097388_VariadicExpr>(_1d7097388_VariadicExpr{._field_token=_37717_token, ._field_expr=_1a904671c_build_from_tokens(&(*_self_), _37637_tokens)});
}



inline jule::Any _1a904010b_build_op_right(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _38538_tokens) {
	jule::Ptr<_20201c3d1_Token> _38617_token = _38538_tokens[(_38538_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ac466b28:;
			{
				_38538_tokens=_38538_tokens.slice(0LL,(_38538_tokens.len() - 1LL));
				jule::Any _39021_d = _1a9046101_build(&(*_self_), _38538_tokens);;
				if ((_39021_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _39021_d };
					
					if (_match_expr.type_is<jule::Ptr<_1d7098ae8_FnCallExpr>>()) {
						_case_begin_1ac4684a9:;
						{
							_39021_d.operator jule::Ptr<_1d7098ae8_FnCallExpr>().get()._field_exception=jule::new_ptr<_1d70a0270_ScopeTree>(_1d70a0270_ScopeTree{._field_deferred=true, });
							return _39021_d;
						}
					}
					_match_end_1ac4683bb:;
				};
			}
		}
		_match_end_1ac466a7e:;
	};
	_1a903c636_push_err(&(*_self_), _38617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d7094a4a_RangeExpr> _1a904043b_build_between_parentheses(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _40648_tokens) {
	if ((_40648_tokens.len() == 2LL)) {
		_1a903c636_push_err(&(*_self_), _40648_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40648_tokens=_40648_tokens.slice(1LL,(_40648_tokens.len() - 1LL));
	return jule::new_ptr<_1d7094a4a_RangeExpr>(_1d7094a4a_RangeExpr{._field_expr=_1a904671c_build_from_tokens(&(*_self_), _40648_tokens)});
}



inline jule::Ptr<_1d7097740_CastExpr> _1a904075a_try_build_cast(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _41838_tokens) {
	jule::I64 _41917_range_n = 0LL;;
	{
		auto &expr = _41838_tokens;
		auto it = expr.begin();
		_iter_begin_1ac46bb50:;
		if (it != expr.end()) {
			jule::I64 _42013_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _42016_token = *it;
			{
				if ((_42016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _42016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac46ca63:;
							{
								(_41917_range_n)++;
								goto _iter_next_1ac46bb50;
							}
						}
						else {
							_case_begin_1ac46cd3d:;
							{
								(_41917_range_n)--;
							}
						}
						_match_end_1ac46cb2e:;
					};
				};
				if ((_41917_range_n > 0LL)) {
					goto _iter_next_1ac46bb50;
				} else if (((_42013_i + 1LL) == _41838_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_20201c3d1_Token>> _43921_type_tokens = _41838_tokens.slice(0LL,(_42013_i + 1LL));;
				jule::Slice<jule::Ptr<_20201c3d1_Token>> _44021_expr_tokens = _41838_tokens.slice((_42013_i + 1LL));;
				if ((_44021_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_20201c3d1_Token> _44717_tok = _44021_expr_tokens[0LL];;
				if (((_44717_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44717_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1d7097740_CastExpr> _45221_cast = jule::new_ptr<_1d7097740_CastExpr>(_1d7097740_CastExpr{});;
				if ((_44021_expr_tokens.len() == 2LL)) {
					_1a903c636_push_err(&(*_self_), _44021_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1a903c955_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43921_type_tokens.len() == 2LL)) {
					_1a903c636_push_err(&(*_self_), _43921_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1a903c955_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43921_type_tokens=_43921_type_tokens.slice(1LL,(_43921_type_tokens.len() - 1LL));
					jule::I64 _46625_type_index = 0LL;;
					jule::Ptr<_1d709023d_TypeDecl> _46726_t;;
					jule::Bool _46729_ok;;
					std::tie(_46726_t,_46729_ok) = _1a904c613_build_type((*_self_)._field_p, _43921_type_tokens,(&(_46625_type_index)),true);
					if ((_46729_ok && (_46625_type_index < _43921_type_tokens.len()))) {
						_1a903c636_push_err(&(*_self_), _43921_type_tokens[_46625_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46729_ok))) {
						return _45221_cast;
					};
					_45221_cast.get()._field_kind=_46726_t;
					if ((_44021_expr_tokens.len() > 2LL)) {
						jule::I64 _47729_j = 0LL;;
						_1a904882e_range(_47729_j,jule::Str("(", 1),jule::Str(")", 1),_44021_expr_tokens);
						if ((_47729_j < _44021_expr_tokens.len())) {
							return nullptr;
						};
						_44021_expr_tokens=_44021_expr_tokens.slice(0LL,_47729_j);
						_45221_cast.get()._field_expr=_1a904671c_build_from_tokens(&(*_self_), _44021_expr_tokens);
					};
				};
				return _45221_cast;
			}
			_iter_next_1ac46bb50:;
			++it;
			_42013_i++;
			goto _iter_begin_1ac46bb50;
		}
		_iter_end_1ac46bb50:;
	};
	return nullptr;
}



inline void _1a9040b23_push_arg(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1d709475e_Expr>>& _49232_args, jule::Slice<jule::Ptr<_20201c3d1_Token>> _49251_tokens, jule::Ptr<_20201c3d1_Token> _49269_err_token) {
	if ((_49251_tokens.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _49269_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49232_args = jule::alloc_for_append(_49232_args,1);_49232_args.__push(_1a904671c_build_from_tokens(&(*_self_), _49251_tokens));;
}



inline jule::Slice<jule::Ptr<_1d709475e_Expr>> _1a9040e31_build_args(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _50133_tokens) {
	if ((_50133_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _50717_args = nullptr;;
	jule::I64 _50817_last = 0LL;;
	jule::I64 _50917_range_n = 0LL;;
	_50133_tokens=_50133_tokens.slice(1LL,(_50133_tokens.len() - 1LL));
	{
		auto &expr = _50133_tokens;
		auto it = expr.begin();
		_iter_begin_1ac47c028:;
		if (it != expr.end()) {
			jule::I64 _51113_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _51116_token = *it;
			{
				if ((_51116_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51116_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac47cd1a:;
							{
								(_50917_range_n)++;
							}
						}
						else {
							_case_begin_1ac47d0e5:;
							{
								(_50917_range_n)--;
							}
						}
						_match_end_1ac47cdd6:;
					};
				};
				if (((_50917_range_n > 0LL) || (_51116_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ac47c028;
				};
				_1a9040b23_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last,_51113_i),_51116_token);
				_50817_last=static_cast<jule::I64>((_51113_i + 1LL));
			}
			_iter_next_1ac47c028:;
			++it;
			_51113_i++;
			goto _iter_begin_1ac47c028;
		}
		_iter_end_1ac47c028:;
	};
	if ((_50817_last < _50133_tokens.len())) {
		if ((_50817_last == 0LL)) {
			if ((_50133_tokens.len() > 0LL)) {
				_1a9040b23_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last),_50133_tokens[_50817_last]);
			};
		} else {
			_1a9040b23_push_arg(&(*_self_), _50717_args,_50133_tokens.slice(_50817_last),_50133_tokens[(_50817_last - 1LL)]);
		};
	};
	return _50717_args;
}



inline jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _1a904123e_build_call_generics(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _54342_tokens) {
	if ((_54342_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54342_tokens=_54342_tokens.slice(1LL,(_54342_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _54918_parts;;
	jule::Slice<_201be0d52_Log> _54925_errs;;
	std::tie(_54918_parts,_54925_errs) = _1a9049038_parts(_54342_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _55017_generics = jule::Slice<jule::Ptr<_1d709023d_TypeDecl>>::alloc(0LL,_54918_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54925_errs);
	{
		auto &expr = _54918_parts;
		auto it = expr.begin();
		_iter_begin_1ac483969:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _55221_part = *it;
			{
				if ((_55221_part.len() == 0LL)) {
					goto _iter_next_1ac483969;
				};
				jule::I64 _55621_j = 0LL;;
				jule::Ptr<_1d709023d_TypeDecl> _55722_generic;;
				std::tie(_55722_generic,std::ignore) = _1a904c613_build_type((*_self_)._field_p, _55221_part,(&(_55621_j)),true);
				if ((_55621_j < _55221_part.len())) {
					_1a903c636_push_err(&(*_self_), _55221_part[_55621_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_55017_generics = jule::alloc_for_append(_55017_generics,1);_55017_generics.__push(_55722_generic);;
			}
			_iter_next_1ac483969:;
			++it;
			goto _iter_begin_1ac483969;
		}
		_iter_end_1ac483969:;
	};
	return _55017_generics;
}



inline jule::Ptr<_1d7098ae8_FnCallExpr> _1a90415e6_build_fn_call(_1a903bd72_ExprBuilder* _self_, jule::Ptr<_20201c3d1_Token>& _56737_token, jule::Ptr<_1a903a8dc_CallData>& _56757_data) {
	return jule::new_ptr<_1d7098ae8_FnCallExpr>(_1d7098ae8_FnCallExpr{._field_token=_56737_token, ._field_expr=_1a904671c_build_from_tokens(&(*_self_), _56757_data.get()._field_expr_tokens), ._field_generics=_1a904123e_build_call_generics(&(*_self_), _56757_data.get()._field_generics_tokens), ._field_args=_1a9040e31_build_args(&(*_self_), _56757_data.get()._field_args_tokens), });
}



inline jule::Any _1a9041926_build_parentheses_range(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _57647_tokens) {
	jule::Ptr<_20201c3d1_Token> _57717_token = _57647_tokens[0LL];;
	{
		auto &_match_expr{ _57717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac488881:;
			{
				{
					auto &_match_expr{ _57717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ac489123:;
						{
							jule::Ptr<_1d7097740_CastExpr> _58225_expr = _1a904075a_try_build_cast(&(*_self_), _57647_tokens);;
							if ((_58225_expr != nullptr)) {
								return static_cast<jule::Any>(_58225_expr);
							};
						}
					}
					_match_end_1ac488e58:;
				};
			}
		}
		_match_end_1ac4887d7:;
	};
	jule::Ptr<_1a903a8dc_CallData> _58917_data = _1a903ac50_get_call_data(_57647_tokens);;
	if ((_58917_data.get()._field_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1a904043b_build_between_parentheses(&(*_self_), _58917_data.get()._field_args_tokens));
	};
	return static_cast<jule::Any>(_1a90415e6_build_fn_call(&(*_self_), _57717_token,_58917_data));
}



inline jule::Ptr<_1d7095e9c_UnsafeExpr> _1a9041c45_build_unsafe_expr(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _60040_tokens) {
	jule::Ptr<_20201c3d1_Token> _60117_token = _60040_tokens[0LL];;
	_60040_tokens=_60040_tokens.slice(1LL);
	jule::I64 _60317_i = 0LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _60417_range_tokens = _1a904882e_range(_60317_i,jule::Str("{", 1),jule::Str("}", 1),_60040_tokens);;
	if ((_60417_range_tokens.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _60040_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d7095e9c_UnsafeExpr>(_1d7095e9c_UnsafeExpr{._field_token=_60117_token, ._field_expr=_1a904671c_build_from_tokens(&(*_self_), _60417_range_tokens)});
}



inline jule::Ptr<_1d70a1c66_FnDecl> _1a9042053_build_anon_fn(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _61537_tokens) {
	jule::Ptr<_1d70a1c66_FnDecl> _61617_f = _1a9051716_build_fn((*_self_)._field_p, _61537_tokens,false,false);;
	if ((!(_1d70a20b8_is_anon(_61617_f.ptr())))) {
		_1a903c636_push_err(&(*_self_), _61617_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61617_f;
}



inline jule::Any _1a9042361_build_unsafe(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _62436_tokens) {
	{
		auto &_match_expr{ _62436_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac491207:;
			{
				return static_cast<jule::Any>(_1a9042053_build_anon_fn(&(*_self_), _62436_tokens));
			}
		}
		else {
			_case_begin_1ac491702:;
			{
				return static_cast<jule::Any>(_1a9041c45_build_unsafe_expr(&(*_self_), _62436_tokens));
			}
		}
		_match_end_1ac491647:;
	};
}



inline void _1a9042729_push_range_lit_part(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _63442_part, jule::Ptr<_20201c3d1_Token> _6359_error_token, jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>& _63535_parts) {
	if ((_63442_part.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _6359_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63535_parts = jule::alloc_for_append(_63535_parts,1);_63535_parts.__push(_63442_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a9042a59_get_brace_range_lit_expr_parts(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _64553_tokens) {
	if ((_64553_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _65117_parts = nullptr;;
	jule::I64 _65317_last = 0LL;;
	jule::I64 _65417_range_n = 0LL;;
	_64553_tokens=_64553_tokens.slice(1LL,(_64553_tokens.len() - 1LL));
	{
		auto &expr = _64553_tokens;
		auto it = expr.begin();
		_iter_begin_1ac49622e:;
		if (it != expr.end()) {
			jule::I64 _65613_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _65616_token = *it;
			{
				if ((_65616_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65616_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac497021:;
							{
								(_65417_range_n)++;
							}
						}
						else {
							_case_begin_1ac4972eb:;
							{
								(_65417_range_n)--;
							}
						}
						_match_end_1ac4970dc:;
					};
				};
				if (((_65417_range_n > 0LL) || (_65616_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ac49622e;
				};
				_1a9042729_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last,_65613_i),_65616_token,_65117_parts);
				_65317_last=static_cast<jule::I64>((_65613_i + 1LL));
			}
			_iter_next_1ac49622e:;
			++it;
			_65613_i++;
			goto _iter_begin_1ac49622e;
		}
		_iter_end_1ac49622e:;
	};
	if ((_65317_last < _64553_tokens.len())) {
		if ((_65317_last == 0LL)) {
			if ((_64553_tokens.len() > 0LL)) {
				_1a9042729_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last),_64553_tokens[_65317_last],_65117_parts);
			};
		} else {
			_1a9042729_push_range_lit_part(&(*_self_), _64553_tokens.slice(_65317_last),_64553_tokens[(_65317_last - 1LL)],_65117_parts);
		};
	};
	return _65117_parts;
}



inline jule::Ptr<_1d7099577_FieldExprPair> _1a9042d78_build_field_expr_pair(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _68744_tokens) {
	if (((_68744_tokens.len() - 2LL) == 0LL)) {
		_1a903c636_push_err(&(*_self_), _68744_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d7099577_FieldExprPair> _69217_pair = jule::new_ptr<_1d7099577_FieldExprPair>(_1d7099577_FieldExprPair{._field_field=_68744_tokens[0LL], });;
	_68744_tokens=_68744_tokens.slice(2LL);
	_69217_pair.get()._field_expr=_1a904671c_build_from_tokens(&(*_self_), _68744_tokens);
	return _69217_pair;
}



inline jule::Ptr<_1d709475e_Expr> _1a9043186_build_struct_lit_expr(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _70045_tokens) {
	jule::Ptr<_20201c3d1_Token> _70117_token = _70045_tokens[0LL];;
	if (((_70117_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_70045_tokens.len() > 1LL))) {
		_70117_token=_70045_tokens[1LL];
		if ((_70117_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1d709475e_Expr>(_1d709475e_Expr{._field_token=_70117_token, ._field_end=_70045_tokens[(_70045_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_1a9042d78_build_field_expr_pair(&(*_self_), _70045_tokens))});
		};
	};
	return _1a904671c_build_from_tokens(&(*_self_), _70045_tokens);
}



inline jule::Slice<jule::Ptr<_1d709475e_Expr>> _1a9043494_build_struct_lit_exprs(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _71546_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _71617_parts = _1a9042a59_get_brace_range_lit_expr_parts(&(*_self_), _71546_tokens);;
	if ((_71617_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d709475e_Expr>> _72117_pairs = jule::Slice<jule::Ptr<_1d709475e_Expr>>::alloc(0LL,_71617_parts.len());;
	{
		auto &expr = _71617_parts;
		auto it = expr.begin();
		_iter_begin_1ac4a227e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _72221_part = *it;
			{
				_72117_pairs = jule::alloc_for_append(_72117_pairs,1);_72117_pairs.__push(_1a9043186_build_struct_lit_expr(&(*_self_), _72221_part));;
			}
			_iter_next_1ac4a227e:;
			++it;
			goto _iter_begin_1ac4a227e;
		}
		_iter_end_1ac4a227e:;
	};
	return _72117_pairs;
}



inline jule::Ptr<_1d7099cc5_StructLit> _1a90437c4_build_typed_struct_literal(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _72849_tokens) {
	jule::I64 _72917_i = 0LL;;
	jule::Ptr<_1d709023d_TypeDecl> _73018_t;;
	jule::Bool _73021_ok;;
	std::tie(_73018_t,_73021_ok) = _1a904c613_build_type((*_self_)._field_p, _72849_tokens,(&(_72917_i)),true);
	if ((!(_73021_ok))) {
		return nullptr;
	} else if ((_72917_i >= _72849_tokens.len())) {
		_1a903c636_push_err(&(*_self_), _72849_tokens[_72917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72849_tokens=_72849_tokens.slice(_72917_i);
	jule::Ptr<_20201c3d1_Token> _73913_token = _72849_tokens[0LL];;
	if (((_73913_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73913_token.get()._field_kind != jule::Str("{", 1)))) {
		_1a903c636_push_err(&(*_self_), _73913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d7099cc5_StructLit>(_1d7099cc5_StructLit{._field_end=_72849_tokens[(_72849_tokens.len() - 1LL)], ._field_kind=_73018_t, ._field_exprs=_1a9043494_build_struct_lit_exprs(&(*_self_), _72849_tokens)});
}



inline jule::Ptr<_1d709475e_Expr> _1a9043ae3_build_brace_lit_part(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _75244_tokens) {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _75318_l;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _75325_r;;
	std::tie(_75318_l,_75325_r) = _1a903b2d3_split_colon(_75244_tokens);
	if ((_75318_l != nullptr)) {
		return jule::new_ptr<_1d709475e_Expr>(_1d709475e_Expr{._field_token=_75244_tokens[0LL], ._field_end=_75244_tokens[(_75244_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d709ac60_KeyValPair>(_1d709ac60_KeyValPair{._field_key=_1a904671c_build_from_tokens(&(*_self_), _75318_l), ._field_val=_1a904671c_build_from_tokens(&(*_self_), _75325_r), ._field_colon=_75244_tokens[_75318_l.len()]}))});
	};
	return _1a904671c_build_from_tokens(&(*_self_), _75244_tokens);
}



inline jule::Ptr<_1d709a248_BraceLit> _1a9043e01_build_brace_lit(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _76939_tokens) {
	jule::Ptr<_1d709a248_BraceLit> _77017_lit = jule::new_ptr<_1d709a248_BraceLit>(_1d709a248_BraceLit{._field_token=_76939_tokens[0LL], ._field_end=_76939_tokens[(_76939_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _77517_parts = _1a9042a59_get_brace_range_lit_expr_parts(&(*_self_), _76939_tokens);;
	if ((_77517_parts == nullptr)) {
		return _77017_lit;
	};
	_77017_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1d709475e_Expr>>::alloc(0LL,_77517_parts.len());
	{
		auto &expr = _77517_parts;
		auto it = expr.begin();
		_iter_begin_1ac4ab541:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _78121_part = *it;
			{
				_77017_lit.get()._field_exprs = jule::alloc_for_append(_77017_lit.get()._field_exprs,1);_77017_lit.get()._field_exprs.__push(_1a9043ae3_build_brace_lit_part(&(*_self_), _78121_part));;
			}
			_iter_next_1ac4ab541:;
			++it;
			goto _iter_begin_1ac4ab541;
		}
		_iter_end_1ac4ab541:;
	};
	return _77017_lit;
}



inline jule::Any _1a904420e_build_brace_range(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _78841_tokens) {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _78918_expr_tokens;;
	jule::I64 _78931_range_n;;
	std::tie(_78918_expr_tokens,_78931_range_n) = _1a903bb41_get_range_expr_tokens(_78841_tokens);
	{
		
		if ((_78918_expr_tokens.len() == 0LL)) {
			_case_begin_1ac4ad4aa:;
			{
				return static_cast<jule::Any>(_1a9043e01_build_brace_lit(&(*_self_), _78841_tokens));
			}
		}
		else if ((_78931_range_n > 0LL)) {
			_case_begin_1ac4ad532:;
			{
				_1a903c636_push_err(&(*_self_), _78841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac4ad422:;
	};
	jule::Ptr<_20201c3d1_Token> _80013_else_token = _78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)];;
	if ((_78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78918_expr_tokens=_78918_expr_tokens.slice(0LL,(_78918_expr_tokens.len() - 1LL));
		jule::Any _80321_d = _1a9046101_build(&(*_self_), _78918_expr_tokens);;
		if ((_80321_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80321_d };
			
			if (_match_expr.type_is<jule::Ptr<_1d7098ae8_FnCallExpr>>()) {
				_case_begin_1ac4b1c61:;
				{
					_78841_tokens=_78841_tokens.slice((_78918_expr_tokens.len() + 1LL));
					jule::I64 _81025_i = 0LL;;
					jule::Slice<jule::Ptr<_20201c3d1_Token>> _81125_range_tokens = _1a904882e_range(_81025_i,jule::Str("{", 1),jule::Str("}", 1),_78841_tokens);;
					jule::Ptr<_1d7098ae8_FnCallExpr> _81225_model = _80321_d.operator jule::Ptr<_1d7098ae8_FnCallExpr>();;
					if (_1d70991c0_ignored(_81225_model.ptr())) {
						_1a903c636_push_err(&(*_self_), _80013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1a903c955_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81225_model.get()._field_exception=_1a904bc61_build_scope((*_self_)._field_p, _81125_range_tokens,_78841_tokens[(_81025_i - 1LL)]);
					return _80321_d;
				}
			}
			else {
				_case_begin_1ac4b1a0d:;
				{
					_1a903c636_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1ac4b1942:;
		};
	};
	{
		auto &_match_expr{ _78918_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac4b63d6:;
			{
				return _1a9042361_build_unsafe(&(*_self_), _78841_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac4b644c:;
			{
				return static_cast<jule::Any>(_1a9042053_build_anon_fn(&(*_self_), _78841_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac4b64b3:;
			{
				return static_cast<jule::Any>(_1a90437c4_build_typed_struct_literal(&(*_self_), _78841_tokens));
			}
		}
		else {
			_case_begin_1ac4b1cc7:;
			{
				_1a903c636_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac4b06cc:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a904451c_get_enumerable_parts(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _84043_tokens) {
	_84043_tokens=_84043_tokens.slice(1LL,(_84043_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _84218_parts;;
	jule::Slice<_201be0d52_Log> _84225_errors;;
	std::tie(_84218_parts,_84225_errors) = _1a9049038_parts(_84043_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84225_errors);
	return _84218_parts;
}



inline jule::Ptr<_1d709b1d3_SliceExpr> _1a904482a_build_slice(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _84734_tokens) {
	jule::Ptr<_1d709b1d3_SliceExpr> _84817_slc = jule::new_ptr<_1d709b1d3_SliceExpr>(_1d709b1d3_SliceExpr{._field_token=_84734_tokens[0LL], ._field_end=_84734_tokens[(_84734_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _85317_parts = _1a904451c_get_enumerable_parts(&(*_self_), _84734_tokens);;
	if ((_85317_parts.len() == 0LL)) {
		return _84817_slc;
	};
	_84817_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1d709475e_Expr>>::alloc(0LL,_85317_parts.len());
	{
		auto &expr = _85317_parts;
		auto it = expr.begin();
		_iter_begin_1ac4bbdd1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _85921_p = *it;
			{
				if ((_85921_p.len() == 0LL)) {
					goto _iter_next_1ac4bbdd1;
				};
				_84817_slc.get()._field_exprs = jule::alloc_for_append(_84817_slc.get()._field_exprs,1);_84817_slc.get()._field_exprs.__push(_1a904671c_build_from_tokens(&(*_self_), _85921_p));;
			}
			_iter_next_1ac4bbdd1:;
			++it;
			goto _iter_begin_1ac4bbdd1;
		}
		_iter_end_1ac4bbdd1:;
	};
	return _84817_slc;
}



inline jule::Ptr<_1d709ba74_IndexingExpr> _1a9044c7b_build_indexing(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _86937_expr_tokens, jule::Slice<jule::Ptr<_20201c3d1_Token>> _87013_tokens, jule::Ptr<_20201c3d1_Token> _87035_error_token) {
	jule::Ptr<_20201c3d1_Token> _87117_end = _87013_tokens[(_87013_tokens.len() - 1LL)];;
	_87013_tokens=_87013_tokens.slice(1LL,(_87013_tokens.len() - 1LL));
	if ((_87013_tokens.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _87035_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d709475e_Expr> _87717_expr = _1a904671c_build_from_tokens(&(*_self_), _86937_expr_tokens);;
	if ((_87717_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d709475e_Expr> _88117_index = _1a904671c_build_from_tokens(&(*_self_), _87013_tokens);;
	if ((_88117_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d709ba74_IndexingExpr>(_1d709ba74_IndexingExpr{._field_token=_87035_error_token, ._field_end=_87117_end, ._field_expr=_87717_expr, ._field_index=_88117_index});
}



inline jule::Ptr<_1d709c17e_SlicingExpr> _1a9045320_build_slicing(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _89337_expr_tokens, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _89365_slicing_tokens, jule::I64& _89410_colon, jule::Ptr<_20201c3d1_Token>& _89427_error_token, jule::Ptr<_20201c3d1_Token> _89452_end) {
	jule::Ptr<_1d709c17e_SlicingExpr> _89517_slc = jule::new_ptr<_1d709c17e_SlicingExpr>(_1d709c17e_SlicingExpr{._field_token=_89427_error_token, ._field_end=_89452_end, ._field_expr=_1a904671c_build_from_tokens(&(*_self_), _89337_expr_tokens), });;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _90117_start_expr_tokens = _89365_slicing_tokens.slice(0LL,_89410_colon);;
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_start=_1a904671c_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _90617_to_expr_tokens = _89365_slicing_tokens.slice((_89410_colon + 1LL));;
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_to=_1a904671c_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	};
	return _89517_slc;
}



inline jule::Any _1a904562d_build_bracket_range(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _91442_tokens) {
	jule::Ptr<_20201c3d1_Token> _91517_error_token = _91442_tokens[0LL];;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _91618_expr_tokens;;
	jule::I64 _91631_range_n;;
	std::tie(_91618_expr_tokens,_91631_range_n) = _1a903bb41_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_1ac4c67d1:;
			{
				return static_cast<jule::Any>(_1a904482a_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if (((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL))) {
			_case_begin_1ac4c6858:;
			{
				_1a903c636_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac4c6726:;
	};
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I64 _93417_i = 0LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _93518_slicing_tokens;;
	jule::I64 _93534_colon;;
	std::tie(_93518_slicing_tokens,_93534_colon) = _1a905b15a_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return static_cast<jule::Any>(_1a9045320_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token,_91442_tokens[(_91442_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1a9044c7b_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _1a904593b_build_data(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _94234_tokens) {
	{
		auto _match_expr{ _94234_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ac4caad2:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ac4cab48:;
			{
				return _1a903d68c_build_single(&(*_self_), _94234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ac4cabc0:;
			{
				if ((_94234_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_1a903d99a_build_cpp_linked_ident(&(*_self_), _94234_tokens));
				};
			}
		}
		_match_end_1ac4ca87e:;
	};
	jule::Ptr<_20201c3d1_Token> _95417_token = _94234_tokens[(_94234_tokens.len() - 1LL)];;
	if (((_95417_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95417_token.get()._field_kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1a903eced_build_variadic(&(*_self_), _94234_tokens));
	};
	_95417_token=_94234_tokens[0LL];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac4ce157:;
			{
				if (((_94234_tokens.len() > 1LL) && (_95417_token.get()._field_kind == jule::Str("*", 1)))) {
					_95417_token=_94234_tokens[1LL];
					if (((_95417_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95417_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_1a903e6d2_build_type(&(*_self_), _94234_tokens));
					};
				};
				return static_cast<jule::Any>(_1a903dca8_build_unary(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac4ce1ce:;
			{
				if ((_94234_tokens.len() < 3LL)) {
					goto _match_end_1ac4ce07a;
				};
				if ((_94234_tokens.len() > 3LL)) {
					jule::Ptr<_20201c3d1_Token> _97621_t = _94234_tokens[(_94234_tokens.len() - 1LL)];;
					if (((_97621_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97621_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1ac4ce07a;
					};
				};
				jule::Ptr<_20201c3d1_Token> _98217_next = _94234_tokens[1LL];;
				if (((_98217_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98217_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1ac4ce07a;
				};
				return static_cast<jule::Any>(_1a903e6d2_build_type(&(*_self_), _94234_tokens));
			}
		}
		_match_end_1ac4ce07a:;
	};
	_95417_token=_94234_tokens[(_94234_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ac4ce6eb:;
			{
				return _1a903e9e0_build_sub_ident(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac4d4e2c:;
			{
				return static_cast<jule::Any>(_1a903e6d2_build_type(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac4d4e93:;
			{
				return _1a904010b_build_op_right(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac4d5009:;
			{
				{
					auto &_match_expr{ _95417_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ac4d69de:;
						{
							return _1a9041926_build_parentheses_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ac4d6a55:;
						{
							return _1a904420e_build_brace_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ac4d6abb:;
						{
							return _1a904562d_build_bracket_range(&(*_self_), _94234_tokens);
						}
					}
					_match_end_1ac4d64c2:;
				};
			}
		}
		_match_end_1ac4ce696:;
	};
	_1a903c636_push_err(&(*_self_), _95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1d70984dd_BinopExpr> _1a9045ce3_build_binop(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _101335_tokens, jule::I64 _101353_i) {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _101417_left_tokens = _101335_tokens.slice(0LL,_101353_i);;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _101517_right_tokens = _101335_tokens.slice((_101353_i + 1LL));;
	if ((_101417_left_tokens.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _101335_tokens[_101353_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101517_right_tokens.len() == 0LL)) {
		_1a903c636_push_err(&(*_self_), _101335_tokens[_101353_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a903c955_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d70984dd_BinopExpr>(_1d70984dd_BinopExpr{._field_left=_1a904671c_build_from_tokens(&(*_self_), _101417_left_tokens), ._field_right=_1a904671c_build_from_tokens(&(*_self_), _101517_right_tokens), ._field_op=_101335_tokens[_101353_i]});
}



inline jule::Any _1a9046101_build(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _103329_tokens) {
	jule::I64 _103413_i = _1a903b602_find_lowest_prec_op(_103329_tokens);;
	if ((_103413_i == -1LL)) {
		return _1a904593b_build_data(&(*_self_), _103329_tokens);
	};
	return static_cast<jule::Any>(_1a9045ce3_build_binop(&(*_self_), _103329_tokens,_103413_i));
}



inline jule::Any _1a904640e_build_kind(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _104134_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _104218_parts;;
	jule::Slice<_201be0d52_Log> _104225_errors;;
	std::tie(_104218_parts,_104225_errors) = _1a9049038_parts(_104134_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104225_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104225_errors);
		return nullptr;
	} else if ((_104218_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1a903cc63_build_tuple(&(*_self_), _104218_parts));
	};
	return _1a9046101_build(&(*_self_), _104134_tokens);
}



inline jule::Ptr<_1d709475e_Expr> _1a904671c_build_from_tokens(_1a903bd72_ExprBuilder* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _105240_tokens) {
	if ((_105240_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1d709475e_Expr>(_1d709475e_Expr{._field_token=_105240_tokens[0LL], ._field_end=_105240_tokens[(_105240_tokens.len() - 1LL)], ._field_kind=_1a904640e_build_kind(&(*_self_), _105240_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1a903bd72_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9047102_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a904a5bc_stop(_1a904a28c_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1a904a831_stopped(_1a904a28c_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1a904abe9_push_err(_1a904a28c_Parser* _self_, jule::Ptr<_20201c3d1_Token> _23527_token, jule::Str _23542_fmt, jule::Slice<jule::Any> _23555_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a90496ba_compiler_err(_23527_token,_23542_fmt,jule::Any(_23555_args)));;
}



inline void _1a904b018_push_suggestion(_1a904a28c_Parser* _self_, jule::Str _24034_fmt, jule::Slice<jule::Any> _24047_args) {
	{
		_1a9049a1c_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_24034_fmt,jule::Any(_24047_args));
	};
}



inline jule::Ptr<_1d709475e_Expr> _1a904b326_build_expr(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _24435_tokens) {
	jule::Ptr<_1a903bd72_ExprBuilder> _24517_ep = jule::new_ptr<_1a903bd72_ExprBuilder>(_1a903bd72_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1d709475e_Expr> _24817_expr = _1a904671c_build_from_tokens(_24517_ep.ptr(), _24435_tokens);;
	return _24817_expr;
}



inline jule::Ptr<_1d705bd64_Directive> _1a904b634_build_directive(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _25238_tokens) {
	if ((_25238_tokens.len() == 1LL)) {
		_1a904abe9_push_err(&(*_self_), _25238_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25238_tokens[1LL].get()._field_column != (_25238_tokens[0LL].get()._field_column + 1LL))) {
		_1a904abe9_push_err(&(*_self_), _25238_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1d705bd64_Directive>(_1d705bd64_Directive{._field_tag=_25238_tokens[1LL], ._field_args=_25238_tokens.slice(2LL)});
}



inline void _1a904b8a9_push_directive(_1a904a28c_Parser* _self_, jule::Ptr<_1d705bd64_Directive> _26937_d) {
	if ((_26937_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ac5147ca:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _27516_pd = *it;
			{
				if ((_26937_d.get()._field_tag.get()._field_kind == _27516_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1ac5147ca:;
			++it;
			goto _iter_begin_1ac5147ca;
		}
		_iter_end_1ac5147ca:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26937_d);;
}



inline jule::Ptr<_1d70a0270_ScopeTree> _1a904bc61_build_scope(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _28336_tokens, jule::Ptr<_20201c3d1_Token> _28358_end) {
	jule::Ptr<_1d70a0270_ScopeTree> _28417_s = _1a902c88a_new_scope();;
	_28417_s.get()._field_end=_28358_end;
	_1a902e31a_ScopeParser _28617_sp = _1a902e31a_ScopeParser{._field_p=_self_, };;
	_1a9039d3c_build(&_28617_sp, _28336_tokens,_28417_s);
	return _28417_s;
}



inline std::tuple<jule::Ptr<_1d709023d_TypeDecl>,jule::Bool> _1a904c1b2___build_type(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _29344_tokens, jule::I64* _29413_i, jule::Bool _29422_err) {
	_1a905b666_TypeBuilder _29517_tb = _1a905b666_TypeBuilder{._field_p=_self_, ._field_tokens=_29344_tokens, ._field_i=_29413_i, ._field_err=_29422_err};;
	jule::Ptr<_1d709023d_TypeDecl> _30118_decl;;
	jule::Bool _30124_ok;;
	std::tie(_30118_decl,_30124_ok) = _1a905ea21_build(&_29517_tb);
	return std::make_tuple(_30118_decl,_30124_ok);
}



inline std::tuple<jule::Ptr<_1d709023d_TypeDecl>,jule::Bool> _1a904c613_build_type(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _30642_tokens, jule::I64* _30713_i, jule::Bool _30722_err) {
	jule::Ptr<_20201c3d1_Token> _30813_token = _30642_tokens[(*(_30713_i))];;
	jule::Ptr<_1d709023d_TypeDecl> _30918_t;;
	jule::Bool _30921_ok;;
	std::tie(_30918_t,_30921_ok) = _1a904c1b2___build_type(_self_, _30642_tokens,_30713_i,_30722_err);
	if ((_30722_err && (!(_30921_ok)))) {
		_1a904abe9_push_err(_self_.ptr(), _30813_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30918_t,_30921_ok);
}



inline jule::Ptr<_1d70a65a6_TypeAliasDecl> _1a904c921_build_type_alias_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _31646_tokens) {
	jule::I64 _31717_i = 1LL;;
	if ((_31717_i >= _31646_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d70a65a6_TypeAliasDecl> _32217_tad = jule::new_ptr<_1d70a65a6_TypeAliasDecl>(_1d70a65a6_TypeAliasDecl{._field_token=_31646_tokens[1LL], ._field_ident=_31646_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_20201c3d1_Token> _32617_token = _31646_tokens[_31717_i];;
	if ((_32617_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _32617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31717_i)++;
	if ((_31717_i >= _31646_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	_32617_token=_31646_tokens[_31717_i];
	if ((_32617_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	(_31717_i)++;
	if ((_31717_i >= _31646_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	jule::Ptr<_1d709023d_TypeDecl> _34718_t;;
	jule::Bool _34721_ok;;
	std::tie(_34718_t,_34721_ok) = _1a904c613_build_type(_self_, _31646_tokens,(&(_31717_i)),true);
	_32217_tad.get()._field_kind=_34718_t;
	if ((_34721_ok && (_31717_i < _31646_tokens.len()))) {
		_1a904abe9_push_err(_self_.ptr(), _31646_tokens[_31717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32217_tad;
}



inline void _1a904cc62_build_var_type_and_expr(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_1d70a2c45_VarDecl>& _35548_v, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _35566_tokens) {
	jule::I64 _35617_i = 0LL;;
	jule::Ptr<_20201c3d1_Token> _35717_tok = _35566_tokens[_35617_i];;
	if ((_35717_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_35617_i)++;
		if (((_35617_i >= _35566_tokens.len()) || ((_35566_tokens[_35617_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35566_tokens[_35617_i].get()._field_kind == jule::Str("=", 1))))) {
			_1a904abe9_push_err(_self_.ptr(), _35717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1d709023d_TypeDecl> _36522_t;;
		jule::Bool _36525_ok;;
		std::tie(_36522_t,_36525_ok) = _1a904c613_build_type(_self_, _35566_tokens,(&(_35617_i)),true);
		if (_36525_ok) {
			_35548_v.get()._field_kind=_36522_t;
			if ((_35617_i >= _35566_tokens.len())) {
				return;;
			};
			_35717_tok=_35566_tokens[_35617_i];
		};
	};
	if ((_35717_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_35717_tok.get()._field_kind != jule::Str("=", 1))) {
			_1a904abe9_push_err(_self_.ptr(), _35717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_20201c3d1_Token>> _38021_expr_tokens = _35566_tokens.slice((_35617_i + 1LL));;
		if ((_38021_expr_tokens.len() == 0LL)) {
			_1a904abe9_push_err(_self_.ptr(), _35717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35548_v.get()._field_expr=_1a904b326_build_expr(_self_, _38021_expr_tokens);
	} else {
		_1a904abe9_push_err(_self_.ptr(), _35717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a904d01a_build_var_common(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_1d70a2c45_VarDecl>& _39141_v, jule::Slice<jule::Ptr<_20201c3d1_Token>> _39158_tokens) {
	_39141_v.get()._field_token=_39158_tokens[0LL];
	if ((_39141_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _39141_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_39141_v.get()._field_ident=_39141_v.get()._field_token.get()._field_kind;
	_39141_v.get()._field_kind=nullptr;
	if ((_39158_tokens.len() > 1LL)) {
		_39158_tokens=_39158_tokens.slice(1LL);
		_1a904cc62_build_var_type_and_expr(_self_, _39141_v,_39158_tokens);
	};
}



inline void _1a904d3d3_build_var_begin(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a2c45_VarDecl>& _40639_v, jule::I64& _40657_i, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _40666_tokens) {
	jule::Ptr<_20201c3d1_Token> _40713_tok = _40666_tokens[_40657_i];;
	{
		auto &_match_expr{ _40713_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1ac531055:;
			{
				_40639_v.get()._field_statically=true;
				goto _case_begin_1ac5310bb;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac5310bb:;
			{
				(_40657_i)++;
				if ((_40657_i >= _40666_tokens.len())) {
					_1a904abe9_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40666_tokens[_40657_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_40639_v.get()._field_mutable=true;
					(_40657_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac53063c:;
			{
				(_40657_i)++;
				_40639_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1ac530571:;
			{
				_1a904abe9_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ac5303c8:;
	};
	if ((_40657_i >= _40666_tokens.len())) {
		_1a904abe9_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d70a2c45_VarDecl> _1a904d6e1_build_var(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _43633_tokens) {
	jule::I64 _43717_i = 0LL;;
	jule::Ptr<_1d70a2c45_VarDecl> _43817_v = jule::new_ptr<_1d70a2c45_VarDecl>(_1d70a2c45_VarDecl{._field_token=_43633_tokens[0LL], });;
	_1a904d3d3_build_var_begin(_self_.ptr(), _43817_v,_43717_i,_43633_tokens);
	if ((_43717_i >= _43633_tokens.len())) {
		return nullptr;
	};
	_43633_tokens=_43633_tokens.slice(_43717_i);
	if (((_43633_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43633_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43817_v.get()._field_reference=true;
		if ((_43633_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43633_tokens=_43633_tokens.slice(1LL);
	};
	_1a904d01a_build_var_common(_self_, _43817_v,_43633_tokens);
	return _43817_v;
}



inline jule::Ptr<_1d709c536_GenericDecl> _1a904d9ee_build_generic(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _45837_tokens) {
	if ((_45837_tokens.len() > 1LL)) {
		_1a904abe9_push_err(&(*_self_), _45837_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d709c536_GenericDecl> _46217_g = jule::new_ptr<_1d709c536_GenericDecl>(_1d709c536_GenericDecl{._field_token=_45837_tokens[0LL], });;
	if ((_46217_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(&(*_self_), _46217_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46217_g.get()._field_ident=_46217_g.get()._field_token.get()._field_kind;
	return _46217_g;
}



inline jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _1a904dda6_build_generics(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _47338_tokens, jule::Ptr<_20201c3d1_Token>& _47357_error_token) {
	if ((_47338_tokens.len() == 0LL)) {
		_1a904abe9_push_err(&(*_self_), _47357_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _47918_parts;;
	jule::Slice<_201be0d52_Log> _47925_errors;;
	std::tie(_47918_parts,_47925_errors) = _1a9049038_parts(_47338_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47925_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47925_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d709c536_GenericDecl>> _48517_generics = jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>::alloc(0LL,_47918_parts.len());;
	{
		auto &expr = _47918_parts;
		auto it = expr.begin();
		_iter_begin_1ac53d815:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _48621_part = *it;
			{
				_48517_generics = jule::alloc_for_append(_48517_generics,1);_48517_generics.__push(_1a904d9ee_build_generic(&(*_self_), _48621_part));;
			}
			_iter_next_1ac53d815:;
			++it;
			goto _iter_begin_1ac53d815;
		}
		_iter_end_1ac53d815:;
	};
	return _48517_generics;
}



inline jule::Ptr<_1d70a0946_ParamDecl> _1a904e1b4_build_self_param(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _49339_tokens) {
	if ((_49339_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1d70a0946_ParamDecl> _49817_param = jule::new_ptr<_1d70a0946_ParamDecl>();;
	jule::I64 _50117_i = 0LL;;
	if ((_49339_tokens[_50117_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_49817_param.get()._field_mutable=true;
		(_50117_i)++;
		if ((_50117_i >= _49339_tokens.len())) {
			_1a904abe9_push_err(&(*_self_), _49339_tokens[(_50117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49339_tokens[_50117_i].get()._field_kind == jule::Str("&", 1))) {
		_49817_param.get()._field_ident=jule::Str("&", 1);
		(_50117_i)++;
		if ((_50117_i >= _49339_tokens.len())) {
			_1a904abe9_push_err(&(*_self_), _49339_tokens[(_50117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49339_tokens[_50117_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_49817_param.get()._field_ident+=jule::Str("self", 4);
		_49817_param.get()._field_token=_49339_tokens[_50117_i];
		(_50117_i)++;
		if ((_50117_i < _49339_tokens.len())) {
			_1a904abe9_push_err(&(*_self_), _49339_tokens[_50117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49817_param;
}



inline void _1a904e57c_param_type_begin(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a0946_ParamDecl>& _53240_param, jule::I64& _53264_i, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _53273_tokens) {
	for (; (_53264_i < _53273_tokens.len()); (_53264_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _53417_token = _53273_tokens[_53264_i];;
			if ((_53417_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_53417_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53240_param.get()._field_variadic) {
				_1a904abe9_push_err(&(*_self_), _53417_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1ac5457c8;
			};
			_53240_param.get()._field_variadic=true;
		}
	_iter_next_1ac5457c8:;
	}
	_iter_end_1ac5457c8:;;
}



inline void _1a904e89b_build_param_type(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_1d70a0946_ParamDecl>& _54941_param, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _54965_tokens) {
	jule::I64 _55017_i = 0LL;;
	_1a904e57c_param_type_begin(_self_.ptr(), _54941_param,_55017_i,_54965_tokens);
	if ((_55017_i >= _54965_tokens.len())) {
		return;;
	};
	std::tie(_54941_param.get()._field_kind,std::ignore) = _1a904c613_build_type(_self_, _54965_tokens,(&(_55017_i)),true);
	if ((_55017_i < _54965_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _54965_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a904ebba_build_param_body(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_1d70a0946_ParamDecl>& _56241_param, jule::Slice<jule::Ptr<_20201c3d1_Token>> _56264_tokens) {
	jule::Ptr<_20201c3d1_Token> _56317_tok = _56264_tokens[0LL];;
	_56241_param.get()._field_ident=_56317_tok.get()._field_kind;
	if ((_56264_tokens.len() == 1LL)) {
		return;;
	} else if ((_56264_tokens.len() < 3LL)) {
		_1a904abe9_push_err(_self_.ptr(), _56317_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_56264_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1a904e89b_build_param_type(_self_, _56241_param,_56264_tokens);
		return;;
	};
	_56264_tokens=_56264_tokens.slice(2LL);
	_1a904e89b_build_param_type(_self_, _56241_param,_56264_tokens);
}



inline jule::Ptr<_1d70a0946_ParamDecl> _1a904eec8_build_param(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _58035_tokens) {
	jule::Ptr<_1d70a0946_ParamDecl> _58117_param = jule::new_ptr<_1d70a0946_ParamDecl>(_1d70a0946_ParamDecl{._field_token=_58035_tokens[0LL], });;
	if ((_58117_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_58117_param.get()._field_mutable=true;
		if ((_58035_tokens.len() == 1LL)) {
			_1a904abe9_push_err(_self_.ptr(), _58035_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58035_tokens=_58035_tokens.slice(1LL);
		_58117_param.get()._field_token=_58035_tokens[0LL];
	};
	if ((_58035_tokens.len() >= 3LL)) {
		if (((_58117_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58117_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58035_tokens.len() == 1LL)) {
				_1a904abe9_push_err(_self_.ptr(), _58035_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58035_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58035_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_58117_param.get()._field_reference=true;
				_58035_tokens=_58035_tokens.slice(1LL);
				_58117_param.get()._field_token=_58035_tokens[0LL];
			};
		};
	};
	if ((_58117_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_58117_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1a904e89b_build_param_type(_self_, _58117_param,_58035_tokens);
	} else {
		_1a904ebba_build_param_body(_self_, _58117_param,_58035_tokens);
	};
	return _58117_param;
}



inline void _1a905024d_check_params(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>>& _62336_params) {
	{
		auto &expr = _62336_params;
		auto it = expr.begin();
		_iter_begin_1ac555ac4:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a0946_ParamDecl> _62421_param = *it;
			{
				if ((_1d70a0ca9_is_self(_62421_param.ptr()) || (_62421_param.get()._field_kind != nullptr))) {
					goto _iter_next_1ac555ac4;
				};
				if ((_62421_param.get()._field_token == nullptr)) {
					_1a904abe9_push_err(&(*_self_), _62421_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62421_param.get()._field_kind=jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_62421_param.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_62421_param.get()._field_token, ._field_ident=_62421_param.get()._field_token.get()._field_kind, }))});
					_62421_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1ac555ac4:;
			++it;
			goto _iter_begin_1ac555ac4;
		}
		_iter_end_1ac555ac4:;
	};
}



inline jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>> _1a9050605_build_params(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _64337_tokens, jule::Bool _64355_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _64418_parts;;
	jule::Slice<_201be0d52_Log> _64425_errs;;
	std::tie(_64418_parts,_64425_errs) = _1a9049038_parts(_64337_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64425_errs);
	if ((_64418_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>> _65017_params = nullptr;;
	if ((_64355_method && (_64418_parts.len() > 0LL))) {
		jule::Ptr<_1d70a0946_ParamDecl> _65221_param = _1a904e1b4_build_self_param(_self_.ptr(), _64418_parts[0LL]);;
		if (((_65221_param != nullptr) && _1d70a0ca9_is_self(_65221_param.ptr()))) {
			_65017_params = jule::alloc_for_append(_65017_params,1);_65017_params.__push(_65221_param);;
			_64418_parts=_64418_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64418_parts;
		auto it = expr.begin();
		_iter_begin_1ac55a887:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _65921_part = *it;
			{
				jule::Ptr<_1d70a0946_ParamDecl> _66021_param = _1a904eec8_build_param(_self_, _65921_part);;
				if ((_66021_param != nullptr)) {
					_65017_params = jule::alloc_for_append(_65017_params,1);_65017_params.__push(_66021_param);;
				};
			}
			_iter_next_1ac55a887:;
			++it;
			goto _iter_begin_1ac55a887;
		}
		_iter_end_1ac55a887:;
	};
	_1a905024d_check_params(_self_.ptr(), _65017_params);
	return _65017_params;
}



inline std::tuple<jule::Ptr<_1d7093351_RetTypeDecl>,jule::Bool> _1a90509ac_build_multi_ret_type(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _67045_tokens, jule::I64& _67068_i) {
	jule::Ptr<_1d7093351_RetTypeDecl> _67078_t = jule::Ptr<_1d7093351_RetTypeDecl>();
	jule::Bool _67095_ok = jule::Bool();
	_67078_t=jule::new_ptr<_1d7093351_RetTypeDecl>();
	(_67068_i)++;
	if ((_67068_i >= _67045_tokens.len())) {
		(_67068_i)--;
		std::tie(_67078_t.get()._field_kind,_67095_ok) = _1a904c613_build_type(_self_, _67045_tokens,(&(_67068_i)),false);
		return std::make_tuple(_67078_t,_67095_ok);
	};
	(_67068_i)--;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _68017_range_tokens = _1a904882e_range(_67068_i,jule::Str("(", 1),jule::Str(")", 1),_67045_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _68218_parts;;
	jule::Slice<_201be0d52_Log> _68225_errs;;
	std::tie(_68218_parts,_68225_errs) = _1a9049038_parts(_68017_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68225_errs);
	if ((_68218_parts.len() == 0LL)) {
		return std::make_tuple(_67078_t,_67095_ok);
	};
	jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _68817_types = jule::Slice<jule::Ptr<_1d709023d_TypeDecl>>::alloc(0LL,_68218_parts.len());;
	_67078_t.get()._field_idents=jule::Slice<jule::Ptr<_20201c3d1_Token>>::alloc(0LL,_68218_parts.len());
	{
		auto &expr = _68218_parts;
		auto it = expr.begin();
		_iter_begin_1ac562d9a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _69021_part = *it;
			{
				jule::Ptr<_20201c3d1_Token> _69121_token = _69021_part[0LL];;
				jule::I64 _69221_offset = 0LL;;
				if ((_69021_part.len() > 1LL)) {
					_69121_token=_69021_part[1LL];
					if ((_69121_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_69221_offset=2LL;
						if ((_69021_part.len() < 3LL)) {
							_1a904abe9_push_err(_self_.ptr(), _69121_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1ac562d9a;
						};
					};
				};
				_69121_token=_69021_part[0LL];
				if ((_69221_offset != 2LL)) {
					jule::Ptr<_20201c3d1_Token> _70825_new_token = jule::new_ptr<_20201c3d1_Token>((*(_69121_token)));;
					_70825_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67078_t.get()._field_idents = jule::alloc_for_append(_67078_t.get()._field_idents,1);_67078_t.get()._field_idents.__push(_70825_new_token);;
				} else {
					_67078_t.get()._field_idents = jule::alloc_for_append(_67078_t.get()._field_idents,1);_67078_t.get()._field_idents.__push(_69121_token);;
				};
				jule::Ptr<_1d709023d_TypeDecl> _71522_tk;;
				std::tie(_71522_tk,std::ignore) = _1a904c613_build_type(_self_, _69021_part,(&(_69221_offset)),true);
				if ((_69221_offset < _69021_part.len())) {
					_1a904abe9_push_err(_self_.ptr(), _69021_part[_69221_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_68817_types = jule::alloc_for_append(_68817_types,1);_68817_types.__push(_71522_tk);;
			}
			_iter_next_1ac562d9a:;
			++it;
			goto _iter_begin_1ac562d9a;
		}
		_iter_end_1ac562d9a:;
	};
	if ((_68817_types.len() > 1LL)) {
		_67078_t.get()._field_kind=jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_67045_tokens[0LL], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d7091ccd_TupleTypeDecl>(_1d7091ccd_TupleTypeDecl{._field_types=_68817_types}))});
	} else {
		_67078_t.get()._field_kind=_68817_types[0LL];
	};
	_67095_ok=true;
	return std::make_tuple(_67078_t,_67095_ok);
}



inline std::tuple<jule::Ptr<_1d7093351_RetTypeDecl>,jule::Bool> _1a9050d64_build_ret_type(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _73839_tokens, jule::I64& _73862_i) {
	jule::Ptr<_1d7093351_RetTypeDecl> _73872_t = jule::Ptr<_1d7093351_RetTypeDecl>();
	jule::Bool _73889_ok = jule::Bool();
	_73872_t=jule::new_ptr<_1d7093351_RetTypeDecl>();
	if ((_73862_i >= _73839_tokens.len())) {
		return std::make_tuple(_73872_t,_73889_ok);
	};
	jule::Ptr<_20201c3d1_Token> _74417_token = _73839_tokens[_73862_i];;
	{
		auto &_match_expr{ _74417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac56baeb:;
			{
				if ((_74417_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_73872_t,_73889_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac56bb62:;
			{
				if ((_74417_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_73872_t,_73889_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ac56bbc8:;
			{
				if (((_73862_i + 1LL) >= _73839_tokens.len())) {
					_1a904abe9_push_err(_self_.ptr(), _74417_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_73872_t,_73889_ok);
				};
				(_73862_i)++;
				_74417_token=_73839_tokens[_73862_i];
				if ((_74417_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _74417_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1ac56e857:;
							{
								std::tie(_73872_t,_73889_ok) = _1a90509ac_build_multi_ret_type(_self_, _73839_tokens,_73862_i);
								return std::make_tuple(_73872_t,_73889_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1ac56e8bd:;
							{
								_1a904abe9_push_err(_self_.ptr(), _74417_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_73872_t,_73889_ok);
							}
						}
						_match_end_1ac56e659:;
					};
				};
				std::tie(_73872_t.get()._field_kind,_73889_ok) = _1a904c613_build_type(_self_, _73839_tokens,(&(_73862_i)),true);
				return std::make_tuple(_73872_t,_73889_ok);
			}
		}
		_match_end_1ac56ba41:;
	};
	(_73862_i)++;
	_1a904abe9_push_err(_self_.ptr(), _74417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_73872_t,_73889_ok);
}



inline jule::Ptr<_1d70a1c66_FnDecl> _1a90512b5_build_fn_prototype(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _78343_tokens, jule::I64& _78366_i, jule::Bool _78374_method) {
	jule::Ptr<_1d70a1c66_FnDecl> _78417_f = jule::new_ptr<_1d70a1c66_FnDecl>(_1d70a1c66_FnDecl{._field_token=_78343_tokens[_78366_i], });;
	if ((_78417_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_78417_f.get()._field_statically=true;
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_token=_78343_tokens[_78366_i];
	};
	if ((_78417_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_78417_f.get()._field_unsafety=true;
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_token=_78343_tokens[_78366_i];
	};
	(_78366_i)++;
	if ((_78366_i >= _78343_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20201c3d1_Token> _81713_tok = _78343_tokens[_78366_i];;
	if ((_81713_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_ident=_81713_tok.get()._field_kind;
	} else {
		_78417_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_20201c3d1_Token> _82913_error_token = _78343_tokens[_78366_i];;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _83017_generics_tokens = _1a904882e_range(_78366_i,jule::Str("[", 1),jule::Str("]", 1),_78343_tokens);;
	if ((_83017_generics_tokens != nullptr)) {
		_78417_f.get()._field_generics=_1a904dda6_build_generics(_self_.ptr(), _83017_generics_tokens,_82913_error_token);
	};
	if ((_78343_tokens[_78366_i].get()._field_kind != jule::Str("(", 1))) {
		_1a904abe9_push_err(_self_.ptr(), _78343_tokens[_78366_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _84017_params_toks = _1a904882e_range(_78366_i,jule::Str("(", 1),jule::Str(")", 1),_78343_tokens);;
	if ((_84017_params_toks.len() > 0LL)) {
		_78417_f.get()._field_params=_1a9050605_build_params(_self_, _84017_params_toks,_78374_method);
	};
	if ((_78366_i < _78343_tokens.len())) {
		jule::Ptr<_20201c3d1_Token> _84617_token = _78343_tokens[_78366_i];;
		if (((_84617_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84617_token.get()._field_kind == jule::Str("!", 1)))) {
			_78417_f.get()._field_exceptional=true;
			(_78366_i)++;
		};
	};
	std::tie(_78417_f.get()._field_result,std::ignore) = _1a9050d64_build_ret_type(_self_, _78343_tokens,_78366_i);
	return _78417_f;
}



inline jule::Ptr<_1d70a1c66_FnDecl> _1a9051716_build_fn(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _85933_tokens, jule::Bool _85951_method, jule::Bool _85965_prototype) {
	jule::I64 _86017_i = 0LL;;
	jule::Ptr<_1d70a1c66_FnDecl> _86117_f = _1a90512b5_build_fn_prototype(_self_, _85933_tokens,_86017_i,_85951_method);;
	if (_85965_prototype) {
		if ((_86017_i < _85933_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _85933_tokens[(_86017_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86117_f;
	} else if ((_86117_f == nullptr)) {
		return _86117_f;
	};
	if ((_86017_i >= _85933_tokens.len())) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _86117_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _87717_block_tokens = _1a904882e_range(_86017_i,jule::Str("{", 1),jule::Str("}", 1),_85933_tokens);;
	if ((_87717_block_tokens != nullptr)) {
		_86117_f.get()._field_scope=_1a904bc61_build_scope(_self_, _87717_block_tokens,_85933_tokens[(_86017_i - 1LL)]);
		_86117_f.get()._field_scope.get()._field_unsafety=_86117_f.get()._field_unsafety;
		if ((_86017_i < _85933_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _85933_tokens[_86017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _86117_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86117_f;
}



inline jule::Slice<jule::Ptr<_20201c3d1_Token>> _1a9051a24_get_use_decl_selectors(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _89345_tokens) {
	jule::I64 _89417_i = 0LL;;
	_89345_tokens=_1a904882e_range(_89417_i,jule::Str("{", 1),jule::Str("}", 1),_89345_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _89618_parts;;
	jule::Slice<_201be0d52_Log> _89625_errs;;
	std::tie(_89618_parts,_89625_errs) = _1a9049038_parts(_89345_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89625_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89625_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _90217_selectors = jule::Slice<jule::Ptr<_20201c3d1_Token>>::alloc(0LL,_89618_parts.len());;
	{
		auto &expr = _89618_parts;
		auto it = expr.begin();
		_iter_begin_1ac5884db:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _90321_part = *it;
			{
				if ((_90321_part.len() > 1LL)) {
					_1a904abe9_push_err(&(*_self_), _90321_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_20201c3d1_Token> _90721_tok = _90321_part[0LL];;
				if (((_90721_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_90721_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1a904abe9_push_err(&(*_self_), _90721_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1a904b018_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1ac5884db;
				};
				_90217_selectors = jule::alloc_for_append(_90217_selectors,1);_90217_selectors.__push(_90721_tok);;
			}
			_iter_next_1ac5884db:;
			++it;
			goto _iter_begin_1ac5884db;
		}
		_iter_end_1ac5884db:;
	};
	return _90217_selectors;
}



inline void _1a9051d43_build_cpp_use_decl(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a7992_UseDecl>& _91842_decl, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _91859_tokens) {
	if ((_91859_tokens.len() > 1LL)) {
		_1a904abe9_push_err(&(*_self_), _91859_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20201c3d1_Token> _92213_token = _91859_tokens[0LL];;
	if (((_92213_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92213_token.get()._field_kind[0LL] != '`') && (_92213_token.get()._field_kind[0LL] != '\"')))) {
		_1a904abe9_push_err(&(*_self_), _92213_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_91842_decl.get()._field_cpp_linked=true;
	_91842_decl.get()._field_link_path=_92213_token.get()._field_kind.slice(1LL,(_92213_token.get()._field_kind.len() - 1LL));
}



inline void _1a9052162_build_std_use_decl(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a7992_UseDecl>& _93142_decl, jule::Slice<jule::Ptr<_20201c3d1_Token>> _93162_tokens) {
	_93142_decl.get()._field_std=true;
	jule::Ptr<_20201c3d1_Token> _93417_token = _93162_tokens[0LL];;
	if ((_93162_tokens.len() < 3LL)) {
		_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93162_tokens=_93162_tokens.slice(2LL);
	_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac5978a2:;
			{
				_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac597929:;
			{
				if ((_93417_token.get()._field_kind != jule::Str("}", 1))) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20201c3d1_Token>> _95121_selectors = nullptr;;
				std::tie(_93162_tokens,_95121_selectors) = _1a9048ac6_range_last(_93162_tokens);
				_93142_decl.get()._field_selected=_1a9051a24_get_use_decl_selectors(&(*_self_), _95121_selectors);
				if ((_93162_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
				if ((_93417_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac5979a1:;
			{
				if ((_93417_token.get()._field_kind != jule::Str("*", 1))) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
				if ((_93417_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93142_decl.get()._field_full=true;
			}
		}
		_match_end_1ac59782a:;
	};
	_93142_decl.get()._field_link_path=(jule::Str("std::", 5) + _1a9049dc4_tokstoa(_93162_tokens));
}



inline void _1a9052481_build_ident_use_decl(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a7992_UseDecl>& _99344_decl, jule::Slice<jule::Ptr<_20201c3d1_Token>> _99364_tokens) {
	_99344_decl.get()._field_std=false;
	jule::Ptr<_20201c3d1_Token> _99617_token = _99364_tokens[(_99364_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac5a3748:;
			{
				_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac5a3924:;
			{
				if ((_99617_token.get()._field_kind != jule::Str("}", 1))) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_20201c3d1_Token>> _100721_selectors = nullptr;;
				std::tie(_99364_tokens,_100721_selectors) = _1a9048ac6_range_last(_99364_tokens);
				_99344_decl.get()._field_selected=_1a9051a24_get_use_decl_selectors(&(*_self_), _100721_selectors);
				if ((_99364_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99617_token=_99364_tokens[(_99364_tokens.len() - 1LL)];
				if ((_99617_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac5a398a:;
			{
				if ((_99617_token.get()._field_kind != jule::Str("*", 1))) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99617_token=_99364_tokens[(_99364_tokens.len() - 1LL)];
				if ((_99617_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1a904abe9_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99344_decl.get()._field_full=true;
			}
		}
		_match_end_1ac5a36e3:;
	};
	_99344_decl.get()._field_link_path=_1a9049dc4_tokstoa(_99364_tokens);
}



inline void _1a90527a0_parse_use_decl(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a7992_UseDecl>& _105638_decl, jule::Slice<jule::Ptr<_20201c3d1_Token>> _105658_tokens) {
	if (_105638_decl.get()._field_cpp_linked) {
		_1a9051d43_build_cpp_use_decl(&(*_self_), _105638_decl,_105658_tokens);
		return;;
	};
	jule::Ptr<_20201c3d1_Token> _106217_token = _105658_tokens[0LL];;
	if ((_106217_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(&(*_self_), _106217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105658_tokens.len() > 2LL) && (_105658_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_105638_decl.get()._field_alias=_106217_token.get()._field_kind;
		if ((_105658_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1a904abe9_push_err(&(*_self_), _106217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1a904b018_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105658_tokens=_105658_tokens.slice(2LL);
		_106217_token=_105658_tokens[0LL];
	};
	;
	{
		
		if ((_106217_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1ac5b39ab:;
			{
				_1a9052162_build_std_use_decl(&(*_self_), _105638_decl,_105658_tokens);
			}
		}
		else {
			_case_begin_1ac5b346c:;
			{
				_1a9052481_build_ident_use_decl(&(*_self_), _105638_decl,_105658_tokens);
			}
		}
		_match_end_1ac5b3406:;
	};
}



inline jule::Ptr<_1d70a7992_UseDecl> _1a9052b57_build_use_decl(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _109037_tokens, jule::Bool _109055_cpp_linked) {
	jule::Ptr<_1d70a7992_UseDecl> _109117_decl = jule::new_ptr<_1d70a7992_UseDecl>(_1d70a7992_UseDecl{._field_token=_109037_tokens[0LL], ._field_cpp_linked=_109055_cpp_linked, });;
	if ((_109037_tokens.len() < 2LL)) {
		_1a904abe9_push_err(&(*_self_), _109117_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109037_tokens=_109037_tokens.slice(1LL);
	_1a90527a0_parse_use_decl(&(*_self_), _109117_decl,_109037_tokens);
	return _109117_decl;
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a9053031_build_type_enum_item_kind(jule::Ptr<_1a904a28c_Parser> _self_, jule::I64& _110450_i, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _110463_tokens) {
	jule::I64 _110517_brace_n = 0LL;;
	jule::I64 _110613_expr_start = _110450_i;;
	for (; (_110450_i < _110463_tokens.len()); (_110450_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _110817_t = _110463_tokens[_110450_i];;
			if ((_110817_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _110817_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ac5b7dcd:;
						{
							(_110517_brace_n)++;
							goto _iter_next_1ac5b7718;
						}
					}
					else {
						_case_begin_1ac5b8791:;
						{
							(_110517_brace_n)--;
						}
					}
					_match_end_1ac5b8582:;
				};
			};
			if ((_110517_brace_n > 0LL)) {
				goto _iter_next_1ac5b7718;
			};
			if (((_110817_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_110450_i + 1LL) >= _110463_tokens.len()))) {
				jule::Slice<jule::Ptr<_20201c3d1_Token>> _112425_kind_tokens = nullptr;;
				if ((_110817_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_112425_kind_tokens=_110463_tokens.slice(_110613_expr_start,_110450_i);
				} else {
					_112425_kind_tokens=_110463_tokens.slice(_110613_expr_start);
				};
				jule::I64 _113025_j = 0LL;;
				jule::Ptr<_1d709023d_TypeDecl> _113126_kind;;
				std::tie(_113126_kind,std::ignore) = _1a904c613_build_type(_self_, _112425_kind_tokens,(&(_113025_j)),true);
				if ((_113025_j < _112425_kind_tokens.len())) {
					_1a904abe9_push_err(_self_.ptr(), _112425_kind_tokens[_113025_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _113126_kind;
			};
		}
	_iter_next_1ac5b7718:;
	}
	_iter_end_1ac5b7718:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>> _1a9053350_build_type_enum_items(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _114146_tokens) {
	jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _114317_i = 0LL;;
	for (; (_114317_i < _114146_tokens.len()); (_114317_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _114521_t = _114146_tokens[_114317_i];;
			jule::Ptr<_1d70a9444_TypeEnumItemDecl> _114621_item = jule::new_ptr<_1d70a9444_TypeEnumItemDecl>();;
			_114621_item.get()._field_token=_114521_t;
			if (((_114621_item.get()._field_token.get()._field_id == static_cast<jule::U64>(2LLU)) && ((_114146_tokens.len() - _114317_i) > 2LL))) {
				_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
				_114521_t=_114146_tokens[(_114317_i + 1LL)];
				if ((_114521_t.get()._field_id == static_cast<jule::U64>(11LLU))) {
					_114317_i+=2LL;
					if (((_114317_i >= _114146_tokens.len()) || (_114146_tokens[_114317_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
						_1a904abe9_push_err(_self_.ptr(), _114521_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1ac5bda1b;
					};
				};
			};
			_114621_item.get()._field_kind=_1a9053031_build_type_enum_item_kind(_self_, _114317_i,_114146_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1ac5bda1b:;
	}
	_iter_end_1ac5bda1b:;;
	return _114217_items;
}



inline jule::Ptr<_1d70a9a4e_TypeEnumDecl> _1a905365d_build_type_enum_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _116545_tokens) {
	jule::I64 _116617_i = 1LL;;
	jule::Ptr<_1d70a9a4e_TypeEnumDecl> _116717_e = jule::new_ptr<_1d70a9a4e_TypeEnumDecl>(_1d70a9a4e_TypeEnumDecl{._field_token=_116545_tokens[_116617_i], });;
	if ((_116717_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _116717_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_116717_e.get()._field_ident=_116717_e.get()._field_token.get()._field_kind;
	_116617_i+=3LL;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _117617_item_tokens = _1a904882e_range(_116617_i,jule::Str("{", 1),jule::Str("}", 1),_116545_tokens);;
	if ((_117617_item_tokens == nullptr)) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _116717_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _116717_e;
	} else if ((_116617_i < _116545_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _116545_tokens[_116617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_116717_e.get()._field_end=_116545_tokens[(_116617_i - 1LL)];
	_116717_e.get()._field_items=_1a9053350_build_type_enum_items(_self_, _117617_item_tokens);
	return _116717_e;
}



inline jule::Ptr<_1d709475e_Expr> _1a9053a15_build_enum_item_expr(jule::Ptr<_1a904a28c_Parser> _self_, jule::I64& _119045_i, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _119058_tokens) {
	jule::I64 _119117_brace_n = 0LL;;
	jule::I64 _119213_expr_start = _119045_i;;
	for (; (_119045_i < _119058_tokens.len()); (_119045_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _119417_t = _119058_tokens[_119045_i];;
			if ((_119417_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _119417_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ac5ca033:;
						{
							(_119117_brace_n)++;
							goto _iter_next_1ac5c986d;
						}
					}
					else {
						_case_begin_1ac5ca8e6:;
						{
							(_119117_brace_n)--;
						}
					}
					_match_end_1ac5ca6d7:;
				};
			};
			if ((_119117_brace_n > 0LL)) {
				goto _iter_next_1ac5c986d;
			};
			if (((_119417_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_119045_i + 1LL) >= _119058_tokens.len()))) {
				jule::Slice<jule::Ptr<_20201c3d1_Token>> _121025_expr_tokens = nullptr;;
				if ((_119417_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_121025_expr_tokens=_119058_tokens.slice(_119213_expr_start,_119045_i);
				} else {
					_121025_expr_tokens=_119058_tokens.slice(_119213_expr_start);
				};
				return _1a904b326_build_expr(_self_, _121025_expr_tokens);
			};
		}
	_iter_next_1ac5c986d:;
	}
	_iter_end_1ac5c986d:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>> _1a9053d23_build_enum_items(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _122241_tokens) {
	jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>> _122317_items = jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _122417_i = 0LL;;
	for (; (_122417_i < _122241_tokens.len()); (_122417_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _122621_t = _122241_tokens[_122417_i];;
			jule::Ptr<_1d70a7e15_EnumItemDecl> _122721_item = jule::new_ptr<_1d70a7e15_EnumItemDecl>();;
			_122721_item.get()._field_token=_122621_t;
			if ((_122721_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1a904abe9_push_err(_self_.ptr(), _122721_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_122721_item.get()._field_ident=_122721_item.get()._field_token.get()._field_kind;
			if ((((_122417_i + 1LL) >= _122241_tokens.len()) || (_122241_tokens[(_122417_i + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if (((_122417_i + 1LL) < _122241_tokens.len())) {
					(_122417_i)++;
				};
				_122317_items = jule::alloc_for_append(_122317_items,1);_122317_items.__push(_122721_item);;
				goto _iter_next_1ac5ce411;
			};
			(_122417_i)++;
			_122621_t=_122241_tokens[_122417_i];
			(_122417_i)++;
			if ((_122621_t.get()._field_id != static_cast<jule::U64>(11LLU))) {
				_1a904abe9_push_err(_self_.ptr(), _122621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1ac5ce411;
			};
			if (((_122417_i >= _122241_tokens.len()) || (_122241_tokens[_122417_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1a904abe9_push_err(_self_.ptr(), _122621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1ac5ce411;
			};
			_122721_item.get()._field_expr=_1a9053a15_build_enum_item_expr(_self_, _122417_i,_122241_tokens);
			_122317_items = jule::alloc_for_append(_122317_items,1);_122317_items.__push(_122721_item);;
		}
	_iter_next_1ac5ce411:;
	}
	_iter_end_1ac5ce411:;;
	return _122317_items;
}



inline jule::Ptr<_1d70a893d_EnumDecl> _1a9054131_build_enum_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _125940_tokens) {
	if ((_125940_tokens.len() < 3LL)) {
		_1a904abe9_push_err(_self_.ptr(), _125940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d70a893d_EnumDecl> _126417_e = jule::new_ptr<_1d70a893d_EnumDecl>(_1d70a893d_EnumDecl{._field_token=_125940_tokens[1LL], });;
	if ((_126417_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_126417_e.get()._field_ident=_126417_e.get()._field_token.get()._field_kind;
	jule::I64 _127217_i = 2LL;;
	if ((_125940_tokens[_127217_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_127217_i)++;
		if ((_127217_i >= _125940_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _125940_tokens[(_127217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _126417_e;
		};
		std::tie(_126417_e.get()._field_kind,std::ignore) = _1a904c613_build_type(_self_, _125940_tokens,(&(_127217_i)),true);
		if ((_127217_i >= _125940_tokens.len())) {
			_1a904a5bc_stop(_self_.ptr());
			_1a904abe9_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _126417_e;
		};
	} else {
		_126417_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _128917_item_tokens = _1a904882e_range(_127217_i,jule::Str("{", 1),jule::Str("}", 1),_125940_tokens);;
	if ((_128917_item_tokens == nullptr)) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _126417_e;
	} else if ((_127217_i < _125940_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _125940_tokens[_127217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_126417_e.get()._field_end=_125940_tokens[(_127217_i - 1LL)];
	_126417_e.get()._field_items=_1a9053d23_build_enum_items(_self_, _128917_item_tokens);
	return _126417_e;
}



inline jule::Any _1a905443e_build_node_enum_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _130345_tokens) {
	if (((_130345_tokens.len() > 3LL) && (_130345_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
		if ((_130345_tokens[3LL].get()._field_id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1a905365d_build_type_enum_decl(_self_, _130345_tokens));
		};
	};
	return static_cast<jule::Any>(_1a9054131_build_enum_decl(_self_, _130345_tokens));
}



inline jule::Ptr<_1d70a9c4c_FieldDecl> _1a905474c_build_field(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _131235_tokens) {
	jule::Ptr<_1d70a9c4c_FieldDecl> _131317_f = jule::new_ptr<_1d70a9c4c_FieldDecl>(_1d70a9c4c_FieldDecl{});;
	_131317_f.get()._field_public=(_131235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_131317_f.get()._field_public) {
		if ((_131235_tokens.len() == 1LL)) {
			_1a904abe9_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(1LL);
	};
	_131317_f.get()._field_mutable=(_131235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_131317_f.get()._field_mutable) {
		if ((_131235_tokens.len() == 1LL)) {
			_1a904abe9_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(1LL);
	};
	_131317_f.get()._field_token=_131235_tokens[0LL];
	if ((_131317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _131317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_131317_f.get()._field_ident=_131317_f.get()._field_token.get()._field_kind;
	if ((_131235_tokens.len() == 1LL)) {
		_1a904abe9_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_131235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _131235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_131235_tokens=_131235_tokens.slice(2LL);
	jule::I64 _135017_i = 0LL;;
	std::tie(_131317_f.get()._field_kind,std::ignore) = _1a904c613_build_type(_self_, _131235_tokens,(&(_135017_i)),true);
	if ((_135017_i < _131235_tokens.len())) {
		jule::Ptr<_20201c3d1_Token> _135317_token = _131235_tokens[_135017_i];;
		if (((_135317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_135317_token.get()._field_kind != jule::Str("=", 1)))) {
			_1a904abe9_push_err(_self_.ptr(), _131235_tokens[_135017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_135017_i)++;
		if ((_135017_i >= _131235_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _135317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(_135017_i);
		_131317_f.get()._field_default=_1a904b326_build_expr(_self_, _131235_tokens);
	};
	return _131317_f;
}



inline jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>> _1a9054a7c_build_struct_decl_fields(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _137048_tokens) {
	jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>> _137117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _137217_stmts = _1a902dd86_split_stmts(_137048_tokens);;
	{
		auto &expr = _137217_stmts;
		auto it = expr.begin();
		_iter_begin_1ac5eec8e:;
		if (it != expr.end()) {
			jule::Ptr<_1a902d9e0_stmt> _137321_stmt = *it;
			{
				_137048_tokens=_137321_stmt.get()._field_tokens;
				jule::Ptr<_1d70a9c4c_FieldDecl> _137521_f = _1a905474c_build_field(_self_, _137048_tokens);;
				_137117_fields = jule::alloc_for_append(_137117_fields,1);_137117_fields.__push(_137521_f);;
			}
			_iter_next_1ac5eec8e:;
			++it;
			goto _iter_begin_1ac5eec8e;
		}
		_iter_end_1ac5eec8e:;
	};
	return _137117_fields;
}



inline jule::Ptr<_1d70aa500_StructDecl> _1a9054d9b_build_struct_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _138142_tokens) {
	if ((_138142_tokens.len() < 3LL)) {
		_1a904abe9_push_err(_self_.ptr(), _138142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _138717_i = 1LL;;
	jule::Ptr<_1d70aa500_StructDecl> _138817_s = jule::new_ptr<_1d70aa500_StructDecl>(_1d70aa500_StructDecl{._field_token=_138142_tokens[_138717_i], });;
	if ((_138817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _138817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_138717_i)++;
	if ((_138717_i >= _138142_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _138142_tokens[_138717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _138817_s;
	};
	_138817_s.get()._field_ident=_138817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_20201c3d1_Token> _140213_error_token = _138142_tokens[_138717_i];;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _140317_generics_tokens = _1a904882e_range(_138717_i,jule::Str("[", 1),jule::Str("]", 1),_138142_tokens);;
	if ((_140317_generics_tokens != nullptr)) {
		_138817_s.get()._field_generics=_1a904dda6_build_generics(_self_.ptr(), _140317_generics_tokens,_140213_error_token);
	};
	if ((_138717_i >= _138142_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _138142_tokens[(_138717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _138817_s;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _141317_body_tokens = _1a904882e_range(_138717_i,jule::Str("{", 1),jule::Str("}", 1),_138142_tokens);;
	if ((_141317_body_tokens == nullptr)) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _138817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _138817_s;
	};
	if ((_138717_i < _138142_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _138142_tokens[_138717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_138817_s.get()._field_fields=_1a9054a7c_build_struct_decl_fields(_self_, _141317_body_tokens);
	_138817_s.get()._field_end=_138142_tokens[(_138717_i - 1LL)];
	return _138817_s;
}



inline void _1a9055121_check_method_receiver(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a1c66_FnDecl>& _142841_f) {
	if (_142841_f.get()._field_statically) {
		if (((_142841_f.get()._field_params.len() > 0LL) && _1d70a0ca9_is_self(_142841_f.get()._field_params[0LL].ptr()))) {
			_1a904abe9_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_142841_f.get()._field_params.len() == 0LL)) {
		_1a904abe9_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d70a0946_ParamDecl> _144113_param = _142841_f.get()._field_params[0LL];;
	if ((!(_1d70a0ca9_is_self(_144113_param.ptr())))) {
		_1a904abe9_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>> _1a905542e_build_trait_methods(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _144843_tokens) {
	jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>> _144917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _145017_stmts = _1a902dd86_split_stmts(_144843_tokens);;
	{
		auto &expr = _145017_stmts;
		auto it = expr.begin();
		_iter_begin_1ac610882:;
		if (it != expr.end()) {
			jule::Ptr<_1a902d9e0_stmt> _145121_stmt = *it;
			{
				_144843_tokens=_145121_stmt.get()._field_tokens;
				if ((_144843_tokens.len() == 0LL)) {
					goto _iter_next_1ac610882;
				};
				jule::Bool _145721_is_pub = false;;
				if ((_144843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_145721_is_pub=true;
					if ((_144843_tokens.len() == 1LL)) {
						_1a904abe9_push_err(_self_.ptr(), _144843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1ac610882;
					};
					_144843_tokens=_144843_tokens.slice(1LL);
				};
				jule::Ptr<_1d70a1c66_FnDecl> _146721_f = _1a9051716_build_fn(_self_, _144843_tokens,true,true);;
				if ((_146721_f != nullptr)) {
					if (_1d70a20b8_is_anon(_146721_f.ptr())) {
						_1a904abe9_push_err(_self_.ptr(), _146721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1a9055121_check_method_receiver(_self_.ptr(), _146721_f);
					if ((_146721_f.get()._field_generics.len() > 0LL)) {
						_1a904abe9_push_err(_self_.ptr(), _146721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_146721_f.get()._field_public=_145721_is_pub;
					_144917_methods = jule::alloc_for_append(_144917_methods,1);_144917_methods.__push(_146721_f);;
				};
			}
			_iter_next_1ac610882:;
			++it;
			goto _iter_begin_1ac610882;
		}
		_iter_end_1ac610882:;
	};
	return _144917_methods;
}



inline jule::Ptr<_1d70aab0a_TraitDecl> _1a905573c_build_trait_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _148341_tokens) {
	if ((_148341_tokens.len() < 3LL)) {
		_1a904abe9_push_err(_self_.ptr(), _148341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d70aab0a_TraitDecl> _148817_t = jule::new_ptr<_1d70aab0a_TraitDecl>(_1d70aab0a_TraitDecl{._field_token=_148341_tokens[1LL], });;
	if ((_148817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _148817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_148817_t.get()._field_ident=_148817_t.get()._field_token.get()._field_kind;
	jule::I64 _149617_i = 2LL;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _149717_body_tokens = _1a904882e_range(_149617_i,jule::Str("{", 1),jule::Str("}", 1),_148341_tokens);;
	if ((_149717_body_tokens == nullptr)) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _148817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_149617_i < _148341_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _148341_tokens[_149617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_148817_t.get()._field_methods=_1a905542e_build_trait_methods(_self_, _149717_body_tokens);
	_148817_t.get()._field_end=_148341_tokens[(_149617_i - 1LL)];
	return _148817_t;
}



inline jule::Ptr<_1d70a1c66_FnDecl> _1a9055a4a_build_cpp_link_fn(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _151241_tokens) {
	_151241_tokens=_151241_tokens.slice(1LL);
	jule::Ptr<_1d70a1c66_FnDecl> _151417_f = _1a9051716_build_fn(_self_, _151241_tokens,false,true);;
	if ((_151417_f != nullptr)) {
		if (_1d70a20b8_is_anon(_151417_f.ptr())) {
			_1a904abe9_push_err(_self_.ptr(), _151417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_151417_f.get()._field_cpp_linked=true;
	};
	return _151417_f;
}



inline jule::Ptr<_1d70a2c45_VarDecl> _1a9055d58_build_cpp_link_var(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _152442_tokens) {
	_152442_tokens=_152442_tokens.slice(1LL);
	jule::Ptr<_1d70a2c45_VarDecl> _152617_v = _1a904d6e1_build_var(_self_, _152442_tokens);;
	if ((_152617_v != nullptr)) {
		_152617_v.get()._field_cpp_linked=true;
		if ((_152617_v.get()._field_expr != nullptr)) {
			_1a904abe9_push_err(_self_.ptr(), _152617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _152617_v;
}



inline jule::Ptr<_1d70aa500_StructDecl> _1a9056166_build_cpp_link_struct(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _153645_tokens) {
	_153645_tokens=_153645_tokens.slice(1LL);
	jule::Ptr<_1d70aa500_StructDecl> _153817_s = _1a9054d9b_build_struct_decl(_self_, _153645_tokens);;
	if ((_153817_s != nullptr)) {
		_153817_s.get()._field_cpp_linked=true;
	};
	return _153817_s;
}



inline jule::Ptr<_1d70a65a6_TypeAliasDecl> _1a9056496_build_cpp_link_type_alias(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _154549_tokens) {
	_154549_tokens=_154549_tokens.slice(1LL);
	jule::Ptr<_1d70a65a6_TypeAliasDecl> _154717_t = _1a904c921_build_type_alias_decl(_self_, _154549_tokens);;
	if ((_154717_t != nullptr)) {
		_154717_t.get()._field_cpp_linked=true;
	};
	return _154717_t;
}



inline jule::Ptr<_1d70a7992_UseDecl> _1a90567b5_build_cpp_link_use(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _155442_tokens) {
	if ((_155442_tokens.len() == 1LL)) {
		_1a904abe9_push_err(_self_.ptr(), _155442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_155442_tokens=_155442_tokens.slice(1LL);
	;
	return _1a9052b57_build_use_decl(_self_.ptr(), _155442_tokens,true);
}



inline jule::Any _1a9056ac3_build_cpp_link(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _156539_tokens) {
	jule::Ptr<_20201c3d1_Token> _156617_token = _156539_tokens[0LL];;
	if ((_156539_tokens.len() == 1LL)) {
		_1a904abe9_push_err(_self_.ptr(), _156617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_156617_token=_156539_tokens[1LL];
	{
		auto &_match_expr{ _156617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac62727d:;
			{
				return static_cast<jule::Any>(_1a9055a4a_build_cpp_link_fn(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac628207:;
			{
				return static_cast<jule::Any>(_1a9055d58_build_cpp_link_var(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ac62826d:;
			{
				return static_cast<jule::Any>(_1a9056166_build_cpp_link_struct(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac6282d4:;
			{
				return static_cast<jule::Any>(_1a9056496_build_cpp_link_type_alias(_self_, _156539_tokens));
			}
		}
		else {
			_case_begin_1ac628119:;
			{
				_1a904abe9_push_err(_self_.ptr(), _156617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac6280a3:;
	};
	return nullptr;
}



inline jule::Ptr<_1d70a1c66_FnDecl> _1a9056dd1_get_method(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _158935_tokens) {
	jule::I64 _159017_i = 0LL;;
	jule::Ptr<_20201c3d1_Token> _159117_token = _158935_tokens[_159017_i];;
	if ((_159117_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_159017_i + 1LL) >= _158935_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _159117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_159017_i)++;
		_159117_token=_158935_tokens[_159017_i];
	};
	if ((_159117_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_159017_i + 1LL) >= _158935_tokens.len())) {
			_1a904abe9_push_err(_self_.ptr(), _159117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_159017_i)++;
		_159117_token=_158935_tokens[_159017_i];
	};
	if ((_159117_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1a904abe9_push_err(_self_.ptr(), _159117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d70a1c66_FnDecl> _161517_f = _1a9051716_build_fn(_self_, _158935_tokens,true,false);;
	if (((_161517_f != nullptr) && _1d70a20b8_is_anon(_161517_f.ptr()))) {
		_1a904abe9_push_err(_self_.ptr(), _161517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _161517_f;
}



inline void _1a9057200_parse_impl_body(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_1d70ab215_Impl>& _162240_ipl, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _162257_tokens) {
	jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _162317_stmts = _1a902dd86_split_stmts(_162257_tokens);;
	{
		auto &expr = _162317_stmts;
		auto it = expr.begin();
		_iter_begin_1ac632046:;
		if (it != expr.end()) {
			jule::Ptr<_1a902d9e0_stmt> _162421_stmt = *it;
			{
				_162257_tokens=_162421_stmt.get()._field_tokens;
				jule::Ptr<_20201c3d1_Token> _162621_token = _162257_tokens[0LL];;
				jule::Bool _162721_is_pub = false;;
				{
					auto &_match_expr{ _162621_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1ac633a1a:;
						{
							_1a904b8a9_push_directive(_self_.ptr(), _1a904b634_build_directive(_self_.ptr(), _162257_tokens));
							goto _iter_next_1ac632046;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1ac633ab4:;
						{
							_162721_is_pub=true;
							if ((_162257_tokens.len() == 1LL)) {
								_1a904abe9_push_err(_self_.ptr(), _162257_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1ac632046;
							};
							_162257_tokens=_162257_tokens.slice(1LL);
							if ((_162257_tokens.len() > 0LL)) {
								_162621_token=_162257_tokens[0LL];
							};
						}
					}
					_match_end_1ac6339a4:;
				};
				{
					auto &_match_expr{ _162621_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1ac632a91:;
						{
							jule::Ptr<_1d70a2c45_VarDecl> _164625_v = _1a904d6e1_build_var(_self_, _162257_tokens);;
							if ((_164625_v != nullptr)) {
								_164625_v.get()._field_public=_162721_is_pub;
								_162240_ipl.get()._field_statics = jule::alloc_for_append(_162240_ipl.get()._field_statics,1);_162240_ipl.get()._field_statics.__push(_164625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ac6348ea:;
						{
							jule::Ptr<_1d70a1c66_FnDecl> _165425_f = _1a9056dd1_get_method(_self_, _162257_tokens);;
							if ((_165425_f != nullptr)) {
								_1a9055121_check_method_receiver(_self_.ptr(), _165425_f);
								_1a9057b3a_apply_fn_meta(_self_.ptr(), _165425_f,_162721_is_pub);
								_162240_ipl.get()._field_methods = jule::alloc_for_append(_162240_ipl.get()._field_methods,1);_162240_ipl.get()._field_methods.__push(_165425_f);;
							};
						}
					}
					else {
						_case_begin_1ac634037:;
						{
							_1a904abe9_push_err(_self_.ptr(), _162621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1ac632046;
						}
					}
					_match_end_1ac633ed2:;
				};
			}
			_iter_next_1ac632046:;
			++it;
			goto _iter_begin_1ac632046;
		}
		_iter_end_1ac632046:;
	};
}



inline jule::Ptr<_1d70ab215_Impl> _1a905750d_build_impl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _166734_tokens) {
	jule::Ptr<_20201c3d1_Token> _166817_token = _166734_tokens[0LL];;
	if ((_166734_tokens.len() < 2LL)) {
		_1a904abe9_push_err(_self_.ptr(), _166817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _167417_i = 1LL;;
	jule::Ptr<_1d709023d_TypeDecl> _167618_base;;
	jule::Bool _167628_ok;;
	std::tie(_167618_base,_167628_ok) = _1a904c613_build_type(_self_, _166734_tokens,(&(_167417_i)),true);
	if ((!(_167628_ok))) {
		return nullptr;
	};
	if ((_167417_i >= _166734_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _166817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d70ab215_Impl> _168517_ipl = jule::new_ptr<_1d70ab215_Impl>(_1d70ab215_Impl{._field_base=_167618_base, });;
	_166817_token=_166734_tokens[_167417_i];
	if ((_166817_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_166817_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_166817_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_168517_ipl.get()._field_base,_168517_ipl.get()._field_dest) = std::make_tuple(_168517_ipl.get()._field_dest,_168517_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_167417_i)++;
	if ((_167417_i >= _166734_tokens.len())) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_168517_ipl.get()._field_dest,_167628_ok) = _1a904c613_build_type(_self_, _166734_tokens,(&(_167417_i)),true);
	if ((!(_167628_ok))) {
		return nullptr;
	};
	if ((_167417_i >= _166734_tokens.len())) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _172517_body_tokens = _1a904882e_range(_167417_i,jule::Str("{", 1),jule::Str("}", 1),_166734_tokens);;
	if ((_172517_body_tokens == nullptr)) {
		_1a904a5bc_stop(_self_.ptr());
		_1a904abe9_push_err(_self_.ptr(), _166817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_167417_i < _166734_tokens.len())) {
		_1a904abe9_push_err(_self_.ptr(), _166734_tokens[_167417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_168517_ipl.get()._field_end=_166734_tokens[(_167417_i - 1LL)];
	_1a9057200_parse_impl_body(_self_, _168517_ipl,_172517_body_tokens);
	return _168517_ipl;
}



inline jule::Any _1a905781b_build_node_data(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _174040_tokens) {
	jule::Ptr<_20201c3d1_Token> _174117_token = _174040_tokens[0LL];;
	{
		auto &_match_expr{ _174117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac6488ed:;
			{
				jule::Ptr<_1d70a1c66_FnDecl> _174521_f = _1a9051716_build_fn(_self_, _174040_tokens,false,false);;
				if ((_174521_f != nullptr)) {
					_174521_f.get()._field_global=true;
					if (_1d70a20b8_is_anon(_174521_f.ptr())) {
						_1a904abe9_push_err(_self_.ptr(), _174521_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_174521_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1ac648964:;
			{
				return static_cast<jule::Any>(_1a904d6e1_build_var(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac64926c:;
			{
				return static_cast<jule::Any>(_1a904c921_build_type_alias_decl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1ac6492d3:;
			{
				return _1a905443e_build_node_enum_decl(_self_, _174040_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ac649349:;
			{
				return static_cast<jule::Any>(_1a9054d9b_build_struct_decl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac6493b0:;
			{
				return static_cast<jule::Any>(_1a905573c_build_trait_decl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac649426:;
			{
				return static_cast<jule::Any>(_1a905750d_build_impl(_self_, _174040_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac6494d1:;
			{
				return _1a9056ac3_build_cpp_link(_self_, _174040_tokens);
			}
		}
		else {
			_case_begin_1ac6487dd:;
			{
				_1a904abe9_push_err(_self_.ptr(), _174117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac648744:;
	};
}



inline void _1a9057b3a_apply_fn_meta(_1a904a28c_Parser* _self_, jule::Ptr<_1d70a1c66_FnDecl>& _177637_f, jule::Bool _177649_is_pub) {
	_177637_f.get()._field_public=_177649_is_pub;
	_177637_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1a9057e59_apply_meta(_1a904a28c_Parser* _self_, _1d705b968_Node& _178234_node, jule::Bool _178246_is_pub) {
	{
		auto &_match_expr{ _178234_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d70a2c45_VarDecl>>()) {
			_case_begin_1ac65172a:;
			{
				jule::Ptr<_1d70a2c45_VarDecl> _178521_v = _178234_node._field_data.operator jule::Ptr<_1d70a2c45_VarDecl>();;
				if ((_178521_v == nullptr)) {
					return;;
				};
				_178521_v.get()._field_public=_178246_is_pub;
				_178521_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a1c66_FnDecl>>()) {
			_case_begin_1ac650d89:;
			{
				jule::Ptr<_1d70a1c66_FnDecl> _179321_f = _178234_node._field_data.operator jule::Ptr<_1d70a1c66_FnDecl>();;
				if ((_179321_f == nullptr)) {
					return;;
				};
				_1a9057b3a_apply_fn_meta(&(*_self_), _179321_f,_178246_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a65a6_TypeAliasDecl>>()) {
			_case_begin_1ac650e11:;
			{
				jule::Ptr<_1d70a65a6_TypeAliasDecl> _179921_tad = _178234_node._field_data.operator jule::Ptr<_1d70a65a6_TypeAliasDecl>();;
				if ((_179921_tad == nullptr)) {
					return;;
				};
				_179921_tad.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a893d_EnumDecl>>()) {
			_case_begin_1ac650e88:;
			{
				jule::Ptr<_1d70a893d_EnumDecl> _180521_ed = _178234_node._field_data.operator jule::Ptr<_1d70a893d_EnumDecl>();;
				if ((_180521_ed == nullptr)) {
					return;;
				};
				_180521_ed.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70a9a4e_TypeEnumDecl>>()) {
			_case_begin_1ac651285:;
			{
				jule::Ptr<_1d70a9a4e_TypeEnumDecl> _181121_ted = _178234_node._field_data.operator jule::Ptr<_1d70a9a4e_TypeEnumDecl>();;
				if ((_181121_ted == nullptr)) {
					return;;
				};
				_181121_ted.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70aa500_StructDecl>>()) {
			_case_begin_1ac6512eb:;
			{
				jule::Ptr<_1d70aa500_StructDecl> _181721_sd = _178234_node._field_data.operator jule::Ptr<_1d70aa500_StructDecl>();;
				if ((_181721_sd == nullptr)) {
					return;;
				};
				_181721_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_181721_sd.get()._field_public=_178246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70aab0a_TraitDecl>>()) {
			_case_begin_1ac651362:;
			{
				jule::Ptr<_1d70aab0a_TraitDecl> _182521_td = _178234_node._field_data.operator jule::Ptr<_1d70aab0a_TraitDecl>();;
				if ((_182521_td == nullptr)) {
					return;;
				};
				_182521_td.get()._field_public=_178246_is_pub;
			}
		}
		else {
			_case_begin_1ac650cce:;
			{
				if (_178246_is_pub) {
					_1a904abe9_push_err(&(*_self_), _178234_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ac650b36:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _1a9058289_build_general_scope_node_data(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _183753_st) {
	jule::Bool _183769_is_pub = jule::Bool();
	jule::Any _183783_data = jule::Any();
	if ((_183753_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_183769_is_pub=true;
		_183753_st=_183753_st.slice(1LL);
		if ((_183753_st.len() == 0LL)) {
			_1a904abe9_push_err(_self_.ptr(), _183753_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_183769_is_pub,_183783_data);
		};
	};
	_183783_data=_1a905781b_build_node_data(_self_, _183753_st);
	return std::make_tuple(_183769_is_pub,_183783_data);
}



inline void _1a9058520_push_use_decl(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_1d70a7992_UseDecl>& _185238_decl) {
	_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_185238_decl);;
	if ((_self_.get()._field_ast.get()._field_nodes.len() > 0LL)) {
		_1a904abe9_push_err(_self_.ptr(), _185238_decl.get()._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1a904b018_push_suggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a905882d_push_meta_nodes(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _186040_tokens) {
	{
		auto &_match_expr{ _186040_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac65e419:;
			{
				;
				jule::Ptr<_1d70a7992_UseDecl> _186421_decl = _1a9052b57_build_use_decl(_self_.ptr(), _186040_tokens,false);;
				_1a9058520_push_use_decl(_self_, _186421_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac65e480:;
			{
				if (((_186040_tokens.len() > 1LL) && (_186040_tokens[1LL].get()._field_id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1d70a7992_UseDecl> _186925_decl = _1a90567b5_build_cpp_link_use(_self_, _186040_tokens);;
					_1a9058520_push_use_decl(_self_, _186925_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1ac65e507:;
			{
				_1a904b8a9_push_directive(_self_.ptr(), _1a904b634_build_directive(_self_.ptr(), _186040_tokens));
				return true;
			}
		}
		_match_end_1ac65e31a:;
	};
	return false;
}



inline _1d705b968_Node _1a9058b3b_parse_node(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _188035_st) {
	_1d705b968_Node _188117_node = _1d705b968_Node{._field_token=_188035_st[0LL], };;
	if (_1a905882d_push_meta_nodes(_self_, _188035_st)) {
		return _188117_node;
	};
	jule::Bool _188914_is_pub;;
	jule::Any _188926_data;;
	std::tie(_188914_is_pub,_188926_data) = _1a9058289_build_general_scope_node_data(_self_, _188035_st);
	if ((_188926_data == nullptr)) {
		return _188117_node;
	};
	_188117_node._field_data=_188926_data;
	_1a9057e59_apply_meta(_self_.ptr(), _188117_node,_188914_is_pub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a904abe9_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188117_node;
}



inline void _1a9058db1_append_node(jule::Ptr<_1a904a28c_Parser> _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _190436_st) {
	if ((_190436_st.len() == 0LL)) {
		return;;
	};
	_1d705b968_Node _190917_node = _1a9058b3b_parse_node(_self_, _190436_st);;
	if (((_190917_node._field_data == nullptr) || _1a904a831_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_190917_node);;
}



inline void _1a9059323_remove_range(_1a904a28c_Parser* _self_, jule::I64 _191631_i, jule::Str _191639_kind, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _191651_tokens, jule::Slice<jule::I64>& _191674_ranges) {
	jule::Str _191713_close = _1a9049302_get_close_kind_of_brace(_191639_kind);;
	for (; (_191631_i >= 0LL); (_191631_i)--) {
		{
			jule::Ptr<_20201c3d1_Token> _191917_tok = _191651_tokens[_191674_ranges[_191631_i]];;
			if ((_191917_tok.get()._field_kind != _191713_close)) {
				goto _iter_next_1ac6695bc;
			};
			_191674_ranges=jule::append(_191674_ranges.slice(0LL,_191631_i),_191674_ranges.slice((_191631_i + 1LL)));
			goto _iter_end_1ac6695bc;
		}
	_iter_next_1ac6695bc:;
	}
	_iter_end_1ac6695bc:;;
}



inline void _1a905970d_push_wrong_order_close_err(_1a904a28c_Parser* _self_, jule::Ptr<_20201c3d1_Token>& _192846_t, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _192858_tokens, jule::Slice<jule::I64>& _192877_ranges) {
	{
		auto &_match_expr{ _192858_tokens[_192877_ranges[(_192877_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1ac66bb1e:;
			{
				_1a904abe9_push_err(&(*_self_), _192846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1ac66bb96:;
			{
				_1a904abe9_push_err(&(*_self_), _192846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1ac66bc1d:;
			{
				_1a904abe9_push_err(&(*_self_), _192846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac66b9dc:;
	};
}



inline void _1a9059b81_push_range_close(_1a904a28c_Parser* _self_, jule::Ptr<_20201c3d1_Token> _193935_t, jule::Str _193946_left, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _193958_tokens, jule::Slice<jule::I64>& _193981_ranges) {
	jule::I64 _194013_n = _193981_ranges.len();;
	if ((_194013_n == 0LL)) {
		{
			auto &_match_expr{ _193935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1ac66eb88:;
				{
					_1a904abe9_push_err(&(*_self_), _193935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1ac66ebee:;
				{
					_1a904abe9_push_err(&(*_self_), _193935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1ac66ec76:;
				{
					_1a904abe9_push_err(&(*_self_), _193935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1ac66e935:;
		};
		return;;
	} else if ((_193958_tokens[_193981_ranges[(_194013_n - 1LL)]].get()._field_kind != _193946_left)) {
		_1a905970d_push_wrong_order_close_err(&(*_self_), _193935_t,_193958_tokens,_193981_ranges);
	};
	_1a9059323_remove_range(&(*_self_), static_cast<jule::I64>((_194013_n - 1LL)),_193935_t.get()._field_kind,_193958_tokens,_193981_ranges);
}



inline void _1a9059e06_check_ranges(_1a904a28c_Parser* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _195732_tokens) {
	jule::Slice<jule::I64> _195817_ranges = nullptr;;
	{
		auto &expr = _195732_tokens;
		auto it = expr.begin();
		_iter_begin_1ac6736a3:;
		if (it != expr.end()) {
			jule::I64 _196013_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> &_196016_token = *it;
			{
				if ((_196016_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1ac6736a3;
				};
				{
					auto &_match_expr{ _196016_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1ac67493a:;
						{
							_195817_ranges = jule::alloc_for_append(_195817_ranges,1);_195817_ranges.__push(_196013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ac6749d4:;
						{
							_1a9059b81_push_range_close(&(*_self_), _196016_token,jule::Str("(", 1),_195732_tokens,_195817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ac674a4a:;
						{
							_1a9059b81_push_range_close(&(*_self_), _196016_token,jule::Str("{", 1),_195732_tokens,_195817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ac674ab1:;
						{
							_1a9059b81_push_range_close(&(*_self_), _196016_token,jule::Str("[", 1),_195732_tokens,_195817_ranges);
						}
					}
					_match_end_1ac6744b7:;
				};
			}
			_iter_next_1ac6736a3:;
			++it;
			_196013_i++;
			goto _iter_begin_1ac6736a3;
		}
		_iter_end_1ac6736a3:;
	};
	{
		auto &expr = _195817_ranges;
		auto it = expr.begin();
		_iter_begin_1ac676bd4:;
		if (it != expr.end()) {
			jule::I64 _197816_i = *it;
			{
				jule::Ptr<_20201c3d1_Token> _197917_token = _195732_tokens[_197816_i];;
				{
					auto &_match_expr{ _197917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ac67794e:;
						{
							_1a904abe9_push_err(&(*_self_), _197917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1ac6779c6:;
						{
							_1a904abe9_push_err(&(*_self_), _197917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ac677a4d:;
						{
							_1a904abe9_push_err(&(*_self_), _197917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1ac677883:;
				};
			}
			_iter_next_1ac676bd4:;
			++it;
			goto _iter_begin_1ac676bd4;
		}
		_iter_end_1ac676bd4:;
	};
}



inline void _1a905a17b_parse(jule::Ptr<_1a904a28c_Parser> _self_, jule::Ptr<_20202276b_File>& _199130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1d705abdc_Ast>(_1d705abdc_Ast{._field_file=_199130_f, });
	_1a9059e06_check_ranges(_self_.ptr(), _199130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _200117_stmts = _1a902dd86_split_stmts(_199130_f.get()._field_tokens);;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1a902d9e0_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_1ac67b0c3;
			};
			if ((!(_201be2c77_is_top_directive(_200621_stmt.get()._field_tokens[1LL].get()._field_kind)))) {
				goto _iter_end_1ac67b0c3;
			};
			_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_1a904b634_build_directive(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_1ac67b0c3:;
	}
	_iter_end_1ac67b0c3:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1a902d9e0_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1a9058db1_append_node(_self_, _202321_stmt.get()._field_tokens);
			if (_1a904a831_stopped(_self_.ptr())) {
				goto _iter_end_1ac67e219;
			};
		}
	_iter_next_1ac67e219:;
	}
	_iter_end_1ac67e219:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a904abe9_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a904a28c_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1a905bc0a_push_err(_1a905b666_TypeBuilder* _self_, jule::Ptr<_20201c3d1_Token> _7827_token, jule::Str _7842_fmt) {
	if ((*_self_)._field_err) {
		_1a904abe9_push_err((*_self_)._field_p.ptr(), _7827_token,_7842_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1a905c029_push_suggestion(_1a905b666_TypeBuilder* _self_, jule::Str _8534_fmt, jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_1a904b018_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,jule::Any(_8547_args));
	};
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905c28d_build_prim(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_1d709023d_TypeDecl> _9217_t = _1a905ad19_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905c502_build_namespace(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_1d709023d_TypeDecl> _9817_t = jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1d709130a_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_1d709130a_NamespaceTypeDecl>();;
	jule::I64 _10317_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20201c3d1_Token> _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10317_n & 1LL) == 0LL)) {
				if ((_10521_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1a905bc0a_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_1a905c029_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);;
			} else if ((_10521_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1ac689da1;
			};
			(_10317_n)++;
		}
	_iter_next_1ac689da1:;
	}
	_iter_end_1ac689da1:;;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_1a905cc3e_build_ident(&(*_self_));
	_9817_t.get()._field_kind=static_cast<jule::Any>(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _1a905c766_build_generics(_1a905b666_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_20201c3d1_Token> _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13113_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13113_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _13617_parts = _1a905c9ca_ident_generics(&(*_self_));;
	if ((_13617_parts.len() == 0LL)) {
		_1a905bc0a_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d709023d_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1d709023d_TypeDecl>>::alloc(0LL,_13617_parts.len());;
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1ac692b67:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _14321_part = *it;
			{
				jule::I64 _14421_j = 0LL;;
				jule::Ptr<_1d709023d_TypeDecl> _14522_t;;
				std::tie(_14522_t,std::ignore) = _1a904c613_build_type((*_self_)._field_p, _14321_part,(&(_14421_j)),true);
				if ((_14421_j < _14321_part.len())) {
					_1a905bc0a_push_err(&(*_self_), _14321_part[_14421_j],jule::Str("invalid syntax", 14));
				};
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);;
			}
			_iter_next_1ac692b67:;
			++it;
			goto _iter_begin_1ac692b67;
		}
		_iter_end_1ac692b67:;
	};
	return _14217_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a905c9ca_ident_generics(_1a905b666_TypeBuilder* _self_) {
	jule::I64 _15513_first = (*((*_self_)._field_i));;
	jule::I64 _15617_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_20201c3d1_Token> _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15817_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15817_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ac696ebd:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ac697045:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1ac696c8c:;
				};
			};
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1ac695b37;
			};
		}
	_iter_next_1ac695b37:;
	}
	_iter_end_1ac695b37:;;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _17217_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _17318_parts;;
	jule::Slice<_201be0d52_Log> _17325_errors;;
	std::tie(_17318_parts,_17325_errors) = _1a9049038_parts(_17217_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17325_errors);
	};
	return _17318_parts;
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905cc3e_build_ident(_1a905b666_TypeBuilder* _self_) {
	jule::Bool _18117_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_18117_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1a905c502_build_namespace(&(*_self_));
	};
	jule::Ptr<_20201c3d1_Token> _18517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1d7090804_IdentTypeDecl> _18617_it = jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_18517_token, ._field_ident=_18517_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d709023d_TypeDecl> _19217_itd = jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_18517_token, ._field_kind=static_cast<jule::Any>(_18617_it)});;
	if (((!(_18117_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_18617_it.get()._field_generics=_1a905c766_build_generics(&(*_self_));
		return _19217_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1a905bc0a_push_err(&(*_self_), _18517_token,jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1a905bc0a_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	jule::Ptr<_1d7090e53_SubIdentTypeDecl> _20917_sit = jule::new_ptr<_1d7090e53_SubIdentTypeDecl>();;
	_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_18617_it);;
	jule::Ptr<_1d709023d_TypeDecl> _21117_ident = _1a905cc3e_build_ident(&(*_self_));;
	{
		auto &_match_expr{ _21117_ident.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7090804_IdentTypeDecl>>()) {
			_case_begin_1ac6a2869:;
			{
				_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_21117_ident.get()._field_kind.operator jule::Ptr<_1d7090804_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7090e53_SubIdentTypeDecl>>()) {
			_case_begin_1ac6a28d0:;
			{
				_20917_sit.get()._field_idents=jule::append(_20917_sit.get()._field_idents,_21117_ident.get()._field_kind.operator jule::Ptr<_1d7090e53_SubIdentTypeDecl>().get()._field_idents);
			}
		}
		_match_end_1ac6a27d1:;
	};
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_18517_token, ._field_kind=static_cast<jule::Any>(_20917_sit)});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905cea3_build_cpp_link(_1a905b666_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1a905bc0a_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1d709023d_TypeDecl> _23017_t = _1a905cc3e_build_ident(&(*_self_));;
	_23017_t.get()._field_kind.operator jule::Ptr<_1d7090804_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _23017_t;
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905d217_build_fn(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _23617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1d70a1c66_FnDecl> _23717_f = _1a90512b5_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23717_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1d70a20b8_is_anon(_23717_f.ptr())))) {
		_1a905bc0a_push_err(&(*_self_), _23717_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_23617_token, ._field_kind=static_cast<jule::Any>(_23717_f)});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905d47b_build_ptr(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _25117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1a905bc0a_push_err(&(*_self_), _25117_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_25117_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d70920b9_PtrTypeDecl>(_1d70920b9_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1d709023d_TypeDecl> _26817_elem = _1a905e7ac_step(&(*_self_));;
	if ((_26817_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_25117_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d70920b9_PtrTypeDecl>(_1d70920b9_PtrTypeDecl{._field_elem=_26817_elem}))});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905d6e0_build_sptr(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _28217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1a905bc0a_push_err(&(*_self_), _28217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d709023d_TypeDecl> _28917_elem = _1a905e7ac_step(&(*_self_));;
	if ((_28917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_28217_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d70915e6_SptrTypeDecl>(_1d70915e6_SptrTypeDecl{._field_elem=_28917_elem}))});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905d954_build_op(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _30317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _30317_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac6b1801:;
			{
				return _1a905d47b_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ac6b1867:;
			{
				return _1a905d6e0_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ac6b18cd:;
			{
				return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d70915e6_SptrTypeDecl>(_1d70915e6_SptrTypeDecl{._field_elem=_1a905d6e0_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1ac6b178a:;
			{
				_1a905bc0a_push_err(&(*_self_), _30317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1ac6b16e1:;
	};
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905dbb8_build_slc(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _32217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d709023d_TypeDecl> _32417_elem = _1a905e7ac_step(&(*_self_));;
	if ((_32417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_32217_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d70919e2_SlcTypeDecl>(_1d70919e2_SlcTypeDecl{._field_elem=_32417_elem}))});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905de2c_build_arr(_1a905b666_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1a905bc0a_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34513_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1d709023d_TypeDecl> _34717_elem = _1a905e7ac_step(&(*_self_));;
	if ((_34717_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1d709274b_ArrTypeDecl> _35217_arrt = jule::new_ptr<_1d709274b_ArrTypeDecl>(_1d709274b_ArrTypeDecl{._field_elem=_34717_elem, });;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _35617_expr_tokens = (*_self_)._field_tokens.slice(0LL,_34513_expr_delta);;
	std::tie(std::ignore,_35617_expr_tokens) = _1a9048ac6_range_last(_35617_expr_tokens);
	_35617_expr_tokens=_35617_expr_tokens.slice(1LL,(_35617_expr_tokens.len() - 1LL));
	jule::Ptr<_20201c3d1_Token> _35917_token = _35617_expr_tokens[0LL];;
	if ((((_35617_expr_tokens.len() == 1LL) && (_35917_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_35917_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_35217_arrt.get()._field_size=_1a904b326_build_expr((*_self_)._field_p, _35617_expr_tokens);
	};
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_35917_token, ._field_kind=static_cast<jule::Any>(_35217_arrt)});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905e2d4_build_map(_1a905b666_TypeBuilder* _self_, jule::I64 _37228_colon, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _37245_tokens) {
	jule::Ptr<_20201c3d1_Token> _37317_colon_token = (*_self_)._field_tokens[_37228_colon];;
	if (((_37228_colon == 0LL) || ((_37228_colon + 1LL) >= _37245_tokens.len()))) {
		_1a905bc0a_push_err(&(*_self_), _37317_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _37817_key_tokens = _37245_tokens.slice(0LL,_37228_colon);;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _37917_val_tokens = _37245_tokens.slice((_37228_colon + 1LL));;
	jule::Ptr<_1d7092e99_MapTypeDecl> _38017_mapt = jule::new_ptr<_1d7092e99_MapTypeDecl>(_1d7092e99_MapTypeDecl{});;
	jule::I64 _38217_j = 0LL;;
	jule::Ptr<_1d709023d_TypeDecl> _38318_keyt;;
	jule::Bool _38328_ok;;
	std::tie(_38318_keyt,_38328_ok) = _1a904c613_build_type((*_self_)._field_p, _37817_key_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37817_key_tokens.len())) {
		_1a905bc0a_push_err(&(*_self_), _37817_key_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_key=_38318_keyt;
	_38217_j=0LL;
	jule::Ptr<_1d709023d_TypeDecl> _39218_valt;;
	std::tie(_39218_valt,_38328_ok) = _1a904c613_build_type((*_self_)._field_p, _37917_val_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37917_val_tokens.len())) {
		_1a905bc0a_push_err(&(*_self_), _37917_val_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_val=_39218_valt;
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_37317_colon_token, ._field_kind=static_cast<jule::Any>(_38017_mapt)});
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905e548_build_enumerable(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _40717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40717_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_40717_token.get()._field_kind != jule::Str("[", 1)))) {
		_1a905bc0a_push_err(&(*_self_), _40717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40717_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40717_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_40717_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1a905dbb8_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _42118_map_tokens;;
	jule::I64 _42130_colon;;
	std::tie(_42118_map_tokens,_42130_colon) = _1a905b15a_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_42130_colon == -1LL)) {
		return _1a905de2c_build_arr(&(*_self_));
	};
	return _1a905e2d4_build_map(&(*_self_), _42130_colon,_42118_map_tokens);
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905e7ac_step(_1a905b666_TypeBuilder* _self_) {
	jule::Ptr<_20201c3d1_Token> _43013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _43013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac6c861a:;
			{
				return _1a905c28d_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ac6c8681:;
			{
				return _1a905cc3e_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac6c86e7:;
			{
				return _1a905cea3_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac6c875d:;
			{
				return _1a905d217_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac6c796b:;
			{
				return _1a905d954_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ac6c79d2:;
			{
				return _1a905e548_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1ac6c7905:;
			{
				((*((*_self_)._field_i)))++;
				_1a905bc0a_push_err(&(*_self_), _43013_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1ac6c785b:;
	};
}



inline std::tuple<jule::Ptr<_1d709023d_TypeDecl>,jule::Bool> _1a905ea21_build(_1a905b666_TypeBuilder* _self_) {
	jule::Bool _45344_ok = jule::Bool();
	jule::Ptr<_1d709023d_TypeDecl> _45417_root = _1a905e7ac_step(&(*_self_));;
	if ((_45417_root == nullptr)) {
		_45344_ok = false;
		return std::make_tuple(_1a905aaa5_build_void_type(),_45344_ok);
	};
	_45344_ok = true;
	return std::make_tuple(_45417_root,_45344_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1a905b666_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0186516_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1c0187db9_push_err(_1c0187869_DirectiveEval* _self_, jule::Ptr<_20201c3d1_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_201be0d52_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_201be1292_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1c0188271_split_operans(_1c0187869_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ac706307:;
						{
							(_3717_range_n)++;
							goto _iter_next_1ac705207;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ac70636d:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1ac7060e8:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1ac705207;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1ac705207:;
	}
	_iter_end_1ac705207:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1c0187db9_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1c018857e_eval_directive_ident(_1c0187869_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac709abe:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1ac709abe:;
			++it;
			goto _iter_begin_1ac709abe;
		}
		_iter_end_1ac709abe:;
	};
	return false;
}



inline jule::Bool _1c018888c_eval_directive_part(_1c0187869_DirectiveEval* _self_, jule::Slice<jule::Ptr<_20201c3d1_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1c0187db9_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1c018857e_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1c0188b01_eval(_1c0187869_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1c0187db9_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _11317_logical_or_parts = _1c0188271_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1ac710c18:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _12021_logical_and_parts = _1c0188271_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1ac7129ea:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_20201c3d1_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_20201c3d1_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_20201c3d1_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1c0187db9_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1c018888c_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1ac7129ea:;
						++it;
						goto _iter_begin_1ac7129ea;
					}
					_iter_end_1ac7129ea:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1ac710c18:;
			++it;
			goto _iter_begin_1ac710c18;
		}
		_iter_end_1ac710c18:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0187869_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8add45c_JuleImporter> static__1d698d576_new(_1c0186516_CompileInfo _5823_info) {
	jule::Ptr<_1a8add45c_JuleImporter> _5917_imp = jule::new_ptr<_1a8add45c_JuleImporter>(_1a8add45c_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_201c13726_PATH_STDLIB}), });;
	_1c0186d30_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1be272d40_ImportInfo>> _1d69923c1_all_packages(_1a8add45c_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1d69ead75_set_mod_path(_1a8add45c_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1d6a06688_get_mod_path(_1a8add45c_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1d6a18865_mod_by_id(_1a8add45c_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1be272d40_ImportInfo> _1a8a388e6_get_import(_1a8add45c_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ac71a195:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1ac71a195:;
			++it;
			goto _iter_begin_1ac71a195;
		}
		_iter_end_1ac71a195:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d705abdc_Ast>>,jule::Slice<_201be0d52_Log>> _1a8a3a233_import_package(_1a8add45c_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1eedea426_DirEntry>> _9717_dirents = ({
		auto except = static__200bbb14c_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_201be0d52_Log>::make({_1d697675c_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_1eedea426_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1c01978ac_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_201be0d52_Log> _10525_errs = _1c0197b43_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1d705abdc_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1d705abdc_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1ac71db27:;
		if (it != expr.end()) {
			jule::Ptr<_1eedea426_DirEntry> _11316_dirent = *it;
			{
				if ((_1eed19972_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_200ced34a_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1ac71db27;
				};
				jule::Str _11917__path = _200cabda8_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_20202276b_File> _12021_file = _202023c9a_new_file_set(_11917__path);;
				_202022ded_fill(_12021_file.ptr(), _1d697798e_read_buff(_12021_file.get()._field_path));
				jule::Slice<_201be0d52_Log> _12221_errors = _20202e712_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1a8ed48b9_FileInfo> _12721_finfo = _1a902b955_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1c016bd7b_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1ac71db27;
				};
				jule::Bool _13718_r;;
				jule::Slice<_201be0d52_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1a8a588d3_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1ac71db27;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1ac71db27:;
			++it;
			goto _iter_begin_1ac71db27;
		}
		_iter_end_1ac71db27:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1a8a4445c_imported(_1a8add45c_JuleImporter* _self_, jule::Ptr<_1be272d40_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ac725821:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1ac725821:;
			++it;
			goto _iter_begin_1ac725821;
		}
		_iter_end_1ac725821:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1ac727180:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1ac727180:;
				++it;
				_16217_i++;
				goto _iter_begin_1ac727180;
			}
			_iter_end_1ac727180:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_201be0d52_Log>> _1a8a588d3_is_pass_build_directives(_1a8add45c_JuleImporter* _self_, jule::Ptr<_1d705abdc_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1ac72a480:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1ac72a480;
				};
				_1c0187869_DirectiveEval _18421_de = _1c0187869_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1c0188b01_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1ac72a480:;
			++it;
			goto _iter_begin_1ac72a480;
		}
		_iter_end_1ac72a480:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8add45c_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6983e2e_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac74e460_is_common_ordered(jule::Slice<jule::Ptr<_1d7073276_Struct>>& _1837_s, jule::Ptr<_1d7073276_Struct> _1846_t) {
	jule::Ptr<_1d7073276_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1d7073276_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1ac7517a3:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1ac7517a3;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1ac7517a3:;
			++it;
			goto _iter_begin_1ac7517a3;
		}
		_iter_end_1ac7517a3:;
	};
	return false;
}

inline jule::Bool _1ac757a62_is_common_ordered(jule::Slice<jule::Ptr<_1be36365b_Var>>& _1837_s, jule::Ptr<_1be36365b_Var> _1846_t) {
	jule::Ptr<_1be36365b_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1be36365b_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1ac759d61:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1ac759d61;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1ac759d61:;
			++it;
			goto _iter_begin_1ac759d61;
		}
		_iter_end_1ac759d61:;
	};
	return false;
}



inline void _1ac749636_order_common(jule::Slice<jule::Ptr<_1d7073276_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1ac74a978:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1d7073276_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1ac74a978:;
			++it;
			_4114_j++;
			goto _iter_begin_1ac74a978;
		}
		_iter_end_1ac74a978:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1ac74e460_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1ac74d0c9:;
			}
			_iter_end_1ac74d0c9:;;
		}
	_iter_next_1ac74a901:;
	}
	_iter_end_1ac74a901:;;
}

inline void _1ac74a25d_order_common(jule::Slice<jule::Ptr<_1be36365b_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1ac75407a:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1be36365b_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1ac75407a:;
			++it;
			_4114_j++;
			goto _iter_begin_1ac75407a;
		}
		_iter_end_1ac75407a:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1ac757a62_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1ac7566cb:;
			}
			_iter_end_1ac7566cb:;;
		}
	_iter_next_1ac754003:;
	}
	_iter_end_1ac754003:;;
}



inline void static__1a8b9d2b9_order_structures(jule::Slice<jule::Ptr<_1d7073276_Struct>>& _6141_structs) {
	_1ac749636_order_common(_6141_structs);
}



inline void static__1a8e817ab_order_vars(jule::Slice<jule::Ptr<_1be36365b_Var>>& _6735_vars) {
	_1ac74a25d_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a901a57b_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9105b72_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a910a292_optimize_child(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be1ca25e_Scope>& _3839_s) {
	jule::Ptr<_1a9109cca_ScopeDeadCode> _3917_sdc = jule::new_ptr<_1a9109cca_ScopeDeadCode>(_1a9109cca_ScopeDeadCode{._field_parent=_self_, ._field_s=_3839_s, ._field_stmts=(&(_3839_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1a910c629_optimize_stmts(_3917_sdc);
	};
}



inline void _1a910a517_optimize_body_child(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be1ca25e_Scope>& _4944_s) {
	jule::Ptr<_1a9109cca_ScopeDeadCode> _5017_sdc = jule::new_ptr<_1a9109cca_ScopeDeadCode>(_1a9109cca_ScopeDeadCode{._field_s=_4944_s, ._field_stmts=(&(_4944_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1a910c629_optimize_stmts(_5017_sdc);
	};
}



inline void _1a910a78c_optimize_expr_model(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Any& _5944_model) {
	_1a910d99e_ExprDeadCode _6013_edc = static__1a910e098_new(_self_);;
	_1a9114543_optimize(&_6013_edc, _5944_model);
}



inline void _1a910a968_eliminate_followed(_1a9109cca_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1a9109cca_ScopeDeadCode> _7117_parent = (*_self_)._field_parent;;
	while ((_7117_parent != nullptr)) {
		{
			{
				(*(_7117_parent.get()._field_stmts))=(*(_7117_parent.get()._field_stmts)).slice(0LL,(_7117_parent.get()._field_i + 1LL));
			};
			_7117_parent=_7117_parent.get()._field_parent;
		}
	_iter_next_1ac7ca277:;
	}
	_iter_end_1ac7ca277:;;
}



inline void _1a910abdd_push_goto(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be259178_GotoSt> _8033_gt) {
	jule::I64 _8117_i = 0LL;;
	for (; (_8117_i < _self_.get()._field_labels.get().len()); (_8117_i)++) {
		{
			if ((_8033_gt.get()._field_ident == (*(_self_.get()._field_labels))[_8117_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1ac7ccbb4:;
	}
	_iter_end_1ac7ccbb4:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1be259178_GotoSt>>::make({_8033_gt}));
}



inline void _1a910ae63_push_label(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be258e8b_Label> _9034_l) {
	jule::I64 _9117_i = 0LL;;
	while ((_9117_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_9034_l.get()._field_ident == (*(_self_.get()._field_gotos))[_9117_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_9117_i)), ((*(_self_.get()._field_gotos)).slice((_9117_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1ac7ce985;
			};
			(_9117_i)++;
		}
	_iter_next_1ac7ce985:;
	}
	_iter_end_1ac7ce985:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1be258e8b_Label>>::make({_9034_l}));
}



inline void _1a910b1d8_optimize_range_iter(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be2588c5_RangeIter> _10343_it) {
	_1a910a78c_optimize_expr_model(_self_, _10343_it.get()._field_expr.get()._field_model);
	_1a910a517_optimize_body_child(_self_, _10343_it.get()._field_scope);
}



inline void _1a910b45d_optimize_while_iter(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be2586d8_WhileIter> _10843_it) {
	_1a910a78c_optimize_expr_model(_self_, _10843_it.get()._field_expr);
	if ((_10843_it.get()._field_next != nullptr)) {
		jule::Any _11121_next = jule::Any(_10843_it.get()._field_next);;
		_1a910a78c_optimize_expr_model(_self_, _11121_next);
	};
	_1a910a517_optimize_body_child(_self_, _10843_it.get()._field_scope);
}



inline void _1a910b6d3_optimize_inf_iter(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be2584eb_InfIter> _11741_it) {
	_1a910a517_optimize_body_child(_self_, _11741_it.get()._field_scope);
}



inline void _1a910b958_optimize_conditional(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be25830e_Conditional> _12144_c) {
	{
		auto &expr = _12144_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac7d5cbb:;
		if (it != expr.end()) {
			jule::Ptr<_1be2437b1_If> _12221_case = *it;
			{
				if ((_12221_case != nullptr)) {
					_1a910a78c_optimize_expr_model(_self_, _12221_case.get()._field_expr);
					_1a910a517_optimize_body_child(_self_, _12221_case.get()._field_scope);
				};
			}
			_iter_next_1ac7d5cbb:;
			++it;
			goto _iter_begin_1ac7d5cbb;
		}
		_iter_end_1ac7d5cbb:;
	};
	if ((_12144_c.get()._field_default != nullptr)) {
		if ((_12144_c.get()._field_elifs.len() == 0LL)) {
			_1a910a292_optimize_child(_self_, _12144_c.get()._field_default.get()._field_scope);
		} else {
			_1a910a517_optimize_body_child(_self_, _12144_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1a910bbcd_optimize_match(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be25992b_Match> _13938_m) {
	{
		auto &expr = _13938_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac7d8ae3:;
		if (it != expr.end()) {
			jule::Ptr<_1be259d49_Case> _14021_case = *it;
			{
				{
					auto &expr = _14021_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1ac7d9473:;
					if (it != expr.end()) {
						jule::Ptr<_1be3a92d9_Data> _14125_expr = *it;
						{
							_1a910a78c_optimize_expr_model(_self_, _14125_expr.get()._field_model);
						}
						_iter_next_1ac7d9473:;
						++it;
						goto _iter_begin_1ac7d9473;
					}
					_iter_end_1ac7d9473:;
				};
				_1a910a517_optimize_body_child(_self_, _14021_case.get()._field_scope);
			}
			_iter_next_1ac7d8ae3:;
			++it;
			goto _iter_begin_1ac7d8ae3;
		}
		_iter_end_1ac7d8ae3:;
	};
	if ((_13938_m.get()._field_default != nullptr)) {
		if ((_13938_m.get()._field_cases.len() == 0LL)) {
			_1a910a292_optimize_child(_self_, _13938_m.get()._field_default.get()._field_scope);
		} else {
			_1a910a517_optimize_body_child(_self_, _13938_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1a910be53_optimize_assign(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be259552_Assign> _15739_assign) {
	_1a910a78c_optimize_expr_model(_self_, _15739_assign.get()._field_l.get()._field_model);
	_1a910a78c_optimize_expr_model(_self_, _15739_assign.get()._field_r.get()._field_model);
}



inline void _1a910c1c8_optimize_multi_assign(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Ptr<_1be25973e_MultiAssign> _16245_assign) {
	{
		auto &expr = _16245_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1ac7dcba2:;
		if (it != expr.end()) {
			jule::Any _16321_l = *it;
			{
				if ((_16321_l != nullptr)) {
					_1a910a78c_optimize_expr_model(_self_, _16321_l);
				};
			}
			_iter_next_1ac7dcba2:;
			++it;
			goto _iter_begin_1ac7dcba2;
		}
		_iter_end_1ac7dcba2:;
	};
	_1a910a78c_optimize_expr_model(_self_, _16245_assign.get()._field_r);
}



inline void _1a910c44d_optimize_stmt(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_, jule::Any _17137_st) {
	{
		auto &_match_expr{ _17137_st };
		
		if (_match_expr.type_is<jule::Ptr<_1be1ca25e_Scope>>()) {
			_case_begin_1ac7de3bd:;
			{
				jule::Ptr<_1be1ca25e_Scope> _17421_scope = _17137_st.operator jule::Ptr<_1be1ca25e_Scope>();;
				if (_17421_scope.get()._field_deferred) {
					_1a910c915_eliminate_dead_code_of_scope(_17421_scope);
				} else {
					_1a910a292_optimize_child(_self_, _17421_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2588c5_RangeIter>>()) {
			_case_begin_1ac7de544:;
			{
				_1a910b1d8_optimize_range_iter(_self_, _17137_st.operator jule::Ptr<_1be2588c5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2586d8_WhileIter>>()) {
			_case_begin_1ac7de5aa:;
			{
				_1a910b45d_optimize_while_iter(_self_, _17137_st.operator jule::Ptr<_1be2586d8_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
			_case_begin_1ac7de621:;
			{
				_1a910b6d3_optimize_inf_iter(_self_, _17137_st.operator jule::Ptr<_1be2584eb_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25830e_Conditional>>()) {
			_case_begin_1ac7de698:;
			{
				_1a910b958_optimize_conditional(_self_, _17137_st.operator jule::Ptr<_1be25830e_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25992b_Match>>()) {
			_case_begin_1ac7de720:;
			{
				_1a910bbcd_optimize_match(_self_, _17137_st.operator jule::Ptr<_1be25992b_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be259552_Assign>>()) {
			_case_begin_1ac7de797:;
			{
				_1a910be53_optimize_assign(_self_, _17137_st.operator jule::Ptr<_1be259552_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25973e_MultiAssign>>()) {
			_case_begin_1ac7de81e:;
			{
				_1a910c1c8_optimize_multi_assign(_self_, _17137_st.operator jule::Ptr<_1be25973e_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ac7de896:;
			{
				jule::Ptr<_1be3a92d9_Data> _19521_d = _17137_st.operator jule::Ptr<_1be3a92d9_Data>();;
				{
					auto &_match_expr{ _19521_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>()) {
						_case_begin_1ac7e58be:;
						{
							_1a910a968_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1ac7e5270:;
						{
							_1a910a78c_optimize_expr_model(_self_, _19521_d.get()._field_model);
						}
					}
					_match_end_1ac7e5490:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25a223_RetSt>>()) {
			_case_begin_1ac7de91d:;
			{
				_1a910a968_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be259178_GotoSt>>()) {
			_case_begin_1ac7de995:;
			{
				_1a910abdd_push_goto(_self_, _17137_st.operator jule::Ptr<_1be259178_GotoSt>());
				_1a910a968_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be258e8b_Label>>()) {
			_case_begin_1ac7dea1c:;
			{
				_1a910ae63_push_label(_self_, _17137_st.operator jule::Ptr<_1be258e8b_Label>());
			}
		}
		_match_end_1ac7de4cd:;
	};
}



inline void _1a910c629_optimize_stmts(jule::Ptr<_1a9109cca_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1a910c44d_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1ac7e77d3:;
	}
	_iter_end_1ac7e77d3:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9109cca_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos;
	_Stream << "}";
	return _Stream;
}



inline _1a910d99e_ExprDeadCode static__1a910e098_new(jule::Ptr<_1a9109cca_ScopeDeadCode>& _4724_s) {
	return _1a910d99e_ExprDeadCode{._field_s=_4724_s};
}



inline void _1a910e31d_binary(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1d70abda3_BinopExprModel> _5325_m) {
	_1a9114543_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1a9114543_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1a910e593_unary(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c45c6_UnaryExprModel> _5824_m) {
	_1a9114543_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1a910e818_structure_lit(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c49a0_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1ac7eab5a:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c47b3_StructArgExprModel> _6321_arg = *it;
			{
				_1a9114543_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1ac7eab5a:;
			++it;
			goto _iter_begin_1ac7eab5a;
		}
		_iter_end_1ac7eab5a:;
	};
}



inline void _1a910ea8d_alloc_structure(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel> _6834_m) {
	_1a910e818_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1a910ed13_casting(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c4d79_CastingExprModel> _7226_m) {
	_1a9114543_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1a9110088_args(_1a910d99e_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1ac7ed047:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1a9114543_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1ac7ed047:;
			++it;
			goto _iter_begin_1ac7ed047;
		}
		_iter_end_1ac7ed047:;
	};
}



inline void _1a911030d_func_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c5066_FnCallExprModel> _8228_m) {
	_1a9114543_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1a9110088_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1a910a517_optimize_body_child((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1a9110583_slice(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c5253_SliceExprModel> _9024_m) {
	_1a9110088_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1a9110808_array(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c66c7_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1a9114543_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1a9110088_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1a9110a7d_indexing(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c5440_IndexingExprModel> _10127_m) {
	_1a9114543_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1a9114543_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1a9110d03_anon_func(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c562c_AnonFnExprModel> _10628_m) {
	_1a910c915_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1a9111078_map(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c5a06_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1ac803b96:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c5819_KeyValPairExprModel> _11121_pair = *it;
			{
				_1a9114543_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1a9114543_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1ac803b96:;
			++it;
			goto _iter_begin_1ac803b96;
		}
		_iter_end_1ac803b96:;
	};
}



inline void _1a91112ed_slicing(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c5be3_SlicingExprModel> _11726_m) {
	_1a9114543_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1a9114543_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1a9114543_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1a9111573_trait_sub(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel> _12528_m) {
	_1a9114543_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1a91117e8_structure_sub(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _12932_m) {
	_1a9114543_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1a9111a6d_common_sub(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel> _13329_m) {
	_1a9114543_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1a9111ce3_tuple(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c6c8d_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1ac808c45:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a92d9_Data> _13821_d = *it;
			{
				_1a9114543_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1ac808c45:;
			++it;
			goto _iter_begin_1ac808c45;
		}
		_iter_end_1ac808c45:;
	};
}



inline void _1a9112068_new_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1a9114543_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1a91122dd_out_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel> _14927_m) {
	_1a9114543_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1a9112563_outln_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel> _15329_m) {
	_1a9114543_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1a91127d8_panic_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel> _15729_m) {
	_1a9114543_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1a9112a5d_assert_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel> _16130_m) {
	_1a9114543_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1a9112cd3_error_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel> _16529_m) {
	_1a9114543_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1a9113058_make_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1a9114543_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1a9114543_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1a91132cd_append_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel> _17830_m) {
	_1a9114543_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1a9114543_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1a9113553_clone_call(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel> _18329_m) {
	_1a9114543_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1a91137c8_sizeof(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c60bc_SizeofExprModel> _18725_m) {
	_1a9114543_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1a9113a4d_alignof(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c882d_AlignofExprModel> _19126_m) {
	_1a9114543_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1a9113cc3_integrated_to_str(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel> _19536_m) {
	_1a9114543_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1a9114048_free(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c90d1_FreeExprModel> _19923_m) {
	_1a9114543_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1a91142bd_backend_emit(_1a910d99e_ExprDeadCode* _self_, jule::Ptr<_1bc9c8de4_BackendEmitExprModel> _20331_m) {
	_1a9110088_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1a9114543_optimize(_1a910d99e_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ac814657:;
			{
				jule::Ptr<_1be3a92d9_Data> _21021_d = _20728_model.operator jule::Ptr<_1be3a92d9_Data>();;
				_1a9114543_optimize(&(*_self_), _21021_d.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70abda3_BinopExprModel>>()) {
			_case_begin_1ac8146ce:;
			{
				_1a910e31d_binary(&(*_self_), _20728_model.operator jule::Ptr<_1d70abda3_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c45c6_UnaryExprModel>>()) {
			_case_begin_1ac814756:;
			{
				_1a910e593_unary(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c45c6_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c49a0_StructLitExprModel>>()) {
			_case_begin_1ac814b0d:;
			{
				_1a910e818_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c49a0_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>>()) {
			_case_begin_1ac814b74:;
			{
				_1a910ea8d_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c4d79_CastingExprModel>>()) {
			_case_begin_1ac814beb:;
			{
				_1a910ed13_casting(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c4d79_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1ac814c73:;
			{
				_1a911030d_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c5066_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5253_SliceExprModel>>()) {
			_case_begin_1ac814cea:;
			{
				_1a9110583_slice(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c5253_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c66c7_ArrayExprModel>>()) {
			_case_begin_1ac814d72:;
			{
				_1a9110808_array(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c66c7_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5440_IndexingExprModel>>()) {
			_case_begin_1ac814de9:;
			{
				_1a9110a7d_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c5440_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c562c_AnonFnExprModel>>()) {
			_case_begin_1ac814e71:;
			{
				_1a9110d03_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c562c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5a06_MapExprModel>>()) {
			_case_begin_1ac814ee8:;
			{
				_1a9111078_map(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c5a06_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5be3_SlicingExprModel>>()) {
			_case_begin_1ac815070:;
			{
				_1a91112ed_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c5be3_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>>()) {
			_case_begin_1ac8150e7:;
			{
				_1a9111573_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1ac81516e:;
			{
				_1a91117e8_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>>()) {
			_case_begin_1ac8151e6:;
			{
				_1a9111a6d_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6c8d_TupleExprModel>>()) {
			_case_begin_1ac81526d:;
			{
				_1a9111ce3_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c6c8d_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>>()) {
			_case_begin_1ac8152e5:;
			{
				_1a91122dd_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1ac81536c:;
			{
				_1a9112563_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>>()) {
			_case_begin_1ac8153e4:;
			{
				_1a9112068_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1ac81546b:;
			{
				_1a91127d8_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1ac8154e3:;
			{
				_1a9112a5d_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ac81556a:;
			{
				_1a9112cd3_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>>()) {
			_case_begin_1ac8155e2:;
			{
				_1a9113058_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>>()) {
			_case_begin_1ac815669:;
			{
				_1a91132cd_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>>()) {
			_case_begin_1ac8156e1:;
			{
				_1a9113553_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c60bc_SizeofExprModel>>()) {
			_case_begin_1ac815768:;
			{
				_1a91137c8_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c60bc_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c882d_AlignofExprModel>>()) {
			_case_begin_1ac8157e0:;
			{
				_1a9113a4d_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c882d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>>()) {
			_case_begin_1ac815867:;
			{
				_1a9113cc3_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c90d1_FreeExprModel>>()) {
			_case_begin_1ac8158de:;
			{
				_1a9114048_free(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c90d1_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8de4_BackendEmitExprModel>>()) {
			_case_begin_1ac815966:;
			{
				_1a91142bd_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1bc9c8de4_BackendEmitExprModel>());
			}
		}
		_match_end_1ac814855:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a910d99e_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be48e7a9_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be48eac8_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be48ee91_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be490557_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4908ed_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be491a75_ScopeOptimizer> static__1be4920c5_new(jule::Ptr<_1be1ca25e_Scope> _4527_scope) {
	return jule::new_ptr<_1be491a75_ScopeOptimizer>(_1be491a75_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1be49234a_set_current_stmt(_1be491a75_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5139_stmt))))));
}



inline void _1be4925c0_optimize_data(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be3a92d9_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1ac8572d2:;
			{
				jule::Ptr<_1bc9c5066_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1bc9c5066_FnCallExprModel>();;
				if (_1eec82ce7_PRODUCTION) {
					if (((!(_1d707b559_is_builtin(_5821_m.get()._field_func.ptr()))) && _1be49542a_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1be49234a_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1ac8570c3:;
	};
	static__1be497680_optimize(_5536_d.get()._field_model);
}



inline void _1be492845_optimize_var(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be36365b_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1be497680_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1be492aba_optimize_conditional(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be25830e_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac85a6e2:;
		if (it != expr.end()) {
			jule::Ptr<_1be2437b1_If> _7721_elif = *it;
			{
				static__1be497680_optimize(_7721_elif.get()._field_expr);
				_1be494d53_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1ac85a6e2:;
			++it;
			goto _iter_begin_1ac85a6e2;
		}
		_iter_end_1ac85a6e2:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1be494d53_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_1c00b0c15_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac85c88c:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1be2437b1_If> _9221_elif = *it;
			{
				if ((!(_1be495749_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1ac85c88c;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1be249c6d_Else>(_1be249c6d_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1ac85c88c;
			}
			_iter_next_1ac85c88c:;
			++it;
			_9214_i++;
			goto _iter_begin_1ac85c88c;
		}
		_iter_end_1ac85c88c:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1be2437b1_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1be2437b1_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1be4960c9_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1ac860c69:;
	}
	_iter_end_1ac860c69:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac862562:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1be2437b1_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1ac862562:;
			++it;
			_12913_j++;
			goto _iter_begin_1ac862562;
		}
		_iter_end_1ac862562:;
	};
	if ((_12817_only != -1LL)) {
		_1be49234a_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1be492ea5_build_default_constat_true_case(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be259d49_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1be25992b_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1ac864cc3;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1be25a036_FallSt>>()) {
					_case_begin_1ac865686:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1ac864cc3;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=static_cast<jule::Any>(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1ac866bc6:;
					{
						goto _iter_end_1ac864cc3;
					}
				}
				_match_end_1ac866ad8:;
			};
		}
	_iter_next_1ac864cc3:;
	}
	_iter_end_1ac864cc3:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1be4931b4_optimize_match(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be25992b_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac868c83:;
		if (it != expr.end()) {
			jule::Ptr<_1be259d49_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1ac869624:;
					if (it != expr.end()) {
						jule::Ptr<_1be3a92d9_Data> _17325_expr = *it;
						{
							static__1be497680_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1ac869624:;
						++it;
						goto _iter_begin_1ac869624;
					}
					_iter_end_1ac869624:;
				};
				_1be494d53_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1ac868c83:;
			++it;
			goto _iter_begin_1ac868c83;
		}
		_iter_end_1ac868c83:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1be494d53_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_1c00b0c15_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac86b4e4:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1be259d49_Case> _18925_case = *it;
			{
				if ((!(_1be495d32_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1ac86b4e4;
				};
				_18617_const_case=true;
				_1be492ea5_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1ac86b4e4;
			}
			_iter_next_1ac86b4e4:;
			++it;
			_18918_i++;
			goto _iter_begin_1ac86b4e4;
		}
		_iter_end_1ac86b4e4:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1be259d49_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1be259d49_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1be4963a4_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1ac86e591:;
	}
	_iter_end_1ac86e591:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac8707c3:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1be259d49_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1ac8707c3:;
			++it;
			_21913_j++;
			goto _iter_begin_1ac8707c3;
		}
		_iter_end_1ac8707c3:;
	};
	if ((_21817_only != -1LL)) {
		_1be49234a_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1be493439_optimize_range_iter(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be2588c5_RangeIter> _23542_it) {
	static__1be497680_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1be494d53_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1be4936ae_optimize_while_iter(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be2586d8_WhileIter> _24042_it) {
	static__1be497680_optimize(_24042_it.get()._field_expr);
	_1be494acd_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_1be494d53_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1be4939bc_substr(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be259552_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c5be3_SlicingExprModel>>()) {
			_case_begin_1ac874c7d:;
			{
				jule::Ptr<_1bc9c5be3_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1bc9c5be3_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1be49234a_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1be490557_MutSlicingExprModel>(_1be490557_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=jule::Any(_24921_sem.get()._field_expr), ._field_left=jule::Any(_24921_sem.get()._field_left), ._field_right=jule::Any(_24921_sem.get()._field_right)})));
					return true;
				};
			}
		}
		_match_end_1ac874c28:;
	};
	return false;
}



inline jule::Bool _1be493cca_str_insert(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be259552_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1d70abda3_BinopExprModel>>()) {
			_case_begin_1ac877346:;
			{
				jule::Ptr<_1d70abda3_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1d70abda3_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1be49234a_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1be4908ed_StrInsertBeginExprModel>(_1be4908ed_StrInsertBeginExprModel{._field_dest=jule::Any(_26333_a.get()._field_l.get()._field_model), ._field_expr=jule::Any(_26621_m.get()._field_left.get()._field_model)})));
					return true;
				};
			}
		}
		_match_end_1ac8772e1:;
	};
	return false;
}



inline jule::Bool _1be4940d8_str_assign(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be259552_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1be3d9083_Prim> _28213_lp = _1be3d6679_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1be3dc042_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1be4939bc_substr(&(*_self_), _27833_a) || _1be493cca_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1ac87adb6:;
			{
				return true;
			}
		}
		_match_end_1ac87ad2d:;
	};
	return false;
}



inline void _1be49435d_optimize_assign(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be259552_Assign> _29438_assign) {
	if ((_1c00ae40b_COPY && _1be4940d8_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1be497680_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1be497680_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ac87d171:;
			{
				if ((_1c00aedbd_MATH && (_1be3d7acb_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1d70abda3_BinopExprModel>(_1d70abda3_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1be497680_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1d70abda3_BinopExprModel>>()) {
							_case_begin_1ac88076c:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1d70abbb6_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=jule::Any(_30725_model);
								return;;
							}
						}
						_match_end_1ac8803d7:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1ac87d11b:;
	};
	if (_1c00aea6b_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>>()) {
				_case_begin_1ac882285:;
				{
					jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1bc9c5253_SliceExprModel>>()) {
							_case_begin_1ac883352:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>() || _match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
										_case_begin_1ac883ad3:;
										{
											_1be49234a_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1be48ee91_PushToSliceExprModel>(_1be48ee91_PushToSliceExprModel{._field_dest=jule::Any(_32825_m.get()._field_dest), ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1bc9c5253_SliceExprModel>()})));
										}
									}
									_match_end_1ac883929:;
								};
							}
						}
						_match_end_1ac883143:;
					};
				}
			}
			_match_end_1ac880c12:;
		};
	};
}



inline void _1be4945d3_optimize_multi_assign(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be25973e_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1ac87d715:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1be497680_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=jule::Any(_34521_l);
				};
			}
			_iter_next_1ac87d715:;
			++it;
			_34514_i++;
			goto _iter_begin_1ac87d715;
		}
		_iter_end_1ac87d715:;
	};
	static__1be497680_optimize(_34444_assign.get()._field_r);
}



inline void _1be494858_optimize_ret(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be25a223_RetSt> _35435_r) {
	static__1be497680_optimize(_35435_r.get()._field_expr);
}



inline void _1be494acd_optimize_stmt(_1be491a75_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1be1ca25e_Scope>>()) {
			_case_begin_1ac8869a4:;
			{
				_1be494d53_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1be1ca25e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ac886a5e:;
			{
				_1be4925c0_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1be3a92d9_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1ac886ac5:;
			{
				_1be492845_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1be36365b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25830e_Conditional>>()) {
			_case_begin_1ac886b3b:;
			{
				_1be492aba_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1be25830e_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2588c5_RangeIter>>()) {
			_case_begin_1ac886ba2:;
			{
				_1be493439_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1be2588c5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2586d8_WhileIter>>()) {
			_case_begin_1ac886c29:;
			{
				_1be4936ae_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1be2586d8_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
			_case_begin_1ac886ca1:;
			{
				_1be494d53_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1be2584eb_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be259552_Assign>>()) {
			_case_begin_1ac886d28:;
			{
				_1be49435d_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1be259552_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25973e_MultiAssign>>()) {
			_case_begin_1ac886da0:;
			{
				_1be4945d3_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1be25973e_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25992b_Match>>()) {
			_case_begin_1ac886e27:;
			{
				_1be4931b4_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1be25992b_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25a223_RetSt>>()) {
			_case_begin_1ac886e9e:;
			{
				_1be494858_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1be25a223_RetSt>());
			}
		}
		_match_end_1ac886861:;
	};
}



inline void _1be494d53_optimize_child(_1be491a75_ScopeOptimizer* _self_, jule::Ptr<_1be1ca25e_Scope> _38537_child) {
	jule::Ptr<_1be491a75_ScopeOptimizer> _38617_so = static__1be4920c5_new(_38537_child);;
	_1be49502e_optimize(_38617_so.ptr());
}



inline void _1be49502e_optimize(_1be491a75_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ac88c669:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1be494acd_optimize_stmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1ac88c669:;
			++it;
			_39214_i++;
			goto _iter_begin_1ac88c669;
		}
		_iter_end_1ac88c669:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be491a75_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1be497680_optimize(jule::Any& _5533_model) {
	if (_1a9077660_expr_enabled) {
		jule::Ptr<_1be4971a7_ExprOptimizer> _5821_exop = jule::new_ptr<_1be4971a7_ExprOptimizer>(_1be4971a7_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1c00ad729_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1be49798d_str_cond(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1d70abda3_BinopExprModel> _6527_m) {
	jule::Ptr<_1be3d9083_Prim> _6613_lp = _1be3d6679_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1be3dc042_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1ac897db1:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1ac897d5b:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1ac898db2:;
			{
				goto _match_end_1ac898cc4;
			}
		}
		else {
			_case_begin_1ac898d3a:;
			{
				return true;
			}
		}
		_match_end_1ac898cc4:;
	};
	_julec_label_opt:;
	jule::Ptr<_1be159e14_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1be159e14_Const>();;
	if ((!(_1be1b3ca3_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ac89a677:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac89a6dd:;
			{
				jule::Ptr<_20201c3d1_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1bc9c45c6_UnaryExprModel>(_1bc9c45c6_UnaryExprModel{._field_expr=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_model=jule::Any(jule::new_ptr<_1bc9c6aa1_CommonSubIdentExprModel>(_1bc9c6aa1_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1ac89a556:;
	};
	return true;
}



inline void _1be497c13_binary(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1d70abda3_BinopExprModel> _11325_m) {
	static__1be497680_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1be497680_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1ac899e4b:;
			{
				goto _match_end_1ac89e390;
			}
		}
		else {
			_case_begin_1ac89e3e5:;
			{
				return;;
			}
		}
		_match_end_1ac89e390:;
	};
	if ((_1c00b0c15_COND && _1be49798d_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1c00aedbd_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac8a057d:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1c00adb47_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1be159e14_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1be159e14_Const>();;
					_1be1b4c4e_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ac8a0605:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1c00adb47_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1be159e14_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1be159e14_Const>();;
					_1be1b4c4e_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ac8a067c:;
			{
				jule::Ptr<_1be159e14_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1be159e14_Const>();;
				jule::F64 _15017_d = _1be1b4754_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1be1b49c9_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1ac8a0528:;
	};
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1be48e7a9_UnsafeBinopExprModel>(_1be48e7a9_UnsafeBinopExprModel{._field_node=_11325_m}));
}



inline void _1be497e88_unary(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c45c6_UnaryExprModel> _16124_m) {
	static__1be497680_optimize(_16124_m.get()._field_expr.get()._field_model);
	if ((_1c00b07e7_PTR && (_16124_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16124_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1bc9c45c6_UnaryExprModel>>()) {
				_case_begin_1ac8a7596:;
				{
					jule::Ptr<_1bc9c45c6_UnaryExprModel> _16625_um = _16124_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1bc9c45c6_UnaryExprModel>();;
					if ((_16625_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=jule::Any(_16625_um.get()._field_expr.get()._field_model);
					};
				}
			}
			_match_end_1ac8a7541:;
		};
	};
}



inline void _1be49820d_structure_lit(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c49a0_StructLitExprModel> _17432_m) {
	{
		auto &expr = _17432_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1ac8a9158:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c47b3_StructArgExprModel> _17521_arg = *it;
			{
				static__1be497680_optimize(_17521_arg.get()._field_expr);
			}
			_iter_next_1ac8a9158:;
			++it;
			goto _iter_begin_1ac8a9158;
		}
		_iter_end_1ac8a9158:;
	};
}



inline void _1be498483_alloc_structure(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel> _18034_m) {
	_1be49820d_structure_lit(&(*_self_), _18034_m.get()._field_lit);
}



inline void _1be498708_casting(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c4d79_CastingExprModel> _18426_m) {
	static__1be497680_optimize(_18426_m.get()._field_expr);
}



inline void _1be49897d_args(_1be4971a7_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18824_args) {
	{
		auto &expr = _18824_args;
		auto it = expr.begin();
		_iter_begin_1ac8aad3b:;
		if (it != expr.end()) {
			jule::I64 _18914_i = it - expr.begin();
			jule::Any _18921_arg = *it;
			{
				static__1be497680_optimize(_18921_arg);
				_18824_args[_18914_i]=jule::Any(_18921_arg);
			}
			_iter_next_1ac8aad3b:;
			++it;
			_18914_i++;
			goto _iter_begin_1ac8aad3b;
		}
		_iter_end_1ac8aad3b:;
	};
}



inline void _1be498c03_scope(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1be1ca25e_Scope>& _19525_s) {
	jule::Ptr<_1be491a75_ScopeOptimizer> _19617_scopt = static__1be4920c5_new(_19525_s);;
	_1be49502e_optimize(_19617_scopt.ptr());
}



inline void _1be498e78_func_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c5066_FnCallExprModel> _20028_m) {
	static__1be497680_optimize(_20028_m.get()._field_expr);
	_1be49897d_args(&(*_self_), _20028_m.get()._field_args);
	if ((_20028_m.get()._field_except != nullptr)) {
		_1be498c03_scope(&(*_self_), _20028_m.get()._field_except);
	};
}



inline void _1be4991ed_slice(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c5253_SliceExprModel> _20824_m) {
	_1be49897d_args(&(*_self_), _20824_m.get()._field_elems);
}



inline void _1be499473_array(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c66c7_ArrayExprModel> _21224_m) {
	if (((_21224_m.get()._field_elems.len() == 2LL) && (_21224_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21421_elem = _21224_m.get()._field_elems[0LL];;
		static__1be497680_optimize(_21421_elem);
		_21224_m.get()._field_elems[0LL]=jule::Any(_21421_elem);
	};
	_1be49897d_args(&(*_self_), _21224_m.get()._field_elems);
}



inline void _1be4996e8_indexing(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c5440_IndexingExprModel> _22127_m) {
	static__1be497680_optimize(_22127_m.get()._field_expr.get()._field_model);
	static__1be497680_optimize(_22127_m.get()._field_index.get()._field_model);
	if ((!(_1c00b01cb_ACCESS))) {
		return;;
	};
	jule::Bool _22713_array = (_1be3d738e_arr(_22127_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22713_array && _1be3a9b9c_is_const(_22127_m.get()._field_index.ptr()))) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1be48eac8_UnsafeIndexingExprModel>(_1be48eac8_UnsafeIndexingExprModel{._field_node=_22127_m}));
		return;;
	};
	{
		auto &_match_expr{ _22127_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1ac8b4691:;
			{
				jule::Ptr<_1be36365b_Var> _23717_i = _22127_m.get()._field_index.get()._field_model.operator jule::Ptr<_1be36365b_Var>();;
				if ((_23717_i.get()._field_mutable || (_23717_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1ac8b463b;
				};
				{
					auto &_match_expr{ _22127_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
						_case_begin_1ac8b5e12:;
						{
							jule::Ptr<_1be36365b_Var> _24321_r = _22127_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1be36365b_Var>();;
							if ((_23717_i.get()._field_iter_relation.get()._field_range == _24321_r)) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1be48eac8_UnsafeIndexingExprModel>(_1be48eac8_UnsafeIndexingExprModel{._field_node=_22127_m}));
							};
						}
					}
					_match_end_1ac8b5dac:;
				};
			}
		}
		_match_end_1ac8b463b:;
	};
}



inline void _1be49996d_anon_func(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c562c_AnonFnExprModel> _25428_m) {
	_1be498c03_scope(&(*_self_), _25428_m.get()._field_func.get()._field_scope);
}



inline void _1be499be3_map(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c5a06_MapExprModel> _25822_m) {
	{
		auto &expr = _25822_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1ac8b7d6a:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c5819_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1be497680_optimize(_25921_pair.get()._field_key);
				static__1be497680_optimize(_25921_pair.get()._field_val);
			}
			_iter_next_1ac8b7d6a:;
			++it;
			goto _iter_begin_1ac8b7d6a;
		}
		_iter_end_1ac8b7d6a:;
	};
}



inline void _1be499e68_slicing(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c5be3_SlicingExprModel> _26526_m) {
	static__1be497680_optimize(_26526_m.get()._field_expr);
	static__1be497680_optimize(_26526_m.get()._field_left);
	if ((_26526_m.get()._field_right != nullptr)) {
		static__1be497680_optimize(_26526_m.get()._field_right);
	};
}



inline void _1be49a1dd_trait_sub(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel> _27328_m) {
	static__1be497680_optimize(_27328_m.get()._field_expr);
}



inline void _1be49a463_structure_sub(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _27732_m) {
	static__1be497680_optimize(_27732_m.get()._field_expr.get()._field_model);
}



inline void _1be49a6d8_common_sub(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel> _28129_m) {
	static__1be497680_optimize(_28129_m.get()._field_expr);
}



inline void _1be49a95d_tuple(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c6c8d_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1ac8bb687:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a92d9_Data> _28621_d = *it;
			{
				static__1be497680_optimize(_28621_d.get()._field_model);
			}
			_iter_next_1ac8bb687:;
			++it;
			goto _iter_begin_1ac8bb687;
		}
		_iter_end_1ac8bb687:;
	};
}



inline void _1be49abd3_new_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel> _29127_m) {
	if ((_29127_m.get()._field_init != nullptr)) {
		static__1be497680_optimize(_29127_m.get()._field_init);
	};
}



inline void _1be49ae58_out_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel> _29727_m) {
	static__1be497680_optimize(_29727_m.get()._field_expr);
}



inline void _1be49b1cd_outln_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel> _30129_m) {
	static__1be497680_optimize(_30129_m.get()._field_expr);
}



inline void _1be49b453_panic_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel> _30529_m) {
	static__1be497680_optimize(_30529_m.get()._field_expr);
}



inline void _1be49b6c8_assert_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel> _30930_m) {
	static__1be497680_optimize(_30930_m.get()._field_expr);
}



inline void _1be49b94d_error_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel> _31329_m) {
	static__1be497680_optimize(_31329_m.get()._field_err);
}



inline void _1be49bbc3_make_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel> _31728_m) {
	if ((_31728_m.get()._field_len != nullptr)) {
		static__1be497680_optimize(_31728_m.get()._field_len);
	};
	if ((_31728_m.get()._field_cap != nullptr)) {
		static__1be497680_optimize(_31728_m.get()._field_cap);
	};
}



inline void _1c00ac55d_append_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel> _32630_m) {
	static__1be497680_optimize(_32630_m.get()._field_dest);
	static__1be497680_optimize(_32630_m.get()._field_elements);
}



inline void _1c00ac7d3_clone_call(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel> _33129_m) {
	static__1be497680_optimize(_33129_m.get()._field_expr);
}



inline void _1c00aca58_sizeof(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c60bc_SizeofExprModel> _33525_m) {
	static__1be497680_optimize(_33525_m.get()._field_expr);
}



inline void _1c00acccd_alignof(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c882d_AlignofExprModel> _33926_m) {
	static__1be497680_optimize(_33926_m.get()._field_expr);
}



inline void _1c00ad053_integrated_to_str(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel> _34336_m) {
	static__1be497680_optimize(_34336_m.get()._field_expr);
}



inline void _1c00ad2c8_free(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c90d1_FreeExprModel> _34723_m) {
	static__1be497680_optimize(_34723_m.get()._field_expr);
}



inline void _1c00ad54d_backend_emit(_1be4971a7_ExprOptimizer* _self_, jule::Ptr<_1bc9c8de4_BackendEmitExprModel> _35131_m) {
	_1be49897d_args(&(*_self_), _35131_m.get()._field_exprs);
}



inline void _1c00ad729_do(_1be4971a7_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ac8c467e:;
			{
				(*((*_self_)._field_model))=jule::Any((*((*_self_)._field_model)).operator jule::Ptr<_1be3a92d9_Data>().get()._field_model);
				_1c00ad729_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70abda3_BinopExprModel>>()) {
			_case_begin_1ac8c4959:;
			{
				_1be497c13_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1d70abda3_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c45c6_UnaryExprModel>>()) {
			_case_begin_1ac8c49c0:;
			{
				_1be497e88_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c45c6_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c49a0_StructLitExprModel>>()) {
			_case_begin_1ac8c4a36:;
			{
				_1be49820d_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c49a0_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>>()) {
			_case_begin_1ac8c4a9c:;
			{
				_1be498483_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c4d79_CastingExprModel>>()) {
			_case_begin_1ac8c4b24:;
			{
				_1be498708_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c4d79_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1ac8c4b9b:;
			{
				_1be498e78_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c5066_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5253_SliceExprModel>>()) {
			_case_begin_1ac8c4c23:;
			{
				_1be4991ed_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c5253_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c66c7_ArrayExprModel>>()) {
			_case_begin_1ac8c4c9a:;
			{
				_1be499473_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c66c7_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5440_IndexingExprModel>>()) {
			_case_begin_1ac8c4d22:;
			{
				_1be4996e8_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c5440_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c562c_AnonFnExprModel>>()) {
			_case_begin_1ac8c4d99:;
			{
				_1be49996d_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c562c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5a06_MapExprModel>>()) {
			_case_begin_1ac8c4e21:;
			{
				_1be499be3_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c5a06_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5be3_SlicingExprModel>>()) {
			_case_begin_1ac8c4e98:;
			{
				_1be499e68_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c5be3_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>>()) {
			_case_begin_1ac8c5020:;
			{
				_1be49a1dd_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1ac8c5097:;
			{
				_1be49a463_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>>()) {
			_case_begin_1ac8c511e:;
			{
				_1be49a6d8_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6c8d_TupleExprModel>>()) {
			_case_begin_1ac8c5196:;
			{
				_1be49a95d_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c6c8d_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>>()) {
			_case_begin_1ac8c521d:;
			{
				_1be49ae58_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1ac8c5295:;
			{
				_1be49b1cd_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>>()) {
			_case_begin_1ac8c531c:;
			{
				_1be49abd3_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1ac8c5394:;
			{
				_1be49b453_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1ac8c541b:;
			{
				_1be49b6c8_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ac8c5493:;
			{
				_1be49b94d_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>>()) {
			_case_begin_1ac8c551a:;
			{
				_1be49bbc3_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>>()) {
			_case_begin_1ac8c5592:;
			{
				_1c00ac55d_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>>()) {
			_case_begin_1ac8c5619:;
			{
				_1c00ac7d3_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c60bc_SizeofExprModel>>()) {
			_case_begin_1ac8c5691:;
			{
				_1c00aca58_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c60bc_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c882d_AlignofExprModel>>()) {
			_case_begin_1ac8c5718:;
			{
				_1c00acccd_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c882d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>>()) {
			_case_begin_1ac8c5790:;
			{
				_1c00ad053_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c90d1_FreeExprModel>>()) {
			_case_begin_1ac8c5817:;
			{
				_1c00ad2c8_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c90d1_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8de4_BackendEmitExprModel>>()) {
			_case_begin_1ac8c588e:;
			{
				_1c00ad54d_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1bc9c8de4_BackendEmitExprModel>());
			}
		}
		_match_end_1ac8c4629:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be4971a7_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a90d5b1e_Optimizer> static__1a90a7470_new(jule::Ptr<_1a8900659_IR>& _2528_ir) {
	return jule::new_ptr<_1a90d5b1e_Optimizer>(_1a90d5b1e_Optimizer{._field_ir=_2528_ir});
}



inline void _1a90d635b_optimize_global(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1be36365b_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1be497680_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1a90dbad1_optimize_function(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1bc9c9873_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac8dd533:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9c4c_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1be491a75_ScopeOptimizer> _4221_so = static__1be4920c5_new(_4121_ins.get()._field_scope);;
				_1be49502e_optimize(_4221_so.ptr());
			}
			_iter_next_1ac8dd533:;
			++it;
			goto _iter_begin_1ac8dd533;
		}
		_iter_end_1ac8dd533:;
	};
}



inline void _1a9079233_optimize_struct(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1d7073276_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac8de9eb:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1ac8e017d:;
					if (it != expr.end()) {
						jule::Ptr<_1d708808d_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1be497680_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1ac8e017d:;
						++it;
						goto _iter_begin_1ac8e017d;
					}
					_iter_end_1ac8e017d:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ac8e10b3:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _5725_m = *it;
						{
							_1a90dbad1_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1ac8e10b3:;
						++it;
						goto _iter_begin_1ac8e10b3;
					}
					_iter_end_1ac8e10b3:;
				};
			}
			_iter_next_1ac8de9eb:;
			++it;
			goto _iter_begin_1ac8de9eb;
		}
		_iter_end_1ac8de9eb:;
	};
}



inline void _1a90a8e44_optimize_globals(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1be275c99_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac8e1767:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1ac8e24c1:;
					if (it != expr.end()) {
						jule::Ptr<_1be36365b_Var> _6525_v = *it;
						{
							_1a90d635b_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1ac8e24c1:;
						++it;
						goto _iter_begin_1ac8e24c1;
					}
					_iter_end_1ac8e24c1:;
				};
			}
			_iter_next_1ac8e1767:;
			++it;
			goto _iter_begin_1ac8e1767;
		}
		_iter_end_1ac8e1767:;
	};
}



inline void _1a90dc83a_optimize_functions(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1be275c99_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac8e2a65:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ac8e38e0:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _7325_func = *it;
						{
							_1a90dbad1_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1ac8e38e0:;
						++it;
						goto _iter_begin_1ac8e38e0;
					}
					_iter_end_1ac8e38e0:;
				};
			}
			_iter_next_1ac8e2a65:;
			++it;
			goto _iter_begin_1ac8e2a65;
		}
		_iter_end_1ac8e2a65:;
	};
}



inline void _1a90de397_optimize_structs(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1be275c99_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac8e3e62:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1ac8e4cdc:;
					if (it != expr.end()) {
						jule::Ptr<_1d7073276_Struct> _8125_s = *it;
						{
							_1a9079233_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1ac8e4cdc:;
						++it;
						goto _iter_begin_1ac8e4cdc;
					}
					_iter_end_1ac8e4cdc:;
				};
			}
			_iter_next_1ac8e3e62:;
			++it;
			goto _iter_begin_1ac8e3e62;
		}
		_iter_end_1ac8e3e62:;
	};
}



inline void _1a90a1de8_optimize_package(_1a90d5b1e_Optimizer* _self_, jule::Ptr<_1be275c99_Package>& _8740_p) {
	_1a90a8e44_optimize_globals(&(*_self_), _8740_p);
	_1a90dc83a_optimize_functions(&(*_self_), _8740_p);
	_1a90de397_optimize_structs(&(*_self_), _8740_p);
}



inline void _1a90a799d_optimize(_1a90d5b1e_Optimizer* _self_) {
	_1a90dd187_detect_enabled();
	if (_1c00ae75d_DEADCODE) {
		_1a9108977_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1a90787b5_scope_enabled || _1a9077660_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1ac8e6cbc:;
			if (it != expr.end()) {
				jule::Ptr<_1be272d40_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1a90a1de8_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1ac8e6cbc:;
				++it;
				goto _iter_begin_1ac8e6cbc;
			}
			_iter_end_1ac8e6cbc:;
		};
		_1a90a1de8_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_1c00ae75d_DEADCODE) {
		_1a910d394_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a90d5b1e_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a911e77e_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a9120b59_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1a911e77e_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a912096c_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a9122243_log_flat(_201be0d52_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1a9122452_log_error(_201be0d52_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1a911e77e_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1be128b19_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1be128b19_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _201b87018_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_201b87018_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1be128b19_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_200cecaa8_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_200cecaa8_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_200cecaa8_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a9120b59_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a9122661_log(_201be0d52_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1ac908031:;
			{
				static__1a9122243_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1ac908097:;
			{
				static__1a9122452_log_error(_6524_l);
			}
		}
		_match_end_1ac907dcc:;
	};
}



inline void static__1a9122870_print_logs(jule::Slice<_201be0d52_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1ac908ae2:;
		if (it != expr.end()) {
			_201be0d52_Log &_7616_l = *it;
			{
				static__1a9122661_log(_7616_l);
			}
			_iter_next_1ac908ae2:;
			++it;
			goto _iter_begin_1ac908ae2;
		}
		_iter_end_1ac908ae2:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1be128b19_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9121e8a_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1aa388552_unix(_1aa38819a_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1aa38d667_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1aa38d9ec_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa38819a_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1aa38883d_Time static__1aa388bd4_unix(jule::U64 _9124_sec) {
	return _1aa38883d_Time{._field_sec=_9124_sec};
}



inline _1aa38883d_Time static__1aa388dd2_now(void) {
	return static__1aa388bd4_unix(static_cast<jule::U64>(_1aa38d326_unix()));
}



inline jule::U64 _1aa389333_unix(_1aa38883d_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1aa389597_day(_1aa38883d_Time* _self_) {
	return _1aa38a521_abs(&(*_self_))._field_day;
}



inline jule::U64 _1aa38980b_month(_1aa38883d_Time* _self_) {
	return _1aa38a521_abs(&(*_self_))._field_month;
}



inline jule::U64 _1aa389a70_year(_1aa38883d_Time* _self_) {
	return _1aa38a521_abs(&(*_self_))._field_year;
}



inline jule::U64 _1aa389cd4_second(_1aa38883d_Time* _self_) {
	return _1aa38a521_abs(&(*_self_))._field_second;
}



inline jule::U64 _1aa38a048_minute(_1aa38883d_Time* _self_) {
	return _1aa38a521_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1aa38a2ac_hour(_1aa38883d_Time* _self_) {
	return _1aa38a521_abs(&(*_self_))._field_hour;
}



inline _1aa38819a_AbsTime _1aa38a521_abs(_1aa38883d_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1aa38773d_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1aa38773d_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1ac93569b:;
	}
	_iter_end_1ac93569b:;;
	_1aa38819a_AbsTime _17417_t = _1aa38819a_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa38883d_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa3123aa_ScopeCoder> static__1aa3129b5_new(jule::Ptr<_1aa38e03b_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1aa3123aa_ScopeCoder>(_1aa3123aa_ScopeCoder{._field_oc=_4724_oc});
}



inline void _1aa312c3a_range_index_iter(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be2588c5_RangeIter>& _5341_it) {
	jule::Str _5413_begin = static__1aa32d99d_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it)));;
	jule::Str _5513_next = static__1aa32dedc_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it)));;
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1c00ae40b_COPY && _1aa3178ee_is_copy_optimizable(_5341_it.get()._field_expr))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1aa325148_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_5341_it.get()._field_expr.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, _5413_begin);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1aa390bca_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aa37432e_indent(_self_.get()._field_oc);
	};
	if ((_5341_it.get()._field_key_b != nullptr)) {
		if (_1c00ae40b_COPY) {
			_5341_it.get()._field_key_b.get()._field_reference=_1aa317ca6_is_iter_copy_optimizable(_5341_it.get()._field_expr,_5341_it.get()._field_key_b);
		};
		_1aa390bca_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aa37432e_indent(_self_.get()._field_oc);
	};
	_1aa317327_scope(_self_, _5341_it.get()._field_scope);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, _5513_next);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1aa37432e_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, static__1aa32d706_var(_5341_it.get()._field_key_a));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1aa37432e_indent(_self_.get()._field_oc);
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aa37234e_write(_self_.get()._field_oc, _5413_begin);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dc45_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aa312eb0_range_hashmap_iter(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be2588c5_RangeIter>& _12143_it) {
	jule::Str _12213_begin = static__1aa32d99d_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it)));;
	jule::Str _12313_next = static__1aa32dedc_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it)));;
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1c00ae40b_COPY && _1aa3178ee_is_copy_optimizable(_12143_it.get()._field_expr))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1aa325148_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_12143_it.get()._field_expr.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, _12213_begin);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	if ((_12143_it.get()._field_key_a != nullptr)) {
		if (_1c00ae40b_COPY) {
			_12143_it.get()._field_key_a.get()._field_reference=_1aa317ca6_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_a);
		};
		_1aa390bca_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aa37432e_indent(_self_.get()._field_oc);
	};
	if ((_12143_it.get()._field_key_b != nullptr)) {
		if (_1c00ae40b_COPY) {
			_12143_it.get()._field_key_b.get()._field_reference=_1aa317ca6_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_b);
		};
		_1aa390bca_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aa37432e_indent(_self_.get()._field_oc);
	};
	_1aa317327_scope(_self_, _12143_it.get()._field_scope);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, _12313_next);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aa37234e_write(_self_.get()._field_oc, _12213_begin);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dc45_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aa313235_if_case(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be2437b1_If> _18731_i) {
	if ((_18731_i.get()._field_expr != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_18731_i.get()._field_expr));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1aa317327_scope(_self_, _18731_i.get()._field_scope);
}



inline void _1aa3134aa_conditional(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25830e_Conditional> _19635_c) {
	jule::Bool _19717_writed = false;;
	{
		auto &expr = _19635_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac9d3a13:;
		if (it != expr.end()) {
			jule::Ptr<_1be2437b1_If> _19821_elif = *it;
			{
				if ((_19821_elif == nullptr)) {
					goto _iter_next_1ac9d3a13;
				};
				if (_19717_writed) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_19717_writed=true;
				_1aa313235_if_case(_self_, _19821_elif);
			}
			_iter_next_1ac9d3a13:;
			++it;
			goto _iter_begin_1ac9d3a13;
		}
		_iter_end_1ac9d3a13:;
	};
	if ((_19635_c.get()._field_default != nullptr)) {
		if (_19717_writed) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1aa317327_scope(_self_, _19635_c.get()._field_default.get()._field_scope);
	};
}



inline void _1aa313730_inf_iter(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be2584eb_InfIter> _21632_it) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa317327_scope(_self_, _21632_it.get()._field_scope);
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dedc_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21632_it))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dc45_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21632_it))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1aa3139a5_while_iter(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be2586d8_WhileIter> _23334_it) {
	if (((_23334_it.get()._field_expr != nullptr) && (_23334_it.get()._field_next == nullptr))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_23334_it.get()._field_expr != nullptr)) {
			_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		};
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_23334_it.get()._field_next != nullptr)) {
			_1aa316d2c_st(_self_, jule::Any(_23334_it.get()._field_next));
		};
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa317327_scope(_self_, _23334_it.get()._field_scope);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dedc_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23334_it))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dc45_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23334_it))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1aa313c2a_range_iter(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be2588c5_RangeIter> _26634_it) {
	{
		
		if ((_1be3d7603_slc(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac9e5c12:;
			{
				_1aa312c3a_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1be3d738e_arr(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac9e59e2:;
			{
				_1aa312c3a_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1be3d80a4_map(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac9e56a1:;
			{
				_1aa312eb0_range_hashmap_iter(_self_, _26634_it);
			}
		}
		else {
			_case_begin_1ac9e563a:;
			{
				_1aa312c3a_range_index_iter(_self_, _26634_it);
			}
		}
		_match_end_1ac9e555d:;
	};
}



inline void _1aa313ea0_cont(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be258ab2_ContSt> _27924_c) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32dedc_iter_next(_27924_c.get()._field_it));
}



inline void _1aa314225_label(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be258e8b_Label> _28425_l) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32e284_label(_28425_l.get()._field_ident));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1aa31449a_goto_st(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be259178_GotoSt> _28927_gt) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32e284_label(_28927_gt.get()._field_ident));
}



inline void _1aa314720_postfix(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be259365_Postfix> _29431_p) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_29431_p.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1aa37234e_write(_self_.get()._field_oc, _29431_p.get()._field_op);
}



inline void _1aa314995_assign(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be259552_Assign> _30130_a) {
	_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_l.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, _30130_a.get()._field_op.get()._field_kind);
	_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_r.get()._field_model));
}



inline void _1aa314c1a_multi_assign(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25973e_MultiAssign> _30736_a) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _30736_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aca00b73:;
		if (it != expr.end()) {
			jule::I64 _30914_i = it - expr.begin();
			jule::Any _30921_l = *it;
			{
				if ((_30921_l == nullptr)) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30921_l));
				};
				if (((_30736_a.get()._field_l.len() - _30914_i) > 1LL)) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aca00b73:;
			++it;
			_30914_i++;
			goto _iter_begin_1aca00b73;
		}
		_iter_end_1aca00b73:;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30736_a.get()._field_r));
}



inline jule::Fn<void(void)> _1aa315028_match_expr(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25992b_Match> _32334_m) {
	if ((!(_1be3a9b9c_is_const(_32334_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1be1b5dd7_is_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1be1b3a3e_read_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1aa325148_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_32334_m.get()._field_expr.get()._field_model));
		});
	};
	return nullptr;
}



inline void _1aa315347_case(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25992b_Match> _33328_m, jule::Ptr<_1be259d49_Case> _33343_c) {
	if (((_33343_c.get()._field_exprs.len() != 0LL) && (!(_1be2360bc_is_generic_type_match(_33328_m.ptr()))))) {
		if (((_33328_m.get()._field_cases.len() > 0LL) && (_33328_m.get()._field_cases[0LL] == _33343_c))) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _33343_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1aca09396:;
			if (it != expr.end()) {
				jule::I64 _34018_i = it - expr.begin();
				jule::Ptr<_1be3a92d9_Data> _34025_expr = *it;
				{
					{
						
						if ((!(_33328_m.get()._field_type_match))) {
							_case_begin_1aca0a661:;
							{
								jule::Fn<void(void)> _34325_case_expr = _1aa315028_match_expr(_self_, _33328_m);;
								if (_1be3a9eaa_good_operand(_33328_m.get()._field_expr.ptr(), _34025_expr)) {
									if ((_34325_case_expr != nullptr)) {
										_34325_case_expr();
										_1aa37234e_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								} else {
									_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
									if ((_34325_case_expr != nullptr)) {
										_1aa37234e_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_34325_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1aca0a2ba:;
							{
								_1aa37234e_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1aa37234e_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								_1aa37234e_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1aca0a1dd:;
					};
					if (((_33343_c.get()._field_exprs.len() - _34018_i) > 1LL)) {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1aca09396:;
				++it;
				_34018_i++;
				goto _iter_begin_1aca09396;
			}
			_iter_end_1aca09396:;
		};
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_33328_m.get()._field_default == _33343_c) && (_33328_m.get()._field_cases.len() != 0LL))) {
		_1aa37432e_indent(_self_.get()._field_oc);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32e7c3_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33343_c))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_33343_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1aa37432e_indent(_self_.get()._field_oc);
		_1aa317327_scope(_self_, _33343_c.get()._field_scope);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aa3155bc_match_st(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25992b_Match> _39232_m) {
	if (((_39232_m.get()._field_cases.len() == 0LL) && (_39232_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _39713_generic_type_match = _1be2360bc_is_generic_type_match(_39232_m.ptr());;
	if ((_39713_generic_type_match && ((_39232_m.get()._field_default == nullptr) || (_39232_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	if (((!(_39713_generic_type_match)) && (!(_1be3a9b9c_is_const(_39232_m.get()._field_expr.ptr()))))) {
		if ((_1c00ae40b_COPY && _1aa3178ee_is_copy_optimizable(_39232_m.get()._field_expr))) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_39232_m.get()._field_expr.get()._field_model));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1aa37432e_indent(_self_.get()._field_oc);
	};
	if ((_39232_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _39232_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1aca1ca91:;
			if (it != expr.end()) {
				jule::Ptr<_1be259d49_Case> _42125_c = *it;
				{
					if ((_42125_c == nullptr)) {
						goto _iter_next_1aca1ca91;
					};
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1aa37432e_indent(_self_.get()._field_oc);
					_1aa315347_case(_self_, _39232_m,_42125_c);
				}
				_iter_next_1aca1ca91:;
				++it;
				goto _iter_begin_1aca1ca91;
			}
			_iter_end_1aca1ca91:;
		};
	};
	if ((_39232_m.get()._field_default != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aa315347_case(_self_, _39232_m,_39232_m.get()._field_default);
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32e52b_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_39232_m))));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aa315842_fall_st(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25a036_FallSt> _44827_f) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32e7c3_case_begin(_44827_f.get()._field_dest_case));
}



inline void _1aa315ab7_break_st(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be258c9e_BreakSt> _45328_b) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_45328_b.get()._field_it != 0LLU)) {
		_1aa37234e_write(_self_.get()._field_oc, static__1aa32dc45_iter_end(_45328_b.get()._field_it));
	} else {
		_1aa37234e_write(_self_.get()._field_oc, static__1aa32e52b_match_end(_45328_b.get()._field_mtch));
	};
}



inline void _1aa315d3c_ret_with_vars(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25a223_RetSt> _46237_r) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_46237_r.get()._field_func.get()._field_result));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _46237_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aca29619:;
		if (it != expr.end()) {
			jule::I64 _47214_i = it - expr.begin();
			jule::Ptr<_1be36365b_Var> _47221_v = *it;
			{
				if (_20201eb75_is_ignore_ident(_47221_v.get()._field_ident)) {
					_1aa3258b8_init_expr(_self_.get()._field_oc.get()._field_ec, _47221_v.get()._field_kind.get()._field_kind);
				} else {
					_1aa37234e_write(_self_.get()._field_oc, static__1aa32d706_var(_47221_v));
				};
				if (((_46237_r.get()._field_vars.len() - _47214_i) > 1LL)) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aca29619:;
			++it;
			_47214_i++;
			goto _iter_begin_1aca29619;
		}
		_iter_end_1aca29619:;
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1aa3160b2_ret_tuple(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25a223_RetSt> _49233_r) {
	jule::Slice<jule::Ptr<_1be3a92d9_Data>> _49317_datas = _49233_r.get()._field_expr.operator jule::Ptr<_1bc9c6c8d_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _49233_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aca2e135:;
		if (it != expr.end()) {
			jule::I64 _49414_i = it - expr.begin();
			jule::Ptr<_1be36365b_Var> _49421_v = *it;
			{
				if (_20201eb75_is_ignore_ident(_49421_v.get()._field_ident)) {
					goto _iter_next_1aca2e135;
				};
				jule::Any _49821_model = _49317_datas[_49414_i].get()._field_model;;
				if ((_49821_model == _49421_v)) {
					goto _iter_next_1aca2e135;
				};
				_1aa37234e_write(_self_.get()._field_oc, static__1aa32d706_var(_49421_v));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_49821_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1aa37432e_indent(_self_.get()._field_oc);
			}
			_iter_next_1aca2e135:;
			++it;
			_49414_i++;
			goto _iter_begin_1aca2e135;
		}
		_iter_end_1aca2e135:;
	};
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_49233_r.get()._field_func.get()._field_result));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _49317_datas;
		auto it = expr.begin();
		_iter_begin_1aca34a42:;
		if (it != expr.end()) {
			jule::I64 _51914_i = it - expr.begin();
			jule::Ptr<_1be3a92d9_Data> _51921_d = *it;
			{
				jule::Ptr<_1be36365b_Var> _52021_v = _49233_r.get()._field_vars[_51914_i];;
				if (_20201eb75_is_ignore_ident(_52021_v.get()._field_ident)) {
					_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_51921_d.get()._field_model));
				} else {
					_1aa37234e_write(_self_.get()._field_oc, static__1aa32d706_var(_52021_v));
				};
				if (((_49317_datas.len() - _51914_i) > 1LL)) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1aca34a42:;
			++it;
			_51914_i++;
			goto _iter_begin_1aca34a42;
		}
		_iter_end_1aca34a42:;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1aa316337_ret_with_exprs(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25a223_RetSt> _53738_r) {
	if ((_53738_r.get()._field_vars.len() > 1LL)) {
		_1aa3160b2_ret_tuple(_self_, _53738_r);
		return;;
	};
	if ((_53738_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1be36365b_Var> _54521_v = _53738_r.get()._field_vars[0LL];;
		if (((!(_20201eb75_is_ignore_ident(_54521_v.get()._field_ident))) && (_53738_r.get()._field_expr != _54521_v))) {
			jule::Str _54721_ident = static__1aa32d706_var(_54521_v);;
			_1aa37234e_write(_self_.get()._field_oc, _54721_ident);
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1aa37432e_indent(_self_.get()._field_oc);
			if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_53738_r.get()._field_func.get()._field_result));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1aa37234e_write(_self_.get()._field_oc, _54721_ident);
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1aa37234e_write(_self_.get()._field_oc, _54721_ident);
			};
			return;;
		};
	};
	if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_53738_r.get()._field_func.get()._field_result));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
	return;;
}



inline void _1aa3165ac_ret_st(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be25a223_RetSt> _58130_r) {
	if (((_58130_r.get()._field_expr == nullptr) && (_58130_r.get()._field_vars.len() == 0LL))) {
		if (_58130_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58130_r.get()._field_expr == nullptr)) {
		_1aa315d3c_ret_with_vars(_self_, _58130_r);
		return;;
	};
	_1aa316337_ret_with_exprs(_self_, _58130_r);
}



inline void _1aa316aa7_var(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be36365b_Var> _61627_v) {
	if ((!(_61627_v.get()._field_constant))) {
		_1aa390e50_var(_self_.get()._field_oc, _61627_v);
	};
}



inline void _1aa316d2c_st(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Any _62326_st) {
	if ((_62326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _62326_st };
		
		if (_match_expr.type_is<jule::Ptr<_1be1ca25e_Scope>>()) {
			_case_begin_1aca4d198:;
			{
				_1aa317327_scope(_self_, _62326_st.operator jule::Ptr<_1be1ca25e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1aca4cd57:;
			{
				_1aa316aa7_var(_self_, _62326_st.operator jule::Ptr<_1be36365b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1aca4d8c4:;
			{
				_1aa3253bd_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_62326_st.operator jule::Ptr<_1be3a92d9_Data>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25830e_Conditional>>()) {
			_case_begin_1aca4d93a:;
			{
				_1aa3134aa_conditional(_self_, _62326_st.operator jule::Ptr<_1be25830e_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
			_case_begin_1aca4d9a1:;
			{
				_1aa313730_inf_iter(_self_, _62326_st.operator jule::Ptr<_1be2584eb_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2586d8_WhileIter>>()) {
			_case_begin_1aca4da17:;
			{
				_1aa3139a5_while_iter(_self_, _62326_st.operator jule::Ptr<_1be2586d8_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2588c5_RangeIter>>()) {
			_case_begin_1aca4da7d:;
			{
				_1aa313c2a_range_iter(_self_, _62326_st.operator jule::Ptr<_1be2588c5_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be258ab2_ContSt>>()) {
			_case_begin_1aca4dae4:;
			{
				_1aa313ea0_cont(_self_, _62326_st.operator jule::Ptr<_1be258ab2_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be258e8b_Label>>()) {
			_case_begin_1aca4db5a:;
			{
				_1aa314225_label(_self_, _62326_st.operator jule::Ptr<_1be258e8b_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be259178_GotoSt>>()) {
			_case_begin_1aca4dbc1:;
			{
				_1aa31449a_goto_st(_self_, _62326_st.operator jule::Ptr<_1be259178_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be259365_Postfix>>()) {
			_case_begin_1aca4dc37:;
			{
				_1aa314720_postfix(_self_, _62326_st.operator jule::Ptr<_1be259365_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be259552_Assign>>()) {
			_case_begin_1aca4dc9d:;
			{
				_1aa314995_assign(_self_, _62326_st.operator jule::Ptr<_1be259552_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25973e_MultiAssign>>()) {
			_case_begin_1aca4dd25:;
			{
				_1aa314c1a_multi_assign(_self_, _62326_st.operator jule::Ptr<_1be25973e_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25992b_Match>>()) {
			_case_begin_1aca4dd9c:;
			{
				_1aa3155bc_match_st(_self_, _62326_st.operator jule::Ptr<_1be25992b_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25a036_FallSt>>()) {
			_case_begin_1aca4de24:;
			{
				_1aa315842_fall_st(_self_, _62326_st.operator jule::Ptr<_1be25a036_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be258c9e_BreakSt>>()) {
			_case_begin_1aca4de9b:;
			{
				_1aa315ab7_break_st(_self_, _62326_st.operator jule::Ptr<_1be258c9e_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25a223_RetSt>>()) {
			_case_begin_1aca4e023:;
			{
				_1aa3165ac_ret_st(_self_, _62326_st.operator jule::Ptr<_1be25a223_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be48ee91_PushToSliceExprModel>>()) {
			_case_begin_1aca4e09a:;
			{
				_1aa3230d0_push_to_slice(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1be48ee91_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be490557_MutSlicingExprModel>>()) {
			_case_begin_1aca4e122:;
			{
				_1aa324b4d_mut_slicing(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1be490557_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4908ed_StrInsertBeginExprModel>>()) {
			_case_begin_1aca4e199:;
			{
				_1aa324dc3_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1be4908ed_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1aca4ca9e:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aca4ca49:;
	};
}



inline void _1aa3170a2_scope_stmts(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be1ca25e_Scope>& _67336_s) {
	{
		auto &expr = _67336_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aca59b88:;
		if (it != expr.end()) {
			jule::Any _67421_st = *it;
			{
				_1aa37432e_indent(_self_.get()._field_oc);
				_1aa316d2c_st(_self_, jule::Any(_67421_st));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aca59b88:;
			++it;
			goto _iter_begin_1aca59b88;
		}
		_iter_end_1aca59b88:;
	};
}



inline void _1aa317327_scope(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1be1ca25e_Scope> _68229_s) {
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	if (_68229_s.get()._field_deferred) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aa3170a2_scope_stmts(_self_, _68229_s);
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68229_s.get()._field_deferred) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1aa31759c_func_scope(jule::Ptr<_1aa3123aa_ScopeCoder> _self_, jule::Ptr<_1bc9c9c4c_FnIns> _69834_f) {
	if ((_69834_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	if ((!(_1d70884de_is_void(_69834_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _70521_types = _1d7078bd8_types(_69834_f.ptr());;
		{
			auto &expr = _69834_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1aca61277:;
			if (it != expr.end()) {
				jule::I64 _70617_i = it - expr.begin();
				jule::Ptr<_20201c3d1_Token> _70620_ident = *it;
				{
					if ((_20201eb75_is_ignore_ident(_70620_ident.get()._field_kind) || _20201ee1c_is_anon_ident(_70620_ident.get()._field_kind))) {
						goto _iter_next_1aca61277;
					};
					_1aa37432e_indent(_self_.get()._field_oc);
					_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_70521_types[_70617_i]));
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1aa37234e_write(_self_.get()._field_oc, static__1aa32c0ea_to_local(_70620_ident.get()._field_row,_70620_ident.get()._field_column,_70620_ident.get()._field_kind));
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1aa3258b8_init_expr(_self_.get()._field_oc.get()._field_ec, _70521_types[_70617_i]);
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1aca61277:;
				++it;
				_70617_i++;
				goto _iter_begin_1aca61277;
			}
			_iter_end_1aca61277:;
		};
	};
	_1aa3170a2_scope_stmts(_self_, _69834_f.get()._field_scope);
	if ((_69834_f.get()._field_decl.get()._field_exceptional && _1d70884de_is_void(_69834_f.get()._field_decl.ptr()))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3123aa_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa319a00_ExprCoder> static__1aa319deb_new(jule::Ptr<_1aa38e03b_ObjectCoder>& _9024_oc) {
	return jule::new_ptr<_1aa319a00_ExprCoder>(_1aa319a00_ExprCoder{._field_oc=_9024_oc});
}



inline void _1aa31a171_string(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be159e14_Const>& _9627_c) {
	jule::Str _9713_content = _1be1b3ca3_read_str(_9627_c.ptr());;
	if ((_9713_content.len() == 0LL)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9713_content);;
	jule::Str _10313_len = _1be1289d7_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);;
	jule::Str _10413_lit = _1aa3265bc_cstr_lit(_10213_bytes);;
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa37234e_write(_self_.get()._field_oc, _10413_lit);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1aa37234e_write(_self_.get()._field_oc, _10313_len);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa31a3e6_boolean(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be159e14_Const>& _11328_c) {
	if (_1be1b3a3e_read_bool(_11328_c.ptr())) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1aa31a5c2_nil_lit(jule::Ptr<_1aa319a00_ExprCoder> _self_) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1aa31a8d0_ftoa_special_cases(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::F64& _12539_x) {
	{
		
		if (_1be08ca4a_is_nan(_12539_x)) {
			_case_begin_1aca82dae:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1be09517e_is_inf(_12539_x,1LL)) {
			_case_begin_1aca82672:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1be09517e_is_inf(_12539_x,-1LL)) {
			_case_begin_1aca826d8:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1aca8260b:;
			{
				return false;
			}
		}
		_match_end_1aca8252e:;
	};
	return true;
}



inline void _1aa31ab55_float32(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be159e14_Const>& _13928_c) {
	jule::F64 _14013_x = _1be1b4754_as_f64(_13928_c.ptr());;
	if (_1aa31a8d0_ftoa_special_cases(_self_, _14013_x)) {
		return;;
	};
	{
		
		if ((_14013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aca860b0:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aca85cb3:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1aca85c4c:;
			{
				_1aa37234e_write(_self_.get()._field_oc, _1aa3268ca_ftoa(_14013_x,32LL));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1aca856b9:;
	};
}



inline void _1aa31adca_float64(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be159e14_Const>& _15828_c) {
	jule::F64 _15913_x = _1be1b4754_as_f64(_15828_c.ptr());;
	if (_1aa31a8d0_ftoa_special_cases(_self_, _15913_x)) {
		return;;
	};
	{
		
		if ((_15913_x == jule::MAX_F64)) {
			_case_begin_1aca89657:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_15913_x == jule::MIN_F64)) {
			_case_begin_1aca8939e:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1aca89338:;
			{
				_1aa37234e_write(_self_.get()._field_oc, _1aa3268ca_ftoa(_15913_x,64LL));
			}
		}
		_match_end_1aca88ca5:;
	};
}



inline void _1aa31b1e9_constant(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be159e14_Const> _17732_c, jule::Bool _17743_fx32) {
	{
		
		if (_1be1b614b_is_str(_17732_c.ptr())) {
			_case_begin_1aca8b99a:;
			{
				_1aa31a171_string(_self_, _17732_c);
			}
		}
		else if (_1be1b5dd7_is_bool(_17732_c.ptr())) {
			_case_begin_1aca8ba11:;
			{
				_1aa31a3e6_boolean(_self_, _17732_c);
			}
		}
		else if (_1be1b63b0_is_f64(_17732_c.ptr())) {
			_case_begin_1aca8ba77:;
			{
				{
					
					if (_17743_fx32) {
						_case_begin_1aca8e1ea:;
						{
							_1aa31ab55_float32(_self_, _17732_c);
						}
					}
					else {
						_case_begin_1aca8db23:;
						{
							_1aa31adca_float64(_self_, _17732_c);
						}
					}
					_match_end_1aca8da46:;
				};
			}
		}
		else if (_1be1b590e_is_i64(_17732_c.ptr())) {
			_case_begin_1aca8badd:;
			{
				_1aa37234e_write(_self_.get()._field_oc, _1aa326b72_itoa(static_cast<jule::I64>(_1be1b3566_read_i64(_17732_c.ptr()))));
			}
		}
		else if (_1be1b5b73_is_u64(_17732_c.ptr())) {
			_case_begin_1aca8c4e5:;
			{
				_1aa37234e_write(_self_.get()._field_oc, _1aa326e19_utoa(static_cast<jule::U64>(_1be1b37ca_read_u64(_17732_c.ptr()))));
			}
		}
		else if (_1be1b6624_is_nil(_17732_c.ptr())) {
			_case_begin_1aca8c55b:;
			{
				_1aa31a5c2_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1aca8b934:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1aca8b857:;
	};
}



inline void _1aa31b5b2_div_by_zero_binary(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_20201c3d1_Token>& _20139_op, jule::Ptr<_1d70abbb6_OperandExprModel>& _20156_l, jule::Ptr<_1d70abbb6_OperandExprModel>& _20183_r) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20139_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1aca92561:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aca925c7:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1aca92462:;
	};
	if ((!(_1eec82ce7_PRODUCTION))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1aa357301_loc_info(_self_.get()._field_oc, _20139_op);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1aa3253bd_expr(_self_, jule::Any(_20156_l.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aa3253bd_expr(_self_, jule::Any(_20183_r.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa31b837_unsafe_binary(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1d70abda3_BinopExprModel> _22337_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa325148_model(_self_, jule::Any(_22337_m.get()._field_left.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1aa37234e_write(_self_.get()._field_oc, _22337_m.get()._field_op.get()._field_kind);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1aa325148_model(_self_, jule::Any(_22337_m.get()._field_right.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa31baac_binary(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1d70abda3_BinopExprModel> _23330_m) {
	{
		auto &_match_expr{ _23330_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1aca99bd9:;
			{
				if ((_1be3d7acb_strct(_23330_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1aa31b5b2_div_by_zero_binary(_self_, _23330_m.get()._field_op,_23330_m.get()._field_left,_23330_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1aca99b2e:;
	};
	_1aa31b837_unsafe_binary(_self_, _23330_m);
}



inline void _1aa31bd32_var(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be36365b_Var> _24527_m) {
	if (_24527_m.get()._field_cpp_linked) {
		jule::Ptr<_1d705bd64_Directive> _24717_d = _1aa39c2be_find_directive(_24527_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_24717_d != nullptr)) {
			_1aa37234e_write(_self_.get()._field_oc, _1aa393d98_concat_all_parts(_24717_d.get()._field_args));
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32d706_var(_24527_m));
}



inline void _1aa31c0a7_structure(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1d7073276_Struct> _25629_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa3980ab_structure(_25629_m));
}



inline void _1aa31c32c_structure_ins(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns> _26037_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa398353_structure_ins(_26037_m));
}



inline void _1aa31c5a2_unary(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c45c6_UnaryExprModel> _26429_m) {
	{
		auto &_match_expr{ _26429_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1acaa0bac:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1aa3253bd_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1acaa0c23:;
			{
				if ((_1eec82ce7_PRODUCTION || (_1be3d68dd_sptr(_26429_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1acaa0b02;
				};
				_1aa3253bd_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1aa357301_loc_info(_self_.get()._field_oc, _26429_m.get()._field_op);
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1acaa0b02:;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa37234e_write(_self_.get()._field_oc, _26429_m.get()._field_op.get()._field_kind);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa3253bd_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1aa31c827_structure_lit(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c49a0_StructLitExprModel> _28837_m) {
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32d1b7_structure_ins(_28837_m.get()._field_strct));
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_28837_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28837_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acaa9325:;
			if (it != expr.end()) {
				jule::I64 _30117_i = it - expr.begin();
				jule::Ptr<_1d708808d_FieldIns> _30120_f = *it;
				{
					{
						auto &expr = _28837_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1acaa9de7:;
						if (it != expr.end()) {
							jule::Ptr<_1bc9c47b3_StructArgExprModel> _30229_arg = *it;
							{
								if ((_30229_arg.get()._field_field == _30120_f)) {
									_1aa37234e_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1aa37234e_write(_self_.get()._field_oc, static__1aa32d45e_field(_30229_arg.get()._field_field.get()._field_decl));
									_1aa37234e_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1aa3253bd_expr(_self_, jule::Any(_30229_arg.get()._field_expr));
									if (((_28837_m.get()._field_strct.get()._field_fields.len() - _30117_i) > 1LL)) {
										_1aa37234e_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1acaa9325;
								};
							}
							_iter_next_1acaa9de7:;
							++it;
							goto _iter_begin_1acaa9de7;
						}
						_iter_end_1acaa9de7:;
					};
				}
				_iter_next_1acaa9325:;
				++it;
				_30117_i++;
				goto _iter_begin_1acaa9325;
			}
			_iter_end_1acaa9325:;
		};
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aa31ca9c_alloc_structure(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel> _31939_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32d1b7_structure_ins(_31939_m.get()._field_lit.get()._field_strct));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1aa31c827_structure_lit(_self_, _31939_m.get()._field_lit);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa31cd22_casting(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c4d79_CastingExprModel> _32731_m) {
	{
		
		if (((_1be3d6679_prim(_32731_m.get()._field_kind.ptr()) != nullptr) && _1be3dc2a6_is_any(_1be3d6679_prim(_32731_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1acab351b:;
			{
				_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_32731_m.get()._field_kind));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1aa325148_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1be3d6b52_ptr(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || (_1be3d6b52_ptr(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1acab185a:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_32731_m.get()._field_kind));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1aa3253bd_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1be3d7d40_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1be3d6679_prim(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && _1be3dc2a6_is_any(_1be3d6679_prim(_32731_m.get()._field_expr_kind.ptr()).ptr())) || (_1be3d712a_tenm(_32731_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1acab152a:;
			{
				_1aa325148_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1eec82ce7_PRODUCTION) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_32731_m.get()._field_kind));
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1be3d68dd_sptr(_32731_m.get()._field_kind.ptr()) != nullptr)) {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_1be3d68dd_sptr(_32731_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_32731_m.get()._field_kind));
					};
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1aa357301_loc_info(_self_.get()._field_oc, _32731_m.get()._field_token);
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1be3d7d40_trt(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1acab1591:;
			{
				_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_32731_m.get()._field_kind));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1aa3253bd_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1aa37234e_write(_self_.get()._field_oc, _1be128b19_itoa(static_cast<jule::I64>(_1aa37575e_find_type_offset(_self_.get()._field_oc.ptr(), _1be3d7d40_trt(_32731_m.get()._field_kind.ptr()),_32731_m.get()._field_expr_kind))));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1acab14b4:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_32731_m.get()._field_kind));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1aa3253bd_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1acab13d7:;
	};
}



inline void _1aa31d097_args(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Slice<jule::Any> _37828_args) {
	if ((_37828_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _37828_args;
		auto it = expr.begin();
		_iter_begin_1acac40dc:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Any _38221_a = *it;
			{
				_1aa3253bd_expr(_self_, jule::Any(_38221_a));
				if (((_37828_args.len() - _38214_i) > 1LL)) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1acac40dc:;
			++it;
			_38214_i++;
			goto _iter_begin_1acac40dc;
		}
		_iter_end_1acac40dc:;
	};
}



inline void _1aa31d31c_model_for_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Any _39038_expr) {
	{
		auto &_match_expr{ _39038_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c9c4c_FnIns>>()) {
			_case_begin_1acac6298:;
			{
				_1aa321100_func_ins(_self_, _39038_expr.operator jule::Ptr<_1bc9c9c4c_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1acac6320:;
			{
				jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _39621_ssie = _39038_expr.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>();;
				if ((_39621_ssie.get()._field_method != nullptr)) {
					_1aa321100_func_ins(_self_, _39621_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1acac6188:;
	};
	_1aa325148_model(_self_, jule::Any(_39038_expr));
}



inline void _1aa31d592_push_call_inf(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5066_FnCallExprModel>& _40534_m) {
	if ((_1eec82ce7_PRODUCTION || ((!(_40534_m.get()._field_func.get()._field_anon)) && (!(_1aa32758a_is_builtin_call_has_debuginf(_40534_m)))))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40534_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40534_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
				_case_begin_1acac99e9:;
				{
					if (_40534_m.get()._field_expr.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1acac9bc5;
				}
			}
			else {
				_case_begin_1acac9bc5:;
				{
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1acac9aa4:;
		};
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1aa357301_loc_info(_self_.get()._field_oc, _40534_m.get()._field_token);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40534_m.get()._field_args.len() != 0LL)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1aa31d8a0_is_wrapped(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5066_FnCallExprModel>& _43035_m) {
	if ((((!(_1d707b559_is_builtin(_43035_m.get()._field_func.ptr()))) && (_43035_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1d708990d_is_self(_43035_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43035_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
				_case_begin_1acacdcea:;
				{
					jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _43425_ssie = _43035_m.get()._field_expr.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>();;
					{
						
						if (_1d7061462_is_ref(_43035_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1be3d68dd_sptr(_43425_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1acace625:;
							{
								goto _match_end_1acaceba8;
							}
						}
						else {
							_case_begin_1acacec1e:;
							{
								if ((_1be3d7acb_strct(_43425_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43425_ssie.get()._field_expr.get()._field_lvalue))) {
										_1aa37234e_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1aa325148_model(_self_, jule::Any(_43425_ssie.get()._field_expr));
										_1aa37234e_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1acaceba8:;
					};
				}
			}
			_match_end_1acacdadb:;
		};
	};
	return false;
}



inline void _1aa31db25_pure_func_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5066_FnCallExprModel>& _45439_m) {
	jule::Bool _45513_wrapped = _1aa31d8a0_is_wrapped(_self_, _45439_m);;
	if (_45439_m.get()._field_is_co) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1aa31d31c_model_for_call(_self_, jule::Any(_45439_m.get()._field_expr));
	if ((!(_1d707b559_is_builtin(_45439_m.get()._field_func.ptr())))) {
		if ((_45439_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45439_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1aa39c654_has_directive(_45439_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45439_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1acad6660:;
					if (it != expr.end()) {
						jule::I64 _46426_i = it - expr.begin();
						jule::Ptr<_1be3d45ab_TypeKind> _46433_g = *it;
						{
							_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_46433_g));
							if (((_45439_m.get()._field_func.get()._field_generics.len() - _46426_i) > 1LL)) {
								_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1acad6660:;
						++it;
						_46426_i++;
						goto _iter_begin_1acad6660;
					}
					_iter_end_1acad6660:;
				};
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1aa31d592_push_call_inf(_self_, _45439_m);
	jule::Bool _47517_locinfo = false;;
	if ((((!(_1d707b559_is_builtin(_45439_m.get()._field_func.ptr()))) && (_45439_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1d708990d_is_self(_45439_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45439_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
				_case_begin_1acad51ec:;
				{
					jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _47925_ssie = _45439_m.get()._field_expr.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>();;
					{
						
						if (_1d7061462_is_ref(_45439_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1ac94be98:;
							{
								_1aa325148_model(_self_, jule::Any(_47925_ssie.get()._field_expr));
							}
						}
						else if ((_1be3d68dd_sptr(_47925_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1acadc864:;
							{
								_1aa325148_model(_self_, jule::Any(_47925_ssie.get()._field_expr));
								_1aa37234e_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1eec82ce7_PRODUCTION))) {
									_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1aa357301_loc_info(_self_.get()._field_oc, _45439_m.get()._field_token);
									_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1acadb3ac:;
							{
								if ((_1be3d7acb_strct(_47925_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1aa37234e_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45513_wrapped) {
									_1aa37234e_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1aa325148_model(_self_, jule::Any(_47925_ssie.get()._field_expr));
								};
							}
						}
						_match_end_1acadb346:;
					};
					if ((_45439_m.get()._field_args.len() > 0LL)) {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>>()) {
				_case_begin_1acada433:;
				{
					_1aa325148_model(_self_, jule::Any(_45439_m.get()._field_expr.operator jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>().get()._field_expr));
					if ((!(_1eec82ce7_PRODUCTION))) {
						_47517_locinfo=true;
					};
					if ((_45439_m.get()._field_args.len() > 0LL)) {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1acada2bd:;
		};
	};
	_1aa31d097_args(_self_, _45439_m.get()._field_args);
	if (_47517_locinfo) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1aa357301_loc_info(_self_.get()._field_oc, _45439_m.get()._field_token);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45513_wrapped) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45439_m.get()._field_is_co) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1aa31dd9a_func_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5066_FnCallExprModel> _53333_m) {
	if (((_1d707b559_is_builtin(_53333_m.get()._field_func.ptr()) || (!(_53333_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53333_m.get()._field_except != nullptr) && (_53333_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1aa31db25_pure_func_call(_self_, _53333_m);
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1aa31db25_pure_func_call(_self_, _53333_m);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	if ((_53333_m.get()._field_except != nullptr)) {
		if (((_53333_m.get()._field_func.get()._field_result == nullptr) || (!(_53333_m.get()._field_assigned)))) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1aa317327_scope(_self_.get()._field_oc.get()._field_sc, _53333_m.get()._field_except);
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55521_forwarded = _1aa3272c1_is_forwarded(_53333_m.get()._field_except);;
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55521_forwarded) {
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1aa317327_scope(_self_.get()._field_oc.get()._field_sc, _53333_m.get()._field_except);
			if (_55521_forwarded) {
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1aa3258b8_init_expr(_self_, _53333_m.get()._field_func.get()._field_result);
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1aa373ad1_done_indent(_self_.get()._field_oc);
	} else {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1aa357301_loc_info(_self_.get()._field_oc, _53333_m.get()._field_token);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1d70884de_is_void(_53333_m.get()._field_func.get()._field_decl.ptr())))) {
			_1aa37432e_indent(_self_.get()._field_oc);
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1aa373ad1_done_indent(_self_.get()._field_oc);
	};
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1aa31e120_slice(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5253_SliceExprModel> _58429_m) {
	if ((_58429_m.get()._field_elems.len() == 0LL)) {
		_1aa37234e_write(_self_.get()._field_oc, static__1aa397286_as_slice(_58429_m.get()._field_elem_kind));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, static__1aa397286_as_slice(_58429_m.get()._field_elem_kind));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1aa31d097_args(_self_, _58429_m.get()._field_elems);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1aa31e395_indexing(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5440_IndexingExprModel> _59632_m) {
	_1aa325148_model(_self_, jule::Any(_59632_m.get()._field_expr.get()._field_model));
	{
		
		if (_1eec82ce7_PRODUCTION || (_1be3d6b52_ptr(_59632_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1be3d80a4_map(_59632_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1acb0b278:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1aa3253bd_expr(_self_, jule::Any(_59632_m.get()._field_index.get()._field_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1acb093b9:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1aa357301_loc_info(_self_.get()._field_oc, _59632_m.get()._field_token);
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1aa3253bd_expr(_self_, jule::Any(_59632_m.get()._field_index.get()._field_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1acb09353:;
	};
}



inline void _1aa31e61a_unsafe_indexing(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be48eac8_UnsafeIndexingExprModel> _61539_m) {
	_1aa325148_model(_self_, jule::Any(_61539_m.get()._field_node.get()._field_expr.get()._field_model));
	{
		
		if (_1eec82ce7_PRODUCTION || (_1be3d6b52_ptr(_61539_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1be3d80a4_map(_61539_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1acb10568:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1aa3253bd_expr(_self_, jule::Any(_61539_m.get()._field_node.get()._field_index.get()._field_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1acb0e204:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1aa3253bd_expr(_self_, jule::Any(_61539_m.get()._field_node.get()._field_index.get()._field_model));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1acb0e18d:;
	};
}



inline void _1aa31e890_anon_func(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c562c_AnonFnExprModel> _63233_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa3996b7_func(_63233_m.get()._field_func));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1aa3908ab_params_ins(_self_.get()._field_oc, _63233_m.get()._field_func.get()._field_params);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa399178_func_ins_result(_63233_m.get()._field_func));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1aa31759c_func_scope(_self_.get()._field_oc.get()._field_sc, _63233_m.get()._field_func);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa31eb15_map(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5a06_MapExprModel> _64327_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_64327_m.get()._field_key_kind));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_64327_m.get()._field_val_kind));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64327_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64327_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1acb1dcc4:;
			if (it != expr.end()) {
				jule::I64 _65018_i = it - expr.begin();
				jule::Ptr<_1bc9c5819_KeyValPairExprModel> _65025_pair = *it;
				{
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1aa3253bd_expr(_self_, jule::Any(_65025_pair.get()._field_key));
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1aa3253bd_expr(_self_, jule::Any(_65025_pair.get()._field_val));
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64327_m.get()._field_entries.len() - _65018_i) > 1LL)) {
						_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1acb1dcc4:;
				++it;
				_65018_i++;
				goto _iter_begin_1acb1dcc4;
			}
			_iter_end_1acb1dcc4:;
		};
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1aa31ed8a_slicing(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5be3_SlicingExprModel> _66431_m) {
	_1aa325148_model(_self_, jule::Any(_66431_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1eec82ce7_PRODUCTION))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1aa357301_loc_info(_self_.get()._field_oc, _66431_m.get()._field_token);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1aa3253bd_expr(_self_, jule::Any(_66431_m.get()._field_left));
	if ((_66431_m.get()._field_right != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aa3253bd_expr(_self_, jule::Any(_66431_m.get()._field_right));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa320110_trait_sub(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel> _68033_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c8d1_trait_decl(_68033_m.get()._field_trt));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1aa325148_model(_self_, jule::Any(_68033_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c392_func(_68033_m.get()._field_method));
}



inline void _1aa320385_structure_sub(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _68937_m) {
	_1aa325148_model(_self_, jule::Any(_68937_m.get()._field_expr));
	if ((_68937_m.get()._field_field != nullptr)) {
		if ((_1be3d6b52_ptr(_68937_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1be3d68dd_sptr(_68937_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1eec82ce7_PRODUCTION))) {
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1aa357301_loc_info(_self_.get()._field_oc, _68937_m.get()._field_token);
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1aa37234e_write(_self_.get()._field_oc, static__1aa32d45e_field(_68937_m.get()._field_field.get()._field_decl));
	};
}



inline void _1aa32060a_common_ident(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c68b4_CommonIdentExprModel> _70932_m) {
	_1aa37234e_write(_self_.get()._field_oc, _70932_m.get()._field_ident);
}



inline void _1aa320880_common_sub(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel> _71334_m) {
	_1aa325148_model(_self_, jule::Any(_71334_m.get()._field_expr));
	{
		
		if ((_1be3d6b52_ptr(_71334_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1acb30104:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1be3d68dd_sptr(_71334_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1acb3090c:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1eec82ce7_PRODUCTION))) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1aa357301_loc_info(_self_.get()._field_oc, _71334_m.get()._field_token);
					_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1acb30896:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1acb30830:;
	};
	_1aa37234e_write(_self_.get()._field_oc, _71334_m.get()._field_ident);
}



inline void _1aa320b05_array(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c66c7_ArrayExprModel> _73229_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa3985ea_array(_73229_m.get()._field_kind));
	if ((_73229_m.get()._field_elems.len() == 0LL)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73229_m.get()._field_elems.len() == 2LL) && (_73229_m.get()._field_elems[1LL] == nullptr))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1aa3253bd_expr(_self_, jule::Any(_73229_m.get()._field_elems[0LL]));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1aa31d097_args(_self_, _73229_m.get()._field_elems);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1aa320d7a_func_ins_common(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c9c4c_FnIns> _75539_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa3996b7_func(_75539_m));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa321100_func_ins(_self_, _75539_m);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa321100_func_ins(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c9c4c_FnIns> _76232_m) {
	if (((_76232_m.get()._field_decl != nullptr) && _76232_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1d705bd64_Directive> _76417_d = _1aa39c2be_find_directive(_76232_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76417_d != nullptr)) {
			_1aa37234e_write(_self_.get()._field_oc, _1aa393d98_concat_all_parts(_76417_d.get()._field_args));
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c639_func_ins(_76232_m));
}



inline void _1aa321375_tuple(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c6c8d_TupleExprModel> _77329_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77329_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1acb3e960:;
		if (it != expr.end()) {
			jule::I64 _77514_i = it - expr.begin();
			jule::Ptr<_1be3a92d9_Data> _77521_d = *it;
			{
				_1aa3253bd_expr(_self_, jule::Any(_77521_d.get()._field_model));
				if (((_77329_m.get()._field_datas.len() - _77514_i) > 1LL)) {
					_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1acb3e960:;
			++it;
			_77514_i++;
			goto _iter_begin_1acb3e960;
		}
		_iter_end_1acb3e960:;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa3215ea_new_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel> _78432_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_78432_m.get()._field_kind));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78432_m.get()._field_init != nullptr)) {
		_1aa3253bd_expr(_self_, jule::Any(_78432_m.get()._field_init));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa321870_out_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel> _79432_m) {
	if ((_79432_m.get()._field_debug && _1eec82ce7_PRODUCTION)) {
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1aa3253bd_expr(_self_, jule::Any(_79432_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa321ae5_outln_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel> _80334_m) {
	if ((_80334_m.get()._field_debug && _1eec82ce7_PRODUCTION)) {
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1aa3253bd_expr(_self_, jule::Any(_80334_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa321d6a_panic_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel> _81234_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1aa3253bd_expr(_self_, jule::Any(_81234_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1aa357301_loc_info(_self_.get()._field_oc, _81234_m.get()._field_token);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1aa3220e0_assert_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel> _82035_m) {
	if (_1eec82ce7_PRODUCTION) {
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1aa3253bd_expr(_self_, jule::Any(_82035_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1aa37234e_write(_self_.get()._field_oc, _1aa3265bc_cstr_lit(static_cast<jule::Slice<jule::U8>>(_82035_m.get()._field_log)));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1aa357301_loc_info(_self_.get()._field_oc, _82035_m.get()._field_token);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1aa322365_error_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel> _83334_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1d70884de_is_void(_83334_m.get()._field_func.get()._field_decl.ptr())) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_83334_m.get()._field_func.get()._field_result));
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1aa3253bd_expr(_self_, jule::Any(_83334_m.get()._field_err));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa3225da_copy_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7ed1_BuiltinCopyCallExprModel> _84633_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1aa325148_model(_self_, jule::Any(_84633_m.get()._field_dest.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1be3d6679_prim(_84633_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1aa325148_model(_self_, jule::Any(_84633_m.get()._field_src.get()._field_model));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1be3d6679_prim(_84633_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa322860_make_call_slice(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>& _86240_m) {
	jule::Ptr<_1be3dceee_Slc> _86317_slice = _1be3d7603_slc(_86240_m.get()._field_kind.ptr());;
	_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_86240_m.get()._field_kind));
	if ((_1be3d6db6_enm(_86317_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86240_m.get()._field_cap != nullptr)) {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1aa37234e_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1aa3253bd_expr(_self_, jule::Any(_86240_m.get()._field_len));
	if ((_86240_m.get()._field_cap != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aa3253bd_expr(_self_, jule::Any(_86240_m.get()._field_cap));
	};
	if ((_1be3d6db6_enm(_86317_slice.get()._field_elem.ptr()) != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aa3258b8_init_expr(_self_, _86317_slice.get()._field_elem);
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa322ad5_make_call_str(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>& _88838_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1aa3253bd_expr(_self_, jule::Any(_88838_m.get()._field_len));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa322d5a_make_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel> _89533_m) {
	if ((_1be3d7603_slc(_89533_m.get()._field_kind.ptr()) != nullptr)) {
		_1aa322860_make_call_slice(_self_, _89533_m);
		return;;
	};
	_1aa322ad5_make_call_str(_self_, _89533_m);
}



inline void _1aa3230d0_push_to_slice(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be48ee91_PushToSliceExprModel> _90337_m) {
	jule::I64 _90413_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1aa325148_model(_self_, jule::Any(_90337_m.get()._field_dest));
	jule::Str _90613_dest = _self_.get()._field_oc.get()._field_obj.slice(_90413_n);;
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1aa37234e_write(_self_.get()._field_oc, _90613_dest);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aa37234e_write(_self_.get()._field_oc, _1be128b19_itoa(static_cast<jule::I64>(_90337_m.get()._field_elems.get()._field_elems.len())));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90337_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1acb63632:;
		if (it != expr.end()) {
			jule::Any _91321_e = *it;
			{
				_1aa37234e_write(_self_.get()._field_oc, _90613_dest);
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1aa325148_model(_self_, jule::Any(_91321_e));
				_1aa37234e_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1acb63632:;
			++it;
			goto _iter_begin_1acb63632;
		}
		_iter_end_1acb63632:;
	};
}



inline void _1aa323355_append_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel> _92235_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1aa325148_model(_self_, jule::Any(_92235_m.get()._field_dest));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aa325148_model(_self_, jule::Any(_92235_m.get()._field_elements));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa3235ca_clone_call(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel> _93034_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1aa325148_model(_self_, jule::Any(_93034_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa323850_sizeof(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c60bc_SizeofExprModel> _93630_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1aa325148_model(_self_, jule::Any(_93630_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa323ac5_alignof(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c882d_AlignofExprModel> _94231_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1aa325148_model(_self_, jule::Any(_94231_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1aa323dd3_rune_lit(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c8a1a_RuneExprModel> _94828_m) {
	if ((_94828_m.get()._field_code <= 127LL)) {
		jule::Str _95021_b = _1aa326006_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_94828_m.get()._field_code)));;
		if ((_95021_b == jule::Str("'", 1))) {
			_95021_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95021_b) + jule::Str("'", 1));
	};
	return _1aa326b72_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_94828_m.get()._field_code)));
}



inline void _1aa324158_structure_static(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c64da_StructStaticIdentExprModel> _95940_m) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c639_func_ins(_95940_m.get()._field_method));
}



inline void _1aa3243cd_integrated_to_str(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel> _96341_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1aa325148_model(_self_, jule::Any(_96341_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aa324653_backend_emit(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c8de4_BackendEmitExprModel> _96936_m) {
	if ((_96936_m.get()._field_exprs.len() == 0LL)) {
		_1aa37234e_write(_self_.get()._field_oc, _96936_m.get()._field_code);
		return;;
	};
	jule::I64 _97413_n = _self_.get()._field_oc.get()._field_obj.len();;
	{
		auto &expr = _96936_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1acb723aa:;
		if (it != expr.end()) {
			jule::I64 _97514_i = it - expr.begin();
			jule::Any _97521_expr = *it;
			{
				_1aa3253bd_expr(_self_, jule::Any(_97521_expr));
				jule::Str _97717_obj = _self_.get()._field_oc.get()._field_obj.slice(_97413_n);;
				_96936_m.get()._field_exprs[_97514_i]=jule::Any(_97717_obj);
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97413_n);
			}
			_iter_next_1acb723aa:;
			++it;
			_97514_i++;
			goto _iter_begin_1acb723aa;
		}
		_iter_end_1acb723aa:;
	};
	_1aa37234e_write(_self_.get()._field_oc, _1be47e854_format(_96936_m.get()._field_code,jule::Any(_96936_m.get()._field_exprs)));
}



inline void _1aa3248c8_free(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1bc9c90d1_FreeExprModel> _98428_m) {
	_1aa3253bd_expr(_self_, jule::Any(_98428_m.get()._field_expr));
	if (_1eec825bb_RC) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1aa324b4d_mut_slicing(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be490557_MutSlicingExprModel> _99335_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa325148_model(_self_, jule::Any(_99335_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1eec82ce7_PRODUCTION))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1aa357301_loc_info(_self_.get()._field_oc, _99335_m.get()._field_token);
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1aa3253bd_expr(_self_, jule::Any(_99335_m.get()._field_left));
	if ((_99335_m.get()._field_right != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aa3253bd_expr(_self_, jule::Any(_99335_m.get()._field_right));
	};
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1aa324dc3_str_insert_begin(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be4908ed_StrInsertBeginExprModel> _101040_m) {
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aa325148_model(_self_, jule::Any(_101040_m.get()._field_dest));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1aa325148_model(_self_, jule::Any(_101040_m.get()._field_expr));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1aa325148_model(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Any _101829_m) {
	{
		auto &_match_expr{ _101829_m };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1acb7ceba:;
			{
				_1aa325148_model(_self_, jule::Any(_101829_m.operator jule::Ptr<_1be3a92d9_Data>().get()._field_model));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3d45ab_TypeKind>>()) {
			_case_begin_1acb7d295:;
			{
				_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_101829_m.operator jule::Ptr<_1be3d45ab_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1acb7d30b:;
			{
				_1aa31b1e9_constant(_self_, _101829_m.operator jule::Ptr<_1be159e14_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1acb7d372:;
			{
				_1aa31bd32_var(_self_, _101829_m.operator jule::Ptr<_1be36365b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bd929d66_Trait>>()) {
			_case_begin_1acb7d3d8:;
			{
				static__1aa32c8d1_trait_decl(_101829_m.operator jule::Ptr<_1bd929d66_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7073276_Struct>>()) {
			_case_begin_1acb7dedd:;
			{
				_1aa31c0a7_structure(_self_, _101829_m.operator jule::Ptr<_1d7073276_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70ab9c9_StructIns>>()) {
			_case_begin_1acb7e054:;
			{
				_1aa31c32c_structure_ins(_self_, _101829_m.operator jule::Ptr<_1d70ab9c9_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c9c4c_FnIns>>()) {
			_case_begin_1acb7e0ba:;
			{
				_1aa320d7a_func_ins_common(_self_, _101829_m.operator jule::Ptr<_1bc9c9c4c_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be48e7a9_UnsafeBinopExprModel>>()) {
			_case_begin_1acb7e131:;
			{
				_1aa31b837_unsafe_binary(_self_, _101829_m.operator jule::Ptr<_1be48e7a9_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70abda3_BinopExprModel>>()) {
			_case_begin_1acb7e197:;
			{
				_1aa31baac_binary(_self_, _101829_m.operator jule::Ptr<_1d70abda3_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c45c6_UnaryExprModel>>()) {
			_case_begin_1acb7e20d:;
			{
				_1aa31c5a2_unary(_self_, _101829_m.operator jule::Ptr<_1bc9c45c6_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c49a0_StructLitExprModel>>()) {
			_case_begin_1acb7e274:;
			{
				_1aa31c827_structure_lit(_self_, _101829_m.operator jule::Ptr<_1bc9c49a0_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>>()) {
			_case_begin_1acb7e2da:;
			{
				_1aa31ca9c_alloc_structure(_self_, _101829_m.operator jule::Ptr<_1bc9c4b8c_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c4d79_CastingExprModel>>()) {
			_case_begin_1acb7e351:;
			{
				_1aa31cd22_casting(_self_, _101829_m.operator jule::Ptr<_1bc9c4d79_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1acb7e3b7:;
			{
				_1aa31dd9a_func_call(_self_, _101829_m.operator jule::Ptr<_1bc9c5066_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5253_SliceExprModel>>()) {
			_case_begin_1acb7e43e:;
			{
				_1aa31e120_slice(_self_, _101829_m.operator jule::Ptr<_1bc9c5253_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c66c7_ArrayExprModel>>()) {
			_case_begin_1acb7e4b6:;
			{
				_1aa320b05_array(_self_, _101829_m.operator jule::Ptr<_1bc9c66c7_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be48eac8_UnsafeIndexingExprModel>>()) {
			_case_begin_1acb7e53d:;
			{
				_1aa31e61a_unsafe_indexing(_self_, _101829_m.operator jule::Ptr<_1be48eac8_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5440_IndexingExprModel>>()) {
			_case_begin_1acb7e5b5:;
			{
				_1aa31e395_indexing(_self_, _101829_m.operator jule::Ptr<_1bc9c5440_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c562c_AnonFnExprModel>>()) {
			_case_begin_1acb7e63c:;
			{
				_1aa31e890_anon_func(_self_, _101829_m.operator jule::Ptr<_1bc9c562c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5a06_MapExprModel>>()) {
			_case_begin_1acb7e6b4:;
			{
				_1aa31eb15_map(_self_, _101829_m.operator jule::Ptr<_1bc9c5a06_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5be3_SlicingExprModel>>()) {
			_case_begin_1acb7e73b:;
			{
				_1aa31ed8a_slicing(_self_, _101829_m.operator jule::Ptr<_1bc9c5be3_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>>()) {
			_case_begin_1acb7e7b3:;
			{
				_1aa320110_trait_sub(_self_, _101829_m.operator jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1acb7e83a:;
			{
				_1aa320385_structure_sub(_self_, _101829_m.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c68b4_CommonIdentExprModel>>()) {
			_case_begin_1acb7e8b2:;
			{
				_1aa32060a_common_ident(_self_, _101829_m.operator jule::Ptr<_1bc9c68b4_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>>()) {
			_case_begin_1acb7e939:;
			{
				_1aa320880_common_sub(_self_, _101829_m.operator jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6c8d_TupleExprModel>>()) {
			_case_begin_1acb7e9b1:;
			{
				_1aa321375_tuple(_self_, _101829_m.operator jule::Ptr<_1bc9c6c8d_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>>()) {
			_case_begin_1acb7ea38:;
			{
				_1aa321870_out_call(_self_, _101829_m.operator jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1acb7eab0:;
			{
				_1aa321ae5_outln_call(_self_, _101829_m.operator jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>>()) {
			_case_begin_1acb7eb37:;
			{
				_1aa3215ea_new_call(_self_, _101829_m.operator jule::Ptr<_1bc9c7541_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>>()) {
			_case_begin_1acb7ebae:;
			{
				_1aa321d6a_panic_call(_self_, _101829_m.operator jule::Ptr<_1bc9c772d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1acb7ec36:;
			{
				_1aa3220e0_assert_call(_self_, _101829_m.operator jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
			_case_begin_1acb7ecad:;
			{
				_1aa322365_error_call(_self_, _101829_m.operator jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>>()) {
			_case_begin_1acb7ed35:;
			{
				_1aa322d5a_make_call(_self_, _101829_m.operator jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>>()) {
			_case_begin_1acb7edac:;
			{
				_1aa323355_append_call(_self_, _101829_m.operator jule::Ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>>()) {
			_case_begin_1acb7ee34:;
			{
				_1aa3235ca_clone_call(_self_, _101829_m.operator jule::Ptr<_1bc9c7354_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c7ed1_BuiltinCopyCallExprModel>>()) {
			_case_begin_1acb7eeab:;
			{
				_1aa3225da_copy_call(_self_, _101829_m.operator jule::Ptr<_1bc9c7ed1_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c60bc_SizeofExprModel>>()) {
			_case_begin_1acb80033:;
			{
				_1aa323850_sizeof(_self_, _101829_m.operator jule::Ptr<_1bc9c60bc_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c882d_AlignofExprModel>>()) {
			_case_begin_1acb800aa:;
			{
				_1aa323ac5_alignof(_self_, _101829_m.operator jule::Ptr<_1bc9c882d_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8a1a_RuneExprModel>>()) {
			_case_begin_1acb80132:;
			{
				_1aa37234e_write(_self_.get()._field_oc, _1aa323dd3_rune_lit(_self_, _101829_m.operator jule::Ptr<_1bc9c8a1a_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c64da_StructStaticIdentExprModel>>()) {
			_case_begin_1acb801a9:;
			{
				_1aa324158_structure_static(_self_, _101829_m.operator jule::Ptr<_1bc9c64da_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>>()) {
			_case_begin_1acb80231:;
			{
				_1aa3243cd_integrated_to_str(_self_, _101829_m.operator jule::Ptr<_1bc9c8c07_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c8de4_BackendEmitExprModel>>()) {
			_case_begin_1acb802a8:;
			{
				_1aa324653_backend_emit(_self_, _101829_m.operator jule::Ptr<_1bc9c8de4_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c90d1_FreeExprModel>>()) {
			_case_begin_1acb80330:;
			{
				_1aa3248c8_free(_self_, _101829_m.operator jule::Ptr<_1bc9c90d1_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be490557_MutSlicingExprModel>>()) {
			_case_begin_1acb803a7:;
			{
				_1aa324b4d_mut_slicing(_self_, _101829_m.operator jule::Ptr<_1be490557_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4908ed_StrInsertBeginExprModel>>()) {
			_case_begin_1acb8042e:;
			{
				_1aa324dc3_str_insert_begin(_self_, _101829_m.operator jule::Ptr<_1be4908ed_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1acb7d141:;
			{
				_1aa37234e_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1acb7d064:;
	};
}



inline void _1aa3253bd_expr(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Any _111728_e) {
	_1aa325148_model(_self_, jule::Any(_111728_e));
}



inline void _1aa325643_val(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be3aa362_Value> _112127_v) {
	if (_1be3a9b9c_is_const(_112127_v.get()._field_data.ptr())) {
		_1aa31b1e9_constant(_self_, _112127_v.get()._field_data.get()._field_constant,((_112127_v.get()._field_data.get()._field_kind != nullptr) && _1be3db0b8_is_f32(_1be3d6679_prim(_112127_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1aa3253bd_expr(_self_, jule::Any(_112127_v.get()._field_data.get()._field_model));
}



inline void _1aa3258b8_init_expr(jule::Ptr<_1aa319a00_ExprCoder> _self_, jule::Ptr<_1be3d45ab_TypeKind> _112933_t) {
	if ((_1be3d6b52_ptr(_112933_t.ptr()) != nullptr)) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1bc9dceb3_Enum> _113417_enm = _1be3d6db6_enm(_112933_t.ptr());;
	if ((_113417_enm != nullptr)) {
		_1aa325643_val(_self_, _113417_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, static__1aa39995e_kind(_112933_t));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa319a00_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1aa327e2b_clone_func_decl(jule::Ptr<_1d7073276_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1aa3980ab_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1aa3281c3_clone_func_def(jule::Ptr<_1d7073276_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1aa3980ab_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa327b73_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa3290a3_TestCoder> static__1aa329526_new(jule::Ptr<_1aa38e03b_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1aa3290a3_TestCoder>(_1aa3290a3_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1be272d40_ImportInfo> _1aa32978a_find_testing_package(jule::Ptr<_1aa3290a3_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acba1197:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1acba1197:;
			++it;
			goto _iter_begin_1acba1197;
		}
		_iter_end_1acba1197:;
	};
	return nullptr;
}



inline void _1aa329a10_append_test(jule::Ptr<_1aa3290a3_TestCoder> _self_, jule::Ptr<_1bc9c9c4c_FnIns> _4335_f) {
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa32a1c5_call_tm_reset(_self_);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1aa37234e_write(_self_.get()._field_oc, _1aa3265bc_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c639_func_ins(_4335_f));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1aa329c85_append_package_tests(jule::Ptr<_1aa3290a3_TestCoder> _self_, jule::Ptr<_1be275c99_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acba7775:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1acba8116:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _6225_f = *it;
						{
							if (_1aa39c654_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1aa329a10_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1acba8116:;
						++it;
						goto _iter_begin_1acba8116;
					}
					_iter_end_1acba8116:;
				};
			}
			_iter_next_1acba7775:;
			++it;
			goto _iter_begin_1acba7775;
		}
		_iter_end_1acba7775:;
	};
}



inline jule::Bool _1aa329ee9_ready_testing_package(jule::Ptr<_1aa3290a3_TestCoder> _self_) {
	jule::Ptr<_1be272d40_ImportInfo> _7117_p = _1aa32978a_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1be274281_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1d7083770_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1d7083770_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1d7083770_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1aa32a1c5_call_tm_reset(jule::Ptr<_1aa3290a3_TestCoder> _self_) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c392_func(_self_.get()._field_tm_reset));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1aa32a3a1_call_tm_failed(jule::Ptr<_1aa3290a3_TestCoder> _self_) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c392_func(_self_.get()._field_tm_failed));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1aa32a57c_call_tm_skipped(jule::Ptr<_1aa3290a3_TestCoder> _self_) {
	_1aa37234e_write(_self_.get()._field_oc, static__1aa32c392_func(_self_.get()._field_tm_skipped));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1aa32a758_serialize(jule::Ptr<_1aa3290a3_TestCoder> _self_) {
	_1aa39335e_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1aa393183_end(_self_.get()._field_oc);
	});;
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	if ((!(_1aa329ee9_ready_testing_package(_self_)))) {
		_1aa37234e_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1aa373ad1_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1aa37234e_write(_self_.get()._field_oc, static__1aa3961b9_as_sptr(static__1aa398353_structure_ins(_self_.get()._field_t)));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1aa37234e_write(_self_.get()._field_oc, static__1aa398353_structure_ins(_self_.get()._field_t));
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1aa372ae1_add_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1aa32a3a1_call_tm_failed(_self_);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1aa32a57c_call_tm_skipped(_self_);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1aa329c85_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1aa373ad1_done_indent(_self_.get()._field_oc);
	_1aa37432e_indent(_self_.get()._field_oc);
	_1aa37234e_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3290a3_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1aa32bc10_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1aa32c0ea_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1be128b19_itoa(_5424_row);
	_5517_obj+=_1be128b19_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1aa32c392_func(jule::Ptr<_1bc9c9873_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1c00b183c:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1c00c76ee:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1d70615d8_is_method(_6521_f.ptr())) {
			_case_begin_1c00c7cc6:;
			{
				jule::Str _7221_obj = static__1aa32bc10_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1ab7e356b:;
			{
				return static__1aa32bc10_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1ab7e34b1:;
	};
}



inline jule::Str static__1aa32c639_func_ins(jule::Ptr<_1bc9c9c4c_FnIns>& _8425_f) {
	if (_1d707b559_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1aa32c392_func(_8425_f.get()._field_decl);
	};
	return static__1aa32bc10_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__1aa32c8d1_trait_decl(jule::Ptr<_1bd929d66_Trait> _9526_t) {
	if (_1bca57604_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1aa32bc10_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__1aa32cb78_param(jule::Ptr<_1bc9c9686_Param>& _10322_p) {
	if ((_20201ee1c_is_anon_ident(_10322_p.get()._field_ident) || _20201eb75_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1d708990d_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1aa32c0ea_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1aa32c0ea_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1aa32ce20_structure(jule::Ptr<_1d7073276_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1aa39c654_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1aa32bc10_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1aa32d1b7_structure_ins(jule::Ptr<_1d70ab9c9_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1aa32ce20_structure(_12830_s.get()._field_decl);
	};
	return static__1aa32bc10_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__1aa32d45e_field(jule::Ptr<_1d7080926_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1aa32d706_var(jule::Ptr<_1be36365b_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1a883774a:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1a885679c:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1a8830d3c:;
			{
				if ((_1be3d68dd_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1a8830da3:;
			{
				return static__1aa32c0ea_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1a8811e83:;
			{
				return static__1aa32bc10_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1a880673b:;
	};
}



inline jule::Str static__1aa32d99d_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1aa32dc45_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1aa32dedc_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1aa32e284_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1aa32e52b_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1aa32e7c3_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa32b704_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa38db62_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa38dd4e_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa394d77_to_str(_1aa394aad_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1aa395185_equals(jule::Ptr<_1aa394aad_CustomType> _self_, jule::Ptr<_1be3d45ab_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa394aad_CustomType _Src) {
	_Stream << _1aa394d77_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1aa3958d3_to_type(jule::Str _6027_id) {
	if ((_6027_id != jule::Str("uintptr", 7))) {
		_6027_id=_1be24ab81_real_kind_of(_6027_id);
	};
	if (((97LL <= _6027_id[0LL]) && (_6027_id[0LL] <= 122LLU))) {
		_6027_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6027_id);
}



inline jule::Str static__1aa395b7a_prim(jule::Ptr<_1be3d9083_Prim> _7120_p) {
	return static__1aa3958d3_to_type(_1be3d93e6_to_str(_7120_p.ptr()));
}



inline jule::Str static__1aa395e22_tuple(jule::Ptr<_1be3dd9e4_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1acd2a123:;
		if (it != expr.end()) {
			jule::Ptr<_1be3d45ab_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1aa39995e_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1acd2a123:;
			++it;
			goto _iter_begin_1acd2a123;
		}
		_iter_end_1acd2a123:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1aa3961b9_as_sptr(jule::Str _8823_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8823_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1aa396461_as_ptr(jule::Str _9622_elem) {
	return (_9622_elem + jule::Str("*", 1));
}



inline jule::Str static__1aa396708_sptr(jule::Ptr<_1be3dc592_Sptr> _10124_sptr) {
	return static__1aa3961b9_as_sptr(static__1aa39995e_kind(_10124_sptr.get()._field_elem));
}



inline jule::Str static__1aa3969a0_ptr(jule::Ptr<_1be3e0b06_Ptr> _10623_p) {
	;
	if (_1be3e15c9_is_unsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1aa39995e_kind(_10623_p.get()._field_elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1aa396c47_enum_decl(jule::Ptr<_1bc9dceb3_Enum> _11729_e) {
	return static__1aa39995e_kind(_11729_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1aa396ede_type_enum_decl(jule::Ptr<_1bd9c99a4_TypeEnum> _12234_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1aa397286_as_slice(jule::Ptr<_1be3d45ab_TypeKind> _12628_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1aa39995e_kind(_12628_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1aa39752d_slice(jule::Ptr<_1be3dceee_Slc> _13425_s) {
	return static__1aa397286_as_slice(_13425_s.get()._field_elem);
}



inline jule::Str static__1aa3977c5_map(jule::Ptr<_1be3de5a5_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1aa39995e_kind(_13923_m.get()._field_key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1aa39995e_kind(_13923_m.get()._field_val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1aa397a6c_trait_ident(jule::Str _14827_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14827_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1aa397d14_trait_decl(jule::Ptr<_1bd929d66_Trait> _15626_t) {
	return static__1aa397a6c_trait_ident(static__1aa32c8d1_trait_decl(_15626_t));
}



inline jule::Str static__1aa3980ab_structure(jule::Ptr<_1d7073276_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_cpp_linked && (!(_1aa39c654_has_directive(_16125_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1aa32ce20_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1aa398353_structure_ins(jule::Ptr<_1d70ab9c9_StructIns> _17133_s) {
	if (_17133_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17321_ident = static__1aa32d1b7_structure_ins(_17133_s);;
		if ((_17133_s.get()._field_generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17133_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1acd35c00:;
				if (it != expr.end()) {
					jule::Ptr<_1be3d45ab_TypeKind> _17629_g = *it;
					{
						_17321_ident+=static__1aa39995e_kind(_17629_g);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1acd35c00:;
					++it;
					goto _iter_begin_1acd35c00;
				}
				_iter_end_1acd35c00:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1d705bd64_Directive> _18317_d = _1aa39c2be_find_directive(_17133_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1aa393d98_concat_all_parts(_18317_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1aa32d1b7_structure_ins(_17133_s);
}



inline jule::Str static__1aa3985ea_array(jule::Ptr<_1be3e0199_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1aa39995e_kind(_19325_a.get()._field_elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1be128b19_itoa(_19325_a.get()._field_n);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1aa398b39_param_ins(jule::Ptr<_1bc9c9a60_ParamIns>& _21930_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21930_p.get()._field_decl.get()._field_variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1aa39995e_kind(_21930_p.get()._field_kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1aa39995e_kind(_21930_p.get()._field_kind);
	};
	if (_21930_p.get()._field_decl.get()._field_reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1aa399178_func_ins_result(jule::Ptr<_1bc9c9c4c_FnIns>& _24936_f) {
	if (_1d70884de_is_void(_24936_f.get()._field_decl.ptr())) {
		if (_24936_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24936_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1aa39995e_kind(_24936_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1aa39995e_kind(_24936_f.get()._field_result);
}



inline jule::Str static__1aa399420_anon_func(jule::Ptr<_1bc9c9c4c_FnIns> _26229_f) {
	jule::Str _26317_decl = static__1aa399178_func_ins_result(_26229_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26229_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26229_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1acd42c0c:;
			if (it != expr.end()) {
				jule::Ptr<_1bc9c9a60_ParamIns> _26625_param = *it;
				{
					if (_1d708990d_is_self(_26625_param.get()._field_decl.ptr())) {
						goto _iter_next_1acd42c0c;
					};
					_26317_decl+=static__1aa398b39_param_ins(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1acd42c0c:;
				++it;
				goto _iter_begin_1acd42c0c;
			}
			_iter_end_1acd42c0c:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1aa3996b7_func(jule::Ptr<_1bc9c9c4c_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1aa399420_anon_func(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1aa39995e_kind(jule::Ptr<_1be3d45ab_TypeKind> _29024_k) {
	{
		
		if (_1be3d5227_cpp_linked(_29024_k.ptr())) {
			_case_begin_1acd4587a:;
			{
				return _29024_k.get()._field_cpp_ident;
			}
		}
		else if ((_1be3d6679_prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45a12:;
			{
				return static__1aa395b7a_prim(_1be3d6679_prim(_29024_k.ptr()));
			}
		}
		else if ((_1be3d8318_tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45a78:;
			{
				return static__1aa395e22_tuple(_1be3d8318_tup(_29024_k.ptr()));
			}
		}
		else if ((_1be3d68dd_sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45b00:;
			{
				return static__1aa396708_sptr(_1be3d68dd_sptr(_29024_k.ptr()));
			}
		}
		else if ((_1be3d6b52_ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45b77:;
			{
				return static__1aa3969a0_ptr(_1be3d6b52_ptr(_29024_k.ptr()));
			}
		}
		else if ((_1be3d6db6_enm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45bee:;
			{
				return static__1aa396c47_enum_decl(_1be3d6db6_enm(_29024_k.ptr()));
			}
		}
		else if ((_1be3d712a_tenm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45c76:;
			{
				return static__1aa396ede_type_enum_decl(_1be3d712a_tenm(_29024_k.ptr()));
			}
		}
		else if ((_1be3d7603_slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45ced:;
			{
				return static__1aa39752d_slice(_1be3d7603_slc(_29024_k.ptr()));
			}
		}
		else if ((_1be3d80a4_map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45d75:;
			{
				return static__1aa3977c5_map(_1be3d80a4_map(_29024_k.ptr()));
			}
		}
		else if ((_1be3d7d40_trt(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45dec:;
			{
				return static__1aa397d14_trait_decl(_1be3d7d40_trt(_29024_k.ptr()));
			}
		}
		else if ((_1be3d7acb_strct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45e74:;
			{
				return static__1aa398353_structure_ins(_1be3d7acb_strct(_29024_k.ptr()));
			}
		}
		else if ((_1be3d738e_arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd45eeb:;
			{
				return static__1aa3985ea_array(_1be3d738e_arr(_29024_k.ptr()));
			}
		}
		else if ((_1be3d7867_fnc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1acd46073:;
			{
				return static__1aa3996b7_func(_1be3d7867_fnc(_29024_k.ptr()));
			}
		}
		_match_end_1acd4578c:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa394aad_CustomType>>()) {
			_case_begin_1acd4612d:;
			{
				return _29024_k.get()._field_kind.operator jule::Ptr<_1aa394aad_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1acd4da4d:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1acd496a3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3953a5_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acd4e8d9_name(_1acd50049_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acd50434_what(_1acd50049_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1acd50566_reset(_1acd50049_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acd50698_short(_1acd50049_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd50049_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd53701_name(_1acd53ba7_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acd53e71_what(_1acd53ba7_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1acd540a3_reset(_1acd53ba7_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acd541d5_short(_1acd53ba7_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd53ba7_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd57183_name(_1acd57639_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acd57903_what(_1acd57639_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1acd57a35_reset(_1acd57639_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acd57b67_short(_1acd57639_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd57639_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd5ab59_name(_1acd5b110_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acd5b3c9_what(_1acd5b110_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1acd5b50b_reset(_1acd5b110_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acd5b63d_short(_1acd5b110_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd5b110_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd5e5db_name(_1acd5ea92_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acd5ed5b_what(_1acd5ea92_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1acd5ee8d_reset(_1acd5ea92_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acd600c0_short(_1acd5ea92_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd5ea92_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa3e4d83_FlagSet> static__1aa3e516e_new(void) {
	return jule::new_ptr<_1aa3e4d83_FlagSet>(_1aa3e4d83_FlagSet{._field__flags=jule::Slice<jule::Trait<_1aa3ad665_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1aa3ad665_CommonFlag> _1aa3e5603_find_flag(_1aa3e4d83_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1acd6a6d5:;
		if (it != expr.end()) {
			jule::Trait<_1aa3ad665_CommonFlag> _7221_flag = *it;
			{
				if ((_1aa3ad665_CommonFlag_mptr_data[(_7221_flag).type_offset]._1aa3ad236_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1acd6a6d5:;
			++it;
			goto _iter_begin_1acd6a6d5;
		}
		_iter_end_1acd6a6d5:;
	};
	return nullptr;
}



inline jule::Trait<_1aa3ad665_CommonFlag> _1aa3e5911_find_flag_short(_1aa3e4d83_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1acd6abad:;
		if (it != expr.end()) {
			jule::Trait<_1aa3ad665_CommonFlag> _8221_flag = *it;
			{
				if ((_1aa3ad665_CommonFlag_mptr_data[(_8221_flag).type_offset]._1aa3ad368_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1acd6abad:;
			++it;
			goto _iter_begin_1acd6abad;
		}
		_iter_end_1acd6abad:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1aa3ad665_CommonFlag>> _1aa3e5b75_flags(_1aa3e4d83_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aa3e5e83_parse(_1aa3e4d83_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1aa3e755b_ArgParser _11617_ap = _1aa3e755b_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1aa3e8947_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1aa3e615e_reset(_1aa3e4d83_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1acd6e0e0:;
		if (it != expr.end()) {
			jule::Trait<_1aa3ad665_CommonFlag> _12616_f = *it;
			{
				_1aa3ad665_CommonFlag_mptr_data[(_12616_f).type_offset]._1aa3e3447_reset(_12616_f);
			}
			_iter_next_1acd6e0e0:;
			++it;
			goto _iter_begin_1acd6e0e0;
		}
		_iter_end_1acd6e0e0:;
	};
}



inline jule::Ptr<_1acd5ea92_Flag> _1acde1ddd_add_flag_common(_1aa3e4d83_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1acde37e6:;
			{
				goto _match_end_1acde376e;
			}
		}
		_match_end_1acde376e:;
	};
	if ((_1aa3e5603_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1aa3e5911_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1acd5ea92_Flag> _14817_flag = jule::new_ptr<_1acd5ea92_Flag>(_1acd5ea92_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1aa3ad665_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1acd5b110_Flag> _1acdeb700_add_flag_common(_1aa3e4d83_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1acded0b4:;
			{
				goto _match_end_1acded05e;
			}
		}
		_match_end_1acded05e:;
	};
	if ((_1aa3e5603_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1aa3e5911_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1acd5b110_Flag> _14817_flag = jule::new_ptr<_1acd5b110_Flag>(_1acd5b110_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1aa3ad665_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1acdde57d_add_var(_1aa3e4d83_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1acd5ea92_Flag> _17617_flag = _1acde1ddd_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1acde8d6d_add_var(_1aa3e4d83_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1acd5b110_Flag> _17617_flag = _1acdeb700_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3e4d83_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1a8900659_IR>,jule::Slice<_201be0d52_Log>> static__1a8a5942d_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1a8add45c_JuleImporter> _2917_importer = static__1d698d576_new(_1a8b38d59_build_compile_info());;
	jule::Slice<jule::Ptr<_1d705abdc_Ast>> _3018_files;;
	jule::Slice<_201be0d52_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1a8a3a233_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1be275c99_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1be401254_analyze_package(_3018_files,jule::Trait<_1be270546_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1a8900659_IR> _4517_ir = jule::new_ptr<_1a8900659_IR>(_1a8900659_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1d69923c1_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1a8b26374_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1a8a63eb5_append_structs(_1a8900659_IR* _self_, jule::Ptr<_1be275c99_Package>& _5734_p, jule::Slice<jule::Ptr<_1d7073276_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac741276:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1ac741b17:;
					if (it != expr.end()) {
						jule::Ptr<_1d7073276_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1ac741b17:;
						++it;
						goto _iter_begin_1ac741b17;
					}
					_iter_end_1ac741b17:;
				};
			}
			_iter_next_1ac741276:;
			++it;
			goto _iter_begin_1ac741276;
		}
		_iter_end_1ac741276:;
	};
}



inline jule::Slice<jule::Ptr<_1d7073276_Struct>> _1a8a79b02_get_all_structures(_1a8900659_IR* _self_) {
	jule::Slice<jule::Ptr<_1d7073276_Struct>> _7017_buffer = nullptr;;
	_1a8a63eb5_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1ac742387:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1a8a63eb5_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1ac742387:;
			++it;
			goto _iter_begin_1ac742387;
		}
		_iter_end_1ac742387:;
	};
	return _7017_buffer;
}



inline void _1a8a7a916_append_globals(_1a8900659_IR* _self_, jule::Ptr<_1be275c99_Package>& _8034_p, jule::Slice<jule::Ptr<_1be36365b_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac74460e:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1ac744ea0:;
					if (it != expr.end()) {
						jule::Ptr<_1be36365b_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1ac744ea0:;
						++it;
						goto _iter_begin_1ac744ea0;
					}
					_iter_end_1ac744ea0:;
				};
			}
			_iter_next_1ac74460e:;
			++it;
			goto _iter_begin_1ac74460e;
		}
		_iter_end_1ac74460e:;
	};
}



inline jule::Slice<jule::Ptr<_1be36365b_Var>> _1a8a902bb_get_all_globals(_1a8900659_IR* _self_) {
	jule::Slice<jule::Ptr<_1be36365b_Var>> _9317_buffer = nullptr;;
	_1a8a7a916_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1ac7468ca:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1a8a7a916_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1ac7468ca:;
			++it;
			goto _iter_begin_1ac7468ca;
		}
		_iter_end_1ac7468ca:;
	};
	return _9317_buffer;
}



inline void _1a8aa2a92_order(_1a8900659_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1a8a79b02_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1a8a902bb_get_all_globals(&(*_self_));
	static__1a8b9d2b9_order_structures((*_self_)._field_ordered._field_structs);
	static__1a8e817ab_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8900659_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d707572e_to_str(_1d70ab9c9_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab8085d6:;
			if (it != expr.end()) {
				jule::Ptr<_1be3d45ab_TypeKind> &_24720_g = *it;
				{
					_24317_kind+=_1be3d4963_to_str(_24720_g.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1ab8085d6:;
				++it;
				goto _iter_begin_1ab8085d6;
			}
			_iter_end_1ab8085d6:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1d7075de4_equals(jule::Ptr<_1d70ab9c9_StructIns> _self_, jule::Ptr<_1be3d45ab_TypeKind> _25826_other) {
	jule::Ptr<_1d70ab9c9_StructIns> _25913_s = _1be3d7acb_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1be3d4c71_equals(_self_.get()._field_generics[_27217_i], _25913_s.get()._field_generics[_27217_i])))) {
				return false;
			};
		}
	_iter_next_1ab80bc7c:;
	}
	_iter_end_1ab80bc7c:;;
	return true;
}



inline jule::Bool _1d7082609_same(_1d70ab9c9_StructIns* _self_, jule::Ptr<_1d70ab9c9_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab80e0d1:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_1be3d45ab_TypeKind> &_29116_g = *it;
			{
				if ((!(_1be3d4c71_equals(_29116_g, _28623_s.get()._field_generics[_29113_i])))) {
					return false;
				};
			}
			_iter_next_1ab80e0d1:;
			++it;
			_29113_i++;
			goto _iter_begin_1ab80e0d1;
		}
		_iter_end_1ab80e0d1:;
	};
	return true;
}



inline jule::Ptr<_1bc9c9873_Fn> _1d7083770_find_method(_1d70ab9c9_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab810973:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1ab810973:;
			++it;
			goto _iter_begin_1ab810973;
		}
		_iter_end_1ab810973:;
	};
	return nullptr;
}



inline jule::Ptr<_1d708808d_FieldIns> _1d7085ac4_find_field(_1d70ab9c9_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab811be9:;
		if (it != expr.end()) {
			jule::Ptr<_1d708808d_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1ab811be9:;
			++it;
			goto _iter_begin_1ab811be9;
		}
		_iter_end_1ab811be9:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d70ab9c9_StructIns _Src) {
	_Stream << _1d707572e_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a9105e3b_ObjectDeadCode> static__1a9106337_new(jule::Ptr<_1a8900659_IR>& _3424_ir) {
	return jule::new_ptr<_1a9105e3b_ObjectDeadCode>(_1a9105e3b_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1ac781b8a_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1bd929d66_Trait>& _4031_t) {
	jule::Slice<jule::Ptr<_1bd929d66_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac783bd1:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1ac7838e5:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ac784bb0:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1ac784bb0:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac784bb0;
		}
		_iter_end_1ac784bb0:;
	};
	return false;
}

inline jule::Bool _1ac7878a5_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1bc9c9c4c_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac7892e1:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1ac789236:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ac78a0b1:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1ac78a0b1:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac78a0b1;
		}
		_iter_end_1ac78a0b1:;
	};
	return false;
}

inline jule::Bool _1ac78de61_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1d70ab9c9_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac793482:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1ac79320c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ac793e00:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1ac793e00:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac793e00;
		}
		_iter_end_1ac793e00:;
	};
	return false;
}

inline jule::Bool _1ac795d47_is_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1be36365b_Var>& _4031_t) {
	jule::Slice<jule::Ptr<_1be36365b_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac797b7e:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1ac797a5d:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ac797b18:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1ac797b18:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac797b18;
		}
		_iter_end_1ac797b18:;
	};
	return false;
}



inline void _1ac784c37_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1bd929d66_Trait> _6036_t) {
	{
		
{
			_case_begin_1ac785e9c:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6036_t);;
			}
		}
		_match_end_1ac785b4a:;
	};
}

inline void _1ac78b0e5_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1bc9c9c4c_FnIns> _6036_t) {
	{
		
{
			_case_begin_1ac78bd2c:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6036_t);;
			}
		}
		_match_end_1ac78baa7:;
	};
}

inline void _1ac78e329_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1d70ab9c9_StructIns> _6036_t) {
	{
		
{
			_case_begin_1ac790c43:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6036_t);;
			}
		}
		_match_end_1ac790957:;
	};
}

inline void _1ac7996ec_push_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1be36365b_Var> _6036_t) {
	{
		
{
			_case_begin_1ac79a28b:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6036_t);;
			}
		}
		_match_end_1ac79a1ae:;
	};
}



inline void _1a9106b40_set_references_as_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1bc9cb402_ReferenceStack>& _7347_rs) {
	if ((_7347_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1bc9cba73_len(_7347_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1bc9cbd81_at(_7347_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1bd929d66_Trait>>()) {
					_case_begin_1ac780b78:;
					{
						jule::Ptr<_1bd929d66_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1bd929d66_Trait>();;
						if (_1ac781b8a_is_live(_self_, _8225_t)) {
							goto _iter_next_1ac77ee52;
						};
						_1ac784c37_push_live(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1ac786dc1:;
							if (it != expr.end()) {
								jule::Ptr<_1bc9c9873_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1ac786a3b:;
										if (it != expr.end()) {
											jule::Ptr<_1bc9c9c4c_FnIns> _8833_mins = *it;
											{
												if (_1ac7878a5_is_live(_self_, _8833_mins)) {
													goto _iter_next_1ac786a3b;
												};
												_1ac78b0e5_push_live(_self_, _8833_mins);
												_1a9106b40_set_references_as_live(_self_, _8833_mins.get()._field_refers);
											}
											_iter_next_1ac786a3b:;
											++it;
											goto _iter_begin_1ac786a3b;
										}
										_iter_end_1ac786a3b:;
									};
								}
								_iter_next_1ac786dc1:;
								++it;
								goto _iter_begin_1ac786dc1;
							}
							_iter_end_1ac786dc1:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1bc9c9c4c_FnIns>>()) {
					_case_begin_1ac780c00:;
					{
						jule::Ptr<_1bc9c9c4c_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1bc9c9c4c_FnIns>();;
						if (_1ac7878a5_is_live(_self_, _9725_f)) {
							goto _match_end_1ac780aac;
						};
						if (((_9725_f.get()._field_owner != nullptr) && (!(_9725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1ac78de61_is_live(_self_, _9725_f.get()._field_owner)))) {
								_1ac78e329_push_live(_self_, _9725_f.get()._field_owner);
								_1a9106b40_set_references_as_live(_self_, _9725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1ac78b0e5_push_live(_self_, _9725_f);
						_1a9106b40_set_references_as_live(_self_, _9725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
					_case_begin_1ac780d21:;
					{
						jule::Ptr<_1be36365b_Var> _11025_v = _7921_ref.operator jule::Ptr<_1be36365b_Var>();;
						if (_1ac795d47_is_live(_self_, _11025_v)) {
							goto _match_end_1ac780aac;
						};
						_1ac7996ec_push_live(_self_, _11025_v);
						_1a9106b40_set_references_as_live(_self_, _11025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1d70ab9c9_StructIns>>()) {
					_case_begin_1ac780d87:;
					{
						jule::Ptr<_1d70ab9c9_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1d70ab9c9_StructIns>();;
						if (_1ac78de61_is_live(_self_, _11725_s)) {
							goto _match_end_1ac780aac;
						};
						_1ac78e329_push_live(_self_, _11725_s);
						_1a9106b40_set_references_as_live(_self_, _11725_s.get()._field_refers);
						{
							auto &expr = _11725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1ac79d28e:;
							if (it != expr.end()) {
								jule::Ptr<_1bc9c9873_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1ac799a60:;
										if (it != expr.end()) {
											jule::Ptr<_1bc9c9c4c_FnIns> _12433_mins = *it;
											{
												if (_1ac7878a5_is_live(_self_, _12433_mins)) {
													goto _iter_next_1ac799a60;
												};
												_1ac78b0e5_push_live(_self_, _12433_mins);
												_1a9106b40_set_references_as_live(_self_, _12433_mins.get()._field_refers);
											}
											_iter_next_1ac799a60:;
											++it;
											goto _iter_begin_1ac799a60;
										}
										_iter_end_1ac799a60:;
									};
								}
								_iter_next_1ac79d28e:;
								++it;
								goto _iter_begin_1ac79d28e;
							}
							_iter_end_1ac79d28e:;
						};
					}
				}
				_match_end_1ac780aac:;
			};
		}
	_iter_next_1ac77ee52:;
	}
	_iter_end_1ac77ee52:;;
}



inline void _1a9106db5_inits(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1be275c99_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac78031a:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ac7a18d0:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1bc9c9c4c_FnIns> _14029_ins = _13825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1a9106b40_set_references_as_live(_self_, _14029_ins.get()._field_refers);
							};
						}
						_iter_next_1ac7a18d0:;
						++it;
						goto _iter_begin_1ac7a18d0;
					}
					_iter_end_1ac7a18d0:;
				};
			}
			_iter_next_1ac78031a:;
			++it;
			goto _iter_begin_1ac78031a;
		}
		_iter_end_1ac78031a:;
	};
}



inline void _1a910713a_collect_live_package(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1be275c99_Package>& _14845_pkg) {
	_1a9106db5_inits(_self_, _14845_pkg);
	if (_1eec82324_TEST) {
		{
			auto &expr = _14845_pkg.get()._field_files;
			auto it = expr.begin();
			_iter_begin_1ac7a400e:;
			if (it != expr.end()) {
				jule::Ptr<_1be3a4339_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_funcs;
						auto it = expr.begin();
						_iter_begin_1ac7a488e:;
						if (it != expr.end()) {
							jule::Ptr<_1bc9c9873_Fn> _15529_f = *it;
							{
								if (_1a910914d_has_directive(_15529_f.get()._field_directives,jule::Str("test", 4))) {
									jule::Ptr<_1bc9c9c4c_FnIns> _15733_ins = _15529_f.get()._field_instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1a9106b40_set_references_as_live(_self_, _15733_ins.get()._field_refers);
								};
							}
							_iter_next_1ac7a488e:;
							++it;
							goto _iter_begin_1ac7a488e;
						}
						_iter_end_1ac7a488e:;
					};
				}
				_iter_next_1ac7a400e:;
				++it;
				goto _iter_begin_1ac7a400e;
			}
			_iter_end_1ac7a400e:;
		};
	};
}



inline void _1a9107316_collect_live(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac7a4d56:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_cpp_linked))) {
					_1a910713a_collect_live_package(_self_, _16721_used.get()._field_package);
				};
			}
			_iter_next_1ac7a4d56:;
			++it;
			goto _iter_begin_1ac7a4d56;
		}
		_iter_end_1ac7a4d56:;
	};
	_1a910713a_collect_live_package(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1bc9c9873_Fn> _17517_main = _1be27754d_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1bc9c9c4c_FnIns> _17617_ins = _17517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1a9106b40_set_references_as_live(_self_, _17617_ins.get()._field_refers);
}



inline void _1a910758b_remove_dead_globals(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1be36365b_Var>>& _18144_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18144_vars.len())) {
		{
			jule::Ptr<_1be36365b_Var> _18417_v = _18144_vars[_18217_i];;
			if (_1ac795d47_is_live(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1ac7a9cb2;
			};
			_18144_vars=jule::append(_18144_vars.slice(0LL,_18217_i),_18144_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1ac7a9cb2:;
	}
	_iter_end_1ac7a9cb2:;;
}



inline void _1a9107811_remove_dead_fns(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc9c9873_Fn>>& _19340_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19340_funcs.len())) {
		{
			jule::Ptr<_1bc9c9873_Fn> _19621_f = _19340_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1bc9c9c4c_FnIns> _19921_ins = _19621_f.get()._field_instances[_19721_j];;
					if (_1ac7878a5_is_live(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1ac7ad546;
					};
					_19621_f.get()._field_instances=jule::append(_19621_f.get()._field_instances.slice(0LL,_19721_j),_19621_f.get()._field_instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1ac7ad546:;
			}
			_iter_end_1ac7ad546:;;
			if ((_19621_f.get()._field_instances.len() == 0LL)) {
				_19340_funcs=jule::append(_19340_funcs.slice(0LL,_19417_i),_19340_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1ac7ac3e1;
			};
			(_19417_i)++;
		}
	_iter_next_1ac7ac3e1:;
	}
	_iter_end_1ac7ac3e1:;;
}



inline void _1a9107a86_remove_dead_structs(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d7073276_Struct>>& _21444_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21444_structs.len())) {
		{
			jule::Ptr<_1d7073276_Struct> _21721_s = _21444_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1d70ab9c9_StructIns> _22025_ins = _21721_s.get()._field_instances[_21821_j];;
					_1a9107811_remove_dead_fns(_self_, _22025_ins.get()._field_methods);
					if (((_22025_ins.get()._field_methods.len() != 0LL) || _1ac78de61_is_live(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1ac7b2a12;
					};
					_21721_s.get()._field_instances=jule::append(_21721_s.get()._field_instances.slice(0LL,_21821_j),_21721_s.get()._field_instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1ac7b2a12:;
			}
			_iter_end_1ac7b2a12:;;
			if ((_21721_s.get()._field_instances.len() == 0LL)) {
				_21444_structs=jule::append(_21444_structs.slice(0LL,_21517_i),_21444_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1ac7b1857;
			};
			(_21517_i)++;
		}
	_iter_next_1ac7b1857:;
	}
	_iter_end_1ac7b1857:;;
}



inline void _1a9107d0b_remove_dead_traits(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bd929d66_Trait>>& _23643_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23643_traits.len())) {
		{
			jule::Ptr<_1bd929d66_Trait> _23921_t = _23643_traits[_23717_i];;
			if ((!(_1ac781b8a_is_live(_self_, _23921_t)))) {
				_23643_traits=jule::append(_23643_traits.slice(0LL,_23717_i),_23643_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1ac7b67b3;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_implemented.len())) {
				{
					jule::Ptr<_1d7073276_Struct> _24621_s = _23921_t.get()._field_implemented[_24421_j];;
					if ((_24621_s.get()._field_instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1ac7b7451;
					};
					_23921_t.get()._field_implemented=jule::append(_23921_t.get()._field_implemented.slice(0LL,_24421_j),_23921_t.get()._field_implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1ac7b7451:;
			}
			_iter_end_1ac7b7451:;;
			(_23717_i)++;
		}
	_iter_next_1ac7b67b3:;
	}
	_iter_end_1ac7b67b3:;;
}



inline void _1a9108081_remove_deads_file(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1be3a4339_SymbolTable>& _25742_file) {
	_1a9107811_remove_dead_fns(_self_, _25742_file.get()._field_funcs);
	_1a9107a86_remove_dead_structs(_self_, _25742_file.get()._field_structs);
	_1a9107d0b_remove_dead_traits(_self_, _25742_file.get()._field_traits);
	_1a910758b_remove_dead_globals(_self_, _25742_file.get()._field_vars);
}



inline void _1a9108306_remove_deads_package(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_, jule::Ptr<_1be275c99_Package>& _26445_pkg) {
	{
		auto &expr = _26445_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac7bc478:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _26521_file = *it;
			{
				_1a9108081_remove_deads_file(_self_, _26521_file);
			}
			_iter_next_1ac7bc478:;
			++it;
			goto _iter_begin_1ac7bc478;
		}
		_iter_end_1ac7bc478:;
	};
}



inline void _1a91084d2_remove_deads(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac7bd446:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_cpp_linked))) {
					_1a9108306_remove_deads_package(_self_, _27121_used.get()._field_package);
				};
			}
			_iter_next_1ac7bd446:;
			++it;
			goto _iter_begin_1ac7bd446;
		}
		_iter_end_1ac7bd446:;
	};
	_1a9108306_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1a91086ad_elimanate(jule::Ptr<_1a9105e3b_ObjectDeadCode> _self_) {
	_1a9107316_collect_live(_self_);
	_1a91084d2_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9105e3b_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa38e03b_ObjectCoder> static__1aa37201e_new(jule::Ptr<_1a8900659_IR>& _7228_ir, _1aa38db62_SerializationInfo _7237_info) {
	jule::Ptr<_1aa38e03b_ObjectCoder> _7317_oc = jule::new_ptr<_1aa38e03b_ObjectCoder>(_1aa38e03b_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1aa319deb_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1aa3129b5_new(_7317_oc);
	return _7317_oc;
}



inline void _1aa37234e_write(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1aa372ae1_add_indent(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1aa373ad1_done_indent(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1aa37432e_indent(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1aa37575e_find_type_offset(_1aa38e03b_ObjectCoder* _self_, jule::Ptr<_1bd929d66_Trait> _10231_t, jule::Ptr<_1be3d45ab_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1d70ab9c9_StructIns> _10617_s = nullptr;;
	if ((_1be3d68dd_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1be3d68dd_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1be3d7acb_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1be3d7acb_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1a88b7da2:;
		if (it != expr.end()) {
			jule::Ptr<_1aa38dd4e_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1a88b7da2:;
			++it;
			goto _iter_begin_1a88b7da2;
		}
		_iter_end_1a88b7da2:;
	};
	return -1LL;
}



inline void _1aa357301_loc_info(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_20201c3d1_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_1eec82ce7_PRODUCTION) {
		{
			
			if (_201adbc1a_has_prefix(_12414_loc,_201c13726_PATH_STDLIB)) {
				_case_begin_1a88ba327:;
				{
					_1aa37234e_write(_self_, _1aa32629d_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_200cc16e7_dir(_201c13726_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_201adbc1a_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1a88b9ee7:;
				{
					_1aa37234e_write(_self_, _1aa32629d_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_200cc16e7_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1a88b9e81:;
				{
					_1aa37234e_write(_self_, _1aa32629d_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1a88b9da4:;
		};
	} else {
		_1aa37234e_write(_self_, _1aa32629d_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1aa37234e_write(_self_, jule::Str(":", 1));
	_1aa37234e_write(_self_, _1be128b19_itoa(_12329_t.get()._field_row));
	_1aa37234e_write(_self_, jule::Str(":", 1));
	_1aa37234e_write(_self_, _1be128b19_itoa(_12329_t.get()._field_column));
}



inline void _1aa354bb1_head(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa38883d_Time _15013_time = static__1aa388dd2_now();;
	_1aa38819a_AbsTime _15113_abs = _1aa38a521_abs(&_15013_time);;
	_1aa37234e_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1aa37234e_write(_self_, jule::Str("// JuleC version: ", 18));
	_1aa37234e_write(_self_, jule::Str("jule0.0.11 @master", 18));
	_1aa37234e_write(_self_, jule::Str("\n", 1));
	_1aa37234e_write(_self_, jule::Str("// Date: ", 9));
	_1aa37234e_write(_self_, _1be1288a5_fmt_uint(_15113_abs._field_day,10LL));
	_1aa37234e_write(_self_, jule::Str("/", 1));
	_1aa37234e_write(_self_, _1be1288a5_fmt_uint(_15113_abs._field_month,10LL));
	_1aa37234e_write(_self_, jule::Str("/", 1));
	_1aa37234e_write(_self_, _1be1288a5_fmt_uint(_15113_abs._field_year,10LL));
	_1aa37234e_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1aa37234e_write(_self_, _self_.get()._field_info._field_compiler);
	_1aa37234e_write(_self_, jule::Str(" ", 1));
	_1aa37234e_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	if (_1eec82ce7_PRODUCTION) {
		_1aa37234e_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1eec825bb_RC))) {
		_1aa37234e_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1eec829d9_SAFETY))) {
		_1aa37234e_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1aa37234e_write(_self_, jule::Str("\n\n#include \"", 12));
	_1aa37234e_write(_self_, _201c33ed8_PATH_API);
	_1aa37234e_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1aa37333e_links(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a88c84de:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1a88ca04b:;
						{
							goto _iter_next_1a88c84de;
						}
					}
					else if (_201bd4461_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1a88c93be:;
						{
							_1aa37234e_write(_self_, jule::Str("#include ", 9));
							_1aa37234e_write(_self_, _18316_used.get()._field_path);
							_1aa37234e_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1a88c9028:;
						{
							_1aa37234e_write(_self_, jule::Str("#include \"", 10));
							_1aa37234e_write(_self_, _18316_used.get()._field_path);
							_1aa37234e_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1a88c8e4b:;
				};
			}
			_iter_next_1a88c84de:;
			++it;
			goto _iter_begin_1a88c84de;
		}
		_iter_end_1a88c84de:;
	};
}



inline void _1aa360947_prepare_structures(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a88cab95:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1aa393b01_prepare_structure(_20021_s);
				};
			}
			_iter_next_1a88cab95:;
			++it;
			goto _iter_begin_1a88cab95;
		}
		_iter_end_1a88cab95:;
	};
}



inline void _1aa36185a_iter_packages(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a88cc26d:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1a88cc26d:;
			++it;
			goto _iter_begin_1a88cc26d;
		}
		_iter_end_1a88cc26d:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1aa362042_build_trait_map(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa36185a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>([=](jule::Ptr<_1be275c99_Package>& _21736_pkg) mutable -> void {
		_1aa39389d_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>([=](jule::Ptr<_1be3a4339_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1a88d1360:;
				if (it != expr.end()) {
					jule::Ptr<_1bd929d66_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1aa38dd4e_TraitHash>(_1aa38dd4e_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1a88d1360;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1a88d25c5:;
							if (it != expr.end()) {
								jule::Ptr<_1d7073276_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1a88d1e21:;
										if (it != expr.end()) {
											jule::Ptr<_1d70ab9c9_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1aa38dd4e_TraitHash>(_1aa38dd4e_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1a88d1e21:;
											++it;
											goto _iter_begin_1a88d1e21;
										}
										_iter_end_1a88d1e21:;
									};
								}
								_iter_next_1a88d25c5:;
								++it;
								goto _iter_begin_1a88d25c5;
							}
							_iter_end_1a88d25c5:;
						};
					}
					_iter_next_1a88d1360:;
					++it;
					goto _iter_begin_1a88d1360;
				}
				_iter_end_1a88d1360:;
			};
		}));
	}));
}



inline void _1aa362729_trait_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa36185a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>([=](jule::Ptr<_1be275c99_Package>& _24836_pkg) mutable -> void {
		_1aa39389d_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>([=](jule::Ptr<_1be3a4339_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1a88d6244:;
				if (it != expr.end()) {
					jule::Ptr<_1bd929d66_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1aa37432e_indent(_self_);
						_1aa37234e_write(_self_, jule::Str("struct ", 7));
						_1aa37234e_write(_self_, static__1aa32c8d1_trait_decl(_25029_t));
						_1aa37234e_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1a88d6244:;
					++it;
					goto _iter_begin_1a88d6244;
				}
				_iter_end_1a88d6244:;
			};
		}));
	}));
}



inline void _1aa35e77b_structure_plain_decl(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d7073276_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a88d5b39:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _26421_ins = *it;
			{
				_1aa37234e_write(_self_, jule::Str("struct ", 7));
				_1aa37234e_write(_self_, static__1aa32d1b7_structure_ins(_26421_ins));
				_1aa37234e_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a88d5b39:;
			++it;
			goto _iter_begin_1a88d5b39;
		}
		_iter_end_1a88d5b39:;
	};
}



inline void _1aa3584de_structure_plain_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a88d9c3c:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1aa35e77b_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1a88d9c3c:;
			++it;
			goto _iter_begin_1a88d9c3c;
		}
		_iter_end_1a88d9c3c:;
	};
}



inline void _1aa3603b4_field_decl(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d708808d_FieldIns>& _27935_f) {
	_1aa37234e_write(_self_, static__1aa39995e_kind(_27935_f.get()._field_kind));
	_1aa37234e_write(_self_, jule::Str(" ", 1));
	_1aa37234e_write(_self_, static__1aa32d45e_field(_27935_f.get()._field_decl));
	_1aa37234e_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1aa3258b8_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1aa3253bd_expr(_self_.get()._field_ec, jule::Any(_27935_f.get()._field_default.get()._field_model));
	};
	_1aa37234e_write(_self_, jule::Str(";", 1));
}



inline void _1aa3598a8_structure_destructor(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _29445_s) {
	;
	jule::Ptr<_1bc9c9873_Fn> _29613_dispose_method = _1d7083770_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1be364805_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1aa37234e_write(_self_, jule::Str("~", 1));
	_1aa37234e_write(_self_, static__1aa32d1b7_structure_ins(_29445_s));
	_1aa37234e_write(_self_, jule::Str("(void) { ", 9));
	_1aa37234e_write(_self_, static__1aa32c392_func(_29613_dispose_method));
	_1aa37234e_write(_self_, jule::Str("(this); }", 9));
}



inline void _1aa362e11_structure_derive_defs_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _30948_s) {
	if (_1d7072aa0_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, static__1aa327e2b_clone_func_decl(_30948_s.get()._field_decl));
		_1aa37234e_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1aa38e5d0_structure_operator_eq(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1d70ab9c9_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1aa38e844_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1aa37432e_indent(_self_);
	if (_1c00b04d9_INLINE) {
		_1aa37234e_write(_self_, jule::Str("inline ", 7));
	};
	_1aa37234e_write(_self_, jule::Str("bool operator==(", 16));
	_1aa37234e_write(_self_, _31742_ident);
	_1aa37234e_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1aa372ae1_add_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("\n", 1));
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("return ", 7));
		_1aa372ae1_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acc7a6b1:;
			if (it != expr.end()) {
				jule::Ptr<_1d708808d_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1d70ab9c9_StructIns> _34021_strct = _1be3d7acb_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1acc7a6b1;
					};
					if (_33721_writed) {
						_1aa37234e_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1aa37234e_write(_self_, jule::Str("\n", 1));
					_1aa37432e_indent(_self_);
					_1aa37234e_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1aa32d45e_field(_33825_f.get()._field_decl);;
					_1aa37234e_write(_self_, _35221_f_ident);
					_1aa37234e_write(_self_, jule::Str(" == _other.", 11));
					_1aa37234e_write(_self_, _35221_f_ident);
				}
				_iter_next_1acc7a6b1:;
				++it;
				goto _iter_begin_1acc7a6b1;
			}
			_iter_end_1acc7a6b1:;
		};
		_1aa373ad1_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1aa37234e_write(_self_, jule::Str("true", 4));
		};
		_1aa37234e_write(_self_, jule::Str(";\n", 2));
		_1aa373ad1_done_indent(_self_);
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("}", 1));
	} else {
		_1aa37234e_write(_self_, jule::Str(" return true; }", 15));
	};
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aa38e712_structure_operator_not_eq(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1d70ab9c9_StructIns>& _37163_s) {
	_1aa37432e_indent(_self_);
	if (_1c00b04d9_INLINE) {
		_1aa37234e_write(_self_, jule::Str("inline ", 7));
	};
	_1aa37234e_write(_self_, jule::Str("bool operator!=(", 16));
	_1aa37234e_write(_self_, _37146_ident);
	_1aa37234e_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1aa38e844_structure_operator(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1bc9c9c4c_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1d70884de_is_void(_38256_f.get()._field_decl.ptr());;
	_1aa37432e_indent(_self_);
	if (_1c00b04d9_INLINE) {
		_1aa37234e_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1aa37234e_write(_self_, _38239_ident);
		_1aa37234e_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1be3d6679_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1aa37234e_write(_self_, _38239_ident);
		} else {
			_1aa37234e_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1aa37234e_write(_self_, jule::Str(" operator", 9));
	_1aa37234e_write(_self_, _38267_op);
	_1aa37234e_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1bc9c9a60_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1aa37234e_write(_self_, static__1aa398b39_param_ins(_41021_p));
		_1aa37234e_write(_self_, jule::Str(" _other", 7));
	};
	_1aa37234e_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1aa37234e_write(_self_, jule::Str("return ", 7));
	};
	_1aa37234e_write(_self_, static__1aa32c639_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1aa37234e_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1aa37234e_write(_self_, jule::Str("return *this; ", 14));
		};
		_1aa37234e_write(_self_, jule::Str("}", 1));
	} else {
		_1aa37234e_write(_self_, jule::Str("(this); }", 9));
	};
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aa38e976_structure_operators(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1aa32d1b7_structure_ins(_43144_s);;
	_1aa38e5d0_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1aa38e712_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1aa38e844_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1aa38eaa8_structure_ins_decl(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1acc9e152:;
			if (it != expr.end()) {
				jule::Ptr<_1bc9c9873_Fn> _47225_m = *it;
				{
					_1aa3901b3_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1acc9e152:;
				++it;
				goto _iter_begin_1acc9e152;
			}
			_iter_end_1acc9e152:;
		};
	};
	_1aa37234e_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1aa32d1b7_structure_ins(_47043_s);;
	_1aa37234e_write(_self_, _47813_out_ident);
	_1aa37234e_write(_self_, jule::Str(" {\n", 3));
	_1aa372ae1_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1acca15d8:;
		if (it != expr.end()) {
			jule::Ptr<_1d708808d_FieldIns> _48421_f = *it;
			{
				_1aa37432e_indent(_self_);
				_1aa3603b4_field_decl(_self_, _48421_f);
				_1aa37234e_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1acca15d8:;
			++it;
			goto _iter_begin_1acca15d8;
		}
		_iter_end_1acca15d8:;
	};
	_1aa37432e_indent(_self_);
	_1aa3598a8_structure_destructor(_self_, _47043_s);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa37432e_indent(_self_);
	_1aa37234e_write(_self_, _47813_out_ident);
	_1aa37234e_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1aa362e11_structure_derive_defs_decls(_self_, _47043_s);
	_1aa38e976_structure_operators(_self_, _47043_s);
	_1aa37234e_write(_self_, jule::Str("\n", 1));
	_1aa373ad1_done_indent(_self_);
	_1aa37432e_indent(_self_);
	_1aa37234e_write(_self_, jule::Str("};", 2));
}



inline void _1aa38ebda_structure_decl(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d7073276_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acca6115:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _51021_ins = *it;
			{
				_1aa38eaa8_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1acca6115:;
			++it;
			goto _iter_begin_1acca6115;
		}
		_iter_end_1acca6115:;
	};
}



inline void _1aa38ed1c_structure_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1acca70d3:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1aa38ebda_structure_decl(_self_, _51621_s);
					_1aa37234e_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1acca70d3:;
			++it;
			goto _iter_begin_1acca70d3;
		}
		_iter_end_1acca70d3:;
	};
}



inline void _1aa38ee4e_params_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1aa37234e_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1aa37234e_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1acca9613:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_1bc9c9a60_ParamIns> _53121_p = *it;
			{
				_1aa37234e_write(_self_, static__1aa398b39_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1aa37234e_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1acca9613:;
			++it;
			_53114_i++;
			goto _iter_begin_1acca9613;
		}
		_iter_end_1acca9613:;
	};
	_1aa37234e_write(_self_, jule::Str(")", 1));
}



inline void _1aa390081_func_head(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1bc9c9c4c_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _1c00b04d9_INLINE) && (!(_1d7063475_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1aa37234e_write(_self_, jule::Str("inline ", 7));
	};
	_1aa37234e_write(_self_, static__1aa399178_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1aa37234e_write(_self_, jule::Str("(*", 2));
		_1aa37234e_write(_self_, static__1aa32c639_func_ins(_54134_f));
		_1aa37234e_write(_self_, jule::Str(")", 1));
	} else {
		_1aa37234e_write(_self_, jule::Str(" ", 1));
		_1aa37234e_write(_self_, static__1aa32c639_func_ins(_54134_f));
	};
}



inline void _1aa3901b3_func_decl(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1bc9c9873_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1accb04d7:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9c4c_FnIns> _55721_c = *it;
			{
				_1aa37432e_indent(_self_);
				_1aa390081_func_head(_self_, _55721_c,_55642_ptr);
				_1aa38ee4e_params_decls(_self_, _55721_c.get()._field_params);
				_1aa37234e_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1accb04d7:;
			++it;
			goto _iter_begin_1accb04d7;
		}
		_iter_end_1accb04d7:;
	};
}



inline void _1aa3902e5_func_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa36185a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>([=](jule::Ptr<_1be275c99_Package>& _56636_pkg) mutable -> void {
		_1aa39389d_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>([=](jule::Ptr<_1be3a4339_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1accb3dc0:;
				if (it != expr.end()) {
					jule::Ptr<_1bc9c9873_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1aa3901b3_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1accb3dc0:;
					++it;
					goto _iter_begin_1accb3dc0;
				}
				_iter_end_1accb3dc0:;
			};
		}));
	}));
}



inline void _1aa390427_trait_data_types(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa36185a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>([=](jule::Ptr<_1be275c99_Package>& _57836_pkg) mutable -> void {
		_1aa39389d_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>([=](jule::Ptr<_1be3a4339_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1accb7049:;
				if (it != expr.end()) {
					jule::Ptr<_1bd929d66_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1aa37234e_write(_self_, jule::Str("struct ", 7));
						_1aa37234e_write(_self_, static__1aa32c8d1_trait_decl(_58029_t));
						_1aa37234e_write(_self_, jule::Str("MptrData", 8));
						_1aa37234e_write(_self_, jule::Str(" {\n", 3));
						_1aa372ae1_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1accb96de:;
							if (it != expr.end()) {
								jule::Ptr<_1bc9c9873_Fn> _58933_m = *it;
								{
									jule::Ptr<_1bc9c9c4c_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1bc9c9a60_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1accbb2c3:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_1bc9c9a60_ParamIns> _59537_ip = *it;
											{
												if (_20201ee1c_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1be128b19_itoa(_59530_i));
												};
											}
											_iter_next_1accbb2c3:;
											++it;
											_59530_i++;
											goto _iter_begin_1accbb2c3;
										}
										_iter_end_1accbb2c3:;
									};
									if ((!(_1eec82ce7_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1aa394aad_CustomType>(_1aa394aad_CustomType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1aa3901b3_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1accb96de:;
								++it;
								goto _iter_begin_1accb96de;
							}
							_iter_end_1accb96de:;
						};
						_1aa373ad1_done_indent(_self_);
						_1aa37432e_indent(_self_);
						_1aa37234e_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1accb7049:;
					++it;
					goto _iter_begin_1accb7049;
				}
				_iter_end_1accb7049:;
			};
		}));
	}));
}



inline void _1aa390636_param_ins(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1bc9c9a60_ParamIns>& _62234_p) {
	_1aa37234e_write(_self_, static__1aa398b39_param_ins(_62234_p));
	_1aa37234e_write(_self_, jule::Str(" ", 1));
	_1aa37234e_write(_self_, static__1aa32cb78_param(_62234_p.get()._field_decl));
}



inline void _1aa3908ab_params_ins(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1aa37234e_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1aa37234e_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1accc1bad:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_1bc9c9a60_ParamIns> _63421_p = *it;
			{
				_1aa390636_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1aa37234e_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1accc1bad:;
			++it;
			_63414_i++;
			goto _iter_begin_1accc1bad;
		}
		_iter_end_1accc1bad:;
	};
	_1aa37234e_write(_self_, jule::Str(")", 1));
}



inline void _1aa390bca_var_init_expr(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1be36365b_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1aa37234e_write(_self_, jule::Str("static ", 7));
	};
	_1aa37234e_write(_self_, static__1aa39995e_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1aa37234e_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1aa37234e_write(_self_, jule::Str("&", 1));
	};
	_1aa37234e_write(_self_, static__1aa32d706_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1aa37234e_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1aa37234e_write(_self_, jule::Str(";", 1));
}



inline void _1aa390e50_var(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1be36365b_Var> _66127_v) {
	if (_20201eb75_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1aa390bca_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1aa325643_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1aa390bca_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1aa390bca_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1aa3258b8_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1aa3911c5_func(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1bc9c9873_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acccbaec:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9c4c_FnIns> _67721_ins = *it;
			{
				_1aa390081_func_head(_self_, _67721_ins,false);
				_1aa3908ab_params_ins(_self_, _67721_ins.get()._field_params);
				_1aa37234e_write(_self_, jule::Str(" ", 1));
				_1aa31759c_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1aa37234e_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1acccbaec:;
			++it;
			goto _iter_begin_1acccbaec;
		}
		_iter_end_1acccbaec:;
	};
}



inline void _1aa3913a1_trait_wrappers(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1acccc339:;
		if (it != expr.end()) {
			jule::Ptr<_1aa38dd4e_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1accceb55:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1be128b19_itoa(_68921_hash.get()._field_i));
							_1aa3911c5_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_1eec82ce7_PRODUCTION) {
									_1aa37234e_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1aa37234e_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1accceb55;
							};
							jule::Bool _70721_ptr = (!(_1d7061462_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1bc9c9873_Fn> _70925_sm = _1d7083770_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1accceb55;
							};
							_1aa372ae1_add_indent(_self_);
							_1aa37234e_write(_self_, jule::Str("{\n", 2));
							_1aa37432e_indent(_self_);
							if ((!(_1d70884de_is_void(_70925_sm.ptr())))) {
								_1aa37234e_write(_self_, jule::Str("return ", 7));
							};
							_1aa37234e_write(_self_, static__1aa32c392_func(_70925_sm));
							_1aa37234e_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1aa37234e_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1aa37234e_write(_self_, static__1aa398353_structure_ins(_68921_hash.get()._field_s));
								_1aa37234e_write(_self_, jule::Str(">(", 2));
								if ((!(_1eec82ce7_PRODUCTION))) {
									_1aa37234e_write(_self_, jule::Str("_00___file", 10));
								};
								_1aa37234e_write(_self_, jule::Str(")", 1));
							} else {
								_1aa37234e_write(_self_, jule::Str("_self_.data.as<", 15));
								_1aa37234e_write(_self_, static__1aa3980ab_structure(_70925_sm.get()._field_owner));
								_1aa37234e_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1accda446:;
								if (it != expr.end()) {
									jule::Ptr<_1bc9c9686_Param> _73524_mp = *it;
									{
										_1aa37234e_write(_self_, jule::Str(", ", 2));
										_1aa37234e_write(_self_, static__1aa32cb78_param(_73524_mp));
									}
									_iter_next_1accda446:;
									++it;
									goto _iter_begin_1accda446;
								}
								_iter_end_1accda446:;
							};
							_1aa37234e_write(_self_, jule::Str(");\n}\n", 5));
							_1aa373ad1_done_indent(_self_);
						}
						_iter_next_1accceb55:;
						++it;
						goto _iter_begin_1accceb55;
					}
					_iter_end_1accceb55:;
				};
			}
			_iter_next_1acccc339:;
			++it;
			goto _iter_begin_1acccc339;
		}
		_iter_end_1acccc339:;
	};
}



inline void _1aa39157c_trait_datas(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	jule::Ptr<_1bd929d66_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1accdbe1a:;
		if (it != expr.end()) {
			jule::Ptr<_1aa38dd4e_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1aa32c8d1_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1aa373ad1_done_indent(_self_);
						_1aa37432e_indent(_self_);
						_1aa37234e_write(_self_, jule::Str("};\n", 3));
					};
					_1aa37234e_write(_self_, jule::Str("static ", 7));
					_1aa37234e_write(_self_, _74817_ident);
					_1aa37234e_write(_self_, jule::Str("MptrData ", 9));
					_1aa37234e_write(_self_, _74817_ident);
					_1aa37234e_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1aa372ae1_add_indent(_self_);
				};
				_1aa37432e_indent(_self_);
				_1aa37234e_write(_self_, jule::Str("{\n", 2));
				_1aa372ae1_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1acce18e2:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1aa32c392_func(_76625_m);;
							_1aa37432e_indent(_self_);
							_1aa37234e_write(_self_, jule::Str(".", 1));
							_1aa37234e_write(_self_, _76721_m_ident);
							_1aa37234e_write(_self_, jule::Str("=", 1));
							_1aa37234e_write(_self_, _76721_m_ident);
							_1aa37234e_write(_self_, jule::Str("_", 1));
							_1aa37234e_write(_self_, _1be128b19_itoa(_74721_hash.get()._field_i));
							_1aa37234e_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1acce18e2:;
						++it;
						goto _iter_begin_1acce18e2;
					}
					_iter_end_1acce18e2:;
				};
				_1aa373ad1_done_indent(_self_);
				_1aa37432e_indent(_self_);
				_1aa37234e_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1accdbe1a:;
			++it;
			goto _iter_begin_1accdbe1a;
		}
		_iter_end_1accdbe1a:;
	};
	if ((_74617_old != nullptr)) {
		_1aa373ad1_done_indent(_self_);
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1aa391758_globals(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1accdc57a:;
		if (it != expr.end()) {
			jule::Ptr<_1be36365b_Var> _78921_v = *it;
			{
				_1aa37234e_write(_self_, static__1aa39995e_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1aa37234e_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1aa37234e_write(_self_, jule::Str("&", 1));
				};
				_1aa37234e_write(_self_, static__1aa32d706_var(_78921_v));
				_1aa37234e_write(_self_, jule::Str(" = ", 3));
				_1aa325643_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1aa37234e_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1accdc57a:;
			++it;
			goto _iter_begin_1accdc57a;
		}
		_iter_end_1accdc57a:;
	};
}



inline void _1aa391934_decls(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa362729_trait_decls(_self_);
	_1aa3584de_structure_plain_decls(_self_);
	_1aa38ed1c_structure_decls(_self_);
	_1aa3902e5_func_decls(_self_);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa390427_trait_data_types(_self_);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa3913a1_trait_wrappers(_self_);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa39157c_trait_datas(_self_);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa391758_globals(_self_);
}



inline void _1aa391ba9_structure_methods(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1accecce9:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _81821_f = *it;
			{
				_1aa3911c5_func(_self_, _81821_f);
				_1aa37234e_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1accecce9:;
			++it;
			goto _iter_begin_1accecce9;
		}
		_iter_end_1accecce9:;
	};
}



inline void _1aa391e2e_structure_derive_defs(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _82446_s) {
	if (_1d7072aa0_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1aa37234e_write(_self_, static__1aa3281c3_clone_func_def(_82446_s.get()._field_decl));
		_1aa37234e_write(_self_, jule::Str("{\n", 2));
		_1aa372ae1_add_indent(_self_);
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, static__1aa398353_structure_ins(_82446_s));
		_1aa37234e_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acd011b5:;
			if (it != expr.end()) {
				jule::Ptr<_1d708808d_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1aa32d45e_field(_83220_f.get()._field_decl);;
					_1aa37432e_indent(_self_);
					_1aa37234e_write(_self_, jule::Str("clone.", 6));
					_1aa37234e_write(_self_, _83321_ident);
					_1aa37234e_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1aa37234e_write(_self_, _83321_ident);
					_1aa37234e_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1acd011b5:;
				++it;
				goto _iter_begin_1acd011b5;
			}
			_iter_end_1acd011b5:;
		};
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("return clone;\n", 14));
		_1aa373ad1_done_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("}", 1));
	};
}



inline void _1aa3921a4_structure_ostream(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _84842_s) {
	_1aa37432e_indent(_self_);
	_1aa37234e_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1aa37234e_write(_self_, static__1aa32d1b7_structure_ins(_84842_s));
	_1aa37234e_write(_self_, jule::Str(" _Src) {\n", 9));
	_1aa372ae1_add_indent(_self_);
	_1aa37432e_indent(_self_);
	jule::Ptr<_1bc9c9873_Fn> _85617_fts = _1d7083770_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1be364a9c_to_str(_85617_fts)) {
		_1aa37234e_write(_self_, jule::Str("_Stream << ", 11));
		_1aa37234e_write(_self_, static__1aa32c392_func(_85617_fts));
		_1aa37234e_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1aa37234e_write(_self_, jule::Str("_Stream << \"", 12));
		_1aa37234e_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1aa37234e_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acd09a81:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_1d708808d_FieldIns> _86625_f = *it;
				{
					_1aa37432e_indent(_self_);
					_1aa37234e_write(_self_, jule::Str("_Stream << \"", 12));
					_1aa37234e_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1aa37234e_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1d70ab9c9_StructIns> _87321_strct = _1be3d7acb_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1aa37234e_write(_self_, jule::Str(" cpp.", 5));
						_1aa37234e_write(_self_, static__1aa32d45e_field(_86625_f.get()._field_decl));
						_1aa37234e_write(_self_, jule::Str("\"", 1));
					} else {
						_1aa37234e_write(_self_, jule::Str("\" << _Src.", 10));
						_1aa37234e_write(_self_, static__1aa32d45e_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1aa37234e_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1aa37234e_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1acd09a81:;
				++it;
				_86618_i++;
				goto _iter_begin_1acd09a81;
			}
			_iter_end_1acd09a81:;
		};
		_1aa37432e_indent(_self_);
		_1aa37234e_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1aa37432e_indent(_self_);
	_1aa37234e_write(_self_, jule::Str("return _Stream;\n", 16));
	_1aa373ad1_done_indent(_self_);
	_1aa37234e_write(_self_, jule::Str("}", 1));
}



inline void _1aa392429_structure_ins(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d70ab9c9_StructIns>& _89938_s) {
	_1aa391ba9_structure_methods(_self_, _89938_s);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa391e2e_structure_derive_defs(_self_, _89938_s);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
	_1aa3921a4_structure_ostream(_self_, _89938_s);
}



inline void _1aa39269e_structure(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1d7073276_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acd14184:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _90821_ins = *it;
			{
				_1aa392429_structure_ins(_self_, _90821_ins);
				_1aa37234e_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1acd14184:;
			++it;
			goto _iter_begin_1acd14184;
		}
		_iter_end_1acd14184:;
	};
}



inline void _1aa39287a_structures(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1acd15460:;
		if (it != expr.end()) {
			jule::Ptr<_1d7073276_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1aa39269e_structure(_self_, _91521_s);
					_1aa37234e_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1acd15460:;
			++it;
			goto _iter_begin_1acd15460;
		}
		_iter_end_1acd15460:;
	};
}



inline void _1aa392a56_funcs(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa36185a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>([=](jule::Ptr<_1be275c99_Package>& _92436_pkg) mutable -> void {
		_1aa39389d_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>([=](jule::Ptr<_1be3a4339_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1acd18a5c:;
				if (it != expr.end()) {
					jule::Ptr<_1bc9c9873_Fn> _92629_f = *it;
					{
						if (((!(_1eec82324_TEST)) && _1aa39c654_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1acd18a5c;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1aa3911c5_func(_self_, _92629_f);
							_1aa37234e_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1acd18a5c:;
					++it;
					goto _iter_begin_1acd18a5c;
				}
				_iter_end_1acd18a5c:;
			};
		}));
	}));
}



inline void _1aa392ccb_push_init(jule::Ptr<_1aa38e03b_ObjectCoder> _self_, jule::Ptr<_1be275c99_Package>& _93934_pkg) {
	_1aa39389d_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)>([=](jule::Ptr<_1be3a4339_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1acd1b8ea:;
			if (it != expr.end()) {
				jule::Ptr<_1bc9c9873_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1aa37432e_indent(_self_);
						_1aa37234e_write(_self_, static__1aa32c392_func(_94120_f));
						_1aa37234e_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1acd1b8ea:;
				++it;
				goto _iter_begin_1acd1b8ea;
			}
			_iter_end_1acd1b8ea:;
		};
	}));
}



inline void _1aa392ea7_init_caller(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa37234e_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1aa372ae1_add_indent(_self_);
	_1aa36185a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1be275c99_Package>&)>([=](jule::Ptr<_1be275c99_Package>& _95436_pkg) mutable -> void {
		_1aa392ccb_push_init(_self_, _95436_pkg);
	}));
	_1aa373ad1_done_indent(_self_);
	_1aa37234e_write(_self_, jule::Str("\n}", 2));
}



inline void _1aa393183_end(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa37234e_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1eec82324_TEST) {
		_1aa37234e_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1aa37234e_write(_self_, jule::Str("entry_point();", 14));
	};
	_1aa37234e_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1aa39335e_serialize_head(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa360947_prepare_structures(_self_);
	_1aa362042_build_trait_map(_self_);
	_1aa354bb1_head(_self_);
	_1aa37333e_links(_self_);
	_1aa37234e_write(_self_, jule::Str("\n", 1));
	_1aa391934_decls(_self_);
	_1aa37234e_write(_self_, jule::Str("\n", 1));
	_1aa39287a_structures(_self_);
	_1aa392a56_funcs(_self_);
	_1aa392ea7_init_caller(_self_);
	_1aa37234e_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aa39353a_serialize(jule::Ptr<_1aa38e03b_ObjectCoder> _self_) {
	_1aa39335e_serialize_head(_self_);
	_1aa393183_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa38e03b_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1acd73c60_parse_integer(_1aa3e755b_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1acd785b1:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_201adbc1a_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1acd78bee:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_201adbc1a_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1acd78a89:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_201adbc1a_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1acd78cdc:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1acd78d53:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1acd7821a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1acd7813d:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1acd7c9c2_parse_integer(_1aa3e755b_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1acd824ee:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_201adbc1a_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1acd82b3c:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_201adbc1a_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1acd829c7:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_201adbc1a_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1acd82c2a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1acd82c91:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1acd82158:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1acd8207b:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1aa3e7d53_get_data(_1aa3e755b_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1aa3e8095_process_flag(_1aa3e755b_ArgParser* _self_, jule::Trait<_1aa3ad665_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1acd5b110_Flag>>()) {
			_case_begin_1acd70c3a:;
			{
				jule::Ptr<_1acd5b110_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1acd5b110_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1acd70bc4:;
	};
	jule::Str _22513_data = _1aa3e7d53_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1aa3ad665_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa3ad236_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1acd50049_Flag>>()) {
			_case_begin_1acd72467:;
			{
				jule::Ptr<_1acd50049_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1acd50049_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1acd73c60_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1bdd4e873_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1aa3ad665_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa3ad236_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1acd53ba7_Flag>>()) {
			_case_begin_1acd72d4c:;
			{
				jule::Ptr<_1acd53ba7_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1acd53ba7_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1acd7c9c2_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1bdd2d0d2_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1aa3ad665_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa3ad236_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1acd57639_Flag>>()) {
			_case_begin_1acd72db3:;
			{
				jule::Ptr<_1acd57639_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1acd57639_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1bdd79ace_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1aa3ad665_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa3ad236_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1acd5ea92_Flag>>()) {
			_case_begin_1acd72e29:;
			{
				(*(_21736_flag.operator jule::Ptr<_1acd5ea92_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1acd72cd6:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aa3e831a_single_dash(_1aa3e755b_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1acd88b21:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1aa3ad665_CommonFlag> _26321_flag = _1aa3e5911_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1aa3e8095_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1acd88b21:;
			++it;
			goto _iter_begin_1acd88b21;
		}
		_iter_end_1acd88b21:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aa3e8590_double_dash(_1aa3e755b_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1aa3ad665_CommonFlag> _27617_flag = _1aa3e5603_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1aa3e8095_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aa3e876b_try_arg(_1aa3e755b_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1aa3e8590_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1aa3e831a_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aa3e8947_parse(_1aa3e755b_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1aa3e876b_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1acd8ea39:;
	}
	_iter_end_1acd8ea39:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3e755b_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _200abe33b_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _200abe5d3_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _200abeb99_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1aa408913:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1aa409480:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_200abe33b_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1aa408dec:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1aa408d86:;
			};
			(_12113_n)++;
		}
	_iter_next_1aa406207:;
	}
	_iter_end_1aa406207:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _200abeea7_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1aa40c5b5:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1aa40c63c:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _200abe5d3_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1aa40b493:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _200aa9832_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1aa4196b0:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1aa4196b0;
				};
				_2113_buff=_200abeea7_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1aa4196b0:;
			++it;
			goto _iter_begin_1aa4196b0;
		}
		_iter_end_1aa4196b0:;
	};
	return _200abeea7_append_rune(_2113_buff,0LL);
}



inline jule::Str _200aaa46a_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1aa41b0b8:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1aa41b0b8;
				};
			}
			_iter_next_1aa41b0b8:;
			++it;
			_399_i++;
			goto _iter_begin_1aa41b0b8;
		}
		_iter_end_1aa41b0b8:;
	};
	return static_cast<jule::Str>(_200abeb99_decode(_3813_code_page));
}



inline jule::Str _200aaa59c_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_200abeb99_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1aa41bc01:;
	}
	_iter_end_1aa41bc01:;;
	return jule::Str();
}



inline jule::I64 _1eed17970_get_last_errno(void) {
	return errno;
}



inline jule::Uintptr _200ac1706_get_std_handle(jule::Uintptr _5423_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _200ac1a25_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _200ac1e10__wopen(jule::U16* _6322_path, jule::I64 _6334_flag, jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _200ac210d_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _200ac244e_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _200ac298d_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _200ac2c35_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _200ac2ecc_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _200ac3274__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _200ac351b__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _200ac37b3__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _200ac3e89_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _200ac42ca_get_console_mode(jule::Uintptr _11325_handle, jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _200ac461b_set_console_mode(jule::Uintptr _11825_handle, jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _200ac4b49_write_console(jule::Uintptr _12329_handle, jule::U16* _12345_buffer, jule::I64 _12359_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _200ac5177_read_console(jule::Uintptr _13028_handle, jule::U16* _13048_buffer, jule::I64 _13062_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _200ac750e_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _200ac78e9_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _200ac7c6d_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _200ac8158_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _200ac8367_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _200ba716b_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _200ba6016_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_200ba6588_accept_range _1969_accept = _200ba68eb_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _200ba7732_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_200ba9107_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1aa54a978;
			};
		}
	_iter_next_1aa54a978:;
	}
	_iter_end_1aa54a978:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _200ba716b_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _200ba7c71_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1aa552e25:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1aa552650:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1aa5526c7:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1aa55274e:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1aa5527c6:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1aa552a6d:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1aa5525c8:;
			{
				return -1LL;
			}
		}
		_match_end_1aa5524eb:;
	};
}



inline jule::I64 _200ba818e_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1aa55827c:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1aa5582e3:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1aa55803a:;
			{
				_37439_r=65533LL;
				goto _case_begin_1aa5580a1;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1aa5580a1:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1aa555796:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1aa555741:;
	};
}



inline jule::Slice<jule::U8> _200ba84d0_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _200ba8821_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _200ba8821_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1aa56163c:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1aa55ec67:;
			{
				_41245_r=65533LL;
				goto _case_begin_1aa55eccd;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1aa55eccd:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1aa55e250:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1aa55e1ea:;
	};
}



inline jule::I64 _200ba8d60_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1aa568b61;
			};
			jule::U8 _48213_x = _200ba6016_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1aa568b61;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1aa568b61;
			};
			_200ba6588_accept_range _49213_accept = _200ba68eb_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1aa568b61:;
	}
	_iter_end_1aa568b61:;;
	return _47333_n;
}



inline jule::Bool _200ba9107_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _200c57705_get_last_os_error_windows(void) {
	jule::U32 _169_err = _200ac210d_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aa58e758:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa59179e:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa591815:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aa59187b:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1aa58d889:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1aa58d834:;
	};
}



inline jule::Slice<jule::Str> _200c5b572_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _200c5b9e5_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _200c5c3a8___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _200c5c3a8___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _200ac244e_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_200c57705_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_200aaa59c_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _200ce2c79_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _201b11547_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_201b7aa9a__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _201b84554_is_excluding_latin(_201b1b4b9_LETTER,_7618_r);
}



inline jule::Bool _201b83971_is16(jule::Slice<_201b81dae_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1aab87658:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_201b81dae_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1aab87658:;
				++it;
				_19313_i++;
				goto _iter_begin_1aab87658;
			}
			_iter_end_1aab87658:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_201b81dae_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1aab85d0a:;
	}
	_iter_end_1aab85d0a:;;
	return false;
}



inline jule::Bool _201b83cb2_is32(jule::Slice<_201b82332_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1aab8dce1:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_201b82332_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1aab8dce1:;
				++it;
				_23013_i++;
				goto _iter_begin_1aab8dce1;
			}
			_iter_end_1aab8dce1:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_201b82332_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1aab8a97a:;
	}
	_iter_end_1aab8a97a:;;
	return false;
}



inline jule::Bool _201b84554_is_excluding_latin(jule::Ptr<_201b827a5_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_201b81dae_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _201b83971_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_201b82332_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _201b83cb2_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _200cecaa8_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1aabb1c7b:;
	}
	_iter_end_1aabb1c7b:;;
	return _2213_ss;
}



inline jule::Bool _200d002e7__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1aabb4d4a:;
	}
	_iter_end_1aabb4d4a:;;
	return true;
}



inline jule::Bool _201adbc1a_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _200d002e7__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _2019b6430__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1aabb7039:;
	}
	_iter_end_1aabb7039:;;
	return true;
}



inline jule::Bool _200ced34a_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _2019b6430__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _200cebed6_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_200d002e7__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1aabbaba8:;
	}
	_iter_end_1aabbaba8:;;
	return -1LL;
}



inline jule::I64 _201adc237_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1aabbd68e;
					};
				}
			_iter_next_1aabc066e:;
			}
			_iter_end_1aabc066e:;;
			return _9613_j;
		}
	_iter_next_1aabbd68e:;
	}
	_iter_end_1aabbd68e:;;
	return -1LL;
}



inline jule::I64 _201adc754_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_201adc237_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _201b8519d__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _200ba716b_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1aabc8d81:;
	}
	_iter_end_1aabc8d81:;;
	return -1LL;
}



inline jule::I64 _201b85643_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1aabcb9aa:;
	}
	_iter_end_1aabcb9aa:;;
	return -1LL;
}



inline jule::I64 _201b85b1b_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _200ce2c79_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _200ce2c79_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _200ba716b_decode_rune(_2429_sb.slice(_24413_i));
			if ((_201b8519d__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1aabd196b:;
	}
	_iter_end_1aabd196b:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _201b85d80_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _200cebed6_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1aabd8841;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1aabd8841:;
	}
	_iter_end_1aabd8841:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _201b85eb2_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_200cebed6_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _201b86358_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_201b85b1b_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::Str _201b865bc_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	if ((_34548_n < 0LL)) {
		_34548_n=static_cast<jule::I64>(_34516_s.len());
	};
	jule::Str _35413_ss = jule::Str::alloc(_34516_s.len());;
	jule::I64 _35513_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _35713_j = _200cebed6_find_at(_34516_s,_34524_sub,_35513_i);;
			if ((_35713_j == -1LL)) {
				goto _iter_end_1aabe2b8b;
			};
			_35413_ss+=_34516_s.slice(_35513_i,_35713_j);
			_35413_ss+=_34534_new;
			_35513_i=static_cast<jule::I64>((_35713_j + _34524_sub.len()));
		}
	_iter_next_1aabe2b8b:;
	}
	_iter_end_1aabe2b8b:;;
	_35413_ss+=_34516_s.slice(_35513_i);
	return _35413_ss;
}



inline void _201b85412__trim_left(jule::Slice<jule::U8>& _39720_s, jule::Slice<jule::U8>& _39732_cutset) {
	jule::I64 _39813_i = 0LL;;
	while ((_39813_i < _39720_s.len())) {
		{
			jule::I32 _40014_r;;
			jule::I64 _40017_n;;
			std::tie(_40014_r,_40017_n) = _200ba716b_decode_rune(_39720_s.slice(_39813_i));
			if ((_201b8519d__find_rune(_39732_cutset,_40014_r) == -1LL)) {
				_39720_s=_39720_s.slice(_39813_i);
				return;;
			};
			_39813_i+=_40017_n;
		}
	_iter_next_1aabe80ae:;
	}
	_iter_end_1aabe80ae:;;
	_39720_s=nullptr;
}



inline jule::Str _201b87018_trim_left(jule::Str _41218_s, jule::Str _41226_cutset) {
	jule::Slice<jule::U8> _41313_bytes = _200ce2c79_stobs(_41218_s);;
	jule::Slice<jule::U8> _4149_bcutset = _200ce2c79_stobs(_41226_cutset);;
	_201b85412__trim_left(_41313_bytes,_4149_bcutset);
	return static_cast<jule::Str>(_41313_bytes);
}



inline void _201b8714a__trim_right(jule::Slice<jule::U8>& _41921_s, jule::Slice<jule::U8>& _41933_cutset) {
	jule::I64 _42013_i = _41921_s.len();;
	while ((_42013_i > 0LL)) {
		{
			jule::I32 _42214_r;;
			jule::I64 _42217_n;;
			std::tie(_42214_r,_42217_n) = _200ba7732_decode_last_rune(_41921_s.slice(0LL,_42013_i));
			if ((_201b8519d__find_rune(_41933_cutset,_42214_r) == -1LL)) {
				_41921_s=_41921_s.slice(0LL,_42013_i);
				return;;
			};
			_42013_i-=_42217_n;
		}
	_iter_next_1aabeb1d3:;
	}
	_iter_end_1aabeb1d3:;;
	_41921_s=nullptr;
}



inline jule::Str _201b873ae_trim(jule::Str _44313_s, jule::Str _44321_cutset) {
	jule::Slice<jule::U8> _44413_bytes = _200ce2c79_stobs(_44313_s);;
	jule::Slice<jule::U8> _4459_bcutset = _200ce2c79_stobs(_44321_cutset);;
	_201b85412__trim_left(_44413_bytes,_4459_bcutset);
	_201b8714a__trim_right(_44413_bytes,_4459_bcutset);
	return static_cast<jule::Str>(_44413_bytes);
}



inline jule::Bool _200c38780_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _200c322a1_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _200c323d3_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I64 _200c32812_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_200c322a1_is_slash(_8220_path[0LL]))) || (!(_200c322a1_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _200c32aa9_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _200c32aa9_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_200c323d3_to_upper(_9613_p2[0LL]) == 'U')) && (_200c323d3_to_upper(_9613_p2[1LL]) == 'N')) && (_200c323d3_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _200c32aa9_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _200c32aa9_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		};
	};
	return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _200c32aa9_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1aac1e943:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_200c322a1_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1aac1e943:;
			++it;
			_1209_i++;
			goto _iter_begin_1aac1e943;
		}
		_iter_end_1aac1e943:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _200c32d51_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _200aa9832_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_200ac3e89_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _200aaa46a_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1aac21934:;
	}
	_iter_end_1aac21934:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _200c331c5___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _200c32d51_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_200ca1221_clean(_14514_path),_14532_ok);
}



inline jule::Str _200c3346c___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1aac2761b:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1aac290ac:;
					}
					else if (_200c322a1_is_slash(_16113_last_char)) {
						_case_begin_1aac29255:;
						{
							while (((_16217_e.len() > 0LL) && _200c322a1_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1aac2992b:;
							}
							_iter_end_1aac2992b:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1aac292bb:;
					}
					else {
						_case_begin_1aac28c05:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1aac28b28:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1aac2761b:;
			++it;
			goto _iter_begin_1aac2761b;
		}
		_iter_end_1aac2761b:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _200ca1221_clean(_16013_s);
}



inline jule::Str _200ca1221_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _200c32812_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _200c38780_is_path_sep(_1099_original_path[0LL])) && _200c38780_is_path_sep(_1099_original_path[1LL]))) {
			return _200ca836b_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _200c38780_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_200c9307b_LazyBuff _12713_out = _200c9307b_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_200c98a54_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_200c38780_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1aac33c98:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _200c38780_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1aac37010:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _200c38780_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1aac37076:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1aac3a2ee:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_200c38780_is_path_sep(static_cast<jule::U8>(_200c93543_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1aac3a5eb:;
									}
									_iter_end_1aac3a5eb:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1aac3a365:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_200c98a54_append(&_12713_out, 92LLU);
									};
									_200c98a54_append(&_12713_out, '.');
									_200c98a54_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1aac39e36:;
						};
					}
				}
				else {
					_case_begin_1aac3203d:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_200c98a54_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_200c38780_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_200c98a54_append(&_12713_out, '.');
										_200c98a54_append(&_12713_out, 92LLU);
										goto _iter_end_1aac33d42;
									};
								}
							_iter_next_1aac33d42:;
							}
							_iter_end_1aac33d42:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_200c38780_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_200c98a54_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1aac33759:;
						}
						_iter_end_1aac33759:;;
					}
				}
				_match_end_1aac31e61:;
			};
		}
	_iter_next_1aac314c1:;
	}
	_iter_end_1aac314c1:;;
	if ((_12713_out._field_w == 0LL)) {
		_200c98a54_append(&_12713_out, '.');
	};
	return _200ca836b_from_slash(_200c998bd_string(&_12713_out));
}



inline jule::Str _200ca836b_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _201b865bc_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _200cabda8_join(jule::Slice<jule::Str> _22513_elem) {
	return _200c3346c___join(_22513_elem);
}



inline jule::Str _200caec13_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_200c38780_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1aac41107:;
	}
	_iter_end_1aac41107:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _200cb1c59_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _200c331c5___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _200cbad1d_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _200c38780_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1aac43060:;
	}
	_iter_end_1aac43060:;;
	(_25417_path).mut_slice(_200cc3155_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_200c38780_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1aac451c7:;
	}
	_iter_end_1aac451c7:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _200cc16e7_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _200cc3155_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_200c38780_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1aac477c3:;
	}
	_iter_end_1aac477c3:;;
	jule::Str _2919_dir = _200ca1221_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _200cc3155_volume_name(jule::Str _30320_path) {
	return _200ca836b_from_slash(_30320_path.slice(0LL,_200c32812_volume_name_len(_30320_path)));
}



inline jule::I64 _1eedd6324_get_last_fs_error(void) {
	jule::I64 _729_err = _1eed17970_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aac5bc05:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aac5b1dd:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1aac5b650:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1aac5b6b6:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aac5b72c:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aac5b793:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1aac5be14:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aac5be7a:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1aac5bee1:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1aac5c057:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aac5c0bd:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1aac5c134:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aac5c19a:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aac5c222:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aac5c299:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1aac5c321:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1aac5c398:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aac5c420:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1aac5c497:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aac5c51e:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1aac5c596:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1aac5c61d:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aac5c695:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1aac5c71c:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1aac5c794:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1aac5c81b:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1aac5c893:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1aac5c91a:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1aac5b4da:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1aac5b485:;
	};
}



inline jule::Bool _200b3c5c9_is_console_handle(jule::Uintptr _11622_handle) {
	return (((_11622_handle == _1eee7b4da_STDIN) || (_11622_handle == _1eee822c1_STDOUT)) || (_11622_handle == _200aac604_STDERR));
}



inline jule::I64 _201c3544b_get_last_process_error(void) {
	jule::I64 _429_err = _1eed17970_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aac8dab1:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1aac8e023:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1aac8e089:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aac8e100:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aac8e166:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aac8e3b9:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aac8e430:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1aac8e496:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1aac8e50c:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1aac8e573:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1aac8e5d9:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1aac8ddad:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1aac8dd58:;
	};
}



inline jule::Slice<wchar_t*> _201c45307_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1aac97603:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1aac97603:;
			++it;
			_199_i++;
			goto _iter_begin_1aac97603;
		}
		_iter_end_1aac97603:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _201c4559e_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1aac994a1:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_200aa9832_utf16_from_str(_2812_p));;
			}
			_iter_next_1aac994a1:;
			++it;
			goto _iter_begin_1aac994a1;
		}
		_iter_end_1aac994a1:;
	};
	return _2713_us;
}



inline jule::I64 _201c45901_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _200aa9832_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _201c4559e_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _201c45307_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _201c45cdb_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _201c4559e_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _201c45307_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _201c4559e_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _201c45307_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _200aa9832_utf16_from_str(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _201c46a12_exit(jule::I64 _1213_code) {
	_200ac8367_exit(_1213_code);
}



inline jule::Str _201c46c10_executable(void) {
	return jule::executable();
}



inline jule::Bool _201bd4461_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _201bd4593_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1eec8b7c3_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1aacd088e:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1aacd088e:;
			++it;
			goto _iter_begin_1aacd088e;
		}
		_iter_end_1aacd088e:;
	};
	return false;
}



inline jule::Bool _201bd47d5_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _201bd2d11_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1aacd2880:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1aacd2880:;
			++it;
			goto _iter_begin_1aacd2880;
		}
		_iter_end_1aacd2880:;
	};
	{
		auto &expr = _201bd4373_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1aacd35c8:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1aacd35c8:;
			++it;
			goto _iter_begin_1aacd35c8;
		}
		_iter_end_1aacd35c8:;
	};
	return false;
}



inline jule::Str _201be1292_logf(jule::Str _29213_fmt, jule::Slice<jule::Any> _29226_args) {
	return _201be1baa_apply_fmt(_29213_fmt,jule::Any(_29226_args));
}



inline jule::Str _201be157d_arg_to_str(jule::Any _29615_arg) {
	{
		auto &_match_expr{ _29615_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aacd4871:;
			{
				return _29615_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1aacd48d7:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1aacd494d:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1aacd39a2:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1aacd394c:;
	};
}



inline jule::I64 _201be1825_find_next_fmt(jule::Str _30918_fmt) {
	{
		auto &expr = _30918_fmt;
		auto it = expr.begin();
		_iter_begin_1aacd5487:;
		if (it != expr.end()) {
			jule::I64 _3109_i = it - expr.begin();
			jule::U8 &_31012_b = *it;
			{
				if ((_31012_b == '@')) {
					return _3109_i;
				};
			}
			_iter_next_1aacd5487:;
			++it;
			_3109_i++;
			goto _iter_begin_1aacd5487;
		}
		_iter_end_1aacd5487:;
	};
	return -1LL;
}



inline jule::Str _201be1baa_apply_fmt(jule::Str _31818_fmt, jule::Slice<jule::Any> _31828_args) {
	jule::Str _31913_s = jule::Str();;
	{
		auto &expr = _31828_args;
		auto it = expr.begin();
		_iter_begin_1aacd7511:;
		if (it != expr.end()) {
			jule::Any &_32112_arg = *it;
			{
				jule::I64 _32213_i = _201be1825_find_next_fmt(_31818_fmt);;
				if ((_32213_i == -1LL)) {
					goto _iter_end_1aacd7511;
				};
				_31913_s+=_31818_fmt.slice(0LL,_32213_i);
				_31913_s+=_201be157d_arg_to_str(jule::Any(_32112_arg));
				(_31818_fmt).mut_slice((_32213_i + 1LL));;
			}
			_iter_next_1aacd7511:;
			++it;
			goto _iter_begin_1aacd7511;
		}
		_iter_end_1aacd7511:;
	};
	_31913_s+=_31818_fmt;
	return _31913_s;
}



inline jule::Bool _201be2c77_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _201be484a_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _201be4b36_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _201be4dcd_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _201be51ec_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _201be5494_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _201be573b_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _201be59d3_is_unix(jule::Str _6916_os) {
	return (_201be4b36_is_darwin(_6916_os) || _201be4dcd_is_linux(_6916_os));
}



inline jule::Bool _201be5d57_is_32bit(jule::Str _7217_arch) {
	return _201be51ec_is_i386(_7217_arch);
}



inline jule::Bool _201be60ee_is_64bit(jule::Str _7517_arch) {
	return (_201be5494_is_amd64(_7517_arch) || _201be573b_is_arm64(_7517_arch));
}



inline void _201c034d5_init(void) {
	jule::Str _2513_path = _201c46c10_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _200c5b9e5_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _200cc16e7_dir(_2513_path);;
	_2513_path=_200cabda8_join(jule::Slice<jule::Str>::make({_359_path_exec,jule::Str("..", 2)}));
	{
		_201c152b6_PATH_WD=_309_pwd;
		_201c14381_PATH_EXEC=_359_path_exec;
		_201c13726_PATH_STDLIB=_200cabda8_join(jule::Slice<jule::Str>::make({_2513_path,jule::Str("std", 3)}));
		_201c33ed8_PATH_API=_200cabda8_join(jule::Slice<jule::Str>::make({_201c14381_PATH_EXEC,jule::Str("..", 2)}));
		_201c33ed8_PATH_API=_200cabda8_join(jule::Slice<jule::Str>::make({_201c33ed8_PATH_API,jule::Str("api", 3)}));
		_201c33ed8_PATH_API=_200cabda8_join(jule::Slice<jule::Str>::make({_201c33ed8_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _20201cada_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _201e6bd9c_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1aad32dec:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1aad32dec:;
			++it;
			goto _iter_begin_1aad32dec;
		}
		_iter_end_1aad32dec:;
	};
	return false;
}



inline jule::Bool _20201cdc6_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _201e6c1dd_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1aad33804:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1aad33804:;
			++it;
			goto _iter_begin_1aad33804;
		}
		_iter_end_1aad33804:;
	};
	return false;
}



inline jule::Bool _20201d48c_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _20201d734_is_raw_str(_34615_k)));
}



inline jule::Bool _20201d734_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _20201d9cb_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _20201e0e7_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _20201e38e_is_float(jule::Str _36217_k) {
	if (_201adbc1a_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _201b86358_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _201b86358_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _20201e636_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _20201eb75_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _20201ee1c_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _20202045b_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _201e6bb38_SPACES;
		auto it = expr.begin();
		_iter_begin_1aad3d006:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1aad3d006:;
			++it;
			goto _iter_begin_1aad3d006;
		}
		_iter_end_1aad3d006:;
	};
	return false;
}



inline jule::Bool _2020208ac_is_letter(jule::I32 _41318_r) {
	return _201b11547_is_letter(_41318_r);
}



inline jule::Bool _202020deb_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _202021193_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _20202143a_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _2020216d2_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1aad42eea:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1aad427d0:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1aad42846:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aad42769:;
			{
				return false;
			}
		}
		_match_end_1aad426ae:;
	};
}



inline jule::Bool _202021979_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _202021c21_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _2020168a3_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1aad44947:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1aad44947:;
			++it;
			goto _iter_begin_1aad44947;
		}
		_iter_end_1aad44947:;
	};
	return false;
}



inline jule::Bool _202021eb8_is_assign_op(jule::Str _48121_kind) {
	if (_202021c21_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _202016be4_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1aad46d34:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1aad46d34:;
			++it;
			goto _iter_begin_1aad46d34;
		}
		_iter_end_1aad46d34:;
	};
	return false;
}



inline jule::Ptr<_20202276b_File> _202023c9a_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_20202276b_File>(_20202276b_File{._field_path=_6321_path, });
}



inline _201be0d52_Log _2020255c6_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_20202276b_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _201be0d52_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_201be1292_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _20202595b_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1aad52b53:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1aad52b53:;
			++it;
			_1259_i++;
			goto _iter_begin_1aad52b53;
		}
		_iter_end_1aad52b53:;
	};
	return true;
}



inline jule::Str _202025c9c_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_202020deb_is_decimal(_13913_b))))) {
				goto _iter_end_1aad565c4;
			};
		}
	_iter_next_1aad565c4:;
	}
	_iter_end_1aad565c4:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _202026132_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _202025c9c_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _202026473_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _202020deb_is_decimal(_17913_b)) {
					_case_begin_1aad59a28:;
					{
						goto _iter_next_1aad5861a;
					}
				}
				else if (_202027c27_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1aad59a8e:;
					{
						return _202026132_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1aad599b2:;
					{
						goto _iter_end_1aad5861a;
					}
				}
				_match_end_1aad5994b:;
			};
		}
	_iter_next_1aad5861a:;
	}
	_iter_end_1aad5861a:;;
	return jule::Str();
}



inline jule::Str _2020267b4_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _202025c9c_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _202026b05_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _202025c9c_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _202027056_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _202025c9c_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_202020deb_is_decimal(_21213_b))))) {
				goto _iter_end_1aad5c762;
			};
		}
	_iter_next_1aad5c762:;
	}
	_iter_end_1aad5c762:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _2020272ed_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1aad620e6:;
					{
						_22731_lit = _202027056_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1aad6216d:;
					{
						goto _iter_next_1aad6137b;
					}
				}
				else if (_2020278d6_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1aad621e5:;
					{
						_22731_lit = _202025c9c_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_202020deb_is_decimal(_23113_b)))) {
					_case_begin_1aad6226c:;
					{
						goto _iter_end_1aad6137b;
					}
				}
				_match_end_1aad62019:;
			};
		}
	_iter_next_1aad6137b:;
	}
	_iter_end_1aad6137b:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _202027595_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_20202595b_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_202021193_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1aad65d75;
			};
		}
	_iter_next_1aad65d75:;
	}
	_iter_end_1aad65d75:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _2020278d6_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _202027c27_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _202028068_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _202020deb_is_decimal(_28713_b)) {
					_case_begin_1aad6a7c5:;
					{
						goto _iter_next_1aad687e5;
					}
				}
				else if (_202027c27_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1aad6a83b:;
					{
						return true;
					}
				}
				else {
					_case_begin_1aad6a75e:;
					{
						goto _iter_end_1aad687e5;
					}
				}
				_match_end_1aad6a6e8:;
			};
		}
	_iter_next_1aad687e5:;
	}
	_iter_end_1aad687e5:;;
	return false;
}



inline jule::Bool _2020283a9_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1aad6c71c:;
			{
				goto _case_begin_1aad6bed0;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1aad6bed0:;
			{
				goto _case_begin_1aad6c046;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1aad6c046:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aad6be69:;
			{
				return true;
			}
		}
		_match_end_1aad6bd8c:;
	};
}



inline jule::Bool _2020286ea_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1aad6ea2c:;
			{
				goto _case_begin_1aad6e367;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1aad6e367:;
			{
				goto _case_begin_1aad6e3cd;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1aad6e3cd:;
			{
				goto _case_begin_1aad6e444;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1aad6e444:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aad6dd28:;
			{
				return true;
			}
		}
		_match_end_1aad6dc4b:;
	};
}



inline jule::Str _202028b4b_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _202027056_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_2020278d6_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _202025c9c_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_20202143a_is_octal(_35013_b))))) {
				goto _iter_end_1aad796b3;
			};
		}
	_iter_next_1aad796b3:;
	}
	_iter_end_1aad796b3:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _202028de3_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_2020283a9_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1aad80631:;
					{
						_37128_lit = _202026b05_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2020286ea_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1aad806a8:;
					{
						_37128_lit = _2020267b4_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_202027c27_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1aad80730:;
					{
						_37128_lit = _202026132_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_202028068_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1aad807a7:;
					{
						_37128_lit = _202026473_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_2020216d2_is_hex(_38313_b))))) {
					_case_begin_1aad8082e:;
					{
						goto _iter_end_1aad7e9c6;
					}
				}
				_match_end_1aad80543:;
			};
		}
	_iter_next_1aad7e9c6:;
	}
	_iter_end_1aad7e9c6:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _202029234_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_2020216d2_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1aad83c83:;
	}
	_iter_end_1aad83c83:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _2020294ed_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _202029234_hex_escape(_42230_txt,10LL);
}



inline jule::Str _2020296b8_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _202029234_hex_escape(_42733_txt,6LL);
}



inline jule::Str _202029971_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _202029234_hex_escape(_43221_txt,4LL);
}



inline jule::Str _202029c18_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_20202143a_is_octal(_43717_txt[1LL]))) || (!(_20202143a_is_octal(_43717_txt[2LL])))) || (!(_20202143a_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_201be0d52_Log> _20202e712_lex(jule::Ptr<_20202276b_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_20202a400_Lex _83713_lex = _20202a400_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_20202ce91_new_line(&_83713_lex);
	_20202ae8e_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::I64 _1be0d6896_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1be0de0a7_len64(_6124_x)));
}



inline jule::I64 _1be0d78ec_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1be0d858a_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1be0d82e3_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1be0d704a_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1be0d858a_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1be0d7699_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1be0ddd10_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1be0de0a7_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1be0dec67_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1be0e13ea_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1be00a4e0_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1be00a7cb_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1be00aa73_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1be00ad92_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1be00d49e_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1ab01ca76:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1be09517e_is_inf(_4718_f,0LL) || _1be08ca4a_is_nan(_4718_f)) {
			_case_begin_1ab01caed:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1ab01c988:;
	};
	std::tie(_4718_f,_4739_exp) = _1be09dcc0_normalize(_4718_f);
	jule::U64 _5613_x = _1be00aa73_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1be00ad92_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1be082e2a_nan(void) {
	return static_cast<jule::F64>(_1be00ad92_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1be08ca4a_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1be093138_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1be00ad92_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1be00ad92_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1be09517e_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1be09dcc0_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1be0d3cd3_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1be06a253_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1be08ca4a_is_nan(_11112_x) || _1be09517e_is_inf(_11112_x,1LL)) {
			_case_begin_1ab064caa:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1ab064d32:;
			{
				return static_cast<jule::F64>(_1be082e2a_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1ab064da9:;
			{
				return static_cast<jule::F64>(_1be093138_inf(-1LL));
			}
		}
		_match_end_1ab064bde:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1be00d49e_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1be0d3cd3_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1be00ad92_f64_from_bits(static_cast<jule::U64>((_1be00aa73_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1be0e9c94_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1be0d3cd3_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1ab0d53ad:;
		}
		_iter_end_1ab0d53ad:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1be0ea558_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1be00d49e_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1be06a253_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1bda4ec05_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1bda50772_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1bdc582c6_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1bda50772_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1bdbe553d_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab308878:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1be00a4e0_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1bdbe553d_FloatInfo>)((&(_1bda40454_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab308900:;
			{
				_8313_bits=static_cast<jule::U64>(_1be00aa73_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1bdbe553d_FloatInfo>)((&(_1bda45943_F64_INFO))));
			}
		}
		else {
			_case_begin_1ab307e3d:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1ab30826d:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1ab30c0eb:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1ab30e64d:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1ab30e7d5:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1ab30d5d6:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1ab30d509:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ab30cb46:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1ab3084d2:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1ab30c096:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1bdbc2cac_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1bdbe6594_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1bdae6175_DecimalSlice _13213_digs = _1bdae6175_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1bdaaa986_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab314444:;
				{
					_8259_prec=static_cast<jule::I64>(_1bdc582c6_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab3144aa:;
				{
					_8259_prec=static_cast<jule::I64>(_1bdc582c6_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab314565:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1ab313553:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab316d3c:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab316336:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1ab3167a9:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1ab316754:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1bde8d682_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1bdee570b_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1bda64ed4_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1bdabd713_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1bda64ed4_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1bdbe553d_FloatInfo& _18327_flt) {
	_1be126ce3_Decimal _18413_d = _1be126ce3_Decimal{};;
	_1be126ed0_assign(&_18413_d, _1835_mant);
	_1be127112_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1bdae6175_DecimalSlice _18713_digs = _1bdae6175_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1bdae5806_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1bdae6175_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab31c529:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab320175:;
				{
					_18234_prec=static_cast<jule::I64>(_1bdc582c6_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab3201db:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1ab31e3b6:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab321a17:;
				{
					_1be1274a8_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab321a8e:;
				{
					_1be1274a8_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab321b16:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1be1274a8_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1ab321918:;
		};
		_18713_digs=_1bdae6175_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1bdabd713_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1bdabd713_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1bdae6175_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ab325741:;
			{
				return _1bdb06dbc_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab3257a7:;
			{
				return _1bdb08550_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ab32581d:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1bdb06dbc_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1bdb08550_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1bdc582c6_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1ab3255ed:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1bdae5806_round_shortest(_1be126ce3_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1bdbe553d_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1be126ce3_Decimal _28713_upper = _1be126ce3_Decimal{};;
	_1be126ed0_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1be127112_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1be126ce3_Decimal _30613_lower = _1be126ce3_Decimal{};;
	_1be126ed0_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1be127112_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1ab334475;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1ab3397bb:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1ab339843:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1ab3398ba:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1ab339700:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1ab33ca66:;
					{
						_1be1274a8_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1ab33cacc:;
					{
						_1be127244_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1ab33cb54:;
					{
						_1be127376_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1ab33c9bc:;
			};
		}
	_iter_next_1ab334475:;
	}
	_iter_end_1ab334475:;;
}



inline jule::Slice<jule::U8> _1bdb06dbc_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1bdae6175_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1bdbeb973_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1ab342917:;
		}
		_iter_end_1ab342917:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1ab345640:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1ab346e7c:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ab345266:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ab345552:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1bdb08550_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1bdae6175_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1bdbeb973_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1ab349d3c:;
		}
		_iter_end_1ab349d3c:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1ab34b7de:;
		}
		_iter_end_1ab34b7de:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1bdbc2cac_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1bdbe553d_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1be128eb0_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1be128eb0_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1bdbe6594_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1bdbe553d_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ab35255e:;
	}
	_iter_end_1ab35255e:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ab352d9a:;
		}
		_iter_end_1ab352d9a:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ab359764:;
		}
		_iter_end_1ab359764:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1bdc785b0_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ab35c7de:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ab35ecca:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ab35c2e4:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ab35ca75:;
	};
	return _50614_dst;
}



inline jule::I64 _1bdbeb973_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1bdc582c6_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1bdc785b0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1bdc9ad74___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1ab364b8c:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1ab364a38:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1bdc785b0_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1ab366908:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1bdc785b0_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1ab36671b:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1bdc785b0_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1ab366793:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ab366375:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1ab366298:;
					};
				};
			}
		}
		else {
			_case_begin_1ab363c8a:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1ab363c35:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ab36b90d:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab36b04a:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ab36b314:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1ab36b18d:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab36b402:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab36caa7:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1ab36ca52:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1ab36dab9:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ab370219:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1bdc785b0_lower(_10912_c)) && (_1bdc785b0_lower(_10912_c) <= 'z'))) {
						_case_begin_1ab3700d7:;
						{
							_11017_d=static_cast<jule::U8>(((_1bdc785b0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ab37014d:;
						{
							goto _iter_next_1ab36dab9;
						}
					}
					else {
						_case_begin_1ab36eb53:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1ab36eadc:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1ab36dab9:;
			++it;
			goto _iter_begin_1ab36dab9;
		}
		_iter_end_1ab36dab9:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1bdd2d0d2_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1bdc9ad74___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1bdd4e873_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1bdc9ad74___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1bda41532_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1be00ad92_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1be0d6896_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1be0e13ea_mul64(_4123_man,_1bdae2a67_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1be0e13ea_mul64(_4123_man,_1bdae2a67_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1be00ad92_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1bddb838c_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1be00a7cb_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1be0d6896_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1be0e13ea_mul64(_11023_man,_1bdae2a67_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1be0e13ea_mul64(_11023_man,_1bdae2a67_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1be00a7cb_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1bdb05d11_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1ab3984a6:;
	}
	_iter_end_1ab3984a6:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1bdcdd16e_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ab39cdb2:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1ab39ce39;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ab39ce39:;
			{
				jule::I64 _8317_case_n = _1bdb05d11_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1be093138_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ab39ceb1:;
			{
				if ((_1bdb05d11_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1be082e2a_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1ab39cce6:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1bddbde0e_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1ab3a4490:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1ab3a4506:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1ab3a42b4:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1bdc785b0_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1ab3aaa29:;
					{
						goto _iter_next_1ab3a9e24;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1ab3aaaa1:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1ab3a9e24;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1ab3aab28:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1ab3a9e24;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1ab3a9e24;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1bdc785b0_lower(_13313_c))) && (_1bdc785b0_lower(_13313_c) <= 'f'))) {
					_case_begin_1ab3aaba0:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1bdc785b0_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1ab3a9e24;
					}
				}
				_match_end_1ab3aa94c:;
			};
			goto _iter_end_1ab3a9e24;
		}
	_iter_next_1ab3a9e24:;
	}
	_iter_end_1ab3a9e24:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1bdc785b0_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1ab3b578c;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1ab3b578c:;
		}
		_iter_end_1ab3b578c:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1bda65a73_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1bda45943_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1ab3c1039:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1ab3c10b1:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1bdb4c86e_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1bdb4c86e_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1ab3c1138:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1bdb4c86e_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1ab3c0e7e:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1bda87457_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1bda40454_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1ab3c6160:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1ab3c61d7:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1bdbb45ea_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1bdbb45ea_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1ab3c625e:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1bdbb45ea_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1ab3c60a5:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1bdacba73_atof_hex(jule::Str _55113_s, _1bdbe553d_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1ab3cbbb0:;
	}
	_iter_end_1ab3cbbb0:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1ab3cc177:;
	}
	_iter_end_1ab3cc177:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1ab3cdcb1:;
	}
	_iter_end_1ab3cdcb1:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1bda40454_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1be00a7cb_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1be00ad92_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1bdb2c2cc_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1bdcdd16e_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1bddbde0e_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1bdacba73_atof_hex(_61611_s.slice(0LL,_61629_n),_1bda40454_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1bda87457_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1bddb838c_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1bddb838c_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1be126ce3_Decimal _66213_d = _1be126ce3_Decimal{};;
	if ((!(_1bdde94de_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1bde3c994_float_bits(&_66213_d, _1bda40454_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1be00a7cb_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1bdca263e_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1bdcdd16e_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1bddbde0e_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1bdacba73_atof_hex(_67411_s.slice(0LL,_67429_n),_1bda45943_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1bda65a73_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1bda41532_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1bda41532_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1be126ce3_Decimal _71913_d = _1be126ce3_Decimal{};;
	if ((!(_1bdde94de_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1bde3c994_float_bits(&_71913_d, _1bda45943_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1be00ad92_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1bdd2d6ed_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1bdb2c2cc_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1bdca263e_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1bdd79ace_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1bdd2d6ed_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1bde8d682_ryu_ftoa_fixed32(_1bdae6175_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1be0ddd10_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1bdae7a5b_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1be125ece_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1be126243_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1bdeec191_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1bdee570b_ryu_ftoa_fixed64(_1bdae6175_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1be0de0a7_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1bdae7a5b_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1be126111_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1be126243_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1bdeec191_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1bdeec191_format_decimal(_1bdae6175_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1bdbe76b6_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1ab41d95a:;
	}
	_iter_end_1ab41d95a:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1ab422453:;
	}
	_iter_end_1ab422453:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1ab427a96:;
	}
	_iter_end_1ab427a96:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1bdaaa986_ryu_ftoa_shortest(_1bdae6175_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1bdbe553d_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1be0d858a_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1bde8b96b_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1bdb07571_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1bde8b96b_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1bdae7a5b_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1bda40454_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1be125ece_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1be125ece_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1be125ece_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1be126111_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1be126111_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1be126111_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1be126243_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1be126243_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1be126243_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1bde8b96b_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1bdae7a5b_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1bdb06680_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1bdb07571_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1bdbe553d_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1bde8b96b_ryu_digits(_1bdae6175_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1be126375_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1be126375_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1be126375_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1be125d9c_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1be125d9c_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1ab44a448:;
		}
		_iter_end_1ab44a448:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1be125d9c_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1ab44c769:;
	}
	_iter_end_1ab44c769:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1ab44dbcc:;
	}
	_iter_end_1ab44dbcc:;;
}



inline void _1be125d9c_ryu_digits32(_1bdae6175_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1ab45143d;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1ab45143d:;
	}
	_iter_end_1ab45143d:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ab45806b:;
	}
	_iter_end_1ab45806b:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1be125ece_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1bdae2a67_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1be0e13ea_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1bdb06680_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1be126111_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1bdae2a67_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1bdb06680_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1be0e13ea_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1be0e13ea_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1be0dec67_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1be126243_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1ab468048:;
	}
	_iter_end_1ab468048:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1be126375_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1be12784e_trim(_1be126ce3_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1ab46c6ce:;
	}
	_iter_end_1ab46c6ce:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1be127981_right_shift(_1be126ce3_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1ab470a78:;
				}
				_iter_end_1ab470a78:;;
				goto _iter_end_1ab46e505;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1ab46e505:;
	}
	_iter_end_1ab46e505:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1ab473350:;
	}
	_iter_end_1ab473350:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1ab473eaa:;
	}
	_iter_end_1ab473eaa:;;
	_34321_a._field_nd=_34513_w;
	_1be12784e_trim(_34321_a);
}



inline jule::Bool _1be127ab3_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1ab477d6b:;
	}
	_iter_end_1ab477d6b:;;
	return false;
}



inline void _1be127be5_left_shift(_1be126ce3_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1bdc1db71_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1be127ab3_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1bdc1db71_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1ab47b886:;
	}
	_iter_end_1ab47b886:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1ab47dea4:;
	}
	_iter_end_1ab47dea4:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1be12784e_trim(_41120_a);
}



inline jule::Bool _1be127d27_should_round_up(_1be126ce3_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1be1288a5_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1be128c4b_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1be128eb0_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1be1289d7_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1be128c4b_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1be128eb0_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1be128b19_itoa(jule::I64 _8013_i) {
	return _1be1289d7_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1be128c4b_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1be128d7d_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1be128eb0_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1ab4bea1c:;
		}
		_iter_end_1ab4bea1c:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1be128d7d_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1be0d78ec_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1ab4c863b:;
		}
		_iter_end_1ab4c863b:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1ab4cb4eb:;
		}
		_iter_end_1ab4cb4eb:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1be1ba491_lshift_unsig(_1be159e14_Const& _58722_c, _1be159e14_Const& _58733_x) {
	jule::U64 _5889_l = _1be1b44e0_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1be1b44e0_as_u64(&_58733_x);;
	_1be1b4c4e_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1be1ba78d_rshift_unsig(_1be159e14_Const& _59322_c, _1be159e14_Const& _59333_x) {
	jule::U64 _5949_l = _1be1b44e0_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1be1b44e0_as_u64(&_59333_x);;
	_1be1b4c4e_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::Str _1be24ab81_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab55b27e:;
			{
				return _1be24a378_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab55b2e5:;
			{
				return _1be24a5dc_SYS_UINT;
			}
		}
		else {
			_case_begin_1ab55b6e1:;
			{
				return _4521_kind;
			}
		}
		_match_end_1ab55bceb:;
	};
}



inline jule::I64 _1be24ae28_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab562d02:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab562d68:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab56283a:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab5628a1:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1ab562917:;
			{
				return _1be2427c1_BIT_SIZE;
			}
		}
		else {
			_case_begin_1ab56265e:;
			{
				return -1LL;
			}
		}
		_match_end_1ab556be7:;
	};
}



inline jule::Str _1be24b247_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ab564919:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab564980:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab5649e6:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab564b06:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1ab563c9d:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab5647e8:;
	};
}



inline jule::Str _1be24b4de_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ab565c8e:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab565d05:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab565d6b:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab566168:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1ab565310:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab5651bc:;
	};
}



inline jule::Str _1be24b786_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab567279:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab5672e0:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1ab566850:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab56670c:;
	};
}



inline jule::Bool _1be24c336_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1bdd79ace_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1be24c5cd_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ab56c2c3:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ab56c23a:;
			{
				return 64LL;
			}
		}
		_match_end_1ab56cceb:;
	};
}



inline jule::I64 _1be24c875_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1ab56d9ab:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1ab56da22:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1ab56da99:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ab56d77a:;
			{
				return 64LL;
			}
		}
		_match_end_1ab56d69d:;
	};
}



inline jule::I64 _1be24cb1c_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1ab570826:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1ab57088c:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1ab570914:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ab57076b:;
			{
				return 64LL;
			}
		}
		_match_end_1ab570d98:;
	};
}



inline void _1be24cc82_update_target(void) {
	{
		{
			auto &_match_expr{ _201c12b32_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ab57178e:;
				{
					_1be2427c1_BIT_SIZE=64LL;
					_1be24a378_SYS_INT=jule::Str("i64", 3);
					_1be24a5dc_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ab5720a8:;
				{
					_1be2427c1_BIT_SIZE=32LL;
					_1be24a378_SYS_INT=jule::Str("i32", 3);
					_1be24a5dc_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1ab5716b2:;
		};
	};
}



inline void _1be24cde7_init(void) {
	_1be24cc82_update_target();
}



inline jule::F64 _1be2521a4_min(jule::Str _6116_k) {
	_6116_k=_1be24ab81_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab574eac:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab575023:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab57493a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab5749b2:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab574a39:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab574c04:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1ab574781:;
			{
				return 0LL;
			}
		}
		_match_end_1ab5727b2:;
	};
}



inline jule::F64 _1be252490_max(jule::Str _8316_k) {
	_8316_k=_1be24ab81_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab574c6a:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab5766a6:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab57671c:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab576783:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab5767e9:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab576ac4:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab576b3a:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab576ba1:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab576c28:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab576ca0:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1ab576574:;
			{
				return 0LL;
			}
		}
		_match_end_1ab576101:;
	};
}



inline jule::Bool _1be252814_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1be252b00_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1be252d97_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1be2531b6_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1be25345d_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1be253705_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1be25399c_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1be253d21_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1be2540b8_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1be254360_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1be2546a1_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ab580292:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab580506:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab58056c:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab5805d3:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab580649:;
			{
				return _1be252814_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab5806b0:;
			{
				return _1be252b00_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab580726:;
			{
				return _1be252d97_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab58078c:;
			{
				return _1be2531b6_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab580814:;
			{
				return _1be25345d_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab58087a:;
			{
				return _1be253705_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab580902:;
			{
				return _1be25399c_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab580979:;
			{
				return _1be253d21_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab580a01:;
			{
				return _1be2540b8_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab580a78:;
			{
				return _1be254360_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ab580b00:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ab580b77:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1ab580050:;
			{
				return false;
			}
		}
		_match_end_1ab57ee84:;
	};
}



inline jule::Bool _1be254948_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1be254be0_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1be254e87_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1be25522e_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1be255680_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1be255927_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1be255bbe_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1be255e66_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1be2562a7_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab589147:;
			{
				return _1be2572db_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab5891ad:;
			{
				return _1be2575c7_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab5893ab:;
			{
				return _1be2575c7_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab589422:;
			{
				return _1be254948_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab589488:;
			{
				return _1be254be0_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab589510:;
			{
				return _1be254e87_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab589587:;
			{
				return _1be25522e_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab58960e:;
			{
				return _1be255680_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab5896db:;
			{
				return _1be255927_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab589752:;
			{
				return _1be255bbe_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab5897b8:;
			{
				return _1be255e66_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ab58982e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab588e05:;
			{
				return false;
			}
		}
		_match_end_1ab5887d9:;
	};
}



inline jule::Bool _1be2572db_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1be2575c7_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1be25786e_is_int(jule::Str _4615_k) {
	return (_1be2572db_is_sig_int(_4615_k) || _1be2575c7_is_unsig_int(_4615_k));
}



inline jule::Bool _1be257b8d_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1be257e35_is_num(jule::Str _5615_k) {
	return (_1be25786e_is_int(_5615_k) || _1be257b8d_is_float(_5615_k));
}



inline jule::Bool _1be380535_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1be3922b1_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1be394505_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _200ba716b_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1be37bb3b_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1be393e50_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1be394846_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _200ba716b_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_200ba84d0_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1ab598750:;
	}
	_iter_end_1ab598750:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1be3941e7_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ab59cd92:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ab59ce08:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ab59ce6e:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ab59ced5:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ab59d05c:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab59d0d4:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ab59d15b:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ab59d1d3:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ab59d25a:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ab59d2d2:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1ab59cc71:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1be394505_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1be3941e7_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1ab5a3a02:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1bdd2d0d2_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab5a4382:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1bdd2d0d2_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab5a2814:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1bdd2d0d2_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1ab5a29ce:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1bdd2d0d2_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1ab5a2979:;
	};
}



inline jule::Slice<jule::U8> _1be394846_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1be394505_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1be47db94_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _200ba716b_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1ab5e22d2:;
	}
	_iter_end_1ab5e22d2:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1be44d24b_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _200ba716b_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1ab5e5109:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ab5e5181:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1ab5e4bec:;
			};
		}
	_iter_next_1ab5e41d5:;
	}
	_iter_end_1ab5e41d5:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1be44ca31_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1ab5e7150:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1bda4ec05_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab5e6ced:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1bda4ec05_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1ab5e5516:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1289d7_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1ab5e557c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1289d7_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1ab5e69e0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1289d7_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab5e6a56:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1289d7_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1ab5e6abc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1288a5_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1ab5e6b33:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1288a5_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1ab5e6b99:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1288a5_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab5e71c7:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be1288a5_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ab5e723d:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1ab5e72a4:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1ab5e438e:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1ab5e4339:;
	};
}



inline jule::Slice<jule::U8> _1be45c645_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1be44ca31_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1be4662ca_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1be45c645_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1be48059c_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1be47db94_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1be47db94_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1be44d24b_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1ab60448c;
			};
			_11213_bytes=jule::append(_11213_bytes,_1be4662ca_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1ab60448c;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1ab60448c:;
	}
	_iter_end_1ab60448c:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1be47e854_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1be48059c_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1bc9ca632_parameter_uses_generics(jule::Ptr<_1bc9c9686_Param>& _39329_p, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>& _39341_generics) {
	if (_1d708990d_is_self(_39329_p.ptr())) {
		return false;
	};
	return _1be3eab33_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_1be3d86c0_TypeSymbol> _1bc9ccb1d_build_type(jule::Ptr<_1d709023d_TypeDecl> _9419_t) {
	if ((_9419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_decl=_9419_t, });
}



inline jule::Ptr<_1be3aa362_Value> _1bc9cce09_build_expr(jule::Ptr<_1d709475e_Expr> _10319_expr) {
	if ((_10319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_expr=_10319_expr, });
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1bc9cd1a1_build_type_alias(jule::Ptr<_1d70a65a6_TypeAliasDecl> _11225_decl) {
	return jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_scope=_11225_decl.get()._field_scope, ._field_public=_11225_decl.get()._field_public, ._field_cpp_linked=_11225_decl.get()._field_cpp_linked, ._field_token=_11225_decl.get()._field_token, ._field_ident=_11225_decl.get()._field_ident, ._field_kind=_1bc9ccb1d_build_type(_11225_decl.get()._field_kind), });
}



inline jule::Ptr<_1d7080926_Field> _1bc9cd4c0_build_field(jule::Ptr<_1d70a9c4c_FieldDecl> _12320_decl) {
	return jule::new_ptr<_1d7080926_Field>(_1d7080926_Field{._field_token=_12320_decl.get()._field_token, ._field_public=_12320_decl.get()._field_public, ._field_mutable=_12320_decl.get()._field_mutable, ._field_ident=_12320_decl.get()._field_ident, ._field_kind=_1bc9ccb1d_build_type(_12320_decl.get()._field_kind), ._field_default=_12320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1d7080926_Field>> _1bc9cd767_build_fields(jule::Slice<jule::Ptr<_1d70a9c4c_FieldDecl>>& _13422_decls) {
	jule::Slice<jule::Ptr<_1d7080926_Field>> _13513_fields = jule::Slice<jule::Ptr<_1d7080926_Field>>::alloc(0LL,_13422_decls.len());;
	{
		auto &expr = _13422_decls;
		auto it = expr.begin();
		_iter_begin_1ab846ea4:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a9c4c_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1bc9cd4c0_build_field(_13617_decl));;
			}
			_iter_next_1ab846ea4:;
			++it;
			goto _iter_begin_1ab846ea4;
		}
		_iter_end_1ab846ea4:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1d7073276_Struct> _1bc9cda0e_build_struct(jule::Ptr<_1d70aa500_StructDecl> _14221_decl) {
	return jule::new_ptr<_1d7073276_Struct>(_1d7073276_Struct{._field_token=_14221_decl.get()._field_token, ._field_ident=_14221_decl.get()._field_ident, ._field_fields=_1bc9cd767_build_fields(_14221_decl.get()._field_fields), ._field_public=_14221_decl.get()._field_public, ._field_cpp_linked=_14221_decl.get()._field_cpp_linked, ._field_directives=_14221_decl.get()._field_directives, ._field_generics=_14221_decl.get()._field_generics, });
}



inline jule::Ptr<_1bc9c9686_Param> _1bc9cdca6_build_param(jule::Ptr<_1d70a0946_ParamDecl> _15420_decl) {
	return jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_token=_15420_decl.get()._field_token, ._field_mutable=_15420_decl.get()._field_mutable, ._field_variadic=_15420_decl.get()._field_variadic, ._field_reference=_15420_decl.get()._field_reference, ._field_kind=_1bc9ccb1d_build_type(_15420_decl.get()._field_kind), ._field_ident=_15420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1bc9c9686_Param>> _1bc9ce12a_build_params(jule::Slice<jule::Ptr<_1d70a0946_ParamDecl>>& _16522_decls) {
	jule::Slice<jule::Ptr<_1bc9c9686_Param>> _16613_params = jule::Slice<jule::Ptr<_1bc9c9686_Param>>::alloc(0LL,_16522_decls.len());;
	{
		auto &expr = _16522_decls;
		auto it = expr.begin();
		_iter_begin_1ab849d97:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a0946_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1bc9cdca6_build_param(_16717_decl));;
			}
			_iter_next_1ab849d97:;
			++it;
			goto _iter_begin_1ab849d97;
		}
		_iter_end_1ab849d97:;
	};
	return _16613_params;
}



inline jule::Ptr<_1bc9c9499_RetType> _1bc9ce3c2_build_ret_type(jule::Ptr<_1d7093351_RetTypeDecl> _17323_decl) {
	if (((_17323_decl.get()._field_idents == nullptr) && (_17323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1bc9c9499_RetType>(_1bc9c9499_RetType{._field_kind=_1bc9ccb1d_build_type(_17323_decl.get()._field_kind), ._field_idents=_17323_decl.get()._field_idents});
}



inline jule::Ptr<_1bc9c9873_Fn> _1bc9ce669_build_fn(jule::Ptr<_1d70a1c66_FnDecl> _18317_decl) {
	return jule::new_ptr<_1bc9c9873_Fn>(_1bc9c9873_Fn{._field_token=_18317_decl.get()._field_token, ._field_global=_18317_decl.get()._field_global, ._field_unsafety=_18317_decl.get()._field_unsafety, ._field_public=_18317_decl.get()._field_public, ._field_cpp_linked=_18317_decl.get()._field_cpp_linked, ._field_statically=_18317_decl.get()._field_statically, ._field_exceptional=_18317_decl.get()._field_exceptional, ._field_ident=_18317_decl.get()._field_ident, ._field_directives=_18317_decl.get()._field_directives, ._field_scope=_18317_decl.get()._field_scope, ._field_generics=_18317_decl.get()._field_generics, ._field_result=_1bc9ce3c2_build_ret_type(_18317_decl.get()._field_result), ._field_params=_1bc9ce12a_build_params(_18317_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _1bc9ce911_build_methods(jule::Slice<jule::Ptr<_1d70a1c66_FnDecl>>& _20123_decls) {
	jule::Slice<jule::Ptr<_1bc9c9873_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1bc9c9873_Fn>>::alloc(0LL,_20123_decls.len());;
	{
		auto &expr = _20123_decls;
		auto it = expr.begin();
		_iter_begin_1ab84db6a:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a1c66_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1bc9ce669_build_fn(_20317_decl));;
			}
			_iter_next_1ab84db6a:;
			++it;
			goto _iter_begin_1ab84db6a;
		}
		_iter_end_1ab84db6a:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1bd929d66_Trait> _1bc9ceba8_build_trait(jule::Ptr<_1d70aab0a_TraitDecl> _20920_decl) {
	return jule::new_ptr<_1bd929d66_Trait>(_1bd929d66_Trait{._field_token=_20920_decl.get()._field_token, ._field_ident=_20920_decl.get()._field_ident, ._field_public=_20920_decl.get()._field_public, ._field_methods=_1bc9ce911_build_methods(_20920_decl.get()._field_methods), });
}



inline jule::Ptr<_1bcb66966_EnumItem> _1bc9cee50_build_enum_item(jule::Ptr<_1d70a7e15_EnumItemDecl> _21824_decl) {
	return jule::new_ptr<_1bcb66966_EnumItem>(_1bcb66966_EnumItem{._field_token=_21824_decl.get()._field_token, ._field_ident=_21824_decl.get()._field_ident, ._field_value=_1bc9cce09_build_expr(_21824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1bcb66966_EnumItem>> _1bc9d01e7_build_enum_items(jule::Slice<jule::Ptr<_1d70a7e15_EnumItemDecl>>& _22626_decls) {
	jule::Slice<jule::Ptr<_1bcb66966_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1bcb66966_EnumItem>>::alloc(0LL,_22626_decls.len());;
	{
		auto &expr = _22626_decls;
		auto it = expr.begin();
		_iter_begin_1ab851420:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a7e15_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1bc9cee50_build_enum_item(_22817_decl));;
			}
			_iter_next_1ab851420:;
			++it;
			goto _iter_begin_1ab851420;
		}
		_iter_end_1ab851420:;
	};
	return _22713_items;
}



inline jule::Ptr<_1bc9dceb3_Enum> _1bc9d048e_build_enum(jule::Ptr<_1d70a893d_EnumDecl> _23419_decl) {
	return jule::new_ptr<_1bc9dceb3_Enum>(_1bc9dceb3_Enum{._field_token=_23419_decl.get()._field_token, ._field_public=_23419_decl.get()._field_public, ._field_ident=_23419_decl.get()._field_ident, ._field_kind=_1bc9ccb1d_build_type(_23419_decl.get()._field_kind), ._field_items=_1bc9d01e7_build_enum_items(_23419_decl.get()._field_items)});
}



inline jule::Ptr<_1bcb58ddc_TypeEnumItem> _1bc9d08e0_build_type_enum_item(jule::Ptr<_1d70a9444_TypeEnumItemDecl> _24429_decl) {
	return jule::new_ptr<_1bcb58ddc_TypeEnumItem>(_1bcb58ddc_TypeEnumItem{._field_token=_24429_decl.get()._field_token, ._field_ident=_24429_decl.get()._field_ident, ._field_kind=_1bc9ccb1d_build_type(_24429_decl.get()._field_kind)});
}



inline jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>> _1bc9d0b87_build_type_enum_items(jule::Slice<jule::Ptr<_1d70a9444_TypeEnumItemDecl>>& _25231_decls) {
	jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1bcb58ddc_TypeEnumItem>>::alloc(0LL,_25231_decls.len());;
	{
		auto &expr = _25231_decls;
		auto it = expr.begin();
		_iter_begin_1ab853e6c:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a9444_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1bc9d08e0_build_type_enum_item(_25417_decl));;
			}
			_iter_next_1ab853e6c:;
			++it;
			goto _iter_begin_1ab853e6c;
		}
		_iter_end_1ab853e6c:;
	};
	return _25313_items;
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1bc9d0e2e_build_type_enum(jule::Ptr<_1d70a9a4e_TypeEnumDecl> _26024_decl) {
	return jule::new_ptr<_1bd9c99a4_TypeEnum>(_1bd9c99a4_TypeEnum{._field_token=_26024_decl.get()._field_token, ._field_public=_26024_decl.get()._field_public, ._field_ident=_26024_decl.get()._field_ident, ._field_items=_1bc9d0b87_build_type_enum_items(_26024_decl.get()._field_items)});
}



inline jule::Ptr<_1be36365b_Var> _1bc9d11c6_build_var(jule::Ptr<_1d70a2c45_VarDecl> _26918_decl) {
	return jule::new_ptr<_1be36365b_Var>(_1be36365b_Var{._field_token=_26918_decl.get()._field_token, ._field_ident=_26918_decl.get()._field_ident, ._field_cpp_linked=_26918_decl.get()._field_cpp_linked, ._field_constant=_26918_decl.get()._field_constant, ._field_mutable=_26918_decl.get()._field_mutable, ._field_public=_26918_decl.get()._field_public, ._field_statically=_26918_decl.get()._field_statically, ._field_reference=_26918_decl.get()._field_reference, ._field_kind=_1bc9ccb1d_build_type(_26918_decl.get()._field_kind), ._field_value=_1bc9cce09_build_expr(_26918_decl.get()._field_expr), ._field_refers=static__1bc9cb6dd_new(), ._field_directives=_26918_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1be36365b_Var>> _1bc9d146d_build_vars(jule::Slice<jule::Ptr<_1d70a2c45_VarDecl>> _28619_decls) {
	jule::Slice<jule::Ptr<_1be36365b_Var>> _28713_vars = jule::Slice<jule::Ptr<_1be36365b_Var>>::alloc(0LL,_28619_decls.len());;
	{
		auto &expr = _28619_decls;
		auto it = expr.begin();
		_iter_begin_1ab85747b:;
		if (it != expr.end()) {
			jule::Ptr<_1d70a2c45_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1bc9d11c6_build_var(_28817_decl));;
			}
			_iter_next_1ab85747b:;
			++it;
			goto _iter_begin_1ab85747b;
		}
		_iter_end_1ab85747b:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1bcac892d_Impl> _1bc9d1715_build_impl(jule::Ptr<_1d70ab215_Impl> _29419_decl) {
	return jule::new_ptr<_1bcac892d_Impl>(_1bcac892d_Impl{._field_base=_29419_decl.get()._field_base, ._field_dest=_29419_decl.get()._field_dest, ._field_methods=_1bc9ce911_build_methods(_29419_decl.get()._field_methods), ._field_statics=_1bc9d146d_build_vars(_29419_decl.get()._field_statics)});
}



inline jule::Ptr<_1be25aee3_ScopeChecker> _1be1e2034_new_scope_checker_base(jule::Ptr<_1be348311_Sema>& _5932_s, jule::Ptr<_1bc9c9c4c_FnIns> _5946_owner) {
	return jule::new_ptr<_1be25aee3_ScopeChecker>(_1be25aee3_ScopeChecker{._field_s=_5932_s, ._field_owner=_5946_owner, ._field_table=jule::new_ptr<_1be3a4339_SymbolTable>(), });
}



inline jule::Ptr<_1be25aee3_ScopeChecker> _1be1e3ae6_new_scope_checker(jule::Ptr<_1be348311_Sema>& _6727_s, jule::Ptr<_1bc9c9c4c_FnIns> _6741_owner) {
	jule::Ptr<_1be25aee3_ScopeChecker> _6813_base = _1be1e2034_new_scope_checker_base(_6727_s,_6741_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1be25a410_ScopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1be25a5ec_ScopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1be25a410_ScopeLabel> _1be207e3a_find_label_parent(jule::Str _7722_ident, jule::Ptr<_1be25aee3_ScopeChecker> _7738_scope) {
	jule::Ptr<_1be25a410_ScopeLabel> _7813_label = _1be25e986_find_label_scope(_7738_scope, _7722_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7738_scope.get()._field_parent == nullptr) || (_7738_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7738_scope=_7738_scope.get()._field_parent;
			_7813_label=_1be25e986_find_label_scope(_7738_scope, _7722_ident);
		}
	_iter_next_1ab8bc59b:;
	}
	_iter_end_1ab8bc59b:;;
	return _7813_label;
}



inline jule::Bool _1be223043_model_is_goto_scope(jule::Any _9124_model, jule::Ptr<_1be1ca25e_Scope>& _9137_sc) {
	{
		auto &_match_expr{ _9124_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
			_case_begin_1ab8be58c:;
			{
				jule::Ptr<_1bc9c5066_FnCallExprModel> _9413_fcem = _9124_model.operator jule::Ptr<_1bc9c5066_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_except == _9137_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ab8be614:;
			{
				jule::Ptr<_1be3a92d9_Data> _9913_d = _9124_model.operator jule::Ptr<_1be3a92d9_Data>();;
				return _1be223043_model_is_goto_scope(jule::Any(_9913_d.get()._field_model),_9137_sc);
			}
		}
		_match_end_1ab8be504:;
	};
	return false;
}



inline jule::Bool _1be224d8b_stmt_is_goto_scope(jule::Any& _10524_stmt, jule::Ptr<_1be1ca25e_Scope>& _10537_sc) {
	{
		auto &_match_expr{ _10524_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1be1ca25e_Scope>>()) {
			_case_begin_1ab8c1803:;
			{
				return (_10524_stmt.operator jule::Ptr<_1be1ca25e_Scope>() == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2584eb_InfIter>>()) {
			_case_begin_1ab8c1869:;
			{
				return (_10524_stmt.operator jule::Ptr<_1be2584eb_InfIter>().get()._field_scope == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2588c5_RangeIter>>()) {
			_case_begin_1ab8c18d0:;
			{
				jule::Ptr<_1be2588c5_RangeIter> _11213_it = _10524_stmt.operator jule::Ptr<_1be2588c5_RangeIter>();;
				return ((_11213_it.get()._field_scope == _10537_sc) || _1be223043_model_is_goto_scope(jule::Any(_11213_it.get()._field_expr.get()._field_model),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be2586d8_WhileIter>>()) {
			_case_begin_1ab8c1a23:;
			{
				jule::Ptr<_1be2586d8_WhileIter> _11513_it = _10524_stmt.operator jule::Ptr<_1be2586d8_WhileIter>();;
				return (((_11513_it.get()._field_scope == _10537_sc) || _1be223043_model_is_goto_scope(jule::Any(_11513_it.get()._field_expr),_10537_sc)) || _1be223043_model_is_goto_scope(jule::Any(_11513_it.get()._field_next),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25992b_Match>>()) {
			_case_begin_1ab8c1a9a:;
			{
				jule::Ptr<_1be25992b_Match> _12013_m = _10524_stmt.operator jule::Ptr<_1be25992b_Match>();;
				{
					auto &expr = _12013_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1ab8c5890:;
					if (it != expr.end()) {
						jule::Ptr<_1be259d49_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_scope == _10537_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1ab8c68c4:;
								if (it != expr.end()) {
									jule::Ptr<_1be3a92d9_Data> &_12520_expr = *it;
									{
										if (_1be223043_model_is_goto_scope(jule::Any(_12520_expr.get()._field_model),_10537_sc)) {
											return true;
										};
									}
									_iter_next_1ab8c68c4:;
									++it;
									goto _iter_begin_1ab8c68c4;
								}
								_iter_end_1ab8c68c4:;
							};
						}
						_iter_next_1ab8c5890:;
						++it;
						goto _iter_begin_1ab8c5890;
					}
					_iter_end_1ab8c5890:;
				};
				return ((_12013_m.get()._field_default != nullptr) && (_12013_m.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be25830e_Conditional>>()) {
			_case_begin_1ab8c1b22:;
			{
				jule::Ptr<_1be25830e_Conditional> _13313_c = _10524_stmt.operator jule::Ptr<_1be25830e_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1ab8c8024:;
					if (it != expr.end()) {
						jule::Ptr<_1be2437b1_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_scope == _10537_sc) || _1be223043_model_is_goto_scope(jule::Any(_13416_elif.get()._field_expr),_10537_sc))) {
								return true;
							};
						}
						_iter_next_1ab8c8024:;
						++it;
						goto _iter_begin_1ab8c8024;
					}
					_iter_end_1ab8c8024:;
				};
				return ((_13313_c.get()._field_default != nullptr) && (_13313_c.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ab8c1b99:;
			{
				jule::Ptr<_1be3a92d9_Data> _14113_d = _10524_stmt.operator jule::Ptr<_1be3a92d9_Data>();;
				return _1be223043_model_is_goto_scope(jule::Any(_14113_d.get()._field_model),_10537_sc);
			}
		}
		else {
			_case_begin_1ab8be955:;
			{
				return false;
			}
		}
		_match_end_1ab8be900:;
	};
}



inline jule::I64 _1be226079_count_match_type(jule::Ptr<_1be25992b_Match>& _14822_m, jule::Ptr<_1be3d45ab_TypeKind>& _14834_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1be3d4963_to_str(_14834_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14822_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ab8cb269:;
		if (it != expr.end()) {
			jule::Ptr<_1be259d49_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1ab8cb269;
				};
				{
					auto &expr = _15212_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1ab8cbb0a:;
					if (it != expr.end()) {
						jule::Ptr<_1be3a92d9_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1ab8cb269;
							};
							if ((_1509_kind == _1be3d4963_to_str(_15716_expr.get()._field_model.operator jule::Ptr<_1be3d45ab_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1ab8cbb0a:;
						++it;
						goto _iter_begin_1ab8cbb0a;
					}
					_iter_end_1ab8cbb0a:;
				};
			}
			_iter_next_1ab8cb269:;
			++it;
			goto _iter_begin_1ab8cb269;
		}
		_iter_end_1ab8cb269:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1be3a92d9_Data>> _1be2267c7_get_datas_from_tuple_data(jule::Ptr<_1be3a92d9_Data>& _17235_d) {
	if ((_1be3d8318_tup(_17235_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17235_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1bc9c6c8d_TupleExprModel>>()) {
				_case_begin_1ab8d0db7:;
				{
					return _17235_d.get()._field_model.operator jule::Ptr<_1bc9c6c8d_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1ab8cd755:;
				{
					jule::Ptr<_1be3dd9e4_Tuple> _17821_t = _1be3d8318_tup(_17235_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1be3a92d9_Data>> _17921_r = jule::Slice<jule::Ptr<_1be3a92d9_Data>>::alloc(0LL,_17821_t.get()._field_types.len());;
					{
						auto &expr = _17821_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1ab8cea20:;
						if (it != expr.end()) {
							jule::Ptr<_1be3d45ab_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=_18025_kind, ._field_mutable=true, }));;
							}
							_iter_next_1ab8cea20:;
							++it;
							goto _iter_begin_1ab8cea20;
						}
						_iter_end_1ab8cea20:;
					};
					return _17921_r;
				}
			}
			_match_end_1ab8cd5ce:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1be3a92d9_Data>>::make({_17235_d});
	};
}



inline jule::Slice<jule::Any> _1be2295aa_get_expr_models(jule::Any& _19325_m) {
	{
		auto &_match_expr{ _19325_m };
		
		if (_match_expr.type_is<jule::Ptr<_1d70953db_TupleExpr>>()) {
			_case_begin_1ab8d1071:;
			{
				jule::Ptr<_1d70953db_TupleExpr> _19617_tup = _19325_m.operator jule::Ptr<_1d70953db_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_expr.len());;
				{
					auto &expr = _19617_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1ab8d289c:;
					if (it != expr.end()) {
						jule::Ptr<_1d709475e_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_kind);;
						}
						_iter_next_1ab8d289c:;
						++it;
						goto _iter_begin_1ab8d289c;
					}
					_iter_end_1ab8d289c:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1ab8d1417:;
			{
				return jule::Slice<jule::Any>::make({_19325_m});
			}
		}
		_match_end_1ab8d13b2:;
	};
}



inline jule::Bool _1be229d08_check_mut(jule::Ptr<_1be348311_Sema>& _20719_s, jule::Ptr<_1be3a92d9_Data>& _20730_left, jule::Ptr<_1be3a92d9_Data> _20747_right, jule::Ptr<_20201c3d1_Token> _20761_op) {
	jule::Bool _20775_ok = jule::Bool();
	{
		
		if ((!(_20730_left.get()._field_mutable))) {
			_case_begin_1ab8d4184:;
			{
				_1be34aec3_push_err(_20719_s.ptr(), _20761_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else if ((((_20747_right != nullptr) && (!(_20747_right.get()._field_mutable))) && _1be3d5964_mutable(_20747_right.get()._field_kind.ptr()))) {
			_case_begin_1ab8d42a5:;
			{
				if (((_20761_op.get()._field_kind != jule::Str("=", 1)) && (_1be3d7acb_strct(_20747_right.get()._field_kind.ptr()) != nullptr))) {
					_20775_ok = true;
					return _20775_ok;
				};
				_1be34aec3_push_err(_20719_s.ptr(), _20761_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_20747_right.get()._field_kind.ptr()))}));
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else {
			_case_begin_1ab8d3a79:;
			{
				_20775_ok = true;
				return _20775_ok;
			}
		}
		_match_end_1ab8d3084:;
	};
}



inline jule::Bool _1be232805_check_assign(jule::Ptr<_1be348311_Sema>& _22622_s, jule::Ptr<_1be3a92d9_Data>& _22637_left, jule::Ptr<_1be3a92d9_Data> _22654_right, jule::Ptr<_20201c3d1_Token> _22668_op) {
	jule::Bool _22682_ok = jule::Bool();
	jule::Ptr<_1bc9c9c4c_FnIns> _2279_f = _1be3d7867_fnc(_22637_left.get()._field_kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_decl != nullptr)) && _2279_f.get()._field_decl.get()._field_global)) {
		_1be34aec3_push_err(_22622_s.ptr(), _22668_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22682_ok = false;
		return _22682_ok;
	};
	{
		
		if (_1be3a9b9c_is_const(_22637_left.ptr())) {
			_case_begin_1ab8d95a7:;
			{
				_1be34aec3_push_err(_22622_s.ptr(), _22668_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1be34b2e2_push_suggestion(_22622_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_22637_left.get()._field_lvalue))) {
			_case_begin_1ab8d9684:;
			{
				_1be34aec3_push_err(_22622_s.ptr(), _22668_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_1be229d08_check_mut(_22622_s,_22637_left,_22654_right,_22668_op)))) {
			_case_begin_1ab8d970b:;
			{
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else {
			_case_begin_1ab8d8e58:;
			{
				_22682_ok = true;
				return _22682_ok;
			}
		}
		_match_end_1ab8d8d04:;
	};
}



inline jule::Bool _1be233383_is_valid_ast_st_for_next_st(jule::Any& _24837_n) {
	{
		auto &_match_expr{ _24837_n };
		
		if (_match_expr.type_is<jule::Ptr<_1d709dbca_AssignSt>>()) {
			_case_begin_1ab8db455:;
			{
				return (!(_24837_n.operator jule::Ptr<_1d709dbca_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709475e_Expr>>()) {
			_case_begin_1ab8db4bb:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab8db763:;
			{
				return false;
			}
		}
		_match_end_1ab8db70d:;
	};
}



inline jule::Bool _1be234241_is_valid_st_for_next_st(jule::Any& _25929_st) {
	{
		auto &_match_expr{ _25929_st };
		
		if (_match_expr.type_is<jule::Ptr<_1be259365_Postfix>>() || _match_expr.type_is<jule::Ptr<_1be259552_Assign>>() || _match_expr.type_is<jule::Ptr<_1be25973e_MultiAssign>>()) {
			_case_begin_1ab8dc786:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1ab8dc7ec:;
			{
				{
					auto &_match_expr{ _25929_st.operator jule::Ptr<_1be3a92d9_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1bc9c5066_FnCallExprModel>>()) {
						_case_begin_1ab8ddbd8:;
						{
							return true;
						}
					}
					else {
						_case_begin_1ab8ddb72:;
						{
							return false;
						}
					}
					_match_end_1ab8ddac8:;
				};
			}
		}
		else {
			_case_begin_1ab8dc27a:;
			{
				return false;
			}
		}
		_match_end_1ab8dc18c:;
	};
}



inline jule::Bool _1be228224_stmt_is_def(jule::Any& _27717_st) {
	{
		auto &_match_expr{ _27717_st };
		
		if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1ab8de238:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab8dd149:;
			{
				return false;
			}
		}
		_match_end_1ab8de5ce:;
	};
}



inline jule::Ptr<_1be36365b_Var> _1be2708cb_find_var_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1aba64116:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1be36365b_Var> _4817_v = _1be3a501b_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1aba64116:;
			++it;
			goto _iter_begin_1aba64116;
		}
		_iter_end_1aba64116:;
	};
	return nullptr;
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be270d2c_find_type_alias_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1aba657bb:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1be3d3874_TypeAlias> _6017_ta = _1be3a53c3_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1aba657bb:;
			++it;
			goto _iter_begin_1aba657bb;
		}
		_iter_end_1aba657bb:;
	};
	return nullptr;
}



inline jule::Ptr<_1d7073276_Struct> _1be271228_find_struct_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1aba66e60:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1d7073276_Struct> _7217_s = _1be3a577a_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1aba66e60:;
			++it;
			goto _iter_begin_1aba66e60;
		}
		_iter_end_1aba66e60:;
	};
	return nullptr;
}



inline jule::Ptr<_1bc9c9873_Fn> _1be27168a_find_fn_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1aba68604:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1bc9c9873_Fn> _8417_f = _1be3a5b32_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1aba68604:;
			++it;
			goto _iter_begin_1aba68604;
		}
		_iter_end_1aba68604:;
	};
	return nullptr;
}



inline jule::Ptr<_1bd929d66_Trait> _1be271998_find_trait_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1aba68bed:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1bd929d66_Trait> _9617_t = _1be3a5e40_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1aba68bed:;
			++it;
			goto _iter_begin_1aba68bed;
		}
		_iter_end_1aba68bed:;
	};
	return nullptr;
}



inline jule::Ptr<_1bc9dceb3_Enum> _1be271cd9_find_enum_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1aba6a1a5:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1bc9dceb3_Enum> _10817_e = _1be3a624d_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1aba6a1a5:;
			++it;
			goto _iter_begin_1aba6a1a5;
		}
		_iter_end_1aba6a1a5:;
	};
	return nullptr;
}



inline jule::Ptr<_1bd9c99a4_TypeEnum> _1be27214c_find_type_enum_in_package(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _11835_files, jule::Str _11858_ident) {
	{
		auto &expr = _11835_files;
		auto it = expr.begin();
		_iter_begin_1aba6b607:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1bd9c99a4_TypeEnum> _12017_e = _1be3a655b_find_type_enum(_11917_f.ptr(), _11858_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1aba6b607:;
			++it;
			goto _iter_begin_1aba6b607;
		}
		_iter_end_1aba6b607:;
	};
	return nullptr;
}



inline jule::Bool _1be278373_is_std_package(jule::Str _35019_f, jule::Str _35027_p) {
	return _201adbc1a_has_prefix(_35019_f,_200cabda8_join(jule::Slice<jule::Str>::make({_201c13726_PATH_STDLIB,_35027_p})));
}



inline jule::Bool _1be346452_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1be36365b_Var>>()) {
			_case_begin_1aba80451:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1aba804b7:;
			{
				jule::Ptr<_1bc9c62ed_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>();;
				return _1be346452_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>>()) {
			_case_begin_1aba8052d:;
			{
				jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1bc9c5dd0_TraitSubIdentExprModel>();;
				return _1be346452_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c45c6_UnaryExprModel>>()) {
			_case_begin_1aba806e8:;
			{
				jule::Ptr<_1bc9c45c6_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1bc9c45c6_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1be3d6b52_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1be3d68dd_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1be346452_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1aba7ec14:;
			{
				return false;
			}
		}
		_match_end_1aba80352:;
	};
}



inline _201be0d52_Log _1be3468e7_compiler_err(jule::Ptr<_20201c3d1_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_201be0d52_Log _4213_log = _201be0d52_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_201be1292_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_202023948_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1be346c38_imp_is_lookupable(jule::Ptr<_1be272d40_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1be275716_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1be347035_append_ret_vars(jule::Slice<jule::Ptr<_1be36365b_Var>>& _6825_dest, jule::Ptr<_1bc9c9c4c_FnIns>& _6844_f) {
	if ((_1d70884de_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1be3d45ab_TypeKind>> _7313_types = _1d7078bd8_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1aba88ec6:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _7417_ident = *it;
			{
				if ((_20201eb75_is_ignore_ident(_7417_ident.get()._field_kind) || _20201ee1c_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1aba88ec6;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1be36365b_Var>(_1be36365b_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_data=jule::new_ptr<_1be3a92d9_Data>()}), }));;
			}
			_iter_next_1aba88ec6:;
			++it;
			_7410_i++;
			goto _iter_begin_1aba88ec6;
		}
		_iter_end_1aba88ec6:;
	};
}



inline void _1be3472dd_append_param_vars(jule::Slice<jule::Ptr<_1be36365b_Var>>& _9427_dest, jule::Ptr<_1bc9c9c4c_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aba8a9bc:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9a60_ParamIns> _9917_p = *it;
			{
				if ((_20201eb75_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _20201ee1c_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1aba8a9bc;
				};
				jule::Ptr<_1be36365b_Var> _10417_v = jule::new_ptr<_1be36365b_Var>(_1be36365b_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(), ._field_value=jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_data=jule::new_ptr<_1be3a92d9_Data>()}), });;
				{
					
					if (_1d708990d_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1aba8e8d3:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1be3d417c_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1d7061462_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1d7061462_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dc592_Sptr>(_1be3dc592_Sptr{._field_elem=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 7);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1aba8e5c5:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dceee_Slc>(_1be3dceee_Slc{._field_elem=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 8)});
						}
					}
					else {
						_case_begin_1aba8d23e:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1aba8e471:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1aba8a9bc:;
			++it;
			goto _iter_begin_1aba8a9bc;
		}
		_iter_end_1aba8a9bc:;
	};
}



inline void _1be3475b8_append_generic_type_aliases(jule::Slice<jule::Ptr<_1be3d3874_TypeAlias>>& _15437_dest, jule::Ptr<_1bc9c9c4c_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aba94c4b:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1be3d45ab_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_1d709c536_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_16417_g}), }));;
			}
			_iter_next_1aba94c4b:;
			++it;
			_16410_i++;
			goto _iter_begin_1aba94c4b;
		}
		_iter_end_1aba94c4b:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1d70ab9c9_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1aba95a71:;
			if (it != expr.end()) {
				jule::I64 _18014_i = it - expr.begin();
				jule::Ptr<_1be3d45ab_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_1d709c536_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_18121_decl.get()._field_token, ._field_ident=_18121_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=_18021_g}), }));;
				}
				_iter_next_1aba95a71:;
				++it;
				_18014_i++;
				goto _iter_begin_1aba95a71;
			}
			_iter_end_1aba95a71:;
		};
	};
}



inline jule::Ptr<_1be3a4339_SymbolTable> _1be34791a_find_file(jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>& _19619_files, jule::Ptr<_20202276b_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1aba95477:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1aba95477:;
			++it;
			goto _iter_begin_1aba95477;
		}
		_iter_end_1aba95477:;
	};
	return nullptr;
}



inline void _1be347d7c_push_suggestion(_201be0d52_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_201be1292_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1be38975e_trait_has_reference_receiver(jule::Ptr<_1bd929d66_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abcab8d0:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1abcab8d0;
				};
				jule::Ptr<_1bc9c9686_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1d7061462_is_ref(_3313_p.ptr()) && _1d708990d_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1abcab8d0:;
			++it;
			goto _iter_begin_1abcab8d0;
		}
		_iter_end_1abcab8d0:;
	};
	return false;
}



inline jule::Bool _1be37bc90_float_assignable(jule::Str _4121_kind, jule::Ptr<_1be3a92d9_Data>& _4133_d) {
	jule::Str _429_value = _1bda4ec05_fmt_float(static_cast<jule::F64>(_1be1b4754_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1be24c336_check_bit_float(_429_value,static_cast<jule::I64>(_1be24ae28_bitsize_of(_4121_kind)));
}



inline jule::Bool _1be37bdc2_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1be3a92d9_Data>& _4631_d) {
	jule::F64 _479_min = _1be2521a4_min(_4619_kind);;
	jule::F64 _489_max = _1be252490_max(_4619_kind);;
	{
		
		if (_1be1b63b0_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1abcb09e4:;
			{
				jule::F64 _5113_x = _1be1b4017_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1be0e9c94_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1be1b5b73_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1abcb0a5a:;
			{
				jule::F64 _5813_x = _1be1b4754_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1be1b590e_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1abcb0ac1:;
			{
				jule::F64 _6313_x = _1be1b4754_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1abcb08a1:;
	};
	return false;
}



inline jule::Bool _1be393977_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1be3a92d9_Data>& _6933_d) {
	jule::F64 _709_max = _1be252490_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1be380535_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1be1b3566_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1be1b63b0_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1abcb5d5c:;
			{
				jule::F64 _7713_x = _1be1b4017_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1be0e9c94_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1be1b5b73_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1abcb5dc3:;
			{
				jule::F64 _8713_x = _1be1b4754_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1be1b590e_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1abcb5e39:;
			{
				jule::F64 _9213_x = _1be1b4754_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1abcb51e1:;
	};
	return false;
}



inline jule::Bool _1be393aa9_int_assignable(jule::Str _9819_kind, jule::Ptr<_1be3a92d9_Data>& _9831_d) {
	{
		
		if (_1be2572db_is_sig_int(_9819_kind)) {
			_case_begin_1abcba944:;
			{
				return _1be37bdc2_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1be2575c7_is_unsig_int(_9819_kind)) {
			_case_begin_1abcba2b2:;
			{
				return _1be393977_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1abcb6588:;
			{
				return false;
			}
		}
		_match_end_1abcb64ab:;
	};
}



inline jule::Ptr<_1d705bd64_Directive> _1be3ce144_find_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _420324_directives, jule::Str _420355_d) {
	{
		auto &expr = _420324_directives;
		auto it = expr.begin();
		_iter_begin_1abdb3de4:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _420417_dr = *it;
			{
				if ((_420417_dr.get()._field_tag.get()._field_kind == _420355_d)) {
					return _420417_dr;
				};
			}
			_iter_next_1abdb3de4:;
			++it;
			goto _iter_begin_1abdb3de4;
		}
		_iter_end_1abdb3de4:;
	};
	return nullptr;
}



inline jule::Any _1be3ce4c9_find_builtins_import(jule::Str _421225_ident, jule::Ptr<_1be272d40_ImportInfo> _421237_imp) {
	return jule::Any(_1be45cbea_find_package_builtin_def(_421237_imp.get()._field_link_path,_421225_ident));
}



inline void _1be3ce6d8_fit_bitsize(jule::Ptr<_1be3a92d9_Data>& _421921_d) {
	jule::Ptr<_1be3d9083_Prim> _422013_prim = _1be3d6679_prim(_421921_d.get()._field_kind.ptr());;
	jule::I64 _42219_z = _1be24ae28_bitsize_of(_1be3d93e6_to_str(_422013_prim.ptr()));;
	if ((_42219_z == 64LL)) {
		return;;
	};
	jule::I64 _422613_k = 0LL;;
	{
		
		if (_1be1b590e_is_i64(_421921_d.get()._field_constant.ptr())) {
			_case_begin_1abdb6de7:;
			{
				_422613_k=static_cast<jule::I64>(_1be24c875_bitsize_of_int(static_cast<jule::I64>(_1be1b3566_read_i64(_421921_d.get()._field_constant.ptr()))));
				if ((_422613_k > _42219_z)) {
					_422013_prim.get()._field_kind=_1be24b247_int_from_bits(_422613_k);
				};
			}
		}
		else if (_1be1b5b73_is_u64(_421921_d.get()._field_constant.ptr())) {
			_case_begin_1abdb6e6e:;
			{
				_422613_k=static_cast<jule::I64>(_1be24cb1c_bitsize_of_uint(static_cast<jule::U64>(_1be1b37ca_read_u64(_421921_d.get()._field_constant.ptr()))));
				if ((_422613_k > _42219_z)) {
					_422013_prim.get()._field_kind=_1be24b4de_uint_from_bits(_422613_k);
				};
			}
		}
		else if (_1be1b63b0_is_f64(_421921_d.get()._field_constant.ptr())) {
			_case_begin_1abdb6ee6:;
			{
				_422613_k=static_cast<jule::I64>(_1be24c5cd_bitsize_of_float(static_cast<jule::F64>(_1be1b4017_read_f64(_421921_d.get()._field_constant.ptr()))));
				if ((_422613_k > _42219_z)) {
					_422013_prim.get()._field_kind=_1be24b786_float_from_bits(_422613_k);
				};
			}
		}
		_match_end_1abdb6d2b:;
	};
}



inline void _1be3ce9d5_make_struct_lit_alloc(jule::Ptr<_1be3a92d9_Data>& _424631_d, jule::Ptr<_1bc9c49a0_StructLitExprModel>& _424646_lit) {
	_424631_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dc592_Sptr>(_1be3dc592_Sptr{._field_elem=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_424646_lit.get()._field_strct, 0)})}), 7)});
	_424631_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c4b8c_AllocStructLitExprModel>(_1bc9c4b8c_AllocStructLitExprModel{._field_lit=_424646_lit}));
}



inline jule::Ptr<_1be36365b_Var> _1be3ced26_build_error_var(jule::Ptr<_1be1ca25e_Scope>& _425725_s, jule::Ptr<_1d7098ae8_FnCallExpr>& _425741_fc) {
	return jule::new_ptr<_1be36365b_Var>(_1be36365b_Var{._field_scope=_425725_s, ._field_token=_425741_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("any", 3)), 6)})}), ._field_value=jule::new_ptr<_1be3aa362_Value>(_1be3aa362_Value{._field_data=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{})}), });
}



inline jule::Any _1be3d0167_find_builtins_sema(jule::Str _427623_ident, jule::Ptr<_1be348311_Sema> _427639_s) {
	{
		auto &expr = _427639_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abdbcbbc:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _427717_imp = *it;
			{
				if ((_427717_imp.get()._field_import_all || _1be275716_exist_ident(_427717_imp.ptr(), _427623_ident))) {
					jule::Any _427921_def = _1be3ce4c9_find_builtins_import(_427623_ident,_427717_imp);;
					if ((_427921_def != nullptr)) {
						return jule::Any(_427921_def);
					};
				};
			}
			_iter_next_1abdbcbbc:;
			++it;
			goto _iter_begin_1abdbcbbc;
		}
		_iter_end_1abdbcbbc:;
	};
	jule::Str _428713_ppath = _202023162_dir(_427639_s.get()._field_file.get()._field_file.ptr());;
	if (_201adbc1a_has_prefix(_428713_ppath,_201c13726_PATH_STDLIB)) {
		(_428713_ppath).mut_slice(_201c13726_PATH_STDLIB.len());;
		_428713_ppath=(jule::Str("std", 3) + _201b865bc_replace(_428713_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1be45cbea_find_package_builtin_def(_428713_ppath,_427623_ident));
	};
	return nullptr;
}



inline jule::Bool _1be3d040e_is_ok_for_shifting(jule::Ptr<_1be3a92d9_Data>& _430128_d) {
	if (_1be3a9b9c_is_const(_430128_d.ptr())) {
		{
			
			if (_1be1b590e_is_i64(_430128_d.get()._field_constant.ptr())) {
				_case_begin_1abdc2100:;
				{
					return (_1be1b3566_read_i64(_430128_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1be1b5b73_is_u64(_430128_d.get()._field_constant.ptr())) {
				_case_begin_1abdc18b3:;
				{
					return true;
				}
			}
			else if (_1be1b63b0_is_f64(_430128_d.get()._field_constant.ptr())) {
				_case_begin_1abdc1929:;
				{
					return (_1be1b4017_read_f64(_430128_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1abdc184c:;
				{
					return false;
				}
			}
			_match_end_1abdc1770:;
		};
	};
	jule::Ptr<_1be3d9083_Prim> _43149_prim = _1be3d6679_prim(_430128_d.get()._field_kind.ptr());;
	return ((_43149_prim != nullptr) && _1be25786e_is_int(_1be3d93e6_to_str(_43149_prim.ptr())));
}



inline jule::Bool _1be3d07b6_is_instanced_struct(jule::Ptr<_1d70ab9c9_StructIns> _431824_s) {
	return (_431824_s.get()._field_decl.get()._field_generics.len() == _431824_s.get()._field_generics.len());
}



inline jule::Bool _1be3d0a91_is_ptr_arithmetic_compatible_int(jule::Ptr<_1be3a92d9_Data>& _432242_d) {
	if (_1be3a9b9c_is_const(_432242_d.ptr())) {
		return _1be393aa9_int_assignable(jule::Str("int", 3),_432242_d);
	};
	_1be394bed_TypeCompatibilityChecker _432613_tcc = _1be394bed_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)}), ._field_src=_432242_d.get()._field_kind, };;
	return _1be3962d7_check(&_432613_tcc);
}



inline void _1be3d0cc2_apply_cast_kind_model(jule::Ptr<_1be3a92d9_Data>& _433531_d, jule::Ptr<_1be3d45ab_TypeKind>& _433546_t) {
	_433531_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c4d79_CastingExprModel>(_1bc9c4d79_CastingExprModel{._field_expr=jule::Any(_433531_d.get()._field_model), ._field_kind=_433546_t, ._field_expr_kind=_433531_d.get()._field_kind}));
}



inline void _1be3d107a_apply_cast_kind(jule::Ptr<_1be3a92d9_Data>& _434325_d, jule::Ptr<_1be3d45ab_TypeKind>& _434340_t) {
	_1be3d0cc2_apply_cast_kind_model(_434325_d,_434340_t);
	_434325_d.get()._field_kind=_434340_t;
}



inline jule::Ptr<_1be3a92d9_Data> _1be3d1278_build_void_data(void) {
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("void", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1be3d1542_check_data_for_integer_indexing(jule::Ptr<_1be3a92d9_Data>& _435941_d) {
	jule::Str _435953_err_fmt = jule::Str();
	if ((_435941_d == nullptr)) {
		_435953_err_fmt = jule::Str();
		return _435953_err_fmt;
	};
	{
		
		if ((_1be3d6679_prim(_435941_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1abdc84ad:;
			{
				_435953_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435953_err_fmt;
			}
		}
		else if ((!(_1be25786e_is_int(_1be3d93e6_to_str(_1be3d6679_prim(_435941_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1abdc8524:;
			{
				_435953_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435953_err_fmt;
			}
		}
		else if (_1be3a9b9c_is_const(_435941_d.ptr())) {
			_case_begin_1abdc858a:;
			{
				if ((_1be1b4754_as_f64(_435941_d.get()._field_constant.ptr()) < 0LL)) {
					_435953_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _435953_err_fmt;
				};
			}
		}
		else if ((_1be3d6679_prim(_435941_d.get()._field_kind.ptr()) == nullptr) || _1be3a9b9c_is_const(_435941_d.ptr()) || (_1be24ab81_real_kind_of(_1be3d93e6_to_str(_1be3d6679_prim(_435941_d.get()._field_kind.ptr()).ptr())) != _1be24ab81_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1abdc8601:;
			{
				jule::Ptr<_1be3d45ab_TypeKind> _437617_t = jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)});;
				_1be3d107a_apply_cast_kind(_435941_d,_437617_t);
			}
		}
		_match_end_1abdc8843:;
	};
	_435953_err_fmt = jule::Str();
	return _435953_err_fmt;
}



inline void _1be3d182d_apply_cast_model_by_enum(jule::Ptr<_1be3a92d9_Data>& _438534_d, jule::Ptr<_1bc9dceb3_Enum> _438548_e) {
	if ((_438548_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1be3d9083_Prim> _43899_p = _1be3d6679_prim(_438548_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1be3dc042_is_str(_43899_p.ptr())) {
		return;;
	};
	_1be3d0cc2_apply_cast_kind_model(_438534_d,_438548_e.get()._field_kind.get()._field_kind);
}



inline void _1be3d1ae7_cast_const_by_type(jule::Str& _439624_t, jule::Ptr<_1be3a92d9_Data>& _439637_d) {
	{
		
		if (_1be2572db_is_sig_int(_439624_t)) {
			_case_begin_1abdce7d3:;
			{
				{
					auto _match_expr{ _1be24ae28_bitsize_of(_1be24ab81_real_kind_of(_439624_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1abdd062a:;
						{
							_1be1b49c9_set_i64(_439637_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1be1b427b_as_i64(_439637_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1abdd0691:;
						{
							_1be1b49c9_set_i64(_439637_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1be1b427b_as_i64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1abdd0707:;
						{
							_1be1b49c9_set_i64(_439637_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1be1b427b_as_i64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1abdd076d:;
						{
							_1be1b49c9_set_i64(_439637_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1be1b427b_as_i64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1abdcea69:;
				};
			}
		}
		else if (_1be2575c7_is_unsig_int(_439624_t)) {
			_case_begin_1abdce85a:;
			{
				{
					auto _match_expr{ _1be24ae28_bitsize_of(_1be24ab81_real_kind_of(_439624_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1abdd4057:;
						{
							_1be1b4c4e_set_u64(_439637_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1be1b44e0_as_u64(_439637_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1abdd40bd:;
						{
							_1be1b4c4e_set_u64(_439637_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1be1b44e0_as_u64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1abdd4134:;
						{
							_1be1b4c4e_set_u64(_439637_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1be1b44e0_as_u64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1abdd419a:;
						{
							_1be1b4c4e_set_u64(_439637_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1be1b44e0_as_u64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1abdd340d:;
				};
			}
		}
		else if (_1be257b8d_is_float(_439624_t)) {
			_case_begin_1abdce8d2:;
			{
				{
					auto _match_expr{ _1be24ae28_bitsize_of(_1be24ab81_real_kind_of(_439624_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1abdd792e:;
						{
							_1be1b54be_set_f64(_439637_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1be1b4754_as_f64(_439637_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1abdd7995:;
						{
							_1be1b54be_set_f64(_439637_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1be1b4754_as_f64(_439637_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1abdd0c46:;
				};
			}
		}
		_match_end_1abdce6a1:;
	};
}



inline void _1be3d2103_update_model_to_generic_ins(jule::Ptr<_1bc9c5066_FnCallExprModel>& _443037_m, jule::Ptr<_1bc9c9c4c_FnIns>& _443063_f) {
	{
		auto &_match_expr{ _443037_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c9c4c_FnIns>>()) {
			_case_begin_1abdceea9:;
			{
				_443037_m.get()._field_expr=jule::Any(_443063_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>>()) {
			_case_begin_1abdd0020:;
			{
				_443037_m.get()._field_expr.operator jule::Ptr<_1bc9c62ed_StructSubIdentExprModel>().get()._field_method=_443063_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bc9c64da_StructStaticIdentExprModel>>()) {
			_case_begin_1abdd0086:;
			{
				_443037_m.get()._field_expr.operator jule::Ptr<_1bc9c64da_StructStaticIdentExprModel>().get()._field_method=_443063_f;
			}
		}
		_match_end_1abdcee54:;
	};
}



inline jule::Bool _1be3d2367_push_sub_ident_from_expr(jule::Any _444133_expr, jule::Ptr<_1d7090e53_SubIdentTypeDecl>& _444154_t) {
	{
		auto &_match_expr{ _444133_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1d70967c7_IdentExpr>>()) {
			_case_begin_1abddb108:;
			{
				jule::Ptr<_1d70967c7_IdentExpr> _444417_e = _444133_expr.operator jule::Ptr<_1d70967c7_IdentExpr>();;
				_444154_t.get()._field_idents = jule::alloc_for_append(_444154_t.get()._field_idents,1);_444154_t.get()._field_idents.__push(jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_444417_e.get()._field_token, ._field_ident=_444417_e.get()._field_ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d709806a_SubIdentExpr>>()) {
			_case_begin_1abddb16e:;
			{
				jule::Ptr<_1d709806a_SubIdentExpr> _445017_e = _444133_expr.operator jule::Ptr<_1d709806a_SubIdentExpr>();;
				if ((!(_1be3d2367_push_sub_ident_from_expr(_445017_e.get()._field_expr.get()._field_kind,_444154_t)))) {
					return false;
				};
				_444154_t.get()._field_idents = jule::alloc_for_append(_444154_t.get()._field_idents,1);_444154_t.get()._field_idents.__push(jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_445017_e.get()._field_ident, ._field_ident=_445017_e.get()._field_ident.get()._field_kind, }));;
			}
		}
		else {
			_case_begin_1abddae60:;
			{
				return false;
			}
		}
		_match_end_1abdd9a0d:;
	};
	return true;
}



inline jule::Bool _1be3eab33_kind_uses_generics(jule::Any& _153724_k, jule::Slice<jule::Ptr<_1d709c536_GenericDecl>>& _153742_generics) {
	{
		auto &expr = _153742_generics;
		auto it = expr.begin();
		_iter_begin_1a95d8660:;
		if (it != expr.end()) {
			jule::Ptr<_1d709c536_GenericDecl> &_153812_g = *it;
			{
				if (static__1be3ea737_exist(_153812_g.get()._field_ident,_153724_k)) {
					return true;
				};
			}
			_iter_next_1a95d8660:;
			++it;
			goto _iter_begin_1a95d8660;
		}
		_iter_end_1a95d8660:;
	};
	return false;
}



inline jule::Bool _1be3eaeb8_has_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _154723_directives, jule::Str _154754_tag) {
	{
		auto &expr = _154723_directives;
		auto it = expr.begin();
		_iter_begin_1a95d8ce2:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _154817_dr = *it;
			{
				if ((_154817_dr.get()._field_tag.get()._field_kind == _154754_tag)) {
					return true;
				};
			}
			_iter_next_1a95d8ce2:;
			++it;
			goto _iter_begin_1a95d8ce2;
		}
		_iter_end_1a95d8ce2:;
	};
	return false;
}



inline jule::Bool _1be3eb260_can_get_ptr(jule::Ptr<_1be3a92d9_Data>& _155621_d) {
	if (((!(_155621_d.get()._field_lvalue)) || _1be3a9b9c_is_const(_155621_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1be3d7867_fnc(_155621_d.get()._field_kind.ptr()) != nullptr) || (_1be3d6db6_enm(_155621_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1a95db50e:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a95dacc2:;
			{
				return true;
			}
		}
		_match_end_1a95dabb2:;
	};
}



inline jule::Bool _1be3eb57e_is_valid_for_sptr_type(jule::Ptr<_1be3d45ab_TypeKind>& _157032_t) {
	jule::Ptr<_1d70ab9c9_StructIns> _157113_s = _1be3d7acb_strct(_157032_t.ptr());;
	if ((((_157113_s != nullptr) && (_157113_s.get()._field_decl != nullptr)) && _157113_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1be3eb826_is_valid_for_ref(jule::Ptr<_1be3d45ab_TypeKind>& _157926_t) {
	return (_1be3d7867_fnc(_157926_t.ptr()) == nullptr);
}



inline jule::Bool _1be3ebae0_is_builtin_str_convertable(jule::Ptr<_1be3d45ab_TypeKind>& _158236_t) {
	return (((!(_1be3d5700_void(_158236_t.ptr()))) && (_1be3d7867_fnc(_158236_t.ptr()) == nullptr)) && (_1be3d8318_tup(_158236_t.ptr()) == nullptr));
}



inline jule::Str _1be3ebd87_build_link_path_by_tokens(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _158631_tokens) {
	jule::Str _158713_s = _158631_tokens[0LL].get()._field_kind;;
	{
		auto expr = _158631_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a95e028d:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> &_158812_token = *it;
			{
				_158713_s+=jule::Str("::", 2);
				_158713_s+=_158812_token.get()._field_kind;
			}
			_iter_next_1a95e028d:;
			++it;
			goto _iter_begin_1a95e028d;
		}
		_iter_end_1a95e028d:;
	};
	return _158713_s;
}



inline jule::Ptr<_1be3d9083_Prim> _1be3ec250_build_prim_type(jule::Str _159520_kind) {
	return jule::new_ptr<_1be3d9083_Prim>(_1be3d9083_Prim{._field_kind=_159520_kind});
}



inline jule::Ptr<_1d7073276_Struct> _1be3ec4e7_get_struct_from_kind(jule::Ptr<_1be3d45ab_TypeKind> _160129_k) {
	{
		
		if ((_160129_k == nullptr)) {
			_case_begin_1a95e159c:;
			{
				return nullptr;
			}
		}
		else if ((_1be3d7acb_strct(_160129_k.ptr()) != nullptr)) {
			_case_begin_1a95e1613:;
			{
				return _1be3d7acb_strct(_160129_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1be3d68dd_sptr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1a95e1679:;
			{
				return _1be3ec4e7_get_struct_from_kind(_1be3d68dd_sptr(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1be3d7603_slc(_160129_k.ptr()) != nullptr)) {
			_case_begin_1a95e16e0:;
			{
				return _1be3ec4e7_get_struct_from_kind(_1be3d7603_slc(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1be3d738e_arr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1a95e1998:;
			{
				return _1be3ec4e7_get_struct_from_kind(_1be3d738e_arr(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1be3d6b52_ptr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1a95e1a0e:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1a95e1536:;
			{
				return nullptr;
			}
		}
		_match_end_1a95e0986:;
	};
}



inline jule::Bool _1be3ec78e_is_prim(jule::Str _162412_kind) {
	return ((((((((((((((((_162412_kind == jule::Str("i8", 2)) || (_162412_kind == jule::Str("i16", 3))) || (_162412_kind == jule::Str("i32", 3))) || (_162412_kind == jule::Str("i64", 3))) || (_162412_kind == jule::Str("u8", 2))) || (_162412_kind == jule::Str("u16", 3))) || (_162412_kind == jule::Str("u32", 3))) || (_162412_kind == jule::Str("u64", 3))) || (_162412_kind == jule::Str("f32", 3))) || (_162412_kind == jule::Str("f64", 3))) || (_162412_kind == jule::Str("int", 3))) || (_162412_kind == jule::Str("uint", 4))) || (_162412_kind == jule::Str("uintptr", 7))) || (_162412_kind == jule::Str("bool", 4))) || (_162412_kind == jule::Str("str", 3))) || (_162412_kind == jule::Str("any", 3)));
}



inline void _1be3eca47_apply_implicit_cast(jule::Ptr<_1be3d45ab_TypeKind>& _164329_dest, jule::Ptr<_1be3a92d9_Data>& _164351_d) {
	if (_1be3d548b_is_nil(_164351_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1be3d9083_Prim> _16489_dest_prim = _1be3d6679_prim(_164329_dest.ptr());;
	jule::Ptr<_1be3d9083_Prim> _16499_prim = _1be3d6679_prim(_164351_d.get()._field_kind.ptr());;
	if ((_16489_dest_prim != nullptr)) {
		if (_1be3dc2a6_is_any(_16489_dest_prim.ptr())) {
			_1be3d107a_apply_cast_kind(_164351_d,_164329_dest);
			return;;
		};
		if (((((((!(_1be3d5227_cpp_linked(_164351_d.get()._field_kind.ptr()))) && (!(_164351_d.get()._field_kind.get()._field_variadic))) && (!(_164351_d.get()._field_lvalue))) && (!(_1be3a9b9c_is_const(_164351_d.ptr())))) && (_16499_prim != nullptr)) && _1be257e35_is_num(_16499_prim.get()._field_kind))) {
			_1be3d107a_apply_cast_kind(_164351_d,_164329_dest);
		};
		return;;
	};
	if (((_1be3d7d40_trt(_164329_dest.ptr()) != nullptr) && (_1be3d7d40_trt(_164351_d.get()._field_kind.ptr()) == nullptr))) {
		_1be3d0cc2_apply_cast_kind_model(_164351_d,_164329_dest);
		return;;
	};
	if (((_1be3d712a_tenm(_164329_dest.ptr()) != nullptr) && (_1be3d712a_tenm(_164351_d.get()._field_kind.ptr()) == nullptr))) {
		_1be3d0cc2_apply_cast_kind_model(_164351_d,_164329_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1be3a4339_SymbolTable>,jule::Slice<_201be0d52_Log>> _1be40093a_build_symbols(jule::Ptr<_1d705abdc_Ast>& _1523_ast, jule::Trait<_1be270546_Importer>& _1539_importer, jule::Ptr<_1bc9d1c65_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1bc9d1c65_SymbolBuilder> _1613_sb = jule::new_ptr<_1bc9d1c65_SymbolBuilder>(_1bc9d1c65_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1bc9d6cae_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1be275c99_Package>,jule::Slice<_201be0d52_Log>> _1be400d69___analyze_package(jule::Slice<jule::Ptr<_1d705abdc_Ast>>& _2927_files, jule::Trait<_1be270546_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1be3a4339_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1ac2077ba:;
		if (it != expr.end()) {
			jule::Ptr<_1d705abdc_Ast> _3217_f = *it;
			{
				jule::Ptr<_1be3a4339_SymbolTable> _3318_table;;
				jule::Slice<_201be0d52_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1be40093a_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1ac2077ba:;
			++it;
			goto _iter_begin_1ac2077ba;
		}
		_iter_end_1ac2077ba:;
	};
	jule::Ptr<_1be348311_Sema> _4013_sema = jule::new_ptr<_1be348311_Sema>(_1be348311_Sema{._field_flags=_2968_flags});;
	_1be3605d1_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1be275c99_Package> _4813_pkg = jule::new_ptr<_1be275c99_Package>(_1be275c99_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1be275c99_Package>,jule::Slice<_201be0d52_Log>> _1be401254_analyze_package(jule::Slice<jule::Ptr<_1d705abdc_Ast>> _7228_files, jule::Trait<_1be270546_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1be275c99_Package> _7714_package;;
	jule::Slice<_201be0d52_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1be400d69___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1bc9c9c4c_FnIns> _1be40ce64_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ac2105c5:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _2420_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be45b743_builtin_caller_out), });;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ac21063b:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _2720_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be408932_builtin_caller_outln), });;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ac21084a:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _3020_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be4721b5_builtin_caller_new), });;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ac2108b1:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _3320_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be425223_builtin_caller_panic), });;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ac210927:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _3620_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be425355_builtin_caller_make), });;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ac21098d:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _3920_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be410d79_builtin_caller_append), });;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ac210a04:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _4220_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be441e21_builtin_caller_copy), });;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ac210a6a:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _4520_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48c488_builtin_caller_clone), });;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ac210b36:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _4820_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48c5ba_builtin_caller_assert), });;
				return _4820_f;
			}
		}
		else {
			_case_begin_1ac2103b6:;
			{
				return nullptr;
			}
		}
		_match_end_1ac20ed22:;
	};
}



inline jule::Ptr<_1be3d3874_TypeAlias> _1be40d9e2_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ac2163cd:;
			{
				static jule::Ptr<_1be3d3874_TypeAlias> _5820_t = jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("u8", 2)), 6)})}), });;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ac216444:;
			{
				static jule::Ptr<_1be3d3874_TypeAlias> _6820_t = jule::new_ptr<_1be3d3874_TypeAlias>(_1be3d3874_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1be3d86c0_TypeSymbol>(_1be3d86c0_TypeSymbol{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("i32", 3)), 6)})}), });;
				return _6820_t;
			}
		}
		else {
			_case_begin_1ac216367:;
			{
				return nullptr;
			}
		}
		_match_end_1ac215d17:;
	};
}



inline jule::Ptr<_1bd929d66_Trait> _1be437ea0_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1be40b1c6_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1bc9c9c4c_FnIns> _8713_f = _1be40ce64_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1be3d3874_TypeAlias> _9213_ta = _1be40d9e2_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1bd929d66_Trait> _9713_t = _1be437ea0_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1be42594e_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ac21ad1c:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _10820_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48dc5e_builtin_caller_std_debug_out), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ac21ad83:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _11120_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48e149_builtin_caller_std_debug_outln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1ac21aba7:;
			{
				return nullptr;
			}
		}
		_match_end_1ac21a833:;
	};
}



inline jule::Any _1be45c04b_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1ac21b1d5:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _12120_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48c796_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1ac21b24b:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _12420_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48caa4_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1ac21b2b2:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _12720_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48cec2_builtin_caller_std_mem_free), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1ac21bcc9:;
			{
				return nullptr;
			}
		}
		_match_end_1ac21c824:;
	};
}



inline jule::Any _1be4669a1_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1ac21cbed:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _13720_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48d401_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1ac21cc64:;
			{
				static jule::Ptr<_1bc9c9c4c_FnIns> _14020_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be48d81e_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1ac21eddc:;
			{
				return nullptr;
			}
		}
		_match_end_1ac21e6e4:;
	};
}



inline jule::Any _1be45cbea_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ac221a37:;
			{
				return jule::Any(_1be42594e_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ac221a9d:;
			{
				return jule::Any(_1be45c04b_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ac221b14:;
			{
				return jule::Any(_1be4669a1_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1ac2200da:;
			{
				return nullptr;
			}
		}
		_match_end_1ac220bac:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be44c558_builtin_caller_common_plain(jule::Ptr<_1be3aad57_Eval>& _16037_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _16052_fc, jule::Ptr<_1be3a92d9_Data>& _16074_d) {
	jule::Ptr<_1bc9c9c4c_FnIns> _16113_f = _1be3d7867_fnc(_16074_d.get()._field_kind.ptr());;
	_1be39ae35_FnCallArgChecker _16313_fcac = _1be39ae35_FnCallArgChecker{._field_e=_16037_e, ._field_args=_16052_fc.get()._field_args, ._field_error_token=_16052_fc.get()._field_token, ._field_f=_16113_f, ._field_dynamic_annotation=false, };;
	if ((!(_1be39d300_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1bc9c5066_FnCallExprModel> _17413_model = jule::new_ptr<_1bc9c5066_FnCallExprModel>(_1bc9c5066_FnCallExprModel{._field_token=_16052_fc.get()._field_token, ._field_func=_16113_f, ._field_expr=jule::Any(_16074_d.get()._field_model), ._field_args=_16313_fcac._field_arg_models, });;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1be3d1278_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=_16113_f.get()._field_result, });
	};
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be47c423_builtin_caller_common(jule::Ptr<_1be3aad57_Eval>& _19331_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _19346_fc, jule::Ptr<_1be3a92d9_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1be44c558_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1be3a92d9_Data> _1be464d56_builtin_caller_common_mut(jule::Ptr<_1be3aad57_Eval>& _20135_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _20150_fc, jule::Ptr<_1be3a92d9_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1be3ab363_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1be47c423_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1be3a92d9_Data> _1be45d019_builtin_caller_error(jule::Ptr<_1be3aad57_Eval>& _20830_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _21913_expr = _1be3c612a_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1be3a96c4_is_nil(_21913_expr.ptr())) {
		_1be3ab363_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _22813_d = _1be3d1278_build_void_data();;
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c81bd_BuiltinErrorCallExprModel>(_1bc9c81bd_BuiltinErrorCallExprModel{._field_err=jule::Any(_21913_expr.get()._field_model)}));
	return _22813_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be45b743_builtin_caller_out(jule::Ptr<_1be3aad57_Eval>& _23628_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _23643_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _24813_expr = _1be3c612a_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1be3ebae0_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1be3ab363_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _25813_d = _1be3d1278_build_void_data();;
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c6e7a_BuiltinOutCallExprModel>(_1bc9c6e7a_BuiltinOutCallExprModel{._field_expr=jule::Any(_24813_expr.get()._field_model), }));
	return _25813_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be408932_builtin_caller_outln(jule::Ptr<_1be3aad57_Eval>& _26330_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _26345_fc, jule::Ptr<_1be3a92d9_Data>& _26367_d) {
	_26367_d=_1be45b743_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7167_BuiltinOutlnCallExprModel>(_1bc9c7167_BuiltinOutlnCallExprModel{._field_expr=jule::Any(_26367_d.get()._field_model.operator jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>().get()._field_expr), }));
	return _26367_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be4721b5_builtin_caller_new(jule::Ptr<_1be3aad57_Eval>& _27528_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _27543_fc, jule::Ptr<_1be3a92d9_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1be3ab363_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _28713_t = _1be3c5a0e_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1be3ab363_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1be3eb57e_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1d70ab9c9_StructIns> _29817_s = _1be3d7acb_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1be3ab363_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1be3dc592_Sptr>(_1be3dc592_Sptr{._field_elem=_28713_t.get()._field_kind}), 7)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1be3d45ab_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1be3a92d9_Data> _31517_init = _1be3c612a_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_20201c3d1_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1be3530c9_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1be3512c5_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7541_BuiltinNewCallExprModel>(_1bc9c7541_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=jule::Any(_31517_init.get()._field_model)}));
		};
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7541_BuiltinNewCallExprModel>(_1bc9c7541_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, }));
	};
	return _27565_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be425223_builtin_caller_panic(jule::Ptr<_1be3aad57_Eval>& _34030_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _34045_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _35213_expr = _1be3c612a_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1be3d6679_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1be3dc042_is_str(_1be3d6679_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1be3ab363_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _36113_d = _1be3d1278_build_void_data();;
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c772d_BuiltinPanicCallExprModel>(_1bc9c772d_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=jule::Any(_35213_expr.get()._field_model)}));
	return _36113_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be425355_builtin_caller_make(jule::Ptr<_1be3aad57_Eval>& _36929_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _36944_fc, jule::Ptr<_1be3a92d9_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1be3ab363_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1be3ab363_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _38213_t = _1be3c5a0e_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_38213_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_38213_t.get()._field_decl))) {
			_case_begin_1ac24db30:;
			{
				goto _match_end_1ac24dd72;
			}
		}
		else if ((_1be3d7603_slc(_38213_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac24db96:;
			{
				if ((_36944_fc.get()._field_args.len() > 3LL)) {
					_1be3ab363_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1be3d6679_prim(_38213_t.get()._field_kind.ptr()) != nullptr) && _1be3dc042_is_str(_1be3d6679_prim(_38213_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ac24dc0c:;
			{
				if ((_36944_fc.get()._field_args.len() > 2LL)) {
					_1be3ab363_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1ac24dd72:;
	};
	_1be3ab363_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_36966_d.get()._field_kind=_38213_t.get()._field_kind;
	jule::Ptr<_1be3a92d9_Data> _40613_len = _1be3c612a_eval_expr(_1be3509bc_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_40613_len == nullptr)) {
		return nullptr;
	};
	_1be3b48dd_check_integer_indexing_by_data(_36929_e.ptr(), _40613_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1bc9c7b07_BuiltinMakeCallExprModel> _41313_model = jule::new_ptr<_1bc9c7b07_BuiltinMakeCallExprModel>(_1bc9c7b07_BuiltinMakeCallExprModel{._field_kind=_38213_t.get()._field_kind, ._field_len=jule::Any(_40613_len.get()._field_model), });;
	_36966_d.get()._field_model=jule::Any(_41313_model);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1be3a92d9_Data> _41917_cap = _1be3c612a_eval_expr(_1be3509bc_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_41917_cap == nullptr)) {
			return _36966_d;
		};
		_1be3b48dd_check_integer_indexing_by_data(_36929_e.ptr(), _41917_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_41313_model.get()._field_cap=jule::Any(_41917_cap.get()._field_model);
	};
	return _36966_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be410d79_builtin_caller_append(jule::Ptr<_1be3aad57_Eval>& _42931_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _42946_fc, jule::Ptr<_1be3a92d9_Data>& _42968_d) {
	if ((_42946_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42946_fc.get()._field_args.len() < 2LL)) {
		if ((_42946_fc.get()._field_args.len() == 1LL)) {
			_1be3ab363_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1be3ab363_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _44213_t = _1be3c612a_eval_expr(_42931_e, _42946_fc.get()._field_args[0LL]);;
	if ((_44213_t == nullptr)) {
		return nullptr;
	};
	if ((_1be3d7603_slc(_44213_t.get()._field_kind.ptr()) == nullptr)) {
		_1be3ab363_push_err(_42931_e.ptr(), _42946_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1bc9c9c4c_FnIns> _45213_f = jule::new_ptr<_1bc9c9c4c_FnIns>(_1bc9c9c4c_FnIns{._field_params=jule::Slice<jule::Ptr<_1bc9c9a60_ParamIns>>::make({jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_mutable=true, }), ._field_kind=_44213_t.get()._field_kind}),jule::new_ptr<_1bc9c9a60_ParamIns>(_1bc9c9a60_ParamIns{._field_decl=jule::new_ptr<_1bc9c9686_Param>(_1bc9c9686_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1be3d7603_slc(_44213_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_44213_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1be3a92d9_Data>(jule::Ptr<_1be3aad57_Eval>&,jule::Ptr<_1d7098ae8_FnCallExpr>&,jule::Ptr<_1be3a92d9_Data>&)>(_1be44c558_builtin_caller_common_plain), });;
	_42968_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_45213_f, 1)});
	_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c68b4_CommonIdentExprModel>(_1bc9c68b4_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42968_d=_1be44c558_builtin_caller_common_plain(_42931_e,_42946_fc,_42968_d);
	if ((_42968_d != nullptr)) {
		jule::Ptr<_1bc9c5066_FnCallExprModel> _48017_model = _42968_d.get()._field_model.operator jule::Ptr<_1bc9c5066_FnCallExprModel>();;
		_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7ce4_BuiltinAppendCallExprModel>(_1bc9c7ce4_BuiltinAppendCallExprModel{._field_dest=jule::Any(_48017_model.get()._field_args[0LL]), ._field_elements=jule::Any(_48017_model.get()._field_args[1LL])}));
	};
	return _42968_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be410eab_caller_copy_slice(jule::Ptr<_1be3a92d9_Data>& _48927_dest, jule::Ptr<_1be3aad57_Eval>& _48945_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _48960_fc, jule::Ptr<_1be3a92d9_Data>& _48982_d) {
	if ((!(_48927_dest.get()._field_mutable))) {
		_1be3ab363_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _49413_src = _1be3c612a_eval_expr(_48945_e, _48960_fc.get()._field_args[1LL]);;
	if ((_49413_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be3dceee_Slc> _49813_slc = _1be3d7603_slc(_49413_src.get()._field_kind.ptr());;
	if ((_49813_slc != nullptr)) {
		if (((!(_49413_src.get()._field_mutable)) && _1be3d5964_mutable(_49813_slc.get()._field_elem.ptr()))) {
			_1be3ab363_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1be3d4c71_equals(_48927_dest.get()._field_kind, _49413_src.get()._field_kind)))) {
			_1be3ab363_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1be3d9083_Prim> _50813_dest_prim = _1be3d6679_prim(_1be3d7603_slc(_48927_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1be3d9083_Prim> _50913_prim = _1be3d6679_prim(_49413_src.get()._field_kind.ptr());;
		if (((((_50813_dest_prim == nullptr) || (_50913_prim == nullptr)) || (!(_1be3dc042_is_str(_50913_prim.ptr())))) || (!(_1be3da617_is_u8(_50813_dest_prim.ptr()))))) {
			_1be3ab363_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	};
	_48982_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)});
	_48982_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7ed1_BuiltinCopyCallExprModel>(_1bc9c7ed1_BuiltinCopyCallExprModel{._field_dest=_48927_dest, ._field_src=_49413_src}));
	return _48982_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be441cde_caller_copy_str(jule::Ptr<_1be3a92d9_Data>& _52325_dest, jule::Ptr<_1be3aad57_Eval>& _52343_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _52358_fc, jule::Ptr<_1be3a92d9_Data>& _52380_d) {
	if ((!(_52325_dest.get()._field_mutable))) {
		_1be3ab363_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _52813_src = _1be3c612a_eval_expr(_52343_e, _52358_fc.get()._field_args[1LL]);;
	if ((_52813_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1be3d6679_prim(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac26e997:;
			{
				if (_1be3dc042_is_str(_1be3d6679_prim(_52813_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1be3d7603_slc(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac26ea0d:;
			{
				jule::Ptr<_1be3dceee_Slc> _53817_slc = _1be3d7603_slc(_52813_src.get()._field_kind.ptr());;
				if (((_1be3d6679_prim(_53817_slc.get()._field_elem.ptr()) != nullptr) && _1be3da617_is_u8(_1be3d6679_prim(_53817_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ac26ebc8:;
	};
	_1be3ab363_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_52325_dest.get()._field_kind.ptr())),jule::Any(_1be3d4963_to_str(_52813_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52380_d.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("int", 3)), 6)});
	_52380_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7ed1_BuiltinCopyCallExprModel>(_1bc9c7ed1_BuiltinCopyCallExprModel{._field_dest=_52325_dest, ._field_src=_52813_src}));
	return _52380_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be441e21_builtin_caller_copy(jule::Ptr<_1be3aad57_Eval>& _55329_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _55344_fc, jule::Ptr<_1be3a92d9_Data>& _55366_d) {
	if ((_55344_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55344_fc.get()._field_args.len() < 2LL)) {
		if ((_55344_fc.get()._field_args.len() == 1LL)) {
			_1be3ab363_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1be3ab363_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55344_fc.get()._field_args.len() > 2LL)) {
		_1be3ab363_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _56913_dest = _1be3c612a_eval_expr(_55329_e, _55344_fc.get()._field_args[0LL]);;
	{
		
		if ((_56913_dest == nullptr)) {
			_case_begin_1ac27a684:;
			{
				return nullptr;
			}
		}
		else if ((_1be3d7603_slc(_56913_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac27a6ea:;
			{
				return _1be410eab_caller_copy_slice(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else if (((_1be3d6679_prim(_56913_dest.get()._field_kind.ptr()) != nullptr) && _1be3dc042_is_str(_1be3d6679_prim(_56913_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ac27a761:;
			{
				return _1be441cde_caller_copy_str(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else {
			_case_begin_1ac27a5c9:;
			{
				_1be3ab363_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac27a563:;
	};
}



inline jule::Ptr<_1be3a92d9_Data> _1be48c488_builtin_caller_clone(jule::Ptr<_1be3aad57_Eval>& _58330_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _58345_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_58345_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58345_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58345_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _59613_d = _1be3c5a0e_eval_expr_kind(_58330_e, _58345_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_59613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1be3d61a1_supports_cloning(_59613_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1be3d7603_slc(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1be3d80a4_map(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1be3d738e_arr(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1be3d68dd_sptr(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ac282e83:;
				{
					{
						_1be3ab363_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_59613_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1be3d7acb_strct(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ac282801:;
				{
					{
						_1be3ab363_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1ac282779:;
				{
					{
						_1be3ab363_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1be3d4963_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1ac282108:;
		};
	};
	_59613_d.get()._field_mutable=true;
	_59613_d.get()._field_model=jule::Any(jule::new_ptr<_1bc9c7354_BuiltinCloneCallExprModel>(_1bc9c7354_BuiltinCloneCallExprModel{._field_expr=jule::Any(_59613_d.get()._field_model)}));
	return _59613_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48c5ba_builtin_caller_assert(jule::Ptr<_1be3aad57_Eval>& _62931_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _62946_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_62946_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62946_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62946_fc.get()._field_args.len() > 2LL)) {
		_1be3ab363_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _64113_expr = _1be3c612a_eval_expr(_62931_e, _62946_fc.get()._field_args[0LL]);;
	if ((_64113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1be3d6679_prim(_64113_expr.get()._field_kind.ptr()) == nullptr) || (!(_1be3dbccd_is_bool(_1be3d6679_prim(_64113_expr.get()._field_kind.ptr()).ptr()))))) {
		_1be3ab363_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc9c791a_BuiltinAssertCallExprModel> _65013_model = jule::new_ptr<_1bc9c791a_BuiltinAssertCallExprModel>(_1bc9c791a_BuiltinAssertCallExprModel{._field_token=_62946_fc.get()._field_token, ._field_expr=jule::Any(_64113_expr.get()._field_model), ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62946_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1be3a92d9_Data> _65817_log = _1be3c612a_eval_expr(_62931_e, _62946_fc.get()._field_args[1LL]);;
		if ((_65817_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1be3a9b9c_is_const(_65817_log.ptr()))) || (_1be3d6679_prim(_65817_log.get()._field_kind.ptr()) == nullptr)) || (!(_1be3dc042_is_str(_1be3d6679_prim(_65817_log.get()._field_kind.ptr()).ptr()))))) {
			_1be3ab363_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1be3d4963_to_str(_65817_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_65013_model.get()._field_log=_1be1b3ca3_read_str(_65817_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1be3a92d9_Data> _67113_d = _1be3d1278_build_void_data();;
	_67113_d.get()._field_model=jule::Any(_65013_model);
	return _67113_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48c796_builtin_caller_std_mem_size_of(jule::Ptr<_1be3aad57_Eval>& _67640_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _67655_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_67655_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _68013_result = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_67655_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _68013_result;
	};
	if ((_67655_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_67640_e.ptr(), _67655_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _69213_d = _1be3c5a0e_eval_expr_kind(_67640_e, _67655_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_69213_d == nullptr)) {
		return _68013_result;
	};
	_68013_result.get()._field_model=jule::Any(jule::new_ptr<_1bc9c60bc_SizeofExprModel>(_1bc9c60bc_SizeofExprModel{._field_expr=jule::Any(_69213_d.get()._field_model)}));
	return _68013_result;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48caa4_builtin_caller_std_mem_align_of(jule::Ptr<_1be3aad57_Eval>& _70141_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _70156_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_70156_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _70513_result = jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_70156_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70513_result;
	};
	if ((_70156_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_70141_e.ptr(), _70156_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _71713_d = _1be3c5a0e_eval_expr_kind(_70141_e, _70156_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_71713_d == nullptr)) {
		return _70513_result;
	};
	_70513_result.get()._field_model=jule::Any(jule::new_ptr<_1bc9c882d_AlignofExprModel>(_1bc9c882d_AlignofExprModel{._field_expr=jule::Any(_71713_d.get()._field_model)}));
	return _70513_result;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48cec2_builtin_caller_std_mem_free(jule::Ptr<_1be3aad57_Eval>& _72637_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _72652_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_72652_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72652_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72652_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _73913_d = _1be3c5a0e_eval_expr_kind(_72637_e, _72652_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_73913_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1be3d5e3c_performs_rc(_73913_d.get()._field_kind.ptr())))) {
		_1be3ab363_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _74813_result = _1be3d1278_build_void_data();;
	_74813_result.get()._field_model=jule::Any(jule::new_ptr<_1bc9c90d1_FreeExprModel>(_1bc9c90d1_FreeExprModel{._field_expr=jule::Any(_73913_d.get()._field_model)}));
	return _74813_result;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48d401_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1be3aad57_Eval>& _75351_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _75366_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((_75366_fc.get()._field_generics.len() > 0LL)) {
		_1be3ab363_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75366_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75366_fc.get()._field_args.len() > 1LL)) {
		_1be3ab363_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be3a92d9_Data> _76613_d = _1be3c5a0e_eval_expr_kind(_75351_e, _75366_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_76613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1be3ebae0_is_builtin_str_convertable(_76613_d.get()._field_kind)))) {
		_1be3ab363_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1be3a92d9_Data>(_1be3a92d9_Data{._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(_1be3ec250_build_prim_type(jule::Str("str", 3)), 6)}), ._field_model=jule::Any(jule::new_ptr<_1bc9c8c07_IntegratedToStrExprModel>(_1bc9c8c07_IntegratedToStrExprModel{._field_expr=jule::Any(_76613_d.get()._field_model)})), });
}



inline jule::Ptr<_1be3a92d9_Data> _1be48d81e_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1be3aad57_Eval>& _78449_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _78464_fc, jule::Ptr<_1be3a92d9_Data>& ) {
	if ((!(_1be3abc9d_is_unsafe(_78449_e.ptr())))) {
		_1be3ab363_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78464_fc.get()._field_args.len() < 1LL)) {
		_1be3ab363_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _79413_d = _1be3c612a_eval_expr(_78449_e, _78464_fc.get()._field_args[0LL]);;
	if ((_79413_d == nullptr)) {
		return nullptr;
	};
	if (((_1be3d6679_prim(_79413_d.get()._field_kind.ptr()) == nullptr) || (!(_1be3dc042_is_str(_1be3d6679_prim(_79413_d.get()._field_kind.ptr()).ptr()))))) {
		_1be3ab363_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1be3d4963_to_str(_79413_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1be3a9b9c_is_const(_79413_d.ptr()))) || (!(_1be1b614b_is_str(_79413_d.get()._field_constant.ptr()))))) {
		_1be3ab363_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3a92d9_Data> _80913_r = _1be3d1278_build_void_data();;
	if ((_78464_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1be34c36a_check_generic_quantity(_78449_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_78464_fc.get()._field_generics.len()),_78464_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1be3d86c0_TypeSymbol> _81517_k = _1bc9ccb1d_build_type(_78464_fc.get()._field_generics[0LL]);;
		if ((!(_1be34e614_check_type(_78449_e.get()._field_s, _81517_k,_78449_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80913_r.get()._field_kind=_81517_k.get()._field_kind;
	};
	jule::Ptr<_1bc9c8de4_BackendEmitExprModel> _82213_model = jule::new_ptr<_1bc9c8de4_BackendEmitExprModel>(_1bc9c8de4_BackendEmitExprModel{._field_code=_1be1b3ca3_read_str(_79413_d.get()._field_constant.ptr()), });;
	if ((_78464_fc.get()._field_args.len() > 1LL)) {
		_82213_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1ac2b4547:;
			if (it != expr.end()) {
				jule::Ptr<_1d709475e_Expr> _82821_arg = *it;
				{
					jule::Ptr<_1be3a92d9_Data> _82921_argd = _1be3c5a0e_eval_expr_kind(_78449_e, _82821_arg.get()._field_kind);;
					if ((_82921_argd == nullptr)) {
						return nullptr;
					};
					_82213_model.get()._field_exprs = jule::alloc_for_append(_82213_model.get()._field_exprs,1);_82213_model.get()._field_exprs.__push(jule::Any(_82921_argd.get()._field_model));;
				}
				_iter_next_1ac2b4547:;
				++it;
				goto _iter_begin_1ac2b4547;
			}
			_iter_end_1ac2b4547:;
		};
	};
	_80913_r.get()._field_model=jule::Any(_82213_model);
	return _80913_r;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48dc5e_builtin_caller_std_debug_out(jule::Ptr<_1be3aad57_Eval>& _84138_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _84153_fc, jule::Ptr<_1be3a92d9_Data>& _84175_d) {
	_84175_d=_1be45b743_builtin_caller_out(_84138_e,_84153_fc,_84175_d);
	if ((_84175_d == nullptr)) {
		return nullptr;
	};
	_84175_d.get()._field_model.operator jule::Ptr<_1bc9c6e7a_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _84175_d;
}



inline jule::Ptr<_1be3a92d9_Data> _1be48e149_builtin_caller_std_debug_outln(jule::Ptr<_1be3aad57_Eval>& _85140_e, jule::Ptr<_1d7098ae8_FnCallExpr>& _85155_fc, jule::Ptr<_1be3a92d9_Data>& _85177_d) {
	_85177_d=_1be408932_builtin_caller_outln(_85140_e,_85155_fc,_85177_d);
	if ((_85177_d == nullptr)) {
		return nullptr;
	};
	_85177_d.get()._field_model.operator jule::Ptr<_1bc9c7167_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _85177_d;
}



inline jule::Bool _1c019777a_find_module_file(jule::Slice<jule::Ptr<_1eedea426_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1ac2ba718:;
		if (it != expr.end()) {
			jule::Ptr<_1eedea426_DirEntry> &_1312_d = *it;
			{
				if (((!(_1eed19972_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1ac2ba718:;
			++it;
			goto _iter_begin_1ac2ba718;
		}
		_iter_end_1ac2ba718:;
	};
	return false;
}



inline jule::Str _1c01978ac_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1eedea426_DirEntry>> _2617_dirents = ({
				auto except = static__200bbb14c_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ac2ba042;
				} jule::Slice<jule::Ptr<_1eedea426_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1c019777a_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_200cc16e7_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1ac2ba042;
			};
		}
	_iter_next_1ac2ba042:;
	}
	_iter_end_1ac2ba042:;;
	return jule::Str();
}



inline jule::Slice<_201be0d52_Log> _1c0197b43_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1eedeae71_read(_200cabda8_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_201be0d52_Log>::make({_201be0d52_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _201b873ae_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_201be0d52_Log>::make({_201be0d52_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1a8ed48b9_FileInfo> _1a902b955_parse_file(jule::Ptr<_20202276b_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a8ed48b9_FileInfo> _2813_finf = jule::new_ptr<_1a8ed48b9_FileInfo>(_1a8ed48b9_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1a902be83_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1d705abdc_Ast>,jule::Slice<_201be0d52_Log>> _1a902be83_parse_fileset(jule::Ptr<_20202276b_File> _6022_f) {
	jule::Ptr<_1a904a28c_Parser> _6113_p = jule::new_ptr<_1a904a28c_Parser>(_1a904a28c_Parser{});;
	_1a905a17b_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1d70a0270_ScopeTree> _1a902c88a_new_scope(void) {
	return jule::new_ptr<_1d70a0270_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1a902cb98_is_st(jule::Ptr<_20201c3d1_Token> _5010_current, jule::Ptr<_20201c3d1_Token> _5027_prev) {
	jule::Bool _5043_ok = jule::Bool();
	jule::Bool _5053_terminated = jule::Bool();
	_5043_ok=((_5010_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_5027_prev.get()._field_row < _5010_current.get()._field_row));
	_5053_terminated=(_5010_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5043_ok,_5053_terminated);
}



inline jule::Bool _1a902d00b_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _5629_tokens, jule::I64& _5648_i) {
	if (((_5648_i > 1LL) && (_5629_tokens[(_5648_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_20201c3d1_Token> _6213_prev = _5629_tokens[(_5648_i - 1LL)];;
		return ((_6213_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _20201cdc6_is_bin_op(_6213_prev.get()._field_kind)) && (_6213_prev.get()._field_row < _5629_tokens[_5648_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1a902d3a2_next_st_pos(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _7117_tokens, jule::I64 _7135_start) {
	jule::I64 _7213_brace_n = 0LL;;
	jule::I64 _7313_i = _7135_start;;
	for (; (_7313_i < _7117_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_20201c3d1_Token> _7713_tok = _7117_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1ac3575a7:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ac359367:;
								{
									if (((_7213_brace_n == 0LL) && (_7313_i > _7135_start))) {
										if ((!(_1a902d00b_prev_is_incomplete_expr(_7117_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1a902cb98_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_brace_n)++;
								}
							}
							else {
								_case_begin_1ac357dd2:;
								{
									(_7213_brace_n)--;
									if (((_7213_brace_n == 0LL) && ((_7313_i + 1LL) < _7117_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1a902cb98_is_st(_7117_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1ac357c17:;
						};
						goto _iter_next_1ac355be3;
					}
				}
				_match_end_1ac357552:;
			};
			if ((_7213_brace_n != 0LL)) {
				goto _iter_next_1ac355be3;
			};
			if ((_7313_i > _7135_start)) {
				if (_1a902d00b_prev_is_incomplete_expr(_7117_tokens,_7313_i)) {
					goto _iter_next_1ac355be3;
				};
				std::tie(_7517_ok,_7617_terminated) = _1a902cb98_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1a902cb98_is_st(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1ac355be3;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1ac355be3:;
	}
	_iter_end_1ac355be3:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::Bool> _1a902d6e3_skip_st(jule::I64& _13317_i, jule::Slice<jule::Ptr<_20201c3d1_Token>> _13329_tokens) {
	jule::I64 _1349_start = _13317_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13317_i,_13513_terminated) = _1a902d3a2_next_st_pos(_13329_tokens,_1349_start);
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _13713_st_tokens = _13329_tokens.slice(_1349_start,_13317_i);;
	if (_13513_terminated) {
		if ((_13713_st_tokens.len() == 1LL)) {
			std::tie(_13713_st_tokens,_13513_terminated) = _1a902d6e3_skip_st(_13317_i,_13329_tokens);
			return std::make_tuple(_13713_st_tokens,_13513_terminated);
		};
		_13713_st_tokens=_13713_st_tokens.slice(0LL,(_13713_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13713_st_tokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _1a902dd86_split_stmts(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _15521_tokens) {
	jule::Slice<jule::Ptr<_1a902d9e0_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1a902d9e0_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15521_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_20201c3d1_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1a902d6e3_skip_st(_15713_pos,_15521_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1a902d9e0_stmt>(_1a902d9e0_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1ac362d87:;
	}
	_iter_end_1ac362d87:;;
	return _15613_stmts;
}



inline jule::Ptr<_1a903a8dc_CallData> _1a903ac50_get_call_data(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _4523_tokens) {
	jule::Ptr<_1a903a8dc_CallData> _4613_data = jule::new_ptr<_1a903a8dc_CallData>();;
	std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_args_tokens) = _1a9048ac6_range_last(_4523_tokens);
	if ((_4613_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4613_data;
	};
	jule::Ptr<_20201c3d1_Token> _539_token = _4613_data.get()._field_expr_tokens[(_4613_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_539_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_539_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_generics_tokens) = _1a9048ac6_range_last(_4613_data.get()._field_expr_tokens);
	};
	return _4613_data;
}



inline jule::Slice<jule::Ptr<_20201c3d1_Token>> _1a903b03b_get_block_expr(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _6124_tokens) {
	jule::I64 _6213_brace_n = 0LL;;
	jule::I64 _6313_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_1ac42d00c:;
		if (it != expr.end()) {
			jule::I64 _649_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _6412_tok = *it;
			{
				{
					auto &_match_expr{ _6412_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ac42dd98:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ac42de20:;
						{
							{
								auto &_match_expr{ _6412_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ac4349e7:;
									{
										if (((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL))) {
											if ((_6313_skip_to_next_brace_close > 0LL)) {
												(_6313_skip_to_next_brace_close)--;
											};
											(_6213_brace_n)++;
											goto _match_end_1ac434b29;
										};
										return _6124_tokens.slice(0LL,_649_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ac43518a:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_1ac434c39:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_1ac434b29:;
							};
						}
					}
					_match_end_1ac42dbbc:;
				};
			}
			_iter_next_1ac42d00c:;
			++it;
			_649_i++;
			goto _iter_begin_1ac42d00c;
		}
		_iter_end_1ac42d00c:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a903b2d3_split_colon(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _9221_tokens) {
	jule::I64 _9313_range_n = 0LL;;
	{
		auto &expr = _9221_tokens;
		auto it = expr.begin();
		_iter_begin_1ac4352de:;
		if (it != expr.end()) {
			jule::I64 _949_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _9412_token = *it;
			{
				{
					auto &_match_expr{ _9412_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ac4372ad:;
						{
							{
								auto &_match_expr{ _9412_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ac43790c:;
									{
										(_9313_range_n)++;
										goto _iter_next_1ac4352de;
									}
								}
								else {
									_case_begin_1ac437b93:;
									{
										(_9313_range_n)--;
									}
								}
								_match_end_1ac4379c8:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1ac437335:;
						{
							if ((_9313_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_20201c3d1_Token>> _10825_l = _9221_tokens.slice(0LL,_949_i);;
								jule::Slice<jule::Ptr<_20201c3d1_Token>> _10925_r = _9221_tokens.slice((_949_i + 1LL));;
								return std::make_tuple(_10825_l,_10925_r);
							};
						}
					}
					_match_end_1ac43707c:;
				};
			}
			_iter_next_1ac4352de:;
			++it;
			_949_i++;
			goto _iter_begin_1ac4352de;
		}
		_iter_end_1ac4352de:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1a903b602_find_lowest_prec_op(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _11925_tokens) {
	jule::U8 _12413_prec = 255LLU;;
	jule::I64 _12513_prec_pos = -1LL;;
	jule::I64 _12713_brace_n = 0LL;;
	jule::Bool _12813_skip_to_next_brace_open = false;;
	{
		auto &expr = _11925_tokens;
		auto it = expr.begin();
		_iter_begin_1ac43abda:;
		if (it != expr.end()) {
			jule::I64 _1299_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> &_12912_token = *it;
			{
				{
					
					if ((_12912_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1ac43ba43:;
						{
							{
								auto &_match_expr{ _12912_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ac43c67b:;
									{
										_12813_skip_to_next_brace_open=false;
										goto _case_begin_1ac43cdb8;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ac43cdb8:;
									{
										(_12713_brace_n)++;
									}
								}
								else {
									_case_begin_1ac43c912:;
									{
										(_12713_brace_n)--;
									}
								}
								_match_end_1ac43c747:;
							};
							goto _iter_next_1ac43abda;
						}
					}
					else if (_12813_skip_to_next_brace_open) {
						_case_begin_1ac43baba:;
						{
							goto _iter_next_1ac43abda;
						}
					}
					else if ((_12912_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1ac43bb42:;
						{
							_12813_skip_to_next_brace_open=true;
							goto _iter_next_1ac43abda;
						}
					}
					else if ((_1299_i == 0LL)) {
						_case_begin_1ac43bbb9:;
						{
							goto _iter_next_1ac43abda;
						}
					}
					else if ((_12912_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1ac43bc41:;
						{
							goto _iter_next_1ac43abda;
						}
					}
					else if ((_12713_brace_n > 0LL)) {
						_case_begin_1ac43bcb8:;
						{
							goto _iter_next_1ac43abda;
						}
					}
					_match_end_1ac43b8cd:;
				};
				jule::Ptr<_20201c3d1_Token> _15613_left = _11925_tokens[(_1299_i - 1LL)];;
				if (((_15613_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15613_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1ac43abda;
				};
				if ((((_1299_i > 1LL) && (_15613_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15613_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_20201c3d1_Token> _16417_lleft = _11925_tokens[(_1299_i - 2LL)];;
					if (((_16417_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16417_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12912_token.get()._field_kind == jule::Str("&", 1)) || (_12912_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1ac43abda;
						};
					};
				};
				jule::U8 _17313_p = _20201c788_prec(_12912_token.ptr());;
				if (((_17313_p != 0LLU) && (_17313_p <= _12413_prec))) {
					_12413_prec=_17313_p;
					_12513_prec_pos=_1299_i;
				};
			}
			_iter_next_1ac43abda:;
			++it;
			_1299_i++;
			goto _iter_begin_1ac43abda;
		}
		_iter_end_1ac43abda:;
	};
	return _12513_prec_pos;
}



inline jule::Ptr<_1d70967c7_IdentExpr> _1a903b899_build_ident_expr(jule::Ptr<_20201c3d1_Token>& _18326_token) {
	return jule::new_ptr<_1d70967c7_IdentExpr>(_1d70967c7_IdentExpr{._field_token=_18326_token, ._field_ident=_18326_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::I64> _1a903bb41_get_range_expr_tokens(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _19131_tokens) {
	jule::I64 _19213_range_n = 0LL;;
	jule::I64 _19313_i = (_19131_tokens.len() - 1LL);;
	for (; (_19313_i >= 0LL); (_19313_i)--) {
		{
			jule::Ptr<_20201c3d1_Token> _19513_tok = _19131_tokens[_19313_i];;
			if ((_19513_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19513_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ac4456a6:;
						{
							(_19213_range_n)++;
						}
					}
					else {
						_case_begin_1ac446069:;
						{
							(_19213_range_n)--;
						}
					}
					_match_end_1ac445d5a:;
				};
			};
			if ((_19213_range_n == 0LL)) {
				return std::make_tuple(_19131_tokens.slice(0LL,_19313_i),_19213_range_n);
			};
		}
	_iter_next_1ac444ead:;
	}
	_iter_end_1ac444ead:;;
	return std::make_tuple(nullptr,_19213_range_n);
}



inline jule::Bool _1a9047498_check_assign_tokens(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_202021979_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1ac4e35ab:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac4e41d3:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1ac4e44ad:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1ac4e429e:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1ac4e35ab;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _202021eb8_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1ac4e35ab:;
			++it;
			goto _iter_begin_1ac4e35ab;
		}
		_iter_end_1ac4e35ab:;
	};
	return false;
}



inline _201be0d52_Log _1a9048389_make_err(jule::I64 _5113_row, jule::I64 _5123_col, jule::Ptr<_20202276b_File>& _5134_f, jule::Str _5144_fmt, jule::Slice<jule::Any> _5157_args) {
	return _201be0d52_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_5113_row, ._field_column=_5123_col, ._field_path=_5134_f.get()._field_path, ._field_text=_201be1292_logf(_5144_fmt,jule::Any(_5157_args)), };
}



inline jule::Slice<jule::Ptr<_20201c3d1_Token>> _1a904882e_range(jule::I64& _7015_i, jule::Str _7023_open, jule::Str _7040_close, jule::Slice<jule::Ptr<_20201c3d1_Token>>& _7063_tokens) {
	if ((_7015_i >= _7063_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_20201c3d1_Token> _759_tok = _7063_tokens[_7015_i];;
	if (((_759_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_kind != _7023_open))) {
		return nullptr;
	};
	(_7015_i)++;
	jule::I64 _8113_range_n = 1LL;;
	jule::I64 _829_start = _7015_i;;
	for (; ((_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len())); (_7015_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _8413_token = _7063_tokens[_7015_i];;
			if ((_8413_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8413_token.get()._field_kind };
					
					if (_match_expr == _7023_open) {
						_case_begin_1ac4ea629:;
						{
							(_8113_range_n)++;
						}
					}
					else if (_match_expr == _7040_close) {
						_case_begin_1ac4ea6a1:;
						{
							(_8113_range_n)--;
						}
					}
					_match_end_1ac4ea3e8:;
				};
			};
		}
	_iter_next_1ac4e8ddb:;
	}
	_iter_end_1ac4e8ddb:;;
	return _7063_tokens.slice(_829_start,(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::Slice<jule::Ptr<_20201c3d1_Token>>> _1a9048ac6_range_last(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _10520_tokens) {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _10540_cutted = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _10558_cut = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	if ((_10520_tokens.len() == 0LL)) {
		_10540_cutted = _10520_tokens;
		_10558_cut = nullptr;
		return std::make_tuple(_10540_cutted,_10558_cut);
	} else if ((_10520_tokens[(_10520_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10540_cutted = _10520_tokens;
		_10558_cut = nullptr;
		return std::make_tuple(_10540_cutted,_10558_cut);
	};
	jule::I64 _11213_brace_n = 0LL;;
	jule::I64 _11313_i = (_10520_tokens.len() - 1LL);;
	for (; (_11313_i >= 0LL); (_11313_i)--) {
		{
			jule::Ptr<_20201c3d1_Token> _11513_token = _10520_tokens[_11313_i];;
			if ((_11513_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11513_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ac4edcd1:;
						{
							(_11213_brace_n)++;
							goto _iter_next_1ac4eb680;
						}
					}
					else {
						_case_begin_1ac4ee6d8:;
						{
							(_11213_brace_n)--;
						}
					}
					_match_end_1ac4ee4c9:;
				};
			};
			if ((_11213_brace_n == 0LL)) {
				_10540_cutted = _10520_tokens.slice(0LL,_11313_i);
				_10558_cut = _10520_tokens.slice(_11313_i);
				return std::make_tuple(_10540_cutted,_10558_cut);
			};
		}
	_iter_next_1ac4eb680:;
	}
	_iter_end_1ac4eb680:;;
	_10540_cutted = _10520_tokens;
	_10558_cut = nullptr;
	return std::make_tuple(_10540_cutted,_10558_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>>,jule::Slice<_201be0d52_Log>> _1a9049038_parts(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _14215_tokens, jule::U64 _14233_id, jule::Bool _14246_expr_must) {
	if ((_14215_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_20201c3d1_Token>>> _14713_parts = nullptr;;
	jule::Slice<_201be0d52_Log> _14813_errors = nullptr;;
	jule::I64 _15013_range_n = 0LL;;
	jule::I64 _15113_last = 0LL;;
	{
		auto &expr = _14215_tokens;
		auto it = expr.begin();
		_iter_begin_1ac502dc3:;
		if (it != expr.end()) {
			jule::I64 _1529_i = it - expr.begin();
			jule::Ptr<_20201c3d1_Token> _15212_token = *it;
			{
				if ((_15212_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _15212_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ac503e18:;
							{
								(_15013_range_n)++;
								goto _iter_next_1ac502dc3;
							}
						}
						else {
							_case_begin_1ac5041e3:;
							{
								(_15013_range_n)--;
							}
						}
						_match_end_1ac503ed4:;
					};
				};
				if ((_15013_range_n > 0LL)) {
					goto _iter_next_1ac502dc3;
				};
				if ((_15212_token.get()._field_id == _14233_id)) {
					if ((_14246_expr_must && ((_1529_i - _15113_last) <= 0LL))) {
						_201be0d52_Log _17121_err = _1a9048389_make_err(_15212_token.get()._field_row,_15212_token.get()._field_column,_15212_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14813_errors = jule::alloc_for_append(_14813_errors,1);_14813_errors.__push(_17121_err);;
					};
					_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(_14215_tokens.slice(_15113_last,_1529_i));;
					_15113_last=static_cast<jule::I64>((_1529_i + 1LL));
				};
			}
			_iter_next_1ac502dc3:;
			++it;
			_1529_i++;
			goto _iter_begin_1ac502dc3;
		}
		_iter_end_1ac502dc3:;
	};
	if ((_15113_last < _14215_tokens.len())) {
		_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(_14215_tokens.slice(_15113_last));;
	} else if ((!(_14246_expr_must))) {
		_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(jule::Slice<jule::Ptr<_20201c3d1_Token>>());;
	};
	return std::make_tuple(_14713_parts,_14813_errors);
}



inline jule::Str _1a9049302_get_close_kind_of_brace(jule::Str _18828_left) {
	{
		auto &_match_expr{ _18828_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1ac5037ec:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1ac503863:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1ac5038c9:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1ac503742:;
			{
				return jule::Str();
			}
		}
		_match_end_1ac507955:;
	};
}



inline _201be0d52_Log _1a90496ba_compiler_err(jule::Ptr<_20201c3d1_Token>& _20118_token, jule::Str& _20134_fmt, jule::Slice<jule::Any> _20147_args) {
	return _201be0d52_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_20118_token.get()._field_row, ._field_column=_20118_token.get()._field_column, ._field_path=_20118_token.get()._field_file.get()._field_path, ._field_text=_201be1292_logf(_20134_fmt,jule::Any(_20147_args)), ._field_line=_202023948_get_row(_20118_token.get()._field_file.ptr(), _20118_token.get()._field_row), };
}



inline void _1a9049a1c_push_suggestion(_201be0d52_Log* _21231_log, jule::Str _21242_fmt, jule::Slice<jule::Any> _21255_args) {
	_21231_log->_field_suggestion=_201be1292_logf(_21242_fmt,jule::Any(_21255_args));
}



inline jule::Str _1a9049dc4_tokstoa(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _21613_tokens) {
	jule::Str _21713_s = jule::Str();;
	{
		auto &expr = _21613_tokens;
		auto it = expr.begin();
		_iter_begin_1ac50b30a:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> &_21812_token = *it;
			{
				_21713_s+=_21812_token.get()._field_kind;
			}
			_iter_next_1ac50b30a:;
			++it;
			goto _iter_begin_1ac50b30a;
		}
		_iter_end_1ac50b30a:;
	};
	return _21713_s;
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905aaa5_build_void_type(void) {
	return jule::new_ptr<_1d709023d_TypeDecl>();
}



inline jule::Ptr<_1d709023d_TypeDecl> _1a905ad19_build_prim_type(jule::Ptr<_20201c3d1_Token> _2324_t) {
	return jule::new_ptr<_1d709023d_TypeDecl>(_1d709023d_TypeDecl{._field_token=_2324_t, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1d7090804_IdentTypeDecl>(_1d7090804_IdentTypeDecl{._field_token=_2324_t, ._field_ident=_2324_t.get()._field_kind, }))});
}



inline std::tuple<jule::Slice<jule::Ptr<_20201c3d1_Token>>,jule::I64> _1a905b15a_split_map_range(jule::Slice<jule::Ptr<_20201c3d1_Token>>& _3625_tokens, jule::I64& _3648_i) {
	jule::Slice<jule::Ptr<_20201c3d1_Token>> _3658_range_tokens = jule::Slice<jule::Ptr<_20201c3d1_Token>>();
	jule::I64 _3682_colon = jule::I64();
	_3682_colon=-1LL;
	jule::I64 _3813_range_n = 0LL;;
	jule::I64 _399_start = _3648_i;;
	for (; (_3648_i < _3625_tokens.len()); (_3648_i)++) {
		{
			jule::Ptr<_20201c3d1_Token> _4113_token = _3625_tokens[_3648_i];;
			if ((_4113_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4113_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ac6833e9:;
						{
							(_3813_range_n)++;
							goto _iter_next_1ac68243c;
						}
					}
					else {
						_case_begin_1ac683d01:;
						{
							(_3813_range_n)--;
						}
					}
					_match_end_1ac683ae2:;
				};
			};
			if ((_3813_range_n == 0LL)) {
				if (((_399_start + 1LL) > _3648_i)) {
					return std::make_tuple(_3658_range_tokens,_3682_colon);
				};
				_3658_range_tokens=_3625_tokens.slice((_399_start + 1LL),_3648_i);
				goto _iter_end_1ac68243c;
			} else if ((_3813_range_n != 1LL)) {
				goto _iter_next_1ac68243c;
			};
			if (((_3682_colon == -1LL) && (_4113_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3682_colon=static_cast<jule::I64>(((_3648_i - _399_start) - 1LL));
			};
		}
	_iter_next_1ac68243c:;
	}
	_iter_end_1ac68243c:;;
	return std::make_tuple(_3658_range_tokens,_3682_colon);
}



inline std::tuple<jule::Bool,jule::Bool> _1c0171cb5_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1ac6da044:;
			{
				_925_ok=_201be484a_is_windows(_201c347be_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1ac6d9b48:;
			{
				_925_ok=_201be4b36_is_darwin(_201c347be_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1ac6d9928:;
			{
				_925_ok=_201be4dcd_is_linux(_201c347be_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1ac6d998e:;
			{
				_925_ok=_201be59d3_is_unix(_201c347be_OS);
			}
		}
		else {
			_case_begin_1ac6d91ec:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1ac6d9609:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1c016bc49_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1ac6dc40e:;
			{
				_3027_ok=_201be51ec_is_i386(_201c12b32_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1ac6dc1de:;
			{
				_3027_ok=_201be5494_is_amd64(_201c12b32_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1ac6dc255:;
			{
				_3027_ok=_201be573b_is_arm64(_201c12b32_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1ac6dc2bb:;
			{
				_3027_ok=_201be60ee_is_64bit(_201c12b32_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1ac6dc332:;
			{
				_3027_ok=_201be5d57_is_32bit(_201c12b32_ARCH);
			}
		}
		else {
			_case_begin_1ac6db9b3:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1ac6dbdc0:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1c016bd7b_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_200cbad1d_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _200caec13_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _201b85643_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1c0171cb5_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1c016bc49_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_201b85643_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1c0171cb5_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1c016bc49_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1c016bc49_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1c0171cb5_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1c0171cb5_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1c0186824_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_201c347be_OS);;
	if (_201be59d3_is_unix(_201c347be_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1c0186a77_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_201c12b32_ARCH);;
	if (_201be60ee_is_64bit(_201c12b32_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_201be5d57_is_32bit(_201c12b32_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1c0186d30_init_vars(jule::Slice<jule::Str>& _5519_vars, _1c0186516_CompileInfo& _5533_info) {
	_1c0186824_set_os_vars(_5519_vars);
	_1c0186a77_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac6ee2bc:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac6ee465:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1ac6eeec1:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac700e06:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac7004dd:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac700554:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1ac700da1:;
	};
}



inline jule::Slice<jule::U8> _1d697798e_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1eedeae71_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_201c46a12_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _201be0d52_Log _1d697675c_flat_compiler_err(jule::Str _4122_text) {
	return _201be0d52_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _1a8b1ab93_push_passes(jule::Ptr<_1be275c99_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac734c92:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1ac735776:;
					if (it != expr.end()) {
						_1bc9cc7bb_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1ac735776;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1ac7365bd:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1ac735776;
										};
									}
									_iter_next_1ac7365bd:;
									++it;
									goto _iter_begin_1ac7365bd;
								}
								_iter_end_1ac7365bd:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1ac735776:;
						++it;
						goto _iter_begin_1ac735776;
					}
					_iter_end_1ac735776:;
				};
			}
			_iter_next_1ac734c92:;
			++it;
			goto _iter_begin_1ac734c92;
		}
		_iter_end_1ac734c92:;
	};
}



inline jule::Slice<jule::Str> _1a8b26374_get_all_unique_passes(jule::Ptr<_1be275c99_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1be272d40_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1a8b1ab93_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1ac737aa8:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1a8b1ab93_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1ac737aa8:;
			++it;
			goto _iter_begin_1ac737aa8;
		}
		_iter_end_1ac737aa8:;
	};
	return _13013_passes;
}



inline _1c0186516_CompileInfo _1a8b38d59_build_compile_info(void) {
	_1c0186516_CompileInfo _14313_info = _1c0186516_CompileInfo{._field_prod=_1eec82ce7_PRODUCTION, ._field_test=_1eec82324_TEST, };;
	{
		auto &_match_expr{ _1eec80322_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac73956b:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac7395e3:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ac7394e4:;
	};
	{
		auto &_match_expr{ _1eec81ad7_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac738aba:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac7399bc:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac739a33:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ac73988a:;
	};
	return _14313_info;
}



inline void _1a9108977_eliminate_defines(jule::Ptr<_1a8900659_IR>& _28531_ir) {
	jule::Ptr<_1a9105e3b_ObjectDeadCode> _28613_ocd = static__1a9106337_new(_28531_ir);;
	_1a91086ad_elimanate(_28613_ocd);
}



inline jule::Ptr<_1d705bd64_Directive> _1a9108d0c_find_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _29124_directives, jule::Str _29155_tag) {
	{
		auto &expr = _29124_directives;
		auto it = expr.begin();
		_iter_begin_1ac77c889:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_tag.get()._field_kind == _29155_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1ac77c889:;
			++it;
			goto _iter_begin_1ac77c889;
		}
		_iter_end_1ac77c889:;
	};
	return nullptr;
}



inline jule::Bool _1a910914d_has_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _30119_directives, jule::Str _30150_tag) {
	return (_1a9108d0c_find_directive(_30119_directives,_30150_tag) != nullptr);
}



inline void _1a910c915_eliminate_dead_code_of_scope(jule::Ptr<_1be1ca25e_Scope> _22737_s) {
	jule::Slice<jule::Ptr<_1be258e8b_Label>> _2289_labels = jule::Slice<jule::Ptr<_1be258e8b_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1be259178_GotoSt>> _2299_gotos = jule::Slice<jule::Ptr<_1be259178_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1a9109cca_ScopeDeadCode> _23013_sdc = jule::new_ptr<_1a9109cca_ScopeDeadCode>(_1a9109cca_ScopeDeadCode{._field_s=_22737_s, ._field_stmts=(&(_22737_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1be258e8b_Label>>>)((&(_2289_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1be259178_GotoSt>>>)((&(_2299_gotos))))});;
	{
		_1a910c629_optimize_stmts(_23013_sdc);
	};
}



inline void _1a910cb9b_eliminate_scope_functions(jule::Slice<jule::Ptr<_1bc9c9873_Fn>>& _24035_funcs) {
	{
		auto &expr = _24035_funcs;
		auto it = expr.begin();
		_iter_begin_1ac7c2956:;
		if (it != expr.end()) {
			jule::Ptr<_1bc9c9873_Fn> _24117_func = *it;
			{
				{
					auto &expr = _24117_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1ac7c3083:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9c4c_FnIns> _24221_ins = *it;
						{
							_1a910c915_eliminate_dead_code_of_scope(_24221_ins.get()._field_scope);
						}
						_iter_next_1ac7c3083:;
						++it;
						goto _iter_begin_1ac7c3083;
					}
					_iter_end_1ac7c3083:;
				};
			}
			_iter_next_1ac7c2956:;
			++it;
			goto _iter_begin_1ac7c2956;
		}
		_iter_end_1ac7c2956:;
	};
}



inline void _1a910cdee_eliminate_functions_scope_package(jule::Ptr<_1be275c99_Package>& _24843_pkg) {
	{
		auto &expr = _24843_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac7c2725:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _24917_f = *it;
			{
				_1a910cb9b_eliminate_scope_functions(_24917_f.get()._field_funcs);
			}
			_iter_next_1ac7c2725:;
			++it;
			goto _iter_begin_1ac7c2725;
		}
		_iter_end_1ac7c2725:;
	};
}



inline void _1a910d1a7_eliminate_scope_package(jule::Ptr<_1be275c99_Package>& _25433_pkg) {
	_1a910cdee_eliminate_functions_scope_package(_25433_pkg);
}



inline void _1a910d394_eliminate_scopes(jule::Ptr<_1a8900659_IR>& _25930_ir) {
	jule::I64 _26013_i = (_25930_ir.get()._field_used.len() - 1LL);;
	for (; (_26013_i >= 0LL); (_26013_i)--) {
		{
			jule::Ptr<_1be272d40_ImportInfo> _26217_u = _25930_ir.get()._field_used[_26013_i];;
			if ((!(_26217_u.get()._field_cpp_linked))) {
				_1a910d1a7_eliminate_scope_package(_26217_u.get()._field_package);
			};
		}
	_iter_next_1ac7c52c7:;
	}
	_iter_end_1ac7c52c7:;;
	_1a910d1a7_eliminate_scope_package(_25930_ir.get()._field_main);
}



inline jule::Bool _1be49542a_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _201adbc1a_has_prefix(_39919_f,_200cabda8_join(jule::Slice<jule::Str>::make({_201c13726_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1be495749_is_constant_valid_conditional_case(jule::Ptr<_1be2437b1_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1ac84935c:;
			{
				jule::Ptr<_1be159e14_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1be159e14_Const>();;
				return (_1be1b5dd7_is_bool(_40613_c.ptr()) && _1be1b3a3e_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1ac849307:;
	};
	return false;
}



inline jule::Bool _1be495a24_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1ac849d1e:;
			{
				jule::Ptr<_1be159e14_Const> _41513_c = _41225_expr.operator jule::Ptr<_1be159e14_Const>();;
				return (_1be1b5dd7_is_bool(_41513_c.ptr()) && (!(_1be1b3a3e_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d70abda3_BinopExprModel>>()) {
			_case_begin_1ac849d85:;
			{
				jule::Ptr<_1d70abda3_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1d70abda3_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1be495a24_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1be495a24_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1ac849cb9:;
	};
	return false;
}



inline jule::Bool _1be495d32_is_constant_valid_match_case(jule::Ptr<_1be259d49_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac84ce21:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a92d9_Data> &_42712_expr = *it;
			{
				if (((_1be3a9b9c_is_const(_42712_expr.ptr()) && _1be1b5dd7_is_bool(_42712_expr.get()._field_constant.ptr())) && _1be1b3a3e_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1ac84ce21:;
			++it;
			goto _iter_begin_1ac84ce21;
		}
		_iter_end_1ac84ce21:;
	};
	return false;
}



inline jule::Bool _1be4960c9_is_unreachable_conditional_case(jule::Ptr<_1be2437b1_If>& _43537_i) {
	return _1be495a24_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1be4963a4_is_unreachable_match_case(jule::Ptr<_1be259d49_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac84eb59:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a92d9_Data> &_44012_expr = *it;
			{
				if ((!(_1be495a24_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1ac84eb59:;
			++it;
			goto _iter_begin_1ac84eb59;
		}
		_iter_end_1ac84eb59:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1c00adb47_check_for_bit_shift_opt(jule::Ptr<_1d70abbb6_OperandExprModel>& _43329_l, jule::Ptr<_1d70abbb6_OperandExprModel>& _43352_r) {
	jule::Bool _43376_ok = jule::Bool();
	jule::U64 _43386_x = jule::U64();
	if (((!(_1be25786e_is_int(_1be3d4963_to_str(_43329_l.get()._field_kind.ptr())))) || (!(_1be25786e_is_int(_1be3d4963_to_str(_43352_r.get()._field_kind.ptr())))))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	{
		auto &_match_expr{ _43352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be159e14_Const>>()) {
			_case_begin_1ac89077c:;
			{
				goto _match_end_1ac89131b;
			}
		}
		else {
			_case_begin_1ac89145e:;
			{
				_43376_ok = false;
				_43386_x = 0LLU;
				return std::make_tuple(_43376_ok,_43386_x);
			}
		}
		_match_end_1ac89131b:;
	};
	_43386_x=static_cast<jule::U64>(_1be1b44e0_as_u64(_43352_r.get()._field_model.operator jule::Ptr<_1be159e14_Const>().ptr()));
	if (((_43386_x == 0LLU) || ((_43386_x & 1LL) != 0LLU))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	jule::F64 _4479_j = _1be0ea558_log2(static_cast<jule::F64>(static_cast<jule::F64>(_43386_x)));;
	jule::U64 _4489_z = static_cast<jule::U64>(_4479_j);;
	if ((static_cast<jule::F64>(_4489_z) != _4479_j)) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	_43376_ok = true;
	_43386_x = _4489_z;
	return std::make_tuple(_43376_ok,_43386_x);
}



inline void _1c00b0dd0_push_opt_level(jule::I64 _3223_level) {
	_1c00ae40b_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00ae75d_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00aea6b_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00aedbd_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00b01cb_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00b04d9_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00b07e7_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c00b0c15_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _1a90dd187_detect_enabled(void) {
	_1a9077660_expr_enabled=(((_1c00b07e7_PTR || _1c00aedbd_MATH) || _1c00b01cb_ACCESS) || _1c00b0c15_COND);
	_1a90787b5_scope_enabled=((_1c00b0c15_COND || _1c00aea6b_APPEND) || _1c00ae40b_COPY);
}



inline void _1a91232dd_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_201c46a12_exit(1LL);
}



inline jule::U64 _1aa38d326_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1aa38d667_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1aa38d9ec_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1ac9218c9:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ac921a2d:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ac921a94:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ac921b0a:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ac921b71:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ac921bd7:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ac921c4d:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ac921cb4:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ac921d2a:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1ac921d91:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ac921e18:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1ac921874:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1aa3178ee_is_copy_optimizable(jule::Ptr<_1be3a92d9_Data>& _73325_expr) {
	if ((!(_73325_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _73325_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c5be3_SlicingExprModel>>()) {
			_case_begin_1ac9a1717:;
			{
				return false;
			}
		}
		_match_end_1ac9a1c34:;
	};
	return true;
}



inline jule::Bool _1aa317ca6_is_iter_copy_optimizable(jule::Ptr<_1be3a92d9_Data>& _74430_expr, jule::Ptr<_1be36365b_Var>& _74444_v) {
	if (((!(_74430_expr.get()._field_lvalue)) && (!(_1be3d5964_mutable(_74430_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_74444_v.get()._field_mutable)) && (!(_74430_expr.get()._field_mutable)));
}



inline jule::Str _1aa325c1a_decompose_common_esq(jule::U8 _114425_b) {
	{
		auto &_match_expr{ _114425_b };
		
		if (_match_expr == '\\') {
			_case_begin_1aca67d0b:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aca67d72:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aca680c5:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1aca6813b:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1aca681a2:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1aca68218:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1aca6827e:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1aca68306:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1aca6837d:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1aca68405:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1aca67b52:;
			{
				return jule::Str();
			}
		}
		_match_end_1aca67a0e:;
	};
}



inline jule::Str _1aa326006_sbtoa(jule::U8 _117110_b) {
	if ((_117110_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_117110_b < 128LLU)) {
		jule::Str _117613_seq = _1aa325c1a_decompose_common_esq(_117110_b);;
		if ((!(_117613_seq.empty()))) {
			return _117613_seq;
		};
		if (((32LL <= _117110_b) && (_117110_b <= 126LLU))) {
			return static_cast<jule::Str>(_117110_b);
		};
	};
	jule::Str _11849_seq = _1be1288a5_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_117110_b)),8LL);;
	if ((_11849_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11849_seq);
	};
	return (jule::Str("\\", 1) + _11849_seq);
}



inline jule::Str _1aa32629d_cstr_bytes(jule::Slice<jule::U8> _119115_bytes) {
	jule::Str _119213_lit = jule::Str();;
	{
		auto &expr = _119115_bytes;
		auto it = expr.begin();
		_iter_begin_1aca6e2a7:;
		if (it != expr.end()) {
			jule::U8 &_119312_b = *it;
			{
				_119213_lit+=_1aa326006_sbtoa(_119312_b);
			}
			_iter_next_1aca6e2a7:;
			++it;
			goto _iter_begin_1aca6e2a7;
		}
		_iter_end_1aca6e2a7:;
	};
	return _119213_lit;
}



inline jule::Str _1aa3265bc_cstr_lit(jule::Slice<jule::U8> _119913_bytes) {
	return ((jule::Str("\"", 1) + _1aa32629d_cstr_bytes(_119913_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1aa3268ca_ftoa(jule::F64 _12039_f, jule::I64 _120317_bitsize) {
	if ((_120317_bitsize != 32LL)) {
		if ((_12039_f == static_cast<jule::F64>(static_cast<jule::I64>(_12039_f)))) {
			return _1aa326b72_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12039_f)));
		};
		if ((_12039_f == static_cast<jule::F64>(static_cast<jule::U64>(_12039_f)))) {
			return _1aa326e19_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12039_f)));
		};
	};
	jule::Str _121213_m = _1bda4ec05_fmt_float(_12039_f,'f',-1LL,_120317_bitsize);;
	if ((!(_201b85eb2_contains(_121213_m,jule::Str(".", 1))))) {
		_121213_m+=jule::Str(".0", 2);
	};
	return _121213_m;
}



inline jule::Str _1aa326b72_itoa(jule::I64 _12199_x) {
	{
		
		if ((_12199_x == jule::MAX_I64)) {
			_case_begin_1aca734a9:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12199_x == jule::MIN_I64)) {
			_case_begin_1aca73553:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1aca73388:;
	};
	jule::Str _12279_fmt = _1be1289d7_fmt_int(_12199_x,10LL);;
	if (_201be60ee_is_64bit(jule::Str("arm64", 5))) {
		return (_12279_fmt + jule::Str("LL", 2));
	};
	return (_12279_fmt + jule::Str("L", 1));
}



inline jule::Str _1aa326e19_utoa(jule::U64 _12349_x) {
	{
		
		if ((_12349_x == jule::MAX_U64)) {
			_case_begin_1aca754ab:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1aca753ce:;
	};
	jule::Str _12409_fmt = _1be1288a5_fmt_uint(_12349_x,10LL);;
	if (_201be60ee_is_64bit(jule::Str("arm64", 5))) {
		return (_12409_fmt + jule::Str("LLU", 3));
	};
	return (_12409_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1aa3272c1_is_forwarded(jule::Ptr<_1be1ca25e_Scope>& _124718_s) {
	jule::Any _12489_last = _124718_s.get()._field_stmts[(_124718_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12489_last };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a92d9_Data>>()) {
			_case_begin_1aca77986:;
			{
				{
					auto &_match_expr{ _12489_last.operator jule::Ptr<_1be3a92d9_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1bc9c81bd_BuiltinErrorCallExprModel>>()) {
						_case_begin_1aca78558:;
						{
							return true;
						}
					}
					else {
						_case_begin_1aca784e2:;
						{
							return false;
						}
					}
					_match_end_1aca78448:;
				};
			}
		}
		else {
			_case_begin_1aca77832:;
			{
				return true;
			}
		}
		_match_end_1aca77755:;
	};
}



inline jule::Bool _1aa32758a_is_builtin_call_has_debuginf(jule::Ptr<_1bc9c5066_FnCallExprModel>& _126234_m) {
	if ((!(_1d707b559_is_builtin(_126234_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _126234_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>>()) {
			_case_begin_1aca7936c:;
			{
				jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel> _126813_csie = _126234_m.get()._field_expr.operator jule::Ptr<_1bc9c6aa1_CommonSubIdentExprModel>();;
				return (_126813_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1aca79306:;
			{
				return false;
			}
		}
		_match_end_1aca77e5e:;
	};
}



inline void _1aa39389d_iter_files(jule::Ptr<_1be275c99_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1be3a4339_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c00c816c:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4339_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1c00c816c:;
			++it;
			goto _iter_begin_1c00c816c;
		}
		_iter_end_1c00c816c:;
	};
}



inline void _1aa393b01_prepare_structure(jule::Ptr<_1d7073276_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c016cac4:;
		if (it != expr.end()) {
			jule::Ptr<_1d70ab9c9_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a87ec16b:;
					if (it != expr.end()) {
						jule::Ptr<_1bc9c9873_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1a87ec16b;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1a8850235:;
								if (it != expr.end()) {
									jule::Ptr<_1bc9c9c4c_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1bc9c9a60_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1d7061462_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1aa394aad_CustomType>(_1aa394aad_CustomType{._field_kind=static__1aa396461_as_ptr(static__1aa39995e_kind(_101425_p.get()._field_kind))}), 13)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1be3d45ab_TypeKind>(_1be3d45ab_TypeKind{._field_kind=jule::Trait<_1be3d417c_Kind>(jule::new_ptr<_1aa394aad_CustomType>(_1aa394aad_CustomType{._field_kind=static__1aa39995e_kind(_101425_p.get()._field_kind)}), 13)});
										};
									}
									_iter_next_1a8850235:;
									++it;
									goto _iter_begin_1a8850235;
								}
								_iter_end_1a8850235:;
							};
						}
						_iter_next_1a87ec16b:;
						++it;
						goto _iter_begin_1a87ec16b;
					}
					_iter_end_1a87ec16b:;
				};
			}
			_iter_next_1c016cac4:;
			++it;
			goto _iter_begin_1c016cac4;
		}
		_iter_end_1c016cac4:;
	};
}



inline jule::Str _1aa393d98_concat_all_parts(jule::Slice<jule::Ptr<_20201c3d1_Token>> _103421_parts) {
	jule::Str _103513_s = jule::Str();;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1a87ebc1a:;
		if (it != expr.end()) {
			jule::Ptr<_20201c3d1_Token> &_103612_p = *it;
			{
				_103513_s+=_103612_p.get()._field_kind;
			}
			_iter_next_1a87ebc1a:;
			++it;
			goto _iter_begin_1a87ebc1a;
		}
		_iter_end_1a87ebc1a:;
	};
	return _103513_s;
}



inline jule::Ptr<_1d705bd64_Directive> _1aa39c2be_find_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _32924_directives, jule::Str _32955_tag) {
	{
		auto &expr = _32924_directives;
		auto it = expr.begin();
		_iter_begin_1acd2585a:;
		if (it != expr.end()) {
			jule::Ptr<_1d705bd64_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_tag.get()._field_kind == _32955_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1acd2585a:;
			++it;
			goto _iter_begin_1acd2585a;
		}
		_iter_end_1acd2585a:;
	};
	return nullptr;
}



inline jule::Bool _1aa39c654_has_directive(jule::Slice<jule::Ptr<_1d705bd64_Directive>>& _33919_directives, jule::Str _33950_tag) {
	return (_1aa39c2be_find_directive(_33919_directives,_33950_tag) != nullptr);
}



inline void _201baa35a_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _201bab25c_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_201baa35a_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _201bb45a6_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _201bb45a6_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1acda1ee1:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1acda1ee1:;
			++it;
			goto _iter_begin_1acda1ee1;
		}
		_iter_end_1acda1ee1:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _201bb45a6_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1acda3b5d:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_200cecaa8_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1acda3b5d:;
			++it;
			_519_i++;
			goto _iter_begin_1acda3b5d;
		}
		_iter_end_1acda3b5d:;
	};
	jule::outln(_4913_s);
}



inline void _201bc09d0_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_201baa35a_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11 @master", 18));
}



inline void _201bc2394_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _201be4262_DISTOS;
		auto it = expr.begin();
		_iter_begin_1acda7304:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1acda7304:;
			++it;
			goto _iter_begin_1acda7304;
		}
		_iter_end_1acda7304:;
	};
	jule::outln(jule::Str());
}



inline void _201bc2ae2_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _201be45e7_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1acda7a30:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1acda7a30:;
			++it;
			goto _iter_begin_1acda7a30;
		}
		_iter_end_1acda7a30:;
	};
	jule::outln(jule::Str());
}



inline void _201bc3340_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_201baa35a_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1acdaac86:;
			{
				_201bc2394_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1acdaa978:;
			{
				_201bc2ae2_tool_distarch();
			}
		}
		else {
			_case_begin_1acda91d5:;
			{
				_201baa35a_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1acdaa7ad:;
	};
}



inline void _201bc3a8d_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_201baa35a_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _1eec80322_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1eec81ad7_CPP_STD));
}



inline void _201bc42db_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_201baa35a_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1acdb0483:;
			{
				({
					auto except = static__1eedeb14c_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_201baa35a_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1acdadc45:;
			{
				_201baa35a_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1acdb0032:;
	};
}



inline jule::Bool _201bc4d69_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1acdb19b2:;
			{
				_201bab25c_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1acdb1a28:;
			{
				_201bc09d0_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1acdb1a8e:;
			{
				_201bc3340_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1acdb2386:;
			{
				_201bc3a8d_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1acdb23ec:;
			{
				_201bc42db_mod(_15121_args);
			}
		}
		else {
			_case_begin_1acdb18d5:;
			{
				return false;
			}
		}
		_match_end_1acdb1808:;
	};
	return true;
}



inline void _201bd32ea_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _200c5b572_args();;
	if ((_18713_args.len() < 2LL)) {
		_201bd32ea_show_info();
		return;;
	};
	if (_201bc4d69_process_command(_18713_args)) {
		return;;
	};
	_1aa3e997b_compile_command(_18713_args);
}



inline void _201bb24b6_enable_vtp(void) {
	jule::Uintptr _199_h_out = _200ac1706_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dw_mode = 0LL;;
	if ((!(_200ac42ca_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_200ac461b_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _201bca49b_init(void) {
	_201bb24b6_enable_vtp();
}



inline void _1aa3b501d_init(void) {
	_1eec80322_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_200ad484b_File> _1aa3b6b13_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _200cc16e7_dir(_4817_path);;
	({
		auto except = static__200ccda01_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__200c21092_create(_499_dir);
				if (!except.ok()) {
					_1a91232dd_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1eedd9aec_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1a91232dd_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1aa3ae1e3_clear_objects(void) {
	({
		auto except = static__200b68c43_remove(_1aa3b25ae_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__200cca338_remove(_1aa3b8d13_OUT_DIR);
}



inline void _1aa3b336d_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_201c35bcc_Cmd> _7813_cmd = static__201c3610b_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_201b85d80_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _201c36370_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1acdbc2d6:;
					{
						static__1a9120b59_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1acdbc54a:;
					{
						static__1a9120b59_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1acdbc5b1:;
					{
						static__1a9120b59_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1acdbc627:;
					{
						static__1a9120b59_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1acdbc429:;
					{
						static__1a9120b59_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1acdbc36e:;
			};
			_1a91232dd_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1eec80322_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a9120b59_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1a91232dd_throw(jule::Str());
	};
	_1aa3ae1e3_clear_objects();
}



inline jule::Bool _1aa3adb60_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _201b85643_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _201bd47d5_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1aa3b1536_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1eec81ad7_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1acdc3265:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1acdc32cb:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acdc3430:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1acdc3122:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_1eec82ce7_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1aa3b104c_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1eec81ad7_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1acdc59a4:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1acdc5a1a:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acdc5b6e:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1acdc5861:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_1eec82ce7_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1aa3bdbe7_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1a8900659_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _1eec81873_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str();;
	{
		auto &_match_expr{ _1eec80322_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1acdc839c:;
			{
				_1aa3b104c_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1acdc880e:;
			{
				_1aa3b1536_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1acdc8688:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1acdc8b2d:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1acdc8b2d:;
			++it;
			goto _iter_begin_1acdc8b2d;
		}
		_iter_end_1acdc8b2d:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acdca1e5:;
		if (it != expr.end()) {
			jule::Ptr<_1be272d40_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1aa3adb60_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1acdca1e5:;
			++it;
			goto _iter_begin_1acdca1e5;
		}
		_iter_end_1acdca1e5:;
	};
	if ((!(_1aa3c2dc7_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1aa3c2dc7_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1aa3b25ae_get_compile_path(void) {
	return _200cabda8_join(jule::Slice<jule::Str>::make({_1aa3b8d13_OUT_DIR,_1aa3b997e_OUT_NAME}));
}



inline void _1aa3b26e1_apply_target_independent_optimizations(jule::Ptr<_1a8900659_IR>& _21448_ir) {
	jule::Ptr<_1a90d5b1e_Optimizer> _21613_opt = static__1a90a7470_new(_21448_ir);;
	_1a90a799d_optimize(_21613_opt.ptr());
}



inline void _1aa3e8b67_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1eec80322_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1acdcc25d:;
			{
				_1a91232dd_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1acdcca66:;
			{
				if (_1eec81873_COMPILER_PATH.empty()) {
					_1eec81873_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1acdccacc:;
			{
				if (_1eec81873_COMPILER_PATH.empty()) {
					_1eec81873_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1acdcca00:;
			{
				_1a91232dd_throw((jule::Str("invalid option value for --compiler: ", 37) + _1eec80322_COMPILER));
			}
		}
		_match_end_1acdcc714:;
	};
}



inline void _1aa3e8c99_check_target_arch(jule::Str _23722_arch) {
	{
		auto &expr = _201be45e7_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1acdce0c8:;
		if (it != expr.end()) {
			jule::Str &_23812_distarch = *it;
			{
				if ((_23722_arch == _23812_distarch)) {
					return;;
				};
			}
			_iter_next_1acdce0c8:;
			++it;
			goto _iter_begin_1acdce0c8;
		}
		_iter_end_1acdce0c8:;
	};
	_1a91232dd_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23722_arch));
}



inline void _1aa3e8dcb_check_target_os(jule::Str _24620_os) {
	{
		auto &expr = _201be4262_DISTOS;
		auto it = expr.begin();
		_iter_begin_1acdd5a80:;
		if (it != expr.end()) {
			jule::Str &_24712_distos = *it;
			{
				if ((_24620_os == _24712_distos)) {
					return;;
				};
			}
			_iter_next_1acdd5a80:;
			++it;
			goto _iter_begin_1acdd5a80;
		}
		_iter_end_1acdd5a80:;
	};
	_1a91232dd_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24620_os));
}



inline void _1aa3e900d_check_target_flag(jule::Str& _25523_target) {
	if (_25523_target.empty()) {
		_1a91232dd_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2609_parts = _201b85d80_split(_25523_target,jule::Str("-", 1),-1LL);;
	if ((_2609_parts.len() != 2LL)) {
		_1a91232dd_throw((jule::Str("--target: undefined platform target format: ", 44) + _25523_target));
	};
	jule::Str _26510_os = _2609_parts[0LL];;
	jule::Str _26514_arch = _2609_parts[1LL];;
	std::tie(_26510_os,_26514_arch) = std::make_tuple(_2609_parts[0LL],_2609_parts[1LL]);
	if ((_26510_os != jule::Str("native", 6))) {
		_1aa3e8dcb_check_target_os(_26510_os);
		_201c347be_OS=_26510_os;
	};
	if ((_26514_arch != jule::Str("native", 6))) {
		_1aa3e8c99_check_target_arch(_26514_arch);
		_201c12b32_ARCH=_26514_arch;
	};
	_1be24cc82_update_target();
}



inline void _1aa3e9140_check_opt_flag(jule::Str& _27820_opt) {
	if (_27820_opt.empty()) {
		_1a91232dd_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27820_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1acdda821:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1acddae92:;
			{
				_1c00b0dd0_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1acdda623:;
			{
				_1a91232dd_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27820_opt));
			}
		}
		_match_end_1acdda5bd:;
	};
}



inline void _1aa3e94a3_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1eec81ad7_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acddb008:;
			{
				goto _match_end_1acddbca6;
			}
		}
		else {
			_case_begin_1acddb9ba:;
			{
				_1a91232dd_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1eec81ad7_CPP_STD));
			}
		}
		_match_end_1acddbca6:;
	};
}



inline jule::Slice<jule::Str> _1aa3e95d5_check_flags(jule::Slice<jule::Str>& _30317_args) {
	jule::Str _30413_opt = jule::Str("L0", 2);;
	jule::Str _30513_target = jule::Str("native-native", 13);;
	jule::Ptr<_1aa3e4d83_FlagSet> _30713_fs = static__1aa3e516e_new();;
	_1acdde57d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30413_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1acdde57d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30513_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1acdde57d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1aa3c2dc7_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1eec81d4b_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1eec820b0_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1acdde57d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1eec80322_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1acdde57d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1eec81873_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1eec82ce7_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1eec825bb_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1eec829d9_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1acdde57d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1eec81ad7_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00ae40b_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00ae75d_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00aea6b_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00aedbd_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00b01cb_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00b04d9_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00b07e7_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1acde8d6d_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c00b0c15_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32913_content = ({
		auto except = _1aa3e5e83_parse(_30713_fs.ptr(), _30317_args);
		(except.ok()) ? (except.result) : ({
			_1a91232dd_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1aa3e8b67_check_compiler_flag();
	_1aa3e94a3_check_cpp_std_flag();
	_1aa3e900d_check_target_flag(_30513_target);
	_1aa3e9140_check_opt_flag(_30413_opt);
	return _32913_content;
}



inline void _1aa3e9717_setup_sema_flags(jule::I64& _34226_flags) {
	if (_1eec81d4b_SHADOWING) {
		_34226_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a8900659_IR> _1aa3e9849_build_ir(jule::Slice<jule::Str>& _34814_args) {
	jule::Slice<jule::Str> _3499_content = _1aa3e95d5_check_flags(_34814_args);;
	jule::I64 _35113_sema_flags = static_cast<jule::I64>(0LL);;
	_1aa3e9717_setup_sema_flags(_35113_sema_flags);
	if ((_3499_content.len() == 0LL)) {
		_1a91232dd_throw(_201be1292_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3499_content.len() > 1LL)) {
		_1a91232dd_throw((jule::Str("undefined content: ", 19) + _3499_content[1LL]));
	};
	jule::Str _35914_path;;
	jule::Bool _35920_ok;;
	std::tie(_35914_path,_35920_ok) = _200cb1c59_abs(_3499_content[0LL]);
	if ((!(_35920_ok))) {
		_1a91232dd_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_200ad4c14_Status> _3659_inf = ({
		auto except = static__200ccda01_of(_201c13726_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1a91232dd_throw(_201be1292_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_200ad4c14_Status>();});
	});;
	if ((!(_1eed19972_is_dir(_3659_inf.ptr())))) {
		_1a91232dd_throw(_201be1292_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a8900659_IR> _37314_ir;;
	jule::Slice<_201be0d52_Log> _37318_logs;;
	std::tie(_37314_ir,_37318_logs) = static__1a8a5942d_build(_35914_path,_35113_sema_flags);
	if (((_37314_ir == nullptr) && (_37318_logs == nullptr))) {
		_1a91232dd_throw(_201be1292_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35914_path)})));
	};
	if ((_37318_logs != nullptr)) {
		static__1a9122870_print_logs(_37318_logs);
		_1a91232dd_throw(jule::Str());
	};
	return _37314_ir;
}



inline void _1aa3e997b_compile_command(jule::Slice<jule::Str>& _38825_args) {
	_38825_args=_38825_args.slice(1LL);
	if ((_38825_args[0LL] == jule::Str("test", 4))) {
		_1eec82324_TEST=true;
		_38825_args=_38825_args.slice(1LL);
	};
	jule::Ptr<_1a8900659_IR> _39413_ir = _1aa3e9849_build_ir(_38825_args);;
	;
	if ((!(_1eec82324_TEST))) {
		jule::Ptr<_1bc9c9873_Fn> _39917_main = _1be27754d_find_fn(_39413_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39917_main == nullptr)) {
			_1a91232dd_throw(_201be1292_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1aa3b26e1_apply_target_independent_optimizations(_39413_ir);
	_1a8aa2a92_order(_39413_ir.ptr());
	jule::Str _41010_compiler;;
	jule::Str _41020_compiler_cmd;;
	std::tie(_41010_compiler,_41020_compiler_cmd) = _1aa3bdbe7_gen_compile_cmd(_1aa3b25ae_get_compile_path(),_39413_ir);
	jule::Ptr<_1aa38e03b_ObjectCoder> _41213_oc = static__1aa37201e_new(_39413_ir,_1aa38db62_SerializationInfo{._field_compiler=_41010_compiler, ._field_compiler_command=_41020_compiler_cmd});;
	if (_1eec82324_TEST) {
		jule::Ptr<_1aa3290a3_TestCoder> _41717_tc = static__1aa329526_new(_41213_oc);;
		_1aa32a758_serialize(_41717_tc);
	} else {
		_1aa39353a_serialize(_41213_oc);
	};
	jule::Str _4239_path = _1aa3b25ae_get_compile_path();;
	jule::Ptr<_200ad484b_File> _42413_file = _1aa3b6b13_open_output(_4239_path);;
	({
		auto except = _200b79ade_write(_42413_file.ptr(), static_cast<jule::Slice<jule::U8>>(_41213_oc.get()._field_obj));
		if (!except.ok()) {
			_1a91232dd_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1eedec34b_close(_42413_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:428:5"));
	});
	if ((!(_1eec820b0_TRANSPILATION))) {
		_1aa3b336d_compile_ir(_41010_compiler,_41020_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_201c034d5_init();
	_1be24cde7_init();
	_201bca49b_init();
	_1aa3b501d_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}