// Auto generated by JuleC.
// JuleC version: jule0.0.11 @master
// Date: 5/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1c2cba0e2_Reader{};
struct _1c2cba521_Writer{};
struct _1c2cbaae8_WriterCloser{};
struct _1c2cbb346_Stream{};
struct _1c2b74e8b_Importer{};
struct _1c2c1ac02_Kind{};
struct _1c2c3934c_Lookup{};
struct _1c2d421ad_CommonFlag{};
struct _2369b255b_accept_range;
struct _204c6195d_FoldPair;
struct _204c61e25_CaseRange;
struct _204c62398_Range16;
struct _204c62860_Range32;
struct _204c62cd3_RangeTable;
struct _204c665ab_LazyBuff;
struct _235b1ea71_DirEntry;
struct _2368215eb_Directory;
struct _2368217d8_File;
struct _236821b7e_Status;
struct _20472bc31_Cmd;
struct _2046db273_Log;
struct _205139176_Token;
struct _20513e566_File;
struct _205141634_KindPair;
struct _205146e42_Lex;
struct _20500541b_Ast;
struct _204ec155d_Node;
struct _204ec174a_Directive;
struct _204ec8b92_TypeDecl;
struct _204ec8d7e_IdentTypeDecl;
struct _204ec906b_NamespaceTypeDecl;
struct _204ec9258_SptrTypeDecl;
struct _204ec9445_SlcTypeDecl;
struct _204ec9632_TupleTypeDecl;
struct _204ec981e_PtrTypeDecl;
struct _204ec9a0b_ArrTypeDecl;
struct _204ec9be8_MapTypeDecl;
struct _2050bb834_RetTypeDecl;
struct _2050bba21_Expr;
struct _20514b40d_UseExpr;
struct _20514b5ea_TupleExpr;
struct _20514ba18_LitExpr;
struct _20514bc05_UnsafeExpr;
struct _20514bde2_CoExpr;
struct _20514c0ce_IdentExpr;
struct _20514c2bb_UnaryExpr;
struct _20514c4a8_VariadicExpr;
struct _20514c695_CastExpr;
struct _20514c882_NsSelectionExpr;
struct _20514ca6e_SubIdentExpr;
struct _20514cc5b_BinopExpr;
struct _20514ce48_FnCallExpr;
struct _20514d135_FieldExprPair;
struct _20514d322_StructLit;
struct _20514d50e_BraceLit;
struct _20514d6eb_KeyValPair;
struct _20514d8d8_SliceExpr;
struct _20514b7d7_IndexingExpr;
struct _20514e048_SlicingExpr;
struct _20514e235_GenericDecl;
struct _20514e422_LabelSt;
struct _20514e60e_GotoSt;
struct _20514e7eb_FallSt;
struct _20514e9d8_AssignLeft;
struct _20514ebc5_AssignSt;
struct _20514edb2_ScopeTree;
struct _20515009e_ParamDecl;
struct _20515028b_FnDecl;
struct _205150478_VarDecl;
struct _205150665_RetSt;
struct _205150852_Iter;
struct _205150a3e_WhileKind;
struct _205150c2b_RangeKind;
struct _205150e18_BreakSt;
struct _205151105_ContSt;
struct _2051512e2_If;
struct _2051514ce_Else;
struct _2051516bb_Conditional;
struct _2051518a8_TypeAliasDecl;
struct _205151a95_Case;
struct _205151c82_MatchCase;
struct _205151e6e_UseDecl;
struct _20515215b_EnumItemDecl;
struct _205152579_EnumDecl;
struct _205152b84_FieldDecl;
struct _2051534e2_StructDecl;
struct _205153aec_TraitDecl;
struct _205154207_Impl;
struct _1dad01550_FileInfo;
struct _1dad01819_PackageInfo;
struct _1dad4883e_Stmt;
struct _1dad49169_ScopeParser;
struct _1dad55a38_CallData;
struct _1dad56e8a_ExprBuilder;
struct _1dad622b4_AssignInfo;
struct _1dad657e5_Parser;
struct _1dad760db_TypeBuilder;
struct _1c2794acd_FloatInfo;
struct _1dbc26ee1_DecimalSlice;
struct _1c2a101ab_LeftCheat;
struct _1c2a10398_Decimal;
struct _1c2abb9a4_Const;
struct _1c2cb5010_FileStream;
struct _1c2cbb874_ByteStream;
struct _1c2cbe1d4_Scanner;
struct _1c1c07382_Field;
struct _1c1cb3141_Operators;
struct _1c1cb3e55_Struct;
struct _1c1cb6276_FieldIns;
struct _1c1cb8740_OperandExprModel;
struct _1c1cb8c07_BinopExprModel;
struct _1c1cb90ae_UnaryExprModel;
struct _1c1cb94aa_StructArgExprModel;
struct _1c1cb9862_StructLitExprModel;
struct _1c1cb9b70_AllocStructLitExprModel;
struct _1c1cba1c0_CastingExprModel;
struct _1c1cba9ea_FnCallExprModel;
struct _1c1cbada2_SliceExprModel;
struct _1c1cbb325_IndexingExprModel;
struct _1c1cbb6cc_AnonFnExprModel;
struct _1c1cbba84_KeyValPairExprModel;
struct _1c1cbc007_MapExprModel;
struct _1c1cbc546_SlicingExprModel;
struct _1c1cbca85_TraitSubIdentExprModel;
struct _1c1cbd2d3_StructSubIdentExprModel;
struct _1c1cbd789_StructStaticIdentExprModel;
struct _1c1cbdb52_ArrayExprModel;
struct _1c1cbde3d_CommonIdentExprModel;
struct _1c1cbe49e_CommonSubIdentExprModel;
struct _1c1cbe79b_TupleExprModel;
struct _1c1cbeb75_BuiltinOutCallExprModel;
struct _1c1cc0060_BuiltinOutlnCallExprModel;
struct _1c1cc037e_BuiltinCloneCallExprModel;
struct _1c1cc0769_BuiltinNewCallExprModel;
struct _1c1cc0b54_BuiltinPanicCallExprModel;
struct _1c1cc110a_BuiltinAssertCallExprModel;
struct _1c1cc15b1_BuiltinMakeCallExprModel;
struct _1c1cc199b_BuiltinAppendCallExprModel;
struct _1c1cc1d86_BuiltinCopyCallExprModel;
struct _1c1cc2271_BuiltinErrorCallExprModel;
struct _1c1cc2925_SizeofExprModel;
struct _1c1cc2b12_AlignofExprModel;
struct _1c1cc2d87_RuneExprModel;
struct _1c1cc3195_IntegratedToStrExprModel;
struct _1c1cc355d_BackendEmitExprModel;
struct _1c1cc3849_FreeExprModel;
struct _1c1cc4570_RetType;
struct _1c1cc4c79_Param;
struct _1c1cc65b6_Fn;
struct _1c1cc88c6_ParamIns;
struct _1c1cc9762_FnIns;
struct _1c1ccc798_ReferenceStack;
struct _1c1ccdb84_Pass;
struct _1c1cd2737_SymbolBuilder;
struct _1c2a137db_Trait;
struct _1c2a15007_EnumItem;
struct _1c2a159ec_Enum;
struct _1c2a16e71_Impl;
struct _1c2b4c1e9_Scope;
struct _1c2b53ae6_If;
struct _1c2aed673_Else;
struct _1c2aed860_Conditional;
struct _1c2b0e486_InfIter;
struct _1c2b0e673_WhileIter;
struct _1c2b3c519_RangeIter;
struct _1c2b3c706_ContSt;
struct _1c2b5ee43_BreakSt;
struct _1c2b60130_Label;
struct _1c2b6031c_GotoSt;
struct _1c2b60509_Postfix;
struct _1c2b606e6_Assign;
struct _1c2b608d3_MultiAssign;
struct _1c2b60ac0_Match;
struct _1c2b60edd_Case;
struct _1c2b611ca_FallSt;
struct _1c2b613b7_RetSt;
struct _1c2b615a4_ScopeLabel;
struct _1c2b61791_ScopeGoto;
struct _1c2b6197d_ScopeChecker;
struct _1c2b719c1_DirectiveChecker;
struct _1c2b77301_ImportInfo;
struct _1c2b79eb3_Package;
struct _1c2b7eeda_Sema;
struct _1c2b9784e_MissingRetChecker;
struct _1c2b99521_IterRelation;
struct _1c2b9a4de_Var;
struct _1c2b9aee5_FuncPattern;
struct _1c2bccdc3_TypeCompatibilityChecker;
struct _1c2bce27b_AssignTypeChecker;
struct _1c2bd0ac9_DynamicTypeAnnotation;
struct _1c2bd388a_FnCallArgChecker;
struct _1c2bd6294_StructLitChecker;
struct _1c2bd7d78_RangeChecker;
struct _1c2bda012_RetTypeChecker;
struct _1c2bdbbe5_SymbolTable;
struct _1c2be1ca5_Data;
struct _1c2be2d2d_Value;
struct _1c2be3823_Eval;
struct _1c2c0d453_UnaryEval;
struct _1c2c101e1_BinaryEval;
struct _1c2c1a3e9_TypeAlias;
struct _1c2c1b131_TypeKind;
struct _1c2c24d2c_TypeSymbol;
struct _1c2c256e0_Prim;
struct _1c2c28bee_Sptr;
struct _1c2c2965b_Slc;
struct _1c2c2a151_Tuple;
struct _1c2c2ac12_Map;
struct _1c2c2b806_Arr;
struct _1c2c2c263_Ptr;
struct _1c2c2e908_Referencer;
struct _1c2c30585_TypeChecker;
struct _204e30423_CompileInfo;
struct _204e891a2_DirectiveEval;
struct _1db25a0c4_JuleImporter;
struct _1db408a03_OrderedDefines;
struct _1db576e6d_DefineOrderer;
struct _1db43516c_ScopeDeadCode;
struct _1dadb30a1_AnsiEscape;
struct _1db26c37d_Logger;
struct _1c347a483_UnsafeBinopExprModel;
struct _1c34873b3_UnsafeIndexingExprModel;
struct _1c34875a0_PushToSliceExprModel;
struct _1c34879ac_MutSlicingExprModel;
struct _1c3487d86_StrInsertBeginExprModel;
struct _1c3489261_ScopeOptimizer;
struct _1c348e84e_ExprOptimizer;
struct _1c3496713_Optimizer;
struct _1c35128a0_AbsTime;
struct _1c3513076_Time;
struct _1c3515045_Duration;
struct _1c338414a_ScopeCoder;
struct _1c334a9a2_ExprCoder;
struct _1c34a0431_DeriveCoder;
struct _1c34a1a09_TestCoder;
struct _1c34a41b0_IdentCoder;
struct _1c34dc2e7_SerializationInfo;
struct _1c34d0b48_TraitHash;
struct _1c351d328_CustomType;
struct _1c351db42_TypeCoder;
struct _1c35531d7_Flag_0;
struct _1c35531d7_Flag_1;
struct _1c35531d7_Flag_2;
struct _1c35531d7_Flag_3;
struct _1c35531d7_Flag_4;
struct _1c355444c_FlagSet;
struct _1c1cb6ad4_StructIns;
struct _1c34d0d35_ObjectCoder;
struct _1db2583d0_IR;
struct _1c3556b58_ArgParser;
struct _2369b255b_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_2369b255b_accept_range(void) = default;

	inline bool operator==(_2369b255b_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_2369b255b_accept_range _other) { return !this->operator==(_other); }


};
struct _204c6195d_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();
	

	_204c6195d_FoldPair(void) = default;

	inline bool operator==(_204c6195d_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_204c6195d_FoldPair _other) { return !this->operator==(_other); }


};
struct _204c61e25_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();
	

	_204c61e25_CaseRange(void) = default;

	inline bool operator==(_204c61e25_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_204c61e25_CaseRange _other) { return !this->operator==(_other); }


};
struct _204c62398_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_204c62398_Range16(void) = default;

	inline bool operator==(_204c62398_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_204c62398_Range16 _other) { return !this->operator==(_other); }


};
struct _204c62860_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_204c62860_Range32(void) = default;

	inline bool operator==(_204c62860_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_204c62860_Range32 _other) { return !this->operator==(_other); }


};
struct _204c62cd3_RangeTable {
	jule::Slice<_204c62398_Range16> _field_r16 = jule::Slice<_204c62398_Range16>();
	jule::Slice<_204c62860_Range32> _field_r32 = jule::Slice<_204c62860_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_204c62cd3_RangeTable(void) = default;

	inline bool operator==(_204c62cd3_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_204c62cd3_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _204c66798_index(_204c665ab_LazyBuff*, jule::I64);
inline void _204c668ca_append(_204c665ab_LazyBuff*, jule::U8);
inline jule::Str _204c66a0c_string(_204c665ab_LazyBuff*);
struct _204c665ab_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_204c665ab_LazyBuff(void) = default;

	inline bool operator==(_204c665ab_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_204c665ab_LazyBuff _other) { return !this->operator==(_other); }


};
struct _235b1ea71_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_236821b7e_Status> _field_stat = jule::Ptr<_236821b7e_Status>();
	

	_235b1ea71_DirEntry(void) = default;

	inline bool operator==(_235b1ea71_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_235b1ea71_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>> static__204c67722_read(jule::Str);
inline jule::VoidExceptional static__204c67854_create(jule::Str);
inline jule::VoidExceptional static__204c67986_remove(jule::Str);
struct _2368215eb_Directory {
	

	_2368215eb_Directory(void) = default;

	inline bool operator==(_2368215eb_Directory _other) { return true; }

	inline bool operator!=(_2368215eb_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2368217d8_File> static__235aee8a8_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_2368217d8_File>> static__235b29ebb_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__235b31c3c_read(jule::Str);
inline jule::VoidExceptional static__235b353e4_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _235b36c86_seek(_2368217d8_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _235b48407_close(_2368217d8_File*);
inline jule::Exceptional<jule::Ptr<_2368217d8_File>> static__23694409d_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__23697739a_remove(jule::Str);
inline jule::Exceptional<jule::I64> _2369436b8_write(_2368217d8_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _2369437ea_read(_2368217d8_File*, jule::Slice<jule::U8>);
struct _2368217d8_File {
	jule::U64 _field_handle = jule::U64();
	

	_2368217d8_File(void) = default;

	inline bool operator==(_2368217d8_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2368217d8_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _235b49804_is_dir(_236821b7e_Status*);
inline jule::Bool _235ae0943_is_reg(_236821b7e_Status*);
inline jule::Exceptional<jule::Ptr<_236821b7e_Status>> static__204c67c72_of(jule::Str);
struct _236821b7e_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_236821b7e_Status(void) = default;

	inline bool operator==(_236821b7e_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_236821b7e_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20472bc31_Cmd> static__20472c160_new(jule::Str);
inline jule::Exceptional<jule::I64> _204731582_spawn(_20472bc31_Cmd*);
inline jule::Exceptional<jule::I64> _204cbe9dd___spawn(_20472bc31_Cmd*);
struct _20472bc31_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_20472bc31_Cmd(void) = default;

	inline bool operator==(_20472bc31_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_20472bc31_Cmd _other) { return !this->operator==(_other); }


};
struct _2046db273_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_2046db273_Log(void) = default;

	inline bool operator==(_2046db273_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_2046db273_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _205139561_prec(_205139176_Token*);
struct _205139176_Token {
	jule::Ptr<_20513e566_File> _field_file = jule::Ptr<_20513e566_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_205139176_Token(void) = default;

	inline bool operator==(_205139176_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_205139176_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _20513e973_is_ok(_20513e566_File*);
inline void _20513ebe8_fill(_20513e566_File*, jule::Slice<jule::U8>);
inline jule::Str _20513ee5c_dir(_20513e566_File*);
inline jule::Str _2051401c1_name(_20513e566_File*);
inline jule::U64 _205140435_addr(_20513e566_File*);
inline jule::Str _205140743_get_row(_20513e566_File*, jule::I64);
struct _20513e566_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	

	_20513e566_File(void) = default;

	inline bool operator==(_20513e566_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_20513e566_File _other) { return !this->operator==(_other); }


};
struct _205141634_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_205141634_KindPair(void) = default;

	inline bool operator==(_205141634_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_205141634_KindPair _other) { return !this->operator==(_other); }


};
inline void _2051474d6_push_err(_205146e42_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _205147805_push_err_tok(_205146e42_Lex*, jule::Ptr<_205139176_Token>&, jule::Str);
inline void _2051479d1_lex(_205146e42_Lex*);
inline jule::Str _205147cde_id(_205146e42_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _205148053_resume(_205146e42_Lex*);
inline void _2051482c8_lex_line_comment(_205146e42_Lex*, jule::Ptr<_205139176_Token>&);
inline void _20514854d_lex_range_comment(_205146e42_Lex*, jule::Ptr<_205139176_Token>&);
inline jule::Str _20514885b_num(_205146e42_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _205148b69_escape_seq(_205146e42_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _205149021_get_rune(_205146e42_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _20514932e_lex_rune(_205146e42_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _205149593_lex_str(_205146e42_Lex*);
inline jule::Bool _205149807_is_first_token_of_line(_205146e42_Lex*);
inline void _2051499d3_new_line(_205146e42_Lex*);
inline jule::Bool _205149ecd_is_op(_205146e42_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_205139176_Token>&);
inline jule::Bool _20514a385_lex_basic_ops(_205146e42_Lex*, jule::Slice<jule::U8>, jule::Ptr<_205139176_Token>&);
inline jule::Bool _20514a73c_lex_id(_205146e42_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_205139176_Token>&);
inline jule::Bool _20514aae4_lex_num(_205146e42_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_205139176_Token>&);
inline jule::Ptr<_205139176_Token> _20514ad58_token(_205146e42_Lex*);
struct _205146e42_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_205139176_Token>> _field_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Ptr<_20513e566_File> _field_file = jule::Ptr<_20513e566_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_2046db273_Log> _field_errors = jule::Slice<_2046db273_Log>();
	

	_205146e42_Lex(void) = default;

	inline bool operator==(_205146e42_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_205146e42_Lex _other) { return !this->operator==(_other); }


};
struct _20500541b_Ast {
	jule::Ptr<_20513e566_File> _field_file = jule::Ptr<_20513e566_File>();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Slice<jule::Ptr<_205151e6e_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_205151e6e_UseDecl>>();
	jule::Slice<_204ec155d_Node> _field_nodes = jule::Slice<_204ec155d_Node>();
	

	_20500541b_Ast(void) = default;

	inline bool operator==(_20500541b_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_20500541b_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ed6496_is_decl(_204ec155d_Node*);
inline jule::Bool _204edade6_is_directive(_204ec155d_Node*);
inline jule::Bool _204edba2e_is_impl(_204ec155d_Node*);
inline jule::Bool _204edc2c1_is_use_decl(_204ec155d_Node*);
struct _204ec155d_Node {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_data = jule::Any();
	

	_204ec155d_Node(void) = default;

	inline bool operator==(_204ec155d_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_204ec155d_Node _other) { return !this->operator==(_other); }


};
struct _204ec174a_Directive {
	jule::Ptr<_205139176_Token> _field_tag = jule::Ptr<_205139176_Token>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_args = jule::Slice<jule::Ptr<_205139176_Token>>();
	

	_204ec174a_Directive(void) = default;

	inline bool operator==(_204ec174a_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_204ec174a_Directive _other) { return !this->operator==(_other); }


};
struct _204ec8b92_TypeDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_kind = jule::Any();
	

	_204ec8b92_TypeDecl(void) = default;

	inline bool operator==(_204ec8b92_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_204ec8b92_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204edce09_is_prim(_204ec8d7e_IdentTypeDecl*);
struct _204ec8d7e_IdentTypeDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>>();
	

	_204ec8d7e_IdentTypeDecl(void) = default;

	inline bool operator==(_204ec8d7e_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_204ec8d7e_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _204ec906b_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_205139176_Token>> _field_idents = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Ptr<_204ec8d7e_IdentTypeDecl> _field_kind = jule::Ptr<_204ec8d7e_IdentTypeDecl>();
	

	_204ec906b_NamespaceTypeDecl(void) = default;

	inline bool operator==(_204ec906b_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_204ec906b_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _204ec9258_SptrTypeDecl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_elem = jule::Ptr<_204ec8b92_TypeDecl>();
	

	_204ec9258_SptrTypeDecl(void) = default;

	inline bool operator==(_204ec9258_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_204ec9258_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _204ec9445_SlcTypeDecl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_elem = jule::Ptr<_204ec8b92_TypeDecl>();
	

	_204ec9445_SlcTypeDecl(void) = default;

	inline bool operator==(_204ec9445_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_204ec9445_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _204ec9632_TupleTypeDecl {
	jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>>();
	

	_204ec9632_TupleTypeDecl(void) = default;

	inline bool operator==(_204ec9632_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_204ec9632_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee278d_is_unsafe(_204ec981e_PtrTypeDecl*);
struct _204ec981e_PtrTypeDecl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_elem = jule::Ptr<_204ec8b92_TypeDecl>();
	

	_204ec981e_PtrTypeDecl(void) = default;

	inline bool operator==(_204ec981e_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_204ec981e_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee3030_auto_sized(_204ec9a0b_ArrTypeDecl*);
struct _204ec9a0b_ArrTypeDecl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_elem = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_2050bba21_Expr> _field_size = jule::Ptr<_2050bba21_Expr>();
	

	_204ec9a0b_ArrTypeDecl(void) = default;

	inline bool operator==(_204ec9a0b_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_204ec9a0b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _204ec9be8_MapTypeDecl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_key = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_204ec8b92_TypeDecl> _field_val = jule::Ptr<_204ec8b92_TypeDecl>();
	

	_204ec9be8_MapTypeDecl(void) = default;

	inline bool operator==(_204ec9be8_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_204ec9be8_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _2050bb834_RetTypeDecl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_idents = jule::Slice<jule::Ptr<_205139176_Token>>();
	

	_2050bb834_RetTypeDecl(void) = default;

	inline bool operator==(_2050bb834_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_2050bb834_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _2050bba21_Expr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();
	

	_2050bba21_Expr(void) = default;

	inline bool operator==(_2050bba21_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_2050bba21_Expr _other) { return !this->operator==(_other); }


};
struct _20514b40d_UseExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514b40d_UseExpr(void) = default;

	inline bool operator==(_20514b40d_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514b40d_UseExpr _other) { return !this->operator==(_other); }


};
struct _20514b5ea_TupleExpr {
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_expr = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	

	_20514b5ea_TupleExpr(void) = default;

	inline bool operator==(_20514b5ea_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514b5ea_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee7e03_is_nil(_20514ba18_LitExpr*);
struct _20514ba18_LitExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_value = jule::Str();
	

	_20514ba18_LitExpr(void) = default;

	inline bool operator==(_20514ba18_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_20514ba18_LitExpr _other) { return !this->operator==(_other); }


};
struct _20514bc05_UnsafeExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514bc05_UnsafeExpr(void) = default;

	inline bool operator==(_20514bc05_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514bc05_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _20514bde2_CoExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514bde2_CoExpr(void) = default;

	inline bool operator==(_20514bde2_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514bde2_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee8e26_is_self(_20514c0ce_IdentExpr*);
struct _20514c0ce_IdentExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_20514c0ce_IdentExpr(void) = default;

	inline bool operator==(_20514c0ce_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_20514c0ce_IdentExpr _other) { return !this->operator==(_other); }


};
struct _20514c2bb_UnaryExpr {
	jule::Ptr<_205139176_Token> _field_op = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514c2bb_UnaryExpr(void) = default;

	inline bool operator==(_20514c2bb_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514c2bb_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _20514c4a8_VariadicExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514c4a8_VariadicExpr(void) = default;

	inline bool operator==(_20514c4a8_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514c4a8_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _20514c695_CastExpr {
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514c695_CastExpr(void) = default;

	inline bool operator==(_20514c695_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514c695_CastExpr _other) { return !this->operator==(_other); }


};
struct _20514c882_NsSelectionExpr {
	jule::Slice<jule::Ptr<_205139176_Token>> _field_ns = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Ptr<_205139176_Token> _field_ident = jule::Ptr<_205139176_Token>();
	

	_20514c882_NsSelectionExpr(void) = default;

	inline bool operator==(_20514c882_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_20514c882_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _20514ca6e_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_205139176_Token> _field_ident = jule::Ptr<_205139176_Token>();
	

	_20514ca6e_SubIdentExpr(void) = default;

	inline bool operator==(_20514ca6e_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_20514ca6e_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _20514cc5b_BinopExpr {
	jule::Ptr<_2050bba21_Expr> _field_left = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_2050bba21_Expr> _field_right = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_205139176_Token> _field_op = jule::Ptr<_205139176_Token>();
	

	_20514cc5b_BinopExpr(void) = default;

	inline bool operator==(_20514cc5b_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_20514cc5b_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _204eeaea0_unhandled(_20514ce48_FnCallExpr*);
inline jule::Bool _205006ebc_ignored(_20514ce48_FnCallExpr*);
struct _20514ce48_FnCallExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_args = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	jule::Ptr<_20514edb2_ScopeTree> _field_exception = jule::Ptr<_20514edb2_ScopeTree>();
	

	_20514ce48_FnCallExpr(void) = default;

	inline bool operator==(_20514ce48_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_20514ce48_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _20500884d_is_targeted(_20514d135_FieldExprPair*);
struct _20514d135_FieldExprPair {
	jule::Ptr<_205139176_Token> _field_field = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514d135_FieldExprPair(void) = default;

	inline bool operator==(_20514d135_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514d135_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _20514d322_StructLit {
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_exprs = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	

	_20514d322_StructLit(void) = default;

	inline bool operator==(_20514d322_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_20514d322_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _205009134_is_empty(_20514d50e_BraceLit*);
struct _20514d50e_BraceLit {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_exprs = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	

	_20514d50e_BraceLit(void) = default;

	inline bool operator==(_20514d50e_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_20514d50e_BraceLit _other) { return !this->operator==(_other); }


};
struct _20514d6eb_KeyValPair {
	jule::Ptr<_2050bba21_Expr> _field_key = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_2050bba21_Expr> _field_val = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_205139176_Token> _field_colon = jule::Ptr<_205139176_Token>();
	

	_20514d6eb_KeyValPair(void) = default;

	inline bool operator==(_20514d6eb_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_20514d6eb_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _2050a11ba_is_empty(_20514d8d8_SliceExpr*);
struct _20514d8d8_SliceExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_exprs = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	

	_20514d8d8_SliceExpr(void) = default;

	inline bool operator==(_20514d8d8_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_20514d8d8_SliceExpr _other) { return !this->operator==(_other); }


};
struct _20514b7d7_IndexingExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_2050bba21_Expr> _field_index = jule::Ptr<_2050bba21_Expr>();
	

	_20514b7d7_IndexingExpr(void) = default;

	inline bool operator==(_20514b7d7_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_20514b7d7_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _20514e048_SlicingExpr {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_2050bba21_Expr> _field_start = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_2050bba21_Expr> _field_to = jule::Ptr<_2050bba21_Expr>();
	

	_20514e048_SlicingExpr(void) = default;

	inline bool operator==(_20514e048_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_20514e048_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _20514e235_GenericDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	

	_20514e235_GenericDecl(void) = default;

	inline bool operator==(_20514e235_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_20514e235_GenericDecl _other) { return !this->operator==(_other); }


};
struct _20514e422_LabelSt {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	

	_20514e422_LabelSt(void) = default;

	inline bool operator==(_20514e422_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_20514e422_LabelSt _other) { return !this->operator==(_other); }


};
struct _20514e60e_GotoSt {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_label = jule::Ptr<_205139176_Token>();
	

	_20514e60e_GotoSt(void) = default;

	inline bool operator==(_20514e60e_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_20514e60e_GotoSt _other) { return !this->operator==(_other); }


};
struct _20514e7eb_FallSt {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	

	_20514e7eb_FallSt(void) = default;

	inline bool operator==(_20514e7eb_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_20514e7eb_FallSt _other) { return !this->operator==(_other); }


};
struct _20514e9d8_AssignLeft {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20514e9d8_AssignLeft(void) = default;

	inline bool operator==(_20514e9d8_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20514e9d8_AssignLeft _other) { return !this->operator==(_other); }


};
struct _20514ebc5_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_205139176_Token> _field_setter = jule::Ptr<_205139176_Token>();
	jule::Slice<jule::Ptr<_20514e9d8_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_20514e9d8_AssignLeft>>();
	jule::Ptr<_2050bba21_Expr> _field_right = jule::Ptr<_2050bba21_Expr>();
	

	_20514ebc5_AssignSt(void) = default;

	inline bool operator==(_20514ebc5_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_20514ebc5_AssignSt _other) { return !this->operator==(_other); }


};
struct _20514edb2_ScopeTree {
	jule::Ptr<_20514edb2_ScopeTree> _field_parent = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_204ec155d_Node> _field_stmts = jule::Slice<_204ec155d_Node>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	

	_20514edb2_ScopeTree(void) = default;

	inline bool operator==(_20514edb2_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_20514edb2_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _2050c276e_is_self(_20515009e_ParamDecl*);
inline jule::Bool _2050c5772_is_ref(_20515009e_ParamDecl*);
struct _20515009e_ParamDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_20515009e_ParamDecl(void) = default;

	inline bool operator==(_20515009e_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_20515009e_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2050d51dd_is_anon(_20515028b_FnDecl*);
struct _20515028b_FnDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_20514e235_GenericDecl>>();
	jule::Ptr<_2050bb834_RetTypeDecl> _field_result = jule::Ptr<_2050bb834_RetTypeDecl>();
	jule::Slice<jule::Ptr<_20515009e_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_20515009e_ParamDecl>>();
	

	_20515028b_FnDecl(void) = default;

	inline bool operator==(_20515028b_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_20515028b_FnDecl _other) { return !this->operator==(_other); }


};
struct _205150478_VarDecl {
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_205150478_VarDecl(void) = default;

	inline bool operator==(_205150478_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_205150478_VarDecl _other) { return !this->operator==(_other); }


};
struct _205150665_RetSt {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_205150665_RetSt(void) = default;

	inline bool operator==(_205150665_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_205150665_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _205104185_is_inf(_205150852_Iter*);
struct _205150852_Iter {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	

	_205150852_Iter(void) = default;

	inline bool operator==(_205150852_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_205150852_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _20511b983_is_while_next(_205150a3e_WhileKind*);
struct _205150a3e_WhileKind {
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_205139176_Token> _field_next_token = jule::Ptr<_205139176_Token>();
	

	_205150a3e_WhileKind(void) = default;

	inline bool operator==(_205150a3e_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_205150a3e_WhileKind _other) { return !this->operator==(_other); }


};
struct _205150c2b_RangeKind {
	jule::Ptr<_205139176_Token> _field_in_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_205150478_VarDecl> _field_key_a = jule::Ptr<_205150478_VarDecl>();
	jule::Ptr<_205150478_VarDecl> _field_key_b = jule::Ptr<_205150478_VarDecl>();
	

	_205150c2b_RangeKind(void) = default;

	inline bool operator==(_205150c2b_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_205150c2b_RangeKind _other) { return !this->operator==(_other); }


};
struct _205150e18_BreakSt {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_label = jule::Ptr<_205139176_Token>();
	

	_205150e18_BreakSt(void) = default;

	inline bool operator==(_205150e18_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_205150e18_BreakSt _other) { return !this->operator==(_other); }


};
struct _205151105_ContSt {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_label = jule::Ptr<_205139176_Token>();
	

	_205151105_ContSt(void) = default;

	inline bool operator==(_205151105_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_205151105_ContSt _other) { return !this->operator==(_other); }


};
struct _2051512e2_If {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	

	_2051512e2_If(void) = default;

	inline bool operator==(_2051512e2_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_2051512e2_If _other) { return !this->operator==(_other); }


};
struct _2051514ce_Else {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	

	_2051514ce_Else(void) = default;

	inline bool operator==(_2051514ce_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_2051514ce_Else _other) { return !this->operator==(_other); }


};
struct _2051516bb_Conditional {
	jule::Ptr<_2051512e2_If> _field_head = jule::Ptr<_2051512e2_If>();
	jule::Slice<jule::Ptr<_2051512e2_If>> _field_tail = jule::Slice<jule::Ptr<_2051512e2_If>>();
	jule::Ptr<_2051514ce_Else> _field_default = jule::Ptr<_2051514ce_Else>();
	

	_2051516bb_Conditional(void) = default;

	inline bool operator==(_2051516bb_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_2051516bb_Conditional _other) { return !this->operator==(_other); }


};
struct _2051518a8_TypeAliasDecl {
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	

	_2051518a8_TypeAliasDecl(void) = default;

	inline bool operator==(_2051518a8_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_2051518a8_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _205151a95_Case {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_exprs = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	

	_205151a95_Case(void) = default;

	inline bool operator==(_205151a95_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_205151a95_Case _other) { return !this->operator==(_other); }


};
struct _205151c82_MatchCase {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Slice<jule::Ptr<_205151a95_Case>> _field_cases = jule::Slice<jule::Ptr<_205151a95_Case>>();
	jule::Ptr<_2051514ce_Else> _field_default = jule::Ptr<_2051514ce_Else>();
	

	_205151c82_MatchCase(void) = default;

	inline bool operator==(_205151c82_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_205151c82_MatchCase _other) { return !this->operator==(_other); }


};
struct _205151e6e_UseDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_selected = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_205151e6e_UseDecl(void) = default;

	inline bool operator==(_205151e6e_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_205151e6e_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _204ee88b5_auto_expr(_20515215b_EnumItemDecl*);
struct _20515215b_EnumItemDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	

	_20515215b_EnumItemDecl(void) = default;

	inline bool operator==(_20515215b_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_20515215b_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20511c940_default_typed(_205152579_EnumDecl*);
struct _205152579_EnumDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	

	_205152579_EnumDecl(void) = default;

	inline bool operator==(_205152579_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_205152579_EnumDecl _other) { return !this->operator==(_other); }


};
struct _205152b84_FieldDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_204ec8b92_TypeDecl> _field_kind = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_2050bba21_Expr> _field_default = jule::Ptr<_2050bba21_Expr>();
	

	_205152b84_FieldDecl(void) = default;

	inline bool operator==(_205152b84_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_205152b84_FieldDecl _other) { return !this->operator==(_other); }


};
struct _2051534e2_StructDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_205152b84_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_205152b84_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_20514e235_GenericDecl>>();
	

	_2051534e2_StructDecl(void) = default;

	inline bool operator==(_2051534e2_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_2051534e2_StructDecl _other) { return !this->operator==(_other); }


};
struct _205153aec_TraitDecl {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_20515028b_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_20515028b_FnDecl>>();
	

	_205153aec_TraitDecl(void) = default;

	inline bool operator==(_205153aec_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_205153aec_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _20515456a_is_trait_impl(_205154207_Impl*);
inline jule::Bool _2051547ce_is_struct_impl(_205154207_Impl*);
struct _205154207_Impl {
	jule::Ptr<_205139176_Token> _field_end = jule::Ptr<_205139176_Token>();
	jule::Ptr<_204ec8b92_TypeDecl> _field_base = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_204ec8b92_TypeDecl> _field_dest = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Slice<jule::Ptr<_20515028b_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_20515028b_FnDecl>>();
	jule::Slice<jule::Ptr<_205150478_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_205150478_VarDecl>>();
	

	_205154207_Impl(void) = default;

	inline bool operator==(_205154207_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_205154207_Impl _other) { return !this->operator==(_other); }


};
struct _1dad01550_FileInfo {
	jule::Ptr<_20500541b_Ast> _field_ast = jule::Ptr<_20500541b_Ast>();
	jule::Slice<_2046db273_Log> _field_errors = jule::Slice<_2046db273_Log>();
	

	_1dad01550_FileInfo(void) = default;

	inline bool operator==(_1dad01550_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1dad01550_FileInfo _other) { return !this->operator==(_other); }


};
struct _1dad01819_PackageInfo {
	jule::Slice<jule::Ptr<_1dad01550_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1dad01550_FileInfo>>();
	

	_1dad01819_PackageInfo(void) = default;

	inline bool operator==(_1dad01819_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1dad01819_PackageInfo _other) { return !this->operator==(_other); }


};
struct _1dad4883e_Stmt {
	jule::Slice<jule::Ptr<_205139176_Token>> _field_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1dad4883e_Stmt(void) = default;

	inline bool operator==(_1dad4883e_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1dad4883e_Stmt _other) { return !this->operator==(_other); }


};
inline void _1dad497eb_stop(_1dad49169_ScopeParser*);
inline jule::Bool _1dad49a60_stopped(_1dad49169_ScopeParser*);
inline jule::Bool _1dad49cc4_finished(_1dad49169_ScopeParser*);
inline jule::Bool _1dad4a038_is_last_st(_1dad49169_ScopeParser*);
inline void _1dad4a357_push_err(_1dad49169_ScopeParser*, jule::Ptr<_205139176_Token>, jule::Str);
inline void _1dad4a676_push_suggestion(_1dad49169_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1dad4a8eb_insert_as_next(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_1dad4883e_Stmt> _1dad4ab60_next(_1dad49169_ScopeParser*);
inline jule::Ptr<_20514edb2_ScopeTree> _1dad4b017_build_scope(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Ptr<_205139176_Token>);
inline jule::Any _1dad4b325_build_var_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad4b633_build_ret_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad4b941_build_while_next_iter(_1dad49169_ScopeParser*, jule::Ptr<_1dad4883e_Stmt>&);
inline jule::Ptr<_205150a3e_WhileKind> _1dad4bc4e_build_while_iter_kind(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad4c07e_get_range_kind_keys_tokens(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_205150478_VarDecl> _1dad4c39d_build_range_kind_key(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Ptr<_205150478_VarDecl>> _1dad4c6ab_build_range_kind_keys(_1dad49169_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>&);
inline void _1dad4c9ec_setup_range_kind_keys_plain(_1dad49169_ScopeParser*, jule::Ptr<_205150c2b_RangeKind>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad4cd4e_setup_range_kind_keys_explicit(_1dad49169_ScopeParser*, jule::Ptr<_205150c2b_RangeKind>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad4d17e_setup_range_kind_keys(_1dad49169_ScopeParser*, jule::Ptr<_205150c2b_RangeKind>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_205150c2b_RangeKind> _1dad4d5d0_build_range_iter_kind(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Ptr<_205139176_Token>&);
inline jule::Any _1dad4d987_build_common_iter_kind(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Ptr<_205139176_Token>&);
inline jule::Any _1dad4dc95_build_common_iter(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad4e0a3_build_iter_st(_1dad49169_ScopeParser*, jule::Ptr<_1dad4883e_Stmt>&);
inline jule::Any _1dad4e3b1_build_break_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad4e6be_build_cont_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_2051512e2_If> _1dad4e9cc_build_if(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_2051514ce_Else> _1dad4ecda_build_else(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad500e8_build_if_else_chain(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad50406_build_co_call_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad50714_build_goto_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad50a22_build_fall_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad50d30_build_type_alias_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad51292_push_case_expr(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Ptr<_205139176_Token>, jule::Bool, jule::Slice<jule::Ptr<_2050bba21_Expr>>&);
inline jule::Slice<jule::Ptr<_2050bba21_Expr>> _1dad51649_build_case_exprs(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Bool);
inline jule::Ptr<_20514edb2_ScopeTree> _1dad51957_build_case_scope(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline std::tuple<jule::Ptr<_205151a95_Case>,jule::Bool> _1dad51d0e_build_case(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_205151a95_Case>>,jule::Ptr<_2051514ce_Else>> _1dad521b6_build_cases(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Bool);
inline jule::Ptr<_205151c82_MatchCase> _1dad524c4_build_match_case(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514edb2_ScopeTree> _1dad527d2_build_scope_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514e422_LabelSt> _1dad52ae0_build_label_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1dad52ded_build_id_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_1dad622b4_AssignInfo> _1dad5320b_build_assign_info(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514e9d8_AssignLeft> _1dad53519_build_assign_l(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Ptr<_20514e9d8_AssignLeft>> _1dad53827_build_assign_ls(_1dad49169_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>&);
inline std::tuple<jule::Ptr<_20514ebc5_AssignSt>,jule::Bool> _1dad53b35_build_plain_assign(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline std::tuple<jule::Ptr<_20514ebc5_AssignSt>,jule::Bool> _1dad53e43_build_decl_assign(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline std::tuple<jule::Ptr<_20514ebc5_AssignSt>,jule::Bool> _1dad54251_build_assign_st(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad5455e_build_use_expr(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad5486c_build_st(_1dad49169_ScopeParser*, jule::Ptr<_1dad4883e_Stmt>&);
inline void _1dad54b8b_build(_1dad49169_ScopeParser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Ptr<_20514edb2_ScopeTree>&);
struct _1dad49169_ScopeParser {
	jule::Ptr<_1dad657e5_Parser> _field_p = jule::Ptr<_1dad657e5_Parser>();
	jule::Ptr<_20514edb2_ScopeTree> _field_s = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1dad4883e_Stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1dad49169_ScopeParser(void) = default;

	inline bool operator==(_1dad49169_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1dad49169_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1dad55a38_CallData {
	jule::Slice<jule::Ptr<_205139176_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	

	_1dad55a38_CallData(void) = default;

	inline bool operator==(_1dad55a38_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1dad55a38_CallData _other) { return !this->operator==(_other); }


};
inline void _1dad57782_push_err(_1dad56e8a_ExprBuilder*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dad57aa1_push_suggestion(_1dad56e8a_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20514b5ea_TupleExpr> _1dad57dae_build_tuple(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>&);
inline jule::Ptr<_20514ba18_LitExpr> _1dad581bc_build_lit(_1dad56e8a_ExprBuilder*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad584ca_build_primitive_type(_1dad56e8a_ExprBuilder*, jule::Ptr<_205139176_Token>&);
inline jule::Any _1dad587d8_build_single(_1dad56e8a_ExprBuilder*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_20514c0ce_IdentExpr> _1dad58ae6_build_cpp_linked_ident(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514c2bb_UnaryExpr> _1dad58e04_build_unary(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514ca6e_SubIdentExpr> _1dad59212_build_obj_sub_ident(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514c882_NsSelectionExpr> _1dad59520_build_ns_sub_ident(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad5982d_build_type(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad59b3b_build_sub_ident(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514c4a8_VariadicExpr> _1dad59e49_build_variadic(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad5a257_build_op_right(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_2050bba21_Expr> _1dad5a587_build_between_parentheses(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514c695_CastExpr> _1dad5a8a6_try_build_cast(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad5ac6e_push_arg(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_2050bba21_Expr>>&, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Ptr<_205139176_Token>);
inline jule::Slice<jule::Ptr<_2050bba21_Expr>> _1dad5b07c_build_args(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _1dad5b38a_build_call_generics(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514ce48_FnCallExpr> _1dad5b742_build_fn_call(_1dad56e8a_ExprBuilder*, jule::Ptr<_205139176_Token>&, jule::Ptr<_1dad55a38_CallData>&);
inline jule::Any _1dad5ba72_build_parentheses_range(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514bc05_UnsafeExpr> _1dad5bd91_build_unsafe_expr(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20515028b_FnDecl> _1dad5c19e_build_anon_fn(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad5c4ac_build_unsafe(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad5c875_push_range_lit_part(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Ptr<_205139176_Token>, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad5cba5_get_brace_range_lit_expr_parts(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514d135_FieldExprPair> _1dad5cec4_build_field_expr_pair(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_2050bba21_Expr> _1dad5d2d2_build_struct_lit_expr(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Ptr<_2050bba21_Expr>> _1dad5d5e0_build_struct_lit_exprs(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514d322_StructLit> _1dad5d920_build_typed_struct_literal(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_2050bba21_Expr> _1dad5dc3e_build_brace_lit_part(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514d50e_BraceLit> _1dad5e04c_build_brace_lit(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad5e35a_build_brace_range(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad5e668_get_enumerable_parts(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514d8d8_SliceExpr> _1dad5e976_build_slice(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514b7d7_IndexingExpr> _1dad5edc7_build_indexing(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_20514e048_SlicingExpr> _1dad6046b_build_slicing(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64&, jule::Ptr<_205139176_Token>&, jule::Ptr<_205139176_Token>);
inline jule::Any _1dad60779_build_bracket_range(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad60a87_build_data(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514cc5b_BinopExpr> _1dad60e3e_build_binop(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64);
inline jule::Any _1dad6124c_build(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Any _1dad6155a_build_kind(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_2050bba21_Expr> _1dad61868_build_from_tokens(_1dad56e8a_ExprBuilder*, jule::Slice<jule::Ptr<_205139176_Token>>);
struct _1dad56e8a_ExprBuilder {
	jule::Ptr<_1dad657e5_Parser> _field_p = jule::Ptr<_1dad657e5_Parser>();
	

	_1dad56e8a_ExprBuilder(void) = default;

	inline bool operator==(_1dad56e8a_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1dad56e8a_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1dad622b4_AssignInfo {
	jule::Slice<jule::Ptr<_205139176_Token>> _field_l = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_r = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Ptr<_205139176_Token> _field_setter = jule::Ptr<_205139176_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1dad622b4_AssignInfo(void) = default;

	inline bool operator==(_1dad622b4_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1dad622b4_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1dad65b25_stop(_1dad657e5_Parser*);
inline jule::Bool _1dad65d89_stopped(_1dad657e5_Parser*);
inline void _1dad66252_push_err(_1dad657e5_Parser*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dad66571_push_suggestion(_1dad657e5_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2050bba21_Expr> _1dad6687e_build_expr(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_204ec174a_Directive> _1dad66b8c_build_directive(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad66e12_push_directive(_1dad657e5_Parser*, jule::Ptr<_204ec174a_Directive>);
inline jule::Ptr<_20514edb2_ScopeTree> _1dad672b9_build_scope(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Ptr<_205139176_Token>);
inline std::tuple<jule::Ptr<_204ec8b92_TypeDecl>,jule::Bool> _1dad6771a___build_type(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_204ec8b92_TypeDecl>,jule::Bool> _1dad67b6b_build_type(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_2051518a8_TypeAliasDecl> _1dad67e79_build_type_alias_decl(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad682ba_build_var_type_and_expr(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<_205150478_VarDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad685ea_build_var_common(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<_205150478_VarDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad689b3_build_var_begin(_1dad657e5_Parser*, jule::Ptr<_205150478_VarDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_205150478_VarDecl> _1dad68cc1_build_var(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20514e235_GenericDecl> _1dad690ce_build_generic(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _1dad69486_build_generics(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Ptr<_205139176_Token>&);
inline jule::Ptr<_20515009e_ParamDecl> _1dad69794_build_self_param(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad69b5c_param_type_begin(_1dad657e5_Parser*, jule::Ptr<_20515009e_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad69e7b_build_param_type(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<_20515009e_ParamDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad6a344_build_param_body(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<_20515009e_ParamDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_20515009e_ParamDecl> _1dad6a652_build_param(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad6a8c7_check_params(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_20515009e_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_20515009e_ParamDecl>> _1dad6ac7e_build_params(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_2050bb834_RetTypeDecl>,jule::Bool> _1dad6b136_build_multi_ret_type(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_2050bb834_RetTypeDecl>,jule::Bool> _1dad6b4dd_build_ret_type(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64&);
inline jule::Ptr<_20515028b_FnDecl> _1dad6b93e_build_fn_prototype(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_20515028b_FnDecl> _1dad6bd90_build_fn(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_205139176_Token>> _1dad6c19d_get_use_decl_selectors(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad6c4bc_build_cpp_use_decl(_1dad657e5_Parser*, jule::Ptr<_205151e6e_UseDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad6c7db_build_std_use_decl(_1dad657e5_Parser*, jule::Ptr<_205151e6e_UseDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad6cb0a_build_ident_use_decl(_1dad657e5_Parser*, jule::Ptr<_205151e6e_UseDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>);
inline void _1dad6ce29_parse_use_decl(_1dad657e5_Parser*, jule::Ptr<_205151e6e_UseDecl>&, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_205151e6e_UseDecl> _1dad6d2d1_build_use_decl(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>, jule::Bool);
inline jule::Ptr<_2050bba21_Expr> _1dad6d688_build_enum_item_expr(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>> _1dad6d996_build_enum_items(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_205152579_EnumDecl> _1dad6dca4_build_enum_decl(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_205152b84_FieldDecl> _1dad6e0b2_build_field(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Slice<jule::Ptr<_205152b84_FieldDecl>> _1dad6e3e2_build_struct_decl_fields(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_2051534e2_StructDecl> _1dad6e711_build_struct_decl(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad6e986_check_method_receiver(_1dad657e5_Parser*, jule::Ptr<_20515028b_FnDecl>&);
inline jule::Slice<jule::Ptr<_20515028b_FnDecl>> _1dad6ec94_build_trait_methods(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_205153aec_TraitDecl> _1dad700a2_build_trait_decl(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20515028b_FnDecl> _1dad703b0_build_cpp_link_fn(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_205150478_VarDecl> _1dad706bd_build_cpp_link_var(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_2051534e2_StructDecl> _1dad709cb_build_cpp_link_struct(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_2051518a8_TypeAliasDecl> _1dad70d0b_build_cpp_link_type_alias(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_205151e6e_UseDecl> _1dad7112a_build_cpp_link_use(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad71438_build_cpp_link(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20515028b_FnDecl> _1dad71746_get_method(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad71a65_parse_impl_body(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<_205154207_Impl>&, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_205154207_Impl> _1dad71d73_build_impl(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Any _1dad72181_build_node_data(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad72406_check_directive(_1dad657e5_Parser*, _204ec155d_Node&);
inline void _1dad72725_apply_fn_meta(_1dad657e5_Parser*, jule::Ptr<_20515028b_FnDecl>&, jule::Bool);
inline void _1dad72a44_apply_meta(_1dad657e5_Parser*, _204ec155d_Node&, jule::Bool);
inline void _1dad72cb9_check_use_decl(_1dad657e5_Parser*, _204ec155d_Node&);
inline std::tuple<jule::Bool,jule::Any> _1dad730e9_build_general_scope_node_data(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>);
inline _204ec155d_Node _1dad73418_parse_node(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad7368d_append_node(jule::Ptr<_1dad657e5_Parser>, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad73b00_remove_range(_1dad657e5_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Slice<jule::I64>&);
inline void _1dad73eda_push_wrong_order_close_err(_1dad657e5_Parser*, jule::Ptr<_205139176_Token>&, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Slice<jule::I64>&);
inline void _1dad7445d_push_range_close(_1dad657e5_Parser*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Ptr<_205139176_Token>>&, jule::Slice<jule::I64>&);
inline void _1dad746d3_check_ranges(_1dad657e5_Parser*, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline void _1dad74958_parse(jule::Ptr<_1dad657e5_Parser>, jule::Ptr<_20513e566_File>&);
struct _1dad657e5_Parser {
	jule::Ptr<_20500541b_Ast> _field_ast = jule::Ptr<_20500541b_Ast>();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Slice<_2046db273_Log> _field_errors = jule::Slice<_2046db273_Log>();
	

	_1dad657e5_Parser(void) = default;

	inline bool operator==(_1dad657e5_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1dad657e5_Parser _other) { return !this->operator==(_other); }


};
inline void _1dad766b3_push_err(_1dad760db_TypeBuilder*, jule::Ptr<_205139176_Token>, jule::Str);
inline void _1dad769d2_push_suggestion(_1dad760db_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad76c46_build_prim(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad76eaa_build_namespace(_1dad760db_TypeBuilder*);
inline jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _1dad7721e_build_generics(_1dad760db_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad77483_ident_generics(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad776e7_build_ident(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad7795b_build_cpp_link(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad77bc0_build_fn(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad77e34_build_ptr(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad78198_build_sptr(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad7840c_build_op(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad78671_build_slc(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad788d5_build_arr(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad78c8c_build_map(_1dad760db_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad79001_build_enumerable(_1dad760db_TypeBuilder*);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad79265_step(_1dad760db_TypeBuilder*);
inline std::tuple<jule::Ptr<_204ec8b92_TypeDecl>,jule::Bool> _1dad794c9_build(_1dad760db_TypeBuilder*);
struct _1dad760db_TypeBuilder {
	jule::Ptr<_1dad657e5_Parser> _field_p = jule::Ptr<_1dad657e5_Parser>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1dad760db_TypeBuilder(void) = default;

	inline bool operator==(_1dad760db_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1dad760db_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1c2794acd_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1c2794acd_FloatInfo(void) = default;

	inline bool operator==(_1c2794acd_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1c2794acd_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1dbc26ee1_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1dbc26ee1_DecimalSlice(void) = default;

	inline bool operator==(_1dbc26ee1_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1dbc26ee1_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1c2a101ab_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1c2a101ab_LeftCheat(void) = default;

	inline bool operator==(_1c2a101ab_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1c2a101ab_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2a0ce67_set(_1c2a10398_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1c2a0d099_float_bits(_1c2a10398_Decimal*, _1c2794acd_FloatInfo&);
inline void _1c2a10585_assign(_1c2a10398_Decimal*, jule::U64);
inline void _1c2a106b7_shift(_1c2a10398_Decimal*, jule::I64);
inline void _1c2a107e9_round_down(_1c2a10398_Decimal*, jule::I64);
inline void _1c2a1092b_round_up(_1c2a10398_Decimal*, jule::I64);
inline void _1c2a10a5d_round(_1c2a10398_Decimal*, jule::I64);
inline jule::U64 _1c2a10b90_rounded_integer(_1c2a10398_Decimal*);
struct _1c2a10398_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1c2a10398_Decimal(void) = default;

	inline bool operator==(_1c2a10398_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1c2a10398_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2abb9a4_Const> static__1c2aba9a3_new_i64(jule::I64);
inline jule::Ptr<_1c2abb9a4_Const> static__1c2abbb91_new_u64(jule::U64);
inline jule::Ptr<_1c2abb9a4_Const> static__1c2abbde4_new_bool(jule::Bool);
inline jule::Ptr<_1c2abb9a4_Const> static__1c2abc18b_new_str(jule::Str);
inline jule::Ptr<_1c2abb9a4_Const> static__1c2abc433_new_f64(jule::F64);
inline jule::Ptr<_1c2abb9a4_Const> static__1c2abc631_new_nil(void);
inline jule::I64 _1c2abcc2a_read_i64(_1c2abb9a4_Const*);
inline jule::U64 _1c2abce8e_read_u64(_1c2abb9a4_Const*);
inline jule::Bool _1c2abd203_read_bool(_1c2abb9a4_Const*);
inline jule::Str _1c2abd467_read_str(_1c2abb9a4_Const*);
inline jule::F64 _1c2abd6cb_read_f64(_1c2abb9a4_Const*);
inline jule::I64 _1c2abd940_as_i64(_1c2abb9a4_Const*);
inline jule::U64 _1c2abdba4_as_u64(_1c2abb9a4_Const*);
inline jule::F64 _1c2abde18_as_f64(_1c2abb9a4_Const*);
inline void _1c2abe18d_set_i64(_1c2abb9a4_Const*, jule::I64);
inline void _1c2abe413_set_u64(_1c2abb9a4_Const*, jule::U64);
inline void _1c2abe688_set_bool(_1c2abb9a4_Const*, jule::Bool);
inline void _1c2abe90d_set_str(_1c2abb9a4_Const*, jule::Str);
inline void _1c2abeb83_set_f64(_1c2abb9a4_Const*, jule::F64);
inline void _1c2abed5e_set_nil(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac00c3_is_i64(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac0337_is_u64(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac059b_is_bool(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac0810_is_str(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac0a74_is_f64(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac0cd8_is_nil(_1c2abb9a4_Const*);
inline jule::Bool _1c2ac10e6_are_same_types(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac1404_and(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac1712_or(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac1a20_eq(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac1d2d_lt(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac213b_lt_eq(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac2449_gt(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac2757_gt_eq(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac2a65_add(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac2d73_sub(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac3181_mul(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac348e_div(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac379c_mod(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac3aaa_bitwise_and(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac3db8_bitwise_or(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac41c6_xor(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac44d4_lshift(_1c2abb9a4_Const*, _1c2abb9a4_Const);
inline jule::Bool _1c2ac47e2_rshift(_1c2abb9a4_Const*, _1c2abb9a4_Const);
struct _1c2abb9a4_Const {
	jule::Any _field_data = jule::Any();
	

	_1c2abb9a4_Const(void) = default;

	inline jule::Bool operator==(_1c2abb9a4_Const _other) { return _1c2ac1a20_eq(this, _other); }

	inline bool operator!=(_1c2abb9a4_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1c2abb9a4_Const _other) { return _1c2ac2449_gt(this, _other); }

	inline jule::Bool operator>=(_1c2abb9a4_Const _other) { return _1c2ac2757_gt_eq(this, _other); }

	inline jule::Bool operator<(_1c2abb9a4_Const _other) { return _1c2ac1d2d_lt(this, _other); }

	inline jule::Bool operator<=(_1c2abb9a4_Const _other) { return _1c2ac213b_lt_eq(this, _other); }


};
inline jule::Ptr<_1c2cb5010_FileStream> static__1c2cb33b5_new(jule::Ptr<_2368217d8_File>);
inline jule::Exceptional<jule::I64> _1c2cb8b90_read(_1c2cb5010_FileStream*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1c2cb8e9d_write(_1c2cb5010_FileStream*, jule::Slice<jule::U8>);
inline jule::Ptr<_2368217d8_File> _1c2cb9322_file(_1c2cb5010_FileStream*);
inline jule::Exceptional<jule::I64> _1c2cb9630_write_str(_1c2cb5010_FileStream*, jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> _1c2cb9894_read_line(_1c2cb5010_FileStream*);
struct _1c2cb5010_FileStream {
	jule::Ptr<_2368217d8_File> _field_buff = jule::Ptr<_2368217d8_File>();
	

	_1c2cb5010_FileStream(void) = default;

	inline bool operator==(_1c2cb5010_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1c2cb5010_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2cbb874_ByteStream> static__1c2cbbec3_new(void);
inline jule::Bool _1c2cbc237_data(_1c2cbb874_ByteStream*);
inline void _1c2cbc413_fit(_1c2cbb874_ByteStream*);
inline jule::Exceptional<jule::I64> _1c2cbc721_read(_1c2cbb874_ByteStream*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1c2cbca2e_write(_1c2cbb874_ByteStream*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1c2cbcd3c_write_str(_1c2cbb874_ByteStream*, jule::Str);
struct _1c2cbb874_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	

	_1c2cbb874_ByteStream(void) = default;

	inline bool operator==(_1c2cbb874_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1c2cbb874_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2cbe1d4_Scanner> static__1c2cbe613_new(jule::Trait<_1c2cba0e2_Reader>);
inline jule::Ptr<_1c2cbe1d4_Scanner> static__1c2cbe8aa_newf(jule::Ptr<_2368217d8_File>);
inline void _1c2cbeba7_reset(_1c2cbe1d4_Scanner*);
inline jule::Slice<jule::U8> _1c2cbee1b_bytes(_1c2cbe1d4_Scanner*);
inline jule::Str _1c2cc0180_text(_1c2cbe1d4_Scanner*);
inline jule::Exceptional<jule::Bool> _1c2cc03e4_scan(_1c2cbe1d4_Scanner*);
struct _1c2cbe1d4_Scanner {
	jule::Trait<_1c2cba0e2_Reader> _field_r = jule::Trait<_1c2cba0e2_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();
	

	_1c2cbe1d4_Scanner(void) = default;

	inline bool operator==(_1c2cbe1d4_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1c2cbe1d4_Scanner _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c1cb6276_FieldIns> _1c1c06617_instance(jule::Ptr<_1c1c07382_Field>);
struct _1c1c07382_Field {
	jule::Ptr<_1c1cb3e55_Struct> _field_owner = jule::Ptr<_1c1cb3e55_Struct>();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2c24d2c_TypeSymbol> _field_kind = jule::Ptr<_1c2c24d2c_TypeSymbol>();
	jule::Ptr<_2050bba21_Expr> _field_default = jule::Ptr<_2050bba21_Expr>();
	

	_1c1c07382_Field(void) = default;

	inline bool operator==(_1c1c07382_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1c1c07382_Field _other) { return !this->operator==(_other); }


};
struct _1c1cb3141_Operators {
	jule::Ptr<_1c1cc9762_FnIns> _field_eq = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_gt = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_gt_eq = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_lt = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_lt_eq = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_shl = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_shr = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_add = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_sub = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_div = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_mul = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_mod = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_and = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_or = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_xor = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_neg = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_pos = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_not = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_add_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_sub_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_div_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_mul_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_mod_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_shl_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_shr_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_or_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_and_assign = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc9762_FnIns> _field_bit_xor_assign = jule::Ptr<_1c1cc9762_FnIns>();
	

	_1c1cb3141_Operators(void) = default;

	inline bool operator==(_1c1cb3141_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1c1cb3141_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c1cb6ad4_StructIns> _1c1cb4384_instance(jule::Ptr<_1c1cb3e55_Struct>);
inline jule::Ptr<_1c1cb6ad4_StructIns> _1c1cb4692_append_instance(_1c1cb3e55_Struct*, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline jule::Ptr<_1c1cc65b6_Fn> _1c1cb4a49_find_method(_1c1cb3e55_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2b9a4de_Var> _1c1cb4d57_find_static(_1c1cb3e55_Struct*, jule::Str);
inline jule::Ptr<_1c1c07382_Field> _1c1cb5165_find_field(_1c1cb3e55_Struct*, jule::Str);
inline jule::Bool _1c1cb5473_is_implements(_1c1cb3e55_Struct*, jule::Ptr<_1c2a137db_Trait>);
inline jule::Bool _1c1cb5781_is_derives(_1c1cb3e55_Struct*, jule::Str);
inline jule::Bool _1c1cb5a8e_is_uses(_1c1cb3e55_Struct*, jule::Ptr<_1c1cb3e55_Struct>);
inline jule::Bool _1c1cb5d03_has_ref_accessible(_1c1cb3e55_Struct*);
struct _1c1cb3e55_Struct {
	jule::Ptr<_1c2b7eeda_Sema> _field_sema = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _field_depends = jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>();
	jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _field_uses = jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1c1c07382_Field>> _field_fields = jule::Slice<jule::Ptr<_1c1c07382_Field>>();
	jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_statics = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_20514e235_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c2a137db_Trait>> _field_implements = jule::Slice<jule::Ptr<_1c2a137db_Trait>>();
	jule::Slice<jule::Ptr<_1c1cb6ad4_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1c1cb6ad4_StructIns>>();
	

	_1c1cb3e55_Struct(void) = default;

	inline bool operator==(_1c1cb3e55_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1c1cb3e55_Struct _other) { return !this->operator==(_other); }


};
struct _1c1cb6276_FieldIns {
	jule::Ptr<_1c1c07382_Field> _field_decl = jule::Ptr<_1c1c07382_Field>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2be1ca5_Data> _field_default = jule::Ptr<_1c2be1ca5_Data>();
	

	_1c1cb6276_FieldIns(void) = default;

	inline bool operator==(_1c1cb6276_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1c1cb6276_FieldIns _other) { return !this->operator==(_other); }


};
struct _1c1cb8740_OperandExprModel {
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1c1cb8740_OperandExprModel(void) = default;

	inline bool operator==(_1c1cb8740_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c1cb8740_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cb8c07_BinopExprModel {
	jule::Ptr<_1c1cb8740_OperandExprModel> _field_left = jule::Ptr<_1c1cb8740_OperandExprModel>();
	jule::Ptr<_1c1cb8740_OperandExprModel> _field_right = jule::Ptr<_1c1cb8740_OperandExprModel>();
	jule::Ptr<_205139176_Token> _field_op = jule::Ptr<_205139176_Token>();
	

	_1c1cb8c07_BinopExprModel(void) = default;

	inline bool operator==(_1c1cb8c07_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c1cb8c07_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cb90ae_UnaryExprModel {
	jule::Ptr<_1c2be1ca5_Data> _field_expr = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_205139176_Token> _field_op = jule::Ptr<_205139176_Token>();
	

	_1c1cb90ae_UnaryExprModel(void) = default;

	inline bool operator==(_1c1cb90ae_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c1cb90ae_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cb94aa_StructArgExprModel {
	jule::Ptr<_1c1cb6276_FieldIns> _field_field = jule::Ptr<_1c1cb6276_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1c1cb94aa_StructArgExprModel(void) = default;

	inline bool operator==(_1c1cb94aa_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cb94aa_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cb9862_StructLitExprModel {
	jule::Ptr<_1c1cb6ad4_StructIns> _field_strct = jule::Ptr<_1c1cb6ad4_StructIns>();
	jule::Slice<jule::Ptr<_1c1cb94aa_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1c1cb94aa_StructArgExprModel>>();
	

	_1c1cb9862_StructLitExprModel(void) = default;

	inline bool operator==(_1c1cb9862_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1c1cb9862_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cb9b70_AllocStructLitExprModel {
	jule::Ptr<_1c1cb9862_StructLitExprModel> _field_lit = jule::Ptr<_1c1cb9862_StructLitExprModel>();
	

	_1c1cb9b70_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1c1cb9b70_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1c1cb9b70_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cba1c0_CastingExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_expr_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c1cba1c0_CastingExprModel(void) = default;

	inline bool operator==(_1c1cba1c0_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1c1cba1c0_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cba9ea_FnCallExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c1cc9762_FnIns> _field_func = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1c2b4c1e9_Scope> _field_except = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1c1cba9ea_FnCallExprModel(void) = default;

	inline bool operator==(_1c1cba9ea_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1c1cba9ea_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbada2_SliceExprModel {
	jule::Ptr<_1c2c1b131_TypeKind> _field_elem_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1c1cbada2_SliceExprModel(void) = default;

	inline bool operator==(_1c1cbada2_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1c1cbada2_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbb325_IndexingExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c2be1ca5_Data> _field_expr = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_1c2be1ca5_Data> _field_index = jule::Ptr<_1c2be1ca5_Data>();
	

	_1c1cbb325_IndexingExprModel(void) = default;

	inline bool operator==(_1c1cbb325_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1c1cbb325_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbb6cc_AnonFnExprModel {
	jule::Ptr<_1c1cc9762_FnIns> _field_func = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1c1cbb6cc_AnonFnExprModel(void) = default;

	inline bool operator==(_1c1cbb6cc_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1c1cbb6cc_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbba84_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1c1cbba84_KeyValPairExprModel(void) = default;

	inline bool operator==(_1c1cbba84_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1c1cbba84_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbc007_MapExprModel {
	jule::Ptr<_1c2c1b131_TypeKind> _field_key_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_val_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Slice<jule::Ptr<_1c1cbba84_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1c1cbba84_KeyValPairExprModel>>();
	

	_1c1cbc007_MapExprModel(void) = default;

	inline bool operator==(_1c1cbc007_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1c1cbc007_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbc546_SlicingExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1c1cbc546_SlicingExprModel(void) = default;

	inline bool operator==(_1c1cbc546_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1c1cbc546_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbca85_TraitSubIdentExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c1cc65b6_Fn> _field_method = jule::Ptr<_1c1cc65b6_Fn>();
	jule::Ptr<_1c2a137db_Trait> _field_trt = jule::Ptr<_1c2a137db_Trait>();
	

	_1c1cbca85_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1c1cbca85_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1c1cbca85_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbd2d3_StructSubIdentExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c2be1ca5_Data> _field_expr = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_expr_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c1cc9762_FnIns> _field_method = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cb6276_FieldIns> _field_field = jule::Ptr<_1c1cb6276_FieldIns>();
	

	_1c1cbd2d3_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1c1cbd2d3_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c1cbd2d3_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbd789_StructStaticIdentExprModel {
	jule::Ptr<_1c1cb6ad4_StructIns> _field_structure = jule::Ptr<_1c1cb6ad4_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c1cc9762_FnIns> _field_method = jule::Ptr<_1c1cc9762_FnIns>();
	

	_1c1cbd789_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1c1cbd789_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1c1cbd789_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbdb52_ArrayExprModel {
	jule::Ptr<_1c2c2b806_Arr> _field_kind = jule::Ptr<_1c2c2b806_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1c1cbdb52_ArrayExprModel(void) = default;

	inline bool operator==(_1c1cbdb52_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1c1cbdb52_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbde3d_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1c1cbde3d_CommonIdentExprModel(void) = default;

	inline bool operator==(_1c1cbde3d_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c1cbde3d_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbe49e_CommonSubIdentExprModel {
	jule::Ptr<_1c2c1b131_TypeKind> _field_expr_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1c1cbe49e_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1c1cbe49e_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c1cbe49e_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbe79b_TupleExprModel {
	jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _field_datas = jule::Slice<jule::Ptr<_1c2be1ca5_Data>>();
	

	_1c1cbe79b_TupleExprModel(void) = default;

	inline bool operator==(_1c1cbe79b_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1c1cbe79b_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cbeb75_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1c1cbeb75_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1c1cbeb75_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1c1cbeb75_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc0060_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1c1cc0060_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1c1cc0060_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1c1cc0060_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc037e_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1c1cc037e_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1c1cc037e_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cc037e_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc0769_BuiltinNewCallExprModel {
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1c1cc0769_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1c1cc0769_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1c1cc0769_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc0b54_BuiltinPanicCallExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1c1cc0b54_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1c1cc0b54_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cc0b54_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc110a_BuiltinAssertCallExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1c1cc110a_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1c1cc110a_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1c1cc110a_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc15b1_BuiltinMakeCallExprModel {
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1c1cc15b1_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1c1cc15b1_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1c1cc15b1_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc199b_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1c1cc199b_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1c1cc199b_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1c1cc199b_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc1d86_BuiltinCopyCallExprModel {
	jule::Ptr<_1c2be1ca5_Data> _field_dest = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_1c2be1ca5_Data> _field_src = jule::Ptr<_1c2be1ca5_Data>();
	

	_1c1cc1d86_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1c1cc1d86_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1c1cc1d86_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc2271_BuiltinErrorCallExprModel {
	jule::Ptr<_1c1cc9762_FnIns> _field_func = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1c1cc2271_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1c1cc2271_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1c1cc2271_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc2925_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1c1cc2925_SizeofExprModel(void) = default;

	inline bool operator==(_1c1cc2925_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cc2925_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc2b12_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1c1cc2b12_AlignofExprModel(void) = default;

	inline bool operator==(_1c1cc2b12_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cc2b12_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc2d87_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1c1cc2d87_RuneExprModel(void) = default;

	inline bool operator==(_1c1cc2d87_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1c1cc2d87_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc3195_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1c1cc3195_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1c1cc3195_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cc3195_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc355d_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1c1cc355d_BackendEmitExprModel(void) = default;

	inline bool operator==(_1c1cc355d_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1c1cc355d_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc3849_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1c1cc3849_FreeExprModel(void) = default;

	inline bool operator==(_1c1cc3849_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c1cc3849_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1c1cc4570_RetType {
	jule::Ptr<_1c2c24d2c_TypeSymbol> _field_kind = jule::Ptr<_1c2c24d2c_TypeSymbol>();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_idents = jule::Slice<jule::Ptr<_205139176_Token>>();
	

	_1c1cc4570_RetType(void) = default;

	inline bool operator==(_1c1cc4570_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1c1cc4570_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c1cc88c6_ParamIns> _1c1cc5142_instance(jule::Ptr<_1c1cc4c79_Param>);
inline jule::Bool _1c1cc53a6_is_self(_1c1cc4c79_Param*);
inline jule::Bool _1c1cc561a_is_ref(_1c1cc4c79_Param*);
struct _1c1cc4c79_Param {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1c2c24d2c_TypeSymbol> _field_kind = jule::Ptr<_1c2c24d2c_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1c1cc4c79_Param(void) = default;

	inline bool operator==(_1c1cc4c79_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c1cc4c79_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c1cc6a17_is_void(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc6c7b_is_method(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc6ee0_is_entry_point(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc7254_is_init(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc74b8_is_anon(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc772c_any_var(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc79b3_parameters_uses_generics(_1c1cc65b6_Fn*);
inline jule::Bool _1c1cc7c38_result_uses_generics(_1c1cc65b6_Fn*);
inline jule::Ptr<_1c1cc9762_FnIns> _1c1cc7e9c_instance_force(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Ptr<_1c1cc9762_FnIns> _1c1cc8211_instance(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Ptr<_1c1cc9762_FnIns> _1c1cc851e_append_instance(_1c1cc65b6_Fn*, jule::Ptr<_1c1cc9762_FnIns>&);
struct _1c1cc65b6_Fn {
	jule::Ptr<_1c2b7eeda_Sema> _field_sema = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_20514e235_GenericDecl>>();
	jule::Ptr<_1c1cc4570_RetType> _field_result = jule::Ptr<_1c1cc4570_RetType>();
	jule::Slice<jule::Ptr<_1c1cc4c79_Param>> _field_params = jule::Slice<jule::Ptr<_1c1cc4c79_Param>>();
	jule::Ptr<_1c1cb3e55_Struct> _field_owner = jule::Ptr<_1c1cb3e55_Struct>();
	jule::Slice<jule::Ptr<_1c1cc9762_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1c1cc9762_FnIns>>();
	

	_1c1cc65b6_Fn(void) = default;

	inline bool operator==(_1c1cc65b6_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1c1cc65b6_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1c1cc8ca0_to_str(_1c1cc88c6_ParamIns*);
struct _1c1cc88c6_ParamIns {
	jule::Ptr<_1c1cc4c79_Param> _field_decl = jule::Ptr<_1c1cc4c79_Param>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c1cc88c6_ParamIns(void) = default;

	inline bool operator==(_1c1cc88c6_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c1cc88c6_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1c1cc9ac5_to_str(_1c1cc9762_FnIns*);
inline jule::Bool _1c1cc9dd3_equals(jule::Ptr<_1c1cc9762_FnIns>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _1c1cca279_types(_1c1cc9762_FnIns*);
inline jule::Bool _1c1cca4dd_is_builtin(_1c1cc9762_FnIns*);
inline jule::Bool _1c1cca752_is_anon(_1c1cc9762_FnIns*);
inline jule::Bool _1c1ccaa60_same(_1c1cc9762_FnIns*, jule::Ptr<_1c1cc9762_FnIns>);
inline jule::Str _1c1ccad6d_get_kind_str(_1c1cc9762_FnIns*, jule::Bool);
struct _1c1cc9762_FnIns {
	jule::Ptr<_1c1cb6ad4_StructIns> _field_owner = jule::Ptr<_1c1cb6ad4_StructIns>();
	jule::Ptr<_1c1cc65b6_Fn> _field_decl = jule::Ptr<_1c1cc65b6_Fn>();
	jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>();
	jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_result = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Ptr<_1c1ccc798_ReferenceStack> _field_references = jule::Ptr<_1c1ccc798_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1c1cc9762_FnIns(void) = default;

	inline bool operator==(_1c1cc9762_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1c1cc9762_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c1ccc798_ReferenceStack> static__1c1cccaa6_new(void);
inline jule::I64 _1c1ccce3b_len(_1c1ccc798_ReferenceStack*);
inline jule::Any _1c1ccd249_at(_1c1ccc798_ReferenceStack*, jule::I64);
inline void _1c1ccd4be_push(_1c1ccc798_ReferenceStack*, jule::Any);
inline jule::Bool _1c1ccd7cc_exist_0(_1c1ccc798_ReferenceStack*, jule::Ptr<_1c2b9a4de_Var>);
inline jule::Bool _1c1ccd7cc_exist_1(_1c1ccc798_ReferenceStack*, jule::Ptr<_1c1cc9762_FnIns>);
struct _1c1ccc798_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1c1ccc798_ReferenceStack(void) = default;

	inline bool operator==(_1c1ccc798_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1c1ccc798_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1c1ccdb84_Pass {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_text = jule::Str();
	

	_1c1ccdb84_Pass(void) = default;

	inline bool operator==(_1c1ccdb84_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1c1ccdb84_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c1cd2737_SymbolBuilder> _1c1cd2ced_get_root(jule::Ptr<_1c1cd2737_SymbolBuilder>);
inline void _1c1cd31b6_push_err(_1c1cd2737_SymbolBuilder*, jule::Ptr<_205139176_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1c1cd357e_push_err_text(_1c1cd2737_SymbolBuilder*, jule::Ptr<_205139176_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1c1cd389d_push_suggestion(_1c1cd2737_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c1cd3c77_check_cpp_use_decl_path(_1c1cd2737_SymbolBuilder*, jule::Ptr<_205151e6e_UseDecl>&, jule::Str);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd4085_build_cpp_header_import(_1c1cd2737_SymbolBuilder*, jule::Ptr<_205151e6e_UseDecl>&);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd43a4_build_std_import(_1c1cd2737_SymbolBuilder*, jule::Ptr<_205151e6e_UseDecl>&);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd46b2_build_ident_import(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_205151e6e_UseDecl>&);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd49c0_build_import(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_205151e6e_UseDecl>&);
inline jule::Bool _1c1cd4d00_check_duplicate_use_decl(_1c1cd2737_SymbolBuilder*, jule::Ptr<_1c2b77301_ImportInfo>&);
inline void _1c1cd5130_impl_import_selections(_1c1cd2737_SymbolBuilder*, jule::Ptr<_1c2b77301_ImportInfo>&, jule::Ptr<_205151e6e_UseDecl>&);
inline jule::Str _1c1cd543d_get_as_link_path(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Str);
inline void _1c1cd5806_push_cycle_error(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_1c1cd2737_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1c1cd5bbe_push_cross_cycle_error(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_1c1cd2737_SymbolBuilder>&, jule::Ptr<_1c2b77301_ImportInfo>&, jule::Ptr<_205139176_Token>&);
inline jule::Bool _1c1cd6076_check_import_cycles(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_1c2b77301_ImportInfo>, jule::Ptr<_205151e6e_UseDecl>&);
inline void _1c1cd6461_check_package_accessibility(_1c1cd2737_SymbolBuilder*, jule::Ptr<_205151e6e_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1c1cd6829_import_package(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_1c2b77301_ImportInfo>&, jule::Ptr<_205151e6e_UseDecl>&);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd6b37_import_use_decl(jule::Ptr<_1c1cd2737_SymbolBuilder>, jule::Ptr<_205151e6e_UseDecl>&);
inline void _1c1cd6d13_import_use_decls(jule::Ptr<_1c1cd2737_SymbolBuilder>);
inline void _1c1cd7088_append_node(_1c1cd2737_SymbolBuilder*, _204ec155d_Node&);
inline void _1c1cd7264_append_nodes(_1c1cd2737_SymbolBuilder*);
inline void _1c1cd74d9_push_directive_pass(_1c1cd2737_SymbolBuilder*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c1cd76b5_append_top_directives(_1c1cd2737_SymbolBuilder*);
inline void _1c1cd7891_build(jule::Ptr<_1c1cd2737_SymbolBuilder>);
struct _1c1cd2737_SymbolBuilder {
	jule::Ptr<_1c1cd2737_SymbolBuilder> _field_owner = jule::Ptr<_1c1cd2737_SymbolBuilder>();
	jule::Trait<_1c2b74e8b_Importer> _field_importer = jule::Trait<_1c2b74e8b_Importer>();
	jule::Slice<_2046db273_Log> _field_errors = jule::Slice<_2046db273_Log>();
	jule::Ptr<_20500541b_Ast> _field_ast = jule::Ptr<_20500541b_Ast>();
	jule::Ptr<_1c2bdbbe5_SymbolTable> _field_table = jule::Ptr<_1c2bdbbe5_SymbolTable>();
	

	_1c1cd2737_SymbolBuilder(void) = default;

	inline bool operator==(_1c1cd2737_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1c1cd2737_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2a13bd7_to_str(_1c2a137db_Trait*);
inline jule::Bool _1c2a13ee5_equals(jule::Ptr<_1c2a137db_Trait>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Bool _1c2a14358_is_builtin(_1c2a137db_Trait*);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2a14666_find_method(_1c2a137db_Trait*, jule::Str);
struct _1c2a137db_Trait {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>();
	jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>();
	

	_1c2a137db_Trait(void) = default;

	inline bool operator==(_1c2a137db_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1c2a137db_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2a153e2_auto_expr(_1c2a15007_EnumItem*);
struct _1c2a15007_EnumItem {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2be2d2d_Value> _field_value = jule::Ptr<_1c2be2d2d_Value>();
	

	_1c2a15007_EnumItem(void) = default;

	inline bool operator==(_1c2a15007_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1c2a15007_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2a15d60_to_str(_1c2a159ec_Enum*);
inline jule::Bool _1c2a1616d_equals(jule::Ptr<_1c2a159ec_Enum>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Ptr<_1c2a15007_EnumItem> _1c2a165ad_find_item(_1c2a159ec_Enum*, jule::Str);
struct _1c2a159ec_Enum {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2c24d2c_TypeSymbol> _field_kind = jule::Ptr<_1c2c24d2c_TypeSymbol>();
	jule::Slice<jule::Ptr<_1c2a15007_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1c2a15007_EnumItem>>();
	

	_1c2a159ec_Enum(void) = default;

	inline bool operator==(_1c2a159ec_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1c2a159ec_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2a1736c_is_trait_impl(_1c2a16e71_Impl*);
inline jule::Bool _1c2a175d1_is_struct_impl(_1c2a16e71_Impl*);
struct _1c2a16e71_Impl {
	jule::Ptr<_204ec8b92_TypeDecl> _field_base = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_204ec8b92_TypeDecl> _field_dest = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_statics = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	

	_1c2a16e71_Impl(void) = default;

	inline bool operator==(_1c2a16e71_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1c2a16e71_Impl _other) { return !this->operator==(_other); }


};
struct _1c2b4c1e9_Scope {
	jule::Ptr<_1c2b4c1e9_Scope> _field_parent = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1c2b4c1e9_Scope(void) = default;

	inline bool operator==(_1c2b4c1e9_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1c2b4c1e9_Scope _other) { return !this->operator==(_other); }


};
struct _1c2b53ae6_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	

	_1c2b53ae6_If(void) = default;

	inline bool operator==(_1c2b53ae6_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2b53ae6_If _other) { return !this->operator==(_other); }


};
struct _1c2aed673_Else {
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	

	_1c2aed673_Else(void) = default;

	inline bool operator==(_1c2aed673_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2aed673_Else _other) { return !this->operator==(_other); }


};
struct _1c2aed860_Conditional {
	jule::Slice<jule::Ptr<_1c2b53ae6_If>> _field_elifs = jule::Slice<jule::Ptr<_1c2b53ae6_If>>();
	jule::Ptr<_1c2aed673_Else> _field_default = jule::Ptr<_1c2aed673_Else>();
	

	_1c2aed860_Conditional(void) = default;

	inline bool operator==(_1c2aed860_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1c2aed860_Conditional _other) { return !this->operator==(_other); }


};
struct _1c2b0e486_InfIter {
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	

	_1c2b0e486_InfIter(void) = default;

	inline bool operator==(_1c2b0e486_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2b0e486_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2b3bc88_is_while_next(_1c2b0e673_WhileIter*);
struct _1c2b0e673_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	

	_1c2b0e673_WhileIter(void) = default;

	inline bool operator==(_1c2b0e673_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2b0e673_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c2b3c519_RangeIter {
	jule::Ptr<_1c2be1ca5_Data> _field_expr = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Ptr<_1c2b9a4de_Var> _field_key_a = jule::Ptr<_1c2b9a4de_Var>();
	jule::Ptr<_1c2b9a4de_Var> _field_key_b = jule::Ptr<_1c2b9a4de_Var>();
	

	_1c2b3c519_RangeIter(void) = default;

	inline bool operator==(_1c2b3c519_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1c2b3c519_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c2b3c706_ContSt {
	jule::U64 _field_it = jule::U64();
	

	_1c2b3c706_ContSt(void) = default;

	inline bool operator==(_1c2b3c706_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1c2b3c706_ContSt _other) { return !this->operator==(_other); }


};
struct _1c2b5ee43_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();
	

	_1c2b5ee43_BreakSt(void) = default;

	inline bool operator==(_1c2b5ee43_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1c2b5ee43_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c2b60130_Label {
	jule::Str _field_ident = jule::Str();
	

	_1c2b60130_Label(void) = default;

	inline bool operator==(_1c2b60130_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c2b60130_Label _other) { return !this->operator==(_other); }


};
struct _1c2b6031c_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1c2b6031c_GotoSt(void) = default;

	inline bool operator==(_1c2b6031c_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c2b6031c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c2b60509_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1c2b60509_Postfix(void) = default;

	inline bool operator==(_1c2b60509_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c2b60509_Postfix _other) { return !this->operator==(_other); }


};
struct _1c2b606e6_Assign {
	jule::Ptr<_1c1cb8740_OperandExprModel> _field_l = jule::Ptr<_1c1cb8740_OperandExprModel>();
	jule::Ptr<_1c1cb8740_OperandExprModel> _field_r = jule::Ptr<_1c1cb8740_OperandExprModel>();
	jule::Ptr<_205139176_Token> _field_op = jule::Ptr<_205139176_Token>();
	

	_1c2b606e6_Assign(void) = default;

	inline bool operator==(_1c2b606e6_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c2b606e6_Assign _other) { return !this->operator==(_other); }


};
struct _1c2b608d3_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1c2b608d3_MultiAssign(void) = default;

	inline bool operator==(_1c2b608d3_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1c2b608d3_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2b3d394_is_generic_type_match(_1c2b60ac0_Match*);
struct _1c2b60ac0_Match {
	jule::Ptr<_1c2be1ca5_Data> _field_expr = jule::Ptr<_1c2be1ca5_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1c2b60edd_Case>> _field_cases = jule::Slice<jule::Ptr<_1c2b60edd_Case>>();
	jule::Ptr<_1c2b60edd_Case> _field_default = jule::Ptr<_1c2b60edd_Case>();
	

	_1c2b60ac0_Match(void) = default;

	inline bool operator==(_1c2b60ac0_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1c2b60ac0_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2b3e351_is_default(_1c2b60edd_Case*);
struct _1c2b60edd_Case {
	jule::Ptr<_1c2b60ac0_Match> _field_owner = jule::Ptr<_1c2b60ac0_Match>();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _field_exprs = jule::Slice<jule::Ptr<_1c2be1ca5_Data>>();
	jule::Ptr<_1c2b60edd_Case> _field_next = jule::Ptr<_1c2b60edd_Case>();
	

	_1c2b60edd_Case(void) = default;

	inline bool operator==(_1c2b60edd_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1c2b60edd_Case _other) { return !this->operator==(_other); }


};
struct _1c2b611ca_FallSt {
	jule::U64 _field_dest_case = jule::U64();
	

	_1c2b611ca_FallSt(void) = default;

	inline bool operator==(_1c2b611ca_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1c2b611ca_FallSt _other) { return !this->operator==(_other); }


};
struct _1c2b613b7_RetSt {
	jule::Ptr<_1c1cc9762_FnIns> _field_func = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1c2b613b7_RetSt(void) = default;

	inline bool operator==(_1c2b613b7_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c2b613b7_RetSt _other) { return !this->operator==(_other); }


};
struct _1c2b615a4_ScopeLabel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c2b60130_Label> _field_label = jule::Ptr<_1c2b60130_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1c2b6197d_ScopeChecker> _field_scope = jule::Ptr<_1c2b6197d_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1c2b615a4_ScopeLabel(void) = default;

	inline bool operator==(_1c2b615a4_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c2b615a4_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1c2b61791_ScopeGoto {
	jule::Ptr<_20514e60e_GotoSt> _field_gt = jule::Ptr<_20514e60e_GotoSt>();
	jule::Ptr<_1c2b6197d_ScopeChecker> _field_scope = jule::Ptr<_1c2b6197d_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1c2b61791_ScopeGoto(void) = default;

	inline bool operator==(_1c2b61791_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c2b61791_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b0eb4b_find_package(_1c2b6197d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2ae72c6_select_package(_1c2b6197d_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>);
inline jule::Ptr<_1c2b9a4de_Var> _1c2ad565a_find_var(_1c2b6197d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b61b6a_find_type_alias(_1c2b6197d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2b61e56_find_struct(_1c2b6197d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2b6230d_find_fn(_1c2b6197d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2a137db_Trait> _1c2b6261b_find_trait(_1c2b6197d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2a159ec_Enum> _1c2b62929_find_enum(_1c2b6197d_ScopeChecker*, jule::Str);
inline jule::Bool _1c2b62c59_is_unsafe(jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Bool _1c2b62ebd_is_root(_1c2b6197d_ScopeChecker*);
inline void _1c2b63199_stop(_1c2b6197d_ScopeChecker*);
inline jule::Bool _1c2b6340d_stopped(_1c2b6197d_ScopeChecker*);
inline jule::Bool _1c2b63672_is_deferred(jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2b638d6_get_root(jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2b63b4a_get_hard_root(jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Ptr<_1c2b60130_Label> _1c2b63e58_find_label(_1c2b6197d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2b615a4_ScopeLabel> _1c2b64266_find_label_scope(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Str);
inline jule::Ptr<_1c2b615a4_ScopeLabel> _1c2b64574_find_label_all(_1c2b6197d_ScopeChecker*, jule::Str);
inline jule::Bool _1c2b6492b_is_duplicated_ident(_1c2b6197d_ScopeChecker*, jule::U64, jule::Str);
inline void _1c2b64ba1_check_var_decl(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150478_VarDecl>);
inline void _1c2b64e26_check_type_alias_decl(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_2051518a8_TypeAliasDecl>);
inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b6518a_get_child(_1c2b6197d_ScopeChecker*);
inline void _1c2b65553_check_child_ssc(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514edb2_ScopeTree>&, jule::Ptr<_1c2b4c1e9_Scope>&, jule::Ptr<_1c2b6197d_ScopeChecker>&);
inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b6590a_check_child_sc(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514edb2_ScopeTree>&, jule::Ptr<_1c2b6197d_ScopeChecker>&);
inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b65c18_check_child(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514edb2_ScopeTree>&);
inline void _1c2b65e8d_check_anon_scope(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514edb2_ScopeTree>);
inline void _1c2b662ac_process_error_call(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>&, jule::Ptr<_205139176_Token>);
inline void _1c2b66532_check_expr(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_2050bba21_Expr>);
inline void _1c2b667a7_check_co_expr(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514bde2_CoExpr>);
inline jule::Ptr<_1c2b53ae6_If> _1c2b66ab5_check_if(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_2051512e2_If>);
inline jule::Ptr<_1c2aed673_Else> _1c2b66dc3_check_else(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_2051514ce_Else>);
inline void _1c2b67148_check_conditional(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_2051516bb_Conditional>);
inline void _1c2b675aa_check_iter_scope_ssc(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::U64, jule::Ptr<_20514edb2_ScopeTree>, jule::Ptr<_1c2b4c1e9_Scope>&, jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b67a0b_check_iter_scope_sc(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::U64, jule::Ptr<_20514edb2_ScopeTree>, jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b67db3_check_iter_scope(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::U64, jule::Ptr<_20514edb2_ScopeTree>&);
inline void _1c2b68138_check_inf_iter(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150852_Iter>&);
inline void _1c2b683ad_check_while_iter(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150852_Iter>&);
inline void _1c2b68633_check_range_iter(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150852_Iter>&);
inline void _1c2b688a8_check_iter(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150852_Iter>);
inline jule::Bool _1c2b68bb6_check_valid_cont_label(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::U64);
inline jule::Bool _1c2b68ee6_check_valid_break_label(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::U64);
inline jule::Ptr<_1c2b3c706_ContSt> _1c2b69315_check_cont_valid_scope(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205151105_ContSt>);
inline void _1c2b6958a_check_cont(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205151105_ContSt>);
inline void _1c2b69810_check_label(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514e422_LabelSt>);
inline void _1c2b69a85_push_goto(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514e60e_GotoSt>);
inline void _1c2b69d0a_check_postfix(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514ebc5_AssignSt>);
inline jule::Bool _1c2b6a118_is_new_assign_ident(_1c2b6197d_ScopeChecker*, jule::Str);
inline jule::Bool _1c2b6a58b_check_structure_assign_op(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_1c1cb6ad4_StructIns>&, jule::Ptr<_20514ebc5_AssignSt>&, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2b6a822_check_single_assign(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514ebc5_AssignSt>&);
inline void _1c2b6ad61___process_end_part_of_multi_assign(_1c2b6197d_ScopeChecker*, jule::Ptr<_1c2b608d3_MultiAssign>, jule::Ptr<_20514ebc5_AssignSt>, jule::Ptr<_20514e9d8_AssignLeft>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_1c2be1ca5_Data>);
inline void _1c2b6b0d6_check_ret_multi_assign(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514ebc5_AssignSt>&);
inline void _1c2b6b35b_check_multi_assign(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514ebc5_AssignSt>&);
inline void _1c2b6b5d1_check_assign_st(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514ebc5_AssignSt>);
inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b6b988_check_case_scope(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_1c2b60edd_Case>&, jule::Ptr<_20514edb2_ScopeTree>&);
inline jule::Ptr<_1c2b60edd_Case> _1c2b6be83_check_case(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_1c2b60ac0_Match>, jule::I64, jule::Ptr<_205151a95_Case>, jule::Ptr<_1c2be1ca5_Data>);
inline void _1c2b6c34b_check_cases(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205151c82_MatchCase>&, jule::Ptr<_1c2b60ac0_Match>, jule::Ptr<_1c2be1ca5_Data>);
inline jule::Ptr<_1c2b60edd_Case> _1c2b6c703_check_default(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_1c2b60ac0_Match>, jule::Ptr<_2051514ce_Else>);
inline void _1c2b6c978_check_comptime_panic(_1c2b6197d_ScopeChecker*, jule::Ptr<_1c2b4c1e9_Scope>&);
inline void _1c2b6cc97_push_type_match(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_1c2b60ac0_Match>, jule::Ptr<_205151c82_MatchCase>&);
inline void _1c2b6d01c_check_type_match(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205151c82_MatchCase>&);
inline void _1c2b6d292_check_common_match(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205151c82_MatchCase>&);
inline void _1c2b6d517_check_match(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205151c82_MatchCase>);
inline void _1c2b6d78c_check_fall(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514e7eb_FallSt>);
inline jule::Ptr<_1c2b5ee43_BreakSt> _1c2b6da9a_check_break_with_label(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150e18_BreakSt>);
inline jule::Ptr<_1c2b5ee43_BreakSt> _1c2b6dda8_check_plain_break(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150e18_BreakSt>);
inline void _1c2b6e12d_check_break(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150e18_BreakSt>);
inline void _1c2b6e3a3_check_ret(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_205150665_RetSt>);
inline void _1c2b6e628_check_use_expr(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514b40d_UseExpr>);
inline void _1c2b6e89d_check_node(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Any&);
inline void _1c2b6ea79_check_result(jule::Ptr<_1c2b6197d_ScopeChecker>);
inline void _1c2b6ec55_check_tree(jule::Ptr<_1c2b6197d_ScopeChecker>);
inline void _1c2b70074_check_goto(_1c2b6197d_ScopeChecker*, jule::Ptr<_1c2b61791_ScopeGoto>&, jule::Ptr<_1c2b615a4_ScopeLabel>&);
inline void _1c2b70250_check_gotos(_1c2b6197d_ScopeChecker*);
inline void _1c2b7042b_check_labels(_1c2b6197d_ScopeChecker*);
inline void _1c2b70607_check_vars(_1c2b6197d_ScopeChecker*);
inline void _1c2b707d3_check_aliases(_1c2b6197d_ScopeChecker*);
inline void _1c2b70b02_check(jule::Ptr<_1c2b6197d_ScopeChecker>, jule::Ptr<_20514edb2_ScopeTree>&, jule::Ptr<_1c2b4c1e9_Scope>&);
inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2b70d66_new_child_checker(jule::Ptr<_1c2b6197d_ScopeChecker>);
struct _1c2b6197d_ScopeChecker {
	jule::Ptr<_205139176_Token> _field_called_from = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c2b7eeda_Sema> _field_s = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Ptr<_1c1cc9762_FnIns> _field_owner = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c2b6197d_ScopeChecker> _field_parent = jule::Ptr<_1c2b6197d_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1c2bdbbe5_SymbolTable> _field_table = jule::Ptr<_1c2bdbbe5_SymbolTable>();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Ptr<_20514edb2_ScopeTree> _field_tree = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Ptr<_1c1cc9762_FnIns> _field_result = jule::Ptr<_1c1cc9762_FnIns>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2b615a4_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c2b615a4_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2b61791_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c2b61791_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1c2b6197d_ScopeChecker(void) = default;

	inline bool operator==(_1c2b6197d_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c2b6197d_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1c2b71e11_check_cdef(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b72186_check_typedef(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b7240b_check_derive(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b72681_check_namespace(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b72906_check_deprecated(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b72b7b_check_test(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b72e01_check_directive(_1c2b719c1_DirectiveChecker*, jule::Ptr<_204ec174a_Directive>&);
inline void _1c2b730cc_check(_1c2b719c1_DirectiveChecker*);
struct _1c2b719c1_DirectiveChecker {
	jule::Ptr<_1c2b7eeda_Sema> _field_s = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_204ec174a_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_204ec174a_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1c2b719c1_DirectiveChecker(void) = default;

	inline bool operator==(_1c2b719c1_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c2b719c1_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7780c_find_package(_1c2b77301_ImportInfo*, jule::Str);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b77b1a_select_package(_1c2b77301_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>);
inline jule::Ptr<_1c2b9a4de_Var> _1c2b77ec2_find_var(_1c2b77301_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b78379_find_type_alias(_1c2b77301_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2b78731_find_struct(_1c2b77301_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2b78ad8_find_fn(_1c2b77301_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2a137db_Trait> _1c2b78de6_find_trait(_1c2b77301_ImportInfo*, jule::Str);
inline jule::Ptr<_1c2a159ec_Enum> _1c2b79204_find_enum(_1c2b77301_ImportInfo*, jule::Str);
inline jule::Bool _1c2b79622_is_lookupable(_1c2b77301_ImportInfo*, jule::Str);
inline jule::Bool _1c2b79930_exist_ident(_1c2b77301_ImportInfo*, jule::Str);
inline jule::Bool _1c2b79bb6_is_accessible_via_selection(_1c2b77301_ImportInfo*);
struct _1c2b77301_ImportInfo {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_205139176_Token>> _field_selected = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Ptr<_1c2b79eb3_Package> _field_package = jule::Ptr<_1c2b79eb3_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1c2b77301_ImportInfo(void) = default;

	inline bool operator==(_1c2b77301_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1c2b77301_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7a47a_find_package(_1c2b79eb3_Package*, jule::Str);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7a788_select_package(_1c2b79eb3_Package*, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>);
inline jule::Ptr<_1c2b9a4de_Var> _1c2b7ab40_find_var(_1c2b79eb3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b7aee7_find_type_alias(_1c2b79eb3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2b7b39e_find_struct(_1c2b79eb3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2b7b756_find_fn(_1c2b79eb3_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2a137db_Trait> _1c2b7ba64_find_trait(_1c2b79eb3_Package*, jule::Str);
inline jule::Ptr<_1c2a159ec_Enum> _1c2b7bd72_find_enum(_1c2b79eb3_Package*, jule::Str);
struct _1c2b79eb3_Package {
	jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>();
	

	_1c2b79eb3_Package(void) = default;

	inline bool operator==(_1c2b79eb3_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1c2b79eb3_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b804e6_find_package(_1c2b7eeda_Sema*, jule::Str);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b80804_select_package(_1c2b7eeda_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>);
inline jule::Ptr<_1c2b9a4de_Var> _1c2b80bab_find_var(_1c2b7eeda_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b81063_find_type_alias(_1c2b7eeda_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2b8141a_find_struct(_1c2b7eeda_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2b817c2_find_fn(_1c2b7eeda_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2a137db_Trait> _1c2b81ad0_find_trait(_1c2b7eeda_Sema*, jule::Str);
inline jule::Ptr<_1c2a159ec_Enum> _1c2b81ddd_find_enum(_1c2b7eeda_Sema*, jule::Str);
inline jule::Bool _1c2b822b7_is_flag(_1c2b7eeda_Sema*, jule::I64);
inline void _1c2b8253c_set_current_file(_1c2b7eeda_Sema*, jule::Ptr<_1c2bdbbe5_SymbolTable>);
inline void _1c2b82905_push_err(_1c2b7eeda_Sema*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2b82c24_push_suggestion(_1c2b7eeda_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2b830cb_is_accessible_define(_1c2b7eeda_Sema*, jule::Bool, jule::Ptr<_205139176_Token>);
inline jule::Bool _1c2b8352c_is_duplicated_ident(_1c2b7eeda_Sema*, jule::U64, jule::Str, jule::Bool);
inline void _1c2b8384b_check_directives(jule::Ptr<_1c2b7eeda_Sema>, jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Any);
inline jule::Bool _1c2b83c9c_check_generic_quantity(_1c2b7eeda_Sema*, jule::I64, jule::I64, jule::Ptr<_205139176_Token>);
inline jule::Bool _1c2b84176_is_duplicated_import_selection(_1c2b7eeda_Sema*, jule::U64, jule::Str);
inline jule::Any _1c2b8453e_get_import_def(_1c2b7eeda_Sema*, jule::Str, jule::Ptr<_1c2b77301_ImportInfo>&);
inline jule::Bool _1c2b8486e_check_import_selections(_1c2b7eeda_Sema*, jule::Ptr<_1c2b77301_ImportInfo>&);
inline jule::Bool _1c2b84bb0_is_use_alias_duplication(_1c2b7eeda_Sema*, jule::Ptr<_1c2b77301_ImportInfo>&);
inline jule::Bool _1c2b84ece_check_import(_1c2b7eeda_Sema*, jule::Ptr<_1c2b77301_ImportInfo>&);
inline void _1c2b851aa_check_imports(_1c2b7eeda_Sema*);
inline void _1c2b85386_impl_file_impls(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b85562_impl_impls(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b8573d_check_enums(jule::Ptr<_1c2b7eeda_Sema>);
inline jule::Bool _1c2b85b8e_check_type_with_refers(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2c24d2c_TypeSymbol>&, jule::Trait<_1c2c3934c_Lookup>, jule::Ptr<_1c2c2e908_Referencer>);
inline jule::Bool _1c2b86046_check_type(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2c24d2c_TypeSymbol>&, jule::Trait<_1c2c3934c_Lookup>);
inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b86420_build_type_with_generics(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_204ec8b92_TypeDecl>&, jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>);
inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b8673e_build_type(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_204ec8b92_TypeDecl>&);
inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b86a4c_select_type(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_204ec8b92_TypeDecl>&);
inline jule::Ptr<_1c2be3823_Eval> _1c2b86e9d_evalpd(jule::Ptr<_1c2b7eeda_Sema>, jule::Trait<_1c2c3934c_Lookup>, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2b9a4de_Var>);
inline jule::Ptr<_1c2be3823_Eval> _1c2b87355_evalp(jule::Ptr<_1c2b7eeda_Sema>, jule::Trait<_1c2c3934c_Lookup>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Ptr<_1c2be3823_Eval> _1c2b87663_eval(jule::Ptr<_1c2b7eeda_Sema>, jule::Trait<_1c2c3934c_Lookup>);
inline jule::Bool _1c2b87b5d_check_assign_type(jule::Ptr<_1c2b7eeda_Sema>, jule::Bool, jule::Ptr<_1c2c1b131_TypeKind>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>);
inline jule::Bool _1c2b880d1_check_type_compatibility(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2c1b131_TypeKind>&, jule::Ptr<_1c2c1b131_TypeKind>&, jule::Ptr<_205139176_Token>&);
inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b884bb_build_non_generic_type_kind(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_204ec8b92_TypeDecl>&, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>&);
inline void _1c2b88774_build_fn_non_generic_type_kinds(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc9762_FnIns>&);
inline jule::Ptr<_1c1cc9762_FnIns> _1c2b88ab5_get_trait_check_fn_kind(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline jule::Bool _1c2b88dd4_reload_fn_ins_types(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc9762_FnIns>&);
inline jule::Bool _1c2b89368_check_ref_validity_for_init_expr(jule::Ptr<_1c2b7eeda_Sema>, jule::Bool, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>&);
inline jule::Bool _1c2b89962_check_validity_for_init_expr(jule::Ptr<_1c2b7eeda_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c2c1b131_TypeKind>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>&);
inline jule::Bool _1c2b89d19_check_type_alias_decl_kind(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2c1a3e9_TypeAlias>&, jule::Trait<_1c2c3934c_Lookup>);
inline void _1c2b8a149_check_type_alias_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2c1a3e9_TypeAlias>&, jule::Trait<_1c2c3934c_Lookup>);
inline void _1c2b8a3e1_check_type_alias_decl_dup(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2c1a3e9_TypeAlias>&);
inline jule::Bool _1c2b8a666_check_type_alias_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b8a8db_check_enum_items_dup(_1c2b7eeda_Sema*, jule::Ptr<_1c2a159ec_Enum>);
inline void _1c2b8ab61_check_enum_items_str(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a159ec_Enum>&);
inline void _1c2b8add6_check_enum_items_int(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a159ec_Enum>&);
inline void _1c2b8b15b_check_enum_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a159ec_Enum>&);
inline jule::Bool _1c2b8b3c0_check_enum_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline jule::Bool _1c2b8b6cd_check_decl_generics(_1c2b7eeda_Sema*, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>&);
inline jule::Bool _1c2b8ba0d_check_fn_decl_params_dup(_1c2b7eeda_Sema*, jule::Ptr<_1c1cc65b6_Fn>&);
inline jule::Bool _1c2b8bd4e_check_fn_decl_result_dup(_1c2b7eeda_Sema*, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b8c0d5_check_fn_decl_types(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b8c37c_check_fn_decl_prototype(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b8c635_check_trait_decl_method(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b8c8dd_check_trait_decl_methods(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a137db_Trait>&);
inline void _1c2b8cb74_check_trait_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a137db_Trait>&);
inline jule::Bool _1c2b8cdd8_check_trait_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline jule::Bool _1c2b8d2b2_check_trait_impl_methods(_1c2b7eeda_Sema*, jule::Ptr<_1c2a137db_Trait>&, jule::Ptr<_1c2a16e71_Impl>&);
inline jule::Bool _1c2b8d67a_impl_to_struct(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&, jule::Ptr<_1c2a16e71_Impl>&);
inline void _1c2b8d900_impl_trait(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a16e71_Impl>&);
inline void _1c2b8db75_impl_struct(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a16e71_Impl>&);
inline void _1c2b8ddea_impl_impl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2a16e71_Impl>&);
inline void _1c2b8e219_check_var_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2b9a4de_Var>&, jule::Trait<_1c2c3934c_Lookup>);
inline void _1c2b8e48e_check_global_var_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2b9a4de_Var>&);
inline jule::Bool _1c2b8e703_check_global_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline jule::Bool _1c2b8eacc_check_struct_trait_impl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&, jule::Ptr<_1c2a137db_Trait>&);
inline jule::Bool _1c2b8edeb_check_struct_impls(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Bool _1c2b90209_check_struct_fields(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Bool _1c2b90539_check_struct_decl_methods(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c2b907c0_check_struct_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Bool _1c2b90a34_check_struct_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b90ca9_check_fn_decl(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline jule::Bool _1c2b9101d_check_fn_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b913d6_push_cycle_error(_1c2b7eeda_Sema*, jule::Ptr<_1c1cb3e55_Struct>&, jule::Ptr<_1c1cb3e55_Struct>&, jule::Str&);
inline jule::Bool _1c2b91837_check_cross_cycle(_1c2b7eeda_Sema*, jule::Ptr<_1c1cb3e55_Struct>&, jule::Ptr<_1c1cb3e55_Struct>&, jule::Str&);
inline jule::Bool _1c2b91cbb_check_struct_derive_illegal_cycles(_1c2b7eeda_Sema*, jule::Str, jule::Ptr<_1c1cb3e55_Struct>&, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2b920eb_check_struct_ins_derive_clone(_1c2b7eeda_Sema*, jule::Ptr<_1c1cb6ad4_StructIns>);
inline jule::Bool _1c2b9243c_check_struct_derive_clone(_1c2b7eeda_Sema*, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Bool _1c2b926b2_check_file_derives(_1c2b7eeda_Sema*);
inline void _1c2b9288d_check_package_derives(_1c2b7eeda_Sema*);
inline void _1c2b92a69_check_package_decls(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b92daa_check_data_for_type_inference(_1c2b7eeda_Sema*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>&);
inline void _1c2b93141_check_var(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2b9a4de_Var>&);
inline void _1c2b93460_check_type_var(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c2b9a4de_Var>&, jule::Trait<_1c2c3934c_Lookup>);
inline void _1c2b9363b_check_global_types(jule::Ptr<_1c2b7eeda_Sema>);
inline jule::Ptr<_1c1cc9762_FnIns> _1c2b939e3_ready_to_check_fn(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb6ad4_StructIns>&, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b93d12_check_type_method(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb6ad4_StructIns>&, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b94087_check_field_defaults(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline jule::Ptr<_1c1cc9762_FnIns> _1c2b944d8_check_struct_ins_op(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb6ad4_StructIns>&, jule::Ptr<_1c1cc65b6_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>);
inline void _1c2b9475d_check_struct_ins(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c2b949d3_check_type_struct(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c2b94bae_check_struct_types(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b94e56_check_struct_ins_operators(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb6ad4_StructIns>);
inline void _1c2b9520e_check_type_struct_operators(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c2b9541d_check_struct_types_operators(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b956a4_check_rets(_1c2b7eeda_Sema*, jule::Ptr<_1c1cc9762_FnIns>&);
inline void _1c2b959c3_check_fn_ins_sc(_1c2b7eeda_Sema*, jule::Ptr<_1c1cc9762_FnIns>&, jule::Ptr<_1c2b6197d_ScopeChecker>&);
inline void _1c2b95ce2_check_fn_ins_caller(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc9762_FnIns>&, jule::Ptr<_205139176_Token>);
inline void _1c2b96067_check_fn_ins(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc9762_FnIns>&);
inline void _1c2b962dc_check_type_fn(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b96562_check_test_fn(_1c2b7eeda_Sema*, jule::Ptr<_1c1cc9762_FnIns>&);
inline void _1c2b967d7_precheck_type_fn(jule::Ptr<_1c2b7eeda_Sema>, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c2b969b3_precheck_fn_types(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b96b8e_check_fn_types(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b96d6a_check_package_types(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b97046_set_file_sema_fields(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b97222_set_sema_fields(jule::Ptr<_1c2b7eeda_Sema>);
inline void _1c2b97497_check(jule::Ptr<_1c2b7eeda_Sema>, jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&);
struct _1c2b7eeda_Sema {
	jule::Slice<_2046db273_Log> _field_errors = jule::Slice<_2046db273_Log>();
	jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>();
	jule::Ptr<_1c2bdbbe5_SymbolTable> _field_file = jule::Ptr<_1c2bdbbe5_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1c2b7eeda_Sema(void) = default;

	inline bool operator==(_1c2b7eeda_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1c2b7eeda_Sema _other) { return !this->operator==(_other); }


};
inline _1c2b9784e_MissingRetChecker static__1c2b97c17_new(void);
inline jule::Bool _1c2b97ee2_check_conditional(_1c2b9784e_MissingRetChecker*, jule::Ptr<_1c2aed860_Conditional>);
inline jule::Bool _1c2b98300_check_match(_1c2b9784e_MissingRetChecker*, jule::Ptr<_1c2b60ac0_Match>);
inline jule::Bool _1c2b9860d_check_inf_iter(_1c2b9784e_MissingRetChecker*, jule::Ptr<_1c2b0e486_InfIter>);
inline jule::Bool _1c2b9891b_check_scope(_1c2b9784e_MissingRetChecker*, jule::Ptr<_1c2b4c1e9_Scope>);
inline jule::Bool _1c2b98c29_check(_1c2b9784e_MissingRetChecker*, jule::Ptr<_1c2b4c1e9_Scope>);
struct _1c2b9784e_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();
	

	_1c2b9784e_MissingRetChecker(void) = default;

	inline bool operator==(_1c2b9784e_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1c2b9784e_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1c2b99521_IterRelation {
	jule::Ptr<_1c2b9a4de_Var> _field_range = jule::Ptr<_1c2b9a4de_Var>();
	

	_1c2b99521_IterRelation(void) = default;

	inline bool operator==(_1c2b99521_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1c2b99521_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2b9a896_is_initialized(_1c2b9a4de_Var*);
inline jule::Bool _1c2b9ab0a_is_type_inferred(_1c2b9a4de_Var*);
struct _1c2b9a4de_Var {
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1c2c24d2c_TypeSymbol> _field_kind = jule::Ptr<_1c2c24d2c_TypeSymbol>();
	jule::Ptr<_1c2be2d2d_Value> _field_value = jule::Ptr<_1c2be2d2d_Value>();
	jule::Ptr<_1c1ccc798_ReferenceStack> _field_references = jule::Ptr<_1c1ccc798_ReferenceStack>();
	jule::Slice<jule::Ptr<_204ec174a_Directive>> _field_directives = jule::Slice<jule::Ptr<_204ec174a_Directive>>();
	jule::Ptr<_1c2b99521_IterRelation> _field_iter_relation = jule::Ptr<_1c2b99521_IterRelation>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_depends = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	

	_1c2b9a4de_Var(void) = default;

	inline bool operator==(_1c2b9a4de_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1c2b9a4de_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1c2b9b666_dispose(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9b90d_to_str(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9bc4e_logical(jule::Ptr<_1c1cc65b6_Fn>&, jule::Str);
inline jule::Bool static__1c2b9bee6_eq(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9c28d_gt(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9c535_gt_eq(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9c7cc_lt(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9ca74_lt_eq(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9cdb5_result(jule::Ptr<_1c1cc65b6_Fn>&, jule::Str);
inline jule::Bool static__1c2b9d15c_shl(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9d404_shr(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9d69b_add(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9d943_sub(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9dbda_div(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9de82_mul(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9e229_mod(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9e4c1_bit_and(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9e768_bit_or(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9ea10_bit_xor(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2b9ed51_unary(jule::Ptr<_1c1cc65b6_Fn>&, jule::Str);
inline jule::Bool static__1c2ba00e8_neg(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba0390_pos(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba0637_bit_not(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba0978_assign(jule::Ptr<_1c1cc65b6_Fn>&, jule::Str);
inline jule::Bool static__1c2ba0c20_add_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba0eb7_sub_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba125e_div_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba1506_mul_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba179d_mod_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba1a45_shl_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba1cdc_shr_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba2084_bit_or_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba232b_bit_and_assign(jule::Ptr<_1c1cc65b6_Fn>);
inline jule::Bool static__1c2ba25c3_bit_xor_assign(jule::Ptr<_1c1cc65b6_Fn>);
struct _1c2b9aee5_FuncPattern {
	

	_1c2b9aee5_FuncPattern(void) = default;

	inline bool operator==(_1c2b9aee5_FuncPattern _other) { return true; }

	inline bool operator!=(_1c2b9aee5_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1c2bcd28b_push_err(_1c2bccdc3_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2bcd500_check_trait(_1c2bccdc3_TypeCompatibilityChecker*);
inline jule::Bool _1c2bcd764_check_ptr(_1c2bccdc3_TypeCompatibilityChecker*);
inline jule::Bool _1c2bcd9c8_check_prim(_1c2bccdc3_TypeCompatibilityChecker*);
inline jule::Bool _1c2bcdc3c_check(_1c2bccdc3_TypeCompatibilityChecker*);
struct _1c2bccdc3_TypeCompatibilityChecker {
	jule::Ptr<_1c2b7eeda_Sema> _field_s = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_dest = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_src = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	

	_1c2bccdc3_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1c2bccdc3_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1c2bccdc3_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1c2bce6dd_push_err(_1c2bce27b_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2bce952_check_validity(_1c2bce27b_AssignTypeChecker*);
inline jule::Bool _1c2bcebb6_check_const(_1c2bce27b_AssignTypeChecker*);
inline jule::Bool _1c2bcee2a_is_prim(_1c2bce27b_AssignTypeChecker*);
inline jule::Bool _1c2bd018e_check_compatibility(_1c2bce27b_AssignTypeChecker*);
inline jule::Bool _1c2bd0403_check(_1c2bce27b_AssignTypeChecker*);
struct _1c2bce27b_AssignTypeChecker {
	jule::Ptr<_1c2b7eeda_Sema> _field_s = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_dest = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2be1ca5_Data> _field_d = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	

	_1c2bce27b_AssignTypeChecker(void) = default;

	inline bool operator==(_1c2bce27b_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1c2bce27b_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1c2bd115c_push_generic(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&, jule::I64);
inline jule::Bool _1c2bd1437_annotate_prim(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd1745_annotate_slc(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd1aec_check_map_key(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd1e0a_annotate_map(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd2218_annotate_fn(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd2526_annotate_ptr(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd2834_annotate_sptr(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd2b42_annotate_any(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd2e50_annotate_kind(_1c2bd0ac9_DynamicTypeAnnotation*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2bd31b4_annotate(_1c2bd0ac9_DynamicTypeAnnotation*);
struct _1c2bd0ac9_DynamicTypeAnnotation {
	jule::Ptr<_1c2be3823_Eval> _field_e = jule::Ptr<_1c2be3823_Eval>();
	jule::Ptr<_1c1cc9762_FnIns> _field_f = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Ptr<_1c1cc88c6_ParamIns> _field_p = jule::Ptr<_1c1cc88c6_ParamIns>();
	jule::Ptr<_1c2be1ca5_Data> _field_a = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c2c1b131_TypeKind>* _field_k = nullptr;
	

	_1c2bd0ac9_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1c2bd0ac9_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1c2bd0ac9_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1c2bd3dda_push_err_token(_1c2bd388a_FnCallArgChecker*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2bd4209_push_err(_1c2bd388a_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>> _1c2bd446d_get_params(_1c2bd388a_FnCallArgChecker*);
inline jule::Bool _1c2bd477b_check_counts(_1c2bd388a_FnCallArgChecker*, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>&);
inline jule::Bool _1c2bd4bcc_check_arg(_1c2bd388a_FnCallArgChecker*, jule::Ptr<_1c1cc88c6_ParamIns>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>&);
inline jule::Bool _1c2bd5084_push(_1c2bd388a_FnCallArgChecker*, jule::Ptr<_1c1cc88c6_ParamIns>&, jule::Ptr<_2050bba21_Expr>);
inline jule::Bool _1c2bd543b_push_variadic(_1c2bd388a_FnCallArgChecker*, jule::Ptr<_1c1cc88c6_ParamIns>&, jule::I64);
inline jule::Bool _1c2bd5749_check_args(_1c2bd388a_FnCallArgChecker*, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>&);
inline jule::Bool _1c2bd59d0_check_dynamic_type_annotation(_1c2bd388a_FnCallArgChecker*);
inline jule::Bool _1c2bd5c55_check(_1c2bd388a_FnCallArgChecker*);
struct _1c2bd388a_FnCallArgChecker {
	jule::Ptr<_1c2be3823_Eval> _field_e = jule::Ptr<_1c2be3823_Eval>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_args = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c1cc9762_FnIns> _field_f = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1c2bd388a_FnCallArgChecker(void) = default;

	inline bool operator==(_1c2bd388a_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1c2bd388a_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1c2bd67a0_push_err(_1c2bd6294_StructLitChecker*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2bd6abe_push_suggestion(_1c2bd6294_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c2bd6e87_push_match(_1c2bd6294_StructLitChecker*, jule::Ptr<_1c1cb6276_FieldIns>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>&);
inline void _1c2bd72a6_check_pair(_1c2bd6294_StructLitChecker*, jule::Ptr<_20514d135_FieldExprPair>&, jule::Slice<jule::Ptr<_2050bba21_Expr>>&);
inline jule::Bool _1c2bd75b4_ready_exprs(_1c2bd6294_StructLitChecker*, jule::Slice<jule::Ptr<_2050bba21_Expr>>&);
inline void _1c2bd7839_check(_1c2bd6294_StructLitChecker*, jule::Slice<jule::Ptr<_2050bba21_Expr>>&);
struct _1c2bd6294_StructLitChecker {
	jule::Ptr<_1c2be3823_Eval> _field_e = jule::Ptr<_1c2be3823_Eval>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	jule::Ptr<_1c1cb6ad4_StructIns> _field_s = jule::Ptr<_1c1cb6ad4_StructIns>();
	jule::Slice<jule::Ptr<_1c1cb94aa_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1c1cb94aa_StructArgExprModel>>();
	

	_1c2bd6294_StructLitChecker(void) = default;

	inline bool operator==(_1c2bd6294_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1c2bd6294_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2b9a4de_Var> _1c2bd831d_build_var(_1c2bd7d78_RangeChecker*, jule::Ptr<_205150478_VarDecl>&);
inline void _1c2bd84e9_set_size_key(_1c2bd7d78_RangeChecker*);
inline void _1c2bd88d4_check_range_expr_validity(_1c2bd7d78_RangeChecker*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2b9a4de_Var>&, jule::Ptr<_1c2c1b131_TypeKind>&);
inline void _1c2bd8ac1_check_slice(_1c2bd7d78_RangeChecker*);
inline void _1c2bd8c9c_check_array(_1c2bd7d78_RangeChecker*);
inline void _1c2bd8e78_check_map_key_a(_1c2bd7d78_RangeChecker*);
inline void _1c2bd9154_check_map_key_b(_1c2bd7d78_RangeChecker*);
inline void _1c2bd9330_check_map(_1c2bd7d78_RangeChecker*);
inline void _1c2bd950b_check_str(_1c2bd7d78_RangeChecker*);
inline jule::Bool _1c2bd9770_check(_1c2bd7d78_RangeChecker*);
struct _1c2bd7d78_RangeChecker {
	jule::Ptr<_1c2b6197d_ScopeChecker> _field_sc = jule::Ptr<_1c2b6197d_ScopeChecker>();
	jule::Ptr<_205150c2b_RangeKind> _field_rang = jule::Ptr<_205150c2b_RangeKind>();
	jule::Ptr<_1c2b3c519_RangeIter> _field_kind = jule::Ptr<_1c2b3c519_RangeIter>();
	jule::Ptr<_1c2be1ca5_Data> _field_d = jule::Ptr<_1c2be1ca5_Data>();
	

	_1c2bd7d78_RangeChecker(void) = default;

	inline bool operator==(_1c2bd7d78_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c2bd7d78_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1c2bda4b8_prepare_types(_1c2bda012_RetTypeChecker*);
inline void _1c2bda73d_prepare_exprs(_1c2bda012_RetTypeChecker*, jule::Ptr<_2050bba21_Expr>&);
inline void _1c2bda919_ret_vars(_1c2bda012_RetTypeChecker*);
inline void _1c2bdaae5_check_exprs(_1c2bda012_RetTypeChecker*);
inline jule::Bool _1c2bdae03_check(_1c2bda012_RetTypeChecker*, jule::Ptr<_2050bba21_Expr>&);
struct _1c2bda012_RetTypeChecker {
	jule::Ptr<_1c2b6197d_ScopeChecker> _field_sc = jule::Ptr<_1c2b6197d_ScopeChecker>();
	jule::Ptr<_1c1cc9762_FnIns> _field_f = jule::Ptr<_1c1cc9762_FnIns>();
	jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>();
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _field_exprs = jule::Slice<jule::Ptr<_2050bba21_Expr>>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_model = jule::Any();
	

	_1c2bda012_RetTypeChecker(void) = default;

	inline bool operator==(_1c2bda012_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c2bda012_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2bdc201_find_package(_1c2bdbbe5_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2bdc50e_select_package(_1c2bdbbe5_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>);
inline jule::Ptr<_1c2b9a4de_Var> _1c2bdc8b6_find_var(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2bdcc6d_find_type_alias(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2bdd125_find_struct(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2bdd4cc_find_fn(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2a137db_Trait> _1c2bdd7da_find_trait(_1c2bdbbe5_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2a159ec_Enum> _1c2bddae8_find_enum(_1c2bdbbe5_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2b9a4de_Var> _1c2bde16a___find_var(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2bde5bb___find_type_alias(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1c2bde973_def_by_ident(_1c2bdbbe5_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1c2bdedc4_is_duplicated_ident(_1c2bdbbe5_SymbolTable*, jule::U64, jule::Str, jule::Bool);
struct _1c2bdbbe5_SymbolTable {
	jule::Ptr<_20513e566_File> _field_file = jule::Ptr<_20513e566_File>();
	jule::Slice<_1c1ccdb84_Pass> _field_passes = jule::Slice<_1c1ccdb84_Pass>();
	jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>();
	jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _field_structs = jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>();
	jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>();
	jule::Slice<jule::Ptr<_1c2a137db_Trait>> _field_traits = jule::Slice<jule::Ptr<_1c2a137db_Trait>>();
	jule::Slice<jule::Ptr<_1c2a159ec_Enum>> _field_enums = jule::Slice<jule::Ptr<_1c2a159ec_Enum>>();
	jule::Slice<jule::Ptr<_1c2a16e71_Impl>> _field_impls = jule::Slice<jule::Ptr<_1c2a16e71_Impl>>();
	

	_1c2bdbbe5_SymbolTable(void) = default;

	inline bool operator==(_1c2bdbbe5_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1c2bdbbe5_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2be2190_is_nil(_1c2be1ca5_Data*);
inline jule::Bool _1c2be2404_is_void(_1c2be1ca5_Data*);
inline jule::Bool _1c2be2668_is_const(_1c2be1ca5_Data*);
inline jule::Bool _1c2be2976_good_operand(_1c2be1ca5_Data*, jule::Ptr<_1c2be1ca5_Data>&);
struct _1c2be1ca5_Data {
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1c2abb9a4_Const> _field_constant = jule::Ptr<_1c2abb9a4_Const>();
	

	_1c2be1ca5_Data(void) = default;

	inline bool operator==(_1c2be1ca5_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1c2be1ca5_Data _other) { return !this->operator==(_other); }


};
struct _1c2be2d2d_Value {
	jule::Ptr<_2050bba21_Expr> _field_expr = jule::Ptr<_2050bba21_Expr>();
	jule::Ptr<_1c2be1ca5_Data> _field_data = jule::Ptr<_1c2be1ca5_Data>();
	

	_1c2be2d2d_Value(void) = default;

	inline bool operator==(_1c2be2d2d_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c2be2d2d_Value _other) { return !this->operator==(_other); }


};
inline void _1c2be3ceb_push_err(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2be411a_push_suggestion(_1c2be3823_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c2be42e6_allow_builtin(_1c2be3823_Eval*);
inline void _1c2be44c2_disallow_builtin(_1c2be3823_Eval*);
inline jule::Bool _1c2be4736_is_unsafe(_1c2be3823_Eval*);
inline jule::Bool _1c2be499a_is_global(_1c2be3823_Eval*);
inline jule::Bool _1c2be4ca8_apply_numeric_prefix(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be501c_lit_nil(_1c2be3823_Eval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be532a_lit_str(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be5638_lit_bool(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be5946_lit_rune(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be5c54_lit_float(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be6062_lit_int(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be6370_lit_num(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be667d_eval_lit(_1c2be3823_Eval*, jule::Ptr<_20514ba18_LitExpr>);
inline jule::Any _1c2be698b_find_builtins(_1c2be3823_Eval*, jule::Str);
inline jule::Any _1c2be6d43_get_def(_1c2be3823_Eval*, jule::Str, jule::Bool);
inline void _1c2be70b8_push_reference(_1c2be3823_Eval*, jule::Ptr<_1c1ccc798_ReferenceStack>&);
inline void _1c2be733d_push_reference_to_fn(_1c2be3823_Eval*, jule::Ptr<_1c1cc9762_FnIns>&);
inline void _1c2be75b3_push_reference_to_var(_1c2be3823_Eval*, jule::Ptr<_1c2b9a4de_Var>&);
inline void _1c2be785a_push_reference_to_struct(_1c2be3823_Eval*, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be7b79___eval_enum(_1c2be3823_Eval*, jule::Ptr<_1c2a159ec_Enum>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be8031_eval_enum(_1c2be3823_Eval*, jule::Ptr<_1c2a159ec_Enum>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be833e___eval_struct(_1c2be3823_Eval*, jule::Ptr<_1c1cb6ad4_StructIns>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be86e6_eval_struct(_1c2be3823_Eval*, jule::Ptr<_1c1cb6ad4_StructIns>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be8a04_eval_fn_ins(_1c2be3823_Eval*, jule::Ptr<_1c1cc9762_FnIns>);
inline void _1c2be8d23_check_deprecated(_1c2be3823_Eval*, jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2be91ca_eval_fn(_1c2be3823_Eval*, jule::Ptr<_1c1cc65b6_Fn>, jule::Ptr<_205139176_Token>);
inline void _1c2be95b5_push_illegal_cycle_error(_1c2be3823_Eval*, jule::Ptr<_1c2b9a4de_Var>&, jule::Ptr<_1c2b9a4de_Var>&, jule::Str&);
inline jule::Bool _1c2be997d_check_cross_cycle(_1c2be3823_Eval*, jule::Ptr<_1c2b9a4de_Var>&, jule::Str&);
inline jule::Bool _1c2be9d35_check_illegal_cycles(_1c2be3823_Eval*, jule::Ptr<_1c2b9a4de_Var>&, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bea1dc_eval_var(_1c2be3823_Eval*, jule::Ptr<_1c2b9a4de_Var>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bea594_eval_type_alias(_1c2be3823_Eval*, jule::Ptr<_1c2c1a3e9_TypeAlias>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bea94b_eval_def(_1c2be3823_Eval*, jule::Any, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2beac59_eval_ident(_1c2be3823_Eval*, jule::Ptr<_20514c0ce_IdentExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2beb067_eval_unary(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514c2bb_UnaryExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2beb375_eval_variadic(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514c4a8_VariadicExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2beb683_eval_unsafe(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514bc05_UnsafeExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2beb991_eval_arr(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514d8d8_SliceExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bebd48_eval_exp_slc(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514d8d8_SliceExpr>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bec156_eval_slice_expr(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514d8d8_SliceExpr>);
inline void _1c2bec497_check_integer_indexing_by_data(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_205139176_Token>);
inline void _1c2bec871_indexing_ptr(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline void _1c2becc39_indexing_arr(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline void _1c2bed102_indexing_slc(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline void _1c2bed4ba_indexing_map(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline void _1c2bed883_indexing_str(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline void _1c2bedc4b_to_indexing(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline jule::Bool _1c2bee125_push_generics_from_index_data(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bee510_eval_ident_decl_from_indexing(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514b7d7_IndexingExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2bee82e_eval_indexing(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514b7d7_IndexingExpr>);
inline std::tuple<jule::Ptr<_1c2be1ca5_Data>,jule::Ptr<_1c2be1ca5_Data>> _1c2beeb3c_eval_slicing_exprs(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514e048_SlicingExpr>&);
inline void _1c2beedb2_slicing_arr(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c0027a_slicing_str(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c006dc_check_slicing(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_20514e048_SlicingExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c009ea_eval_slicing(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514e048_SlicingExpr>);
inline void _1c2c00db3_cast_ptr(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c0127b_cast_struct(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c01644_cast_ref(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c01a0c_cast_slc(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c01d2b_cast_str(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c021e4_cast_int(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c025ac_cast_num(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c02975_cast_prim(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline void _1c2c02c94_cast_constant(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c03217_eval_cast_by_type_n_data(_1c2be3823_Eval*, jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c03536_eval_cast(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514c695_CastExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c03844_eval_ns_selection(_1c2be3823_Eval*, jule::Ptr<_20514c882_NsSelectionExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c03cb7_eval_struct_lit_explicit(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_1c1cb6ad4_StructIns>, jule::Slice<jule::Ptr<_2050bba21_Expr>>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c040d6_eval_struct_lit(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514d322_StructLit>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c043e4_eval_type(_1c2be3823_Eval*, jule::Ptr<_204ec8b92_TypeDecl>);
inline void _1c2c04713_call_type_fn(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1c2c04aba_check_fn_call_generics(_1c2be3823_Eval*, jule::Ptr<_1c1cc9762_FnIns>, jule::Ptr<_20514ce48_FnCallExpr>);
inline void _1c2c04dd9_call_builtin_fn(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c0522a_check_fn_of_concurrent_call(_1c2be3823_Eval*, jule::Ptr<_1c1cc9762_FnIns>&, jule::Ptr<_205139176_Token>);
inline void _1c2c05626_process_exceptional_handler(_1c2be3823_Eval*, jule::Ptr<_1c1cc9762_FnIns>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c05956_call_fn(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c05c64_eval_fn_call(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514ce48_FnCallExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0611b_eval_enum_static(_1c2be3823_Eval*, jule::Ptr<_1c2a159ec_Enum>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c064c3_eval_struct_static(_1c2be3823_Eval*, jule::Ptr<_1c1cb6ad4_StructIns>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c06924_eval_trait_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_1c2a137db_Trait>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c06e1e_eval_struct_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_1c1cb6ad4_StructIns>, jule::Ptr<_20514ca6e_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c072c6_eval_slice_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0767d_eval_array_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c07a35_eval_map_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c07ddc_eval_str_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c081ea_eval_int_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c08508_eval_uint_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c08816_eval_i8_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c08b24_eval_i16_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c08e32_eval_i32_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c09240_eval_i64_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0954d_eval_u8_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0985b_eval_u16_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c09b69_eval_u32_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c09e77_eval_u64_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0a285_eval_f32_type_tatic(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0a593_eval_f64_type_static(_1c2be3823_Eval*, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0a94a_eval_prim_static(_1c2be3823_Eval*, jule::Str, jule::Ptr<_205139176_Token>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0ad02_eval_type_static(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_20514ca6e_SubIdentExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0b1a9_eval_obj_sub_ident(_1c2be3823_Eval*, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_20514ca6e_SubIdentExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0b4b7_eval_sub_ident(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514ca6e_SubIdentExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0b7c5_eval_tuple(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514b5ea_TupleExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0bb7c_eval_map(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_1c2c2ac12_Map>, jule::Ptr<_20514d50e_BraceLit>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0be8a_eval_brace_lit(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514d50e_BraceLit>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0c298_eval_anon_fn(_1c2be3823_Eval*, jule::Ptr<_20515028b_FnDecl>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0c5a6_eval_binop(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_20514cc5b_BinopExpr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0c8b4_eval_expr_kind(jule::Ptr<_1c2be3823_Eval>, jule::Any);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0cbc2_eval(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_2050bba21_Expr>);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0ced0_eval_expr(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_2050bba21_Expr>);
struct _1c2be3823_Eval {
	jule::Ptr<_1c2b7eeda_Sema> _field_s = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Trait<_1c2c3934c_Lookup> _field_lookup = jule::Trait<_1c2c3934c_Lookup>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_prefix = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1c2b9a4de_Var> _field_owner = jule::Ptr<_1c2b9a4de_Var>();
	jule::Ptr<_1c1cb6276_FieldIns> _field_field = jule::Ptr<_1c1cb6276_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1c2be3823_Eval(void) = default;

	inline bool operator==(_1c2be3823_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c2be3823_Eval _other) { return !this->operator==(_other); }


};
inline _1c2c0d453_UnaryEval static__1c2c0d909_new(jule::Ptr<_1c2be3823_Eval>);
inline void _1c2c0dad5_minus(_1c2c0d453_UnaryEval*);
inline void _1c2c0dcb1_plus(_1c2c0d453_UnaryEval*);
inline void _1c2c0de8c_caret(_1c2c0d453_UnaryEval*);
inline void _1c2c0e168_excl(_1c2c0d453_UnaryEval*);
inline void _1c2c0e344_star(_1c2c0d453_UnaryEval*);
inline void _1c2c0e520_amper(_1c2c0d453_UnaryEval*);
inline void _1c2c0e6eb_type_decl(_1c2c0d453_UnaryEval*);
inline void _1c2c0e8c7_eval_data(_1c2c0d453_UnaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c0eba2_eval(_1c2c0d453_UnaryEval*, jule::Ptr<_20514c2bb_UnaryExpr>);
struct _1c2c0d453_UnaryEval {
	jule::Ptr<_1c2be3823_Eval> _field_e = jule::Ptr<_1c2be3823_Eval>();
	jule::Ptr<_1c2be1ca5_Data> _field_d = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_20514c2bb_UnaryExpr> _field_u = jule::Ptr<_20514c2bb_UnaryExpr>();
	

	_1c2c0d453_UnaryEval(void) = default;

	inline bool operator==(_1c2c0d453_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c2c0d453_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1c2c101e1_BinaryEval static__1c2c10796_new_plain(jule::Ptr<_1c2be3823_Eval>);
inline _1c2c101e1_BinaryEval static__1c2c10ad7_new(jule::Ptr<_1c2be3823_Eval>, jule::Ptr<_205139176_Token>);
inline jule::Bool _1c2c10d6d_check_type_compatibility(_1c2c101e1_BinaryEval*);
inline jule::Bool _1c2c11126_check_struct_common_operator_compatibility(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c113bd_eval_nil(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c11632_eval_enum(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c11896_eval_sptr(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c11b0a_eval_ptr(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c11d6e_eval_arr(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c120d3_eval_slc(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c12347_eval_fn(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c125ab_eval_struct(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c12820_eval_trait(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c12a84_eval_any(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c12ce8_eval_bool(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c1305c_eval_str(_1c2c101e1_BinaryEval*);
inline void _1c2c13238_set_type_to_greater(_1c2c101e1_BinaryEval*);
inline void _1c2c1347a_check_mod_data(_1c2c101e1_BinaryEval*, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c13656_mod(_1c2c101e1_BinaryEval*);
inline jule::Bool _1c2c13a30_numbers_are_compatibile(_1c2c101e1_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c13ca5_eval_float(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c14019_eval_int(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c1427d_eval_prim(_1c2c101e1_BinaryEval*);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c144e2_eval_op(_1c2c101e1_BinaryEval*);
inline void _1c2c14767_eval_const(_1c2c101e1_BinaryEval*, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c149dc_check_data(_1c2c101e1_BinaryEval*, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c14bb8_check_datas(_1c2c101e1_BinaryEval*);
inline void _1c2c14e3d_set_model(_1c2c101e1_BinaryEval*, jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c151b3_post_eval(_1c2c101e1_BinaryEval*, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c1556a_solve_explicit(_1c2c101e1_BinaryEval*, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c15878_eval(_1c2c101e1_BinaryEval*, jule::Ptr<_20514cc5b_BinopExpr>&);
struct _1c2c101e1_BinaryEval {
	jule::Ptr<_1c2be3823_Eval> _field_e = jule::Ptr<_1c2be3823_Eval>();
	jule::Ptr<_1c2be1ca5_Data> _field_l = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_1c2be1ca5_Data> _field_r = jule::Ptr<_1c2be1ca5_Data>();
	jule::Ptr<_205139176_Token> _field_op = jule::Ptr<_205139176_Token>();
	

	_1c2c101e1_BinaryEval(void) = default;

	inline bool operator==(_1c2c101e1_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c2c101e1_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1c2c1a3e9_TypeAlias {
	jule::Ptr<_20514edb2_ScopeTree> _field_scope = jule::Ptr<_20514edb2_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2c24d2c_TypeSymbol> _field_kind = jule::Ptr<_1c2c24d2c_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>();
	

	_1c2c1a3e9_TypeAlias(void) = default;

	inline bool operator==(_1c2c1a3e9_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1c2c1a3e9_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c1b4d8_to_str(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1b7e6_equals(jule::Ptr<_1c2c1b131_TypeKind>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Bool _1c2c1bc8b_cpp_linked(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1c000_is_nil(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1c264_void(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1c4c8_mutable(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1c73c_nil_compatible(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1c9a1_performs_rc(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1cc15_supports_cloning(_1c2c1b131_TypeKind*);
inline jule::Bool _1c2c1ce79_variadicable(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c256e0_Prim> _1c2c2304a_prim(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c28bee_Sptr> _1c2c232ae_sptr(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c2c263_Ptr> _1c2c23523_ptr(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2a159ec_Enum> _1c2c23787_enm(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c2b806_Arr> _1c2c239eb_arr(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c2965b_Slc> _1c2c23c60_slc(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c1cc9762_FnIns> _1c2c23ec4_fnc(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c1cb6ad4_StructIns> _1c2c24238_strct(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2a137db_Trait> _1c2c2449c_trt(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c2ac12_Map> _1c2c24711_map(_1c2c1b131_TypeKind*);
inline jule::Ptr<_1c2c2a151_Tuple> _1c2c24975_tup(_1c2c1b131_TypeKind*);
struct _1c2c1b131_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1c2c1ac02_Kind> _field_kind = jule::Trait<_1c2c1ac02_Kind>();
	

	_1c2c1b131_TypeKind(void) = default;

	inline bool operator==(_1c2c1b131_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2c1b131_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2c25228_checked(_1c2c24d2c_TypeSymbol*);
inline void _1c2c25404_remove_kind(_1c2c24d2c_TypeSymbol*);
struct _1c2c24d2c_TypeSymbol {
	jule::Ptr<_204ec8b92_TypeDecl> _field_decl = jule::Ptr<_204ec8b92_TypeDecl>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_kind = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c2c24d2c_TypeSymbol(void) = default;

	inline bool operator==(_1c2c24d2c_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2c24d2c_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c25a53_to_str(_1c2c256e0_Prim*);
inline jule::Bool _1c2c25d61_equals(jule::Ptr<_1c2c256e0_Prim>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Bool _1c2c262c3_is_i8(_1c2c256e0_Prim*);
inline jule::Bool _1c2c26537_is_i16(_1c2c256e0_Prim*);
inline jule::Bool _1c2c2679b_is_i32(_1c2c256e0_Prim*);
inline jule::Bool _1c2c26a10_is_i64(_1c2c256e0_Prim*);
inline jule::Bool _1c2c26c74_is_u8(_1c2c256e0_Prim*);
inline jule::Bool _1c2c26ed8_is_u16(_1c2c256e0_Prim*);
inline jule::Bool _1c2c2724c_is_u32(_1c2c256e0_Prim*);
inline jule::Bool _1c2c274b1_is_u64(_1c2c256e0_Prim*);
inline jule::Bool _1c2c27725_is_f32(_1c2c256e0_Prim*);
inline jule::Bool _1c2c27989_is_f64(_1c2c256e0_Prim*);
inline jule::Bool _1c2c27bed_is_int(_1c2c256e0_Prim*);
inline jule::Bool _1c2c27e62_is_uint(_1c2c256e0_Prim*);
inline jule::Bool _1c2c281c6_is_uintptr(_1c2c256e0_Prim*);
inline jule::Bool _1c2c2843a_is_bool(_1c2c256e0_Prim*);
inline jule::Bool _1c2c2869e_is_str(_1c2c256e0_Prim*);
inline jule::Bool _1c2c28913_is_any(_1c2c256e0_Prim*);
struct _1c2c256e0_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1c2c256e0_Prim(void) = default;

	inline bool operator==(_1c2c256e0_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2c256e0_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c29062_to_str(_1c2c28bee_Sptr*);
inline jule::Bool _1c2c29370_equals(jule::Ptr<_1c2c28bee_Sptr>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c2c28bee_Sptr {
	jule::Ptr<_1c2c1b131_TypeKind> _field_elem = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c2c28bee_Sptr(void) = default;

	inline bool operator==(_1c2c28bee_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2c28bee_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c29ace_to_str(_1c2c2965b_Slc*);
inline jule::Bool _1c2c29ddc_equals(jule::Ptr<_1c2c2965b_Slc>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c2c2965b_Slc {
	jule::Ptr<_1c2c1b131_TypeKind> _field_elem = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c2c2965b_Slc(void) = default;

	inline bool operator==(_1c2c2965b_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2c2965b_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c2a54c_to_str(_1c2c2a151_Tuple*);
inline jule::Bool _1c2c2a85a_equals(jule::Ptr<_1c2c2a151_Tuple>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c2c2a151_Tuple {
	jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>();
	

	_1c2c2a151_Tuple(void) = default;

	inline bool operator==(_1c2c2a151_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1c2c2a151_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c2b075_to_str(_1c2c2ac12_Map*);
inline jule::Bool _1c2c2b383_equals(jule::Ptr<_1c2c2ac12_Map>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c2c2ac12_Map {
	jule::Ptr<_1c2c1b131_TypeKind> _field_key = jule::Ptr<_1c2c1b131_TypeKind>();
	jule::Ptr<_1c2c1b131_TypeKind> _field_val = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c2c2ac12_Map(void) = default;

	inline bool operator==(_1c2c2ac12_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1c2c2ac12_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c2bb69_to_str(_1c2c2b806_Arr*);
inline jule::Bool _1c2c2be77_equals(jule::Ptr<_1c2c2b806_Arr>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c2c2b806_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1c2c1b131_TypeKind> _field_elem = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c2c2b806_Arr(void) = default;

	inline bool operator==(_1c2c2b806_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2c2b806_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c2c5c6_to_str(_1c2c2c263_Ptr*);
inline jule::Bool _1c2c2c8d4_equals(jule::Ptr<_1c2c2c263_Ptr>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Bool _1c2c2cc36_is_unsafe(_1c2c2c263_Ptr*);
struct _1c2c2c263_Ptr {
	jule::Ptr<_1c2c1b131_TypeKind> _field_elem = jule::Ptr<_1c2c1b131_TypeKind>();
	

	_1c2c2c263_Ptr(void) = default;

	inline bool operator==(_1c2c2c263_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2c2c263_Ptr _other) { return !this->operator==(_other); }


};
struct _1c2c2e908_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1c2c2e908_Referencer(void) = default;

	inline bool operator==(_1c2c2e908_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c2c2e908_Referencer _other) { return !this->operator==(_other); }


};
inline void _1c2c30c4a_push_err(_1c2c30585_TypeChecker*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2c30e26_allow_builtin(_1c2c30585_TypeChecker*);
inline void _1c2c31102_disallow_builtin(_1c2c30585_TypeChecker*);
inline jule::Ptr<_1c2c256e0_Prim> _1c2c31410_build_prim(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&);
inline void _1c2c317c8_push_cycle_error(_1c2c30585_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1c2c31b80_check_cross_cycle(_1c2c30585_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1c2c32037_check_illegal_cycles(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1c2c1ac02_Kind> _1c2c323de_from_type_alias(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Ptr<_1c2c1a3e9_TypeAlias>&);
inline jule::Ptr<_1c2a159ec_Enum> _1c2c32796_from_enum(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Ptr<_1c2a159ec_Enum>&);
inline jule::Ptr<_1c2a137db_Trait> _1c2c32b4d_from_trait(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Ptr<_1c2a137db_Trait>&);
inline jule::Bool _1c2c33005_check_struct_ins(_1c2c30585_TypeChecker*, jule::Ptr<_1c1cb6ad4_StructIns>&, jule::Ptr<_205139176_Token>&);
inline void _1c2c3329c_append_used_struct_reference(_1c2c30585_TypeChecker*, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Ptr<_1c1cb6ad4_StructIns> _1c2c33665_build_struct_instance(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Ptr<_1c1cb6ad4_StructIns> _1c2c33a1c_from_struct(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>&, jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Trait<_1c2c1ac02_Kind> _1c2c33dc4_get_def(_1c2c30585_TypeChecker*, jule::Trait<_1c2c3934c_Lookup>, jule::Ptr<_204ec8d7e_IdentTypeDecl>&);
inline jule::Trait<_1c2c1ac02_Kind> _1c2c341d2_build_ident(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8d7e_IdentTypeDecl>);
inline jule::Ptr<_1c2c28bee_Sptr> _1c2c344e0_build_sptr_from_type(_1c2c30585_TypeChecker*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Ptr<_1c2c28bee_Sptr> _1c2c347ed_build_sptr(_1c2c30585_TypeChecker*, jule::Ptr<_204ec9258_SptrTypeDecl>);
inline jule::Ptr<_1c2c2c263_Ptr> _1c2c34b0b_build_ptr_from_type(_1c2c30585_TypeChecker*, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Ptr<_1c2c2c263_Ptr> _1c2c34e19_build_ptr(_1c2c30585_TypeChecker*, jule::Ptr<_204ec981e_PtrTypeDecl>);
inline jule::Ptr<_1c2c2965b_Slc> _1c2c35227_build_slc(_1c2c30585_TypeChecker*, jule::Ptr<_204ec9445_SlcTypeDecl>);
inline jule::Ptr<_1c2c2b806_Arr> _1c2c35535_build_arr(_1c2c30585_TypeChecker*, jule::Ptr<_204ec9a0b_ArrTypeDecl>);
inline jule::Ptr<_1c2c2ac12_Map> _1c2c35843_build_map(_1c2c30585_TypeChecker*, jule::Ptr<_204ec9be8_MapTypeDecl>);
inline jule::Ptr<_1c2c2a151_Tuple> _1c2c35b51_build_tuple(_1c2c30585_TypeChecker*, jule::Ptr<_204ec9632_TupleTypeDecl>);
inline jule::Bool _1c2c35e5e_check_fn_types(_1c2c30585_TypeChecker*, jule::Ptr<_1c1cc9762_FnIns>&);
inline jule::Ptr<_1c1cc9762_FnIns> _1c2c3626c_build_fn(_1c2c30585_TypeChecker*, jule::Ptr<_20515028b_FnDecl>);
inline jule::Trait<_1c2c1ac02_Kind> _1c2c3657a_build_by_namespace(_1c2c30585_TypeChecker*, jule::Ptr<_204ec906b_NamespaceTypeDecl>);
inline jule::Ptr<_1c2c1b131_TypeKind> _1c2c36888_build(_1c2c30585_TypeChecker*, jule::Any&);
inline jule::Ptr<_1c2c1b131_TypeKind> _1c2c36b96_check_decl(_1c2c30585_TypeChecker*, jule::Ptr<_204ec8b92_TypeDecl>&);
inline void _1c2c36e1b_check(_1c2c30585_TypeChecker*, jule::Ptr<_1c2c24d2c_TypeSymbol>&);
struct _1c2c30585_TypeChecker {
	jule::Ptr<_1c2b7eeda_Sema> _field_s = jule::Ptr<_1c2b7eeda_Sema>();
	jule::Trait<_1c2c3934c_Lookup> _field_lookup = jule::Trait<_1c2c3934c_Lookup>();
	jule::Ptr<_1c2c2e908_Referencer> _field_referencer = jule::Ptr<_1c2c2e908_Referencer>();
	jule::Ptr<_205139176_Token> _field_error_token = jule::Ptr<_205139176_Token>();
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_20514e235_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1c2c1a3e9_TypeAlias> _field_owner_alias = jule::Ptr<_1c2c1a3e9_TypeAlias>();
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1c2c30585_TypeChecker(void) = default;

	inline bool operator==(_1c2c30585_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1c2c30585_TypeChecker _other) { return !this->operator==(_other); }


};
struct _204e30423_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_204e30423_CompileInfo(void) = default;

	inline bool operator==(_204e30423_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_204e30423_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _204e6da16_push_err(_204e891a2_DirectiveEval*, jule::Ptr<_205139176_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _204e6decd_split_operans(_204e891a2_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Bool _204e70595_eval_directive_ident(_204e891a2_DirectiveEval*, jule::Str);
inline jule::Bool _204e715eb_eval_directive_part(_204e891a2_DirectiveEval*, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Bool _204e72d6c_eval(_204e891a2_DirectiveEval*);
struct _204e891a2_DirectiveEval {
	jule::Slice<_2046db273_Log> _field_logs = jule::Slice<_2046db273_Log>();
	jule::Ptr<_204ec174a_Directive> _field_d = jule::Ptr<_204ec174a_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_204e891a2_DirectiveEval(void) = default;

	inline bool operator==(_204e891a2_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_204e891a2_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1db25a0c4_JuleImporter> static__1dadaa32e_new(_204e30423_CompileInfo);
inline jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>> _1dadb1203_all_packages(_1db25a0c4_JuleImporter*);
inline void _1dadc0652_set_mod_path(_1db25a0c4_JuleImporter*, jule::Str);
inline jule::Str _1dadc1ba3_get_mod_path(_1db25a0c4_JuleImporter*);
inline jule::Str _1dae13574_mod_by_id(_1db25a0c4_JuleImporter*, jule::I64);
inline jule::Ptr<_1c2b77301_ImportInfo> _1dae19c62_get_import(_1db25a0c4_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_20500541b_Ast>>,jule::Slice<_2046db273_Log>> _1dae25003_import_package(_1db25a0c4_JuleImporter*, jule::Str, jule::Bool);
inline void _1dae2c956_imported(_1db25a0c4_JuleImporter*, jule::Ptr<_1c2b77301_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_2046db273_Log>> _1dae394bd_is_pass_build_directives(_1db25a0c4_JuleImporter*, jule::Ptr<_20500541b_Ast>&);
struct _1db25a0c4_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1db25a0c4_JuleImporter(void) = default;

	inline bool operator==(_1db25a0c4_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1db25a0c4_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1db408a03_OrderedDefines {
	jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _field_structs = jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>();
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _field_globals = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>();
	

	_1db408a03_OrderedDefines(void) = default;

	inline bool operator==(_1db408a03_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1db408a03_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1db258c3d_is_common_ordered_0(jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>&, jule::Ptr<_1c1cb3e55_Struct>);
inline jule::Bool static__1db258c3d_is_common_ordered_1(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>&, jule::Ptr<_1c2b9a4de_Var>);
inline void static__1db259722_order_common_0(jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>&);
inline void static__1db259722_order_common_1(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>&);
inline void static__1db259b62_order_structures(jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>&);
inline void static__1db25d5d3_order_vars(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>&);
struct _1db576e6d_DefineOrderer {
	

	_1db576e6d_DefineOrderer(void) = default;

	inline bool operator==(_1db576e6d_DefineOrderer _other) { return true; }

	inline bool operator!=(_1db576e6d_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _1db448c63_optimize_child(jule::Ptr<_1db43516c_ScopeDeadCode>, jule::Ptr<_1c2b4c1e9_Scope>&);
inline void _1db44c31b_eliminate_followed(_1db43516c_ScopeDeadCode*);
inline void _1db44e9d3_push_goto(jule::Ptr<_1db43516c_ScopeDeadCode>, jule::Ptr<_1c2b6031c_GotoSt>);
inline void _1db44a171_push_label(jule::Ptr<_1db43516c_ScopeDeadCode>, jule::Ptr<_1c2b60130_Label>);
inline void _1db53ba59_optimize_stmt(jule::Ptr<_1db43516c_ScopeDeadCode>, jule::Any);
inline void _1db53c6a3_optimize_stmts(jule::Ptr<_1db43516c_ScopeDeadCode>);
struct _1db43516c_ScopeDeadCode {
	jule::Ptr<_1db43516c_ScopeDeadCode> _field_parent = jule::Ptr<_1db43516c_ScopeDeadCode>();
	jule::Ptr<_1c2b4c1e9_Scope> _field_s = jule::Ptr<_1c2b4c1e9_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2b60130_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c2b60130_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2b6031c_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c2b6031c_GotoSt>>>();
	

	_1db43516c_ScopeDeadCode(void) = default;

	inline bool operator==(_1db43516c_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos;
	}

	inline bool operator!=(_1db43516c_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__1db9d95de_reset(void);
inline void static__1db9debdd_print(jule::Str, jule::Str);
struct _1dadb30a1_AnsiEscape {
	

	_1dadb30a1_AnsiEscape(void) = default;

	inline bool operator==(_1dadb30a1_AnsiEscape _other) { return true; }

	inline bool operator!=(_1dadb30a1_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1dad96e0e_log_flat(_2046db273_Log&);
inline void static__1dada3190_log_error(_2046db273_Log&);
inline void static__1db274c59_log(_2046db273_Log&);
inline void static__1db28860d_print_logs(jule::Slice<_2046db273_Log>&);
struct _1db26c37d_Logger {
	

	_1db26c37d_Logger(void) = default;

	inline bool operator==(_1db26c37d_Logger _other) { return true; }

	inline bool operator!=(_1db26c37d_Logger _other) { return !this->operator==(_other); }


};
struct _1c347a483_UnsafeBinopExprModel {
	jule::Ptr<_1c1cb8c07_BinopExprModel> _field_node = jule::Ptr<_1c1cb8c07_BinopExprModel>();
	

	_1c347a483_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1c347a483_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1c347a483_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c34873b3_UnsafeIndexingExprModel {
	jule::Ptr<_1c1cbb325_IndexingExprModel> _field_node = jule::Ptr<_1c1cbb325_IndexingExprModel>();
	

	_1c34873b3_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1c34873b3_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1c34873b3_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c34875a0_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1c1cbada2_SliceExprModel> _field_elems = jule::Ptr<_1c1cbada2_SliceExprModel>();
	

	_1c34875a0_PushToSliceExprModel(void) = default;

	inline bool operator==(_1c34875a0_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1c34875a0_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c34879ac_MutSlicingExprModel {
	jule::Ptr<_205139176_Token> _field_token = jule::Ptr<_205139176_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1c34879ac_MutSlicingExprModel(void) = default;

	inline bool operator==(_1c34879ac_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1c34879ac_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c3487d86_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1c3487d86_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1c3487d86_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c3487d86_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c3489261_ScopeOptimizer> static__1c3489739_new(jule::Ptr<_1c2b4c1e9_Scope>);
inline void _1c34899ae_set_current_stmt(_1c3489261_ScopeOptimizer*, jule::Any);
inline void _1c3489c34_optimize_data(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2be1ca5_Data>);
inline void _1c3489ea9_optimize_var(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b9a4de_Var>);
inline void _1c348a22e_optimize_conditional(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2aed860_Conditional>);
inline void _1c348a619_build_default_constat_true_case(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b60edd_Case>, jule::I64&, jule::Ptr<_1c2b60ac0_Match>&);
inline void _1c348a8a0_optimize_match(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b60ac0_Match>);
inline void _1c348ab25_optimize_range_iter(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b3c519_RangeIter>);
inline void _1c348ad9a_optimize_while_iter(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b0e673_WhileIter>);
inline jule::Bool _1c348b1a8_substr(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b606e6_Assign>);
inline jule::Bool _1c348b4b6_str_insert(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b606e6_Assign>);
inline jule::Bool _1c348b7c4_str_assign(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b606e6_Assign>);
inline void _1c348ba49_optimize_assign(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b606e6_Assign>);
inline void _1c348bcbe_optimize_multi_assign(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b608d3_MultiAssign>);
inline void _1c348c044_optimize_ret(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b613b7_RetSt>);
inline void _1c348c2b9_optimize_stmt(_1c3489261_ScopeOptimizer*, jule::Any);
inline void _1c348c53e_optimize_child(_1c3489261_ScopeOptimizer*, jule::Ptr<_1c2b4c1e9_Scope>);
inline void _1c348c71a_optimize(_1c3489261_ScopeOptimizer*);
struct _1c3489261_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1c2b4c1e9_Scope> _field_scope = jule::Ptr<_1c2b4c1e9_Scope>();
	

	_1c3489261_ScopeOptimizer(void) = default;

	inline bool operator==(_1c3489261_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c3489261_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1c3490344_optimize(jule::Any&);
inline jule::Bool _1c3490652_str_cond(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cb8c07_BinopExprModel>);
inline void _1c34908c7_binary(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cb8c07_BinopExprModel>);
inline void _1c3490b4c_unary(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cb90ae_UnaryExprModel>);
inline void _1c3490dc2_structure_lit(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cb9862_StructLitExprModel>);
inline void _1c3491147_alloc_structure(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cb9b70_AllocStructLitExprModel>);
inline void _1c34913bc_casting(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cba1c0_CastingExprModel>);
inline void _1c3491642_args(_1c348e84e_ExprOptimizer*, jule::Slice<jule::Any>);
inline void _1c34918b7_scope(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c2b4c1e9_Scope>&);
inline void _1c3491b3c_func_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cba9ea_FnCallExprModel>);
inline void _1c3491db2_slice(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbada2_SliceExprModel>);
inline void _1c3492137_array(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbdb52_ArrayExprModel>);
inline void _1c34923ac_indexing(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbb325_IndexingExprModel>);
inline void _1c3492632_anon_func(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbb6cc_AnonFnExprModel>);
inline void _1c34928a7_map(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbc007_MapExprModel>);
inline void _1c3492b2c_slicing(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbc546_SlicingExprModel>);
inline void _1c3492da2_trait_sub(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>);
inline void _1c3493127_structure_sub(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>);
inline void _1c349339c_common_sub(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>);
inline void _1c3493622_tuple(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbe79b_TupleExprModel>);
inline void _1c3493897_new_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel>);
inline void _1c3493b1c_out_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>);
inline void _1c3493d92_outln_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>);
inline void _1c3494117_panic_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>);
inline void _1c349438c_assert_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>);
inline void _1c3494612_error_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>);
inline void _1c3494887_make_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel>);
inline void _1c3494b0c_append_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>);
inline void _1c3494d82_clone_call(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>);
inline void _1c3495107_sizeof(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc2925_SizeofExprModel>);
inline void _1c349537c_alignof(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc2b12_AlignofExprModel>);
inline void _1c3495602_integrated_to_str(_1c348e84e_ExprOptimizer*, jule::Ptr<_1c1cc3195_IntegratedToStrExprModel>);
inline void _1c34957cd_do(_1c348e84e_ExprOptimizer*);
struct _1c348e84e_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1c348e84e_ExprOptimizer(void) = default;

	inline bool operator==(_1c348e84e_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c348e84e_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c3496713_Optimizer> static__1c3496b53_new(jule::Ptr<_1db2583d0_IR>&);
inline void _1c3496dc8_optimize_global(_1c3496713_Optimizer*, jule::Ptr<_1c2b9a4de_Var>&);
inline void _1c349714d_optimize_function(_1c3496713_Optimizer*, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c34973c3_optimize_struct(_1c3496713_Optimizer*, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c3497648_optimize_globals(_1c3496713_Optimizer*, jule::Ptr<_1c2b79eb3_Package>&);
inline void _1c34978bd_optimize_functions(_1c3496713_Optimizer*, jule::Ptr<_1c2b79eb3_Package>&);
inline void _1c3497b43_optimize_structs(_1c3496713_Optimizer*, jule::Ptr<_1c2b79eb3_Package>&);
inline void _1c3497db8_optimize_package(_1c3496713_Optimizer*, jule::Ptr<_1c2b79eb3_Package>&);
inline void _1c3498094_optimize(_1c3496713_Optimizer*);
struct _1c3496713_Optimizer {
	jule::Ptr<_1db2583d0_IR> _field_ir = jule::Ptr<_1db2583d0_IR>();
	

	_1c3496713_Optimizer(void) = default;

	inline bool operator==(_1c3496713_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c3496713_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _1c3512c8a_unix(_1c35128a0_AbsTime*);
struct _1c35128a0_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1c35128a0_AbsTime(void) = default;

	inline bool operator==(_1c35128a0_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1c35128a0_AbsTime _other) { return !this->operator==(_other); }


};
inline _1c3513076_Time static__1c351341c_unix(jule::U64);
inline _1c3513076_Time static__1c351361a_now(void);
inline jule::U64 _1c3513a6b_unix(_1c3513076_Time*);
inline jule::U64 _1c3513cd0_day(_1c3513076_Time*);
inline jule::U64 _1c3514044_month(_1c3513076_Time*);
inline jule::U64 _1c35142a8_year(_1c3513076_Time*);
inline jule::U64 _1c351451c_second(_1c3513076_Time*);
inline jule::U64 _1c3514781_minute(_1c3513076_Time*);
inline jule::U64 _1c35149e5_hour(_1c3513076_Time*);
inline _1c35128a0_AbsTime _1c3514c59_abs(_1c3513076_Time*);
struct _1c3513076_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1c3513076_Time(void) = default;

	inline bool operator==(_1c3513076_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1c3513076_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__1c3515474_nanoseconds(jule::I64);
inline jule::I64 static__1c351571b_microseconds(jule::I64);
inline jule::I64 static__1c35159b3_milliseconds(jule::I64);
inline jule::I64 static__1c3515c5a_seconds(jule::I64);
inline jule::I64 static__1c3516002_minutes(jule::I64);
inline jule::I64 static__1c3516299_hours(jule::I64);
struct _1c3515045_Duration {
	

	_1c3515045_Duration(void) = default;

	inline bool operator==(_1c3515045_Duration _other) { return true; }

	inline bool operator!=(_1c3515045_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c338414a_ScopeCoder> static__1c338abce_new(jule::Ptr<_1c34d0d35_ObjectCoder>&);
inline void _1c33a3cc4_range_index_iter(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b3c519_RangeIter>&);
inline void _1c33a6469_range_hashmap_iter(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b3c519_RangeIter>&);
inline void _1c33a8aba_if_case(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b53ae6_If>);
inline void _1c33be4d7_conditional(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2aed860_Conditional>);
inline void _1c34215a0_inf_iter(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b0e486_InfIter>);
inline void _1c343a674_while_iter(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b0e673_WhileIter>);
inline void _1c3446d01_range_iter(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b3c519_RangeIter>);
inline void _1c334b332_cont(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b3c706_ContSt>);
inline void _1c3384931_label(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b60130_Label>);
inline void _1c33b6c3d_goto_st(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b6031c_GotoSt>);
inline void _1c3435e33_postfix(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b60509_Postfix>);
inline void _1c34437ae_assign(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b606e6_Assign>);
inline void _1c34476c5_multi_assign(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b608d3_MultiAssign>);
inline jule::Fn<void(void)> _1c3448165_match_expr(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b60ac0_Match>);
inline void _1c344a6c8_case(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b60ac0_Match>, jule::Ptr<_1c2b60edd_Case>);
inline void _1c344b0ad_match_st(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b60ac0_Match>);
inline void _1c344b993_fall_st(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b611ca_FallSt>);
inline void _1c344c378_break_st(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b5ee43_BreakSt>);
inline void _1c344cc5d_ret_with_vars(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b613b7_RetSt>);
inline void _1c344ed5e_ret_tuple(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b613b7_RetSt>);
inline void _1c3450b84_ret_with_exprs(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b613b7_RetSt>);
inline void _1c3451536_ret_st(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b613b7_RetSt>);
inline void _1c3451dd8_ret_with_defaults(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2c1b131_TypeKind>);
inline void _1c3452a10_var(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b9a4de_Var>);
inline void _1c334ae9c_st(jule::Ptr<_1c338414a_ScopeCoder>, jule::Any);
inline void _1c3440d2d_scope_stmts(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b4c1e9_Scope>&);
inline void _1c338a5b3_scope(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c2b4c1e9_Scope>);
inline void _1c347c188_func_scope(jule::Ptr<_1c338414a_ScopeCoder>, jule::Ptr<_1c1cc9762_FnIns>);
struct _1c338414a_ScopeCoder {
	jule::Ptr<_1c34d0d35_ObjectCoder> _field_oc = jule::Ptr<_1c34d0d35_ObjectCoder>();
	

	_1c338414a_ScopeCoder(void) = default;

	inline bool operator==(_1c338414a_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c338414a_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c334a9a2_ExprCoder> static__1c33c8029_new(jule::Ptr<_1c34d0d35_ObjectCoder>&);
inline void _1c341cc61_string(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2abb9a4_Const>&);
inline void _1c341cd93_boolean(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2abb9a4_Const>&);
inline void _1c3479b25_nil_lit(jule::Ptr<_1c334a9a2_ExprCoder>);
inline jule::Bool _1c3479c57_ftoa_special_cases(jule::Ptr<_1c334a9a2_ExprCoder>, jule::F64&);
inline void _1c3479d89_float32(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2abb9a4_Const>&);
inline void _1c341d15c_float64(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2abb9a4_Const>&);
inline void _1c341d28e_constant(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2abb9a4_Const>, jule::Bool);
inline void _1c341d3c1_div_by_zero_binary(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_205139176_Token>&, jule::Ptr<_1c1cb8740_OperandExprModel>&, jule::Ptr<_1c1cb8740_OperandExprModel>&);
inline void _1c3498281_unsafe_binary(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb8c07_BinopExprModel>);
inline void _1c34983b3_binary(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb8c07_BinopExprModel>);
inline void _1c34984e5_var(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2b9a4de_Var>);
inline void _1c3498627_structure(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb3e55_Struct>);
inline void _1c3498759_structure_ins(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb6ad4_StructIns>);
inline void _1c349888b_unary(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb90ae_UnaryExprModel>);
inline void _1c34989bd_structure_lit(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb9862_StructLitExprModel>);
inline void _1c3498b00_alloc_structure(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cb9b70_AllocStructLitExprModel>);
inline void _1c3498c32_casting(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cba1c0_CastingExprModel>);
inline void _1c3498d64_args(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Slice<jule::Any>);
inline void _1c3498e96_model_for_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Any);
inline void _1c34990c8_push_call_inf(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cba9ea_FnCallExprModel>&);
inline jule::Bool _1c349920a_is_wrapped(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cba9ea_FnCallExprModel>&);
inline void _1c349933c_pure_func_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cba9ea_FnCallExprModel>&);
inline void _1c349946e_func_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cba9ea_FnCallExprModel>);
inline void _1c34995a1_slice(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbada2_SliceExprModel>);
inline void _1c34996d3_indexing(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbb325_IndexingExprModel>);
inline void _1c3499815_unsafe_indexing(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c34873b3_UnsafeIndexingExprModel>);
inline void _1c3499947_anon_func(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbb6cc_AnonFnExprModel>);
inline void _1c3499a79_map(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbc007_MapExprModel>);
inline void _1c3499bab_slicing(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbc546_SlicingExprModel>);
inline void _1c3499cdd_trait_sub(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>);
inline void _1c3499e20_structure_sub(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>);
inline void _1c349a052_common_ident(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbde3d_CommonIdentExprModel>);
inline void _1c349a184_common_sub(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>);
inline void _1c349a2b6_array(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbdb52_ArrayExprModel>);
inline void _1c349a3e8_func_ins_common(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc9762_FnIns>);
inline void _1c349a52a_func_ins(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc9762_FnIns>);
inline void _1c349a65c_tuple(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbe79b_TupleExprModel>);
inline void _1c349a78e_new_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel>);
inline void _1c349a8c1_out_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>);
inline void _1c349aa03_outln_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>);
inline void _1c349ab35_panic_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>);
inline void _1c349ac67_assert_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>);
inline void _1c349ad99_error_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>);
inline void _1c349aecb_copy_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc1d86_BuiltinCopyCallExprModel>);
inline void _1c349b10d_make_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel>);
inline void _1c349b240_push_to_slice(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c34875a0_PushToSliceExprModel>);
inline void _1c349b372_append_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>);
inline void _1c349b4a4_clone_call(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>);
inline void _1c349b5d6_sizeof(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc2925_SizeofExprModel>);
inline void _1c349b718_alignof(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc2b12_AlignofExprModel>);
inline jule::Str _1c349b84a_rune_lit(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc2d87_RuneExprModel>);
inline void _1c349b98d_structure_static(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cbd789_StructStaticIdentExprModel>);
inline void _1c349bc13_integrated_to_str(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc3195_IntegratedToStrExprModel>);
inline void _1c349be88_backend_emit(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc355d_BackendEmitExprModel>);
inline void _1c349c20d_free(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c1cc3849_FreeExprModel>);
inline void _1c349c483_mut_slicing(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c34879ac_MutSlicingExprModel>);
inline void _1c349c708_str_insert_begin(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c3487d86_StrInsertBeginExprModel>);
inline void _1c349c97d_model(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Any);
inline void _1c349cc03_expr(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Any);
inline void _1c349ce78_val(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2be2d2d_Value>);
inline void _1c349d1ed_init_expr(jule::Ptr<_1c334a9a2_ExprCoder>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c334a9a2_ExprCoder {
	jule::Ptr<_1c34d0d35_ObjectCoder> _field_oc = jule::Ptr<_1c34d0d35_ObjectCoder>();
	

	_1c334a9a2_ExprCoder(void) = default;

	inline bool operator==(_1c334a9a2_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c334a9a2_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c34a0783_clone_func_decl(jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Str static__1c34a0a2a_clone_func_def(jule::Ptr<_1c1cb3e55_Struct>&);
struct _1c34a0431_DeriveCoder {
	

	_1c34a0431_DeriveCoder(void) = default;

	inline bool operator==(_1c34a0431_DeriveCoder _other) { return true; }

	inline bool operator!=(_1c34a0431_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c34a1a09_TestCoder> static__1c34a1e7c_new(jule::Ptr<_1c34d0d35_ObjectCoder>&);
inline jule::Ptr<_1c2b77301_ImportInfo> _1c34a21e1_find_testing_package(jule::Ptr<_1c34a1a09_TestCoder>);
inline void _1c34a2466_append_test(jule::Ptr<_1c34a1a09_TestCoder>, jule::Ptr<_1c1cc9762_FnIns>);
inline void _1c34a26db_append_package_tests(jule::Ptr<_1c34a1a09_TestCoder>, jule::Ptr<_1c2b79eb3_Package>&);
inline jule::Bool _1c34a2950_ready_testing_package(jule::Ptr<_1c34a1a09_TestCoder>);
inline void _1c34a2b2b_call_tm_reset(jule::Ptr<_1c34a1a09_TestCoder>);
inline void _1c34a2d07_call_tm_failed(jule::Ptr<_1c34a1a09_TestCoder>);
inline void _1c34a2ed3_call_tm_skipped(jule::Ptr<_1c34a1a09_TestCoder>);
inline void _1c34a31ae_serialize(jule::Ptr<_1c34a1a09_TestCoder>);
struct _1c34a1a09_TestCoder {
	jule::Ptr<_1c1cb6ad4_StructIns> _field_t = jule::Ptr<_1c1cb6ad4_StructIns>();
	jule::Ptr<_1c1cc65b6_Fn> _field_tm_reset = jule::Ptr<_1c1cc65b6_Fn>();
	jule::Ptr<_1c1cc65b6_Fn> _field_tm_failed = jule::Ptr<_1c1cc65b6_Fn>();
	jule::Ptr<_1c1cc65b6_Fn> _field_tm_skipped = jule::Ptr<_1c1cc65b6_Fn>();
	jule::Ptr<_1c34d0d35_ObjectCoder> _field_oc = jule::Ptr<_1c34d0d35_ObjectCoder>();
	

	_1c34a1a09_TestCoder(void) = default;

	inline bool operator==(_1c34a1a09_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c34a1a09_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c34a4633_to_ident(jule::Str);
inline jule::Str static__1c34a48ca_addr(jule::U64);
inline jule::Str static__1c34a4c1b_to_out(jule::Str, jule::U64);
inline jule::Str static__1c34a5106_to_local(jule::I64, jule::I64, jule::Str);
inline jule::Str static__1c34a539d_func(jule::Ptr<_1c1cc65b6_Fn>&);
inline jule::Str static__1c34a5645_func_ins(jule::Ptr<_1c1cc9762_FnIns>&);
inline jule::Str static__1c34a58dc_trait_decl(jule::Ptr<_1c2a137db_Trait>);
inline jule::Str static__1c34a5b84_param(jule::Ptr<_1c1cc4c79_Param>&);
inline jule::Str static__1c34a5e2b_structure(jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Str static__1c34a61c3_structure_ins(jule::Ptr<_1c1cb6ad4_StructIns>&);
inline jule::Str static__1c34a646a_field(jule::Ptr<_1c1c07382_Field>&);
inline jule::Str static__1c34a6712_var(jule::Ptr<_1c2b9a4de_Var>);
inline jule::Str static__1c34a69a9_iter_begin(jule::U64);
inline jule::Str static__1c34a6c51_iter_end(jule::U64);
inline jule::Str static__1c34a6ee8_iter_next(jule::U64);
inline jule::Str static__1c34a7290_label(jule::Str);
inline jule::Str static__1c34a7537_match_end(jule::U64);
inline jule::Str static__1c34a77ce_case_begin(jule::U64);
struct _1c34a41b0_IdentCoder {
	

	_1c34a41b0_IdentCoder(void) = default;

	inline bool operator==(_1c34a41b0_IdentCoder _other) { return true; }

	inline bool operator!=(_1c34a41b0_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1c34dc2e7_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1c34dc2e7_SerializationInfo(void) = default;

	inline bool operator==(_1c34dc2e7_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1c34dc2e7_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1c34d0b48_TraitHash {
	jule::Ptr<_1c2a137db_Trait> _field_t = jule::Ptr<_1c2a137db_Trait>();
	jule::Ptr<_1c1cb6ad4_StructIns> _field_s = jule::Ptr<_1c1cb6ad4_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1c34d0b48_TraitHash(void) = default;

	inline bool operator==(_1c34d0b48_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c34d0b48_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1c351d614_to_str(_1c351d328_CustomType*);
inline jule::Bool _1c351d922_equals(jule::Ptr<_1c351d328_CustomType>, jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c351d328_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1c351d328_CustomType(void) = default;

	inline bool operator==(_1c351d328_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c351d328_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c351e15e_to_type(jule::Str);
inline jule::Str static__1c351e406_prim(jule::Ptr<_1c2c256e0_Prim>);
inline jule::Str static__1c351e69d_tuple(jule::Ptr<_1c2c2a151_Tuple>);
inline jule::Str static__1c351e945_as_sptr(jule::Str);
inline jule::Str static__1c351ebdc_as_ptr(jule::Str);
inline jule::Str static__1c351ee84_sptr(jule::Ptr<_1c2c28bee_Sptr>);
inline jule::Str static__1c352022b_ptr(jule::Ptr<_1c2c2c263_Ptr>);
inline jule::Str static__1c35204c3_enum_decl(jule::Ptr<_1c2a159ec_Enum>);
inline jule::Str static__1c352076a_as_slice(jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Str static__1c3520a12_slice(jule::Ptr<_1c2c2965b_Slc>);
inline jule::Str static__1c3520ca9_map(jule::Ptr<_1c2c2ac12_Map>);
inline jule::Str static__1c3521051_trait_ident(jule::Str);
inline jule::Str static__1c35212e8_trait_decl(jule::Ptr<_1c2a137db_Trait>);
inline jule::Str static__1c3521590_structure(jule::Ptr<_1c1cb3e55_Struct>);
inline jule::Str static__1c3521837_structure_ins(jule::Ptr<_1c1cb6ad4_StructIns>);
inline jule::Str static__1c3521ace_array(jule::Ptr<_1c2c2b806_Arr>);
inline jule::Str static__1c3521d76_param(jule::Ptr<_1c1cc4c79_Param>&);
inline jule::Str static__1c352211d_param_ins(jule::Ptr<_1c1cc88c6_ParamIns>&);
inline jule::Str static__1c35223b5_func_result(jule::Ptr<_1c1cc65b6_Fn>&);
inline jule::Str static__1c352265c_func_ins_result(jule::Ptr<_1c1cc9762_FnIns>&);
inline jule::Str static__1c3522904_anon_func(jule::Ptr<_1c1cc9762_FnIns>);
inline jule::Str static__1c3522b9b_func(jule::Ptr<_1c1cc9762_FnIns>);
inline jule::Str static__1c3522e43_kind(jule::Ptr<_1c2c1b131_TypeKind>);
struct _1c351db42_TypeCoder {
	

	_1c351db42_TypeCoder(void) = default;

	inline bool operator==(_1c351db42_TypeCoder _other) { return true; }

	inline bool operator!=(_1c351db42_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1c5ba004b_name(_1c35531d7_Flag_0*);
inline jule::Str _1c5ba017d_what(_1c35531d7_Flag_0*);
inline void _1c5ba02b0_reset(_1c35531d7_Flag_0*);
inline jule::I32 _1c5ba03e2_short(_1c35531d7_Flag_0*);
struct _1c35531d7_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1c35531d7_Flag_0(void) = default;

	inline bool operator==(_1c35531d7_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1c35531d7_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _1c5ba301b_name(_1c35531d7_Flag_1*);
inline jule::Str _1c5ba2c74_what(_1c35531d7_Flag_1*);
inline void _1c5ba1844_reset(_1c35531d7_Flag_1*);
inline jule::I32 _1c5ba3170_short(_1c35531d7_Flag_1*);
struct _1c35531d7_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1c35531d7_Flag_1(void) = default;

	inline bool operator==(_1c35531d7_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1c35531d7_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _1c5ba6140_name(_1c35531d7_Flag_2*);
inline jule::Str _1c5ba5d98_what(_1c35531d7_Flag_2*);
inline void _1c5ba4968_reset(_1c35531d7_Flag_2*);
inline jule::I32 _1c5ba6294_short(_1c35531d7_Flag_2*);
struct _1c35531d7_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1c35531d7_Flag_2(void) = default;

	inline bool operator==(_1c35531d7_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1c35531d7_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _1c5ba92a8_name(_1c35531d7_Flag_3*);
inline jule::Str _1c5ba9011_what(_1c35531d7_Flag_3*);
inline void _1c5ba7ad1_reset(_1c35531d7_Flag_3*);
inline jule::I32 _1c5ba940c_short(_1c35531d7_Flag_3*);
struct _1c35531d7_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1c35531d7_Flag_3(void) = default;

	inline bool operator==(_1c35531d7_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1c35531d7_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _1c5bac3cc_name(_1c35531d7_Flag_4*);
inline jule::Str _1c5bac135_what(_1c35531d7_Flag_4*);
inline void _1c5baac05_reset(_1c35531d7_Flag_4*);
inline jule::I32 _1c5bac531_short(_1c35531d7_Flag_4*);
struct _1c35531d7_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1c35531d7_Flag_4(void) = default;

	inline bool operator==(_1c35531d7_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1c35531d7_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c355444c_FlagSet> static__1c3554738_new(void);
inline jule::Trait<_1c2d421ad_CommonFlag> _1c3554c00_find_flag(_1c355444c_FlagSet*, jule::Str);
inline jule::Trait<_1c2d421ad_CommonFlag> _1c355500d_find_flag_short(_1c355444c_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1c2d421ad_CommonFlag>> _1c3555272_flags(_1c355444c_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c3555580_parse(_1c355444c_FlagSet*, jule::Slice<jule::Str>);
inline void _1c355575b_reset(_1c355444c_FlagSet*);
inline jule::Ptr<_1c35531d7_Flag_4> _1c3555bac_add_flag_common_0(_1c355444c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1c35531d7_Flag_3> _1c3555bac_add_flag_common_1(_1c355444c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1c3556619_add_var_0(_1c355444c_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1c3556619_add_var_1(_1c355444c_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1c355444c_FlagSet {
	jule::Slice<jule::Trait<_1c2d421ad_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1c2d421ad_CommonFlag>>();
	

	_1c355444c_FlagSet(void) = default;

	inline bool operator==(_1c355444c_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1c355444c_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Str _1c1cb6e8b_to_str(_1c1cb6ad4_StructIns*);
inline jule::Bool _1c1cb7299_equals(jule::Ptr<_1c1cb6ad4_StructIns>, jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Bool _1c1cb76b7_same(_1c1cb6ad4_StructIns*, jule::Ptr<_1c1cb6ad4_StructIns>);
inline jule::Ptr<_1c1cc65b6_Fn> _1c1cb7a6e_find_method(_1c1cb6ad4_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb6276_FieldIns> _1c1cb7d7c_find_field(_1c1cb6ad4_StructIns*, jule::Str);
struct _1c1cb6ad4_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1c1cb3e55_Struct> _field_decl = jule::Ptr<_1c1cb3e55_Struct>();
	jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>();
	jule::Slice<jule::Ptr<_1c1cb6276_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1c1cb6276_FieldIns>>();
	jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _field_methods = jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1c1ccc798_ReferenceStack> _field_references = jule::Ptr<_1c1ccc798_ReferenceStack>();
	_1c1cb3141_Operators _field_operators = _1c1cb3141_Operators();
	

	_1c1cb6ad4_StructIns(void) = default;

	inline bool operator==(_1c1cb6ad4_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1c1cb6ad4_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c34d0d35_ObjectCoder> static__1c34d9c1d_new(jule::Ptr<_1db2583d0_IR>&, _1c34dc2e7_SerializationInfo);
inline void _1c34da4b0_write(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Str);
inline void _1c34dab97_add_indent(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c34db3b2_done_indent(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c34dbacc_indent(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline jule::I64 _1c34ec0c6_find_type_offset(_1c34d0d35_ObjectCoder*, jule::Ptr<_1c2a137db_Trait>, jule::Ptr<_1c2c1b131_TypeKind>);
inline void _1c34dce52_loc_info(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_205139176_Token>&);
inline void _1c34dd10b_head(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c34d2ae5_links(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c34ed89c_prepare_structures(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c3517ce5_iter_packages(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>);
inline void _1c3517e27_build_trait_map(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c3518059_trait_decls(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351818b_structure_plain_decl(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c35182bd_structure_plain_decls(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c3518400_field_decl(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6276_FieldIns>&);
inline void _1c3518532_structure_destructor(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c3518664_structure_derive_defs_decls(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c3518796_structure_operator_eq(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Str&, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c35188c8_structure_operator_not_eq(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Str&, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c3518a0a_structure_operator(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Str&, jule::Ptr<_1c1cc9762_FnIns>&, jule::Str);
inline void _1c3518b3c_structure_operators(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c3518c6e_structure_ins_decl(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c3518da1_structure_decl(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c3518ed3_structure_decls(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c3519115_params_decls(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>&);
inline void _1c3519247_func_head(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cc9762_FnIns>&, jule::Bool);
inline void _1c3519379_func_decl(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cc65b6_Fn>&, jule::Bool);
inline void _1c35194ab_func_decls(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c35195dd_trait_data_types(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c3519720_param_ins(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cc88c6_ParamIns>&);
inline void _1c3519852_params_ins(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>&);
inline void _1c3519984_var_init_expr(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c2b9a4de_Var>&, jule::Fn<void(void)>);
inline void _1c3519ab6_var(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c2b9a4de_Var>);
inline void _1c3519be8_func(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cc65b6_Fn>&);
inline void _1c3519d2a_trait_wrappers(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c3519e5c_trait_datas(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351a08e_globals(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351a1c1_decls(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351a303_structure_methods(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c351a479_structure_derive_defs(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c351a6cc_structure_ostream(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c351a952_structure_ins(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb6ad4_StructIns>&);
inline void _1c351abc7_structure(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c1cb3e55_Struct>&);
inline void _1c351ada3_structures(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351b07e_funcs(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351b304_push_init(jule::Ptr<_1c34d0d35_ObjectCoder>, jule::Ptr<_1c2b79eb3_Package>&);
inline void _1c351b4d0_init_caller(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351b6ab_end(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351b887_serialize_head(jule::Ptr<_1c34d0d35_ObjectCoder>);
inline void _1c351ba63_serialize(jule::Ptr<_1c34d0d35_ObjectCoder>);
struct _1c34d0d35_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1db2583d0_IR> _field_ir = jule::Ptr<_1db2583d0_IR>();
	_1c34dc2e7_SerializationInfo _field_info = _1c34dc2e7_SerializationInfo();
	jule::Slice<jule::Ptr<_1c34d0b48_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1c34d0b48_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1c334a9a2_ExprCoder> _field_ec = jule::Ptr<_1c334a9a2_ExprCoder>();
	jule::Ptr<_1c338414a_ScopeCoder> _field_sc = jule::Ptr<_1c338414a_ScopeCoder>();
	

	_1c34d0d35_ObjectCoder(void) = default;

	inline bool operator==(_1c34d0d35_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1c34d0d35_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1db2583d0_IR>,jule::Slice<_2046db273_Log>> static__1dae4dbb9_build(jule::Str, jule::I64);
inline void _1dae5530d_append_structs(_1db2583d0_IR*, jule::Ptr<_1c2b79eb3_Package>&, jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>&);
inline jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _1dae576d9_get_all_structures(_1db2583d0_IR*);
inline void _1dae5ba1d_append_globals(_1db2583d0_IR*, jule::Ptr<_1c2b79eb3_Package>&, jule::Slice<jule::Ptr<_1c2b9a4de_Var>>&);
inline jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _1db2332ab_get_all_globals(_1db2583d0_IR*);
inline void _1db2534da_order(_1db2583d0_IR*);
struct _1db2583d0_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1c2b79eb3_Package> _field_main = jule::Ptr<_1c2b79eb3_Package>();
	jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>>();
	_1db408a03_OrderedDefines _field_ordered = _1db408a03_OrderedDefines();
	

	_1db2583d0_IR(void) = default;

	inline bool operator==(_1db2583d0_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1db2583d0_IR _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1c35571a8_parse_integer_0(_1c3556b58_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1c35571a8_parse_integer_1(_1c3556b58_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1c355741c_get_data(_1c3556b58_ArgParser*);
inline jule::VoidExceptional _1c3557692_process_flag(_1c3556b58_ArgParser*, jule::Trait<_1c2d421ad_CommonFlag>&);
inline jule::VoidExceptional _1c3557917_single_dash(_1c3556b58_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1c3557b8c_double_dash(_1c3556b58_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1c3557d68_try_arg(_1c3556b58_ArgParser*);
inline jule::VoidExceptional _1c3558044_parse(_1c3556b58_ArgParser*);
struct _1c3556b58_ArgParser {
	_1c355444c_FlagSet _field_set = _1c355444c_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1c3556b58_ArgParser(void) = default;

	inline bool operator==(_1c3556b58_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c3556b58_ArgParser _other) { return !this->operator==(_other); }


};
inline void _2359c8ad4_push_opt_level(jule::I64);
inline jule::I32 _2368122ce_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _236812576_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _236812b09_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _236812e4a_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _236800003_utf16_from_str(jule::Str);
inline jule::Str _2367ec088_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _236801c80_u16_ptr_to_str(jule::U16*);
inline jule::I64 _235b95ba2_get_last_errno(void);
inline jule::U64 _236813a1c_get_std_handle(jule::U64);
inline jule::I64 _236814105_wstat(jule::U16*, struct stat*);
inline jule::I64 _2368144e0__wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _2368146dd_get_last_error(void);
inline jule::U32 _236814a2e_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _23681506d_delete_file(jule::U16*);
inline jule::Bool _236815315_create_directory(jule::U16*);
inline jule::Bool _2368155ac_remove_directory(jule::U16*);
inline _WDIR* _236815854__wopendir(jule::U16*);
inline struct _wdirent* _236815aeb__wreaddir(_WDIR*);
inline jule::I64 _236815d93__wclosedir(_WDIR*);
inline jule::U32 _236816569_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _2368168aa_get_console_mode(jule::U64, jule::I64&);
inline jule::Bool _236816beb_set_console_mode(jule::U64, jule::I64);
inline jule::Bool _236817229_write_console(jule::U64, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _236817757_read_console(jule::U64, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _236819a89_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _236819e74_read(jule::I64, void*, jule::U64);
inline jule::I64 _23681a2a4_close(jule::I64);
inline jule::I64 _23681a68e_write(jule::I64, void*, jule::U64);
inline void _23681a89d_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _2369b30b7_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _2369b364a_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _2369b3b89_rune_len(jule::I32);
inline jule::I64 _2369b4063_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2369b43a4_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _2369b46e5_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2369b4c34_rune_count_str(jule::Str);
inline jule::Bool _2369b4ecb_rune_start(jule::U8);
inline jule::I64 _236a66533_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _236a673d0_args(void);
inline jule::Exceptional<jule::Str> _236a67820_working_dir(void);
inline jule::Exceptional<jule::Str> _236a6825a___getwd(void);
inline jule::Slice<jule::U8> _236aec8e9_stobs(jule::Str&);
inline jule::Bool _204c29739_is_letter(jule::I32);
inline jule::Bool _204c63ed2_is16(jule::Slice<_204c62398_Range16>, jule::U16);
inline jule::Bool _204c64323_is32(jule::Slice<_204c62860_Range32>, jule::U32);
inline jule::Bool _204c64a3d_is_excluding_latin(jule::Ptr<_204c62cd3_RangeTable>, jule::I32);
inline jule::Str _204c21b2c_repeat(jule::Str, jule::I64);
inline jule::Bool _204c1405e__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _204c1a131_has_prefix(jule::Str, jule::Str);
inline jule::Bool _204c03757__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _204c03cc9_has_suffix(jule::Str, jule::Str);
inline jule::I64 _204c04307_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20498c1b1_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20498c2e3_find_last(jule::Str, jule::Str);
inline jule::I64 _20498c8ed__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _20498cd93_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _20498d36b_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _204c04967_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _204c04a99_contains(jule::Str, jule::Str);
inline jule::Bool _204c652e1_contains_any(jule::Str, jule::Str);
inline jule::Str _204c65555_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _20498cb62__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _204c65ea1_trim_left(jule::Str, jule::Str);
inline void _204c660d3__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _204c66347_trim(jule::Str, jule::Str);
inline jule::Bool _236a3ec26_is_path_sep(jule::U8);
inline jule::Bool _236a3ed58_is_slash(jule::U8);
inline jule::U8 _236a3cae2_to_upper(jule::U8);
inline jule::I64 _236a3ce55_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _236a3d1ec_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _236a3d494_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _236a3d7c4___abs(jule::Str);
inline jule::Str _236a3db7b___join(jule::Slice<jule::Str>);
inline jule::Str _204c66b3e_clean(jule::Str);
inline jule::Str _204c66da3_from_slash(jule::Str);
inline jule::Str _204c66ed5_join(jule::Slice<jule::Str>);
inline jule::Str _204c67117_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _204c67249_abs(jule::Str);
inline jule::Str _204c6737b_base(jule::Str);
inline jule::Str _204c674ad_dir(jule::Str);
inline jule::Str _204c675e0_volume_name(jule::Str);
inline jule::I64 _235a66c82_get_last_fs_error(void);
inline jule::Bool _2369b5a48_is_console_handle(jule::U64);
inline jule::I64 _20472b4c2_get_last_process_error(void);
inline jule::Slice<wchar_t*> _204cbdb52_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _204cbde2c_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _204cbe27e_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _204cbe669_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _204cc036d_exit(jule::I64);
inline jule::Str _204cc056b_executable(void);
inline jule::Bool _2046ce6ea_is_std_header_path(jule::Str);
inline jule::Bool _2046ce9d6_is_valid_header_ext(jule::Str);
inline jule::Bool _2046cec7d_is_valid_cpp_ext(jule::Str);
inline jule::Str _2046db6b3_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2046db99e_arg_to_str(jule::Any);
inline jule::I64 _2046dbc46_find_next_fmt(jule::Str);
inline jule::Str _2046dc0cb_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2046dcede_is_top_directive(jule::Str);
inline jule::Bool _2046de771_is_windows(jule::Str);
inline jule::Bool _2046dea5c_is_darwin(jule::Str);
inline jule::Bool _2046ded04_is_linux(jule::Str);
inline jule::Bool _2046e00e0_is_i386(jule::Str);
inline jule::Bool _2046e0387_is_amd64(jule::Str);
inline jule::Bool _2046e062e_is_arm64(jule::Str);
inline jule::Bool _2046e08c6_is_unix(jule::Str);
inline jule::Bool _2046e0c06_is_32bit(jule::Str);
inline jule::Bool _2046e0e9d_is_64bit(jule::Str);
inline void _20472a009_init(void);
inline jule::Bool _2051398b3_is_unary_op(jule::Str);
inline jule::Bool _205139b9e_is_bin_op(jule::Str);
inline jule::Bool _20513a232_is_str(jule::Str);
inline jule::Bool _20513a4c9_is_raw_str(jule::Str);
inline jule::Bool _20513a771_is_rune(jule::Str);
inline jule::Bool _20513ad48_is_bool(jule::Str);
inline jule::Bool _20513b0e0_is_float(jule::Str);
inline jule::Bool _20513b387_is_num(jule::Str);
inline jule::Bool _20513b8c6_is_ignore_ident(jule::Str);
inline jule::Bool _20513bb6d_is_anon_ident(jule::Str);
inline jule::Bool _20513c1ac_is_space(jule::I32);
inline jule::Bool _20513c575_is_letter(jule::I32);
inline jule::Bool _20513cab4_is_decimal(jule::U8);
inline jule::Bool _20513cd5b_is_binary(jule::U8);
inline jule::Bool _20513d103_is_octal(jule::U8);
inline jule::Bool _20513d39a_is_hex(jule::U8);
inline jule::Bool _20513d642_is_assign(jule::U64);
inline jule::Bool _20513d8d9_is_postfix_op(jule::Str);
inline jule::Bool _20513db81_is_assign_op(jule::Str);
inline jule::Ptr<_20513e566_File> _205140a95_new_file_set(jule::Str);
inline _2046db273_Log _205142118_make_err(jule::I64, jule::I64, jule::Ptr<_20513e566_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20514249d_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _2051427de_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205142b74_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205142eb5_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205143306_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205143647_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205143a21_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205143cb8_common_num(jule::Slice<jule::U8>&);
inline jule::Str _205144060_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _2051443a1_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _2051446e2_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _205144a33_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _205144d74_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _2051451b5_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _20514557d_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _205145825_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _205145b66_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _205145e30_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _20514620a_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _2051464b3_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _20514675a_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_2046db273_Log> _20514b254_lex(jule::Ptr<_20513e566_File>, jule::I64);
inline jule::Bool _204e7690e_find_module_file(jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>&);
inline jule::Str _204e8e608_find_module_file_deep(jule::Str);
inline jule::Slice<_2046db273_Log> _204e6c619_check_module_file(jule::Str);
inline jule::Ptr<_1dad01550_FileInfo> _1dad46452_parse_file(jule::Ptr<_20513e566_File>);
inline std::tuple<jule::Ptr<_20500541b_Ast>,jule::Slice<_2046db273_Log>> _1dad469d5_parse_fileset(jule::Ptr<_20513e566_File>);
inline jule::Ptr<_20514edb2_ScopeTree> _1dad4771c_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1dad479e7_is_st(jule::Ptr<_205139176_Token>, jule::Ptr<_205139176_Token>);
inline jule::Bool _1dad47d5a_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1dad48201_next_st_pos(jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::Bool> _1dad48542_skip_st(jule::I64&, jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _1dad48bd5_split_stmts(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_1dad55a38_CallData> _1dad55d9b_get_call_data(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Slice<jule::Ptr<_205139176_Token>> _1dad56187_get_block_expr(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::Slice<jule::Ptr<_205139176_Token>>> _1dad5642e_split_colon(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::I64 _1dad5671a_find_lowest_prec_op(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_20514c0ce_IdentExpr> _1dad569b2_build_ident_expr(jule::Ptr<_205139176_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::I64> _1dad56c59_get_range_expr_tokens(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Bool _1dad6265a_check_assign_tokens(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline _2046db273_Log _1dad63969_make_err(jule::I64, jule::I64, jule::Ptr<_20513e566_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_205139176_Token>> _1dad63e0e_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_205139176_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::Slice<jule::Ptr<_205139176_Token>>> _1dad641a6_range_last(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>,jule::Slice<_2046db273_Log>> _1dad645d5_parts(jule::Slice<jule::Ptr<_205139176_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1dad6489e_get_close_kind_of_brace(jule::Str);
inline _2046db273_Log _1dad64c9a_compiler_err(jule::Ptr<_205139176_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1dad650ec_push_suggestion(_2046db273_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1dad6542c_tokstoa(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad75580_build_void_type(void);
inline jule::Ptr<_204ec8b92_TypeDecl> _1dad757c2_build_prim_type(jule::Ptr<_205139176_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::I64> _1dad75b13_split_map_range(jule::Slice<jule::Ptr<_205139176_Token>>&, jule::I64&);
inline jule::I64 _1c29d2337_leading_zeros64(jule::U64);
inline jule::I64 _1c29d2c83_trailing_zeros(jule::U64);
inline jule::I64 _1c29d3602_trailing_zeros32(jule::U32);
inline jule::I64 _1c29d3899_trailing_zeros64(jule::U64);
inline jule::I64 _1c29d88c1_len32(jule::U32);
inline jule::I64 _1c29d8b68_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1c29d9828_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1c29daeab_mul64(jule::U64, jule::U64);
inline jule::U32 _1c2900068_f32_bits(jule::F32);
inline jule::F32 _1c2900354_f32_from_bits(jule::U32);
inline jule::U64 _1c29005eb_f64_bits(jule::F64);
inline jule::F64 _1c29008d7_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1c2902851_frexp(jule::F64);
inline jule::F64 _1c29ac950_nan(void);
inline jule::Bool _1c294dc10_is_nan(jule::F64);
inline jule::F64 _1c295074a_inf(jule::I64);
inline jule::Bool _1c2965d7b_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1c2986a7d_normalize(jule::F64);
inline jule::F64 _1c29de861_log(jule::F64);
inline jule::F64 _1c29dee38_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1c29e1742_modf(jule::F64);
inline jule::F64 _1c29e1b60_log2(jule::F64);
inline jule::Str _1dbba6b96_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1dbc70468_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1c2796580_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1c2794acd_FloatInfo&);
inline jule::Slice<jule::U8> _1c27d6988_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1dbc26ee1_DecimalSlice, jule::I64, jule::U8);
inline void _1c28d3436_round_shortest(_1c2a10398_Decimal&, jule::U64, jule::I64, _1c2794acd_FloatInfo&);
inline jule::Slice<jule::U8> _1dbbd3552_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1dbc26ee1_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1c27d6647_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1dbc26ee1_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1dbbc4543_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1c2794acd_FloatInfo&);
inline jule::Slice<jule::U8> _1c26b4613_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1c2794acd_FloatInfo&);
inline jule::I64 _1c27d3545_min(jule::I64, jule::I64);
inline jule::I64 _1dbc237d4_max(jule::I64, jule::I64);
inline jule::U8 _1dbbb33de_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1dbbb3521___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1dbbb3653_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1c2a0c0cb_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1c2a0c4e9_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1c2a0c62b_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1c2a0cac1_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1c2a0cc03_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1c2a0cd35_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1c2a0d30d_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1c2a0d440_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1c2a0d572_atof_hex(jule::Str, _1c2794acd_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1c2a0d6a4_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2a0d7d6_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2a0d918_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1c2a0da4a_parse_float(jule::Str, jule::I64);
inline void _1c2a0dd36_ryu_ftoa_fixed32(_1dbc26ee1_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1c2a0de68_ryu_ftoa_fixed64(_1dbc26ee1_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1c2a0e09a_format_decimal(_1dbc26ee1_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1c2a0e1cc_ryu_ftoa_shortest(_1dbc26ee1_DecimalSlice&, jule::U64, jule::I64, _1c2794acd_FloatInfo&);
inline jule::I64 _1c2a0e30e_mul_by_log2_log10(jule::I64);
inline jule::I64 _1c2a0e441_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1c2a0e573_compute_bounds(jule::U64, jule::I64, _1c2794acd_FloatInfo&);
inline void _1c2a0e7b5_ryu_digits(_1dbc26ee1_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1c2a0e8e7_ryu_digits32(_1dbc26ee1_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1c2a0ea29_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1c2a0eb5b_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1c2a0ec8d_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1c2a0edc0_divmod1e9(jule::U64);
inline void _1c2a10e04_trim(_1c2a10398_Decimal&);
inline void _1c2a11036_right_shift(_1c2a10398_Decimal&, jule::U64);
inline jule::Bool _1c2a11168_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1c2a1129a_left_shift(_1c2a10398_Decimal&, jule::U64);
inline jule::Bool _1c2a113cc_should_round_up(_1c2a10398_Decimal&, jule::I64);
inline jule::Str _1c2a11d7d_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1c2a12213_fmt_int(jule::I64, jule::I64);
inline jule::Str _1c2a124aa_itoa(jule::I64);
inline jule::Str _1c2a12796_small(jule::I64);
inline jule::Bool _1c2a12a3d_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1c2a1306b_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline void _1c2ac4b55_lshift_unsig(_1c2abb9a4_Const&, _1c2abb9a4_Const&);
inline void _1c2ac4e52_rshift_unsig(_1c2abb9a4_Const&, _1c2abb9a4_Const&);
inline jule::Str _1c2b54685_real_kind_of(jule::Str);
inline jule::I64 _1c2b5492c_bitsize_of(jule::Str);
inline jule::Str _1c2b54c18_int_from_bits(jule::I64);
inline jule::Str _1c2b54eb0_uint_from_bits(jule::I64);
inline jule::Str _1c2b55257_float_from_bits(jule::I64);
inline jule::Bool _1c2b55cb3_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1c2b5605a_bitsize_of_float(jule::F64);
inline jule::I64 _1c2b56302_bitsize_of_int(jule::I64);
inline jule::I64 _1c2b56599_bitsize_of_uint(jule::U64);
inline void _1c2b5670e_update_target(void);
inline void _1c2b56874_init(void);
inline jule::F64 _1c2b58c50_min(jule::Str);
inline jule::F64 _1c2b5903b_max(jule::Str);
inline jule::Bool _1c2b5949d_is_i8_compatible(jule::Str);
inline jule::Bool _1c2b59789_is_i16_compatible(jule::Str);
inline jule::Bool _1c2b59a31_is_i32_compatible(jule::Str);
inline jule::Bool _1c2b59d1c_is_i64_compatible(jule::Str);
inline jule::Bool _1c2b5a0b4_is_u8_compatible(jule::Str);
inline jule::Bool _1c2b5a35b_is_u16_compatible(jule::Str);
inline jule::Bool _1c2b5a603_is_u32_compatible(jule::Str);
inline jule::Bool _1c2b5a933_is_u64_compatible(jule::Str);
inline jule::Bool _1c2b5abca_is_f32_compatible(jule::Str);
inline jule::Bool _1c2b5ae72_is_f64_compatible(jule::Str);
inline jule::Bool _1c2b5b2b3_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1c2b5b55a_is_i16_greater(jule::Str);
inline jule::Bool _1c2b5b802_is_i32_greater(jule::Str);
inline jule::Bool _1c2b5ba99_is_i64_greater(jule::Str);
inline jule::Bool _1c2b5bd41_is_u16_greater(jule::Str);
inline jule::Bool _1c2b5c209_is_u32_greater(jule::Str);
inline jule::Bool _1c2b5c4a1_is_u64_greater(jule::Str);
inline jule::Bool _1c2b5c748_is_f32_greater(jule::Str);
inline jule::Bool _1c2b5c9e0_is_f64_greater(jule::Str);
inline jule::Bool _1c2b5cd31_is_greater(jule::Str, jule::Str);
inline jule::Bool _1c2b5de53_is_sig_int(jule::Str);
inline jule::Bool _1c2b5e23e_is_unsig_int(jule::Str);
inline jule::Bool _1c2b5e4d6_is_int(jule::Str);
inline jule::Bool _1c2b5e7c2_is_float(jule::Str);
inline jule::Bool _1c2b5ea69_is_num(jule::Str);
inline jule::Bool _1c2bca013_is_ascii(jule::I32);
inline jule::I32 _1c2bcb9d7_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1c2bcbb19_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1c2bcbda0_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1c2bcc147_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1c2bcc488_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1c2bcc7c9_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1c2cb4b9c_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1c2c99ec3_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1c2ca68e7_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _235a2bd8a_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1c2c92691_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1c2c927c3_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c2c91daa_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c1ccb269_kind_uses_generics(jule::Ptr<_1c2c1b131_TypeKind>, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>&);
inline jule::Bool _1c1ccb621_parameter_uses_generics(jule::Ptr<_1c1cc4c79_Param>&, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>&);
inline jule::Ptr<_1c2c24d2c_TypeSymbol> _1c1ccded6_build_type(jule::Ptr<_204ec8b92_TypeDecl>);
inline jule::Ptr<_1c2be2d2d_Value> _1c1cce2c2_build_expr(jule::Ptr<_2050bba21_Expr>);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c1cce569_build_type_alias(jule::Ptr<_2051518a8_TypeAliasDecl>);
inline jule::Ptr<_1c1c07382_Field> _1c1cce855_build_field(jule::Ptr<_205152b84_FieldDecl>);
inline jule::Slice<jule::Ptr<_1c1c07382_Field>> _1c1cceaec_build_fields(jule::Slice<jule::Ptr<_205152b84_FieldDecl>>&);
inline jule::Ptr<_1c1cb3e55_Struct> _1c1cced94_build_struct(jule::Ptr<_2051534e2_StructDecl>);
inline jule::Ptr<_1c1cc4c79_Param> _1c1cd013b_build_param(jule::Ptr<_20515009e_ParamDecl>);
inline jule::Slice<jule::Ptr<_1c1cc4c79_Param>> _1c1cd046b_build_params(jule::Slice<jule::Ptr<_20515009e_ParamDecl>>&);
inline jule::Ptr<_1c1cc4570_RetType> _1c1cd0713_build_ret_type(jule::Ptr<_2050bb834_RetTypeDecl>);
inline jule::Ptr<_1c1cc65b6_Fn> _1c1cd09aa_build_fn(jule::Ptr<_20515028b_FnDecl>);
inline jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _1c1cd0c52_build_methods(jule::Slice<jule::Ptr<_20515028b_FnDecl>>&);
inline jule::Ptr<_1c2a137db_Trait> _1c1cd0ee9_build_trait(jule::Ptr<_205153aec_TraitDecl>);
inline jule::Ptr<_1c2a15007_EnumItem> _1c1cd1291_build_enum_item(jule::Ptr<_20515215b_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c2a15007_EnumItem>> _1c1cd1538_build_enum_items(jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>>&);
inline jule::Ptr<_1c2a159ec_Enum> _1c1cd17d0_build_enum(jule::Ptr<_205152579_EnumDecl>);
inline jule::Ptr<_1c2b9a4de_Var> _1c1cd1b98_build_var(jule::Ptr<_205150478_VarDecl>);
inline jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _1c1cd1e40_build_vars(jule::Slice<jule::Ptr<_205150478_VarDecl>>);
inline jule::Ptr<_1c2a16e71_Impl> _1c1cd21d7_build_impl(jule::Ptr<_205154207_Impl>);
inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2ad5869_new_scope_checker_base(jule::Ptr<_1c2b7eeda_Sema>&, jule::Ptr<_1c1cc9762_FnIns>);
inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2adc079_new_scope_checker(jule::Ptr<_1c2b7eeda_Sema>&, jule::Ptr<_1c1cc9762_FnIns>);
inline jule::Ptr<_1c2b615a4_ScopeLabel> _1c2b2a89d_find_label_parent(jule::Str, jule::Ptr<_1c2b6197d_ScopeChecker>);
inline jule::Bool _1c2b2d0ba_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1c2b4c1e9_Scope>&);
inline jule::I64 _1c2b2d84b_count_match_type(jule::Ptr<_1c2b60ac0_Match>&, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _1c2b2e484_get_datas_from_tuple_data(jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Slice<jule::Any> _1c2b318a4_get_expr_models(jule::Any&);
inline jule::Bool _1c2b32135_check_mut(jule::Ptr<_1c2b7eeda_Sema>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Bool _1c2b328c7_check_assign(jule::Ptr<_1c2b7eeda_Sema>&, jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be1ca5_Data>, jule::Ptr<_205139176_Token>);
inline jule::Bool _1c2b39956_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1c2b3a193_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1c2b3accb_st_is_def(jule::Any&);
inline jule::Ptr<_1c2b9a4de_Var> _1c2b75321_find_var_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b75772_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2b75b6d_find_struct_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c1cc65b6_Fn> _1c2b7609c_find_fn_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c2a137db_Trait> _1c2b763dd_find_trait_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1c2a159ec_Enum> _1c2b7672e_find_enum_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Str);
inline jule::Bool _1c2b7c26d_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1c2b7d1a3_is_valid_model_for_ref(jule::Any&);
inline _2046db273_Log _1c2b7d648_compiler_err(jule::Ptr<_205139176_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2b7d989_imp_is_lookupable(jule::Ptr<_1c2b77301_ImportInfo>&, jule::Str);
inline void _1c2b7dc86_append_ret_vars(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>&, jule::Ptr<_1c1cc9762_FnIns>&);
inline void _1c2b7e03e_append_param_vars(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>&, jule::Ptr<_1c1cc9762_FnIns>&);
inline void _1c2b7e319_append_generic_type_aliases(jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>&, jule::Ptr<_1c1cc9762_FnIns>&);
inline jule::Ptr<_1c2bdbbe5_SymbolTable> _1c2b7e66b_find_file(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>&, jule::Ptr<_20513e566_File>&);
inline void _1c2b7ea56_push_suggestion(_2046db273_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2bcb7c8_trait_has_reference_receiver(jule::Ptr<_1c2a137db_Trait>&);
inline jule::Bool _1c2bb3ccc_float_assignable(jule::Str, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c2bcca2c_sig_assignable(jule::Str, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c2bccb5e_unsig_assignable(jule::Str, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c2bccc91_int_assignable(jule::Str, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_204ec174a_Directive> _1c2c15c74_find_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Str);
inline jule::Any _1c2c16109_find_builtins_import(jule::Str, jule::Ptr<_1c2b77301_ImportInfo>);
inline void _1c2c16318_fit_bitsize(jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c16615_make_struct_lit_alloc(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c1cb9862_StructLitExprModel>&);
inline jule::Ptr<_1c2b9a4de_Var> _1c2c16956_build_error_var(jule::Ptr<_1c2b4c1e9_Scope>&, jule::Ptr<_20514ce48_FnCallExpr>&);
inline jule::Any _1c2c16c97_find_builtins_sema(jule::Str, jule::Ptr<_1c2b7eeda_Sema>);
inline jule::Bool _1c2c1703e_is_ok_for_shifting(jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c2c1736e_is_instanced_struct(jule::Ptr<_1c1cb6ad4_StructIns>);
inline jule::Bool _1c2c17649_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c17902_apply_cast_kind_model(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2c1b131_TypeKind>&);
inline void _1c2c17baa_apply_cast_kind(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c17da8_build_void_data(void);
inline jule::Str _1c2c18172_check_data_for_integer_indexing(jule::Ptr<_1c2be1ca5_Data>&);
inline void _1c2c1845d_apply_cast_model_by_enum(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2a159ec_Enum>);
inline void _1c2c18727_cast_const_by_type(jule::Str&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c2c1996a_has_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Str);
inline jule::Bool _1c2c2d088_can_get_ptr(jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c2c2d330_is_valid_for_sptr_type(jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2c2d61b_is_valid_for_ref(jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Bool _1c2c2d8d5_is_builtin_str_convertable(jule::Ptr<_1c2c1b131_TypeKind>&);
inline jule::Str _1c2c2dbb0_build_link_path_by_tokens(jule::Slice<jule::Ptr<_205139176_Token>>&);
inline jule::Ptr<_1c2c256e0_Prim> _1c2c2de68_build_prim_type(jule::Str);
inline jule::Ptr<_1c1cb3e55_Struct> _1c2c2e298_get_struct_from_kind(jule::Ptr<_1c2c1b131_TypeKind>);
inline jule::Bool _1c2c2e540_is_prim(jule::Str);
inline void _1c2c3727e_apply_implicit_cast(jule::Ptr<_1c2c1b131_TypeKind>&, jule::Ptr<_1c2be1ca5_Data>&);
inline std::tuple<jule::Ptr<_1c2bdbbe5_SymbolTable>,jule::Slice<_2046db273_Log>> _1c2c39e1e_build_symbols(jule::Ptr<_20500541b_Ast>&, jule::Trait<_1c2b74e8b_Importer>&, jule::Ptr<_1c1cd2737_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1c2b79eb3_Package>,jule::Slice<_2046db273_Log>> _1c2c3a34d___analyze_package(jule::Slice<jule::Ptr<_20500541b_Ast>>&, jule::Trait<_1c2b74e8b_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1c2b79eb3_Package>,jule::Slice<_2046db273_Log>> _1c2c3a738_analyze_package(jule::Slice<jule::Ptr<_20500541b_Ast>>, jule::Trait<_1c2b74e8b_Importer>, jule::I64);
inline jule::Ptr<_1c1cc9762_FnIns> _1c2c44445_find_builtin_fn(jule::Str);
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c452d1_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1c2a137db_Trait> _1c2c46623_find_builtin_trait(jule::Str);
inline jule::Any _1c2c73342_find_builtin_def(jule::Str);
inline jule::Any _1c2c42dd3_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1c2c4a56c_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1c2c7c79c_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1c2c91edc_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c9211e_builtin_caller_common_plain(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c5e97c_builtin_caller_common(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c5eaae_builtin_caller_common_mut(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c92d78_builtin_caller_error(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c92eaa_builtin_caller_out(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2c930dc_builtin_caller_outln(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc0a54_builtin_caller_new(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc0db7_builtin_caller_panic(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc0ee9_builtin_caller_make(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc112b_builtin_caller_append(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc125d_caller_copy_slice(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1390_caller_copy_str(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc14c2_builtin_caller_copy(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1604_builtin_caller_clone(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1736_builtin_caller_assert(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1868_builtin_caller_std_mem_size_of(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc199a_builtin_caller_std_mem_align_of(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1acc_builtin_caller_std_mem_free(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1c53_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc214e_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc255b_builtin_caller_std_debug_out(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Ptr<_1c2be1ca5_Data> _1c2cc2979_builtin_caller_std_debug_outln(jule::Ptr<_1c2be3823_Eval>&, jule::Ptr<_20514ce48_FnCallExpr>&, jule::Ptr<_1c2be1ca5_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _204e10128_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _204e1025a_check_arch(jule::Str);
inline jule::Bool _204e2e565_is_pass_file_annotation(jule::Str);
inline void _204e30731_set_os_vars(jule::Slice<jule::Str>&);
inline void _204e30984_set_arch_vars(jule::Slice<jule::Str>&);
inline void _204e30c3c_init_vars(jule::Slice<jule::Str>&, _204e30423_CompileInfo&);
inline jule::Slice<jule::U8> _1dada6a67_read_buff(jule::Str);
inline _2046db273_Log _1dada920c_flat_compiler_err(jule::Str);
inline void _1db255674_push_passes(jule::Ptr<_1c2b79eb3_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1db2563bc_get_all_unique_passes(jule::Ptr<_1c2b79eb3_Package>&, jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>>);
inline _204e30423_CompileInfo _1db257a0b_build_compile_info(void);
inline jule::Ptr<_204ec174a_Directive> _1db26b8cc_find_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Str);
inline jule::Bool _1db27198c_has_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Str);
inline jule::Bool _1db2775a8_is_exist(jule::Slice<jule::Any>, jule::Any);
inline jule::Bool _1db2a6087_is_dead(jule::Any);
inline void _1db2aa399_drop_ref(jule::Slice<jule::Any>&, jule::I64);
inline jule::Bool _1db289e6c_is_all_references_are_dead(jule::Ptr<_1c1ccc798_ReferenceStack>);
inline jule::Bool _1db2eb583_is_fn_dead(jule::Ptr<_1c1cc9762_FnIns>);
inline jule::Bool _1db3385d1_is_var_dead(jule::Ptr<_1c2b9a4de_Var>);
inline jule::Bool _1db34a4e4_is_struct_dead(jule::Ptr<_1c1cb6ad4_StructIns>);
inline jule::Bool _1db34bc21_is_trait_dead(jule::Ptr<_1c2a137db_Trait>);
inline void _1db35098e_eliminate_dead_functions(jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>&);
inline void _1db354e27_eliminate_dead_globals(jule::Ptr<_1c2b79eb3_Package>&);
inline void _1db3ce4bd_eliminate_dead_functions_package(jule::Ptr<_1c2b79eb3_Package>&);
inline void _1db42cac1_keep_alive_init(jule::Ptr<_1c2b79eb3_Package>&);
inline void _1db430c39_eliminate_package(jule::Ptr<_1c2b79eb3_Package>&);
inline void _1db447c40_eliminate_defines(jule::Ptr<_1db2583d0_IR>&);
inline void _1db540783_eliminate_dead_code_of_scope(jule::Ptr<_1c2b4c1e9_Scope>);
inline void _1db540c4a_eliminate_scope_functions(jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>&);
inline void _1db9d5046_eliminate_functions_scope_package(jule::Ptr<_1c2b79eb3_Package>&);
inline void _1db9d5b3a_eliminate_scope_package(jule::Ptr<_1c2b79eb3_Package>&);
inline void _1db9d7ec2_eliminate_scopes(jule::Ptr<_1db2583d0_IR>&);
inline void _1db3159dc_throw(jule::Str);
inline jule::Bool _1c348cb16_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1c348ce35_is_constant_valid_conditional_case(jule::Ptr<_1c2b53ae6_If>&);
inline jule::Bool _1c348d1cc_is_unreachable_expr(jule::Any&);
inline jule::Bool _1c348d4da_is_constant_valid_match_case(jule::Ptr<_1c2b60edd_Case>&);
inline jule::Bool _1c348d7b5_is_unreachable_conditional_case(jule::Ptr<_1c2b53ae6_If>&);
inline jule::Bool _1c348da90_is_unreachable_match_case(jule::Ptr<_1c2b60edd_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1c3495beb_check_for_bit_shift_opt(jule::Ptr<_1c1cb8740_OperandExprModel>&, jule::Ptr<_1c1cb8740_OperandExprModel>&);
inline jule::U64 _1c3517102_unix(void);
inline jule::U64 _1c3517443_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1c35177c8_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1c3398e0c_is_copy_optimizable(jule::Ptr<_1c2be1ca5_Data>&);
inline jule::Bool _1c334b7d8_is_iter_copy_optimizable(jule::Ptr<_1c2be1ca5_Data>&, jule::Ptr<_1c2b9a4de_Var>&);
inline jule::Str _1c349d550_decompose_common_esq(jule::U8);
inline jule::Str _1c349d83b_sbtoa(jule::U8);
inline jule::Str _1c349dad3_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1c349ddbe_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1c349e210_ftoa(jule::F64, jule::I64);
inline jule::Str _1c349e4a7_itoa(jule::I64);
inline jule::Str _1c349e74e_utoa(jule::U64);
inline jule::Bool _1c349ea7e_is_forwarded(jule::Ptr<_1c2b4c1e9_Scope>&);
inline jule::Bool _1c349ed48_is_builtin_call_has_debuginf(jule::Ptr<_1c1cba9ea_FnCallExprModel>&);
inline void _1c351bdc6_iter_files(jule::Ptr<_1c2b79eb3_Package>&, jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>);
inline void _1c351c129_prepare_structure(jule::Ptr<_1c1cb3e55_Struct>&);
inline jule::Str _1c351c3c1_concat_all_parts(jule::Slice<jule::Ptr<_205139176_Token>>);
inline jule::Ptr<_204ec174a_Directive> _1c35243d9_find_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Str);
inline jule::Bool _1c352476e_has_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>&, jule::Str);
inline void _2046a7ad0_print_error_message(jule::Str);
inline void _2046ba30c_help(jule::Slice<jule::Str>&);
inline void _2046bb907_version(jule::Slice<jule::Str>&);
inline void _2046bc199_tool_distos(void);
inline void _2046bc93b_tool_distarch(void);
inline void _2046bd1cd_tool(jule::Slice<jule::Str>&);
inline void _2046bd970_julenv(jule::Slice<jule::Str>&);
inline void _2046cd72c_mod(jule::Slice<jule::Str>&);
inline jule::Bool _2046a5050_process_command(jule::Slice<jule::Str>&);
inline void _2046b9718_show_info(void);
void entry_point(void);
inline void _2046ab51d_enable_vtp(void);
inline void _2046c6291_init(void);
inline jule::Ptr<_2368217d8_File> _1c352bbb6_open_output(jule::Str&);
inline void _1c353abe7_clear_objects(void);
inline void _1c2d42268_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1c35281ce_is_cpp_source_file(jule::Str);
inline void _1c3533052_push_comp_cmd_clang(jule::Str&);
inline void _1c3525b9e_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1c320e514_gen_compile_cmd(jule::Str, jule::Ptr<_1db2583d0_IR>&);
inline jule::Str _1c33122d7_get_compile_path(void);
inline void _1c352992d_apply_target_independent_optimizations(jule::Ptr<_1db2583d0_IR>&);
inline void _1c3525044_check_compiler_flag(void);
inline void _1c3525176_check_target_arch(jule::Str);
inline void _1c3558264_check_target_os(jule::Str);
inline void _1c3558396_check_target_flag(jule::Str&);
inline void _1c35584c8_check_opt_flag(jule::Str&);
inline void _1c355883b_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1c355896d_check_flags(jule::Slice<jule::Str>&);
inline void _1c3558aa0_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1db2583d0_IR> _1c3558bd2_build_ir(jule::Slice<jule::Str>&);
inline void _1c3558d14_compile_command(jule::Slice<jule::Str>&);


struct _1c2cba0e2_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1c2cb9e9e_read)(jule::Trait<_1c2cba0e2_Reader>, jule::Slice<jule::U8>);
};

struct _1c2cba521_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1c2cba3cd_write)(jule::Trait<_1c2cba521_Writer>, jule::Slice<jule::U8>);
};

struct _1c2cbaae8_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1c2cba7c9_write)(jule::Trait<_1c2cbaae8_WriterCloser>, jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1c2cba9a5_close)(jule::Trait<_1c2cbaae8_WriterCloser>);
};

struct _1c2cbb346_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1c2cbade5_read)(jule::Trait<_1c2cbb346_Stream>, jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1c2cbb203_write)(jule::Trait<_1c2cbb346_Stream>, jule::Slice<jule::U8>);
};

struct _1c2b74e8b_ImporterMptrData {
	void(*_1c2b73d8b_set_mod_path)(jule::Trait<_1c2b74e8b_Importer>, jule::Str);
	jule::Str(*_1c2b74100_get_mod_path)(jule::Trait<_1c2b74e8b_Importer>);
	jule::Str(*_1c2b7440d_mod_by_id)(jule::Trait<_1c2b74e8b_Importer>, jule::I64);
	jule::Ptr<_1c2b77301_ImportInfo>(*_1c2b7471b_get_import)(jule::Trait<_1c2b74e8b_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_20500541b_Ast>>,jule::Slice<_2046db273_Log>>(*_1c2b74ac3_import_package)(jule::Trait<_1c2b74e8b_Importer>, jule::Str, jule::Bool);
	void(*_1c2b74d48_imported)(jule::Trait<_1c2b74e8b_Importer>, jule::Ptr<_1c2b77301_ImportInfo>);
};

struct _1c2c1ac02_KindMptrData {
	jule::Str(*_1c2c1a7a1_to_str)(jule::Trait<_1c2c1ac02_Kind>);
	jule::Bool(*_1c2c1aaae_equals)(jule::Trait<_1c2c1ac02_Kind>, jule::Ptr<_1c2c1b131_TypeKind>);
};

struct _1c2c3934c_LookupMptrData {
	jule::Ptr<_1c2b77301_ImportInfo>(*_1c2c37812_find_package)(jule::Trait<_1c2c3934c_Lookup>, jule::Str);
	jule::Ptr<_1c2b77301_ImportInfo>(*_1c2c37b20_select_package)(jule::Trait<_1c2c3934c_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>);
	jule::Ptr<_1c2b9a4de_Var>(*_1c2c37ec7_find_var)(jule::Trait<_1c2c3934c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c2c1a3e9_TypeAlias>(*_1c2c3837e_find_type_alias)(jule::Trait<_1c2c3934c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c1cb3e55_Struct>(*_1c2c38736_find_struct)(jule::Trait<_1c2c3934c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c1cc65b6_Fn>(*_1c2c38add_find_fn)(jule::Trait<_1c2c3934c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c2a137db_Trait>(*_1c2c38deb_find_trait)(jule::Trait<_1c2c3934c_Lookup>, jule::Str);
	jule::Ptr<_1c2a159ec_Enum>(*_1c2c39209_find_enum)(jule::Trait<_1c2c3934c_Lookup>, jule::Str);
};

struct _1c2d421ad_CommonFlagMptrData {
	jule::Str(*_1c3552a55_name)(jule::Trait<_1c2d421ad_CommonFlag>);
	jule::I32(*_1c3552b87_short)(jule::Trait<_1c2d421ad_CommonFlag>);
	jule::Str(*_1c3552cb9_what)(jule::Trait<_1c2d421ad_CommonFlag>);
	void(*_1c3552deb_reset)(jule::Trait<_1c2d421ad_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1c2cb9e9e_read_0(jule::Trait<_1c2cba0e2_Reader> _self_, jule::Slice<jule::U8> _731_buff) {
	return _1c2cb8b90_read(_self_.safe_ptr<_1c2cb5010_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1c2cb9e9e_read_1(jule::Trait<_1c2cba0e2_Reader> _self_, jule::Slice<jule::U8> _731_buff) {
	return _1c2cbc721_read(_self_.safe_ptr<_1c2cbb874_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1c2cba3cd_write_0(jule::Trait<_1c2cba521_Writer> _self_, jule::Slice<jule::U8> _1228_buff) {
	return _1c2cb8e9d_write(_self_.safe_ptr<_1c2cb5010_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1c2cba3cd_write_1(jule::Trait<_1c2cba521_Writer> _self_, jule::Slice<jule::U8> _1228_buff) {
	return _1c2cbca2e_write(_self_.safe_ptr<_1c2cbb874_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1c2cba7c9_write_0(jule::Trait<_1c2cbaae8_WriterCloser> _self_, jule::Slice<jule::U8> _1728_buff)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline jule::VoidExceptional _1c2cba9a5_close_0(jule::Trait<_1c2cbaae8_WriterCloser> _self_)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline jule::Exceptional<jule::I64> _1c2cbade5_read_0(jule::Trait<_1c2cbb346_Stream> _self_, jule::Slice<jule::U8> _2331_buff) {
	return _1c2cb8b90_read(_self_.safe_ptr<_1c2cb5010_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1c2cbb203_write_0(jule::Trait<_1c2cbb346_Stream> _self_, jule::Slice<jule::U8> _2428_buff) {
	return _1c2cb8e9d_write(_self_.safe_ptr<_1c2cb5010_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I64> _1c2cbade5_read_1(jule::Trait<_1c2cbb346_Stream> _self_, jule::Slice<jule::U8> _2331_buff) {
	return _1c2cbc721_read(_self_.safe_ptr<_1c2cbb874_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1c2cbb203_write_1(jule::Trait<_1c2cbb346_Stream> _self_, jule::Slice<jule::U8> _2428_buff) {
	return _1c2cbca2e_write(_self_.safe_ptr<_1c2cbb874_ByteStream>(), _2428_buff);
}
inline void _1c2b73d8b_set_mod_path_0(jule::Trait<_1c2b74e8b_Importer> _self_, jule::Str _1735_path) {
	_1dadc0652_set_mod_path(_self_.safe_ptr<_1db25a0c4_JuleImporter>(), _1735_path);
}
inline jule::Str _1c2b74100_get_mod_path_0(jule::Trait<_1c2b74e8b_Importer> _self_) {
	return _1dadc1ba3_get_mod_path(_self_.safe_ptr<_1db25a0c4_JuleImporter>());
}
inline jule::Str _1c2b7440d_mod_by_id_0(jule::Trait<_1c2b74e8b_Importer> _self_, jule::I64 _2528_id) {
	return _1dae13574_mod_by_id(_self_.safe_ptr<_1db25a0c4_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7471b_get_import_0(jule::Trait<_1c2b74e8b_Importer> _self_, jule::Str _3133_path) {
	return _1dae19c62_get_import(_self_.safe_ptr<_1db25a0c4_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_20500541b_Ast>>,jule::Slice<_2046db273_Log>> _1c2b74ac3_import_package_0(jule::Trait<_1c2b74e8b_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1dae25003_import_package(_self_.safe_ptr<_1db25a0c4_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1c2b74d48_imported_0(jule::Trait<_1c2b74e8b_Importer> _self_, jule::Ptr<_1c2b77301_ImportInfo> _4135__0) {
	_1dae2c956_imported(_self_.safe_ptr<_1db25a0c4_JuleImporter>(), _4135__0);
}
inline jule::Str _1c2c1a7a1_to_str_0(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c1cb6e8b_to_str(_self_.safe_ptr<_1c1cb6ad4_StructIns>());
}
inline jule::Bool _1c2c1aaae_equals_0(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c1cb7299_equals(_self_.data.as<_1c1cb6ad4_StructIns>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_1(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c1cc9ac5_to_str(_self_.safe_ptr<_1c1cc9762_FnIns>());
}
inline jule::Bool _1c2c1aaae_equals_1(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c1cc9dd3_equals(_self_.data.as<_1c1cc9762_FnIns>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_2(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2a13bd7_to_str(_self_.safe_ptr<_1c2a137db_Trait>());
}
inline jule::Bool _1c2c1aaae_equals_2(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2a13ee5_equals(_self_.data.as<_1c2a137db_Trait>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_3(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2a15d60_to_str(_self_.safe_ptr<_1c2a159ec_Enum>());
}
inline jule::Bool _1c2c1aaae_equals_3(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2a1616d_equals(_self_.data.as<_1c2a159ec_Enum>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_4(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c1b4d8_to_str(_self_.safe_ptr<_1c2c1b131_TypeKind>());
}
inline jule::Bool _1c2c1aaae_equals_4(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c1b7e6_equals(_self_.data.as<_1c2c1b131_TypeKind>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_5(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c25a53_to_str(_self_.safe_ptr<_1c2c256e0_Prim>());
}
inline jule::Bool _1c2c1aaae_equals_5(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c25d61_equals(_self_.data.as<_1c2c256e0_Prim>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_6(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c29062_to_str(_self_.safe_ptr<_1c2c28bee_Sptr>());
}
inline jule::Bool _1c2c1aaae_equals_6(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c29370_equals(_self_.data.as<_1c2c28bee_Sptr>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_7(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c29ace_to_str(_self_.safe_ptr<_1c2c2965b_Slc>());
}
inline jule::Bool _1c2c1aaae_equals_7(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c29ddc_equals(_self_.data.as<_1c2c2965b_Slc>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_8(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c2a54c_to_str(_self_.safe_ptr<_1c2c2a151_Tuple>());
}
inline jule::Bool _1c2c1aaae_equals_8(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c2a85a_equals(_self_.data.as<_1c2c2a151_Tuple>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_9(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c2b075_to_str(_self_.safe_ptr<_1c2c2ac12_Map>());
}
inline jule::Bool _1c2c1aaae_equals_9(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c2b383_equals(_self_.data.as<_1c2c2ac12_Map>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_10(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c2bb69_to_str(_self_.safe_ptr<_1c2c2b806_Arr>());
}
inline jule::Bool _1c2c1aaae_equals_10(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c2be77_equals(_self_.data.as<_1c2c2b806_Arr>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_11(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c2c2c5c6_to_str(_self_.safe_ptr<_1c2c2c263_Ptr>());
}
inline jule::Bool _1c2c1aaae_equals_11(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c2c2c8d4_equals(_self_.data.as<_1c2c2c263_Ptr>(), _5926_other);
}
inline jule::Str _1c2c1a7a1_to_str_12(jule::Trait<_1c2c1ac02_Kind> _self_) {
	return _1c351d614_to_str(_self_.safe_ptr<_1c351d328_CustomType>());
}
inline jule::Bool _1c2c1aaae_equals_12(jule::Trait<_1c2c1ac02_Kind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _5926_other) {
	return _1c351d922_equals(_self_.data.as<_1c351d328_CustomType>(), _5926_other);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37812_find_package_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _935_ident) {
	return _1c2b0eb4b_find_package(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37b20_select_package_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _1337_selector) {
	return _1c2ae72c6_select_package(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1c2b9a4de_Var> _1c2c37ec7_find_var_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2ad565a_find_var(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c3837e_find_type_alias_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2b61b6a_find_type_alias(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1c1cb3e55_Struct> _1c2c38736_find_struct_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2b61e56_find_struct(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1c1cc65b6_Fn> _1c2c38add_find_fn_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2b6230d_find_fn(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2a137db_Trait> _1c2c38deb_find_trait_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2b6261b_find_trait(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1c2a159ec_Enum> _1c2c39209_find_enum_0(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2b62929_find_enum(_self_.safe_ptr<_1c2b6197d_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37812_find_package_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _935_ident) {
	return _1c2b7780c_find_package(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37b20_select_package_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _1337_selector) {
	return _1c2b77b1a_select_package(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1c2b9a4de_Var> _1c2c37ec7_find_var_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2b77ec2_find_var(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c3837e_find_type_alias_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2b78379_find_type_alias(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1c1cb3e55_Struct> _1c2c38736_find_struct_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2b78731_find_struct(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1c1cc65b6_Fn> _1c2c38add_find_fn_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2b78ad8_find_fn(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2a137db_Trait> _1c2c38deb_find_trait_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2b78de6_find_trait(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1c2a159ec_Enum> _1c2c39209_find_enum_1(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2b79204_find_enum(_self_.safe_ptr<_1c2b77301_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37812_find_package_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _935_ident) {
	return _1c2b7a47a_find_package(_self_.safe_ptr<_1c2b79eb3_Package>(), _935_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37b20_select_package_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _1337_selector) {
	return _1c2b7a788_select_package(_self_.safe_ptr<_1c2b79eb3_Package>(), _1337_selector);
}
inline jule::Ptr<_1c2b9a4de_Var> _1c2c37ec7_find_var_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2b7ab40_find_var(_self_.safe_ptr<_1c2b79eb3_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c3837e_find_type_alias_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2b7aee7_find_type_alias(_self_.safe_ptr<_1c2b79eb3_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1c1cb3e55_Struct> _1c2c38736_find_struct_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2b7b39e_find_struct(_self_.safe_ptr<_1c2b79eb3_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1c1cc65b6_Fn> _1c2c38add_find_fn_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2b7b756_find_fn(_self_.safe_ptr<_1c2b79eb3_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2a137db_Trait> _1c2c38deb_find_trait_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2b7ba64_find_trait(_self_.safe_ptr<_1c2b79eb3_Package>(), _3333_ident);
}
inline jule::Ptr<_1c2a159ec_Enum> _1c2c39209_find_enum_2(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2b7bd72_find_enum(_self_.safe_ptr<_1c2b79eb3_Package>(), _3732_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37812_find_package_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _935_ident) {
	return _1c2b804e6_find_package(_self_.safe_ptr<_1c2b7eeda_Sema>(), _935_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37b20_select_package_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _1337_selector) {
	return _1c2b80804_select_package(_self_.safe_ptr<_1c2b7eeda_Sema>(), _1337_selector);
}
inline jule::Ptr<_1c2b9a4de_Var> _1c2c37ec7_find_var_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2b80bab_find_var(_self_.safe_ptr<_1c2b7eeda_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c3837e_find_type_alias_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2b81063_find_type_alias(_self_.safe_ptr<_1c2b7eeda_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1c1cb3e55_Struct> _1c2c38736_find_struct_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2b8141a_find_struct(_self_.safe_ptr<_1c2b7eeda_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1c1cc65b6_Fn> _1c2c38add_find_fn_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2b817c2_find_fn(_self_.safe_ptr<_1c2b7eeda_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2a137db_Trait> _1c2c38deb_find_trait_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2b81ad0_find_trait(_self_.safe_ptr<_1c2b7eeda_Sema>(), _3333_ident);
}
inline jule::Ptr<_1c2a159ec_Enum> _1c2c39209_find_enum_3(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2b81ddd_find_enum(_self_.safe_ptr<_1c2b7eeda_Sema>(), _3732_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37812_find_package_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _935_ident) {
	return _1c2bdc201_find_package(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1c2b77301_ImportInfo> _1c2c37b20_select_package_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _1337_selector) {
	return _1c2bdc50e_select_package(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1c2b9a4de_Var> _1c2c37ec7_find_var_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2bdc8b6_find_var(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c3837e_find_type_alias_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2bdcc6d_find_type_alias(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1c1cb3e55_Struct> _1c2c38736_find_struct_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2bdd125_find_struct(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1c1cc65b6_Fn> _1c2c38add_find_fn_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2bdd4cc_find_fn(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2a137db_Trait> _1c2c38deb_find_trait_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2bdd7da_find_trait(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1c2a159ec_Enum> _1c2c39209_find_enum_4(jule::Trait<_1c2c3934c_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2bddae8_find_enum(_self_.safe_ptr<_1c2bdbbe5_SymbolTable>(), _3732_ident);
}
inline jule::Str _1c3552a55_name_0(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba004b_name(_self_.safe_ptr<_1c35531d7_Flag_0>());
}
inline jule::I32 _1c3552b87_short_0(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba03e2_short(_self_.safe_ptr<_1c35531d7_Flag_0>());
}
inline jule::Str _1c3552cb9_what_0(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba017d_what(_self_.safe_ptr<_1c35531d7_Flag_0>());
}
inline void _1c3552deb_reset_0(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	_1c5ba02b0_reset(_self_.safe_ptr<_1c35531d7_Flag_0>());
}
inline jule::Str _1c3552a55_name_1(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba301b_name(_self_.safe_ptr<_1c35531d7_Flag_1>());
}
inline jule::I32 _1c3552b87_short_1(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba3170_short(_self_.safe_ptr<_1c35531d7_Flag_1>());
}
inline jule::Str _1c3552cb9_what_1(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba2c74_what(_self_.safe_ptr<_1c35531d7_Flag_1>());
}
inline void _1c3552deb_reset_1(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	_1c5ba1844_reset(_self_.safe_ptr<_1c35531d7_Flag_1>());
}
inline jule::Str _1c3552a55_name_2(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba6140_name(_self_.safe_ptr<_1c35531d7_Flag_2>());
}
inline jule::I32 _1c3552b87_short_2(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba6294_short(_self_.safe_ptr<_1c35531d7_Flag_2>());
}
inline jule::Str _1c3552cb9_what_2(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba5d98_what(_self_.safe_ptr<_1c35531d7_Flag_2>());
}
inline void _1c3552deb_reset_2(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	_1c5ba4968_reset(_self_.safe_ptr<_1c35531d7_Flag_2>());
}
inline jule::Str _1c3552a55_name_3(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba92a8_name(_self_.safe_ptr<_1c35531d7_Flag_3>());
}
inline jule::I32 _1c3552b87_short_3(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba940c_short(_self_.safe_ptr<_1c35531d7_Flag_3>());
}
inline jule::Str _1c3552cb9_what_3(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5ba9011_what(_self_.safe_ptr<_1c35531d7_Flag_3>());
}
inline void _1c3552deb_reset_3(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	_1c5ba7ad1_reset(_self_.safe_ptr<_1c35531d7_Flag_3>());
}
inline jule::Str _1c3552a55_name_4(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5bac3cc_name(_self_.safe_ptr<_1c35531d7_Flag_4>());
}
inline jule::I32 _1c3552b87_short_4(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5bac531_short(_self_.safe_ptr<_1c35531d7_Flag_4>());
}
inline jule::Str _1c3552cb9_what_4(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	return _1c5bac135_what(_self_.safe_ptr<_1c35531d7_Flag_4>());
}
inline void _1c3552deb_reset_4(jule::Trait<_1c2d421ad_CommonFlag> _self_) {
	_1c5baac05_reset(_self_.safe_ptr<_1c35531d7_Flag_4>());
}


static _1c2cba0e2_ReaderMptrData _1c2cba0e2_Reader_mptr_data[] = {
	{
		._1c2cb9e9e_read=_1c2cb9e9e_read_0,
	},
	{
		._1c2cb9e9e_read=_1c2cb9e9e_read_1,
	},
};
static _1c2cba521_WriterMptrData _1c2cba521_Writer_mptr_data[] = {
	{
		._1c2cba3cd_write=_1c2cba3cd_write_0,
	},
	{
		._1c2cba3cd_write=_1c2cba3cd_write_1,
	},
};
static _1c2cbaae8_WriterCloserMptrData _1c2cbaae8_WriterCloser_mptr_data[] = {
	{
		._1c2cba7c9_write=_1c2cba7c9_write_0,
		._1c2cba9a5_close=_1c2cba9a5_close_0,
	},
};
static _1c2cbb346_StreamMptrData _1c2cbb346_Stream_mptr_data[] = {
	{
		._1c2cbade5_read=_1c2cbade5_read_0,
		._1c2cbb203_write=_1c2cbb203_write_0,
	},
	{
		._1c2cbade5_read=_1c2cbade5_read_1,
		._1c2cbb203_write=_1c2cbb203_write_1,
	},
};
static _1c2b74e8b_ImporterMptrData _1c2b74e8b_Importer_mptr_data[] = {
	{
		._1c2b73d8b_set_mod_path=_1c2b73d8b_set_mod_path_0,
		._1c2b74100_get_mod_path=_1c2b74100_get_mod_path_0,
		._1c2b7440d_mod_by_id=_1c2b7440d_mod_by_id_0,
		._1c2b7471b_get_import=_1c2b7471b_get_import_0,
		._1c2b74ac3_import_package=_1c2b74ac3_import_package_0,
		._1c2b74d48_imported=_1c2b74d48_imported_0,
	},
};
static _1c2c1ac02_KindMptrData _1c2c1ac02_Kind_mptr_data[] = {
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_0,
		._1c2c1aaae_equals=_1c2c1aaae_equals_0,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_1,
		._1c2c1aaae_equals=_1c2c1aaae_equals_1,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_2,
		._1c2c1aaae_equals=_1c2c1aaae_equals_2,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_3,
		._1c2c1aaae_equals=_1c2c1aaae_equals_3,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_4,
		._1c2c1aaae_equals=_1c2c1aaae_equals_4,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_5,
		._1c2c1aaae_equals=_1c2c1aaae_equals_5,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_6,
		._1c2c1aaae_equals=_1c2c1aaae_equals_6,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_7,
		._1c2c1aaae_equals=_1c2c1aaae_equals_7,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_8,
		._1c2c1aaae_equals=_1c2c1aaae_equals_8,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_9,
		._1c2c1aaae_equals=_1c2c1aaae_equals_9,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_10,
		._1c2c1aaae_equals=_1c2c1aaae_equals_10,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_11,
		._1c2c1aaae_equals=_1c2c1aaae_equals_11,
	},
	{
		._1c2c1a7a1_to_str=_1c2c1a7a1_to_str_12,
		._1c2c1aaae_equals=_1c2c1aaae_equals_12,
	},
};
static _1c2c3934c_LookupMptrData _1c2c3934c_Lookup_mptr_data[] = {
	{
		._1c2c37812_find_package=_1c2c37812_find_package_0,
		._1c2c37b20_select_package=_1c2c37b20_select_package_0,
		._1c2c37ec7_find_var=_1c2c37ec7_find_var_0,
		._1c2c3837e_find_type_alias=_1c2c3837e_find_type_alias_0,
		._1c2c38736_find_struct=_1c2c38736_find_struct_0,
		._1c2c38add_find_fn=_1c2c38add_find_fn_0,
		._1c2c38deb_find_trait=_1c2c38deb_find_trait_0,
		._1c2c39209_find_enum=_1c2c39209_find_enum_0,
	},
	{
		._1c2c37812_find_package=_1c2c37812_find_package_1,
		._1c2c37b20_select_package=_1c2c37b20_select_package_1,
		._1c2c37ec7_find_var=_1c2c37ec7_find_var_1,
		._1c2c3837e_find_type_alias=_1c2c3837e_find_type_alias_1,
		._1c2c38736_find_struct=_1c2c38736_find_struct_1,
		._1c2c38add_find_fn=_1c2c38add_find_fn_1,
		._1c2c38deb_find_trait=_1c2c38deb_find_trait_1,
		._1c2c39209_find_enum=_1c2c39209_find_enum_1,
	},
	{
		._1c2c37812_find_package=_1c2c37812_find_package_2,
		._1c2c37b20_select_package=_1c2c37b20_select_package_2,
		._1c2c37ec7_find_var=_1c2c37ec7_find_var_2,
		._1c2c3837e_find_type_alias=_1c2c3837e_find_type_alias_2,
		._1c2c38736_find_struct=_1c2c38736_find_struct_2,
		._1c2c38add_find_fn=_1c2c38add_find_fn_2,
		._1c2c38deb_find_trait=_1c2c38deb_find_trait_2,
		._1c2c39209_find_enum=_1c2c39209_find_enum_2,
	},
	{
		._1c2c37812_find_package=_1c2c37812_find_package_3,
		._1c2c37b20_select_package=_1c2c37b20_select_package_3,
		._1c2c37ec7_find_var=_1c2c37ec7_find_var_3,
		._1c2c3837e_find_type_alias=_1c2c3837e_find_type_alias_3,
		._1c2c38736_find_struct=_1c2c38736_find_struct_3,
		._1c2c38add_find_fn=_1c2c38add_find_fn_3,
		._1c2c38deb_find_trait=_1c2c38deb_find_trait_3,
		._1c2c39209_find_enum=_1c2c39209_find_enum_3,
	},
	{
		._1c2c37812_find_package=_1c2c37812_find_package_4,
		._1c2c37b20_select_package=_1c2c37b20_select_package_4,
		._1c2c37ec7_find_var=_1c2c37ec7_find_var_4,
		._1c2c3837e_find_type_alias=_1c2c3837e_find_type_alias_4,
		._1c2c38736_find_struct=_1c2c38736_find_struct_4,
		._1c2c38add_find_fn=_1c2c38add_find_fn_4,
		._1c2c38deb_find_trait=_1c2c38deb_find_trait_4,
		._1c2c39209_find_enum=_1c2c39209_find_enum_4,
	},
};
static _1c2d421ad_CommonFlagMptrData _1c2d421ad_CommonFlag_mptr_data[] = {
	{
		._1c3552a55_name=_1c3552a55_name_0,
		._1c3552b87_short=_1c3552b87_short_0,
		._1c3552cb9_what=_1c3552cb9_what_0,
		._1c3552deb_reset=_1c3552deb_reset_0,
	},
	{
		._1c3552a55_name=_1c3552a55_name_1,
		._1c3552b87_short=_1c3552b87_short_1,
		._1c3552cb9_what=_1c3552cb9_what_1,
		._1c3552deb_reset=_1c3552deb_reset_1,
	},
	{
		._1c3552a55_name=_1c3552a55_name_2,
		._1c3552b87_short=_1c3552b87_short_2,
		._1c3552cb9_what=_1c3552cb9_what_2,
		._1c3552deb_reset=_1c3552deb_reset_2,
	},
	{
		._1c3552a55_name=_1c3552a55_name_3,
		._1c3552b87_short=_1c3552b87_short_3,
		._1c3552cb9_what=_1c3552cb9_what_3,
		._1c3552deb_reset=_1c3552deb_reset_3,
	},
	{
		._1c3552a55_name=_1c3552a55_name_4,
		._1c3552b87_short=_1c3552b87_short_4,
		._1c3552cb9_what=_1c3552cb9_what_4,
		._1c3552deb_reset=_1c3552deb_reset_4,
	},
};


jule::Str _1c3065348_OUT_DIR = jule::Str("dist", 4);
jule::Str _1c3110ba7_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1c35293de_OUT = jule::Str();
jule::Bool _2359c7e57_PRODUCTION = false;
jule::Bool _2359c8045_OPT_COPY = false;
jule::Bool _2359c8133_OPT_DEADCODE = false;
jule::Bool _2359c8221_OPT_APPEND = false;
jule::Bool _2359c830e_OPT_MATH = false;
jule::Bool _2359c840d_OPT_ACCESS = false;
jule::Bool _2359c8584_OPT_INLINE = false;
jule::Bool _2359c8793_OPT_PTR = false;
jule::Bool _2359c8919_OPT_COND = false;
jule::Str _2359c9002_COMPILER = jule::Str();
jule::Str _2359c91bc_COMPILER_PATH = jule::Str();
jule::Str _2359c9343_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _2359c950d_SHADOWING = false;
jule::Bool _2359c9684_TRANSPILATION = false;
jule::Bool _2359c980a_TEST = false;
jule::Bool _2359c9981_RC = true;
jule::Bool _2359c9b90_SAFETY = true;
jule::Ptr<_204c62cd3_RangeTable> _204c2ae00__L = jule::new_ptr<_204c62cd3_RangeTable>(_204c62cd3_RangeTable{._field_r16=jule::Slice<_204c62398_Range16>::make({_204c62398_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_204c62398_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_204c62398_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_204c62398_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_204c62398_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_204c62398_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_204c62398_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_204c62398_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_204c62398_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_204c62398_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_204c62398_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_204c62398_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_204c62398_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_204c62398_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_204c62398_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_204c62398_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_204c62398_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_204c62398_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_204c62398_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_204c62398_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_204c62398_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_204c62398_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_204c62398_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_204c62398_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_204c62398_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_204c62398_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_204c62398_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_204c62398_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_204c62398_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_204c62398_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_204c62398_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_204c62398_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_204c62398_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_204c62398_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_204c62398_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_204c62398_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_204c62398_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_204c62398_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_204c62398_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_204c62398_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_204c62398_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_204c62398_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_204c62398_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_204c62398_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_204c62398_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_204c62398_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_204c62398_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_204c62398_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_204c62398_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_204c62398_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_204c62398_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_204c62398_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_204c62398_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_204c62398_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_204c62398_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_204c62860_Range32>::make({_204c62860_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_204c62860_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_204c62860_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_204c62860_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_204c62860_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_204c62860_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_204c62860_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_204c62860_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_204c62860_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_204c62860_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_204c62860_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_204c62860_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_204c62860_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_204c62860_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_204c62860_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_204c62860_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_204c62860_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_204c62860_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_204c62860_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_204c62860_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_204c62860_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_204c62860_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_204c62860_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_204c62860_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_204c62860_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_204c62860_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_204c62860_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _2046cca28_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _2046cd221_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _2046ce453_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _2046de320_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _2046de51d_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _2046ee8d5_PATH_STDLIB = jule::Str();
jule::Str _2046edc7a_PATH_EXEC = jule::Str();
jule::Str _20470cc12_PATH_WD = jule::Str();
jule::Str _20470e2c9_PATH_API = jule::Str();
jule::Array<jule::I32,5> _205085963_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _205085aa6_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _205086304_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _205086667_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _205086821_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_205141634_KindPair,47> _205141931_KEYWORDS = jule::Array<_205141634_KindPair,47>({_205141634_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_205141634_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_205141634_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_205141634_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_205141634_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_205141634_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_205141634_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_205141634_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_205141634_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_205141634_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_205141634_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_205141634_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_205141634_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_205141634_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_205141634_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_205141634_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_205141634_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_205141634_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_205141634_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_205141634_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_205141634_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_205141634_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_205141634_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_205141634_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_205141634_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_205141634_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_205141634_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_205141634_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_205141634_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_205141634_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_205141634_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_205141634_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_205141634_KindPair,39> _205141b2e_BASIC_OPS = jule::Array<_205141634_KindPair,39>({_205141634_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_205141634_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_205141634_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_205141634_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_205141634_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_205141634_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_205141634_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1c29d2700_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1c29d2a30_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1c2794acd_FloatInfo _204c8db88_F32_INFO = _1c2794acd_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1c2794acd_FloatInfo _1dbbb5853_F64_INFO = _1c2794acd_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1dbc7c2aa_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1c2762073_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1c276279e_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1c2762e64_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1c2798cbe_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1c2a101ab_LeftCheat> _1c2865132_LEFTCHEATS = jule::Slice<_1c2a101ab_LeftCheat>::make({_1c2a101ab_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1c2a101ab_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1c2a101ab_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1c2a101ab_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1c2a101ab_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1c2a101ab_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1c2a101ab_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1c2a101ab_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1c2a101ab_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1c2a101ab_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1c2a101ab_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1c2a101ab_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1c2a101ab_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1c2a101ab_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1c2a101ab_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1c2a101ab_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1c2a101ab_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1c2a101ab_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1c2a101ab_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1c2a101ab_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1c2a101ab_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1c2a101ab_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1c2a101ab_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1c2a101ab_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1c2a101ab_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1c2a101ab_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1c2a101ab_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1c2a101ab_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1c2a101ab_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1c2a101ab_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1c2a101ab_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1c2a101ab_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1c2a101ab_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1c2a101ab_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1c2a101ab_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1c2a101ab_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1c2a101ab_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1c2a101ab_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1c2a101ab_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1c2a101ab_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1c2a101ab_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1c2a101ab_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1c2a101ab_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1c2a101ab_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1c2a101ab_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1c2a101ab_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1c2a101ab_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1c2a101ab_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1c2a101ab_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1c2a101ab_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1c2a101ab_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1c2a101ab_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1c2a101ab_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1c2a101ab_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1c2a101ab_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1c2a101ab_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1c2a101ab_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1c2a101ab_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1c2a101ab_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1c2a101ab_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1c2a101ab_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1c2b53ed1_BIT_SIZE = 0LL;
jule::Str _1c2b540be_SYS_INT = jule::Str();
jule::Str _1c2b541ac_SYS_UINT = jule::Str();
jule::Slice<jule::Any> _1dadb41b2_deads = nullptr;
jule::Slice<jule::Any> _1dadb9daa_checking = nullptr;
jule::Any _1dae08646_current = nullptr;
jule::Any _1dae08e60_main_current = nullptr;
jule::Array<jule::U64,12> _1c3511dee_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_204c62cd3_RangeTable> _204c2ed38_LETTER = _204c2ae00__L;
jule::U64 _2367d1259_STDIN = _236813a1c_get_std_handle(static_cast<jule::U64>(18446744073709551606LLU));
jule::Str _204710165_OS = jule::Str("windows", 7);
jule::Str _2047146ca_ARCH = jule::Str("arm64", 5);
jule::U64 _235ba6751_STDOUT = _236813a1c_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));
jule::U64 _2368137b9_STDERR = _236813a1c_get_std_handle(static_cast<jule::U64>(18446744073709551604LLU));
jule::Array<_2369b255b_accept_range,16> _2369b27d1_ACCEPT_RANGES = jule::Array<_2369b255b_accept_range,16>({_2369b255b_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_2369b255b_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_2369b255b_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_2369b255b_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_2369b255b_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _2046bed7d_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Array<jule::U8,256> _204c5d74b__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _2369b1ed9_FIRST = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});





std::ostream &operator<<(std::ostream &_Stream, _2369b255b_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204c6195d_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204c61e25_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204c62398_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204c62860_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204c62cd3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _204c66798_index(_204c665ab_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _204c668ca_append(_204c665ab_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _204c66a0c_string(_204c665ab_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _204c665ab_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _235b1ea71_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>> static__204c67722_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_235b1ea71_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _236800003_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _236815854__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>>(_235a66c82_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _236815aeb__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1c3c5a16e;
			};
			jule::Str _2617_name = _236801c80_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_236821b7e_Status> _2721_stat = ({
				auto except = static__204c67c72_of(_204c66ed5_join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>>(except.error);
				} jule::Ptr<_236821b7e_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_235b1ea71_DirEntry>(_235b1ea71_DirEntry{._field_name=_2617_name, ._field_stat=_2721_stat}));;
		}
	_iter_next_1c3c5a16e:;
	}
	_iter_end_1c3c5a16e:;;
	_236815d93__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__204c67854_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _236800003_utf16_from_str(_4026_path);;
	if ((!(_236815315_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_235a66c82_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__204c67986_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _236800003_utf16_from_str(_5426_path);;
	if ((!(_2368155ac_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_235a66c82_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2368215eb_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2368217d8_File> static__235aee8a8_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_2368217d8_File>(_2368217d8_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_2368217d8_File>> static__235b29ebb_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_2368217d8_File>>(jule::Any(),({
		auto except = static__23694409d_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_2368217d8_File>>(except.error);
		} jule::Ptr<_2368217d8_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__235b31c3c_read(jule::Str _6724_path) {
	jule::Ptr<_236821b7e_Status> _6813_s = ({
		auto except = static__204c67c72_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_236821b7e_Status>();});
	});;
	if ((!(_235ae0943_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_2368217d8_File> _7817_f = ({
		auto except = static__23694409d_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2368217d8_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _235b48407_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _2369437ea_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__235b353e4_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_2368217d8_File> _9217_f = ({
		auto except = static__23694409d_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2368217d8_File>();});
	});;
	({
		auto except = _2369436b8_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _235b48407_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _235b36c86_seek(_2368217d8_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _236819a89_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_235a66c82_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _235b48407_close(_2368217d8_File* _self_) {
	if ((_23681a2a4_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_235a66c82_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_2368217d8_File>> static__23694409d_open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _236800003_utf16_from_str(_2124_path);;
	jule::I64 _2313_handle = _2368144e0__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2368217d8_File>>(_235a66c82_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_2368217d8_File>>(jule::Any(),static__235aee8a8_new(static_cast<jule::U64>(static_cast<jule::U64>(_2313_handle))));
}



inline jule::VoidExceptional static__23697739a_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _236800003_utf16_from_str(_3426_path);;
	if ((!(_23681506d_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_235a66c82_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2369436b8_write(_2368217d8_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_2369b5a48_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _236800003_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _236817229_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_235a66c82_get_last_fs_error());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_23681a68e_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_235a66c82_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _2369437ea_read(_2368217d8_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	if (_2369b5a48_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _236817757_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_235a66c82_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _236812b09_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1c3c79897:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I64 _9721_size = _2369b3b89_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1c3c79897;
					};
					_2369b4063_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1c3c79897:;
				++it;
				goto _iter_begin_1c3c79897;
			}
			_iter_end_1c3c79897:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I64>(_236819e74_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_235a66c82_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _2368217d8_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _235b49804_is_dir(_236821b7e_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _235ae0943_is_reg(_236821b7e_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_236821b7e_Status>> static__204c67c72_of(jule::Str _1222_path) {
	jule::Slice<jule::U16> _1313_utf16_path = _236800003_utf16_from_str(_1222_path);;
	struct stat _1417_handle = (struct stat){};;
	jule::I64 _1513_code = _236814105_wstat((&(_1313_utf16_path[0LL])),(&(_1417_handle)));;
	if ((_1513_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_236821b7e_Status>>(jule::Any(),jule::new_ptr<_236821b7e_Status>(_236821b7e_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1417_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1417_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_236821b7e_Status>>(_235a66c82_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _236821b7e_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20472bc31_Cmd> static__20472c160_new(jule::Str _2023_path) {
	return jule::new_ptr<_20472bc31_Cmd>(_20472bc31_Cmd{._field_path=_2023_path});
}



inline jule::Exceptional<jule::I64> _204731582_spawn(_20472bc31_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _204cbe9dd___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _204cbe9dd___spawn(_20472bc31_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_204cbe27e_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_204cbe669_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_20472b4c2_get_last_process_error());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_20472b4c2_get_last_process_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _20472bc31_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2046db273_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _205139561_prec(_205139176_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c3d2813d:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c3d27e62:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c3d27ec8:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c3d27cdb:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c3d27d52:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1c3d2779c:;
			{
				return 0LLU;
			}
		}
		_match_end_1c3d273c3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _205139176_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20513e973_is_ok(_20513e566_File* _self_) {
	({
		auto except = static__204c67c72_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_236821b7e_Status>();});
	});
	return true;
}



inline void _20513ebe8_fill(_20513e566_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _20513ee5c_dir(_20513e566_File* _self_) {
	return _204c674ad_dir((*_self_)._field_path);
}



inline jule::Str _2051401c1_name(_20513e566_File* _self_) {
	return _204c6737b_base((*_self_)._field_path);
}



inline jule::U64 _205140435_addr(_20513e566_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _205140743_get_row(_20513e566_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1c3d2e82b;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1c3d2e82b:;
	}
	_iter_end_1c3d2e82b:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _20513e566_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205141634_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _2051474d6_push_err(_205146e42_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_205142118_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _205147805_push_err_tok(_205146e42_Lex* _self_, jule::Ptr<_205139176_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_205142118_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _2051479d1_lex(_205146e42_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_2051499d3_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_205139176_Token> _47321_token = _20514ad58_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1c3d34a40:;
	}
	_iter_end_1c3d34a40:;;
}



inline jule::Str _205147cde_id(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _2369b30b7_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_20513c575_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _2369b30b7_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_20513cab4_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_20513c575_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1c3d37d62:;
	}
	_iter_end_1c3d37d62:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _205148053_resume(_205146e42_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_20513c1ac_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c3d3cb58:;
						{
							_2051499d3_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c3d3c905:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c3d3becb:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1c3d3c52b:;
				};
				goto _iter_next_1c3d3ac77;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1c3d3b937;
					};
				}
			_iter_next_1c3d3b937:;
			}
			_iter_end_1c3d3b937:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1c3d3ac77:;
	}
	_iter_end_1c3d3ac77:;;
	return nullptr;
}



inline void _2051482c8_lex_line_comment(_205146e42_Lex* _self_, jule::Ptr<_205139176_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1c3d40595;
			};
		}
	_iter_next_1c3d40595:;
	}
	_iter_end_1c3d40595:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _20514854d_lex_range_comment(_205146e42_Lex* _self_, jule::Ptr<_205139176_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1c3d43a82;
			};
			if ((_55517_r == '\n')) {
				_2051499d3_new_line(&(*_self_));
				goto _iter_next_1c3d43a82;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c3d43a82:;
	}
	_iter_end_1c3d43a82:;;
	_2051474d6_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _20514885b_num(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_205145825_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_20514557d_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_205144060_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_205143cb8_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _205148b69_escape_seq(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c3d4e62b:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c3d4e3b7:;
			{
				_60217_seq=_205145e30_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c3d4e0dc:;
			{
				_60217_seq=_20514620a_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c3d4e153:;
			{
				_60217_seq=_2051464b3_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1c3d4dbe1:;
			{
				_60217_seq=_20514675a_byte_escape(_60130_txt);
			}
		}
		_match_end_1c3d4e010:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_2051474d6_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _205149021_get_rune(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _205148b69_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _2369b30b7_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _20514932e_lex_rune(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1c3d56a73;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_2051474d6_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_2051499d3_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _205149021_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_2369b4c34_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1c3d56a73;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1c3d56a73:;
	}
	_iter_end_1c3d56a73:;;
	if ((_64417_n == 0LL)) {
		_2051474d6_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_2051474d6_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _205149593_lex_str(_205146e42_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1c3d5cc44;
			};
			if ((_68917_ch == '\n')) {
				_2051499d3_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_2051474d6_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _205149021_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_2369b4c34_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1c3d5cc44;
			};
		}
	_iter_next_1c3d5cc44:;
	}
	_iter_end_1c3d5cc44:;;
	return _68117_s;
}



inline jule::Bool _205149807_is_first_token_of_line(_205146e42_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _2051499d3_new_line(_205146e42_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _205149ecd_is_op(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_205139176_Token>& _72267_t) {
	if ((!(_20514249d_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _20514a385_lex_basic_ops(_205146e42_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_205139176_Token>& _73350_tok) {
	{
		auto &expr = _205141b2e_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1c3d6539a:;
		if (it != expr.end()) {
			_205141634_KindPair &_73416_pair = *it;
			{
				if (_205149ecd_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1c3d6539a:;
			++it;
			goto _iter_begin_1c3d6539a;
		}
		_iter_end_1c3d6539a:;
	};
	return false;
}



inline jule::Bool _20514a73c_lex_id(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_205139176_Token>& _74344_t) {
	jule::Str _74413_lex = _205147cde_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _20514aae4_lex_num(_205146e42_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_205139176_Token>& _75445_t) {
	jule::Str _75513_lex = _20514885b_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_205139176_Token> _20514ad58_token(_205146e42_Lex* _self_) {
	jule::Ptr<_205139176_Token> _76717_t = jule::new_ptr<_205139176_Token>(_205139176_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _205148053_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_20514aae4_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1c3d6c094:;
			{
				goto _match_end_1c3d6b33a;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1c3d6b59e:;
			{
				_76717_t.get()._field_kind=_20514932e_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1c3d6b615:;
			{
				_76717_t.get()._field_kind=_205149593_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_20514249d_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1c3d6cb22:;
			{
				_2051482c8_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_20514249d_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1c3d6cb88:;
			{
				_20514854d_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_205149ecd_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _205149ecd_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _205149ecd_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _205149ecd_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _205149ecd_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _205149ecd_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _20514a385_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1c3d6cbee:;
			{
				goto _match_end_1c3d6b33a;
			}
		}
		else if (_20514a73c_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1c3d6cc65:;
			{
				{
					auto &expr = _205141931_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1c3d7460c:;
					if (it != expr.end()) {
						_205141634_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1c3d7460c;
							};
						}
						_iter_next_1c3d7460c:;
						++it;
						goto _iter_begin_1c3d7460c;
					}
					_iter_end_1c3d7460c:;
				};
			}
		}
		else {
			_case_begin_1c3d6b4a0:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _2369b30b7_decode_rune(_77213_txt);
				_2051474d6_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1c3d6b33a:;
	};
	(*_self_)._field_column+=_2369b4c34_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _205146e42_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20500541b_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ed6496_is_decl(_204ec155d_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_205152579_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_20515028b_FnDecl>>() || _match_expr.type_is<jule::Ptr<_2051534e2_StructDecl>>() || _match_expr.type_is<jule::Ptr<_205153aec_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_2051518a8_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_205152b84_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_205151e6e_UseDecl>>() || _match_expr.type_is<jule::Ptr<_205150478_VarDecl>>() || _match_expr.type_is<jule::Ptr<_204ec8b92_TypeDecl>>()) {
			_case_begin_1c3e00237:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c3deeae9:;
			{
				return false;
			}
		}
		_match_end_1c3deea94:;
	};
}



inline jule::Bool _204edade6_is_directive(_204ec155d_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_204ec174a_Directive>>()) {
			_case_begin_1c3e01d2c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c3e016de:;
			{
				return false;
			}
		}
		_match_end_1c3e01689:;
	};
}



inline jule::Bool _204edba2e_is_impl(_204ec155d_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_205154207_Impl>>()) {
			_case_begin_1c3e02b96:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c3e02558:;
			{
				return false;
			}
		}
		_match_end_1c3e02503:;
	};
}



inline jule::Bool _204edc2c1_is_use_decl(_204ec155d_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_205151e6e_UseDecl>>()) {
			_case_begin_1c3e03a32:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c3e033e4:;
			{
				return false;
			}
		}
		_match_end_1c3e0338e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _204ec155d_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec174a_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec8b92_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204edce09_is_prim(_204ec8d7e_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _204ec8d7e_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec906b_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec9258_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec9445_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec9632_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee278d_is_unsafe(_204ec981e_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204ec981e_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee3030_auto_sized(_204ec9a0b_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _204ec9a0b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204ec9be8_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2050bb834_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2050bba21_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514b40d_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514b5ea_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee7e03_is_nil(_20514ba18_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _20514ba18_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514bc05_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514bde2_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee8e26_is_self(_20514c0ce_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _20514c0ce_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514c2bb_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514c4a8_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514c695_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514c882_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514ca6e_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514cc5b_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204eeaea0_unhandled(_20514ce48_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _205006ebc_ignored(_20514ce48_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _20514ce48_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20500884d_is_targeted(_20514d135_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _20514d135_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514d322_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _205009134_is_empty(_20514d50e_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _20514d50e_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514d6eb_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2050a11ba_is_empty(_20514d8d8_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _20514d8d8_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514b7d7_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514e048_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514e235_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514e422_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514e60e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514e7eb_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514e9d8_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514ebc5_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20514edb2_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2050c276e_is_self(_20515009e_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _2050c5772_is_ref(_20515009e_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _20515009e_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2050d51dd_is_anon(_20515028b_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _20515028b_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205150478_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205150665_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _205104185_is_inf(_205150852_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _205150852_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20511b983_is_while_next(_205150a3e_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _205150a3e_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205150c2b_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205150e18_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205151105_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2051512e2_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2051514ce_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2051516bb_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2051518a8_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205151a95_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205151c82_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205151e6e_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204ee88b5_auto_expr(_20515215b_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _20515215b_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20511c940_default_typed(_205152579_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _205152579_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205152b84_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2051534e2_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205153aec_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20515456a_is_trait_impl(_205154207_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _2051547ce_is_struct_impl(_205154207_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _205154207_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dad01550_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dad01819_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dad4883e_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1dad497eb_stop(_1dad49169_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1dad49a60_stopped(_1dad49169_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1dad49cc4_finished(_1dad49169_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1dad4a038_is_last_st(_1dad49169_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1dad4a357_push_err(_1dad49169_ScopeParser* _self_, jule::Ptr<_205139176_Token> _18927_token, jule::Str _18942_fmt) {
	_1dad66252_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _1dad4a676_push_suggestion(_1dad49169_ScopeParser* _self_, jule::Str _19434_fmt, jule::Slice<jule::Any> _19447_args) {
	_1dad66571_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,jule::Any(_19447_args));
}



inline void _1dad4a8eb_insert_as_next(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1dad4883e_Stmt>(_1dad4883e_Stmt{._field_tokens=_19838_tokens});
}



inline jule::Ptr<_1dad4883e_Stmt> _1dad4ab60_next(_1dad49169_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_20514edb2_ScopeTree> _1dad4b017_build_scope(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _20835_tokens, jule::Ptr<_205139176_Token> _20857_end) {
	jule::Ptr<_20514edb2_ScopeTree> _20917_s = _1dad4771c_new_scope();;
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_1dad49169_ScopeParser _21217_ssp = _1dad49169_ScopeParser{._field_p=(*_self_)._field_p};;
	_1dad54b8b_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1dad4b325_build_var_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _21936_tokens) {
	jule::Ptr<_205150478_VarDecl> _22017_v = _1dad68cc1_build_var((*_self_)._field_p, _21936_tokens);;
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1dad4b633_build_ret_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _22535_tokens) {
	jule::Ptr<_205150665_RetSt> _22617_st = jule::new_ptr<_205150665_RetSt>(_205150665_RetSt{._field_token=_22535_tokens[0LL]});;
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _22535_tokens);
	};
	return jule::Any(_22617_st);
}



inline jule::Any _1dad4b941_build_while_next_iter(_1dad49169_ScopeParser* _self_, jule::Ptr<_1dad4883e_Stmt>& _23645_s) {
	jule::Ptr<_205150852_Iter> _23717_it = jule::new_ptr<_205150852_Iter>(_205150852_Iter{._field_token=_23645_s.get()._field_tokens[0LL]});;
	jule::Slice<jule::Ptr<_205139176_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_205150a3e_WhileKind> _24117_kind = jule::new_ptr<_205150a3e_WhileKind>(_205150a3e_WhileKind{});;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _24017_tokens);
	};
	if (_1dad4a038_is_last_st(&(*_self_))) {
		_1dad4a357_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24017_tokens=_1dad4ab60_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_205139176_Token>> _25317_st_tokens = _1dad56187_get_block_expr(_24017_tokens);;
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1dad4883e_Stmt> _25521_stmt = jule::new_ptr<_1dad4883e_Stmt>(_1dad4883e_Stmt{._field_terminated=_23645_s.get()._field_terminated, ._field_tokens=_25317_st_tokens});;
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=jule::Any(_1dad5486c_build_st(&(*_self_), _25521_stmt));
	};
	jule::I64 _26317_i = _25317_st_tokens.len();;
	jule::Slice<jule::Ptr<_205139176_Token>> _26417_block_tokens = _1dad63e0e_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);;
	if ((_26417_block_tokens == nullptr)) {
		_1dad497eb_stop(&(*_self_));
		_1dad4a357_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1dad4a357_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_scope=_1dad4b017_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_205150a3e_WhileKind> _1dad4bc4e_build_while_iter_kind(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _28145_tokens) {
	return jule::new_ptr<_205150a3e_WhileKind>(_205150a3e_WhileKind{._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _28145_tokens)});
}



inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad4c07e_get_range_kind_keys_tokens(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _28818_vars;;
	jule::Slice<_2046db273_Log> _28824_errs;;
	std::tie(_28818_vars,_28824_errs) = _1dad645d5_parts(_28750_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_205150478_VarDecl> _1dad4c39d_build_range_kind_key(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_205150478_VarDecl> _29717_key = jule::new_ptr<_205150478_VarDecl>(_205150478_VarDecl{._field_token=_29344_tokens[0LL]});;
	if ((_29717_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1dad4a357_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1dad4a357_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad4a357_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_205150478_VarDecl>> _1dad4c6ab_build_range_kind_keys(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_205150478_VarDecl>> _31917_keys = nullptr;;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1c3e73024:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _32021_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1dad4c39d_build_range_kind_key(&(*_self_), _32021_tokens));;
			}
			_iter_next_1c3e73024:;
			++it;
			goto _iter_begin_1c3e73024;
		}
		_iter_end_1c3e73024:;
	};
	return _31917_keys;
}



inline void _1dad4c9ec_setup_range_kind_keys_plain(_1dad49169_ScopeParser* _self_, jule::Ptr<_205150c2b_RangeKind>& _32651_rng, jule::Slice<jule::Ptr<_205139176_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _32717_key_tokens = _1dad4c07e_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);;
	if ((_32717_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_key_tokens.len() > 2LL)) {
		_1dad4a357_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_205150478_VarDecl>> _33417_keys = _1dad4c6ab_build_range_kind_keys(&(*_self_), _32717_key_tokens);;
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	};
}



inline void _1dad4cd4e_setup_range_kind_keys_explicit(_1dad49169_ScopeParser* _self_, jule::Ptr<_205150c2b_RangeKind>& _34154_rng, jule::Slice<jule::Ptr<_205139176_Token>>& _34176_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _34317_rang = _1dad63e0e_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);;
	if ((_34217_i < _34176_tokens.len())) {
		_1dad4a357_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1dad4c9ec_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1dad4d17e_setup_range_kind_keys(_1dad49169_ScopeParser* _self_, jule::Ptr<_205150c2b_RangeKind>& _35045_rng, jule::Slice<jule::Ptr<_205139176_Token>>& _35067_tokens) {
	if ((_35067_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1dad4a357_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1dad4cd4e_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;;
	};
	_1dad4c9ec_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_205150c2b_RangeKind> _1dad4d5d0_build_range_iter_kind(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _36245_var_tokens, jule::Slice<jule::Ptr<_205139176_Token>>& _36314_expr_tokens, jule::Ptr<_205139176_Token>& _36342_in_token) {
	jule::Ptr<_205150c2b_RangeKind> _36417_rng = jule::new_ptr<_205150c2b_RangeKind>(_205150c2b_RangeKind{._field_in_token=_36342_in_token});;
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1dad4a357_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	};
	_36417_rng.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1dad4d17e_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	};
	return _36417_rng;
}



inline jule::Any _1dad4d987_build_common_iter_kind(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _37846_tokens, jule::Ptr<_205139176_Token>& _37865_err_tok) {
	jule::I64 _37917_brace_n = 0LL;;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1c3e81395:;
		if (it != expr.end()) {
			jule::I64 _38014_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _38021_tok = *it;
			{
				if ((_38021_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38021_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c3e8262c:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1c3e81395;
							}
						}
						else {
							_case_begin_1c3e82022:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1c3e82264:;
					};
				};
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1c3e81395;
				};
				{
					auto &_match_expr{ _38021_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1c3e8284c:;
						{
							jule::Slice<jule::Ptr<_205139176_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_38014_i);;
							jule::Slice<jule::Ptr<_205139176_Token>> _39825_expr_tokens = _37846_tokens.slice((_38014_i + 1LL));;
							return jule::Any(_1dad4d5d0_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_38021_tok));
						}
					}
					_match_end_1c3e83122:;
				};
			}
			_iter_next_1c3e81395:;
			++it;
			_38014_i++;
			goto _iter_begin_1c3e81395;
		}
		_iter_end_1c3e81395:;
	};
	return jule::Any(_1dad4bc4e_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1dad4dc95_build_common_iter(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _40540_tokens) {
	jule::Ptr<_205150852_Iter> _40617_it = jule::new_ptr<_205150852_Iter>(_205150852_Iter{._field_token=_40540_tokens[0LL]});;
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1dad497eb_stop(&(*_self_));
		_1dad4a357_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _41617_expr_tokens = _1dad56187_get_block_expr(_40540_tokens);;
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=jule::Any(_1dad4d987_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token));
	};
	jule::I64 _42017_i = _41617_expr_tokens.len();;
	jule::Slice<jule::Ptr<_205139176_Token>> _42117_scope_tokens = _1dad63e0e_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);;
	if ((_42117_scope_tokens == nullptr)) {
		_1dad497eb_stop(&(*_self_));
		_1dad4a357_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42017_i < _40540_tokens.len())) {
		_1dad4a357_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	};
	_40617_it.get()._field_scope=_1dad4b017_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1dad4e0a3_build_iter_st(_1dad49169_ScopeParser* _self_, jule::Ptr<_1dad4883e_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return jule::Any(_1dad4b941_build_while_next_iter(&(*_self_), _43537_st));
	};
	return jule::Any(_1dad4dc95_build_common_iter(&(*_self_), _43537_st.get()._field_tokens));
}



inline jule::Any _1dad4e3b1_build_break_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _44238_tokens) {
	jule::Ptr<_205150e18_BreakSt> _44317_brk = jule::new_ptr<_205150e18_BreakSt>(_205150e18_BreakSt{._field_token=_44238_tokens[0LL]});;
	if ((_44238_tokens.len() > 1LL)) {
		if ((_44238_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1dad4a357_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1dad4a676_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1dad4a357_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_44317_brk);
}



inline jule::Any _1dad4e6be_build_cont_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _46037_tokens) {
	jule::Ptr<_205151105_ContSt> _46117_cont = jule::new_ptr<_205151105_ContSt>(_205151105_ContSt{._field_token=_46037_tokens[0LL]});;
	if ((_46037_tokens.len() > 1LL)) {
		if ((_46037_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1dad4a357_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1dad4a676_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1dad4a357_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_2051512e2_If> _1dad4e9cc_build_if(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _47832_tokens) {
	jule::Ptr<_2051512e2_If> _47917_model = jule::new_ptr<_2051512e2_If>(_2051512e2_If{._field_token=_47832_tokens[0LL]});;
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_205139176_Token>> _48317_expr_tokens = _1dad56187_get_block_expr(_47832_tokens);;
	jule::I64 _48417_i = 0LL;;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1dad4a357_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I64>(_48317_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _49017_scope_tokens = _1dad63e0e_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);;
	if ((_49017_scope_tokens == nullptr)) {
		_1dad497eb_stop(&(*_self_));
		_1dad4a357_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_205139176_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];;
	if ((_48417_i < _47832_tokens.len())) {
		if ((_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1dad4a357_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		};
	};
	_47917_model.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1dad4b017_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_2051514ce_Else> _1dad4ecda_build_else(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _51134_tokens) {
	jule::Ptr<_2051514ce_Else> _51217_els = jule::new_ptr<_2051514ce_Else>(_2051514ce_Else{._field_token=_51134_tokens[0LL]});;
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I64 _51617_i = 0LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _51717_scope_tokens = _1dad63e0e_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);;
	if ((_51717_scope_tokens == nullptr)) {
		if ((_51617_i < _51134_tokens.len())) {
			_1dad4a357_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1dad497eb_stop(&(*_self_));
			_1dad4a357_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1dad4a676_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51617_i < _51134_tokens.len())) {
		_1dad4a357_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	};
	_51217_els.get()._field_scope=_1dad4b017_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1dad500e8_build_if_else_chain(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _53542_tokens) {
	jule::Ptr<_2051516bb_Conditional> _53617_chain = jule::new_ptr<_2051516bb_Conditional>(_2051516bb_Conditional{._field_head=_1dad4e9cc_build_if(&(*_self_), _53542_tokens)});;
	if ((_53617_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53542_tokens.len() != 0LL)) {
		{
			if ((_53542_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1c3ea2b58;
			};
			if (((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_2051512e2_If> _54825_elif = _1dad4e9cc_build_if(&(*_self_), _53542_tokens);;
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);;
				goto _iter_next_1c3ea2b58;
			};
			_53617_chain.get()._field_default=_1dad4ecda_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1c3ea2b58;
		}
	_iter_next_1c3ea2b58:;
	}
	_iter_end_1c3ea2b58:;;
	return jule::Any(_53617_chain);
}



inline jule::Any _1dad50406_build_co_call_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _55839_tokens) {
	jule::Ptr<_20514bde2_CoExpr> _55917_c = jule::new_ptr<_20514bde2_CoExpr>(_20514bde2_CoExpr{._field_token=_55839_tokens[0LL]});;
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1dad50714_build_goto_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _56737_tokens) {
	jule::Ptr<_20514e60e_GotoSt> _56817_gt = jule::new_ptr<_20514e60e_GotoSt>(_20514e60e_GotoSt{._field_token=_56737_tokens[0LL]});;
	if ((_56737_tokens.len() == 1LL)) {
		_1dad4a357_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_56737_tokens.len() > 2LL)) {
		_1dad4a357_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_205139176_Token> _57717_ident_token = _56737_tokens[1LL];;
	if ((_57717_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad4a357_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	};
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1dad50a22_build_fall_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _58737_tokens) {
	jule::Ptr<_20514e7eb_FallSt> _58817_fll = jule::new_ptr<_20514e7eb_FallSt>(_20514e7eb_FallSt{._field_token=_58737_tokens[0LL]});;
	if ((_58737_tokens.len() > 1LL)) {
		_1dad4a357_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return jule::Any(_58817_fll);
}



inline jule::Any _1dad50d30_build_type_alias_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _59743_tokens) {
	jule::Ptr<_2051518a8_TypeAliasDecl> _59817_tad = _1dad67e79_build_type_alias_decl((*_self_)._field_p, _59743_tokens);;
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1dad51292_push_case_expr(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _60337_tokens, jule::Ptr<_205139176_Token> _60359_token, jule::Bool _6049_type_match, jule::Slice<jule::Ptr<_2050bba21_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;;
	};
	if (_6049_type_match) {
		jule::I64 _61021_i = 0LL;;
		jule::Ptr<_204ec8b92_TypeDecl> _61122_t;;
		jule::Bool _61125_ok;;
		std::tie(_61122_t,_61125_ok) = _1dad67b6b_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_2050bba21_Expr>(_2050bba21_Expr{._field_token=_60337_tokens[0LL], ._field_kind=jule::Any(_61122_t)}));;
			if ((_61021_i < _60337_tokens.len())) {
				_1dad4a357_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1dad6687e_build_expr((*_self_)._field_p, _60337_tokens));;
}



inline jule::Slice<jule::Ptr<_2050bba21_Expr>> _1dad51649_build_case_exprs(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _62640_tokens, jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_2050bba21_Expr>>::alloc(0LL,1LL);;
	jule::I64 _62917_brace_n = 0LL;;
	jule::I64 _63017_j = 0LL;;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1c3eb60ab:;
		if (it != expr.end()) {
			jule::I64 _63114_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _63121_tok = *it;
			{
				if ((_63121_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63121_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1c3eb72cc:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1c3eb6bc2:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1c3eb6e14:;
					};
					goto _iter_next_1c3eb60ab;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1c3eb60ab;
				};
				{
					
					if (((_63121_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63121_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1c3eb74ec:;
						{
							jule::Slice<jule::Ptr<_205139176_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_63114_i);;
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1dad4a357_push_err(&(*_self_), _63121_tok,jule::Str("expression missing", 18));
							} else {
								_1dad51292_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							};
							_63017_j=static_cast<jule::I64>((_63114_i + 1LL));
						}
					}
					else if ((_63121_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1c3eb7c7d:;
						{
							_1dad51292_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_63114_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1c3eb77b6:;
				};
			}
			_iter_next_1c3eb60ab:;
			++it;
			_63114_i++;
			goto _iter_begin_1c3eb60ab;
		}
		_iter_end_1c3eb60ab:;
	};
	_1dad4a357_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_20514edb2_ScopeTree> _1dad51957_build_case_scope(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _66540_tokens) {
	jule::I64 _66617_n = 0LL;;
	for (;;) {
		{
			jule::I64 _66821_i = 0LL;;
			jule::Slice<jule::Ptr<_205139176_Token>> _66922_next;;
			std::tie(_66922_next,std::ignore) = _1dad48542_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1c3ebc4be;
			};
			jule::Ptr<_205139176_Token> _67317_tok = _66922_next[0LL];;
			if (((_67317_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1)))) {
				_66617_n+=_66821_i;
				goto _iter_next_1c3ebc4be;
			};
			jule::Slice<jule::Ptr<_205139176_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);;
			jule::Ptr<_20514edb2_ScopeTree> _67921_scope = _1dad4b017_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);;
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1c3ebc4be:;
	}
	_iter_end_1c3ebc4be:;;
	jule::Ptr<_205139176_Token> _68317_end = jule::Ptr<_205139176_Token>();;
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	};
	jule::Ptr<_20514edb2_ScopeTree> _68717_scope = _1dad4b017_build_scope(&(*_self_), _66540_tokens,_68317_end);;
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_205151a95_Case>,jule::Bool> _1dad51d0e_build_case(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _69234_tokens, jule::Bool _69252_type_match) {
	jule::Ptr<_205151a95_Case> _69317_c = jule::new_ptr<_205151a95_Case>(_205151a95_Case{._field_token=_69234_tokens[0LL]});;
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1dad51649_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_1dad51957_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_205151a95_Case>>,jule::Ptr<_2051514ce_Else>> _1dad521b6_build_cases(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _70334_tokens, jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_205151a95_Case>> _70417_cases = nullptr;;
	jule::Ptr<_2051514ce_Else> _70517_def = nullptr;;
	jule::Bool _70617_def_not_last = false;;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_205139176_Token> _70821_tok = _70334_tokens[0LL];;
			if (((_70821_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1dad4a357_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1c3ec6088;
			};
			jule::Ptr<_205151a95_Case> _71322_c;;
			jule::Bool _71325_is_default;;
			std::tie(_71322_c,_71325_is_default) = _1dad51d0e_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_2051514ce_Else>(_2051514ce_Else{._field_token=_71322_c.get()._field_token, ._field_scope=_71322_c.get()._field_scope});
				} else {
					_1dad4a357_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_70617_def_not_last=(_70617_def_not_last || (_70517_def != nullptr));
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);;
			};
		}
	_iter_next_1c3ec6088:;
	}
	_iter_end_1c3ec6088:;;
	if (_70617_def_not_last) {
		_1dad4a357_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_205151c82_MatchCase> _1dad524c4_build_match_case(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _73739_tokens) {
	jule::Ptr<_205151c82_MatchCase> _73817_m = jule::new_ptr<_205151c82_MatchCase>(_205151c82_MatchCase{._field_token=_73739_tokens[0LL]});;
	_73739_tokens=_73739_tokens.slice(1LL);
	if (((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _74817_expr_tokens = _1dad56187_get_block_expr(_73739_tokens);;
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1dad4a357_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75517_i = _74817_expr_tokens.len();;
	jule::Slice<jule::Ptr<_205139176_Token>> _75617_block_toks = _1dad63e0e_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);;
	if ((_75617_block_toks == nullptr)) {
		_1dad497eb_stop(&(*_self_));
		_1dad4a357_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1dad4a676_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75517_i < _73739_tokens.len())) {
		_1dad4a357_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	};
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1dad521b6_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_20514edb2_ScopeTree> _1dad527d2_build_scope_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;;
	jule::Bool _77217_is_deferred = false;;
	jule::Ptr<_205139176_Token> _77317_token = _77037_tokens[0LL];;
	if ((_77317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1dad4a357_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77317_token=_77037_tokens[0LL];
		if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1dad4a357_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1dad4a357_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _79917_i = 0LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _80017_scope_tokens = _1dad63e0e_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);;
	if ((_80017_scope_tokens == nullptr)) {
		_1dad4a357_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_79917_i < _77037_tokens.len())) {
		_1dad4a357_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20514edb2_ScopeTree> _80717_scope = _1dad4b017_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);;
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_20514e422_LabelSt> _1dad52ae0_build_label_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _81338_tokens) {
	jule::Ptr<_20514e422_LabelSt> _81417_lbl = jule::new_ptr<_20514e422_LabelSt>(_20514e422_LabelSt{._field_token=_81338_tokens[0LL], ._field_ident=_81338_tokens[0LL].get()._field_kind});;
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1dad4a8eb_insert_as_next(&(*_self_), _81338_tokens);
	};
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1dad52ded_build_id_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	};
	jule::Ptr<_205139176_Token> _83317_token = _82835_tokens[1LL];;
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c3edd402:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_1dad52ae0_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1c3edde08:;
	};
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_1dad622b4_AssignInfo> _1dad5320b_build_assign_info(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _84241_tokens) {
	jule::Ptr<_1dad622b4_AssignInfo> _84317_info = jule::new_ptr<_1dad622b4_AssignInfo>(_1dad622b4_AssignInfo{._field_ok=true});;
	jule::I64 _84617_brace_n = 0LL;;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1c3ee103c:;
		if (it != expr.end()) {
			jule::I64 _84714_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _84721_token = *it;
			{
				if ((_84721_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _84721_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c3ee2318:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1c3ee1c0d:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1c3ee1e50:;
					};
				};
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1c3ee278b:;
						{
							goto _iter_next_1c3ee103c;
						}
					}
					else if ((_84721_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1c3ee2802:;
						{
							goto _iter_next_1c3ee103c;
						}
					}
					else if ((!(_20513db81_is_assign_op(_84721_token.get()._field_kind)))) {
						_case_begin_1c3ee2868:;
						{
							goto _iter_next_1c3ee103c;
						}
					}
					_match_end_1c3ee2538:;
				};
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_84714_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				};
				_84317_info.get()._field_setter=_84721_token;
				if (((_84714_i + 1LL) >= _84241_tokens.len())) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_20513d8d9_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1c3ee103c;
				};
				_84317_info.get()._field_r=_84241_tokens.slice((_84714_i + 1LL));
				if (_20513d8d9_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1dad4a357_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1c3ee103c;
			}
			_iter_next_1c3ee103c:;
			++it;
			_84714_i++;
			goto _iter_begin_1c3ee103c;
		}
		_iter_end_1c3ee103c:;
	};
	return _84317_info;
}



inline jule::Ptr<_20514e9d8_AssignLeft> _1dad53519_build_assign_l(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _89038_tokens) {
	jule::Ptr<_20514e9d8_AssignLeft> _89117_l = jule::new_ptr<_20514e9d8_AssignLeft>(_20514e9d8_AssignLeft{._field_token=_89038_tokens[0LL]});;
	if ((_89038_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	};
	_89117_l.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_20514e9d8_AssignLeft>> _1dad53827_build_assign_ls(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_20514e9d8_AssignLeft>> _90417_lefts = nullptr;;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1c3eea19a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _90521_part = *it;
			{
				jule::Ptr<_20514e9d8_AssignLeft> _90621_l = _1dad53519_build_assign_l(&(*_self_), _90521_part);;
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);;
			}
			_iter_next_1c3eea19a:;
			++it;
			goto _iter_begin_1c3eea19a;
		}
		_iter_end_1c3eea19a:;
	};
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_20514ebc5_AssignSt>,jule::Bool> _1dad53b35_build_plain_assign(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _91342_tokens) {
	jule::Ptr<_1dad622b4_AssignInfo> _91417_info = _1dad5320b_build_assign_info(&(*_self_), _91342_tokens);;
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_20514ebc5_AssignSt> _91917_assign = jule::new_ptr<_20514ebc5_AssignSt>(_20514ebc5_AssignSt{._field_setter=_91417_info.get()._field_setter});;
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _92318_parts;;
	jule::Slice<_2046db273_Log> _92325_errs;;
	std::tie(_92318_parts,_92325_errs) = _1dad645d5_parts(_91417_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	};
	_91917_assign.get()._field_left=_1dad53827_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1dad6687e_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	};
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_20514ebc5_AssignSt>,jule::Bool> _1dad53e43_build_decl_assign(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_205139176_Token> _94317_token = _93740_tokens[0LL];;
	if (((_94317_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_20514ebc5_AssignSt> _94817_assign = jule::new_ptr<_20514ebc5_AssignSt>(_20514ebc5_AssignSt{._field_declarative=true});;
	jule::I64 _95217_i = 0LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _95317_rang = _1dad63e0e_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);;
	if ((_95317_rang == nullptr)) {
		_1dad4a357_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95217_i + 1LL) < _93740_tokens.len())) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_205139176_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);;
		_94817_assign.get()._field_right=_1dad6687e_build_expr((*_self_)._field_p, _96021_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _96518_parts;;
	jule::Slice<_2046db273_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _1dad645d5_parts(_95317_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1c4007383:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _97121_part = *it;
			{
				jule::Bool _97221_is_mut = false;;
				jule::Bool _97321_is_ref = false;;
				_94317_token=_97121_part[0LL];
				if ((_94317_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97221_is_mut=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1dad4a357_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1c4007383;
					};
				};
				if (((_97121_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97121_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97321_is_ref=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1dad4a357_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1c4007383;
					};
				};
				if ((((_97121_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97121_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97121_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1dad4a357_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1c4007383;
				};
				jule::Ptr<_20514e9d8_AssignLeft> _100121_l = _1dad53519_build_assign_l(&(*_self_), _97121_part);;
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);;
			}
			_iter_next_1c4007383:;
			++it;
			goto _iter_begin_1c4007383;
		}
		_iter_end_1c4007383:;
	};
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_20514ebc5_AssignSt>,jule::Bool> _1dad54251_build_assign_st(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _101039_tokens) {
	jule::Ptr<_20514ebc5_AssignSt> _101059_st = jule::Ptr<_20514ebc5_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_1dad6265a_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	};
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c401107e:;
			{
				std::tie(_101059_st,_101074_ok) = _1dad53e43_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1c4010622:;
			{
				std::tie(_101059_st,_101074_ok) = _1dad53b35_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1c4010bd8:;
	};
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _1dad5455e_build_use_expr(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1dad4a357_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_20514b40d_UseExpr> _103117_ue = jule::new_ptr<_20514b40d_UseExpr>(_20514b40d_UseExpr{._field_token=_102538_tokens[0LL]});;
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1dad6687e_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1dad5486c_build_st(_1dad49169_ScopeParser* _self_, jule::Ptr<_1dad4883e_Stmt>& _104032_st) {
	jule::Ptr<_205139176_Token> _104117_token = _104032_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1dad52ded_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return jule::Any(_104322_s);
		};
	};
	jule::Ptr<_20514ebc5_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1dad54251_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c401b1bb:;
			{
				return jule::Any(_1dad5455e_build_use_expr(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1c401ba5c:;
			{
				return jule::Any(_1dad4b325_build_var_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1c401b4a7:;
			{
				return jule::Any(_1dad4b633_build_ret_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1c401b51d:;
			{
				return jule::Any(_1dad4e0a3_build_iter_st(&(*_self_), _104032_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1c401b584:;
			{
				return jule::Any(_1dad4e3b1_build_break_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1c401bc05:;
			{
				return jule::Any(_1dad4e6be_build_cont_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c401bc6b:;
			{
				return jule::Any(_1dad500e8_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1c401bcd2:;
			{
				return jule::Any(_1dad50406_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c401bd48:;
			{
				return jule::Any(_1dad50714_build_goto_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c401bdae:;
			{
				return jule::Any(_1dad50a22_build_fall_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c401be25:;
			{
				return jule::Any(_1dad50d30_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c401be8b:;
			{
				return jule::Any(_1dad524c4_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c401c002:;
			{
				return jule::Any(_1dad527d2_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c401c068:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1dad527d2_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				};
			}
		}
		_match_end_1c401b7a4:;
	};
	jule::Ptr<_2050bba21_Expr> _109017_expr = _1dad6687e_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	};
	_1dad4a357_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1dad54b8b_build(_1dad49169_ScopeParser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _109829_tokens, jule::Ptr<_20514edb2_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1dad48bd5_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1dad4a038_is_last_st(&(*_self_)))) && (!(_1dad49cc4_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1dad4883e_Stmt> _110721_st = _1dad4ab60_next(&(*_self_));;
			jule::Any _110821_data = _1dad5486c_build_st(&(*_self_), _110721_st);;
			if ((_110821_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_204ec155d_Node{._field_token=_110721_st.get()._field_tokens[0LL], ._field_data=jule::Any(_110821_data)});;
			};
			if (_1dad49a60_stopped(&(*_self_))) {
				goto _iter_end_1c4026825;
			};
		}
	_iter_next_1c4026825:;
	}
	_iter_end_1c4026825:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dad49169_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dad55a38_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1dad57782_push_err(_1dad56e8a_ExprBuilder* _self_, jule::Ptr<_205139176_Token> _21827_token, jule::Str _21842_fmt, jule::Slice<jule::Any> _21855_args) {
	_1dad66252_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,jule::Any(_21855_args));
}



inline void _1dad57aa1_push_suggestion(_1dad56e8a_ExprBuilder* _self_, jule::Str _22334_fmt, jule::Slice<jule::Any> _22347_args) {
	_1dad66571_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,jule::Any(_22347_args));
}



inline jule::Ptr<_20514b5ea_TupleExpr> _1dad57dae_build_tuple(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>& _22735_parts) {
	jule::Ptr<_20514b5ea_TupleExpr> _22817_tuple = jule::new_ptr<_20514b5ea_TupleExpr>(_20514b5ea_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_2050bba21_Expr>>::alloc(0LL,_22735_parts.len())});;
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1c402c5c8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _23121_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_1dad61868_build_from_tokens(&(*_self_), _23121_part));;
			}
			_iter_next_1c402c5c8:;
			++it;
			goto _iter_begin_1c402c5c8;
		}
		_iter_end_1c402c5c8:;
	};
	return _22817_tuple;
}



inline jule::Ptr<_20514ba18_LitExpr> _1dad581bc_build_lit(_1dad56e8a_ExprBuilder* _self_, jule::Ptr<_205139176_Token> _23728_token) {
	return jule::new_ptr<_20514ba18_LitExpr>(_20514ba18_LitExpr{._field_token=_23728_token, ._field_value=_23728_token.get()._field_kind});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad584ca_build_primitive_type(_1dad56e8a_ExprBuilder* _self_, jule::Ptr<_205139176_Token>& _24440_token) {
	return _1dad757c2_build_prim_type(_24440_token);
}



inline jule::Any _1dad587d8_build_single(_1dad56e8a_ExprBuilder* _self_, jule::Ptr<_205139176_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c4030a60:;
			{
				return jule::Any(_1dad581bc_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c4030ae8:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_20514c4a8_VariadicExpr>(_20514c4a8_VariadicExpr{._field_token=_24835_token}));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c4030b5e:;
			{
				return jule::Any(_1dad569b2_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c4030bc5:;
			{
				return jule::Any(_1dad584ca_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1c40309a5:;
	};
	_1dad57782_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_20514c0ce_IdentExpr> _1dad58ae6_build_cpp_linked_ident(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _26946_tokens) {
	if ((_26946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_26946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1dad57782_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_205139176_Token> _27717_token = _26946_tokens[2LL];;
	if ((_27717_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad57782_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20514c0ce_IdentExpr> _28317_expr = _1dad569b2_build_ident_expr(_27717_token);;
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_20514c2bb_UnaryExpr> _1dad58e04_build_unary(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _28834_tokens) {
	jule::Ptr<_205139176_Token> _28917_op = _28834_tokens[0LL];;
	if ((_28834_tokens.len() == 1LL)) {
		_1dad57782_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_2051398b3_is_unary_op(_28917_op.get()._field_kind)))) {
		_1dad57782_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	};
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_20514c2bb_UnaryExpr>(_20514c2bb_UnaryExpr{._field_op=_28917_op, ._field_expr=_1dad61868_build_from_tokens(&(*_self_), _28834_tokens)});
}



inline jule::Ptr<_20514ca6e_SubIdentExpr> _1dad59212_build_obj_sub_ident(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _30942_tokens) {
	jule::I64 _31017_i = (_30942_tokens.len() - 1LL);;
	jule::Ptr<_205139176_Token> _31117_ident_token = _30942_tokens[_31017_i];;
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20514ca6e_SubIdentExpr>(_20514ca6e_SubIdentExpr{._field_ident=_31117_ident_token, ._field_expr=_1dad61868_build_from_tokens(&(*_self_), _30942_tokens)});
}



inline jule::Ptr<_20514c882_NsSelectionExpr> _1dad59520_build_ns_sub_ident(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _32442_tokens) {
	jule::Ptr<_20514c882_NsSelectionExpr> _32517_ns = jule::new_ptr<_20514c882_NsSelectionExpr>(_20514c882_NsSelectionExpr{});;
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1c403e2aa:;
		if (it != expr.end()) {
			jule::I64 _32614_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _32621_token = *it;
			{
				if (((_32614_i & 1LL) == 0LL)) {
					if ((_32621_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1dad57782_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1dad57aa1_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_32621_token);;
				} else if ((_32621_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1dad57782_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1dad57aa1_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c403e2aa:;
			++it;
			_32614_i++;
			goto _iter_begin_1c403e2aa;
		}
		_iter_end_1c403e2aa:;
	};
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad5982d_build_type(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _34334_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Ptr<_204ec8b92_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1dad67b6b_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_1dad57782_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34417_i < _34334_tokens.len())) {
		_1dad57782_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34518_t;
}



inline jule::Any _1dad59b3b_build_sub_ident(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _35739_tokens) {
	jule::I64 _35813_i = (_35739_tokens.len() - 2LL);;
	jule::Ptr<_205139176_Token> _35913_token = _35739_tokens[_35813_i];;
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1c4046bec:;
			{
				return jule::Any(_1dad59212_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c40477be:;
			{
				return jule::Any(_1dad59520_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c4047846:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1dad5982d_build_type(&(*_self_), _35739_tokens));
				};
			}
		}
		_match_end_1c40476c0:;
	};
	_1dad57782_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_20514c4a8_VariadicExpr> _1dad59e49_build_variadic(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _37537_tokens) {
	jule::Ptr<_205139176_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];;
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_20514c4a8_VariadicExpr>(_20514c4a8_VariadicExpr{._field_token=_37617_token, ._field_expr=_1dad61868_build_from_tokens(&(*_self_), _37537_tokens)});
}



inline jule::Any _1dad5a257_build_op_right(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _38438_tokens) {
	jule::Ptr<_205139176_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c404bdab:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _1dad6124c_build(&(*_self_), _38438_tokens);;
				if ((_38921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_20514ce48_FnCallExpr>>()) {
						_case_begin_1c404de46:;
						{
							_38921_d.operator jule::Ptr<_20514ce48_FnCallExpr>().get()._field_exception=jule::new_ptr<_20514edb2_ScopeTree>(_20514edb2_ScopeTree{._field_deferred=true});
							return jule::Any(_38921_d);
						}
					}
					_match_end_1c404e243:;
				};
			}
		}
		_match_end_1c404c62b:;
	};
	_1dad57782_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_2050bba21_Expr> _1dad5a587_build_between_parentheses(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _40548_tokens) {
	if ((_40548_tokens.len() == 2LL)) {
		_1dad57782_push_err(&(*_self_), _40548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40548_tokens=_40548_tokens.slice(1LL,(_40548_tokens.len() - 1LL));
	jule::Ptr<_2050bba21_Expr> _41217_expr = _1dad61868_build_from_tokens(&(*_self_), _40548_tokens);;
	_41217_expr.get()._field_range=true;
	return _41217_expr;
}



inline jule::Ptr<_20514c695_CastExpr> _1dad5a8a6_try_build_cast(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _41738_tokens) {
	jule::I64 _41817_range_n = 0LL;;
	{
		auto &expr = _41738_tokens;
		auto it = expr.begin();
		_iter_begin_1c40539b7:;
		if (it != expr.end()) {
			jule::I64 _41913_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _41916_token = *it;
			{
				if ((_41916_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _41916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c4054b83:;
							{
								(_41817_range_n)++;
								goto _iter_next_1c40539b7;
							}
						}
						else {
							_case_begin_1c4054578:;
							{
								(_41817_range_n)--;
							}
						}
						_match_end_1c40547ba:;
					};
				};
				if ((_41817_range_n > 0LL)) {
					goto _iter_next_1c40539b7;
				} else if (((_41913_i + 1LL) == _41738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_205139176_Token>> _43821_type_tokens = _41738_tokens.slice(0LL,(_41913_i + 1LL));;
				jule::Slice<jule::Ptr<_205139176_Token>> _43921_expr_tokens = _41738_tokens.slice((_41913_i + 1LL));;
				if ((_43921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_205139176_Token> _44617_tok = _43921_expr_tokens[0LL];;
				if (((_44617_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_20514c695_CastExpr> _45121_cast = jule::new_ptr<_20514c695_CastExpr>(_20514c695_CastExpr{});;
				if ((_43921_expr_tokens.len() == 2LL)) {
					_1dad57782_push_err(&(*_self_), _43921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1dad57aa1_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43821_type_tokens.len() == 2LL)) {
					_1dad57782_push_err(&(*_self_), _43821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1dad57aa1_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43821_type_tokens=_43821_type_tokens.slice(1LL,(_43821_type_tokens.len() - 1LL));
					jule::I64 _46525_type_index = 0LL;;
					jule::Ptr<_204ec8b92_TypeDecl> _46626_t;;
					jule::Bool _46629_ok;;
					std::tie(_46626_t,_46629_ok) = _1dad67b6b_build_type((*_self_)._field_p, _43821_type_tokens,(&(_46525_type_index)),true);
					if ((_46629_ok && (_46525_type_index < _43821_type_tokens.len()))) {
						_1dad57782_push_err(&(*_self_), _43821_type_tokens[_46525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46629_ok))) {
						return _45121_cast;
					};
					_45121_cast.get()._field_kind=_46626_t;
					if ((_43921_expr_tokens.len() > 2LL)) {
						jule::I64 _47629_j = 0LL;;
						_1dad63e0e_range(_47629_j,jule::Str("(", 1),jule::Str(")", 1),_43921_expr_tokens);
						if ((_47629_j < _43921_expr_tokens.len())) {
							return nullptr;
						};
						_43921_expr_tokens=_43921_expr_tokens.slice(0LL,_47629_j);
						_45121_cast.get()._field_expr=_1dad61868_build_from_tokens(&(*_self_), _43921_expr_tokens);
					};
				};
				return _45121_cast;
			}
			_iter_next_1c40539b7:;
			++it;
			_41913_i++;
			goto _iter_begin_1c40539b7;
		}
		_iter_end_1c40539b7:;
	};
	return nullptr;
}



inline void _1dad5ac6e_push_arg(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2050bba21_Expr>>& _49132_args, jule::Slice<jule::Ptr<_205139176_Token>> _49151_tokens, jule::Ptr<_205139176_Token> _49169_err_token) {
	if ((_49151_tokens.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _49169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49132_args = jule::alloc_for_append(_49132_args,1);_49132_args.__push(_1dad61868_build_from_tokens(&(*_self_), _49151_tokens));;
}



inline jule::Slice<jule::Ptr<_2050bba21_Expr>> _1dad5b07c_build_args(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _50033_tokens) {
	if ((_50033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _50617_args = nullptr;;
	jule::I64 _50717_last = 0LL;;
	jule::I64 _50817_range_n = 0LL;;
	_50033_tokens=_50033_tokens.slice(1LL,(_50033_tokens.len() - 1LL));
	{
		auto &expr = _50033_tokens;
		auto it = expr.begin();
		_iter_begin_1c4063455:;
		if (it != expr.end()) {
			jule::I64 _51013_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _51016_token = *it;
			{
				if ((_51016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c4064984:;
							{
								(_50817_range_n)++;
							}
						}
						else {
							_case_begin_1c4064379:;
							{
								(_50817_range_n)--;
							}
						}
						_match_end_1c40645bb:;
					};
				};
				if (((_50817_range_n > 0LL) || (_51016_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1c4063455;
				};
				_1dad5ac6e_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last,_51013_i),_51016_token);
				_50717_last=static_cast<jule::I64>((_51013_i + 1LL));
			}
			_iter_next_1c4063455:;
			++it;
			_51013_i++;
			goto _iter_begin_1c4063455;
		}
		_iter_end_1c4063455:;
	};
	if ((_50717_last < _50033_tokens.len())) {
		if ((_50717_last == 0LL)) {
			if ((_50033_tokens.len() > 0LL)) {
				_1dad5ac6e_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[_50717_last]);
			};
		} else {
			_1dad5ac6e_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[(_50717_last - 1LL)]);
		};
	};
	return _50617_args;
}



inline jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _1dad5b38a_build_call_generics(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _54242_tokens) {
	if ((_54242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54242_tokens=_54242_tokens.slice(1LL,(_54242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _54818_parts;;
	jule::Slice<_2046db273_Log> _54825_errs;;
	std::tie(_54818_parts,_54825_errs) = _1dad645d5_parts(_54242_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _54917_generics = jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>>::alloc(0LL,_54818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54825_errs);
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1c406ab66:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _55121_part = *it;
			{
				if ((_55121_part.len() == 0LL)) {
					goto _iter_next_1c406ab66;
				};
				jule::I64 _55521_j = 0LL;;
				jule::Ptr<_204ec8b92_TypeDecl> _55622_generic;;
				std::tie(_55622_generic,std::ignore) = _1dad67b6b_build_type((*_self_)._field_p, _55121_part,(&(_55521_j)),true);
				if ((_55521_j < _55121_part.len())) {
					_1dad57782_push_err(&(*_self_), _55121_part[_55521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_54917_generics = jule::alloc_for_append(_54917_generics,1);_54917_generics.__push(_55622_generic);;
			}
			_iter_next_1c406ab66:;
			++it;
			goto _iter_begin_1c406ab66;
		}
		_iter_end_1c406ab66:;
	};
	return _54917_generics;
}



inline jule::Ptr<_20514ce48_FnCallExpr> _1dad5b742_build_fn_call(_1dad56e8a_ExprBuilder* _self_, jule::Ptr<_205139176_Token>& _56637_token, jule::Ptr<_1dad55a38_CallData>& _56657_data) {
	return jule::new_ptr<_20514ce48_FnCallExpr>(_20514ce48_FnCallExpr{._field_token=_56637_token, ._field_expr=_1dad61868_build_from_tokens(&(*_self_), _56657_data.get()._field_expr_tokens), ._field_generics=_1dad5b38a_build_call_generics(&(*_self_), _56657_data.get()._field_generics_tokens), ._field_args=_1dad5b07c_build_args(&(*_self_), _56657_data.get()._field_args_tokens)});
}



inline jule::Any _1dad5ba72_build_parentheses_range(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _57547_tokens) {
	jule::Ptr<_205139176_Token> _57617_token = _57547_tokens[0LL];;
	{
		auto &_match_expr{ _57617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c4070286:;
			{
				{
					auto &_match_expr{ _57617_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c40711bb:;
						{
							jule::Ptr<_20514c695_CastExpr> _58125_expr = _1dad5a8a6_try_build_cast(&(*_self_), _57547_tokens);;
							if ((_58125_expr != nullptr)) {
								return jule::Any(_58125_expr);
							};
						}
					}
					_match_end_1c4071144:;
				};
			}
		}
		_match_end_1c407083b:;
	};
	jule::Ptr<_1dad55a38_CallData> _58817_data = _1dad55d9b_get_call_data(_57547_tokens);;
	if ((_58817_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1dad5a587_build_between_parentheses(&(*_self_), _58817_data.get()._field_args_tokens));
	};
	return jule::Any(_1dad5b742_build_fn_call(&(*_self_), _57617_token,_58817_data));
}



inline jule::Ptr<_20514bc05_UnsafeExpr> _1dad5bd91_build_unsafe_expr(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _59940_tokens) {
	jule::Ptr<_205139176_Token> _60017_token = _59940_tokens[0LL];;
	_59940_tokens=_59940_tokens.slice(1LL);
	jule::I64 _60217_i = 0LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _60317_range_tokens = _1dad63e0e_range(_60217_i,jule::Str("{", 1),jule::Str("}", 1),_59940_tokens);;
	if ((_60317_range_tokens.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _59940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20514bc05_UnsafeExpr>(_20514bc05_UnsafeExpr{._field_token=_60017_token, ._field_expr=_1dad61868_build_from_tokens(&(*_self_), _60317_range_tokens)});
}



inline jule::Ptr<_20515028b_FnDecl> _1dad5c19e_build_anon_fn(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _61437_tokens) {
	jule::Ptr<_20515028b_FnDecl> _61517_f = _1dad6bd90_build_fn((*_self_)._field_p, _61437_tokens,false,false);;
	if ((!(_2050d51dd_is_anon(_61517_f.ptr())))) {
		_1dad57782_push_err(&(*_self_), _61517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61517_f;
}



inline jule::Any _1dad5c4ac_build_unsafe(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _62336_tokens) {
	{
		auto &_match_expr{ _62336_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c407a47d:;
			{
				return jule::Any(_1dad5c19e_build_anon_fn(&(*_self_), _62336_tokens));
			}
		}
		else {
			_case_begin_1c407958c:;
			{
				return jule::Any(_1dad5bd91_build_unsafe_expr(&(*_self_), _62336_tokens));
			}
		}
		_match_end_1c4079988:;
	};
}



inline void _1dad5c875_push_range_lit_part(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _63342_part, jule::Ptr<_205139176_Token> _6349_error_token, jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>& _63435_parts) {
	if ((_63342_part.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _6349_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63435_parts = jule::alloc_for_append(_63435_parts,1);_63435_parts.__push(_63342_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad5cba5_get_brace_range_lit_expr_parts(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _64453_tokens) {
	if ((_64453_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _65017_parts = nullptr;;
	jule::I64 _65217_last = 0LL;;
	jule::I64 _65317_range_n = 0LL;;
	_64453_tokens=_64453_tokens.slice(1LL,(_64453_tokens.len() - 1LL));
	{
		auto &expr = _64453_tokens;
		auto it = expr.begin();
		_iter_begin_1c407ebd0:;
		if (it != expr.end()) {
			jule::I64 _65513_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _65516_token = *it;
			{
				if ((_65516_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65516_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c408120e:;
							{
								(_65317_range_n)++;
							}
						}
						else {
							_case_begin_1c4080b04:;
							{
								(_65317_range_n)--;
							}
						}
						_match_end_1c4080d46:;
					};
				};
				if (((_65317_range_n > 0LL) || (_65516_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1c407ebd0;
				};
				_1dad5c875_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last,_65513_i),_65516_token,_65017_parts);
				_65217_last=static_cast<jule::I64>((_65513_i + 1LL));
			}
			_iter_next_1c407ebd0:;
			++it;
			_65513_i++;
			goto _iter_begin_1c407ebd0;
		}
		_iter_end_1c407ebd0:;
	};
	if ((_65217_last < _64453_tokens.len())) {
		if ((_65217_last == 0LL)) {
			if ((_64453_tokens.len() > 0LL)) {
				_1dad5c875_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[_65217_last],_65017_parts);
			};
		} else {
			_1dad5c875_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[(_65217_last - 1LL)],_65017_parts);
		};
	};
	return _65017_parts;
}



inline jule::Ptr<_20514d135_FieldExprPair> _1dad5cec4_build_field_expr_pair(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _68644_tokens) {
	if (((_68644_tokens.len() - 2LL) == 0LL)) {
		_1dad57782_push_err(&(*_self_), _68644_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20514d135_FieldExprPair> _69117_pair = jule::new_ptr<_20514d135_FieldExprPair>(_20514d135_FieldExprPair{._field_field=_68644_tokens[0LL]});;
	_68644_tokens=_68644_tokens.slice(2LL);
	_69117_pair.get()._field_expr=_1dad61868_build_from_tokens(&(*_self_), _68644_tokens);
	return _69117_pair;
}



inline jule::Ptr<_2050bba21_Expr> _1dad5d2d2_build_struct_lit_expr(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _69945_tokens) {
	jule::Ptr<_205139176_Token> _70017_token = _69945_tokens[0LL];;
	if (((_70017_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_69945_tokens.len() > 1LL))) {
		_70017_token=_69945_tokens[1LL];
		if ((_70017_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_2050bba21_Expr>(_2050bba21_Expr{._field_token=_70017_token, ._field_end=_69945_tokens[(_69945_tokens.len() - 1LL)], ._field_kind=jule::Any(_1dad5cec4_build_field_expr_pair(&(*_self_), _69945_tokens))});
		};
	};
	return _1dad61868_build_from_tokens(&(*_self_), _69945_tokens);
}



inline jule::Slice<jule::Ptr<_2050bba21_Expr>> _1dad5d5e0_build_struct_lit_exprs(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _71446_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _71517_parts = _1dad5cba5_get_brace_range_lit_expr_parts(&(*_self_), _71446_tokens);;
	if ((_71517_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2050bba21_Expr>> _72017_pairs = jule::Slice<jule::Ptr<_2050bba21_Expr>>::alloc(0LL,_71517_parts.len());;
	{
		auto &expr = _71517_parts;
		auto it = expr.begin();
		_iter_begin_1c408b082:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _72121_part = *it;
			{
				_72017_pairs = jule::alloc_for_append(_72017_pairs,1);_72017_pairs.__push(_1dad5d2d2_build_struct_lit_expr(&(*_self_), _72121_part));;
			}
			_iter_next_1c408b082:;
			++it;
			goto _iter_begin_1c408b082;
		}
		_iter_end_1c408b082:;
	};
	return _72017_pairs;
}



inline jule::Ptr<_20514d322_StructLit> _1dad5d920_build_typed_struct_literal(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _72749_tokens) {
	jule::I64 _72817_i = 0LL;;
	jule::Ptr<_204ec8b92_TypeDecl> _72918_t;;
	jule::Bool _72921_ok;;
	std::tie(_72918_t,_72921_ok) = _1dad67b6b_build_type((*_self_)._field_p, _72749_tokens,(&(_72817_i)),true);
	if ((!(_72921_ok))) {
		return nullptr;
	} else if ((_72817_i >= _72749_tokens.len())) {
		_1dad57782_push_err(&(*_self_), _72749_tokens[_72817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72749_tokens=_72749_tokens.slice(_72817_i);
	jule::Ptr<_205139176_Token> _73813_token = _72749_tokens[0LL];;
	if (((_73813_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73813_token.get()._field_kind != jule::Str("{", 1)))) {
		_1dad57782_push_err(&(*_self_), _73813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20514d322_StructLit>(_20514d322_StructLit{._field_end=_72749_tokens[(_72749_tokens.len() - 1LL)], ._field_kind=_72918_t, ._field_exprs=_1dad5d5e0_build_struct_lit_exprs(&(*_self_), _72749_tokens)});
}



inline jule::Ptr<_2050bba21_Expr> _1dad5dc3e_build_brace_lit_part(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _75144_tokens) {
	jule::Slice<jule::Ptr<_205139176_Token>> _75218_l;;
	jule::Slice<jule::Ptr<_205139176_Token>> _75225_r;;
	std::tie(_75218_l,_75225_r) = _1dad5642e_split_colon(_75144_tokens);
	if ((_75218_l != nullptr)) {
		return jule::new_ptr<_2050bba21_Expr>(_2050bba21_Expr{._field_token=_75144_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_20514d6eb_KeyValPair>(_20514d6eb_KeyValPair{._field_colon=_75144_tokens[_75218_l.len()], ._field_key=_1dad61868_build_from_tokens(&(*_self_), _75218_l), ._field_val=_1dad61868_build_from_tokens(&(*_self_), _75225_r)}))});
	};
	return _1dad61868_build_from_tokens(&(*_self_), _75144_tokens);
}



inline jule::Ptr<_20514d50e_BraceLit> _1dad5e04c_build_brace_lit(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _76739_tokens) {
	jule::Ptr<_20514d50e_BraceLit> _76817_lit = jule::new_ptr<_20514d50e_BraceLit>(_20514d50e_BraceLit{._field_token=_76739_tokens[0LL], ._field_end=_76739_tokens[(_76739_tokens.len() - 1LL)]});;
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _77317_parts = _1dad5cba5_get_brace_range_lit_expr_parts(&(*_self_), _76739_tokens);;
	if ((_77317_parts == nullptr)) {
		return _76817_lit;
	};
	_76817_lit.get()._field_exprs=jule::Slice<jule::Ptr<_2050bba21_Expr>>::alloc(0LL,_77317_parts.len());
	{
		auto &expr = _77317_parts;
		auto it = expr.begin();
		_iter_begin_1c40963de:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _77921_part = *it;
			{
				_76817_lit.get()._field_exprs = jule::alloc_for_append(_76817_lit.get()._field_exprs,1);_76817_lit.get()._field_exprs.__push(_1dad5dc3e_build_brace_lit_part(&(*_self_), _77921_part));;
			}
			_iter_next_1c40963de:;
			++it;
			goto _iter_begin_1c40963de;
		}
		_iter_end_1c40963de:;
	};
	return _76817_lit;
}



inline jule::Any _1dad5e35a_build_brace_range(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _78641_tokens) {
	jule::Slice<jule::Ptr<_205139176_Token>> _78718_expr_tokens;;
	jule::I64 _78731_range_n;;
	std::tie(_78718_expr_tokens,_78731_range_n) = _1dad56c59_get_range_expr_tokens(_78641_tokens);
	{
		
		if ((_78718_expr_tokens.len() == 0LL)) {
			_case_begin_1c409859a:;
			{
				return jule::Any(_1dad5e04c_build_brace_lit(&(*_self_), _78641_tokens));
			}
		}
		else if ((_78731_range_n > 0LL)) {
			_case_begin_1c4098622:;
			{
				_1dad57782_push_err(&(*_self_), _78641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c4098501:;
	};
	jule::Ptr<_205139176_Token> _79813_else_token = _78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)];;
	if ((_78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78718_expr_tokens=_78718_expr_tokens.slice(0LL,(_78718_expr_tokens.len() - 1LL));
		jule::Any _80121_d = _1dad6124c_build(&(*_self_), _78718_expr_tokens);;
		if ((_80121_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80121_d };
			
			if (_match_expr.type_is<jule::Ptr<_20514ce48_FnCallExpr>>()) {
				_case_begin_1c409c45b:;
				{
					_78641_tokens=_78641_tokens.slice((_78718_expr_tokens.len() + 1LL));
					jule::I64 _80825_i = 0LL;;
					jule::Slice<jule::Ptr<_205139176_Token>> _80925_range_tokens = _1dad63e0e_range(_80825_i,jule::Str("{", 1),jule::Str("}", 1),_78641_tokens);;
					jule::Ptr<_20514ce48_FnCallExpr> _81025_model = _80121_d.operator jule::Ptr<_20514ce48_FnCallExpr>();;
					if (_205006ebc_ignored(_81025_model.ptr())) {
						_1dad57782_push_err(&(*_self_), _79813_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1dad57aa1_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81025_model.get()._field_exception=_1dad672b9_build_scope((*_self_)._field_p, _80925_range_tokens,_78641_tokens[(_80825_i - 1LL)]);
					return jule::Any(_80121_d);
				}
			}
			else {
				_case_begin_1c409b3a0:;
				{
					_1dad57782_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1c409b658:;
		};
	};
	{
		auto &_match_expr{ _78718_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c40a20ed:;
			{
				return jule::Any(_1dad5c4ac_build_unsafe(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c40a1eee:;
			{
				return jule::Any(_1dad5c19e_build_anon_fn(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c40a2065:;
			{
				return jule::Any(_1dad5d920_build_typed_struct_literal(&(*_self_), _78641_tokens));
			}
		}
		else {
			_case_begin_1c4098424:;
			{
				_1dad57782_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c409a5d0:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad5e668_get_enumerable_parts(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _83843_tokens) {
	_83843_tokens=_83843_tokens.slice(1LL,(_83843_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _84018_parts;;
	jule::Slice<_2046db273_Log> _84025_errors;;
	std::tie(_84018_parts,_84025_errors) = _1dad645d5_parts(_83843_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84025_errors);
	return _84018_parts;
}



inline jule::Ptr<_20514d8d8_SliceExpr> _1dad5e976_build_slice(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _84534_tokens) {
	jule::Ptr<_20514d8d8_SliceExpr> _84617_slc = jule::new_ptr<_20514d8d8_SliceExpr>(_20514d8d8_SliceExpr{._field_token=_84534_tokens[0LL], ._field_end=_84534_tokens[(_84534_tokens.len() - 1LL)]});;
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _85117_parts = _1dad5e668_get_enumerable_parts(&(*_self_), _84534_tokens);;
	if ((_85117_parts.len() == 0LL)) {
		return _84617_slc;
	};
	_84617_slc.get()._field_exprs=jule::Slice<jule::Ptr<_2050bba21_Expr>>::alloc(0LL,_85117_parts.len());
	{
		auto &expr = _85117_parts;
		auto it = expr.begin();
		_iter_begin_1c40a78c8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _85721_p = *it;
			{
				if ((_85721_p.len() == 0LL)) {
					goto _iter_next_1c40a78c8;
				};
				_84617_slc.get()._field_exprs = jule::alloc_for_append(_84617_slc.get()._field_exprs,1);_84617_slc.get()._field_exprs.__push(_1dad61868_build_from_tokens(&(*_self_), _85721_p));;
			}
			_iter_next_1c40a78c8:;
			++it;
			goto _iter_begin_1c40a78c8;
		}
		_iter_end_1c40a78c8:;
	};
	return _84617_slc;
}



inline jule::Ptr<_20514b7d7_IndexingExpr> _1dad5edc7_build_indexing(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _86737_expr_tokens, jule::Slice<jule::Ptr<_205139176_Token>> _86813_tokens, jule::Ptr<_205139176_Token> _86835_error_token) {
	jule::Ptr<_205139176_Token> _86917_end = _86813_tokens[(_86813_tokens.len() - 1LL)];;
	_86813_tokens=_86813_tokens.slice(1LL,(_86813_tokens.len() - 1LL));
	if ((_86813_tokens.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _86835_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2050bba21_Expr> _87517_expr = _1dad61868_build_from_tokens(&(*_self_), _86737_expr_tokens);;
	if ((_87517_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_2050bba21_Expr> _87917_index = _1dad61868_build_from_tokens(&(*_self_), _86813_tokens);;
	if ((_87917_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_20514b7d7_IndexingExpr>(_20514b7d7_IndexingExpr{._field_token=_86835_error_token, ._field_end=_86917_end, ._field_expr=_87517_expr, ._field_index=_87917_index});
}



inline jule::Ptr<_20514e048_SlicingExpr> _1dad6046b_build_slicing(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _89137_expr_tokens, jule::Slice<jule::Ptr<_205139176_Token>>& _89165_slicing_tokens, jule::I64& _89210_colon, jule::Ptr<_205139176_Token>& _89227_error_token, jule::Ptr<_205139176_Token> _89252_end) {
	jule::Ptr<_20514e048_SlicingExpr> _89317_slc = jule::new_ptr<_20514e048_SlicingExpr>(_20514e048_SlicingExpr{._field_token=_89227_error_token, ._field_end=_89252_end, ._field_expr=_1dad61868_build_from_tokens(&(*_self_), _89137_expr_tokens)});;
	jule::Slice<jule::Ptr<_205139176_Token>> _89917_start_expr_tokens = _89165_slicing_tokens.slice(0LL,_89210_colon);;
	if ((_89917_start_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_start=_1dad61868_build_from_tokens(&(*_self_), _89917_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _90417_to_expr_tokens = _89165_slicing_tokens.slice((_89210_colon + 1LL));;
	if ((_90417_to_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_to=_1dad61868_build_from_tokens(&(*_self_), _90417_to_expr_tokens);
	};
	return _89317_slc;
}



inline jule::Any _1dad60779_build_bracket_range(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _91242_tokens) {
	jule::Ptr<_205139176_Token> _91317_error_token = _91242_tokens[0LL];;
	jule::Slice<jule::Ptr<_205139176_Token>> _91418_expr_tokens;;
	jule::I64 _91431_range_n;;
	std::tie(_91418_expr_tokens,_91431_range_n) = _1dad56c59_get_range_expr_tokens(_91242_tokens);
	{
		
		if ((_91418_expr_tokens.len() == 0LL)) {
			_case_begin_1c40b2e22:;
			{
				return jule::Any(_1dad5e976_build_slice(&(*_self_), _91242_tokens));
			}
		}
		else if (((_91418_expr_tokens.len() == 0LL) || (_91431_range_n > 0LL))) {
			_case_begin_1c40b2e99:;
			{
				_1dad57782_push_err(&(*_self_), _91317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c40b2d67:;
	};
	_91242_tokens=_91242_tokens.slice(_91418_expr_tokens.len());
	jule::I64 _93217_i = 0LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _93318_slicing_tokens;;
	jule::I64 _93334_colon;;
	std::tie(_93318_slicing_tokens,_93334_colon) = _1dad75b13_split_map_range(_91242_tokens,_93217_i);
	if ((_93334_colon != -1LL)) {
		return jule::Any(_1dad6046b_build_slicing(&(*_self_), _91418_expr_tokens,_93318_slicing_tokens,_93334_colon,_91317_error_token,_91242_tokens[(_91242_tokens.len() - 1LL)]));
	};
	return jule::Any(_1dad5edc7_build_indexing(&(*_self_), _91418_expr_tokens,_91242_tokens,_91317_error_token));
}



inline jule::Any _1dad60a87_build_data(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _94034_tokens) {
	{
		auto _match_expr{ _94034_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c40b75a8:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c40b761e:;
			{
				return jule::Any(_1dad587d8_build_single(&(*_self_), _94034_tokens[0LL]));
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c40b7685:;
			{
				if ((_94034_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return jule::Any(_1dad58ae6_build_cpp_linked_ident(&(*_self_), _94034_tokens));
				};
			}
		}
		_match_end_1c40b7542:;
	};
	jule::Ptr<_205139176_Token> _95217_token = _94034_tokens[(_94034_tokens.len() - 1LL)];;
	if (((_95217_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95217_token.get()._field_kind == jule::Str("...", 3)))) {
		return jule::Any(_1dad59e49_build_variadic(&(*_self_), _94034_tokens));
	};
	_95217_token=_94034_tokens[0LL];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c40ba9c9:;
			{
				if (((_94034_tokens.len() > 1LL) && (_95217_token.get()._field_kind == jule::Str("*", 1)))) {
					_95217_token=_94034_tokens[1LL];
					if (((_95217_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95217_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return jule::Any(_1dad5982d_build_type(&(*_self_), _94034_tokens));
					};
				};
				return jule::Any(_1dad58e04_build_unary(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c40baa84:;
			{
				if ((_94034_tokens.len() < 3LL)) {
					goto _match_end_1c40ba974;
				};
				if ((_94034_tokens.len() > 3LL)) {
					jule::Ptr<_205139176_Token> _97521_t = _94034_tokens[(_94034_tokens.len() - 1LL)];;
					if (((_97521_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97521_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1c40ba974;
					};
				};
				jule::Ptr<_205139176_Token> _98117_next = _94034_tokens[1LL];;
				if (((_98117_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98117_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1c40ba974;
				};
				return jule::Any(_1dad5982d_build_type(&(*_self_), _94034_tokens));
			}
		}
		_match_end_1c40ba974:;
	};
	_95217_token=_94034_tokens[(_94034_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c40baaea:;
			{
				return jule::Any(_1dad59b3b_build_sub_ident(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c40bb0a1:;
			{
				return jule::Any(_1dad5982d_build_type(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c40c13a3:;
			{
				return jule::Any(_1dad5a257_build_op_right(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c40c1419:;
			{
				{
					auto &_match_expr{ _95217_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c40c2e98:;
						{
							return jule::Any(_1dad5ba72_build_parentheses_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c40c300e:;
						{
							return jule::Any(_1dad5e35a_build_brace_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c40c310d:;
						{
							return jule::Any(_1dad60779_build_bracket_range(&(*_self_), _94034_tokens));
						}
					}
					_match_end_1c40c28e3:;
				};
			}
		}
		_match_end_1c40bb04b:;
	};
	_1dad57782_push_err(&(*_self_), _95217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_20514cc5b_BinopExpr> _1dad60e3e_build_binop(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _101235_tokens, jule::I64 _101253_i) {
	jule::Slice<jule::Ptr<_205139176_Token>> _101317_left_tokens = _101235_tokens.slice(0LL,_101253_i);;
	jule::Slice<jule::Ptr<_205139176_Token>> _101417_right_tokens = _101235_tokens.slice((_101253_i + 1LL));;
	if ((_101317_left_tokens.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101417_right_tokens.len() == 0LL)) {
		_1dad57782_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad57aa1_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_20514cc5b_BinopExpr>(_20514cc5b_BinopExpr{._field_left=_1dad61868_build_from_tokens(&(*_self_), _101317_left_tokens), ._field_right=_1dad61868_build_from_tokens(&(*_self_), _101417_right_tokens), ._field_op=_101235_tokens[_101253_i]});
}



inline jule::Any _1dad6124c_build(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _103229_tokens) {
	jule::I64 _103313_i = _1dad5671a_find_lowest_prec_op(_103229_tokens);;
	if ((_103313_i == -1LL)) {
		return jule::Any(_1dad60a87_build_data(&(*_self_), _103229_tokens));
	};
	return jule::Any(_1dad60e3e_build_binop(&(*_self_), _103229_tokens,_103313_i));
}



inline jule::Any _1dad6155a_build_kind(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _104034_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _104118_parts;;
	jule::Slice<_2046db273_Log> _104125_errors;;
	std::tie(_104118_parts,_104125_errors) = _1dad645d5_parts(_104034_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104125_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104125_errors);
		return nullptr;
	} else if ((_104118_parts.len() > 1LL)) {
		return jule::Any(_1dad57dae_build_tuple(&(*_self_), _104118_parts));
	};
	return jule::Any(_1dad6124c_build(&(*_self_), _104034_tokens));
}



inline jule::Ptr<_2050bba21_Expr> _1dad61868_build_from_tokens(_1dad56e8a_ExprBuilder* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _105140_tokens) {
	if ((_105140_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_2050bba21_Expr>(_2050bba21_Expr{._field_token=_105140_tokens[0LL], ._field_end=_105140_tokens[(_105140_tokens.len() - 1LL)], ._field_kind=jule::Any(_1dad6155a_build_kind(&(*_self_), _105140_tokens))});
}







std::ostream &operator<<(std::ostream &_Stream, _1dad56e8a_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dad622b4_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1dad65b25_stop(_1dad657e5_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1dad65d89_stopped(_1dad657e5_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1dad66252_push_err(_1dad657e5_Parser* _self_, jule::Ptr<_205139176_Token> _23327_token, jule::Str _23342_fmt, jule::Slice<jule::Any> _23355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1dad64c9a_compiler_err(_23327_token,_23342_fmt,jule::Any(_23355_args)));;
}



inline void _1dad66571_push_suggestion(_1dad657e5_Parser* _self_, jule::Str _23834_fmt, jule::Slice<jule::Any> _23847_args) {
	{
		_1dad650ec_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23834_fmt,jule::Any(_23847_args));
	};
}



inline jule::Ptr<_2050bba21_Expr> _1dad6687e_build_expr(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _24235_tokens) {
	jule::Ptr<_1dad56e8a_ExprBuilder> _24317_ep = jule::new_ptr<_1dad56e8a_ExprBuilder>(_1dad56e8a_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_2050bba21_Expr> _24617_expr = _1dad61868_build_from_tokens(_24317_ep.ptr(), _24235_tokens);;
	return _24617_expr;
}



inline jule::Ptr<_204ec174a_Directive> _1dad66b8c_build_directive(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _25038_tokens) {
	if ((_25038_tokens.len() == 1LL)) {
		_1dad66252_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25038_tokens[1LL].get()._field_column != (_25038_tokens[0LL].get()._field_column + 1LL))) {
		_1dad66252_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_204ec174a_Directive>(_204ec174a_Directive{._field_tag=_25038_tokens[1LL], ._field_args=_25038_tokens.slice(2LL)});
}



inline void _1dad66e12_push_directive(_1dad657e5_Parser* _self_, jule::Ptr<_204ec174a_Directive> _26737_d) {
	if ((_26737_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1c40d751d:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _27316_pd = *it;
			{
				if ((_26737_d.get()._field_tag.get()._field_kind == _27316_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1c40d751d:;
			++it;
			goto _iter_begin_1c40d751d;
		}
		_iter_end_1c40d751d:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26737_d);;
}



inline jule::Ptr<_20514edb2_ScopeTree> _1dad672b9_build_scope(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _28136_tokens, jule::Ptr<_205139176_Token> _28158_end) {
	jule::Ptr<_20514edb2_ScopeTree> _28217_s = _1dad4771c_new_scope();;
	_28217_s.get()._field_end=_28158_end;
	_1dad49169_ScopeParser _28417_sp = _1dad49169_ScopeParser{._field_p=_self_};;
	_1dad54b8b_build(&_28417_sp, _28136_tokens,_28217_s);
	return _28217_s;
}



inline std::tuple<jule::Ptr<_204ec8b92_TypeDecl>,jule::Bool> _1dad6771a___build_type(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _29144_tokens, jule::I64* _29213_i, jule::Bool _29222_err) {
	_1dad760db_TypeBuilder _29317_tb = _1dad760db_TypeBuilder{._field_p=_self_, ._field_tokens=_29144_tokens, ._field_i=_29213_i, ._field_err=_29222_err};;
	jule::Ptr<_204ec8b92_TypeDecl> _29918_decl;;
	jule::Bool _29924_ok;;
	std::tie(_29918_decl,_29924_ok) = _1dad794c9_build(&_29317_tb);
	return std::make_tuple(_29918_decl,_29924_ok);
}



inline std::tuple<jule::Ptr<_204ec8b92_TypeDecl>,jule::Bool> _1dad67b6b_build_type(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _30442_tokens, jule::I64* _30513_i, jule::Bool _30522_err) {
	jule::Ptr<_205139176_Token> _30613_token = _30442_tokens[(*(_30513_i))];;
	jule::Ptr<_204ec8b92_TypeDecl> _30718_t;;
	jule::Bool _30721_ok;;
	std::tie(_30718_t,_30721_ok) = _1dad6771a___build_type(_self_, _30442_tokens,_30513_i,_30522_err);
	if ((_30522_err && (!(_30721_ok)))) {
		_1dad66252_push_err(_self_.ptr(), _30613_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30718_t,_30721_ok);
}



inline jule::Ptr<_2051518a8_TypeAliasDecl> _1dad67e79_build_type_alias_decl(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _31446_tokens) {
	jule::I64 _31517_i = 1LL;;
	if ((_31517_i >= _31446_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2051518a8_TypeAliasDecl> _32017_tad = jule::new_ptr<_2051518a8_TypeAliasDecl>(_2051518a8_TypeAliasDecl{._field_token=_31446_tokens[1LL], ._field_ident=_31446_tokens[1LL].get()._field_kind});;
	jule::Ptr<_205139176_Token> _32417_token = _31446_tokens[_31517_i];;
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(_self_.ptr(), _32417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	_32417_token=_31446_tokens[_31517_i];
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1dad66252_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	jule::Ptr<_204ec8b92_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1dad67b6b_build_type(_self_, _31446_tokens,(&(_31517_i)),true);
	_32017_tad.get()._field_kind=_34518_t;
	if ((_34521_ok && (_31517_i < _31446_tokens.len()))) {
		_1dad66252_push_err(_self_.ptr(), _31446_tokens[_31517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32017_tad;
}



inline void _1dad682ba_build_var_type_and_expr(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<_205150478_VarDecl>& _35348_v, jule::Slice<jule::Ptr<_205139176_Token>>& _35366_tokens) {
	jule::I64 _35417_i = 0LL;;
	jule::Ptr<_205139176_Token> _35517_tok = _35366_tokens[_35417_i];;
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_35417_i)++;
		if (((_35417_i >= _35366_tokens.len()) || ((_35366_tokens[_35417_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35366_tokens[_35417_i].get()._field_kind == jule::Str("=", 1))))) {
			_1dad66252_push_err(_self_.ptr(), _35517_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_204ec8b92_TypeDecl> _36322_t;;
		jule::Bool _36325_ok;;
		std::tie(_36322_t,_36325_ok) = _1dad67b6b_build_type(_self_, _35366_tokens,(&(_35417_i)),true);
		if (_36325_ok) {
			_35348_v.get()._field_kind=_36322_t;
			if ((_35417_i >= _35366_tokens.len())) {
				return;;
			};
			_35517_tok=_35366_tokens[_35417_i];
		};
	};
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_35517_tok.get()._field_kind != jule::Str("=", 1))) {
			_1dad66252_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_205139176_Token>> _37821_expr_tokens = _35366_tokens.slice((_35417_i + 1LL));;
		if ((_37821_expr_tokens.len() == 0LL)) {
			_1dad66252_push_err(_self_.ptr(), _35517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35348_v.get()._field_expr=_1dad6687e_build_expr(_self_, _37821_expr_tokens);
	} else {
		_1dad66252_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1dad685ea_build_var_common(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<_205150478_VarDecl>& _38941_v, jule::Slice<jule::Ptr<_205139176_Token>> _38958_tokens) {
	_38941_v.get()._field_token=_38958_tokens[0LL];
	if ((_38941_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(_self_.ptr(), _38941_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_38941_v.get()._field_ident=_38941_v.get()._field_token.get()._field_kind;
	_38941_v.get()._field_kind=nullptr;
	if ((_38958_tokens.len() > 1LL)) {
		_38958_tokens=_38958_tokens.slice(1LL);
		_1dad682ba_build_var_type_and_expr(_self_, _38941_v,_38958_tokens);
	};
}



inline void _1dad689b3_build_var_begin(_1dad657e5_Parser* _self_, jule::Ptr<_205150478_VarDecl>& _40439_v, jule::Ptr<jule::I64> _40456_i, jule::Slice<jule::Ptr<_205139176_Token>>& _40466_tokens) {
	jule::Ptr<_205139176_Token> _40513_tok = _40466_tokens[(*(_40456_i))];;
	{
		auto &_match_expr{ _40513_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1c41053b5:;
			{
				_40439_v.get()._field_statically=true;
				goto _case_begin_1c410542b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c410542b:;
			{
				((*(_40456_i)))++;
				if (((*(_40456_i)) >= _40466_tokens.len())) {
					_1dad66252_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40466_tokens[(*(_40456_i))].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_40439_v.get()._field_mutable=true;
					((*(_40456_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c410497a:;
			{
				((*(_40456_i)))++;
				_40439_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1c4104370:;
			{
				_1dad66252_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c4104859:;
	};
	if (((*(_40456_i)) >= _40466_tokens.len())) {
		_1dad66252_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_205150478_VarDecl> _1dad68cc1_build_var(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _43533_tokens) {
	jule::Ptr<jule::I64> _43617_i = jule::new_ptr<jule::I64>(0LL);;
	jule::Ptr<_205150478_VarDecl> _43717_v = jule::new_ptr<_205150478_VarDecl>(_205150478_VarDecl{._field_token=_43533_tokens[(*(_43617_i))]});;
	_1dad689b3_build_var_begin(_self_.ptr(), _43717_v,_43617_i,_43533_tokens);
	if (((*(_43617_i)) >= _43533_tokens.len())) {
		return nullptr;
	};
	_43533_tokens=_43533_tokens.slice((*(_43617_i)));
	if (((_43533_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43533_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43717_v.get()._field_reference=true;
		if ((_43533_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43533_tokens=_43533_tokens.slice(1LL);
	};
	_1dad685ea_build_var_common(_self_, _43717_v,_43533_tokens);
	return _43717_v;
}



inline jule::Ptr<_20514e235_GenericDecl> _1dad690ce_build_generic(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _45737_tokens) {
	if ((_45737_tokens.len() > 1LL)) {
		_1dad66252_push_err(&(*_self_), _45737_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_20514e235_GenericDecl> _46117_g = jule::new_ptr<_20514e235_GenericDecl>(_20514e235_GenericDecl{._field_token=_45737_tokens[0LL]});;
	if ((_46117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(&(*_self_), _46117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46117_g.get()._field_ident=_46117_g.get()._field_token.get()._field_kind;
	return _46117_g;
}



inline jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _1dad69486_build_generics(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _47238_tokens, jule::Ptr<_205139176_Token>& _47257_error_token) {
	if ((_47238_tokens.len() == 0LL)) {
		_1dad66252_push_err(&(*_self_), _47257_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _47818_parts;;
	jule::Slice<_2046db273_Log> _47825_errors;;
	std::tie(_47818_parts,_47825_errors) = _1dad645d5_parts(_47238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47825_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47825_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _48417_generics = jule::Slice<jule::Ptr<_20514e235_GenericDecl>>::alloc(0LL,_47818_parts.len());;
	{
		auto &expr = _47818_parts;
		auto it = expr.begin();
		_iter_begin_1c4113934:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _48521_part = *it;
			{
				_48417_generics = jule::alloc_for_append(_48417_generics,1);_48417_generics.__push(_1dad690ce_build_generic(&(*_self_), _48521_part));;
			}
			_iter_next_1c4113934:;
			++it;
			goto _iter_begin_1c4113934;
		}
		_iter_end_1c4113934:;
	};
	return _48417_generics;
}



inline jule::Ptr<_20515009e_ParamDecl> _1dad69794_build_self_param(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _49239_tokens) {
	if ((_49239_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_20515009e_ParamDecl> _49717_param = jule::new_ptr<_20515009e_ParamDecl>();;
	jule::I64 _50017_i = 0LL;;
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_49717_param.get()._field_mutable=true;
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_1dad66252_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_kind == jule::Str("&", 1))) {
		_49717_param.get()._field_ident=jule::Str("&", 1);
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_1dad66252_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_49717_param.get()._field_ident+=jule::Str("self", 4);
		_49717_param.get()._field_token=_49239_tokens[_50017_i];
		(_50017_i)++;
		if ((_50017_i < _49239_tokens.len())) {
			_1dad66252_push_err(&(*_self_), _49239_tokens[_50017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49717_param;
}



inline void _1dad69b5c_param_type_begin(_1dad657e5_Parser* _self_, jule::Ptr<_20515009e_ParamDecl>& _53140_param, jule::I64& _53164_i, jule::Slice<jule::Ptr<_205139176_Token>>& _53173_tokens) {
	for (; (_53164_i < _53173_tokens.len()); (_53164_i)++) {
		{
			jule::Ptr<_205139176_Token> _53317_token = _53173_tokens[_53164_i];;
			if ((_53317_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_53317_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53140_param.get()._field_variadic) {
				_1dad66252_push_err(&(*_self_), _53317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1c411a760;
			};
			_53140_param.get()._field_variadic=true;
		}
	_iter_next_1c411a760:;
	}
	_iter_end_1c411a760:;;
}



inline void _1dad69e7b_build_param_type(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<_20515009e_ParamDecl>& _54841_param, jule::Slice<jule::Ptr<_205139176_Token>>& _54865_tokens) {
	jule::I64 _54917_i = 0LL;;
	_1dad69b5c_param_type_begin(_self_.ptr(), _54841_param,_54917_i,_54865_tokens);
	if ((_54917_i >= _54865_tokens.len())) {
		return;;
	};
	std::tie(_54841_param.get()._field_kind,std::ignore) = _1dad67b6b_build_type(_self_, _54865_tokens,(&(_54917_i)),true);
	if ((_54917_i < _54865_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _54865_tokens[_54917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1dad6a344_build_param_body(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<_20515009e_ParamDecl>& _56141_param, jule::Ptr<jule::I64> _56164_i, jule::Slice<jule::Ptr<_205139176_Token>> _56177_tokens) {
	jule::Ptr<_205139176_Token> _56217_tok = _56177_tokens[(*(_56164_i))];;
	_56141_param.get()._field_ident=_56217_tok.get()._field_kind;
	if ((((*(_56164_i)) + 1LL) >= _56177_tokens.len())) {
		return;;
	} else if ((((_56177_tokens.len() - (*(_56164_i))) - 1LL) < 2LL)) {
		_1dad66252_push_err(_self_.ptr(), _56217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	_56217_tok=_56177_tokens[((*(_56164_i)) + 1LL)];
	if ((_56217_tok.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1dad69e7b_build_param_type(_self_, _56141_param,_56177_tokens);
		return;;
	};
	_56177_tokens=_56177_tokens.slice(((*(_56164_i)) + 2LL));
	_1dad69e7b_build_param_type(_self_, _56141_param,_56177_tokens);
}



inline jule::Ptr<_20515009e_ParamDecl> _1dad6a652_build_param(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _58235_tokens) {
	jule::Ptr<_20515009e_ParamDecl> _58317_param = jule::new_ptr<_20515009e_ParamDecl>(_20515009e_ParamDecl{._field_token=_58235_tokens[0LL]});;
	if ((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_58317_param.get()._field_mutable=true;
		if ((_58235_tokens.len() == 1LL)) {
			_1dad66252_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58235_tokens=_58235_tokens.slice(1LL);
		_58317_param.get()._field_token=_58235_tokens[0LL];
	};
	if ((_58235_tokens.len() >= 3LL)) {
		if (((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58317_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58235_tokens.len() == 1LL)) {
				_1dad66252_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58235_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58235_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_58317_param.get()._field_reference=true;
				_58235_tokens=_58235_tokens.slice(1LL);
				_58317_param.get()._field_token=_58235_tokens[0LL];
			};
		};
	};
	if ((_58317_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_58317_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1dad69e7b_build_param_type(_self_, _58317_param,_58235_tokens);
	} else {
		jule::Ptr<jule::I64> _61921_i = jule::new_ptr<jule::I64>(0LL);;
		_1dad6a344_build_param_body(_self_, _58317_param,_61921_i,_58235_tokens);
	};
	return _58317_param;
}



inline void _1dad6a8c7_check_params(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_20515009e_ParamDecl>>& _62636_params) {
	{
		auto &expr = _62636_params;
		auto it = expr.begin();
		_iter_begin_1c412d3bb:;
		if (it != expr.end()) {
			jule::Ptr<_20515009e_ParamDecl> _62721_param = *it;
			{
				if ((_2050c276e_is_self(_62721_param.ptr()) || (_62721_param.get()._field_kind != nullptr))) {
					goto _iter_next_1c412d3bb;
				};
				if ((_62721_param.get()._field_token == nullptr)) {
					_1dad66252_push_err(&(*_self_), _62721_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62721_param.get()._field_kind=jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_62721_param.get()._field_token, ._field_kind=jule::Any(jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_62721_param.get()._field_token, ._field_ident=_62721_param.get()._field_token.get()._field_kind}))});
					_62721_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1c412d3bb:;
			++it;
			goto _iter_begin_1c412d3bb;
		}
		_iter_end_1c412d3bb:;
	};
}



inline jule::Slice<jule::Ptr<_20515009e_ParamDecl>> _1dad6ac7e_build_params(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _64637_tokens, jule::Bool _64655_method) {
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _64718_parts;;
	jule::Slice<_2046db273_Log> _64725_errs;;
	std::tie(_64718_parts,_64725_errs) = _1dad645d5_parts(_64637_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64725_errs);
	if ((_64718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_20515009e_ParamDecl>> _65317_params = nullptr;;
	if ((_64655_method && (_64718_parts.len() > 0LL))) {
		jule::Ptr<_20515009e_ParamDecl> _65521_param = _1dad69794_build_self_param(_self_.ptr(), _64718_parts[0LL]);;
		if (((_65521_param != nullptr) && _2050c276e_is_self(_65521_param.ptr()))) {
			_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_65521_param);;
			_64718_parts=_64718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64718_parts;
		auto it = expr.begin();
		_iter_begin_1c413467a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _66221_part = *it;
			{
				jule::Ptr<_20515009e_ParamDecl> _66321_param = _1dad6a652_build_param(_self_, _66221_part);;
				if ((_66321_param != nullptr)) {
					_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_66321_param);;
				};
			}
			_iter_next_1c413467a:;
			++it;
			goto _iter_begin_1c413467a;
		}
		_iter_end_1c413467a:;
	};
	_1dad6a8c7_check_params(_self_.ptr(), _65317_params);
	return _65317_params;
}



inline std::tuple<jule::Ptr<_2050bb834_RetTypeDecl>,jule::Bool> _1dad6b136_build_multi_ret_type(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _67345_tokens, jule::I64& _67368_i) {
	jule::Ptr<_2050bb834_RetTypeDecl> _67378_t = jule::Ptr<_2050bb834_RetTypeDecl>();
	jule::Bool _67395_ok = jule::Bool();
	_67378_t=jule::new_ptr<_2050bb834_RetTypeDecl>();
	(_67368_i)++;
	if ((_67368_i >= _67345_tokens.len())) {
		(_67368_i)--;
		std::tie(_67378_t.get()._field_kind,_67395_ok) = _1dad67b6b_build_type(_self_, _67345_tokens,(&(_67368_i)),false);
		return std::make_tuple(_67378_t,_67395_ok);
	};
	(_67368_i)--;
	jule::Slice<jule::Ptr<_205139176_Token>> _68317_range_tokens = _1dad63e0e_range(_67368_i,jule::Str("(", 1),jule::Str(")", 1),_67345_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _68518_parts;;
	jule::Slice<_2046db273_Log> _68525_errs;;
	std::tie(_68518_parts,_68525_errs) = _1dad645d5_parts(_68317_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68525_errs);
	if ((_68518_parts.len() == 0LL)) {
		return std::make_tuple(_67378_t,_67395_ok);
	};
	jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _69117_types = jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>>::alloc(0LL,_68518_parts.len());;
	_67378_t.get()._field_idents=jule::Slice<jule::Ptr<_205139176_Token>>::alloc(0LL,_68518_parts.len());
	{
		auto &expr = _68518_parts;
		auto it = expr.begin();
		_iter_begin_1c413a8e5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _69321_part = *it;
			{
				jule::Ptr<_205139176_Token> _69421_token = _69321_part[0LL];;
				jule::I64 _69521_offset = 0LL;;
				if ((_69321_part.len() > 1LL)) {
					_69421_token=_69321_part[1LL];
					if ((_69421_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_69521_offset=2LL;
						if ((_69321_part.len() < 3LL)) {
							_1dad66252_push_err(_self_.ptr(), _69421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1c413a8e5;
						};
					};
				};
				_69421_token=_69321_part[0LL];
				if ((_69521_offset != 2LL)) {
					jule::Ptr<_205139176_Token> _71125_new_token = jule::new_ptr<_205139176_Token>((*(_69421_token)));;
					_71125_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_71125_new_token);;
				} else {
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_69421_token);;
				};
				jule::Ptr<_204ec8b92_TypeDecl> _71822_tk;;
				std::tie(_71822_tk,std::ignore) = _1dad67b6b_build_type(_self_, _69321_part,(&(_69521_offset)),true);
				if ((_69521_offset < _69321_part.len())) {
					_1dad66252_push_err(_self_.ptr(), _69321_part[_69521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_69117_types = jule::alloc_for_append(_69117_types,1);_69117_types.__push(_71822_tk);;
			}
			_iter_next_1c413a8e5:;
			++it;
			goto _iter_begin_1c413a8e5;
		}
		_iter_end_1c413a8e5:;
	};
	if ((_69117_types.len() > 1LL)) {
		_67378_t.get()._field_kind=jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_67345_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_204ec9632_TupleTypeDecl>(_204ec9632_TupleTypeDecl{._field_types=_69117_types}))});
	} else {
		_67378_t.get()._field_kind=_69117_types[0LL];
	};
	_67395_ok=true;
	return std::make_tuple(_67378_t,_67395_ok);
}



inline std::tuple<jule::Ptr<_2050bb834_RetTypeDecl>,jule::Bool> _1dad6b4dd_build_ret_type(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _74139_tokens, jule::I64& _74162_i) {
	jule::Ptr<_2050bb834_RetTypeDecl> _74172_t = jule::Ptr<_2050bb834_RetTypeDecl>();
	jule::Bool _74189_ok = jule::Bool();
	_74172_t=jule::new_ptr<_2050bb834_RetTypeDecl>();
	if ((_74162_i >= _74139_tokens.len())) {
		return std::make_tuple(_74172_t,_74189_ok);
	};
	jule::Ptr<_205139176_Token> _74717_token = _74139_tokens[_74162_i];;
	{
		auto &_match_expr{ _74717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c414413a:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c41447cd:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c4144844:;
			{
				if (((_74162_i + 1LL) >= _74139_tokens.len())) {
					_1dad66252_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74172_t,_74189_ok);
				};
				(_74162_i)++;
				_74717_token=_74139_tokens[_74162_i];
				if ((_74717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _74717_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1c4147418:;
							{
								std::tie(_74172_t,_74189_ok) = _1dad6b136_build_multi_ret_type(_self_, _74139_tokens,_74162_i);
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1c41474a1:;
							{
								_1dad66252_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						_match_end_1c4147391:;
					};
				};
				std::tie(_74172_t.get()._field_kind,_74189_ok) = _1dad67b6b_build_type(_self_, _74139_tokens,(&(_74162_i)),true);
				return std::make_tuple(_74172_t,_74189_ok);
			}
		}
		_match_end_1c4144712:;
	};
	(_74162_i)++;
	_1dad66252_push_err(_self_.ptr(), _74717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74172_t,_74189_ok);
}



inline jule::Ptr<_20515028b_FnDecl> _1dad6b93e_build_fn_prototype(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _78643_tokens, jule::I64& _78666_i, jule::Bool _78674_method) {
	jule::Ptr<_20515028b_FnDecl> _78717_f = jule::new_ptr<_20515028b_FnDecl>(_20515028b_FnDecl{._field_token=_78643_tokens[_78666_i]});;
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_78717_f.get()._field_statically=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_78717_f.get()._field_unsafety=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	(_78666_i)++;
	if ((_78666_i >= _78643_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_205139176_Token> _82013_tok = _78643_tokens[_78666_i];;
	if ((_82013_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_ident=_82013_tok.get()._field_kind;
	} else {
		_78717_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_205139176_Token> _83213_error_token = _78643_tokens[_78666_i];;
	jule::Slice<jule::Ptr<_205139176_Token>> _83317_generics_tokens = _1dad63e0e_range(_78666_i,jule::Str("[", 1),jule::Str("]", 1),_78643_tokens);;
	if ((_83317_generics_tokens != nullptr)) {
		_78717_f.get()._field_generics=_1dad69486_build_generics(_self_.ptr(), _83317_generics_tokens,_83213_error_token);
	};
	if ((_78643_tokens[_78666_i].get()._field_kind != jule::Str("(", 1))) {
		_1dad66252_push_err(_self_.ptr(), _78643_tokens[_78666_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _84317_params_toks = _1dad63e0e_range(_78666_i,jule::Str("(", 1),jule::Str(")", 1),_78643_tokens);;
	if ((_84317_params_toks.len() > 0LL)) {
		_78717_f.get()._field_params=_1dad6ac7e_build_params(_self_, _84317_params_toks,_78674_method);
	};
	if ((_78666_i < _78643_tokens.len())) {
		jule::Ptr<_205139176_Token> _84917_token = _78643_tokens[_78666_i];;
		if (((_84917_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84917_token.get()._field_kind == jule::Str("!", 1)))) {
			_78717_f.get()._field_exceptional=true;
			(_78666_i)++;
		};
	};
	std::tie(_78717_f.get()._field_result,std::ignore) = _1dad6b4dd_build_ret_type(_self_, _78643_tokens,_78666_i);
	return _78717_f;
}



inline jule::Ptr<_20515028b_FnDecl> _1dad6bd90_build_fn(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _86233_tokens, jule::Bool _86251_method, jule::Bool _86265_prototype) {
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_20515028b_FnDecl> _86417_f = _1dad6b93e_build_fn_prototype(_self_, _86233_tokens,_86317_i,_86251_method);;
	if (_86265_prototype) {
		if ((_86317_i < _86233_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _86233_tokens[(_86317_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86417_f;
	} else if ((_86417_f == nullptr)) {
		return _86417_f;
	};
	if ((_86317_i >= _86233_tokens.len())) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _88017_block_tokens = _1dad63e0e_range(_86317_i,jule::Str("{", 1),jule::Str("}", 1),_86233_tokens);;
	if ((_88017_block_tokens != nullptr)) {
		_86417_f.get()._field_scope=_1dad672b9_build_scope(_self_, _88017_block_tokens,_86233_tokens[(_86317_i - 1LL)]);
		_86417_f.get()._field_scope.get()._field_unsafety=_86417_f.get()._field_unsafety;
		if ((_86317_i < _86233_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _86233_tokens[_86317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86417_f;
}



inline jule::Slice<jule::Ptr<_205139176_Token>> _1dad6c19d_get_use_decl_selectors(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _89645_tokens) {
	jule::I64 _89717_i = 0LL;;
	_89645_tokens=_1dad63e0e_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _89918_parts;;
	jule::Slice<_2046db273_Log> _89925_errs;;
	std::tie(_89918_parts,_89925_errs) = _1dad645d5_parts(_89645_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89925_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89925_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _90517_selectors = jule::Slice<jule::Ptr<_205139176_Token>>::alloc(0LL,_89918_parts.len());;
	{
		auto &expr = _89918_parts;
		auto it = expr.begin();
		_iter_begin_1c416092b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _90621_part = *it;
			{
				if ((_90621_part.len() > 1LL)) {
					_1dad66252_push_err(&(*_self_), _90621_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_205139176_Token> _91021_tok = _90621_part[0LL];;
				if (((_91021_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_91021_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1dad66252_push_err(&(*_self_), _91021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1dad66571_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1c416092b;
				};
				_90517_selectors = jule::alloc_for_append(_90517_selectors,1);_90517_selectors.__push(_91021_tok);;
			}
			_iter_next_1c416092b:;
			++it;
			goto _iter_begin_1c416092b;
		}
		_iter_end_1c416092b:;
	};
	return _90517_selectors;
}



inline void _1dad6c4bc_build_cpp_use_decl(_1dad657e5_Parser* _self_, jule::Ptr<_205151e6e_UseDecl>& _92142_decl, jule::Slice<jule::Ptr<_205139176_Token>>& _92159_tokens) {
	if ((_92159_tokens.len() > 1LL)) {
		_1dad66252_push_err(&(*_self_), _92159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_205139176_Token> _92513_token = _92159_tokens[0LL];;
	if (((_92513_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92513_token.get()._field_kind[0LL] != '`') && (_92513_token.get()._field_kind[0LL] != '\"')))) {
		_1dad66252_push_err(&(*_self_), _92513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_92142_decl.get()._field_cpp_linked=true;
	_92142_decl.get()._field_link_path=_92513_token.get()._field_kind.slice(1LL,(_92513_token.get()._field_kind.len() - 1LL));
}



inline void _1dad6c7db_build_std_use_decl(_1dad657e5_Parser* _self_, jule::Ptr<_205151e6e_UseDecl>& _93442_decl, jule::Slice<jule::Ptr<_205139176_Token>> _93462_tokens) {
	_93442_decl.get()._field_std=true;
	jule::Ptr<_205139176_Token> _93717_token = _93462_tokens[0LL];;
	if ((_93462_tokens.len() < 3LL)) {
		_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93462_tokens=_93462_tokens.slice(2LL);
	_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c416a804:;
			{
				_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c416a8ae:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("}", 1))) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_205139176_Token>> _95421_selectors = nullptr;;
				std::tie(_93462_tokens,_95421_selectors) = _1dad641a6_range_last(_93462_tokens);
				_93442_decl.get()._field_selected=_1dad6c19d_get_use_decl_selectors(&(*_self_), _95421_selectors);
				if ((_93462_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c416a925:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("*", 1))) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93442_decl.get()._field_full=true;
			}
		}
		_match_end_1c416a79e:;
	};
	_93442_decl.get()._field_link_path=(jule::Str("std::", 5) + _1dad6542c_tokstoa(_93462_tokens));
}



inline void _1dad6cb0a_build_ident_use_decl(_1dad657e5_Parser* _self_, jule::Ptr<_205151e6e_UseDecl>& _99644_decl, jule::Slice<jule::Ptr<_205139176_Token>> _99664_tokens) {
	_99644_decl.get()._field_std=false;
	jule::Ptr<_205139176_Token> _99917_token = _99664_tokens[(_99664_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99917_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c417b518:;
			{
				_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c417b57e:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("}", 1))) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_205139176_Token>> _101021_selectors = nullptr;;
				std::tie(_99664_tokens,_101021_selectors) = _1dad641a6_range_last(_99664_tokens);
				_99644_decl.get()._field_selected=_1dad6c19d_get_use_decl_selectors(&(*_self_), _101021_selectors);
				if ((_99664_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c417b5e5:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("*", 1))) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1dad66252_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99644_decl.get()._field_full=true;
			}
		}
		_match_end_1c417b419:;
	};
	_99644_decl.get()._field_link_path=_1dad6542c_tokstoa(_99664_tokens);
}



inline void _1dad6ce29_parse_use_decl(_1dad657e5_Parser* _self_, jule::Ptr<_205151e6e_UseDecl>& _105938_decl, jule::Slice<jule::Ptr<_205139176_Token>> _105958_tokens) {
	if (_105938_decl.get()._field_cpp_linked) {
		_1dad6c4bc_build_cpp_use_decl(&(*_self_), _105938_decl,_105958_tokens);
		return;;
	};
	jule::Ptr<_205139176_Token> _106517_token = _105958_tokens[0LL];;
	if ((_106517_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105958_tokens.len() > 2LL) && (_105958_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_105938_decl.get()._field_alias=_106517_token.get()._field_kind;
		if ((_105958_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1dad66252_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1dad66571_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105958_tokens=_105958_tokens.slice(2LL);
		_106517_token=_105958_tokens[0LL];
	};
	;
	{
		
		if ((_106517_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1c418b2b4:;
			{
				_1dad6c7db_build_std_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		else {
			_case_begin_1c418abba:;
			{
				_1dad6cb0a_build_ident_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		_match_end_1c418ab43:;
	};
}



inline jule::Ptr<_205151e6e_UseDecl> _1dad6d2d1_build_use_decl(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _109337_tokens, jule::Bool _109355_cpp_linked) {
	jule::Ptr<_205151e6e_UseDecl> _109417_decl = jule::new_ptr<_205151e6e_UseDecl>(_205151e6e_UseDecl{._field_token=_109337_tokens[0LL], ._field_cpp_linked=_109355_cpp_linked});;
	if ((_109337_tokens.len() < 2LL)) {
		_1dad66252_push_err(&(*_self_), _109417_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109337_tokens=_109337_tokens.slice(1LL);
	_1dad6ce29_parse_use_decl(&(*_self_), _109417_decl,_109337_tokens);
	return _109417_decl;
}



inline jule::Ptr<_2050bba21_Expr> _1dad6d688_build_enum_item_expr(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<jule::I64> _110744_i, jule::Slice<jule::Ptr<_205139176_Token>>& _110758_tokens) {
	jule::I64 _110817_brace_n = 0LL;;
	jule::I64 _110913_expr_start = (*(_110744_i));;
	for (; ((*(_110744_i)) < _110758_tokens.len()); ((*(_110744_i)))++) {
		{
			jule::Ptr<_205139176_Token> _111117_t = _110758_tokens[(*(_110744_i))];;
			if ((_111117_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _111117_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c4191d8b:;
						{
							(_110817_brace_n)++;
							goto _iter_next_1c4190917;
						}
					}
					else {
						_case_begin_1c4191792:;
						{
							(_110817_brace_n)--;
						}
					}
					_match_end_1c41919c3:;
				};
			};
			if ((_110817_brace_n > 0LL)) {
				goto _iter_next_1c4190917;
			};
			if (((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU)) || (((*(_110744_i)) + 1LL) >= _110758_tokens.len()))) {
				jule::Slice<jule::Ptr<_205139176_Token>> _112925_expr_tokens = nullptr;;
				if ((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start,(*(_110744_i)));
				} else {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start);
				};
				return _1dad6687e_build_expr(_self_, _112925_expr_tokens);
			};
		}
	_iter_next_1c4190917:;
	}
	_iter_end_1c4190917:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>> _1dad6d996_build_enum_items(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _114141_tokens) {
	jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::Ptr<jule::I64> _114317_i = jule::new_ptr<jule::I64>(0LL);;
	for (; ((*(_114317_i)) < _114141_tokens.len()); ((*(_114317_i)))++) {
		{
			jule::Ptr<_205139176_Token> _114521_t = _114141_tokens[(*(_114317_i))];;
			jule::Ptr<_20515215b_EnumItemDecl> _114621_item = jule::new_ptr<_20515215b_EnumItemDecl>(_20515215b_EnumItemDecl{});;
			_114621_item.get()._field_token=_114521_t;
			if ((_114621_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1dad66252_push_err(_self_.ptr(), _114621_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
			if (((((*(_114317_i)) + 1LL) >= _114141_tokens.len()) || (_114141_tokens[((*(_114317_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if ((((*(_114317_i)) + 1LL) < _114141_tokens.len())) {
					((*(_114317_i)))++;
				};
				_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
				goto _iter_next_1c4195cd5;
			};
			((*(_114317_i)))++;
			_114521_t=_114141_tokens[(*(_114317_i))];
			((*(_114317_i)))++;
			if (((_114521_t.get()._field_id != static_cast<jule::U64>(7LLU)) || (_114521_t.get()._field_kind != jule::Str("=", 1)))) {
				_1dad66252_push_err(_self_.ptr(), _114521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1c4195cd5;
			};
			if ((((*(_114317_i)) >= _114141_tokens.len()) || (_114141_tokens[(*(_114317_i))].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1dad66252_push_err(_self_.ptr(), _114521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1c4195cd5;
			};
			_114621_item.get()._field_expr=_1dad6d688_build_enum_item_expr(_self_, _114317_i,_114141_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1c4195cd5:;
	}
	_iter_end_1c4195cd5:;;
	return _114217_items;
}



inline jule::Ptr<_205152579_EnumDecl> _1dad6dca4_build_enum_decl(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _117840_tokens) {
	if (((_117840_tokens.len() < 2LL) || (_117840_tokens.len() < 3LL))) {
		_1dad66252_push_err(_self_.ptr(), _117840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_205152579_EnumDecl> _118317_e = jule::new_ptr<_205152579_EnumDecl>(_205152579_EnumDecl{._field_token=_117840_tokens[1LL]});;
	if ((_118317_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_ident=_118317_e.get()._field_token.get()._field_kind;
	jule::I64 _119117_i = 2LL;;
	if ((_117840_tokens[_119117_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_119117_i)++;
		if ((_119117_i >= _117840_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _117840_tokens[(_119117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _118317_e;
		};
		std::tie(_118317_e.get()._field_kind,std::ignore) = _1dad67b6b_build_type(_self_, _117840_tokens,(&(_119117_i)),true);
		if ((_119117_i >= _117840_tokens.len())) {
			_1dad65b25_stop(_self_.ptr());
			_1dad66252_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _118317_e;
		};
	} else {
		_118317_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _120817_item_tokens = _1dad63e0e_range(_119117_i,jule::Str("{", 1),jule::Str("}", 1),_117840_tokens);;
	if ((_120817_item_tokens == nullptr)) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _118317_e;
	} else if ((_119117_i < _117840_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _117840_tokens[_119117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_end=_117840_tokens[(_119117_i - 1LL)];
	_118317_e.get()._field_items=_1dad6d996_build_enum_items(_self_, _120817_item_tokens);
	return _118317_e;
}



inline jule::Ptr<_205152b84_FieldDecl> _1dad6e0b2_build_field(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _122235_tokens) {
	jule::Ptr<_205152b84_FieldDecl> _122317_f = jule::new_ptr<_205152b84_FieldDecl>(_205152b84_FieldDecl{});;
	_122317_f.get()._field_public=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_122317_f.get()._field_public) {
		if ((_122235_tokens.len() == 1LL)) {
			_1dad66252_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_mutable=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_122317_f.get()._field_mutable) {
		if ((_122235_tokens.len() == 1LL)) {
			_1dad66252_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_token=_122235_tokens[0LL];
	if ((_122317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(_self_.ptr(), _122317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122317_f.get()._field_ident=_122317_f.get()._field_token.get()._field_kind;
	if ((_122235_tokens.len() == 1LL)) {
		_1dad66252_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_122235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1dad66252_push_err(_self_.ptr(), _122235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122235_tokens=_122235_tokens.slice(2LL);
	jule::I64 _126017_i = 0LL;;
	std::tie(_122317_f.get()._field_kind,std::ignore) = _1dad67b6b_build_type(_self_, _122235_tokens,(&(_126017_i)),true);
	if ((_126017_i < _122235_tokens.len())) {
		jule::Ptr<_205139176_Token> _126317_token = _122235_tokens[_126017_i];;
		if (((_126317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_126317_token.get()._field_kind != jule::Str("=", 1)))) {
			_1dad66252_push_err(_self_.ptr(), _122235_tokens[_126017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_126017_i)++;
		if ((_126017_i >= _122235_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _126317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(_126017_i);
		_122317_f.get()._field_default=_1dad6687e_build_expr(_self_, _122235_tokens);
	};
	return _122317_f;
}



inline jule::Slice<jule::Ptr<_205152b84_FieldDecl>> _1dad6e3e2_build_struct_decl_fields(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _128048_tokens) {
	jule::Slice<jule::Ptr<_205152b84_FieldDecl>> _128117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _128217_stmts = _1dad48bd5_split_stmts(_128048_tokens);;
	{
		auto &expr = _128217_stmts;
		auto it = expr.begin();
		_iter_begin_1c41b5ac4:;
		if (it != expr.end()) {
			jule::Ptr<_1dad4883e_Stmt> _128321_stmt = *it;
			{
				_128048_tokens=_128321_stmt.get()._field_tokens;
				jule::Ptr<_205152b84_FieldDecl> _128521_f = _1dad6e0b2_build_field(_self_, _128048_tokens);;
				_128117_fields = jule::alloc_for_append(_128117_fields,1);_128117_fields.__push(_128521_f);;
			}
			_iter_next_1c41b5ac4:;
			++it;
			goto _iter_begin_1c41b5ac4;
		}
		_iter_end_1c41b5ac4:;
	};
	return _128117_fields;
}



inline jule::Ptr<_2051534e2_StructDecl> _1dad6e711_build_struct_decl(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _129142_tokens) {
	if ((_129142_tokens.len() < 3LL)) {
		_1dad66252_push_err(_self_.ptr(), _129142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _129717_i = 1LL;;
	jule::Ptr<_2051534e2_StructDecl> _129817_s = jule::new_ptr<_2051534e2_StructDecl>(_2051534e2_StructDecl{._field_token=_129142_tokens[_129717_i]});;
	if ((_129817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_129717_i)++;
	if ((_129717_i >= _129142_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _129817_s;
	};
	_129817_s.get()._field_ident=_129817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_205139176_Token> _131213_error_token = _129142_tokens[_129717_i];;
	jule::Slice<jule::Ptr<_205139176_Token>> _131317_generics_tokens = _1dad63e0e_range(_129717_i,jule::Str("[", 1),jule::Str("]", 1),_129142_tokens);;
	if ((_131317_generics_tokens != nullptr)) {
		_129817_s.get()._field_generics=_1dad69486_build_generics(_self_.ptr(), _131317_generics_tokens,_131213_error_token);
	};
	if ((_129717_i >= _129142_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _129142_tokens[(_129717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _132317_body_tokens = _1dad63e0e_range(_129717_i,jule::Str("{", 1),jule::Str("}", 1),_129142_tokens);;
	if ((_132317_body_tokens == nullptr)) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	if ((_129717_i < _129142_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_129817_s.get()._field_fields=_1dad6e3e2_build_struct_decl_fields(_self_, _132317_body_tokens);
	_129817_s.get()._field_end=_129142_tokens[(_129717_i - 1LL)];
	return _129817_s;
}



inline void _1dad6e986_check_method_receiver(_1dad657e5_Parser* _self_, jule::Ptr<_20515028b_FnDecl>& _133841_f) {
	if (_133841_f.get()._field_statically) {
		if (((_133841_f.get()._field_params.len() > 0LL) && _2050c276e_is_self(_133841_f.get()._field_params[0LL].ptr()))) {
			_1dad66252_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_133841_f.get()._field_params.len() == 0LL)) {
		_1dad66252_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20515009e_ParamDecl> _135113_param = _133841_f.get()._field_params[0LL];;
	if ((!(_2050c276e_is_self(_135113_param.ptr())))) {
		_1dad66252_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_20515028b_FnDecl>> _1dad6ec94_build_trait_methods(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _135843_tokens) {
	jule::Slice<jule::Ptr<_20515028b_FnDecl>> _135917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _136017_stmts = _1dad48bd5_split_stmts(_135843_tokens);;
	{
		auto &expr = _136017_stmts;
		auto it = expr.begin();
		_iter_begin_1c41c6ce4:;
		if (it != expr.end()) {
			jule::Ptr<_1dad4883e_Stmt> _136121_stmt = *it;
			{
				_135843_tokens=_136121_stmt.get()._field_tokens;
				if ((_135843_tokens.len() == 0LL)) {
					goto _iter_next_1c41c6ce4;
				};
				jule::Bool _136721_is_pub = false;;
				if ((_135843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_136721_is_pub=true;
					if ((_135843_tokens.len() == 1LL)) {
						_1dad66252_push_err(_self_.ptr(), _135843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1c41c6ce4;
					};
					_135843_tokens=_135843_tokens.slice(1LL);
				};
				jule::Ptr<_20515028b_FnDecl> _137721_f = _1dad6bd90_build_fn(_self_, _135843_tokens,true,true);;
				if ((_137721_f != nullptr)) {
					if (_2050d51dd_is_anon(_137721_f.ptr())) {
						_1dad66252_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1dad6e986_check_method_receiver(_self_.ptr(), _137721_f);
					if ((_137721_f.get()._field_generics.len() > 0LL)) {
						_1dad66252_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_137721_f.get()._field_public=_136721_is_pub;
					_135917_methods = jule::alloc_for_append(_135917_methods,1);_135917_methods.__push(_137721_f);;
				};
			}
			_iter_next_1c41c6ce4:;
			++it;
			goto _iter_begin_1c41c6ce4;
		}
		_iter_end_1c41c6ce4:;
	};
	return _135917_methods;
}



inline jule::Ptr<_205153aec_TraitDecl> _1dad700a2_build_trait_decl(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _139341_tokens) {
	if ((_139341_tokens.len() < 3LL)) {
		_1dad66252_push_err(_self_.ptr(), _139341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_205153aec_TraitDecl> _139817_t = jule::new_ptr<_205153aec_TraitDecl>(_205153aec_TraitDecl{._field_token=_139341_tokens[1LL]});;
	if ((_139817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1dad66252_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_ident=_139817_t.get()._field_token.get()._field_kind;
	jule::I64 _140617_i = 2LL;;
	jule::Slice<jule::Ptr<_205139176_Token>> _140717_body_tokens = _1dad63e0e_range(_140617_i,jule::Str("{", 1),jule::Str("}", 1),_139341_tokens);;
	if ((_140717_body_tokens == nullptr)) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_140617_i < _139341_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _139341_tokens[_140617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_methods=_1dad6ec94_build_trait_methods(_self_, _140717_body_tokens);
	_139817_t.get()._field_end=_139341_tokens[(_140617_i - 1LL)];
	return _139817_t;
}



inline jule::Ptr<_20515028b_FnDecl> _1dad703b0_build_cpp_link_fn(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _142241_tokens) {
	_142241_tokens=_142241_tokens.slice(1LL);
	jule::Ptr<_20515028b_FnDecl> _142417_f = _1dad6bd90_build_fn(_self_, _142241_tokens,false,true);;
	if ((_142417_f != nullptr)) {
		if (_2050d51dd_is_anon(_142417_f.ptr())) {
			_1dad66252_push_err(_self_.ptr(), _142417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_142417_f.get()._field_cpp_linked=true;
	};
	return _142417_f;
}



inline jule::Ptr<_205150478_VarDecl> _1dad706bd_build_cpp_link_var(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _143442_tokens) {
	_143442_tokens=_143442_tokens.slice(1LL);
	jule::Ptr<_205150478_VarDecl> _143617_v = _1dad68cc1_build_var(_self_, _143442_tokens);;
	if ((_143617_v != nullptr)) {
		_143617_v.get()._field_cpp_linked=true;
		if ((_143617_v.get()._field_expr != nullptr)) {
			_1dad66252_push_err(_self_.ptr(), _143617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _143617_v;
}



inline jule::Ptr<_2051534e2_StructDecl> _1dad709cb_build_cpp_link_struct(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _144645_tokens) {
	_144645_tokens=_144645_tokens.slice(1LL);
	jule::Ptr<_2051534e2_StructDecl> _144817_s = _1dad6e711_build_struct_decl(_self_, _144645_tokens);;
	if ((_144817_s != nullptr)) {
		_144817_s.get()._field_cpp_linked=true;
	};
	return _144817_s;
}



inline jule::Ptr<_2051518a8_TypeAliasDecl> _1dad70d0b_build_cpp_link_type_alias(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _145549_tokens) {
	_145549_tokens=_145549_tokens.slice(1LL);
	jule::Ptr<_2051518a8_TypeAliasDecl> _145717_t = _1dad67e79_build_type_alias_decl(_self_, _145549_tokens);;
	if ((_145717_t != nullptr)) {
		_145717_t.get()._field_cpp_linked=true;
	};
	return _145717_t;
}



inline jule::Ptr<_205151e6e_UseDecl> _1dad7112a_build_cpp_link_use(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _146442_tokens) {
	if ((_146442_tokens.len() == 1LL)) {
		_1dad66252_push_err(_self_.ptr(), _146442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_146442_tokens=_146442_tokens.slice(1LL);
	;
	return _1dad6d2d1_build_use_decl(_self_.ptr(), _146442_tokens,true);
}



inline jule::Any _1dad71438_build_cpp_link(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _147539_tokens) {
	jule::Ptr<_205139176_Token> _147617_token = _147539_tokens[0LL];;
	if ((_147539_tokens.len() == 1LL)) {
		_1dad66252_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_147617_token=_147539_tokens[1LL];
	{
		auto &_match_expr{ _147617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c41e0d74:;
			{
				return jule::Any(_1dad7112a_build_cpp_link_use(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c41e0dda:;
			{
				return jule::Any(_1dad703b0_build_cpp_link_fn(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c41e0e51:;
			{
				return jule::Any(_1dad706bd_build_cpp_link_var(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c41e0eb7:;
			{
				return jule::Any(_1dad709cb_build_cpp_link_struct(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c41e178c:;
			{
				return jule::Any(_1dad70d0b_build_cpp_link_type_alias(_self_, _147539_tokens));
			}
		}
		else {
			_case_begin_1c41e0835:;
			{
				_1dad66252_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c41e0c64:;
	};
	return nullptr;
}



inline jule::Ptr<_20515028b_FnDecl> _1dad71746_get_method(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _150135_tokens) {
	jule::I64 _150217_i = 0LL;;
	jule::Ptr<_205139176_Token> _150317_token = _150135_tokens[_150217_i];;
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_1dad66252_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1dad66252_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_20515028b_FnDecl> _152717_f = _1dad6bd90_build_fn(_self_, _150135_tokens,true,false);;
	if (((_152717_f != nullptr) && _2050d51dd_is_anon(_152717_f.ptr()))) {
		_1dad66252_push_err(_self_.ptr(), _152717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _152717_f;
}



inline void _1dad71a65_parse_impl_body(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<_205154207_Impl>& _153440_ipl, jule::Slice<jule::Ptr<_205139176_Token>>& _153457_tokens) {
	jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _153517_stmts = _1dad48bd5_split_stmts(_153457_tokens);;
	{
		auto &expr = _153517_stmts;
		auto it = expr.begin();
		_iter_begin_1c41eabe7:;
		if (it != expr.end()) {
			jule::Ptr<_1dad4883e_Stmt> _153621_stmt = *it;
			{
				_153457_tokens=_153621_stmt.get()._field_tokens;
				jule::Ptr<_205139176_Token> _153821_token = _153457_tokens[0LL];;
				jule::Bool _153921_is_pub = false;;
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1c41ebe6d:;
						{
							_1dad66e12_push_directive(_self_.ptr(), _1dad66b8c_build_directive(_self_.ptr(), _153457_tokens));
							goto _iter_next_1c41eabe7;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1c41ec006:;
						{
							_153921_is_pub=true;
							if ((_153457_tokens.len() == 1LL)) {
								_1dad66252_push_err(_self_.ptr(), _153457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1c41eabe7;
							};
							_153457_tokens=_153457_tokens.slice(1LL);
							if ((_153457_tokens.len() > 0LL)) {
								_153821_token=_153457_tokens[0LL];
							};
						}
					}
					_match_end_1c41ebe18:;
				};
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1c41eeb0d:;
						{
							jule::Ptr<_205150478_VarDecl> _155825_v = _1dad68cc1_build_var(_self_, _153457_tokens);;
							if ((_155825_v != nullptr)) {
								_155825_v.get()._field_public=_153921_is_pub;
								_153440_ipl.get()._field_statics = jule::alloc_for_append(_153440_ipl.get()._field_statics,1);_153440_ipl.get()._field_statics.__push(_155825_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1c41ecde7:;
						{
							jule::Ptr<_20515028b_FnDecl> _156625_f = _1dad71746_get_method(_self_, _153457_tokens);;
							if ((_156625_f != nullptr)) {
								_1dad6e986_check_method_receiver(_self_.ptr(), _156625_f);
								_1dad72725_apply_fn_meta(_self_.ptr(), _156625_f,_153921_is_pub);
								_153440_ipl.get()._field_methods = jule::alloc_for_append(_153440_ipl.get()._field_methods,1);_153440_ipl.get()._field_methods.__push(_156625_f);;
							};
						}
					}
					else {
						_case_begin_1c41ec06c:;
						{
							_1dad66252_push_err(_self_.ptr(), _153821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1c41eabe7;
						}
					}
					_match_end_1c41ee26c:;
				};
			}
			_iter_next_1c41eabe7:;
			++it;
			goto _iter_begin_1c41eabe7;
		}
		_iter_end_1c41eabe7:;
	};
}



inline jule::Ptr<_205154207_Impl> _1dad71d73_build_impl(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _157934_tokens) {
	jule::Ptr<_205139176_Token> _158017_token = _157934_tokens[0LL];;
	if ((_157934_tokens.len() < 2LL)) {
		_1dad66252_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _158617_i = 1LL;;
	jule::Ptr<_204ec8b92_TypeDecl> _158818_base;;
	jule::Bool _158828_ok;;
	std::tie(_158818_base,_158828_ok) = _1dad67b6b_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_205154207_Impl> _159717_ipl = jule::new_ptr<_205154207_Impl>(_205154207_Impl{._field_base=_158818_base});;
	_158017_token=_157934_tokens[_158617_i];
	if ((_158017_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_158017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_158017_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_159717_ipl.get()._field_base,_159717_ipl.get()._field_dest) = std::make_tuple(_159717_ipl.get()._field_dest,_159717_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_158617_i)++;
	if ((_158617_i >= _157934_tokens.len())) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_159717_ipl.get()._field_dest,_158828_ok) = _1dad67b6b_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_205139176_Token>> _163717_body_tokens = _1dad63e0e_range(_158617_i,jule::Str("{", 1),jule::Str("}", 1),_157934_tokens);;
	if ((_163717_body_tokens == nullptr)) {
		_1dad65b25_stop(_self_.ptr());
		_1dad66252_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_158617_i < _157934_tokens.len())) {
		_1dad66252_push_err(_self_.ptr(), _157934_tokens[_158617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_159717_ipl.get()._field_end=_157934_tokens[(_158617_i - 1LL)];
	_1dad71a65_parse_impl_body(_self_, _159717_ipl,_163717_body_tokens);
	return _159717_ipl;
}



inline jule::Any _1dad72181_build_node_data(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _165240_tokens) {
	jule::Ptr<_205139176_Token> _165317_token = _165240_tokens[0LL];;
	{
		auto &_match_expr{ _165317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c4212d41:;
			{
				;
				return jule::Any(_1dad6d2d1_build_use_decl(_self_.ptr(), _165240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c4212da7:;
			{
				jule::Ptr<_20515028b_FnDecl> _166021_f = _1dad6bd90_build_fn(_self_, _165240_tokens,false,false);;
				if ((_166021_f != nullptr)) {
					_166021_f.get()._field_global=true;
					if (_2050d51dd_is_anon(_166021_f.ptr())) {
						_1dad66252_push_err(_self_.ptr(), _166021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_166021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1c421302d:;
			{
				return jule::Any(_1dad68cc1_build_var(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c4213094:;
			{
				return jule::Any(_1dad67e79_build_type_alias_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1c42123e5:;
			{
				return jule::Any(_1dad6dca4_build_enum_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c421245b:;
			{
				return jule::Any(_1dad6e711_build_struct_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c42124c2:;
			{
				return jule::Any(_1dad700a2_build_trait_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c4212538:;
			{
				return jule::Any(_1dad71d73_build_impl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c421311b:;
			{
				return jule::Any(_1dad71438_build_cpp_link(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1c4213182:;
			{
				return jule::Any(_1dad66b8c_build_directive(_self_.ptr(), _165240_tokens));
			}
		}
		else {
			_case_begin_1c421237e:;
			{
				_1dad66252_push_err(_self_.ptr(), _165317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c4212329:;
	};
}



inline void _1dad72406_check_directive(_1dad657e5_Parser* _self_, _204ec155d_Node& _169335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _169335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_204ec174a_Directive>>()) {
			_case_begin_1c421b410:;
			{
				goto _match_end_1c4219c49;
			}
		}
		else {
			_case_begin_1c421a123:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1dad66252_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				};
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1c4219c49:;
	};
}



inline void _1dad72725_apply_fn_meta(_1dad657e5_Parser* _self_, jule::Ptr<_20515028b_FnDecl>& _171037_f, jule::Bool _171049_is_pub) {
	_171037_f.get()._field_public=_171049_is_pub;
	_171037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1dad72a44_apply_meta(_1dad657e5_Parser* _self_, _204ec155d_Node& _171634_node, jule::Bool _171646_is_pub) {
	{
		auto &_match_expr{ _171634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_205150478_VarDecl>>()) {
			_case_begin_1c421d3ce:;
			{
				jule::Ptr<_205150478_VarDecl> _171921_v = _171634_node._field_data.operator jule::Ptr<_205150478_VarDecl>();;
				if ((_171921_v == nullptr)) {
					return;;
				};
				_171921_v.get()._field_public=_171646_is_pub;
				_171921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20515028b_FnDecl>>()) {
			_case_begin_1c421d445:;
			{
				jule::Ptr<_20515028b_FnDecl> _172721_f = _171634_node._field_data.operator jule::Ptr<_20515028b_FnDecl>();;
				if ((_172721_f == nullptr)) {
					return;;
				};
				_1dad72725_apply_fn_meta(&(*_self_), _172721_f,_171646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2051518a8_TypeAliasDecl>>()) {
			_case_begin_1c421d4ab:;
			{
				jule::Ptr<_2051518a8_TypeAliasDecl> _173321_tad = _171634_node._field_data.operator jule::Ptr<_2051518a8_TypeAliasDecl>();;
				if ((_173321_tad == nullptr)) {
					return;;
				};
				_173321_tad.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205152579_EnumDecl>>()) {
			_case_begin_1c421d522:;
			{
				jule::Ptr<_205152579_EnumDecl> _173921_ed = _171634_node._field_data.operator jule::Ptr<_205152579_EnumDecl>();;
				if ((_173921_ed == nullptr)) {
					return;;
				};
				_173921_ed.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2051534e2_StructDecl>>()) {
			_case_begin_1c421d70e:;
			{
				jule::Ptr<_2051534e2_StructDecl> _174521_sd = _171634_node._field_data.operator jule::Ptr<_2051534e2_StructDecl>();;
				if ((_174521_sd == nullptr)) {
					return;;
				};
				_174521_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_174521_sd.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205153aec_TraitDecl>>()) {
			_case_begin_1c421d775:;
			{
				jule::Ptr<_205153aec_TraitDecl> _175321_td = _171634_node._field_data.operator jule::Ptr<_205153aec_TraitDecl>();;
				if ((_175321_td == nullptr)) {
					return;;
				};
				_175321_td.get()._field_public=_171646_is_pub;
			}
		}
		else {
			_case_begin_1c421d2d0:;
			{
				if (_171646_is_pub) {
					_1dad66252_push_err(&(*_self_), _171634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c421d27a:;
	};
}



inline void _1dad72cb9_check_use_decl(_1dad657e5_Parser* _self_, _204ec155d_Node& _176534_node) {
	{
		auto &_match_expr{ _176534_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_205151e6e_UseDecl>>()) {
			_case_begin_1c42255b2:;
			{
				goto _match_end_1c422579e;
			}
		}
		else {
			_case_begin_1c4225804:;
			{
				return;;
			}
		}
		_match_end_1c422579e:;
	};
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1dad66252_push_err(&(*_self_), _176534_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1dad66571_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline std::tuple<jule::Bool,jule::Any> _1dad730e9_build_general_scope_node_data(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>> _178053_st) {
	jule::Bool _178069_is_pub = jule::Bool();
	jule::Any _178083_data = jule::Any();
	if ((_178053_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_178069_is_pub=true;
		_178053_st=_178053_st.slice(1LL);
		if ((_178053_st.len() == 0LL)) {
			_1dad66252_push_err(_self_.ptr(), _178053_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_178069_is_pub,_178083_data);
		};
	};
	_178083_data=jule::Any(_1dad72181_build_node_data(_self_, _178053_st));
	_178083_data = jule::Any(_178083_data);
	return std::make_tuple(_178069_is_pub,_178083_data);
}



inline _204ec155d_Node _1dad73418_parse_node(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _179535_st) {
	_204ec155d_Node _179617_node = _204ec155d_Node{._field_token=_179535_st[0LL]};;
	jule::Bool _180014_is_pub;;
	jule::Any _180026_data;;
	std::tie(_180014_is_pub,_180026_data) = _1dad730e9_build_general_scope_node_data(_self_, _179535_st);
	if ((_180026_data == nullptr)) {
		return _179617_node;
	};
	_179617_node._field_data=jule::Any(_180026_data);
	_1dad72a44_apply_meta(_self_.ptr(), _179617_node,_180014_is_pub);
	_1dad72406_check_directive(_self_.ptr(), _179617_node);
	_1dad72cb9_check_use_decl(_self_.ptr(), _179617_node);
	return _179617_node;
}



inline void _1dad7368d_append_node(jule::Ptr<_1dad657e5_Parser> _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _181336_st) {
	if ((_181336_st.len() == 0LL)) {
		return;;
	};
	_204ec155d_Node _181817_node = _1dad73418_parse_node(_self_, _181336_st);;
	if (((_181817_node._field_data == nullptr) || _1dad65d89_stopped(_self_.ptr()))) {
		return;;
	};
	{
		
		if (_204edade6_is_directive(&_181817_node)) {
			_case_begin_1c4230413:;
			{
				_1dad66e12_push_directive(_self_.ptr(), _181817_node._field_data.operator jule::Ptr<_204ec174a_Directive>());
			}
		}
		else if (_204edc2c1_is_use_decl(&_181817_node)) {
			_case_begin_1c4230105:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_181817_node._field_data.operator jule::Ptr<_205151e6e_UseDecl>());;
			}
		}
		else if ((_204ed6496_is_decl(&_181817_node) || _204edba2e_is_impl(&_181817_node))) {
			_case_begin_1c423016b:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_181817_node);;
			}
		}
		else {
			_case_begin_1c423008e:;
			{
				_1dad66252_push_err(_self_.ptr(), _181817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4230039:;
	};
}



inline void _1dad73b00_remove_range(_1dad657e5_Parser* _self_, jule::I64 _183631_i, jule::Str _183639_kind, jule::Slice<jule::Ptr<_205139176_Token>>& _183651_tokens, jule::Slice<jule::I64>& _183674_ranges) {
	jule::Str _183713_close = _1dad6489e_get_close_kind_of_brace(_183639_kind);;
	for (; (_183631_i >= 0LL); (_183631_i)--) {
		{
			jule::Ptr<_205139176_Token> _183917_tok = _183651_tokens[_183674_ranges[_183631_i]];;
			if ((_183917_tok.get()._field_kind != _183713_close)) {
				goto _iter_next_1c4234170;
			};
			_183674_ranges=jule::append(_183674_ranges.slice(0LL,_183631_i),_183674_ranges.slice((_183631_i + 1LL)));
			goto _iter_end_1c4234170;
		}
	_iter_next_1c4234170:;
	}
	_iter_end_1c4234170:;;
}



inline void _1dad73eda_push_wrong_order_close_err(_1dad657e5_Parser* _self_, jule::Ptr<_205139176_Token>& _184846_t, jule::Slice<jule::Ptr<_205139176_Token>>& _184858_tokens, jule::Slice<jule::I64>& _184877_ranges) {
	{
		auto &_match_expr{ _184858_tokens[_184877_ranges[(_184877_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1c4236c99:;
			{
				_1dad66252_push_err(&(*_self_), _184846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1c4236d10:;
			{
				_1dad66252_push_err(&(*_self_), _184846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1c4236d76:;
			{
				_1dad66252_push_err(&(*_self_), _184846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4236c00:;
	};
}



inline void _1dad7445d_push_range_close(_1dad657e5_Parser* _self_, jule::Ptr<_205139176_Token> _185935_t, jule::Str _185946_left, jule::Slice<jule::Ptr<_205139176_Token>>& _185958_tokens, jule::Slice<jule::I64>& _185981_ranges) {
	jule::I64 _186013_n = _185981_ranges.len();;
	if ((_186013_n == 0LL)) {
		{
			auto &_match_expr{ _185935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1c423a495:;
				{
					_1dad66252_push_err(&(*_self_), _185935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1c423a52d:;
				{
					_1dad66252_push_err(&(*_self_), _185935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1c423a594:;
				{
					_1dad66252_push_err(&(*_self_), _185935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1c423a3da:;
		};
		return;;
	} else if ((_185958_tokens[_185981_ranges[(_186013_n - 1LL)]].get()._field_kind != _185946_left)) {
		_1dad73eda_push_wrong_order_close_err(&(*_self_), _185935_t,_185958_tokens,_185981_ranges);
	};
	_1dad73b00_remove_range(&(*_self_), static_cast<jule::I64>((_186013_n - 1LL)),_185935_t.get()._field_kind,_185958_tokens,_185981_ranges);
}



inline void _1dad746d3_check_ranges(_1dad657e5_Parser* _self_, jule::Slice<jule::Ptr<_205139176_Token>>& _187732_tokens) {
	jule::Slice<jule::I64> _187817_ranges = nullptr;;
	{
		auto &expr = _187732_tokens;
		auto it = expr.begin();
		_iter_begin_1c423e312:;
		if (it != expr.end()) {
			jule::I64 _188013_i = it - expr.begin();
			jule::Ptr<_205139176_Token> &_188016_token = *it;
			{
				if ((_188016_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1c423e312;
				};
				{
					auto &_match_expr{ _188016_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1c424029c:;
						{
							_187817_ranges = jule::alloc_for_append(_187817_ranges,1);_187817_ranges.__push(_188013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c4240313:;
						{
							_1dad7445d_push_range_close(&(*_self_), _188016_token,jule::Str("(", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c4240379:;
						{
							_1dad7445d_push_range_close(&(*_self_), _188016_token,jule::Str("{", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c42403e0:;
						{
							_1dad7445d_push_range_close(&(*_self_), _188016_token,jule::Str("[", 1),_187732_tokens,_187817_ranges);
						}
					}
					_match_end_1c423ee8e:;
				};
			}
			_iter_next_1c423e312:;
			++it;
			_188013_i++;
			goto _iter_begin_1c423e312;
		}
		_iter_end_1c423e312:;
	};
	{
		auto &expr = _187817_ranges;
		auto it = expr.begin();
		_iter_begin_1c4242931:;
		if (it != expr.end()) {
			jule::I64 _189816_i = *it;
			{
				jule::Ptr<_205139176_Token> _189917_token = _187732_tokens[_189816_i];;
				{
					auto &_match_expr{ _189917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c424306e:;
						{
							_1dad66252_push_err(&(*_self_), _189917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1c424314b:;
						{
							_1dad66252_push_err(&(*_self_), _189917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c42431b2:;
						{
							_1dad66252_push_err(&(*_self_), _189917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1c4243019:;
				};
			}
			_iter_next_1c4242931:;
			++it;
			goto _iter_begin_1c4242931;
		}
		_iter_end_1c4242931:;
	};
}



inline void _1dad74958_parse(jule::Ptr<_1dad657e5_Parser> _self_, jule::Ptr<_20513e566_File>& _191130_f) {
	_self_.get()._field_ast=jule::new_ptr<_20500541b_Ast>(_20500541b_Ast{._field_file=_191130_f});
	_1dad746d3_check_ranges(_self_.ptr(), _191130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _192117_stmts = _1dad48bd5_split_stmts(_191130_f.get()._field_tokens);;
	jule::I64 _192417_i = 0LL;;
	_julec_label_iter:;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_1dad4883e_Stmt> _192721_stmt = _192117_stmts[_192417_i];;
			if ((_192721_stmt.get()._field_tokens.len() == 0LL)) {
				return;;
			};
			jule::Any _193225_data;;
			std::tie(std::ignore,_193225_data) = _1dad730e9_build_general_scope_node_data(_self_, _192721_stmt.get()._field_tokens);
			if ((_193225_data == nullptr)) {
				goto _iter_end_1c42469ac;
			};
			if (_1dad65d89_stopped(_self_.ptr())) {
				return;;
			};
			{
				auto &_match_expr{ _193225_data };
				
				if (_match_expr.type_is<jule::Ptr<_204ec174a_Directive>>()) {
					_case_begin_1c424896a:;
					{
						jule::Ptr<_204ec174a_Directive> _194325_d = _193225_data.operator jule::Ptr<_204ec174a_Directive>();;
						if (((_194325_d != nullptr) && _2046dcede_is_top_directive(_194325_d.get()._field_tag.get()._field_kind))) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_194325_d);;
						} else {
							goto _iter_end_1c42469ac;
						};
					}
				}
				else {
					_case_begin_1c4248904:;
					{
						goto _iter_end_1c42469ac;
					}
				}
				_match_end_1c424875b:;
			};
		}
	_iter_next_1c42469ac:;
	}
	_iter_end_1c42469ac:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_1dad4883e_Stmt> _195821_stmt = _192117_stmts[_192417_i];;
			_1dad7368d_append_node(_self_, _195821_stmt.get()._field_tokens);
			if (_1dad65d89_stopped(_self_.ptr())) {
				goto _iter_end_1c424a1a8;
			};
		}
	_iter_next_1c424a1a8:;
	}
	_iter_end_1c424a1a8:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1dad66252_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dad657e5_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1dad766b3_push_err(_1dad760db_TypeBuilder* _self_, jule::Ptr<_205139176_Token> _7727_token, jule::Str _7742_fmt) {
	if ((*_self_)._field_err) {
		_1dad66252_push_err((*_self_)._field_p.ptr(), _7727_token,_7742_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1dad769d2_push_suggestion(_1dad760db_TypeBuilder* _self_, jule::Str _8434_fmt, jule::Slice<jule::Any> _8447_args) {
	if ((*_self_)._field_err) {
		_1dad66571_push_suggestion((*_self_)._field_p.ptr(), _8434_fmt,jule::Any(_8447_args));
	};
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad76c46_build_prim(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_204ec8b92_TypeDecl> _9117_t = _1dad757c2_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9117_t;
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad76eaa_build_namespace(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_204ec8b92_TypeDecl> _9717_t = jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))]});;
	jule::Ptr<_204ec906b_NamespaceTypeDecl> _10117_nst = jule::new_ptr<_204ec906b_NamespaceTypeDecl>();;
	jule::I64 _10217_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_205139176_Token> _10421_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10217_n & 1LL) == 0LL)) {
				if ((_10421_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1dad766b3_push_err(&(*_self_), _10421_token,jule::Str("invalid syntax", 14));
					_1dad769d2_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10117_nst.get()._field_idents = jule::alloc_for_append(_10117_nst.get()._field_idents,1);_10117_nst.get()._field_idents.__push(_10421_token);;
			} else if ((_10421_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1c4252226;
			};
			(_10217_n)++;
		}
	_iter_next_1c4252226:;
	}
	_iter_end_1c4252226:;;
	_10117_nst.get()._field_idents=_10117_nst.get()._field_idents.slice(0LL,(_10117_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10117_nst.get()._field_kind=_1dad776e7_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_204ec8d7e_IdentTypeDecl>();
	_9717_t.get()._field_kind=jule::Any(_10117_nst);
	return _9717_t;
}



inline jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _1dad7721e_build_generics(_1dad760db_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_205139176_Token> _13013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13013_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13013_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _13517_parts = _1dad77483_ident_generics(&(*_self_));;
	if ((_13517_parts.len() == 0LL)) {
		_1dad766b3_push_err(&(*_self_), _13013_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>> _14117_types = jule::Slice<jule::Ptr<_204ec8b92_TypeDecl>>::alloc(0LL,_13517_parts.len());;
	{
		auto &expr = _13517_parts;
		auto it = expr.begin();
		_iter_begin_1c425a938:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _14221_part = *it;
			{
				jule::I64 _14321_j = 0LL;;
				jule::Ptr<_204ec8b92_TypeDecl> _14422_t;;
				std::tie(_14422_t,std::ignore) = _1dad67b6b_build_type((*_self_)._field_p, _14221_part,(&(_14321_j)),true);
				if ((_14321_j < _14221_part.len())) {
					_1dad766b3_push_err(&(*_self_), _14221_part[_14321_j],jule::Str("invalid syntax", 14));
				};
				_14117_types = jule::alloc_for_append(_14117_types,1);_14117_types.__push(_14422_t);;
			}
			_iter_next_1c425a938:;
			++it;
			goto _iter_begin_1c425a938;
		}
		_iter_end_1c425a938:;
	};
	return _14117_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _1dad77483_ident_generics(_1dad760db_TypeBuilder* _self_) {
	jule::I64 _15413_first = (*((*_self_)._field_i));;
	jule::I64 _15517_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_205139176_Token> _15717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c425e09b:;
						{
							(_15517_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c425e3ba:;
						{
							(_15517_range_n)--;
						}
					}
					_match_end_1c425e2cc:;
				};
			};
			if ((_15517_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1c425d078;
			};
		}
	_iter_next_1c425d078:;
	}
	_iter_end_1c425d078:;;
	jule::Slice<jule::Ptr<_205139176_Token>> _17117_tokens = (*_self_)._field_tokens.slice((_15413_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _17218_parts;;
	jule::Slice<_2046db273_Log> _17225_errors;;
	std::tie(_17218_parts,_17225_errors) = _1dad645d5_parts(_17117_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17225_errors);
	};
	return _17218_parts;
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad776e7_build_ident(_1dad760db_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len()) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1dad76eaa_build_namespace(&(*_self_));
	};
	jule::Ptr<_205139176_Token> _18317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_204ec8d7e_IdentTypeDecl> _18417_it = jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_18317_token, ._field_ident=_18317_token.get()._field_kind, ._field_cpp_linked=false});;
	((*((*_self_)._field_i)))++;
	_18417_it.get()._field_generics=_1dad7721e_build_generics(&(*_self_));
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_18317_token, ._field_kind=jule::Any(_18417_it)});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad7795b_build_cpp_link(_1dad760db_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1dad766b3_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_204ec8b92_TypeDecl> _20317_t = _1dad776e7_build_ident(&(*_self_));;
	_20317_t.get()._field_kind.operator jule::Ptr<_204ec8d7e_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20317_t;
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad77bc0_build_fn(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _20917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_20515028b_FnDecl> _21017_f = _1dad6b93e_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_21017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_2050d51dd_is_anon(_21017_f.ptr())))) {
		_1dad766b3_push_err(&(*_self_), _21017_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_20917_token, ._field_kind=jule::Any(_21017_f)});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad77e34_build_ptr(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _22417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1dad766b3_push_err(&(*_self_), _22417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_22417_token, ._field_kind=jule::Any(jule::new_ptr<_204ec981e_PtrTypeDecl>(_204ec981e_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_204ec8b92_TypeDecl> _24117_elem = _1dad79265_step(&(*_self_));;
	if ((_24117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_22417_token, ._field_kind=jule::Any(jule::new_ptr<_204ec981e_PtrTypeDecl>(_204ec981e_PtrTypeDecl{._field_elem=_24117_elem}))});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad78198_build_sptr(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _25517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1dad766b3_push_err(&(*_self_), _25517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_204ec8b92_TypeDecl> _26217_elem = _1dad79265_step(&(*_self_));;
	if ((_26217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_25517_token, ._field_kind=jule::Any(jule::new_ptr<_204ec9258_SptrTypeDecl>(_204ec9258_SptrTypeDecl{._field_elem=_26217_elem}))});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad7840c_build_op(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _27617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _27617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c427407d:;
			{
				return _1dad77e34_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c42740e4:;
			{
				return _1dad78198_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c4273db3:;
			{
				return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_204ec9258_SptrTypeDecl>(_204ec9258_SptrTypeDecl{._field_elem=_1dad78198_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1c42733e0:;
			{
				_1dad766b3_push_err(&(*_self_), _27617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1c4273379:;
	};
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad78671_build_slc(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _29517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_204ec8b92_TypeDecl> _29717_elem = _1dad79265_step(&(*_self_));;
	if ((_29717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_29517_token, ._field_kind=jule::Any(jule::new_ptr<_204ec9445_SlcTypeDecl>(_204ec9445_SlcTypeDecl{._field_elem=_29717_elem}))});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad788d5_build_arr(_1dad760db_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1dad766b3_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _31813_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_204ec8b92_TypeDecl> _32017_elem = _1dad79265_step(&(*_self_));;
	if ((_32017_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_204ec9a0b_ArrTypeDecl> _32517_arrt = jule::new_ptr<_204ec9a0b_ArrTypeDecl>(_204ec9a0b_ArrTypeDecl{._field_elem=_32017_elem});;
	jule::Slice<jule::Ptr<_205139176_Token>> _32917_expr_tokens = (*_self_)._field_tokens.slice(0LL,_31813_expr_delta);;
	std::tie(std::ignore,_32917_expr_tokens) = _1dad641a6_range_last(_32917_expr_tokens);
	_32917_expr_tokens=_32917_expr_tokens.slice(1LL,(_32917_expr_tokens.len() - 1LL));
	jule::Ptr<_205139176_Token> _33217_token = _32917_expr_tokens[0LL];;
	if ((((_32917_expr_tokens.len() == 1LL) && (_33217_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_33217_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_32517_arrt.get()._field_size=_1dad6687e_build_expr((*_self_)._field_p, _32917_expr_tokens);
	};
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_33217_token, ._field_kind=jule::Any(_32517_arrt)});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad78c8c_build_map(_1dad760db_TypeBuilder* _self_, jule::I64 _34528_colon, jule::Slice<jule::Ptr<_205139176_Token>>& _34545_tokens) {
	jule::Ptr<_205139176_Token> _34617_colon_token = (*_self_)._field_tokens[_34528_colon];;
	if (((_34528_colon == 0LL) || ((_34528_colon + 1LL) >= _34545_tokens.len()))) {
		_1dad766b3_push_err(&(*_self_), _34617_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_205139176_Token>> _35117_key_tokens = _34545_tokens.slice(0LL,_34528_colon);;
	jule::Slice<jule::Ptr<_205139176_Token>> _35217_val_tokens = _34545_tokens.slice((_34528_colon + 1LL));;
	jule::Ptr<_204ec9be8_MapTypeDecl> _35317_mapt = jule::new_ptr<_204ec9be8_MapTypeDecl>(_204ec9be8_MapTypeDecl{});;
	jule::I64 _35517_j = 0LL;;
	jule::Ptr<_204ec8b92_TypeDecl> _35618_keyt;;
	jule::Bool _35628_ok;;
	std::tie(_35618_keyt,_35628_ok) = _1dad67b6b_build_type((*_self_)._field_p, _35117_key_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35117_key_tokens.len())) {
		_1dad766b3_push_err(&(*_self_), _35117_key_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_key=_35618_keyt;
	_35517_j=0LL;
	jule::Ptr<_204ec8b92_TypeDecl> _36518_valt;;
	std::tie(_36518_valt,_35628_ok) = _1dad67b6b_build_type((*_self_)._field_p, _35217_val_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35217_val_tokens.len())) {
		_1dad766b3_push_err(&(*_self_), _35217_val_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_val=_36518_valt;
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_34617_colon_token, ._field_kind=jule::Any(_35317_mapt)});
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad79001_build_enumerable(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _38017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_38017_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_38017_token.get()._field_kind != jule::Str("[", 1)))) {
		_1dad766b3_push_err(&(*_self_), _38017_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_38017_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_38017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_38017_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1dad78671_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_205139176_Token>> _39418_map_tokens;;
	jule::I64 _39430_colon;;
	std::tie(_39418_map_tokens,_39430_colon) = _1dad75b13_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39430_colon == -1LL)) {
		return _1dad788d5_build_arr(&(*_self_));
	};
	return _1dad78c8c_build_map(&(*_self_), _39430_colon,_39418_map_tokens);
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad79265_step(_1dad760db_TypeBuilder* _self_) {
	jule::Ptr<_205139176_Token> _40313_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _40313_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c428a649:;
			{
				return _1dad76c46_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c428a407:;
			{
				return _1dad776e7_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c428a46d:;
			{
				return _1dad7795b_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c428a4d4:;
			{
				return _1dad77bc0_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c4289802:;
			{
				return _1dad7840c_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c4289868:;
			{
				return _1dad79001_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1c428978b:;
			{
				((*((*_self_)._field_i)))++;
				_1dad766b3_push_err(&(*_self_), _40313_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1c4289725:;
	};
}



inline std::tuple<jule::Ptr<_204ec8b92_TypeDecl>,jule::Bool> _1dad794c9_build(_1dad760db_TypeBuilder* _self_) {
	jule::Bool _42644_ok = jule::Bool();
	jule::Ptr<_204ec8b92_TypeDecl> _42717_root = _1dad79265_step(&(*_self_));;
	if ((_42717_root == nullptr)) {
		_42644_ok = false;
		return std::make_tuple(_1dad75580_build_void_type(),_42644_ok);
	};
	_42644_ok = true;
	return std::make_tuple(_42717_root,_42644_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1dad760db_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2794acd_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dbc26ee1_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2a101ab_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2a0ce67_set(_1c2a10398_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1c4677371:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1c4677805:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1c467755d:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1c467953d:;
					{
						goto _iter_next_1c46787e5;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1c46795b5:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1c46787e5;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1c467963c:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1c46787e5;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1c46787e5;
					}
				}
				_match_end_1c467941c:;
			};
			goto _iter_end_1c46787e5;
		}
	_iter_next_1c46787e5:;
	}
	_iter_end_1c46787e5:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1dbbb33de_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1c4681c82;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1c4681c82:;
		}
		_iter_end_1c4681c82:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1c2a0d099_float_bits(_1c2a10398_Decimal* _self_, _1c2794acd_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1c2762073_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1c2762073_POWTAB[(*_self_)._field_dp];
			};
			_1c2a106b7_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1c4688b8a:;
	}
	_iter_end_1c4688b8a:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1c2762073_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1c2762073_POWTAB[(-((*_self_)._field_dp))];
			};
			_1c2a106b7_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1c468ac8b:;
	}
	_iter_end_1c468ac8b:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1c2a106b7_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1c2a106b7_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1c2a10b90_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1c2a10585_assign(_1c2a10398_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1c469721a:;
	}
	_iter_end_1c469721a:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1c4697270:;
	}
	_iter_end_1c4697270:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1c2a10e04_trim((*_self_));
}



inline void _1c2a106b7_shift(_1c2a10398_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1c4699c34:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1c4699cab:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1c2a1129a_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1c4699e98:;
				}
				_iter_end_1c4699e98:;;
				_1c2a1129a_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1c4699d33:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1c2a11036_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1c469b3ea:;
				}
				_iter_end_1c469b3ea:;;
				_1c2a11036_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1c4699b13:;
	};
}



inline void _1c2a107e9_round_down(_1c2a10398_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1c2a10e04_trim((*_self_));
}



inline void _1c2a1092b_round_up(_1c2a10398_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1c469e244:;
	}
	_iter_end_1c469e244:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1c2a10a5d_round(_1c2a10398_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1c2a113cc_should_round_up((*_self_),_29124_nd)) {
		_1c2a1092b_round_up(&(*_self_), _29124_nd);
	} else {
		_1c2a107e9_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1c2a10b90_rounded_integer(_1c2a10398_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1c46a38b9:;
	}
	_iter_end_1c46a38b9:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1c46a5b85:;
	}
	_iter_end_1c46a5b85:;;
	if (_1c2a113cc_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2a10398_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2abb9a4_Const> static__1c2aba9a3_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1c2abb9a4_Const>(_1c2abb9a4_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1c2abb9a4_Const> static__1c2abbb91_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1c2abb9a4_Const>(_1c2abb9a4_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1c2abb9a4_Const> static__1c2abbde4_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1c2abb9a4_Const>(_1c2abb9a4_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1c2abb9a4_Const> static__1c2abc18b_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1c2abb9a4_Const>(_1c2abb9a4_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1c2abb9a4_Const> static__1c2abc433_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1c2abb9a4_Const>(_1c2abb9a4_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1c2abb9a4_Const> static__1c2abc631_new_nil(void) {
	return jule::new_ptr<_1c2abb9a4_Const>(_1c2abb9a4_Const{._field_data=nullptr});
}



inline jule::I64 _1c2abcc2a_read_i64(_1c2abb9a4_Const* _self_) {
	if ((!(_1c2ac00c3_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1c2abce8e_read_u64(_1c2abb9a4_Const* _self_) {
	if ((!(_1c2ac0337_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1c2abd203_read_bool(_1c2abb9a4_Const* _self_) {
	if ((!(_1c2ac059b_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1c2abd467_read_str(_1c2abb9a4_Const* _self_) {
	if ((!(_1c2ac0810_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1c2abd6cb_read_f64(_1c2abb9a4_Const* _self_) {
	if ((!(_1c2ac0a74_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1c2abd940_as_i64(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c4847530:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c4847596:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c4847783:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1c4847101:;
			{
				return 0LL;
			}
		}
		_match_end_1c484709b:;
	};
}



inline jule::U64 _1c2abdba4_as_u64(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c4849356:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c48493bc:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c48495a9:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1c4848d39:;
			{
				return 0LLU;
			}
		}
		_match_end_1c4848ed2:;
	};
}



inline jule::F64 _1c2abde18_as_f64(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c484b17c:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c484b1e3:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c484b3d0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1c484ab60:;
			{
				return 0LL;
			}
		}
		_match_end_1c484ad08:;
	};
}



inline void _1c2abe18d_set_i64(_1c2abb9a4_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1c2abe413_set_u64(_1c2abb9a4_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1c2abe688_set_bool(_1c2abb9a4_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1c2abe90d_set_str(_1c2abb9a4_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1c2abeb83_set_f64(_1c2abb9a4_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1c2abed5e_set_nil(_1c2abb9a4_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1c2ac00c3_is_i64(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c4851391:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c4851627:;
			{
				return false;
			}
		}
		_match_end_1c48515c2:;
	};
}



inline jule::Bool _1c2ac0337_is_u64(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c48526a0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c4850b10:;
			{
				return false;
			}
		}
		_match_end_1c4850aaa:;
	};
}



inline jule::Bool _1c2ac059b_is_bool(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1c4852aac:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c48524a2:;
			{
				return false;
			}
		}
		_match_end_1c4852903:;
	};
}



inline jule::Bool _1c2ac0810_is_str(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c485354c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c4852e42:;
			{
				return false;
			}
		}
		_match_end_1c4853393:;
	};
}



inline jule::Bool _1c2ac0a74_is_f64(_1c2abb9a4_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c4853edc:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c48538d2:;
			{
				return false;
			}
		}
		_match_end_1c4853d33:;
	};
}



inline jule::Bool _1c2ac0cd8_is_nil(_1c2abb9a4_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1c2ac10e6_are_same_types(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _21033_x) {
	{
		
		if ((_1c2ac00c3_is_i64(&(*_self_)) == _1c2ac00c3_is_i64(&_21033_x))) {
			_case_begin_1c4855e89:;
			{
				return true;
			}
		}
		else if ((_1c2ac0337_is_u64(&(*_self_)) == _1c2ac0337_is_u64(&_21033_x))) {
			_case_begin_1c4856044:;
			{
				return true;
			}
		}
		else if ((_1c2ac0a74_is_f64(&(*_self_)) == _1c2ac0a74_is_f64(&_21033_x))) {
			_case_begin_1c48560bb:;
			{
				return true;
			}
		}
		else if ((_1c2ac059b_is_bool(&(*_self_)) == _1c2ac059b_is_bool(&_21033_x))) {
			_case_begin_1c4855c9c:;
			{
				return true;
			}
		}
		else if ((_1c2ac0810_is_str(&(*_self_)) == _1c2ac0810_is_str(&_21033_x))) {
			_case_begin_1c4855d24:;
			{
				return true;
			}
		}
		else if ((_1c2ac0cd8_is_nil(&(*_self_)) == _1c2ac0cd8_is_nil(&_21033_x))) {
			_case_begin_1c48558a1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c485583a:;
			{
				return false;
			}
		}
		_match_end_1c485576e:;
	};
}



inline jule::Bool _1c2ac1404_and(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _23522_x) {
	{
		
		if ((_1c2ac059b_is_bool(&(*_self_)) && _1c2ac059b_is_bool(&_23522_x))) {
			_case_begin_1c485e569:;
			{
				return (_1c2abd203_read_bool(&(*_self_)) && _1c2abd203_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1c485de70:;
			{
				return false;
			}
		}
		_match_end_1c485dda4:;
	};
}



inline jule::Bool _1c2ac1712_or(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _24621_x) {
	{
		
		if ((_1c2ac059b_is_bool(&(*_self_)) && _1c2ac059b_is_bool(&_24621_x))) {
			_case_begin_1c4860dea:;
			{
				return (_1c2abd203_read_bool(&(*_self_)) || _1c2abd203_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1c4860801:;
			{
				return false;
			}
		}
		_match_end_1c4860735:;
	};
}



inline jule::Bool _1c2ac1a20_eq(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _25721_x) {
	{
		
		if (_1c2ac0cd8_is_nil(&(*_self_))) {
			_case_begin_1c48622e7:;
			{
				return _1c2ac0cd8_is_nil(&_25721_x);
			}
		}
		else if (_1c2ac059b_is_bool(&(*_self_))) {
			_case_begin_1c4862391:;
			{
				return (_1c2ac059b_is_bool(&_25721_x) && (_1c2abd203_read_bool(&(*_self_)) == _1c2abd203_read_bool(&_25721_x)));
			}
		}
		else if (_1c2ac0810_is_str(&(*_self_))) {
			_case_begin_1c4862407:;
			{
				return (_1c2ac0810_is_str(&_25721_x) && (_1c2abd467_read_str(&(*_self_)) == _1c2abd467_read_str(&_25721_x)));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c486210a:;
			{
				return (_1c2abcc2a_read_i64(&(*_self_)) == _1c2abd940_as_i64(&_25721_x));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c4862171:;
			{
				return (_1c2abce8e_read_u64(&(*_self_)) == _1c2abdba4_as_u64(&_25721_x));
			}
		}
		else if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c48621d7:;
			{
				return (_1c2abd6cb_read_f64(&(*_self_)) == _1c2abde18_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1c486137e:;
			{
				return false;
			}
		}
		_match_end_1c48612b3:;
	};
}



inline jule::Bool _1c2ac1d2d_lt(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _28421_x) {
	{
		
		if (_1c2ac0810_is_str(&(*_self_))) {
			_case_begin_1c486672a:;
			{
				return (_1c2ac0810_is_str(&_28421_x) && (_1c2abd467_read_str(&(*_self_)) < _1c2abd467_read_str(&_28421_x)));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c48667e6:;
			{
				return (_1c2abcc2a_read_i64(&(*_self_)) < _1c2abd940_as_i64(&_28421_x));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c486685c:;
			{
				return (_1c2abce8e_read_u64(&(*_self_)) < _1c2abdba4_as_u64(&_28421_x));
			}
		}
		else if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c4866560:;
			{
				return (_1c2abd6cb_read_f64(&(*_self_)) < _1c2abde18_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1c486269e:;
			{
				return false;
			}
		}
		_match_end_1c48625d3:;
	};
}



inline jule::Bool _1c2ac213b_lt_eq(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _30724_x) {
	{
		
		if (_1c2ac0810_is_str(&(*_self_))) {
			_case_begin_1c48695eb:;
			{
				return (_1c2ac0810_is_str(&_30724_x) && (_1c2abd467_read_str(&(*_self_)) <= _1c2abd467_read_str(&_30724_x)));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c48696b7:;
			{
				return (_1c2abcc2a_read_i64(&(*_self_)) <= _1c2abd940_as_i64(&_30724_x));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c486972d:;
			{
				return (_1c2abce8e_read_u64(&(*_self_)) <= _1c2abdba4_as_u64(&_30724_x));
			}
		}
		else if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c4869431:;
			{
				return (_1c2abd6cb_read_f64(&(*_self_)) <= _1c2abde18_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1c48669d3:;
			{
				return false;
			}
		}
		_match_end_1c4866917:;
	};
}



inline jule::Bool _1c2ac2449_gt(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _33021_x) {
	{
		
		if (_1c2ac0810_is_str(&(*_self_))) {
			_case_begin_1c486c6ba:;
			{
				return (_1c2ac0810_is_str(&_33021_x) && (_1c2abd467_read_str(&(*_self_)) > _1c2abd467_read_str(&_33021_x)));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c486c786:;
			{
				return (_1c2abcc2a_read_i64(&(*_self_)) > _1c2abd940_as_i64(&_33021_x));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c486c7ec:;
			{
				return (_1c2abce8e_read_u64(&(*_self_)) > _1c2abdba4_as_u64(&_33021_x));
			}
		}
		else if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c486c500:;
			{
				return (_1c2abd6cb_read_f64(&(*_self_)) > _1c2abde18_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1c48698a4:;
			{
				return false;
			}
		}
		_match_end_1c48697d8:;
	};
}



inline jule::Bool _1c2ac2757_gt_eq(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _35324_x) {
	{
		
		if (_1c2ac0810_is_str(&(*_self_))) {
			_case_begin_1c487058b:;
			{
				return (_1c2ac0810_is_str(&_35324_x) && (_1c2abd467_read_str(&(*_self_)) >= _1c2abd467_read_str(&_35324_x)));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c4870657:;
			{
				return (_1c2abcc2a_read_i64(&(*_self_)) >= _1c2abd940_as_i64(&_35324_x));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c48706bd:;
			{
				return (_1c2abce8e_read_u64(&(*_self_)) >= _1c2abdba4_as_u64(&_35324_x));
			}
		}
		else if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c48703c1:;
			{
				return (_1c2abd6cb_read_f64(&(*_self_)) >= _1c2abde18_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1c486c973:;
			{
				return false;
			}
		}
		_match_end_1c486c8a7:;
	};
}



inline jule::Bool _1c2ac2a65_add(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _37426_x) {
	{
		
		if (_1c2ac0810_is_str(&(*_self_))) {
			_case_begin_1c487369e:;
			{
				if ((!(_1c2ac0810_is_str(&_37426_x)))) {
					return false;
				};
				_1c2abe90d_set_str(&(*_self_), (_1c2abd467_read_str(&(*_self_)) + _1c2abd467_read_str(&_37426_x)));
			}
		}
		else if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c487376a:;
			{
				_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abd6cb_read_f64(&(*_self_)) + _1c2abde18_as_f64(&_37426_x))));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c48737d1:;
			{
				if (_1c2ac0a74_is_f64(&_37426_x)) {
					_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abde18_as_f64(&(*_self_)) + _1c2abd6cb_read_f64(&_37426_x))));
				} else {
					_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_1c2abcc2a_read_i64(&(*_self_)) + _1c2abd940_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c48734d4:;
			{
				if (_1c2ac0a74_is_f64(&_37426_x)) {
					_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abde18_as_f64(&(*_self_)) + _1c2abd6cb_read_f64(&_37426_x))));
				} else {
					_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>((_1c2abce8e_read_u64(&(*_self_)) + _1c2abdba4_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1c48708cc:;
			{
				return false;
			}
		}
		_match_end_1c4870811:;
	};
	return true;
}



inline jule::Bool _1c2ac2d73_sub(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _40326_x) {
	{
		
		if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c4879133:;
			{
				_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abd6cb_read_f64(&(*_self_)) - _1c2abde18_as_f64(&_40326_x))));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c4879210:;
			{
				if (_1c2ac0a74_is_f64(&_40326_x)) {
					_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abde18_as_f64(&(*_self_)) - _1c2abd6cb_read_f64(&_40326_x))));
				} else {
					_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_1c2abcc2a_read_i64(&(*_self_)) - _1c2abd940_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c4879276:;
			{
				if (_1c2ac0a74_is_f64(&_40326_x)) {
					_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abde18_as_f64(&(*_self_)) - _1c2abd6cb_read_f64(&_40326_x))));
				} else {
					_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>((_1c2abce8e_read_u64(&(*_self_)) - _1c2abdba4_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1c4878a4a:;
			{
				return false;
			}
		}
		_match_end_1c4878121:;
	};
	return true;
}



inline jule::Bool _1c2ac3181_mul(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _42726_x) {
	{
		
		if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c487dbd7:;
			{
				_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abd6cb_read_f64(&(*_self_)) * _1c2abde18_as_f64(&_42726_x))));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c487dcb4:;
			{
				if (_1c2ac0a74_is_f64(&_42726_x)) {
					_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abde18_as_f64(&(*_self_)) * _1c2abd6cb_read_f64(&_42726_x))));
				} else {
					_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_1c2abcc2a_read_i64(&(*_self_)) * _1c2abd940_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c487dd2a:;
			{
				if (_1c2ac0a74_is_f64(&_42726_x)) {
					_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>((_1c2abde18_as_f64(&(*_self_)) * _1c2abd6cb_read_f64(&_42726_x))));
				} else {
					_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>((_1c2abce8e_read_u64(&(*_self_)) * _1c2abdba4_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1c487d5ee:;
			{
				return false;
			}
		}
		_match_end_1c487cb1a:;
	};
	return true;
}



inline jule::Bool _1c2ac348e_div(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _45526_x) {
	{
		
		if (_1c2ac0a74_is_f64(&(*_self_))) {
			_case_begin_1c4883505:;
			{
				jule::F64 _45817_l = _1c2abde18_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1c2abd6cb_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c48835d2:;
			{
				jule::F64 _46417_l = _1c2abde18_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1c2abde18_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c4883648:;
			{
				jule::F64 _47017_l = _1c2abde18_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1c2abeb83_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1c2abde18_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1c4882e1c:;
			{
				return false;
			}
		}
		_match_end_1c4882515:;
	};
	return true;
}



inline jule::Bool _1c2ac379c_mod(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _48426_x) {
	{
		
		if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c4887839:;
			{
				jule::I64 _48717_l = _1c2abd940_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1c2abcc2a_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c4887927:;
			{
				jule::U64 _49317_l = _1c2abdba4_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1c2abce8e_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1c488722e:;
			{
				return false;
			}
		}
		_match_end_1c4887185:;
	};
	return true;
}



inline jule::Bool _1c2ac3aaa_bitwise_and(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _50634_x) {
	{
		
		if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c488acd2:;
			{
				_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_1c2abcc2a_read_i64(&(*_self_)) & _1c2abd940_as_i64(&_50634_x))));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c488adc0:;
			{
				_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>((_1c2abce8e_read_u64(&(*_self_)) & _1c2abdba4_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1c488a6c7:;
			{
				return false;
			}
		}
		_match_end_1c488a60b:;
	};
	return true;
}



inline jule::Bool _1c2ac3db8_bitwise_or(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _52033_x) {
	{
		
		if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c488d422:;
			{
				_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_1c2abcc2a_read_i64(&(*_self_)) | _1c2abd940_as_i64(&_52033_x))));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c488d510:;
			{
				_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>((_1c2abce8e_read_u64(&(*_self_)) | _1c2abdba4_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1c488cd17:;
			{
				return false;
			}
		}
		_match_end_1c488cc4b:;
	};
	return true;
}



inline jule::Bool _1c2ac41c6_xor(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _53426_x) {
	{
		
		if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c4890a62:;
			{
				_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_1c2abcc2a_read_i64(&(*_self_)) ^ _1c2abd940_as_i64(&_53426_x))));
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c4890b50:;
			{
				_1c2abe413_set_u64(&(*_self_), static_cast<jule::U64>((_1c2abce8e_read_u64(&(*_self_)) ^ _1c2abdba4_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1c4890457:;
			{
				return false;
			}
		}
		_match_end_1c489038b:;
	};
	return true;
}



inline jule::Bool _1c2ac44d4_lshift(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _54829_x) {
	{
		
		if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c4893515:;
			{
				jule::I64 _55117_l = _1c2abd940_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1c2abdba4_as_u64(&_54829_x);;
					_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1c2ac4b55_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c4893603:;
			{
				_1c2ac4b55_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1c4892e0a:;
			{
				return false;
			}
		}
		_match_end_1c4892d3e:;
	};
	return true;
}



inline jule::Bool _1c2ac47e2_rshift(_1c2abb9a4_Const* _self_, _1c2abb9a4_Const _56829_x) {
	{
		
		if (_1c2ac00c3_is_i64(&(*_self_))) {
			_case_begin_1c48963e7:;
			{
				jule::I64 _57117_l = _1c2abd940_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1c2abdba4_as_u64(&_56829_x);;
					_1c2abe18d_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1c2ac4e52_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1c2ac0337_is_u64(&(*_self_))) {
			_case_begin_1c48964d5:;
			{
				_1c2ac4e52_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1c4895cdc:;
			{
				return false;
			}
		}
		_match_end_1c4895c21:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2abb9a4_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2cb5010_FileStream> static__1c2cb33b5_new(jule::Ptr<_2368217d8_File> _1627_f) {
	return jule::new_ptr<_1c2cb5010_FileStream>(_1c2cb5010_FileStream{._field_buff=_1627_f});
}



inline jule::Exceptional<jule::I64> _1c2cb8b90_read(_1c2cb5010_FileStream* _self_, jule::Slice<jule::U8> _3231_buff) {
	jule::I64 _3248_n = jule::I64();
	_3248_n = static_cast<jule::I64>(({
		auto except = _2369437ea_read((*_self_)._field_buff.ptr(), _3231_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3248_n);
}



inline jule::Exceptional<jule::I64> _1c2cb8e9d_write(_1c2cb5010_FileStream* _self_, jule::Slice<jule::U8> _3828_buff) {
	jule::I64 _3845_n = jule::I64();
	_3845_n = static_cast<jule::I64>(({
		auto except = _2369436b8_write((*_self_)._field_buff.ptr(), _3828_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3845_n);
}



inline jule::Ptr<_2368217d8_File> _1c2cb9322_file(_1c2cb5010_FileStream* _self_) {
	return (*_self_)._field_buff;
}



inline jule::Exceptional<jule::I64> _1c2cb9630_write_str(_1c2cb5010_FileStream* _self_, jule::Str _5132_s) {
	jule::I64 _5143_n = jule::I64();
	_5143_n = static_cast<jule::I64>(({
		auto except = _1c2cb8e9d_write(&(*_self_), _236aec8e9_stobs(_5132_s));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_5143_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1c2cb9894_read_line(_1c2cb5010_FileStream* _self_) {
	;
	jule::Slice<jule::U8> _6117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);;
	jule::Slice<jule::U8> _6217_part = jule::Slice<jule::U8>::alloc(1LL);;
	for (;;) {
		{
			jule::I64 _6417_n = ({
				auto except = _2369437ea_read((*_self_)._field_buff.ptr(), _6217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I64();});
			});;
			if ((_6417_n == 0LL)) {
				goto _iter_end_1c4917479;
			};
			jule::U8 _6917_b = _6217_part[0LL];;
			_6117_buff = jule::alloc_for_append(_6117_buff,1);_6117_buff.__push(_6917_b);;
			if ((_6917_b == 10LLU)) {
				goto _iter_end_1c4917479;
			};
		}
	_iter_next_1c4917479:;
	}
	_iter_end_1c4917479:;;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_6117_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cb5010_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2cbb874_ByteStream> static__1c2cbbec3_new(void) {
	return jule::new_ptr<_1c2cbb874_ByteStream>();
}



inline jule::Bool _1c2cbc237_data(_1c2cbb874_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _1c2cbc413_fit(_1c2cbb874_ByteStream* _self_) {
	if ((!(_1c2cbc237_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;;
	};
	jule::Slice<jule::U8> _3717_buff = jule::Slice<jule::U8>::alloc((*_self_)._field_buff.len());;
	jule::copy((_3717_buff), ((*_self_)._field_buff));
	(*_self_)._field_buff=_3717_buff;
}



inline jule::Exceptional<jule::I64> _1c2cbc721_read(_1c2cbb874_ByteStream* _self_, jule::Slice<jule::U8> _4631_buff) {
	jule::I64 _4648_n = jule::I64();
	if ((!(_1c2cbc237_data(&(*_self_))))) {
		_4648_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4648_n);
	};
	_4648_n=static_cast<jule::I64>(jule::copy((_4631_buff), ((*_self_)._field_buff)));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_4648_n);
	return jule::Exceptional<jule::I64>(jule::Any(), _4648_n);
}



inline jule::Exceptional<jule::I64> _1c2cbca2e_write(_1c2cbb874_ByteStream* _self_, jule::Slice<jule::U8> _5728_buff) {
	jule::I64 _5745_n = jule::I64();
	_5745_n=static_cast<jule::I64>(_5728_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_5728_buff);
	return jule::Exceptional<jule::I64>(jule::Any(), _5745_n);
}



inline jule::Exceptional<jule::I64> _1c2cbcd3c_write_str(_1c2cbb874_ByteStream* _self_, jule::Str _6532_s) {
	jule::I64 _6543_n = jule::I64();
	_6543_n = static_cast<jule::I64>(({
		auto except = _1c2cbca2e_write(&(*_self_), _236aec8e9_stobs(_6532_s));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_6543_n);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cbb874_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2cbe1d4_Scanner> static__1c2cbe613_new(jule::Trait<_1c2cba0e2_Reader> _1627_r) {
	return jule::new_ptr<_1c2cbe1d4_Scanner>(_1c2cbe1d4_Scanner{._field_r=_1627_r});
}



inline jule::Ptr<_1c2cbe1d4_Scanner> static__1c2cbe8aa_newf(jule::Ptr<_2368217d8_File> _2428_f) {
	return jule::new_ptr<_1c2cbe1d4_Scanner>(_1c2cbe1d4_Scanner{._field_r=jule::Trait<_1c2cba0e2_Reader>(static__1c2cb33b5_new(_2428_f), 0)});
}



inline void _1c2cbeba7_reset(_1c2cbe1d4_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1c2cbee1b_bytes(_1c2cbe1d4_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _1c2cc0180_text(_1c2cbe1d4_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _1c2cc03e4_scan(_1c2cbe1d4_Scanner* _self_) {
	;
	_1c2cbeba7_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);;
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);;
	for (;;) {
		{
			jule::I64 _5417_n = ({
				auto except = _1c2cba0e2_Reader_mptr_data[((*_self_)._field_r).type_offset]._1c2cb9e9e_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I64();});
			});;
			if ((_5417_n == 0LL)) {
				goto _iter_end_1c49252de;
			};
			jule::U8 _6117_b = _5217_part[0LL];;
			if ((_6117_b == 10LLU)) {
				goto _iter_end_1c49252de;
			};
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);;
		}
	_iter_next_1c49252de:;
	}
	_iter_end_1c49252de:;;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cbe1d4_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1cb6276_FieldIns> _1c1c06617_instance(jule::Ptr<_1c1c07382_Field> _self_) {
	return jule::new_ptr<_1c1cb6276_FieldIns>(_1c1cb6276_FieldIns{._field_decl=_self_, ._field_kind=_self_.get()._field_kind.get()._field_kind});
}







std::ostream &operator<<(std::ostream &_Stream, _1c1c07382_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb3141_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1cb6ad4_StructIns> _1c1cb4384_instance(jule::Ptr<_1c1cb3e55_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _10017_ins = jule::new_ptr<_1c1cb6ad4_StructIns>(_1c1cb6ad4_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1c1cb6276_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_references=static__1c1cccaa6_new()});;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1c4a5c305:;
		if (it != expr.end()) {
			jule::Ptr<_1c1c07382_Field> _10621_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_1c1c06617_instance(_10621_f));;
				if ((((!(_10621_f.get()._field_mutable)) && (_10621_f.get()._field_kind.get()._field_kind != nullptr)) && _1c2c1c4c8_mutable(_10621_f.get()._field_kind.get()._field_kind.ptr()))) {
					_10017_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1c4a5c305:;
			++it;
			goto _iter_begin_1c4a5c305;
		}
		_iter_end_1c4a5c305:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1c4a6010a:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cc65b6_Fn> _11725_f = *it;
				{
					jule::Ptr<_1c1cc65b6_Fn> _11825_fins = jule::new_ptr<_1c1cc65b6_Fn>((*(_11725_f)));;
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);;
				}
				_iter_next_1c4a6010a:;
				++it;
				goto _iter_begin_1c4a6010a;
			}
			_iter_end_1c4a6010a:;
		};
	};
	return _10017_ins;
}



inline jule::Ptr<_1c1cb6ad4_StructIns> _1c1cb4692_append_instance(_1c1cb3e55_Struct* _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _12939_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1c4a62abe:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _13521_ains = *it;
			{
				if (_1c1cb76b7_same(_13521_ains.ptr(), _12939_ins)) {
					return _13521_ains;
				};
			}
			_iter_next_1c4a62abe:;
			++it;
			goto _iter_begin_1c4a62abe;
		}
		_iter_end_1c4a62abe:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);;
	return nullptr;
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c1cb4a49_find_method(_1c1cb3e55_Struct* _self_, jule::Str _14734_ident, jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4a64b7b:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _14821_f = *it;
			{
				if (((_14821_f.get()._field_statically == _14746_statically) && (_14821_f.get()._field_ident == _14734_ident))) {
					return _14821_f;
				};
			}
			_iter_next_1c4a64b7b:;
			++it;
			goto _iter_begin_1c4a64b7b;
		}
		_iter_end_1c4a64b7b:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2b9a4de_Var> _1c1cb4d57_find_static(_1c1cb3e55_Struct* _self_, jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1c4a66210:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _15921_v = *it;
			{
				if ((_15921_v.get()._field_ident == _15834_ident)) {
					return _15921_v;
				};
			}
			_iter_next_1c4a66210:;
			++it;
			goto _iter_begin_1c4a66210;
		}
		_iter_end_1c4a66210:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1c07382_Field> _1c1cb5165_find_field(_1c1cb3e55_Struct* _self_, jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1c4a674ca:;
		if (it != expr.end()) {
			jule::Ptr<_1c1c07382_Field> _17021_f = *it;
			{
				if ((_17021_f.get()._field_ident == _16933_ident)) {
					return _17021_f;
				};
			}
			_iter_next_1c4a674ca:;
			++it;
			goto _iter_begin_1c4a674ca;
		}
		_iter_end_1c4a674ca:;
	};
	return nullptr;
}



inline jule::Bool _1c1cb5473_is_implements(_1c1cb3e55_Struct* _self_, jule::Ptr<_1c2a137db_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1c4a68795:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> &_18016_it = *it;
			{
				if ((_17932_t == _18016_it)) {
					return true;
				};
			}
			_iter_next_1c4a68795:;
			++it;
			goto _iter_begin_1c4a68795;
		}
		_iter_end_1c4a68795:;
	};
	return false;
}



inline jule::Bool _1c1cb5781_is_derives(_1c1cb3e55_Struct* _self_, jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1c4a69972:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> &_19016_d = *it;
			{
				if ((_19016_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_19016_d.get()._field_args.len() == 1LL) && (_19016_d.get()._field_args[0LL].get()._field_kind == _18929_ident))) {
						return true;
					};
				};
			}
			_iter_next_1c4a69972:;
			++it;
			goto _iter_begin_1c4a69972;
		}
		_iter_end_1c4a69972:;
	};
	return false;
}



inline jule::Bool _1c1cb5a8e_is_uses(_1c1cb3e55_Struct* _self_, jule::Ptr<_1c1cb3e55_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1c4a6bac8:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> &_20216_u = *it;
			{
				while ((_20126_s == _20216_u)) {
					{
						return true;
					}
				_iter_next_1c4a6c0c3:;
				}
				_iter_end_1c4a6c0c3:;;
			}
			_iter_next_1c4a6bac8:;
			++it;
			goto _iter_begin_1c4a6bac8;
		}
		_iter_end_1c4a6bac8:;
	};
	return false;
}



inline jule::Bool _1c1cb5d03_has_ref_accessible(_1c1cb3e55_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4a6c997:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> &_21216_m = *it;
			{
				if (((_21216_m.get()._field_params.len() > 0LL) && _1c1cc561a_is_ref(_21216_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1c4a6c997:;
			++it;
			goto _iter_begin_1c4a6c997;
		}
		_iter_end_1c4a6c997:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb3e55_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb6276_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb8740_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb8c07_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb90ae_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb94aa_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb9862_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb9b70_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cba1c0_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cba9ea_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbada2_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbb325_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbb6cc_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbba84_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbc007_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbc546_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbca85_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbd2d3_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbd789_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbdb52_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbde3d_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbe49e_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbe79b_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cbeb75_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc0060_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc037e_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc0769_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc0b54_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc110a_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc15b1_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc199b_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc1d86_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc2271_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc2925_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc2b12_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc2d87_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc3195_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc355d_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc3849_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc4570_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1cc88c6_ParamIns> _1c1cc5142_instance(jule::Ptr<_1c1cc4c79_Param> _self_) {
	return jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=_self_});
}



inline jule::Bool _1c1cc53a6_is_self(_1c1cc4c79_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1c1cc561a_is_ref(_1c1cc4c79_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc4c79_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c1cc6a17_is_void(_1c1cc65b6_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1c1cc6c7b_is_method(_1c1cc65b6_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1c1cc6ee0_is_entry_point(_1c1cc65b6_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1c1cc7254_is_init(_1c1cc65b6_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1c1cc74b8_is_anon(_1c1cc65b6_Fn* _self_) {
	return _20513bb6d_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1c1cc772c_any_var(_1c1cc65b6_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Bool _1c1cc79b3_parameters_uses_generics(_1c1cc65b6_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_1c4a82a34:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc4c79_Param> &_10516_p = *it;
			{
				if (_1c1ccb621_parameter_uses_generics(_10516_p,(*_self_)._field_generics)) {
					return true;
				};
			}
			_iter_next_1c4a82a34:;
			++it;
			goto _iter_begin_1c4a82a34;
		}
		_iter_end_1c4a82a34:;
	};
	return false;
}



inline jule::Bool _1c1cc7c38_result_uses_generics(_1c1cc65b6_Fn* _self_) {
	if (_1c1cc6a17_is_void(&(*_self_))) {
		return false;
	} else if ((((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr))) {
		return false;
	};
	return _1c1ccb269_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c1cc7e9c_instance_force(jule::Ptr<_1c1cc65b6_Fn> _self_) {
	jule::Ptr<_1c1cc9762_FnIns> _12717_ins = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1c2b4c1e9_Scope>(), ._field_references=static__1c1cccaa6_new()});;
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c4a86b9d:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc4c79_Param> _13421_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_1c1cc5142_instance(_13421_p));;
			}
			_iter_next_1c4a86b9d:;
			++it;
			goto _iter_begin_1c4a86b9d;
		}
		_iter_end_1c4a86b9d:;
	};
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _12717_ins;
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c1cc8211_instance(jule::Ptr<_1c1cc65b6_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1c1cc7e9c_instance_force(_self_);
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c1cc851e_append_instance(_1c1cc65b6_Fn* _self_, jule::Ptr<_1c1cc9762_FnIns>& _15539_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1c4a8c07c:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc9762_FnIns> _17121_ains = *it;
			{
				if (_1c1ccaa60_same(_17121_ains.ptr(), _15539_ins)) {
					return _17121_ains;
				};
			}
			_iter_next_1c4a8c07c:;
			++it;
			goto _iter_begin_1c4a8c07c;
		}
		_iter_end_1c4a8c07c:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc65b6_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c1cc8ca0_to_str(_1c1cc88c6_ParamIns* _self_) {
	jule::Str _19317_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19317_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_19317_s+=jule::Str("&_:", 3);
	};
	if (_1c1cc53a6_is_self((*_self_)._field_decl.ptr())) {
		if (_1c1cc561a_is_ref((*_self_)._field_decl.ptr())) {
			_19317_s+=jule::Str("&", 1);
		};
		_19317_s+=jule::Str("self", 4);
		return _19317_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19317_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_19317_s+=_1c2c1b4d8_to_str((*_self_)._field_kind.ptr());
	};
	return _19317_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc88c6_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c1cc9ac5_to_str(_1c1cc9762_FnIns* _self_) {
	;
	return _1c1ccad6d_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1c1cc9dd3_equals(jule::Ptr<_1c1cc9762_FnIns> _self_, jule::Ptr<_1c2c1b131_TypeKind> _24426_other) {
	jule::Ptr<_1c1cc9762_FnIns> _24513_f = _1c2c23ec4_fnc(_24426_other.ptr());;
	if ((_24513_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _24513_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _24513_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _24513_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1c1cc6a17_is_void(_self_.get()._field_decl.ptr()) != _1c1cc6a17_is_void(_24513_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _26617_i = 0LL;;
	for (; (_26617_i < _self_.get()._field_generics.len()); (_26617_i)++) {
		{
			if ((!(_1c2c1b7e6_equals(_self_.get()._field_generics[_26617_i], _24513_f.get()._field_generics[_26617_i])))) {
				return false;
			};
		}
	_iter_next_1c4a9456d:;
	}
	_iter_end_1c4a9456d:;;
	jule::Fn<jule::Bool(jule::Ptr<_1c1cc88c6_ParamIns>,jule::Ptr<_1c1cc88c6_ParamIns>)> _27313_check_params = jule::Fn<jule::Bool(jule::Ptr<_1c1cc88c6_ParamIns>,jule::Ptr<_1c1cc88c6_ParamIns>)>([=](jule::Ptr<_1c1cc88c6_ParamIns> _27331_p1, jule::Ptr<_1c1cc88c6_ParamIns> _27346_p2) mutable -> jule::Bool {
		if ((_27331_p1.get()._field_decl.get()._field_mutable != _27346_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1c1cc53a6_is_self(_27331_p1.get()._field_decl.ptr())) {
			if ((!(_1c1cc53a6_is_self(_27346_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1c1cc561a_is_ref(_27331_p1.get()._field_decl.ptr()) != _1c1cc561a_is_ref(_27346_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_27331_p1.get()._field_decl.get()._field_reference != _27346_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_27331_p1.get()._field_decl.get()._field_variadic != _27346_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1c2c1b7e6_equals(_27331_p1.get()._field_kind, _27346_p2.get()._field_kind);
	});;
	if ((_24513_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_26617_i=0LL;
	for (; (_26617_i < _self_.get()._field_params.len()); (_26617_i)++) {
		{
			if ((!(_27313_check_params(_self_.get()._field_params[_26617_i],_24513_f.get()._field_params[_26617_i])))) {
				return false;
			};
		}
	_iter_next_1c4a9bbe6:;
	}
	_iter_end_1c4a9bbe6:;;
	if ((!(_1c1cc6a17_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1c2c1b7e6_equals(_self_.get()._field_result, _24513_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _1c1cca279_types(_1c1cc9762_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1c4a9e49b:;
			{
				return nullptr;
			}
		}
		else if ((_1c2c24975_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1c4a9e512:;
			{
				return jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1c4a9e435:;
			{
				return _1c2c24975_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1c4a9e369:;
	};
}



inline jule::Bool _1c1cca4dd_is_builtin(_1c1cc9762_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1c1cca752_is_anon(_1c1cc9762_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1c1cc74b8_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1c1ccaa60_same(_1c1cc9762_FnIns* _self_, jule::Ptr<_1c1cc9762_FnIns> _35023_f) {
	if ((((*_self_)._field_decl != _35023_f.get()._field_decl) || (_35023_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1c4aa3989:;
		if (it != expr.end()) {
			jule::I64 _35513_i = it - expr.begin();
			jule::Ptr<_1c2c1b131_TypeKind> &_35516_g = *it;
			{
				if ((!(_1c2c1b7e6_equals(_35516_g, _35023_f.get()._field_generics[_35513_i])))) {
					return false;
				};
			}
			_iter_next_1c4aa3989:;
			++it;
			_35513_i++;
			goto _iter_begin_1c4aa3989;
		}
		_iter_end_1c4aa3989:;
	};
	return true;
}



inline jule::Str _1c1ccad6d_get_kind_str(_1c1cc9762_FnIns* _self_, jule::Bool _36631_ident) {
	jule::Str _36717_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_36717_s+=jule::Str("unsafe ", 7);
	};
	_36717_s+=jule::Str("fn", 2);
	if ((_36631_ident && ((*_self_)._field_decl != nullptr))) {
		_36717_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1c4aa6aad:;
			if (it != expr.end()) {
				jule::I64 _38117_i = it - expr.begin();
				jule::Ptr<_1c2c1b131_TypeKind> &_38120_t = *it;
				{
					_36717_s+=_1c2c1b4d8_to_str(_38120_t.ptr());
					if (((_38117_i + 1LL) < (*_self_)._field_generics.len())) {
						_36717_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1c4aa6aad:;
				++it;
				_38117_i++;
				goto _iter_begin_1c4aa6aad;
			}
			_iter_end_1c4aa6aad:;
		};
		_36717_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1c4aa874c:;
			if (it != expr.end()) {
				jule::I64 _39017_i = it - expr.begin();
				jule::Ptr<_20514e235_GenericDecl> &_39020_g = *it;
				{
					_36717_s+=_39020_g.get()._field_ident;
					if (((_39017_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_36717_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1c4aa874c:;
				++it;
				_39017_i++;
				goto _iter_begin_1c4aa874c;
			}
			_iter_end_1c4aa874c:;
		};
		_36717_s+=jule::Str("]", 1);
	};
	_36717_s+=jule::Str("(", 1);
	jule::I64 _40013_n = (*_self_)._field_params.len();;
	if ((_40013_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1c4aaa8a3:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cc88c6_ParamIns> &_40220_p = *it;
				{
					_36717_s+=_1c1cc8ca0_to_str(_40220_p.ptr());
					_36717_s+=jule::Str(",", 1);
				}
				_iter_next_1c4aaa8a3:;
				++it;
				goto _iter_begin_1c4aaa8a3;
			}
			_iter_end_1c4aaa8a3:;
		};
		(_36717_s).mut_slice(0LL,(_36717_s.len() - 1LL));;
	};
	_36717_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_36717_s+=jule::Str("!", 1);
	};
	if ((!(_1c1cc6a17_is_void((*_self_)._field_decl.ptr())))) {
		_36717_s+=jule::Str(":", 1);
		_36717_s+=_1c2c1b4d8_to_str((*_self_)._field_result.ptr());
	};
	return _36717_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cc9762_FnIns _Src) {
	_Stream << _1c1cc9ac5_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c1ccc798_ReferenceStack> static__1c1cccaa6_new(void) {
	return jule::new_ptr<_1c1ccc798_ReferenceStack>();
}



inline jule::I64 _1c1ccce3b_len(_1c1ccc798_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1c1ccd249_at(_1c1ccc798_ReferenceStack* _self_, jule::I64 _5825_i) {
	return jule::Any((*_self_)._field_buffer[_5825_i]);
}



inline void _1c1ccd4be_push(_1c1ccc798_ReferenceStack* _self_, jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_6331_ref));;
}



inline jule::Bool _1c1ccd7cc_exist_0(_1c1ccc798_ReferenceStack* _self_, jule::Ptr<_1c2b9a4de_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c5117140:;
		if (it != expr.end()) {
			jule::Any &_6916_ref = *it;
			{
				if ((_6916_ref == _6827_t)) {
					return true;
				};
			}
			_iter_next_1c5117140:;
			++it;
			goto _iter_begin_1c5117140;
		}
		_iter_end_1c5117140:;
	};
	return false;
}

inline jule::Bool _1c1ccd7cc_exist_1(_1c1ccc798_ReferenceStack* _self_, jule::Ptr<_1c1cc9762_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c5119a5a:;
		if (it != expr.end()) {
			jule::Any &_6916_ref = *it;
			{
				if ((_6916_ref == _6827_t)) {
					return true;
				};
			}
			_iter_next_1c5119a5a:;
			++it;
			goto _iter_begin_1c5119a5a;
		}
		_iter_end_1c5119a5a:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1ccc798_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1ccdb84_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1cd2737_SymbolBuilder> _1c1cd2ced_get_root(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_) {
	jule::Ptr<_1c1cd2737_SymbolBuilder> _28117_root = _self_;;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_1c4ab0556:;
	}
	_iter_end_1c4ab0556:;;
	return _28117_root;
}



inline void _1c1cd31b6_push_err(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_205139176_Token>& _28828_token, jule::Str _28843_fmt, jule::Slice<jule::Any> _28856_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c2b7d648_compiler_err(_28828_token,true,_28843_fmt,jule::Any(_28856_args)));;
}



inline void _1c1cd357e_push_err_text(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_205139176_Token>& _29233_token, jule::Str _29248_fmt, jule::Slice<jule::Any> _29261_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c2b7d648_compiler_err(_29233_token,false,_29248_fmt,jule::Any(_29261_args)));;
}



inline void _1c1cd389d_push_suggestion(_1c1cd2737_SymbolBuilder* _self_, jule::Str _29734_fmt, jule::Slice<jule::Any> _29747_args) {
	{
		_1c2b7ea56_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,jule::Any(_29747_args));
	};
}



inline jule::Bool _1c1cd3c77_check_cpp_use_decl_path(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_205151e6e_UseDecl>& _30143_decl, jule::Str _30159_path) {
	jule::Bool _30172_ok = jule::Bool();
	jule::Str _30213_ext = _204c67117_ext(_30159_path);;
	if (((!(_2046ce9d6_is_valid_header_ext(_30213_ext))) && (!(_2046cec7d_is_valid_cpp_ext(_30213_ext))))) {
		_1c1cd31b6_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_30213_ext)}));
		_30172_ok = false;
		return _30172_ok;
	};
	jule::Ptr<_236821b7e_Status> _30913_info = ({
		auto except = static__204c67c72_of(_30159_path);
		(except.ok()) ? (except.result) : ({{
			_1c1cd31b6_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_30143_decl.get()._field_link_path)}));
			_30172_ok = false;
			return _30172_ok;
			_30172_ok = false;
			return _30172_ok;
		} jule::Ptr<_236821b7e_Status>();});
	});;
	if (_235b49804_is_dir(_30913_info.ptr())) {
		_1c1cd31b6_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_30143_decl.get()._field_link_path)}));
		_30172_ok = false;
		return _30172_ok;
	};
	_30172_ok = true;
	return _30172_ok;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd4085_build_cpp_header_import(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_205151e6e_UseDecl>& _32147_decl) {
	jule::Str _32217_path = _32147_decl.get()._field_link_path;;
	if ((!(_2046ce6ea_is_std_header_path(_32147_decl.get()._field_link_path)))) {
		_32217_path=_204c66ed5_join(jule::Slice<jule::Str>::make({_20513ee5c_dir(_32147_decl.get()._field_token.get()._field_file.ptr()),_32147_decl.get()._field_link_path}));
		jule::Bool _32621_ok = _1c1cd3c77_check_cpp_use_decl_path(&(*_self_), _32147_decl,_32217_path);;
		if ((!(_32621_ok))) {
			return nullptr;
		};
		std::tie(_32217_path,_32621_ok) = _204c67249_abs(_32217_path);
		if ((!(_32621_ok))) {
			_1c1cd31b6_push_err(&(*_self_), _32147_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_32147_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1c2b77301_ImportInfo>(_1c2b77301_ImportInfo{._field_token=_32147_decl.get()._field_token, ._field_path=_32217_path, ._field_link_path=_32147_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr});
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd43a4_build_std_import(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_205151e6e_UseDecl>& _34940_decl) {
	jule::Str _35017_path = _34940_decl.get()._field_link_path.slice(5LL);;
	_35017_path=_204c65555_replace(_35017_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_35017_path=_204c66ed5_join(jule::Slice<jule::Str>::make({_2046ee8d5_PATH_STDLIB,_35017_path}));
	jule::Bool _35320_ok;;
	std::tie(_35017_path,_35320_ok) = _204c67249_abs(_35017_path);
	if ((!(_35320_ok))) {
		_1c1cd31b6_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_236821b7e_Status> _36013_info = ({
		auto except = static__204c67c72_of(_35017_path);
		(except.ok()) ? (except.result) : ({{
			_1c1cd31b6_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_34940_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_236821b7e_Status>();});
	});;
	if ((!(_235b49804_is_dir(_36013_info.ptr())))) {
		_1c1cd31b6_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _37013_i = (_20498c2e3_find_last(_34940_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _37113_ident = _34940_decl.get()._field_link_path.slice(_37013_i);;
	return jule::new_ptr<_1c2b77301_ImportInfo>(_1c2b77301_ImportInfo{._field_import_all=_34940_decl.get()._field_full, ._field_token=_34940_decl.get()._field_token, ._field_path=_35017_path, ._field_link_path=_34940_decl.get()._field_link_path, ._field_ident=_37113_ident, ._field_alias=_34940_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_package=jule::new_ptr<_1c2b79eb3_Package>(_1c2b79eb3_Package{._field_files=nullptr})});
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd46b2_build_ident_import(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_205151e6e_UseDecl>& _38843_decl) {
	jule::Str _38913_mod_path = _1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b74100_get_mod_path(_self_.get()._field_importer);;
	if ((_38913_mod_path.len() == 0LL)) {
		_1c1cd31b6_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1c1cd389d_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _39617_path = _38843_decl.get()._field_link_path;;
	_39617_path=_204c65555_replace(_39617_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_39617_path=_204c66ed5_join(jule::Slice<jule::Str>::make({_38913_mod_path,_39617_path}));
	jule::Bool _40020_ok;;
	std::tie(_39617_path,_40020_ok) = _204c67249_abs(_39617_path);
	if ((!(_40020_ok))) {
		_1c1cd31b6_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_236821b7e_Status> _40713_info = ({
		auto except = static__204c67c72_of(_39617_path);
		(except.ok()) ? (except.result) : ({{
			_1c1cd31b6_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38843_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_236821b7e_Status>();});
	});;
	if ((!(_235b49804_is_dir(_40713_info.ptr())))) {
		_1c1cd31b6_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _41713_i = (_20498c2e3_find_last(_38843_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _41813_ident = _38843_decl.get()._field_link_path.slice(_41713_i);;
	return jule::new_ptr<_1c2b77301_ImportInfo>(_1c2b77301_ImportInfo{._field_import_all=_38843_decl.get()._field_full, ._field_token=_38843_decl.get()._field_token, ._field_path=_39617_path, ._field_link_path=_38843_decl.get()._field_link_path, ._field_ident=_41813_ident, ._field_alias=_38843_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_package=jule::new_ptr<_1c2b79eb3_Package>(_1c2b79eb3_Package{._field_files=nullptr})});
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd49c0_build_import(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_205151e6e_UseDecl>& _43537_decl) {
	{
		
		if (_43537_decl.get()._field_cpp_linked) {
			_case_begin_1c4acd61d:;
			{
				return _1c1cd4085_build_cpp_header_import(_self_.ptr(), _43537_decl);
			}
		}
		else if (_43537_decl.get()._field_std) {
			_case_begin_1c4acd794:;
			{
				return _1c1cd43a4_build_std_import(_self_.ptr(), _43537_decl);
			}
		}
		else {
			_case_begin_1c4acccb0:;
			{
				return _1c1cd46b2_build_ident_import(_self_, _43537_decl);
			}
		}
		_match_end_1c4accbe4:;
	};
}



inline jule::Bool _1c1cd4d00_check_duplicate_use_decl(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_1c2b77301_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_1c2b77301_ImportInfo> _44813_lpkg = _1c2bdc50e_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>([=](jule::Ptr<_1c2b77301_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return (_44644_pkg.get()._field_path == _44849_spkg.get()._field_path);
	}));;
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	};
	_1c1cd31b6_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_44644_pkg.get()._field_link_path)}));
	_1c1cd389d_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _1c1cd5130_impl_import_selections(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_1c2b77301_ImportInfo>& _46046_imp, jule::Ptr<_205151e6e_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1c4ad3bd9:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> _46121_ident = *it;
			{
				if (_1c2b79930_exist_ident(_46046_imp.ptr(), _46121_ident.get()._field_kind)) {
					_1c1cd31b6_push_err(&(*_self_), _46121_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_46121_ident.get()._field_kind)}));
					_1c1cd389d_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1c4ad3bd9;
				};
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_46121_ident);;
			}
			_iter_next_1c4ad3bd9:;
			++it;
			goto _iter_begin_1c4ad3bd9;
		}
		_iter_end_1c4ad3bd9:;
	};
}



inline jule::Str _1c1cd543d_get_as_link_path(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Str _47240_path) {
	if (_204c1a131_has_prefix(_47240_path,_2046ee8d5_PATH_STDLIB)) {
		(_47240_path).mut_slice(_2046ee8d5_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _204c65555_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _47814_root;;
	std::tie(_47814_root,std::ignore) = _204c67249_abs(_1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b74100_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());;
	if ((_47240_path[0LL] == 92LLU)) {
		(_47240_path).mut_slice(1LL);;
	};
	return _204c65555_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1c1cd5806_push_cycle_error(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_1c1cd2737_SymbolBuilder>& _48637_sb, jule::Str _48657_path, jule::Str& _48673_message) {
	;
	jule::Str _48913_refers_to = _2046db6b3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1c1cd543d_get_as_link_path(_self_, _20513ee5c_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1c1cd543d_get_as_link_path(_self_, _48657_path))}));;
	(_48673_message).buffer.insert(0, (((_204c21b2c_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));;
}



inline void _1c1cd5bbe_push_cross_cycle_error(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_1c1cd2737_SymbolBuilder>& _49643_target, jule::Ptr<_1c2b77301_ImportInfo>& _49668_imp, jule::Ptr<_205139176_Token>& _49687_error_token) {
	jule::Str _49717_message = jule::Str();;
	_1c1cd5806_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_1c1cd2737_SymbolBuilder> _50117_owner = _self_.get()._field_owner;;
	jule::Ptr<_1c1cd2737_SymbolBuilder> _50217_old = _self_;;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_1c1cd5806_push_cycle_error(_self_, _50217_old.get()._field_owner,_20513ee5c_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if ((_50117_owner.get()._field_owner == _49643_target)) {
				_1c1cd5806_push_cycle_error(_self_, _49643_target,_20513ee5c_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_1c4adcc15;
			};
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_1c4adcc15:;
	}
	_iter_end_1c4adcc15:;;
	_1c1cd31b6_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_49717_message)}));
}



inline jule::Bool _1c1cd6076_check_import_cycles(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_1c2b77301_ImportInfo> _51939_imp, jule::Ptr<_205151e6e_UseDecl>& _51958_decl) {
	if ((_51939_imp.get()._field_path == _20513ee5c_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1c1cd31b6_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1c1cd543d_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_20513ee5c_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path)) {
		_1c1cd5bbe_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1c1cd2737_SymbolBuilder> _53417_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_20513ee5c_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path)) {
		_1c1cd5bbe_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	};
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1c1cd6461_check_package_accessibility(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_205151e6e_UseDecl>& _55547_decl, jule::Str& _55564_mod, jule::Str& _55575_path) {
	if (((_1c2b74e8b_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1c2b74100_get_mod_path((*_self_)._field_importer) != _55564_mod) && _204c04a99_contains(_55575_path,jule::Str("internal", 8)))) {
		_1c1cd31b6_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c1cd6829_import_package(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_1c2b77301_ImportInfo>& _56139_imp, jule::Ptr<_205151e6e_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	};
	jule::Ptr<_1c2b77301_ImportInfo> _56617_port = _1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b7471b_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);;
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b74100_get_mod_path(_self_.get()._field_importer);;
		_1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b73d8b_set_mod_path(_self_.get()._field_importer, _1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b7440d_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_1c1cd6461_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b73d8b_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_1c1cd6076_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		};
		jule::Str _58017_old_mod = _1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b74100_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b73d8b_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});;
		if (_56139_imp.get()._field_std) {
			_1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b73d8b_set_mod_path(_self_.get()._field_importer, _2046ee8d5_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_20500541b_Ast>> _58522_asts;;
		jule::Slice<_2046db273_Log> _58532_errors;;
		std::tie(_58522_asts,_58532_errors) = _1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b74ac3_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		};
		_1c1cd6461_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_1c4aeed26:;
			if (it != expr.end()) {
				jule::Ptr<_20500541b_Ast> _59325_ast = *it;
				{
					jule::Ptr<_1c2bdbbe5_SymbolTable> _59425_table = nullptr;;
					std::tie(_59425_table,_58532_errors) = _1c2c39e1e_build_symbols(_59325_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_1c1cd357e_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					};
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);;
				}
				_iter_next_1c4aeed26:;
				++it;
				goto _iter_begin_1c4aeed26;
			}
			_iter_end_1c4aeed26:;
		};
	};
	_1c1cd5130_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c1cd6b37_import_use_decl(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_, jule::Ptr<_205151e6e_UseDecl>& _61340_decl) {
	jule::Ptr<_1c2b77301_ImportInfo> _61417_imp = _1c1cd49c0_build_import(_self_, _61340_decl);;
	if ((_61417_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _62017_ok = _1c1cd4d00_check_duplicate_use_decl(_self_.ptr(), _61417_imp);;
	if ((!(_62017_ok))) {
		return nullptr;
	};
	_62017_ok=_1c1cd6829_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);;
	if (_62017_ok) {
		_1c2b74e8b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2b74d48_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	};
	return nullptr;
}



inline void _1c1cd6d13_import_use_decls(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1c4b06ee8:;
		if (it != expr.end()) {
			jule::Ptr<_205151e6e_UseDecl> _63521_decl = *it;
			{
				_1c1cd6b37_import_use_decl(_self_, _63521_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1c4b06ee8;
				};
			}
			_iter_next_1c4b06ee8:;
			++it;
			goto _iter_begin_1c4b06ee8;
		}
		_iter_end_1c4b06ee8:;
	};
}



inline void _1c1cd7088_append_node(_1c1cd2737_SymbolBuilder* _self_, _204ec155d_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_205154207_Impl>>()) {
			_case_begin_1c4b08747:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1c1cd21d7_build_impl(_64535_node._field_data.operator jule::Ptr<_205154207_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2051518a8_TypeAliasDecl>>()) {
			_case_begin_1c4b087ad:;
			{
				jule::Ptr<_1c2c1a3e9_TypeAlias> _65021_ta = _1c1cce569_build_type_alias(_64535_node._field_data.operator jule::Ptr<_2051518a8_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2051534e2_StructDecl>>()) {
			_case_begin_1c4b08824:;
			{
				jule::Ptr<_1c1cb3e55_Struct> _65321_srct = _1c1cced94_build_struct(_64535_node._field_data.operator jule::Ptr<_2051534e2_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20515028b_FnDecl>>()) {
			_case_begin_1c4b0888a:;
			{
				jule::Ptr<_1c1cc65b6_Fn> _65621_f = _1c1cd09aa_build_fn(_64535_node._field_data.operator jule::Ptr<_20515028b_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205153aec_TraitDecl>>()) {
			_case_begin_1c4b0923c:;
			{
				jule::Ptr<_1c2a137db_Trait> _65921_t = _1c1cd0ee9_build_trait(_64535_node._field_data.operator jule::Ptr<_205153aec_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205150478_VarDecl>>()) {
			_case_begin_1c4b092a3:;
			{
				jule::Ptr<_1c2b9a4de_Var> _66221_v = _1c1cd1b98_build_var(_64535_node._field_data.operator jule::Ptr<_205150478_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205152579_EnumDecl>>()) {
			_case_begin_1c4b09319:;
			{
				jule::Ptr<_1c2a159ec_Enum> _66521_e = _1c1cd17d0_build_enum(_64535_node._field_data.operator jule::Ptr<_205152579_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);;
			}
		}
		else {
			_case_begin_1c4b08659:;
			{
				_1c1cd31b6_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4b08604:;
	};
}



inline void _1c1cd7264_append_nodes(_1c1cd2737_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1c4b112dd:;
		if (it != expr.end()) {
			_204ec155d_Node _67321_node = *it;
			{
				_1c1cd7088_append_node(&(*_self_), _67321_node);
			}
			_iter_next_1c4b112dd:;
			++it;
			goto _iter_begin_1c4b112dd;
		}
		_iter_end_1c4b112dd:;
	};
}



inline void _1c1cd74d9_push_directive_pass(_1c1cd2737_SymbolBuilder* _self_, jule::Ptr<_204ec174a_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_1c1cd31b6_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_205139176_Token> _68317_arg = _67843_d.get()._field_args[1LL];;
		_1c1cd31b6_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_205139176_Token> _68713_arg = _67843_d.get()._field_args[0LL];;
	if ((_68713_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1c1cd31b6_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_68713_arg.get()._field_kind[0LL] != '\"')) {
		_1c1cd31b6_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1c1ccdb84_Pass{._field_token=_67843_d.get()._field_tag, ._field_text=_68713_arg.get()._field_kind.slice(1LL,(_68713_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1c1cd76b5_append_top_directives(_1c1cd2737_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1c4b16bd9:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _70521_d = *it;
			{
				{
					auto &_match_expr{ _70521_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1c4b1836c:;
						{
							_1c1cd74d9_push_directive_pass(&(*_self_), _70521_d);
						}
					}
					_match_end_1c4b182e5:;
				};
			}
			_iter_next_1c4b16bd9:;
			++it;
			goto _iter_begin_1c4b16bd9;
		}
		_iter_end_1c4b16bd9:;
	};
}



inline void _1c1cd7891_build(jule::Ptr<_1c1cd2737_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1c2bdbbe5_SymbolTable>(_1c2bdbbe5_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file});
	_1c1cd76b5_append_top_directives(_self_.ptr());
	_1c1cd6d13_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1c1cd7264_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cd2737_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2a13bd7_to_str(_1c2a137db_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1c2a13ee5_equals(jule::Ptr<_1c2a137db_Trait> _self_, jule::Ptr<_1c2c1b131_TypeKind> _2626_other) {
	jule::Ptr<_1c2a137db_Trait> _2713_trt = _1c2c2449c_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1c2a14358_is_builtin(_1c2a137db_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2a14666_find_method(_1c2a137db_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4b23c07:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1c4b23c07:;
			++it;
			goto _iter_begin_1c4b23c07;
		}
		_iter_end_1c4b23c07:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2a137db_Trait _Src) {
	_Stream << _1c2a13bd7_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1c2a153e2_auto_expr(_1c2a15007_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2a15007_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2a15d60_to_str(_1c2a159ec_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1c2a1616d_equals(jule::Ptr<_1c2a159ec_Enum> _self_, jule::Ptr<_1c2c1b131_TypeKind> _3826_other) {
	jule::Ptr<_1c2a159ec_Enum> _3913_enm = _1c2c23787_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1c2a15007_EnumItem> _1c2a165ad_find_item(_1c2a159ec_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1c4b277dd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a15007_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1c4b277dd:;
			++it;
			goto _iter_begin_1c4b277dd;
		}
		_iter_end_1c4b277dd:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2a159ec_Enum _Src) {
	_Stream << _1c2a15d60_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1c2a1736c_is_trait_impl(_1c2a16e71_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1c2a175d1_is_struct_impl(_1c2a16e71_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2a16e71_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b4c1e9_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b53ae6_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2aed673_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2aed860_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b0e486_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2b3bc88_is_while_next(_1c2b0e673_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b0e673_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b3c519_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b3c706_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b5ee43_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b60130_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b6031c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b60509_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b606e6_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b608d3_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2b3d394_is_generic_type_match(_1c2b60ac0_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b60ac0_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2b3e351_is_default(_1c2b60edd_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b60edd_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b611ca_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b613b7_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b615a4_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b61791_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b0eb4b_find_package(_1c2b6197d_ScopeChecker* _self_, jule::Str _41335_ident) {
	return _1c2b804e6_find_package((*_self_)._field_s.ptr(), _41335_ident);
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2ae72c6_select_package(_1c2b6197d_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _42337_selector) {
	return _1c2b80804_select_package((*_self_)._field_s.ptr(), _42337_selector);
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2ad565a_find_var(_1c2b6197d_ScopeChecker* _self_, jule::Str _43431_ident, jule::Bool _43443_cpp_linked) {
	;
	jule::Ptr<_1c2b9a4de_Var> _43717_v = _1c2bde16a___find_var((*_self_)._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);;
	if ((_43717_v != nullptr)) {
		return _43717_v;
	};
	jule::Ptr<_1c2b6197d_ScopeChecker> _44217_parent = (*_self_)._field_parent;;
	while ((_44217_parent != nullptr)) {
		{
			_43717_v=_1c2bde16a___find_var(_44217_parent.get()._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);
			if ((_43717_v != nullptr)) {
				return _43717_v;
			};
			_44217_parent=_44217_parent.get()._field_parent;
		}
	_iter_next_1c4b31918:;
	}
	_iter_end_1c4b31918:;;
	return _1c2b80bab_find_var((*_self_)._field_s.ptr(), _43431_ident,_43443_cpp_linked);
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b61b6a_find_type_alias(_1c2b6197d_ScopeChecker* _self_, jule::Str _46138_ident, jule::Bool _46150_cpp_linked) {
	;
	jule::Ptr<_1c2c1a3e9_TypeAlias> _46417_ta = _1c2bde5bb___find_type_alias((*_self_)._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);;
	if ((_46417_ta != nullptr)) {
		return _46417_ta;
	};
	jule::Ptr<_1c2b6197d_ScopeChecker> _46917_parent = (*_self_)._field_parent;;
	while ((_46917_parent != nullptr)) {
		{
			_46417_ta=_1c2bde5bb___find_type_alias(_46917_parent.get()._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);
			if ((_46417_ta != nullptr)) {
				return _46417_ta;
			};
			_46917_parent=_46917_parent.get()._field_parent;
		}
	_iter_next_1c4b35a0a:;
	}
	_iter_end_1c4b35a0a:;;
	return _1c2b81063_find_type_alias((*_self_)._field_s.ptr(), _46138_ident,_46150_cpp_linked);
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2b61e56_find_struct(_1c2b6197d_ScopeChecker* _self_, jule::Str _48634_ident, jule::Bool _48646_cpp_linked) {
	return _1c2b8141a_find_struct((*_self_)._field_s.ptr(), _48634_ident,_48646_cpp_linked);
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2b6230d_find_fn(_1c2b6197d_ScopeChecker* _self_, jule::Str _49530_ident, jule::Bool _49542_cpp_linked) {
	return _1c2b817c2_find_fn((*_self_)._field_s.ptr(), _49530_ident,_49542_cpp_linked);
}



inline jule::Ptr<_1c2a137db_Trait> _1c2b6261b_find_trait(_1c2b6197d_ScopeChecker* _self_, jule::Str _50433_ident) {
	return _1c2b81ad0_find_trait((*_self_)._field_s.ptr(), _50433_ident);
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2b62929_find_enum(_1c2b6197d_ScopeChecker* _self_, jule::Str _51332_ident) {
	return _1c2b81ddd_find_enum((*_self_)._field_s.ptr(), _51332_ident);
}



inline jule::Bool _1c2b62c59_is_unsafe(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _52117_scope = _self_;;
	_julec_label_iter:;
	if (_52117_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_52117_scope.get()._field_parent != nullptr)) {
		_52117_scope=_52117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1c2b62ebd_is_root(_1c2b6197d_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1c2b63199_stop(_1c2b6197d_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1c2b6340d_stopped(_1c2b6197d_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1c2b63672_is_deferred(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _55417_scope = _self_;;
	_julec_label_iter:;
	if (_55417_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_55417_scope.get()._field_parent != nullptr)) {
		_55417_scope=_55417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2b638d6_get_root(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _57217_root = _self_;;
	while (((_57217_root.get()._field_parent != nullptr) && (_57217_root.get()._field_owner == nullptr))) {
		{
			_57217_root=_57217_root.get()._field_parent;
		}
	_iter_next_1c4b4462e:;
	}
	_iter_end_1c4b4462e:;;
	return _57217_root;
}



inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2b63b4a_get_hard_root(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _58217_root = _self_;;
	while ((_58217_root.get()._field_parent != nullptr)) {
		{
			_58217_root=_58217_root.get()._field_parent;
		}
	_iter_next_1c4b45b91:;
	}
	_iter_end_1c4b45b91:;;
	return _58217_root;
}



inline jule::Ptr<_1c2b60130_Label> _1c2b63e58_find_label(_1c2b6197d_ScopeChecker* _self_, jule::Str _59229_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1c4b4708d:;
		if (it != expr.end()) {
			jule::Any _59321_st = *it;
			{
				{
					auto &_match_expr{ _59321_st };
					
					if (_match_expr.type_is<jule::Ptr<_1c2b60130_Label>>()) {
						_case_begin_1c4b47764:;
						{
							jule::Ptr<_1c2b60130_Label> _59625_label = _59321_st.operator jule::Ptr<_1c2b60130_Label>();;
							if ((_59625_label.get()._field_ident == _59229_ident)) {
								return _59625_label;
							};
						}
					}
					_match_end_1c4b4770e:;
				};
			}
			_iter_next_1c4b4708d:;
			++it;
			goto _iter_begin_1c4b4708d;
		}
		_iter_end_1c4b4708d:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2b615a4_ScopeLabel> _1c2b64266_find_label_scope(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Str _60836_ident) {
	jule::Ptr<_1c2b615a4_ScopeLabel> _60917_label = _1c2b64574_find_label_all(_self_.ptr(), _60836_ident);;
	if (((_60917_label != nullptr) && (_60917_label.get()._field_scope == _self_))) {
		return _60917_label;
	};
	return nullptr;
}



inline jule::Ptr<_1c2b615a4_ScopeLabel> _1c2b64574_find_label_all(_1c2b6197d_ScopeChecker* _self_, jule::Str _62033_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c4b4a5ad:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b615a4_ScopeLabel> _62121_lbl = *it;
			{
				if ((_62121_lbl.get()._field_label.get()._field_ident == _62033_ident)) {
					return _62121_lbl;
				};
			}
			_iter_next_1c4b4a5ad:;
			++it;
			goto _iter_begin_1c4b4a5ad;
		}
		_iter_end_1c4b4a5ad:;
	};
	return nullptr;
}



inline jule::Bool _1c2b6492b_is_duplicated_ident(_1c2b6197d_ScopeChecker* _self_, jule::U64 _63238_itself, jule::Str _63255_ident) {
	jule::Ptr<_1c2b9a4de_Var> _63313_v = _1c2ad565a_find_var(&(*_self_), _63255_ident,false);;
	if (((_63313_v != nullptr) && (static_cast<jule::U64>(_63313_v) != _63238_itself))) {
		if ((_63313_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_63313_v.get()._field_scope == (*_self_)._field_scope) || (!(_1c2b822b7_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1c2c1a3e9_TypeAlias> _64113_ta = _1c2b61b6a_find_type_alias(&(*_self_), _63255_ident,false);;
	if (((_64113_ta != nullptr) && (static_cast<jule::U64>(_64113_ta) != _63238_itself))) {
		if ((_64113_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_64113_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1c2b822b7_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1c2b64ba1_check_var_decl(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150478_VarDecl> _65238_decl) {
	jule::Ptr<_1c2b9a4de_Var> _65317_v = _1c1cd1b98_build_var(_65238_decl);;
	_65317_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65317_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65317_v));;
	});;
	if (_1c2b6492b_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_65317_v)),_65317_v.get()._field_ident)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _65317_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_65317_v.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1c2b63199_stop(_self_.ptr());
		return;;
	};
	_1c2b8e219_check_var_decl(_self_.get()._field_s, _65317_v,jule::Trait<_1c2c3934c_Lookup>(_self_, 0));
	if (((!(_1c2b9ab0a_is_type_inferred(_65317_v.ptr()))) && ((_65317_v.get()._field_kind == nullptr) || (_65317_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1c2b93460_check_type_var(_self_.get()._field_s, _65317_v,jule::Trait<_1c2c3934c_Lookup>(_self_, 0));
}



inline void _1c2b64e26_check_type_alias_decl(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_2051518a8_TypeAliasDecl> _67645_decl) {
	jule::Ptr<_1c2c1a3e9_TypeAlias> _67717_ta = _1c1cce569_build_type_alias(_67645_decl);;
	if (_1c2b6492b_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_67717_ta)),_67717_ta.get()._field_ident)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _67717_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_67717_ta.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1c2b63199_stop(_self_.ptr());
		return;;
	};
	_1c2b8a149_check_type_alias_decl(_self_.get()._field_s, _67717_ta,jule::Trait<_1c2c3934c_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_67717_ta);;
	if ((_67717_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1c2b63199_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b6518a_get_child(_1c2b6197d_ScopeChecker* _self_) {
	return jule::new_ptr<_1c2b4c1e9_Scope>(_1c2b4c1e9_Scope{._field_parent=(*_self_)._field_scope});
}



inline void _1c2b65553_check_child_ssc(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514edb2_ScopeTree>& _70040_tree, jule::Ptr<_1c2b4c1e9_Scope>& _70063_s, jule::Ptr<_1c2b6197d_ScopeChecker>& _70079_ssc) {
	_70079_ssc.get()._field_parent=_self_;
	_1c2b70b02_check(_70079_ssc, _70040_tree,_70063_s);
}



inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b6590a_check_child_sc(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514edb2_ScopeTree>& _70539_tree, jule::Ptr<_1c2b6197d_ScopeChecker>& _70562_ssc) {
	jule::Ptr<_1c2b4c1e9_Scope> _70617_s = _1c2b6518a_get_child(_self_.ptr());;
	_1c2b65553_check_child_ssc(_self_, _70539_tree,_70617_s,_70562_ssc);
	return _70617_s;
}



inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b65c18_check_child(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514edb2_ScopeTree>& _71136_tree) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _71217_ssc = _1c2b70d66_new_child_checker(_self_);;
	return _1c2b6590a_check_child_sc(_self_, _71136_tree,_71217_ssc);
}



inline void _1c2b65e8d_check_anon_scope(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514edb2_ScopeTree> _71640_tree) {
	jule::Ptr<_1c2b4c1e9_Scope> _71717_s = _1c2b65c18_check_child(_self_, _71640_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_71717_s));;
}



inline void _1c2b662ac_process_error_call(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>& _72143_m, jule::Ptr<_205139176_Token> _72174_err) {
	if (_1c2b63672_is_deferred(_self_)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2b6197d_ScopeChecker> _72617_root = _1c2b638d6_get_root(_self_);;
	if ((!(_72617_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_72143_m.get()._field_func=_72617_root.get()._field_owner;
}



inline void _1c2b66532_check_expr(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_2050bba21_Expr> _73434_expr) {
	jule::Ptr<_1c2be3823_Eval> _73517_eval = _1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0));;
	_73517_eval.get()._field_ignored=true;
	jule::Ptr<_1c2be1ca5_Data> _73717_d = _1c2c0ced0_eval_expr(_73517_eval, _73434_expr);;
	if ((_73717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _73717_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c4b6a05b:;
			{
				jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel> _74421_m = _73717_d.get()._field_model.operator jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>();;
				_1c2b662ac_process_error_call(_self_, _74421_m,_73434_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc355d_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc1d86_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc3849_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>()) {
			_case_begin_1c4b6a347:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));;
			}
		}
		else {
			_case_begin_1c4b6a259:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _73434_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4b6a204:;
	};
}



inline void _1c2b667a7_check_co_expr(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514bde2_CoExpr> _76337_expr) {
	jule::Ptr<_1c2be3823_Eval> _76417_eval = _1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0));;
	_76417_eval.get()._field_ignored=true;
	jule::Ptr<_1c2be1ca5_Data> _76617_d = _1c2c0ced0_eval_expr(_76417_eval, _76337_expr.get()._field_expr);;
	if ((_76617_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _76617_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>()) {
			_case_begin_1c4b7156d:;
			{
				jule::Ptr<_1c1cba9ea_FnCallExprModel> _77321_model = _76617_d.get()._field_model.operator jule::Ptr<_1c1cba9ea_FnCallExprModel>();;
				if (_77321_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1c2b82905_push_err(_self_.get()._field_s.ptr(), _76337_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_77321_model.get()._field_is_co=true;
				_1c2c0522a_check_fn_of_concurrent_call(_76417_eval.ptr(), _77321_model.get()._field_func,_76337_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76617_d));;
			}
		}
		else {
			_case_begin_1c4b70924:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _76337_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c4b708be:;
	};
}



inline jule::Ptr<_1c2b53ae6_If> _1c2b66ab5_check_if(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_2051512e2_If> _78732_i) {
	jule::Ptr<_1c2b4c1e9_Scope> _78817_s = _1c2b65c18_check_child(_self_, _78732_i.get()._field_scope);;
	jule::Ptr<_1c2be1ca5_Data> _79017_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _78732_i.get()._field_expr);;
	if ((_79017_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2c256e0_Prim> _79517_prim = _1c2c2304a_prim(_79017_d.get()._field_kind.ptr());;
	if (((_79517_prim == nullptr) || (!(_1c2c2843a_is_bool(_79517_prim.ptr()))))) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _78732_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c2b53ae6_If>(_1c2b53ae6_If{._field_expr=jule::Any(_79017_d.get()._field_model), ._field_scope=_78817_s});
}



inline jule::Ptr<_1c2aed673_Else> _1c2b66dc3_check_else(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_2051514ce_Else> _80734_e) {
	return jule::new_ptr<_1c2aed673_Else>(_1c2aed673_Else{._field_scope=_1c2b65c18_check_child(_self_, _80734_e.get()._field_scope)});
}



inline void _1c2b67148_check_conditional(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_2051516bb_Conditional> _81341_conditional) {
	jule::Ptr<_1c2aed860_Conditional> _81417_c = jule::new_ptr<_1c2aed860_Conditional>(_1c2aed860_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81417_c));;
	_81417_c.get()._field_elifs=jule::Slice<jule::Ptr<_1c2b53ae6_If>>::alloc(0LL,(_81341_conditional.get()._field_tail.len() + 1LL));
	_81417_c.get()._field_elifs = jule::alloc_for_append(_81417_c.get()._field_elifs,1);_81417_c.get()._field_elifs.__push(_1c2b66ab5_check_if(_self_, _81341_conditional.get()._field_head));;
	{
		auto &expr = _81341_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1c4b7c4e1:;
		if (it != expr.end()) {
			jule::Ptr<_2051512e2_If> _82021_elif = *it;
			{
				_81417_c.get()._field_elifs = jule::alloc_for_append(_81417_c.get()._field_elifs,1);_81417_c.get()._field_elifs.__push(_1c2b66ab5_check_if(_self_, _82021_elif));;
			}
			_iter_next_1c4b7c4e1:;
			++it;
			goto _iter_begin_1c4b7c4e1;
		}
		_iter_end_1c4b7c4e1:;
	};
	if ((_81341_conditional.get()._field_default != nullptr)) {
		_81417_c.get()._field_default=_1c2b66dc3_check_else(_self_, _81341_conditional.get()._field_default);
	};
}



inline void _1c2b675aa_check_iter_scope_ssc(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::U64 _82940_it, jule::Ptr<_20514edb2_ScopeTree> _82957_tree, jule::Ptr<_1c2b4c1e9_Scope>& _82980_s, jule::Ptr<_1c2b6197d_ScopeChecker> _82995_ssc) {
	_82995_ssc.get()._field_it=_82940_it;
	_1c2b65553_check_child_ssc(_self_, _82957_tree,_82980_s,_82995_ssc);
}



inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b67a0b_check_iter_scope_sc(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::U64 _83439_it, jule::Ptr<_20514edb2_ScopeTree> _83456_tree, jule::Ptr<_1c2b6197d_ScopeChecker> _83478_ssc) {
	jule::Ptr<_1c2b4c1e9_Scope> _83517_scope = _1c2b6518a_get_child(_self_.ptr());;
	_1c2b675aa_check_iter_scope_ssc(_self_, _83439_it,_83456_tree,_83517_scope,_83478_ssc);
	return _83517_scope;
}



inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b67db3_check_iter_scope(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::U64 _84036_it, jule::Ptr<_20514edb2_ScopeTree>& _84054_tree) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _84117_ssc = _1c2b70d66_new_child_checker(_self_);;
	return _1c2b67a0b_check_iter_scope_sc(_self_, _84036_it,_84054_tree,_84117_ssc);
}



inline void _1c2b68138_check_inf_iter(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150852_Iter>& _84539_it) {
	jule::Ptr<_1c2b0e486_InfIter> _84617_kind = jule::new_ptr<_1c2b0e486_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84617_kind));;
	_84617_kind.get()._field_scope=_1c2b67db3_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_84617_kind)),_84539_it.get()._field_scope);
}



inline void _1c2b683ad_check_while_iter(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150852_Iter>& _85141_it) {
	jule::Ptr<_205150a3e_WhileKind> _85217_wh = _85141_it.get()._field_kind.operator jule::Ptr<_205150a3e_WhileKind>();;
	if (((_85217_wh.get()._field_expr == nullptr) && (_85217_wh.get()._field_next == nullptr))) {
		_1c2b68138_check_inf_iter(_self_, _85141_it);
		return;;
	};
	jule::Ptr<_1c2b0e673_WhileIter> _85817_kind = jule::new_ptr<_1c2b0e673_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85817_kind));;
	_85817_kind.get()._field_scope=_1c2b67db3_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_85817_kind)),_85141_it.get()._field_scope);
	if ((_85217_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1c2be1ca5_Data> _86321_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _85217_wh.get()._field_expr);;
		if ((_86321_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c2c256e0_Prim> _86817_prim = _1c2c2304a_prim(_86321_d.get()._field_kind.ptr());;
		if ((_86817_prim == nullptr)) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c2c2843a_is_bool(_86817_prim.ptr())))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_85817_kind.get()._field_expr=jule::Any(_86321_d.get()._field_model);
	};
	if (_20511b983_is_while_next(_85217_wh.ptr())) {
		if ((!(_1c2b39956_is_valid_ast_st_for_next_st(_85217_wh.get()._field_next)))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _88817_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1c2b6e89d_check_node(_self_, _85217_wh.get()._field_next);
		if ((_88817_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _89125_st = _self_.get()._field_scope.get()._field_stmts[_88817_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_88817_n);
			if ((!(_1c2b3a193_is_valid_st_for_next_st(_89125_st)))) {
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_85817_kind.get()._field_next=jule::Any(_89125_st);
		};
	};
}



inline void _1c2b68633_check_range_iter(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150852_Iter>& _90241_it) {
	jule::Ptr<_205150c2b_RangeKind> _90317_rang = _90241_it.get()._field_kind.operator jule::Ptr<_205150c2b_RangeKind>();;
	jule::Ptr<_1c2be1ca5_Data> _90517_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _90317_rang.get()._field_expr);;
	if ((_90517_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2b3c519_RangeIter> _91017_kind = jule::new_ptr<_1c2b3c519_RangeIter>(_1c2b3c519_RangeIter{._field_expr=_90517_d});;
	_1c2bd7d78_RangeChecker _91417_rc = _1c2bd7d78_RangeChecker{._field_sc=_self_, ._field_kind=_91017_kind, ._field_rang=_90317_rang, ._field_d=_90517_d};;
	jule::Bool _92013_ok = _1c2bd9770_check(&_91417_rc);;
	if ((!(_92013_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_91017_kind));;
	jule::Ptr<_1c2b6197d_ScopeChecker> _92717_ssc = _1c2b70d66_new_child_checker(_self_);;
	jule::Ptr<_1c2b4c1e9_Scope> _92817_scope = _1c2b6518a_get_child(_self_.ptr());;
	if ((_91017_kind.get()._field_key_a != nullptr)) {
		if (((!(_1c2b822b7_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c2b6492b_is_duplicated_ident(_self_.ptr(), 0LLU,_91017_kind.get()._field_key_a.get()._field_ident))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _91017_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_91017_kind.get()._field_key_a.get()._field_ident)}));
			_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_91017_kind.get()._field_key_a.get()._field_scope=_92817_scope;
		_92717_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92717_ssc.get()._field_table.get()._field_vars,1);_92717_ssc.get()._field_table.get()._field_vars.__push(_91017_kind.get()._field_key_a);;
	};
	if ((_91017_kind.get()._field_key_b != nullptr)) {
		if (((!(_1c2b822b7_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c2b6492b_is_duplicated_ident(_self_.ptr(), 0LLU,_91017_kind.get()._field_key_b.get()._field_ident))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _91017_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_91017_kind.get()._field_key_b.get()._field_ident)}));
			_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_91017_kind.get()._field_key_b.get()._field_scope=_92817_scope;
		_92717_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92717_ssc.get()._field_table.get()._field_vars,1);_92717_ssc.get()._field_table.get()._field_vars.__push(_91017_kind.get()._field_key_b);;
	};
	_1c2b675aa_check_iter_scope_ssc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_91017_kind)),_90241_it.get()._field_scope,_92817_scope,_92717_ssc);
	_91017_kind.get()._field_scope=_92817_scope;
}



inline void _1c2b688a8_check_iter(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150852_Iter> _95234_it) {
	if (_205104185_is_inf(_95234_it.ptr())) {
		_1c2b68138_check_inf_iter(_self_, _95234_it);
		return;;
	};
	{
		auto &_match_expr{ _95234_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_205150a3e_WhileKind>>()) {
			_case_begin_1c4b9bc3b:;
			{
				_1c2b683ad_check_while_iter(_self_, _95234_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205150c2b_RangeKind>>()) {
			_case_begin_1c4b9ca94:;
			{
				_1c2b68633_check_range_iter(_self_, _95234_it);
			}
		}
		else {
			_case_begin_1c4b9c39b:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c4b9c346:;
	};
}



inline jule::Bool _1c2b68bb6_check_valid_cont_label(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::U64 _96842_it) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _96917_scope = _self_;;
	_julec_label_iter:;
	if ((_96917_scope.get()._field_it == _96842_it)) {
		return true;
	};
	if ((_96917_scope.get()._field_parent != nullptr)) {
		_96917_scope=_96917_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1c2b68ee6_check_valid_break_label(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::U64 _98443_ptr) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _98517_scope = _self_;;
	_julec_label_iter:;
	if ((_98517_scope.get()._field_it == _98443_ptr)) {
		return true;
	};
	if ((_98517_scope.get()._field_cse != 0LLU)) {
		jule::U64 _99317_mtch = static_cast<jule::U64>(((_1c2b60edd_Case*)(_98517_scope.get()._field_cse))->_field_owner);;
		if ((_99317_mtch == _98443_ptr)) {
			return true;
		};
	};
	if ((_98517_scope.get()._field_parent != nullptr)) {
		_98517_scope=_98517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1c2b3c706_ContSt> _1c2b69315_check_cont_valid_scope(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205151105_ContSt> _100742_c) {
	if (_1c2b63672_is_deferred(_self_)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _100742_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_100742_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1c2b3c706_ContSt>();
	};
	jule::Ptr<_1c2b6197d_ScopeChecker> _101717_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_101717_scope.get()._field_it == 0LLU) && (_101717_scope.get()._field_parent != nullptr)) && (_101717_scope.get()._field_owner == nullptr))) {
			_case_begin_1c4ba5a69:;
			{
				_101717_scope=_101717_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101717_scope.get()._field_it != 0LLU)) {
			_case_begin_1c4ba5ae1:;
			{
				return jule::new_ptr<_1c2b3c706_ContSt>(_1c2b3c706_ContSt{._field_it=_101717_scope.get()._field_it});
			}
		}
		_match_end_1c4ba599d:;
	};
	_1c2b82905_push_err(_self_.get()._field_s.ptr(), _100742_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c2b6958a_check_cont(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205151105_ContSt> _103130_c) {
	jule::Ptr<_1c2b3c706_ContSt> _103217_cont = _1c2b69315_check_cont_valid_scope(_self_, _103130_c);;
	if ((_103217_cont == nullptr)) {
		return;;
	};
	if ((_103130_c.get()._field_label != nullptr)) {
		jule::Ptr<_1c2b615a4_ScopeLabel> _103821_label = _1c2b2a89d_find_label_parent(_103130_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_103821_label == nullptr)) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _103130_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_103130_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_103821_label.get()._field_used=true;
		if (((_103821_label.get()._field_pos + 1LL) >= _103821_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _103130_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_103130_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _105117_i = (_103821_label.get()._field_pos + 1LL);;
		if ((_105117_i >= _103821_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _103130_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _105525_st = _103821_label.get()._field_scope.get()._field_scope.get()._field_stmts[_105117_i];;
			{
				auto &_match_expr{ _105525_st };
				
				if (_match_expr.type_is<jule::Ptr<_1c2b0e486_InfIter>>()) {
					_case_begin_1c4bad269:;
					{
						_103217_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105525_st.operator jule::Ptr<_1c2b0e486_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c2b3c519_RangeIter>>()) {
					_case_begin_1c4bae9eb:;
					{
						_103217_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105525_st.operator jule::Ptr<_1c2b3c519_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c2b0e673_WhileIter>>()) {
					_case_begin_1c4baea62:;
					{
						_103217_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105525_st.operator jule::Ptr<_1c2b0e673_WhileIter>()));
					}
				}
				else {
					_case_begin_1c4bae8b9:;
					{
						_1c2b82905_push_err(_self_.get()._field_s.ptr(), _103130_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_103130_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1c4bae864:;
			};
		};
	};
	if ((_103217_cont.get()._field_it != 0LLU)) {
		if ((!(_1c2b68bb6_check_valid_cont_label(_self_, _103217_cont.get()._field_it)))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _103130_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_103130_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_103217_cont));;
}



inline void _1c2b69810_check_label(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514e422_LabelSt> _107835_l) {
	if ((_1c2b63e58_find_label(_self_.ptr(), _107835_l.get()._field_ident) != nullptr)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _107835_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_107835_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1c2b60130_Label> _108417_label = jule::new_ptr<_1c2b60130_Label>(_1c2b60130_Label{._field_ident=_107835_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_108417_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c2b615a4_ScopeLabel>>::make({jule::new_ptr<_1c2b615a4_ScopeLabel>(_1c2b615a4_ScopeLabel{._field_token=_107835_l.get()._field_token, ._field_label=_108417_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_})}));
}



inline void _1c2b69a85_push_goto(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514e60e_GotoSt> _109733_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1c2b6031c_GotoSt>(_1c2b6031c_GotoSt{._field_ident=_109733_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c2b61791_ScopeGoto>>::make({jule::new_ptr<_1c2b61791_ScopeGoto>(_1c2b61791_ScopeGoto{._field_gt=_109733_gt, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_})}));
}



inline void _1c2b69d0a_check_postfix(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514ebc5_AssignSt> _110937_a) {
	if ((_110937_a.get()._field_left.len() > 1LL)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _110937_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2050bba21_Expr> _111517_expr = _110937_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1c2be1ca5_Data> _111617_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _111517_expr);;
	if ((_111617_d == nullptr)) {
		return;;
	};
	_1c2b328c7_check_assign(_self_.get()._field_s,_111617_d,nullptr,_110937_a.get()._field_setter);
	if ((_1c2c23523_ptr(_111617_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c2c263_Ptr> _112421_ptr = _1c2c23523_ptr(_111617_d.get()._field_kind.ptr());;
		if (_1c2c2cc36_is_unsafe(_112421_ptr.ptr())) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _110937_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_110937_a.get()._field_setter.get()._field_kind),jule::Any(_1c2c1b4d8_to_str(_111617_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1c2c2304a_prim(_111617_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2b5ea69_is_num(_1c2c2304a_prim(_111617_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _110937_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_110937_a.get()._field_setter.get()._field_kind),jule::Any(_1c2c1b4d8_to_str(_111617_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1c2b60509_Postfix>(_1c2b60509_Postfix{._field_expr=jule::Any(_111617_d.get()._field_model), ._field_op=_110937_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1c2b6a118_is_new_assign_ident(_1c2b6197d_ScopeChecker* _self_, jule::Str _114238_ident) {
	if ((_20513b8c6_is_ignore_ident(_114238_ident) || _114238_ident.empty())) {
		return false;
	};
	return (_1c2bde973_def_by_ident((*_self_)._field_table.ptr(), _114238_ident,false) == nullptr);
}



inline jule::Bool _1c2b6a58b_check_structure_assign_op(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _115050_s, jule::Ptr<_20514ebc5_AssignSt>& _115070_a, jule::Ptr<_1c2be1ca5_Data>& _115089_r) {
	jule::Ptr<_1c1cc9762_FnIns> _115317_overload = nullptr;;
	{
		auto &_match_expr{ _115070_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1c4bc698b:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1c4bc6a02:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1c4bc6a68:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1c4bc578c:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1c4bc5803:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1c4bc5869:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1c4bc58d0:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1c4bc6c66:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1c4bc6ccc:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1c4bc6d43:;
			{
				_115317_overload=_115050_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1c4bc52d6:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _115070_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_115070_a.get()._field_setter.get()._field_kind),jule::Any(_1c1cb6e8b_to_str(_115050_s.ptr()))}));
				return false;
			}
		}
		_match_end_1c4bc5715:;
	};
	if ((_115317_overload == nullptr)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _115070_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_115070_a.get()._field_setter.get()._field_kind),jule::Any(_1c1cb6e8b_to_str(_115050_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1c1cc88c6_ParamIns> _118517_p = _115317_overload.get()._field_params[1LL];;
	return _1c2b87b5d_check_assign_type(_self_.get()._field_s, _118517_p.get()._field_decl.get()._field_reference,_118517_p.get()._field_kind,_115089_r,_115070_a.get()._field_setter);
}



inline void _1c2b6a822_check_single_assign(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514ebc5_AssignSt>& _118944_a) {
	jule::Ptr<_1c2be1ca5_Data> _119017_l = nullptr;;
	if ((!(_20513b8c6_is_ignore_ident(_118944_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_2050bba21_Expr> _119321_expr = _118944_a.get()._field_left[0LL].get()._field_expr;;
		_119017_l=_1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _119321_expr);
		if ((_119017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c2be3823_Eval> _120017_eval = nullptr;;
	if ((_119017_l != nullptr)) {
		_120017_eval=_1c2b87355_evalp(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0),_119017_l.get()._field_kind);
	} else {
		_120017_eval=_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0));
	};
	_120017_eval.get()._field_unsafety=_1c2b62c59_is_unsafe(_self_);
	jule::Ptr<_1c2be1ca5_Data> _120717_r = _1c2c0ced0_eval_expr(_120017_eval, _118944_a.get()._field_right);;
	if ((_120717_r == nullptr)) {
		return;;
	};
	if ((_119017_l == nullptr)) {
		if (_1c2c1c264_void(_120717_r.get()._field_kind.ptr())) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _118944_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120717_r));;
		return;;
	};
	if ((!(_1c2b328c7_check_assign(_self_.get()._field_s,_119017_l,_120717_r,_118944_a.get()._field_setter)))) {
		return;;
	};
	if ((_1c2c24975_tup(_120717_r.get()._field_kind.ptr()) != nullptr)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _118944_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c1cb8740_OperandExprModel> _122917_lm = jule::new_ptr<_1c1cb8740_OperandExprModel>(_1c1cb8740_OperandExprModel{._field_kind=_119017_l.get()._field_kind, ._field_model=jule::Any(_119017_l.get()._field_model)});;
	jule::Ptr<_1c1cb8740_OperandExprModel> _123317_rm = jule::new_ptr<_1c1cb8740_OperandExprModel>(_1c1cb8740_OperandExprModel{._field_kind=_120717_r.get()._field_kind, ._field_model=jule::Any(_120717_r.get()._field_model)});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1c2b606e6_Assign>(_1c2b606e6_Assign{._field_l=_122917_lm, ._field_r=_123317_rm, ._field_op=_118944_a.get()._field_setter})));;
	if ((_118944_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1c1cb6ad4_StructIns> _124021_strct = _1c2c24238_strct(_119017_l.get()._field_kind.ptr());;
		if ((_124021_strct != nullptr)) {
			_1c2b6a58b_check_structure_assign_op(_self_, _124021_strct,_118944_a,_120717_r);
			return;;
		};
		_118944_a.get()._field_setter.get()._field_kind=_118944_a.get()._field_setter.get()._field_kind.slice(0LL,(_118944_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1c2c101e1_BinaryEval _124721_solver = static__1c2c10ad7_new(_120017_eval,_118944_a.get()._field_setter);;
		_120717_r=_1c2c1556a_solve_explicit(&_124721_solver, _119017_l,_120717_r);
		if ((_120717_r == nullptr)) {
			return;;
		};
		_118944_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1c2bce27b_AssignTypeChecker _125617_checker = _1c2bce27b_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_119017_l.get()._field_kind, ._field_d=_120717_r, ._field_error_token=_118944_a.get()._field_setter};;
	if (_1c2bd0403_check(&_125617_checker)) {
		_123317_rm.get()._field_model=jule::Any(_120717_r.get()._field_model);
		_122917_lm.get()._field_model=jule::Any(_119017_l.get()._field_model);
	};
}



inline void _1c2b6ad61___process_end_part_of_multi_assign(_1c2b6197d_ScopeChecker* _self_, jule::Ptr<_1c2b608d3_MultiAssign> _126857_st, jule::Ptr<_20514ebc5_AssignSt> _126913_a, jule::Ptr<_20514e9d8_AssignLeft> _126931_lexpr, jule::Ptr<_1c2be1ca5_Data> _126955_l, jule::Ptr<_1c2be1ca5_Data> _126969_r) {
	if (_20513b8c6_is_ignore_ident(_126931_lexpr.get()._field_ident)) {
		if (_1c2c1c264_void(_126969_r.get()._field_kind.ptr())) {
			_1c2b82905_push_err((*_self_)._field_s.ptr(), _126913_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_126857_st.get()._field_l = jule::alloc_for_append(_126857_st.get()._field_l,1);_126857_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_126913_a.get()._field_declarative && _1c2b6a118_is_new_assign_ident(&(*_self_), _126931_lexpr.get()._field_ident))) {
		if (_1c2b6492b_is_duplicated_ident(&(*_self_), 0LLU,_126931_lexpr.get()._field_ident)) {
			_1c2b82905_push_err((*_self_)._field_s.ptr(), _126931_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_126931_lexpr.get()._field_ident)}));
			_1c2b82c24_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1c2b63199_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1c2b9a4de_Var> _128721_v = jule::new_ptr<_1c2b9a4de_Var>(_1c2b9a4de_Var{._field_ident=_126931_lexpr.get()._field_ident, ._field_token=_126931_lexpr.get()._field_token, ._field_mutable=_126931_lexpr.get()._field_mutable, ._field_reference=_126931_lexpr.get()._field_reference, ._field_scope=(*_self_)._field_scope, ._field_value=jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_expr=_126913_a.get()._field_right, ._field_data=_126969_r})});;
		_1c2b93141_check_var((*_self_)._field_s, _128721_v);
		_126857_st.get()._field_l = jule::alloc_for_append(_126857_st.get()._field_l,1);_126857_st.get()._field_l.__push(jule::Any(_128721_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128721_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128721_v));;
		return;;
	};
	if ((_126931_lexpr.get()._field_mutable || _126931_lexpr.get()._field_reference)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _126931_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_126931_lexpr.get()._field_ident)}));
		_1c2b82c24_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1c2b328c7_check_assign((*_self_)._field_s,_126955_l,_126969_r,_126913_a.get()._field_setter)))) {
		return;;
	};
	;
	_1c2b89962_check_validity_for_init_expr((*_self_)._field_s, _126955_l.get()._field_mutable,false,_126955_l.get()._field_kind,_126969_r,_126913_a.get()._field_setter);
	_1c2bce27b_AssignTypeChecker _132217_checker = _1c2bce27b_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_126955_l.get()._field_kind, ._field_d=_126969_r, ._field_error_token=_126913_a.get()._field_setter};;
	_1c2bd0403_check(&_132217_checker);
	_126857_st.get()._field_l = jule::alloc_for_append(_126857_st.get()._field_l,1);_126857_st.get()._field_l.__push(jule::Any(_126955_l.get()._field_model));;
}



inline void _1c2b6b0d6_check_ret_multi_assign(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514ebc5_AssignSt>& _133347_a) {
	jule::Ptr<_1c2be1ca5_Data> _133417_rd = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _133347_a.get()._field_right);;
	if ((_133417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _133917_r = _1c2b2e484_get_datas_from_tuple_data(_133417_rd);;
	{
		
		if ((_133347_a.get()._field_left.len() > _133917_r.len())) {
			_case_begin_1c4bebe78:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _133347_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_133347_a.get()._field_left.len() < _133917_r.len())) {
			_case_begin_1c4bec000:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _133347_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c4bebdbd:;
	};
	jule::Ptr<_1c2b608d3_MultiAssign> _135017_st = jule::new_ptr<_1c2b608d3_MultiAssign>(_1c2b608d3_MultiAssign{._field_r=jule::Any(_133417_rd.get()._field_model)});;
	if ((_1c2c24975_tup(_133417_rd.get()._field_kind.ptr()) == nullptr)) {
		_135017_st.get()._field_r=jule::Any(jule::new_ptr<_1c1cbe79b_TupleExprModel>(_1c1cbe79b_TupleExprModel{._field_datas=_133917_r}));
	};
	{
		auto &expr = _133347_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1c4c00333:;
		if (it != expr.end()) {
			jule::I64 _135813_i = it - expr.begin();
			{
				jule::Ptr<_20514e9d8_AssignLeft> _135921_lexpr = _133347_a.get()._field_left[_135813_i];;
				jule::Ptr<_1c2be1ca5_Data> _136021_l = nullptr;;
				if (((!(_20513b8c6_is_ignore_ident(_135921_lexpr.get()._field_ident))) && ((!(_133347_a.get()._field_declarative)) || (!(_1c2b6a118_is_new_assign_ident(_self_.ptr(), _135921_lexpr.get()._field_ident)))))) {
					_136021_l=_1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _135921_lexpr.get()._field_expr);
					if ((_136021_l == nullptr)) {
						goto _iter_next_1c4c00333;
					};
				};
				_1c2b6ad61___process_end_part_of_multi_assign(_self_.ptr(), _135017_st,_133347_a,_135921_lexpr,_136021_l,_133917_r[_135813_i]);
			}
			_iter_next_1c4c00333:;
			++it;
			_135813_i++;
			goto _iter_begin_1c4c00333;
		}
		_iter_end_1c4c00333:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_135017_st));;
}



inline void _1c2b6b35b_check_multi_assign(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514ebc5_AssignSt>& _137643_a) {
	{
		auto &_match_expr{ _137643_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20514ce48_FnCallExpr>>()) {
			_case_begin_1c4c04337:;
			{
				_1c2b6b0d6_check_ret_multi_assign(_self_, _137643_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514bc05_UnsafeExpr>>()) {
			_case_begin_1c4c043ae:;
			{
				{
					auto &_match_expr{ _137643_a.get()._field_right.get()._field_kind.operator jule::Ptr<_20514bc05_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_20514ce48_FnCallExpr>>()) {
						_case_begin_1c4c05745:;
						{
							_1c2b6b0d6_check_ret_multi_assign(_self_, _137643_a);
							return;;
						}
					}
					_match_end_1c4c056ce:;
				};
			}
		}
		_match_end_1c4c0428d:;
	};
	jule::Slice<jule::Any> _138917_right = _1c2b318a4_get_expr_models(_137643_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_137643_a.get()._field_left.len() > _138917_right.len())) {
			_case_begin_1c4c06449:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _137643_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_137643_a.get()._field_left.len() < _138917_right.len())) {
			_case_begin_1c4c064c1:;
			{
				_1c2b82905_push_err(_self_.get()._field_s.ptr(), _137643_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c4c0636c:;
	};
	jule::Ptr<_1c1cbe79b_TupleExprModel> _140017_right_tuple = jule::new_ptr<_1c1cbe79b_TupleExprModel>();;
	jule::Ptr<_1c2b608d3_MultiAssign> _140217_st = jule::new_ptr<_1c2b608d3_MultiAssign>(_1c2b608d3_MultiAssign{._field_r=jule::Any(_140017_right_tuple)});;
	{
		auto &expr = _137643_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1c4c08db9:;
		if (it != expr.end()) {
			jule::I64 _140613_i = it - expr.begin();
			{
				jule::Ptr<_20514e9d8_AssignLeft> _140721_lexpr = _137643_a.get()._field_left[_140613_i];;
				jule::Ptr<_1c2be1ca5_Data> _140821_l = nullptr;;
				if (((!(_20513b8c6_is_ignore_ident(_140721_lexpr.get()._field_ident))) && ((!(_137643_a.get()._field_declarative)) || (!(_1c2b6a118_is_new_assign_ident(_self_.ptr(), _140721_lexpr.get()._field_ident)))))) {
					_140821_l=_1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _140721_lexpr.get()._field_expr);
					if ((_140821_l == nullptr)) {
						goto _iter_next_1c4c08db9;
					};
				};
				jule::Ptr<_2050bba21_Expr> _141821_expr = jule::new_ptr<_2050bba21_Expr>(_2050bba21_Expr{._field_kind=jule::Any(_138917_right[_140613_i]), ._field_token=_137643_a.get()._field_right.get()._field_token});;
				jule::Ptr<_1c2be3823_Eval> _142221_eval = nullptr;;
				if ((_140821_l != nullptr)) {
					_142221_eval=_1c2b87355_evalp(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0),_140821_l.get()._field_kind);
				} else {
					_142221_eval=_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0));
				};
				jule::Ptr<_1c2be1ca5_Data> _142821_r = _1c2c0ced0_eval_expr(_142221_eval, _141821_expr);;
				if ((_142821_r == nullptr)) {
					goto _iter_next_1c4c08db9;
				};
				_140017_right_tuple.get()._field_datas = jule::alloc_for_append(_140017_right_tuple.get()._field_datas,1);_140017_right_tuple.get()._field_datas.__push(_142821_r);;
				_1c2b6ad61___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_137643_a,_140721_lexpr,_140821_l,_142821_r);
			}
			_iter_next_1c4c08db9:;
			++it;
			_140613_i++;
			goto _iter_begin_1c4c08db9;
		}
		_iter_end_1c4c08db9:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_140217_st));;
}



inline void _1c2b6b5d1_check_assign_st(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514ebc5_AssignSt> _144139_a) {
	{
		
		if (_20513d8d9_is_postfix_op(_144139_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1c4c10a91:;
			{
				_1c2b69d0a_check_postfix(_self_, _144139_a);
			}
		}
		else if (((_144139_a.get()._field_left.len() == 1LL) && (!(_144139_a.get()._field_declarative)))) {
			_case_begin_1c4c10783:;
			{
				_1c2b6a822_check_single_assign(_self_, _144139_a);
			}
		}
		else {
			_case_begin_1c4c1071c:;
			{
				_1c2b6b35b_check_multi_assign(_self_, _144139_a);
			}
		}
		_match_end_1c4c10651:;
	};
}



inline jule::Ptr<_1c2b4c1e9_Scope> _1c2b6b988_check_case_scope(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_1c2b60edd_Case>& _145237_c, jule::Ptr<_20514edb2_ScopeTree>& _145252_tree) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _145317_ssc = _1c2b70d66_new_child_checker(_self_);;
	_145317_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_145237_c));
	return _1c2b6590a_check_child_sc(_self_, _145252_tree,_145317_ssc);
}



inline jule::Ptr<_1c2b60edd_Case> _1c2b6be83_check_case(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_1c2b60ac0_Match> _145834_m, jule::I64 _145845_i, jule::Ptr<_205151a95_Case> _145857_c, jule::Ptr<_1c2be1ca5_Data> _145887_expr) {
	jule::Ptr<_1c2b60edd_Case> _145917__case = _145834_m.get()._field_cases[_145845_i];;
	_145917__case.get()._field_exprs=jule::Slice<jule::Ptr<_1c2be1ca5_Data>>::alloc(0LL,_145857_c.get()._field_exprs.len());
	jule::Bool _146117_generic_matched = false;;
	jule::Ptr<_1c2be3823_Eval> _146217_eval = _1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0));;
	{
		auto &expr = _145857_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c4c16998:;
		if (it != expr.end()) {
			jule::Ptr<_2050bba21_Expr> _146321_e = *it;
			{
				jule::Ptr<_1c2be1ca5_Data> _146421_d = _1c2c0c8b4_eval_expr_kind(_146217_eval, jule::Any(_146321_e.get()._field_kind));;
				if ((_146421_d == nullptr)) {
					goto _iter_next_1c4c16998;
				};
				if (_145834_m.get()._field_type_match) {
					_145917__case.get()._field_exprs = jule::alloc_for_append(_145917__case.get()._field_exprs,1);_145917__case.get()._field_exprs.__push(_146421_d);;
					if ((_1c2b2d84b_count_match_type(_145834_m,_146421_d.get()._field_kind) > 1LL)) {
						_1c2b82905_push_err(_self_.get()._field_s.ptr(), _146321_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_146421_d.get()._field_kind.ptr()))}));
					};
					if (_145887_expr.get()._field_kind.get()._field_generic) {
						_146117_generic_matched=(_146117_generic_matched || _1c2c1b7e6_equals(_145887_expr.get()._field_kind, _146421_d.get()._field_kind));
					} else {
						jule::Ptr<_1c2a137db_Trait> _147625_trt = _1c2c2449c_trt(_145887_expr.get()._field_kind.ptr());;
						if ((_147625_trt != nullptr)) {
							_1c2b880d1_check_type_compatibility(_self_.get()._field_s, _145887_expr.get()._field_kind,_146421_d.get()._field_kind,_146321_e.get()._field_token);
						};
					};
					goto _iter_next_1c4c16998;
				};
				if (_146421_d.get()._field_decl) {
					_1c2b82905_push_err(_self_.get()._field_s.ptr(), _146321_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1c4c16998;
				};
				_145917__case.get()._field_exprs = jule::alloc_for_append(_145917__case.get()._field_exprs,1);_145917__case.get()._field_exprs.__push(_146421_d);;
				_1c2bce27b_AssignTypeChecker _149321_checker = _1c2bce27b_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_145887_expr.get()._field_kind, ._field_d=_146421_d, ._field_error_token=_146321_e.get()._field_token};;
				_1c2bd0403_check(&_149321_checker);
			}
			_iter_next_1c4c16998:;
			++it;
			goto _iter_begin_1c4c16998;
		}
		_iter_end_1c4c16998:;
	};
	if ((((!(_145834_m.get()._field_type_match)) || (!(_145887_expr.get()._field_kind.get()._field_generic))) || _146117_generic_matched)) {
		_145917__case.get()._field_scope=_1c2b6b988_check_case_scope(_self_, _145917__case,_145857_c.get()._field_scope);
	};
	return _145917__case;
}



inline void _1c2b6c34b_check_cases(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205151c82_MatchCase>& _150736_m, jule::Ptr<_1c2b60ac0_Match> _150755_rm, jule::Ptr<_1c2be1ca5_Data> _150771_expr) {
	_150755_rm.get()._field_cases=jule::Slice<jule::Ptr<_1c2b60edd_Case>>::alloc(0LL,_150736_m.get()._field_cases.len());
	{
		auto &expr = _150736_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c4c214db:;
		if (it != expr.end()) {
			jule::I64 _150913_i = it - expr.begin();
			{
				jule::Ptr<_1c2b60edd_Case> _151021__case = jule::new_ptr<_1c2b60edd_Case>(_1c2b60edd_Case{._field_owner=_150755_rm});;
				if ((_150913_i > 0LL)) {
					_150755_rm.get()._field_cases[(_150913_i - 1LL)].get()._field_next=_151021__case;
				};
				_150755_rm.get()._field_cases = jule::alloc_for_append(_150755_rm.get()._field_cases,1);_150755_rm.get()._field_cases.__push(_151021__case);;
			}
			_iter_next_1c4c214db:;
			++it;
			_150913_i++;
			goto _iter_begin_1c4c214db;
		}
		_iter_end_1c4c214db:;
	};
	if (((_150755_rm.get()._field_default != nullptr) && (_150736_m.get()._field_cases.len() > 0LL))) {
		_150755_rm.get()._field_cases[(_150755_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150755_rm.get()._field_default;
	};
	{
		auto &expr = _150736_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c4c24049:;
		if (it != expr.end()) {
			jule::I64 _152314_i = it - expr.begin();
			jule::Ptr<_205151a95_Case> _152321_c = *it;
			{
				_1c2b6be83_check_case(_self_, _150755_rm,_152314_i,_152321_c,_150771_expr);
			}
			_iter_next_1c4c24049:;
			++it;
			_152314_i++;
			goto _iter_begin_1c4c24049;
		}
		_iter_end_1c4c24049:;
	};
}



inline jule::Ptr<_1c2b60edd_Case> _1c2b6c703_check_default(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_1c2b60ac0_Match> _152837_m, jule::Ptr<_2051514ce_Else> _152852_d) {
	jule::Ptr<_1c2b60edd_Case> _152917_def = jule::new_ptr<_1c2b60edd_Case>(_1c2b60edd_Case{._field_owner=_152837_m});;
	_152917_def.get()._field_scope=_1c2b6b988_check_case_scope(_self_, _152917_def,_152852_d.get()._field_scope);
	return _152917_def;
}



inline void _1c2b6c978_check_comptime_panic(_1c2b6197d_ScopeChecker* _self_, jule::Ptr<_1c2b4c1e9_Scope>& _153640_s) {
	if ((_153640_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _154113_stmt = _153640_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _154113_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c4c27a97:;
			{
				jule::Ptr<_1c2be1ca5_Data> _154417_d = _154113_stmt.operator jule::Ptr<_1c2be1ca5_Data>();;
				{
					auto &_match_expr{ _154417_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>>()) {
						_case_begin_1c4c28856:;
						{
							jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel> _154721_m = _154417_d.get()._field_model.operator jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _154721_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
									_case_begin_1c4c29637:;
									{
										jule::Ptr<_1c2abb9a4_Const> _155025_c = _154721_m.get()._field_expr.operator jule::Ptr<_1c2abb9a4_Const>();;
										if (_1c2ac0810_is_str(_155025_c.ptr())) {
											_1c2b82905_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1c2abd467_read_str(_155025_c.ptr()))}));
										};
									}
								}
								_match_end_1c4c2959e:;
							};
						}
					}
					_match_end_1c4c28768:;
				};
			}
		}
		_match_end_1c4c27a42:;
	};
}



inline void _1c2b6cc97_push_type_match(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_1c2b60ac0_Match> _155939_tm, jule::Ptr<_205151c82_MatchCase>& _155956_m) {
	if (_155939_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155939_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1c4c2b804:;
			if (it != expr.end()) {
				jule::Ptr<_1c2b60edd_Case> _156325_c = *it;
				{
					if ((_156325_c.get()._field_scope != nullptr)) {
						_1c2b6c978_check_comptime_panic(_self_.ptr(), _156325_c.get()._field_scope);
						_155939_tm.get()._field_default=_156325_c;
						_155939_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1c4c2b804:;
				++it;
				goto _iter_begin_1c4c2b804;
			}
			_iter_end_1c4c2b804:;
		};
		if ((_155956_m.get()._field_default != nullptr)) {
			_155939_tm.get()._field_cases=nullptr;
			_155939_tm.get()._field_default=_1c2b6c703_check_default(_self_, _155939_tm,_155956_m.get()._field_default);
			if ((_155939_tm.get()._field_default != nullptr)) {
				_1c2b6c978_check_comptime_panic(_self_.ptr(), _155939_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155939_tm));;
}



inline void _1c2b6d01c_check_type_match(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205151c82_MatchCase>& _158341_m) {
	jule::Ptr<_1c2be1ca5_Data> _158417_d = _1c2c0cbc2_eval(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _158341_m.get()._field_expr);;
	if ((_158417_d == nullptr)) {
		return;;
	};
	if (((!(_158417_d.get()._field_kind.get()._field_generic)) && (!((((_1c2c2304a_prim(_158417_d.get()._field_kind.ptr()) != nullptr) && _1c2c28913_is_any(_1c2c2304a_prim(_158417_d.get()._field_kind.ptr()).ptr())) || (_1c2c2449c_trt(_158417_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _158341_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2b60ac0_Match> _159517_tm = jule::new_ptr<_1c2b60ac0_Match>(_1c2b60ac0_Match{._field_type_match=true, ._field_expr=_158417_d});;
	if (((!(_159517_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_158341_m.get()._field_default != nullptr))) {
		_159517_tm.get()._field_default=_1c2b6c703_check_default(_self_, _159517_tm,_158341_m.get()._field_default);
	};
	_1c2b6c34b_check_cases(_self_, _158341_m,_159517_tm,_158417_d);
	_1c2b6cc97_push_type_match(_self_, _159517_tm,_158341_m);
}



inline void _1c2b6d292_check_common_match(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205151c82_MatchCase>& _160843_m) {
	jule::Ptr<_1c2be1ca5_Data> _160917_d = nullptr;;
	if ((_160843_m.get()._field_expr == nullptr)) {
		_160917_d=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=static__1c2abbde4_new_bool(true), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
		_160917_d.get()._field_model=jule::Any(_160917_d.get()._field_constant);
	} else {
		_160917_d=_1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _160843_m.get()._field_expr);
		if ((_160917_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c2b60ac0_Match> _162317_mc = jule::new_ptr<_1c2b60ac0_Match>(_1c2b60ac0_Match{._field_expr=_160917_d});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_162317_mc));;
	if ((_160843_m.get()._field_default != nullptr)) {
		_162317_mc.get()._field_default=_1c2b6c703_check_default(_self_, _162317_mc,_160843_m.get()._field_default);
	};
	_1c2b6c34b_check_cases(_self_, _160843_m,_162317_mc,_160917_d);
}



inline void _1c2b6d517_check_match(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205151c82_MatchCase> _163535_m) {
	if (_163535_m.get()._field_type_match) {
		_1c2b6d01c_check_type_match(_self_, _163535_m);
		return;;
	};
	_1c2b6d292_check_common_match(_self_, _163535_m);
}



inline void _1c2b6d78c_check_fall(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514e7eb_FallSt> _164330_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1c2b63672_is_deferred(_self_))) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _164330_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1c2b60edd_Case* _165117__case = ((_1c2b60edd_Case*)(_self_.get()._field_cse));;
	if ((_165117__case->_field_next == nullptr)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _164330_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1c2b611ca_FallSt>(_1c2b611ca_FallSt{._field_dest_case=static_cast<jule::U64>(static_cast<jule::U64>(_165117__case->_field_next))})));;
}



inline jule::Ptr<_1c2b5ee43_BreakSt> _1c2b6da9a_check_break_with_label(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150e18_BreakSt> _166342_b) {
	jule::Ptr<_1c2b5ee43_BreakSt> _166417_brk = _1c2b6dda8_check_plain_break(_self_, _166342_b);;
	if ((_166417_brk == nullptr)) {
		return nullptr;
	};
	_166417_brk.get()._field_it=0LLU;
	_166417_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1c2b615a4_ScopeLabel> _167417_label = _1c2b2a89d_find_label_parent(_166342_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_167417_label == nullptr)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_167417_label.get()._field_used=true;
	if (((_167417_label.get()._field_pos + 1LL) >= _167417_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _168713_i = (_167417_label.get()._field_pos + 1LL);;
	if ((_168713_i >= _167417_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _169121_st = _167417_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168713_i];;
		{
			auto &_match_expr{ _169121_st };
			
			if (_match_expr.type_is<jule::Ptr<_1c2b0e486_InfIter>>()) {
				_case_begin_1c4c48a1e:;
				{
					_166417_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1c2b0e486_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2b3c519_RangeIter>>()) {
				_case_begin_1c4c492c2:;
				{
					_166417_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1c2b3c519_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2b0e673_WhileIter>>()) {
				_case_begin_1c4c49338:;
				{
					_166417_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1c2b0e673_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2b60ac0_Match>>()) {
				_case_begin_1c4c4939e:;
				{
					_166417_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1c2b60ac0_Match>()));
				}
			}
			else {
				_case_begin_1c4c49190:;
				{
					_1c2b82905_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1c4c4913a:;
		};
	};
	if ((_166417_brk.get()._field_it != 0LLU)) {
		if ((!(_1c2b68ee6_check_valid_break_label(_self_, _166417_brk.get()._field_it)))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_166417_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1c2b68ee6_check_valid_break_label(_self_, _166417_brk.get()._field_mtch)))) {
			_1c2b82905_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _166417_brk;
}



inline jule::Ptr<_1c2b5ee43_BreakSt> _1c2b6dda8_check_plain_break(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150e18_BreakSt> _172137_b) {
	if (_1c2b63672_is_deferred(_self_)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _172137_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2b6197d_ScopeChecker> _172717_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_172717_scope.get()._field_it == 0LLU) && (_172717_scope.get()._field_cse == 0LLU)) && (_172717_scope.get()._field_parent != nullptr)) && (_172717_scope.get()._field_owner == nullptr))) {
			_case_begin_1c4c509b0:;
			{
				_172717_scope=_172717_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172717_scope.get()._field_it != 0LLU)) {
			_case_begin_1c4c50a37:;
			{
				return jule::new_ptr<_1c2b5ee43_BreakSt>(_1c2b5ee43_BreakSt{._field_it=_172717_scope.get()._field_it});
			}
		}
		else if ((_172717_scope.get()._field_cse != 0LLU)) {
			_case_begin_1c4c50aae:;
			{
				return jule::new_ptr<_1c2b5ee43_BreakSt>(_1c2b5ee43_BreakSt{._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(((_1c2b60edd_Case*)(_172717_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1c4c508d3:;
	};
	_1c2b82905_push_err(_self_.get()._field_s.ptr(), _172137_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c2b6e12d_check_break(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150e18_BreakSt> _174331_b) {
	if ((_174331_b.get()._field_label != nullptr)) {
		jule::Ptr<_1c2b5ee43_BreakSt> _174521_brk = _1c2b6da9a_check_break_with_label(_self_, _174331_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174521_brk));;
		return;;
	};
	jule::Ptr<_1c2b5ee43_BreakSt> _175017_brk = _1c2b6dda8_check_plain_break(_self_, _174331_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175017_brk));;
}



inline void _1c2b6e3a3_check_ret(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_205150665_RetSt> _175433_r) {
	if (_1c2b63672_is_deferred(_self_)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _175433_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2b613b7_RetSt> _175917_rt = jule::new_ptr<_1c2b613b7_RetSt>(_1c2b613b7_RetSt{._field_func=_1c2b638d6_get_root(_self_).get()._field_owner});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175917_rt));;
	jule::Ptr<_1c2bda012_RetTypeChecker> _176417_rtc = jule::new_ptr<_1c2bda012_RetTypeChecker>(_1c2bda012_RetTypeChecker{._field_sc=_self_, ._field_f=_175917_rt.get()._field_func, ._field_error_token=_175433_r.get()._field_token});;
	jule::Bool _176913_ok = _1c2bdae03_check(_176417_rtc.ptr(), _175433_r.get()._field_expr);;
	if ((!(_176913_ok))) {
		return;;
	};
	if (((_175433_r.get()._field_expr == nullptr) && (_176417_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_175917_rt.get()._field_vars=_176417_rtc.get()._field_vars;
	if ((_175433_r.get()._field_expr != nullptr)) {
		_175917_rt.get()._field_expr=jule::Any(_176417_rtc.get()._field_model);
	};
}



inline void _1c2b6e628_check_use_expr(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514b40d_UseExpr> _178534_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _178534_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1c2b63672_is_deferred(_self_)) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _178534_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1c2b82905_push_err(_self_.get()._field_s.ptr(), _178534_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1c2b6e89d_check_node(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Any& _180135_node) {
	{
		auto &_match_expr{ _180135_node };
		
		if (_match_expr.type_is<jule::Ptr<_20514edb2_ScopeTree>>()) {
			_case_begin_1c4c60618:;
			{
				_1c2b65e8d_check_anon_scope(_self_, _180135_node.operator jule::Ptr<_20514edb2_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205150478_VarDecl>>()) {
			_case_begin_1c4c60937:;
			{
				_1c2b64ba1_check_var_decl(_self_, _180135_node.operator jule::Ptr<_205150478_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2051518a8_TypeAliasDecl>>()) {
			_case_begin_1c4c6074a:;
			{
				_1c2b64e26_check_type_alias_decl(_self_, _180135_node.operator jule::Ptr<_2051518a8_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2050bba21_Expr>>()) {
			_case_begin_1c4c601c8:;
			{
				_1c2b66532_check_expr(_self_, _180135_node.operator jule::Ptr<_2050bba21_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514bde2_CoExpr>>()) {
			_case_begin_1c4c6023e:;
			{
				_1c2b667a7_check_co_expr(_self_, _180135_node.operator jule::Ptr<_20514bde2_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2051516bb_Conditional>>()) {
			_case_begin_1c4c60ad0:;
			{
				_1c2b67148_check_conditional(_self_, _180135_node.operator jule::Ptr<_2051516bb_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205150852_Iter>>()) {
			_case_begin_1c4c60b46:;
			{
				_1c2b688a8_check_iter(_self_, _180135_node.operator jule::Ptr<_205150852_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205151105_ContSt>>()) {
			_case_begin_1c4c60bac:;
			{
				_1c2b6958a_check_cont(_self_, _180135_node.operator jule::Ptr<_205151105_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514e422_LabelSt>>()) {
			_case_begin_1c4c60c23:;
			{
				_1c2b69810_check_label(_self_, _180135_node.operator jule::Ptr<_20514e422_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514e60e_GotoSt>>()) {
			_case_begin_1c4c60c89:;
			{
				_1c2b69a85_push_goto(_self_, _180135_node.operator jule::Ptr<_20514e60e_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514ebc5_AssignSt>>()) {
			_case_begin_1c4c60d00:;
			{
				_1c2b6b5d1_check_assign_st(_self_, _180135_node.operator jule::Ptr<_20514ebc5_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205151c82_MatchCase>>()) {
			_case_begin_1c4c60d66:;
			{
				_1c2b6d517_check_match(_self_, _180135_node.operator jule::Ptr<_205151c82_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514e7eb_FallSt>>()) {
			_case_begin_1c4c60dcc:;
			{
				_1c2b6d78c_check_fall(_self_, _180135_node.operator jule::Ptr<_20514e7eb_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205150e18_BreakSt>>()) {
			_case_begin_1c4c60e54:;
			{
				_1c2b6e12d_check_break(_self_, _180135_node.operator jule::Ptr<_205150e18_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_205150665_RetSt>>()) {
			_case_begin_1c4c60ecb:;
			{
				_1c2b6e3a3_check_ret(_self_, _180135_node.operator jule::Ptr<_205150665_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514b40d_UseExpr>>()) {
			_case_begin_1c4c61053:;
			{
				_1c2b6e628_check_use_expr(_self_, _180135_node.operator jule::Ptr<_20514b40d_UseExpr>());
			}
		}
		else {
			_case_begin_1c4c60382:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c4c6032c:;
	};
}



inline void _1c2b6ea79_check_result(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	_204ec155d_Node _184117_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _184117_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_20514b40d_UseExpr>>()) {
			_case_begin_1c4c6b091:;
			{
				jule::Ptr<_20514b40d_UseExpr> _184421_ue = _184117_stmt._field_data.operator jule::Ptr<_20514b40d_UseExpr>();;
				jule::Ptr<_1c2be1ca5_Data> _184521_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _184421_ue.get()._field_expr);;
				if ((_184521_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_184521_d));;
				jule::Ptr<_1c2bda012_RetTypeChecker> _185021_rtc = jule::new_ptr<_1c2bda012_RetTypeChecker>(_1c2bda012_RetTypeChecker{._field_sc=_self_, ._field_error_token=_184421_ue.get()._field_expr.get()._field_token, ._field_types=_1c1cca279_types(_self_.get()._field_result.ptr())});;
				_1c2bdae03_check(_185021_rtc.ptr(), _184421_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2050bba21_Expr>>()) {
			_case_begin_1c4c6b107:;
			{
				jule::Ptr<_2050bba21_Expr> _185721_expr = _184117_stmt._field_data.operator jule::Ptr<_2050bba21_Expr>();;
				jule::Ptr<_1c2be1ca5_Data> _185821_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_.get()._field_s, jule::Trait<_1c2c3934c_Lookup>(_self_, 0)), _185721_expr);;
				if ((_185821_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _185821_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>()) {
						_case_begin_1c4c70392:;
						{
							jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel> _186425_m = _185821_d.get()._field_model.operator jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>();;
							_1c2b662ac_process_error_call(_self_, _186425_m,_185721_expr.get()._field_token);
						}
					}
					else {
						_case_begin_1c4c7056d:;
						{
							return;;
						}
					}
					_match_end_1c4c70518:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514e60e_GotoSt>>() || _match_expr.type_is<jule::Ptr<_205150e18_BreakSt>>() || _match_expr.type_is<jule::Ptr<_205151105_ContSt>>() || _match_expr.type_is<jule::Ptr<_205150665_RetSt>>()) {
			_case_begin_1c4c6a722:;
			{
				_1c2b6e89d_check_node(_self_, _184117_stmt._field_data);
			}
		}
		else {
			_case_begin_1c4c6a6ab:;
			{
				_1c2b6e89d_check_node(_self_, _184117_stmt._field_data);
				return;;
			}
		}
		_match_end_1c4c6a656:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1c2b6ec55_check_tree(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_tree.get()._field_stmts.len()); (_self_.get()._field_i)++) {
		{
			_204ec155d_Node _188621_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1c2b6e89d_check_node(_self_, _188621_stmt._field_data);
			if (_1c2b6340d_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c4c7265d:;
	}
	_iter_end_1c4c7265d:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1c2b6ea79_check_result(_self_);
	};
}



inline void _1c2b70074_check_goto(_1c2b6197d_ScopeChecker* _self_, jule::Ptr<_1c2b61791_ScopeGoto>& _189734_gt, jule::Ptr<_1c2b615a4_ScopeLabel>& _189755_label) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _189817_gtsc = _189734_gt.get()._field_scope;;
	while (((_189817_gtsc.get()._field_child_index - 1LL) > _189755_label.get()._field_scope.get()._field_child_index)) {
		{
			_189817_gtsc=_189817_gtsc.get()._field_parent;
		}
	_iter_next_1c4c75bd3:;
	}
	_iter_end_1c4c75bd3:;;
	jule::I64 _190317_n = 0LL;;
	if ((_189817_gtsc.get()._field_scope == _189755_label.get()._field_scope.get()._field_scope)) {
		if ((_189734_gt.get()._field_pos > _189755_label.get()._field_pos)) {
			return;;
		};
		_190317_n=_189734_gt.get()._field_pos;
	};
	jule::I64 _191617_i = (_189755_label.get()._field_pos - 1LL);;
	if ((_190317_n == 0LL)) {
		{
			auto &expr = _189755_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1c4c78378:;
			if (it != expr.end()) {
				jule::I64 _191917_j = it - expr.begin();
				jule::Any _191920_stmt = *it;
				{
					if (_1c2b2d0ba_stmt_is_goto_scope(_191920_stmt,_189817_gtsc.get()._field_scope)) {
						_190317_n=_191917_j;
						goto _iter_end_1c4c78378;
					};
				}
				_iter_next_1c4c78378:;
				++it;
				_191917_j++;
				goto _iter_begin_1c4c78378;
			}
			_iter_end_1c4c78378:;
		};
	};
	for (; (_191617_i >= _190317_n); (_191617_i)--) {
		{
			jule::Any _192921_stmt = _189755_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191617_i];;
			if (_1c2b3accb_st_is_def(_192921_stmt)) {
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _189734_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_189734_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1c4c77ce5:;
	}
	_iter_end_1c4c77ce5:;;
}



inline void _1c2b70250_check_gotos(_1c2b6197d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1c4c80eda:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b61791_ScopeGoto> _193821_gt = *it;
			{
				jule::Ptr<_1c2b615a4_ScopeLabel> _193921_label = _1c2b64574_find_label_all(&(*_self_), _193821_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_193921_label == nullptr)) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _193821_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_193821_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1c4c80eda;
				};
				_193921_label.get()._field_used=true;
				_1c2b70074_check_goto(&(*_self_), _193821_gt,_193921_label);
			}
			_iter_next_1c4c80eda:;
			++it;
			goto _iter_begin_1c4c80eda;
		}
		_iter_end_1c4c80eda:;
	};
}



inline void _1c2b7042b_check_labels(_1c2b6197d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c4c839c1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b615a4_ScopeLabel> _195116_l = *it;
			{
				if ((!(_195116_l.get()._field_used))) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _195116_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_195116_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1c4c839c1:;
			++it;
			goto _iter_begin_1c4c839c1;
		}
		_iter_end_1c4c839c1:;
	};
}



inline void _1c2b70607_check_vars(_1c2b6197d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1c4c85341:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _195916_v = *it;
			{
				if (((((!(_195916_v.get()._field_used)) && (!(_20513b8c6_is_ignore_ident(_195916_v.get()._field_ident)))) && (!(_20513bb6d_is_anon_ident(_195916_v.get()._field_ident)))) && (_195916_v.get()._field_ident != jule::Str("self", 4)))) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _195916_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_195916_v.get()._field_ident)}));
				};
			}
			_iter_next_1c4c85341:;
			++it;
			goto _iter_begin_1c4c85341;
		}
		_iter_end_1c4c85341:;
	};
}



inline void _1c2b707d3_check_aliases(_1c2b6197d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1c4c87772:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1a3e9_TypeAlias> _196716_a = *it;
			{
				if ((((!(_196716_a.get()._field_used)) && (!(_20513b8c6_is_ignore_ident(_196716_a.get()._field_ident)))) && (!(_20513bb6d_is_anon_ident(_196716_a.get()._field_ident))))) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _196716_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_196716_a.get()._field_ident)}));
				};
			}
			_iter_next_1c4c87772:;
			++it;
			goto _iter_begin_1c4c87772;
		}
		_iter_end_1c4c87772:;
	};
}



inline void _1c2b70b02_check(jule::Ptr<_1c2b6197d_ScopeChecker> _self_, jule::Ptr<_20514edb2_ScopeTree>& _197530_tree, jule::Ptr<_1c2b4c1e9_Scope>& _197553_s) {
	_197553_s.get()._field_deferred=_197530_tree.get()._field_deferred;
	_197553_s.get()._field_unsafety=_197530_tree.get()._field_unsafety;
	jule::I64 _197913_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_197530_tree;
	_self_.get()._field_scope=_197553_s;
	_1c2b6ec55_check_tree(_self_);
	if ((_197913_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1c2b70607_check_vars(_self_.ptr());
		_1c2b707d3_check_aliases(_self_.ptr());
		if (_1c2b62ebd_is_root(_self_.ptr())) {
			_1c2b70250_check_gotos(_self_.ptr());
			_1c2b7042b_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2b70d66_new_child_checker(jule::Ptr<_1c2b6197d_ScopeChecker> _self_) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _199917_base = _1c2ad5869_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_199917_base.get()._field_parent=_self_;
	_199917_base.get()._field_labels=_self_.get()._field_labels;
	_199917_base.get()._field_gotos=_self_.get()._field_gotos;
	_199917_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _199917_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b6197d_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c2b71e11_check_cdef(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc65b6_Fn>>()) {
			_case_begin_1c4c8e290:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c1cc65b6_Fn>().get()._field_cpp_linked) {
					goto _match_end_1c4c8e4b0;
				};
				goto _case_begin_1c4c8e515;
			}
		}
		else {
			_case_begin_1c4c8e515:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1c4c8e4b0:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c2b72186_check_typedef(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c4c9234d:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c1cb3e55_Struct>().get()._field_cpp_linked) {
					goto _match_end_1c4c9256d;
				};
				goto _case_begin_1c4c925c3;
			}
		}
		else {
			_case_begin_1c4c925c3:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1c4c9256d:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c2b7240b_check_derive(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c4c951b9:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1c1cb3e55_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1c4c953d9;
				};
				goto _case_begin_1c4c9543e;
			}
		}
		else {
			_case_begin_1c4c9543e:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4c953d9:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1c4c99245:;
		}
		else {
			_case_begin_1c4c988b5:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1c4c98d7c:;
	};
}



inline void _1c2b72681_check_namespace(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c4c9a90b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1c1cb3e55_Struct>().get()._field_cpp_linked))) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc65b6_Fn>>()) {
			_case_begin_1c4c9ac80:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1c1cc65b6_Fn>().get()._field_cpp_linked))) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c4c9ace6:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1c2b9a4de_Var>().get()._field_cpp_linked))) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1c4c9ab81:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1c4c9ab2b:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_205139176_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c4ca4b02:;
			{
				if ((_1c2c15c74_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_204ec174a_Directive> _11625_typedef = jule::new_ptr<_204ec174a_Directive>(_204ec174a_Directive{._field_tag=_7439_d.get()._field_tag});;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_204ec174a_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1c4ca4a9c:;
	};
}



inline void _1c2b72906_check_deprecated(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c4ca6d9b:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c1cb3e55_Struct>().get()._field_cpp_linked) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc65b6_Fn>>()) {
			_case_begin_1c4ca7231:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c1cc65b6_Fn>().get()._field_cpp_linked) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c4ca7297:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c2b9a4de_Var>().get()._field_cpp_linked) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1c4ca7132:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1c4ca70cc:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_205139176_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1c2b72b7b_check_test(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc65b6_Fn>>()) {
			_case_begin_1c4cb0c51:;
			{
				jule::Ptr<_1c1cc65b6_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1c1cc65b6_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1c1cc7254_is_init(_16717_f.ptr())))) && (!(_1c1cc6ee0_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1c4cb0e71;
				};
				if (_1c1cc6c7b_is_method(_16717_f.ptr())) {
					_1c2b82905_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1c4cb0e71;
				};
				goto _case_begin_1c4cb0ec6;
			}
		}
		else {
			_case_begin_1c4cb0ec6:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1c4cb0e71:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1c2b82905_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c2b72e01_check_directive(_1c2b719c1_DirectiveChecker* _self_, jule::Ptr<_204ec174a_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1c4cb5607:;
			{
				_1c2b71e11_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1c4cb566d:;
			{
				_1c2b72186_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1c4cb56d4:;
			{
				_1c2b7240b_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1c4cb574a:;
			{
				_1c2b72681_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1c4cb653c:;
			{
				_1c2b72906_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1c4cb65a3:;
			{
				_1c2b72b7b_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1c4cb6619:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1c4cb5283:;
			{
				_1c2b82905_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1c4cb554c:;
	};
}



inline void _1c2b730cc_check(_1c2b719c1_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1c4cba1cd:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _20821_d = *it;
			{
				_1c2b72e01_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1c4cba1cd:;
			++it;
			goto _iter_begin_1c4cba1cd;
		}
		_iter_end_1c4cba1cd:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b719c1_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7780c_find_package(_1c2b77301_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b77b1a_select_package(_1c2b77301_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2b77ec2_find_var(_1c2b77301_ImportInfo* _self_, jule::Str _16931_ident, jule::Bool _16943_cpp_linked) {
	if ((!(_1c2b79622_is_lookupable(&(*_self_), _16931_ident)))) {
		return nullptr;
	};
	return _1c2b75321_find_var_in_package((*_self_)._field_package.get()._field_files,_16931_ident,false);
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b78379_find_type_alias(_1c2b77301_ImportInfo* _self_, jule::Str _18238_ident, jule::Bool _18250_cpp_linked) {
	if ((!(_1c2b79622_is_lookupable(&(*_self_), _18238_ident)))) {
		return nullptr;
	};
	return _1c2b75772_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_18238_ident,false);
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2b78731_find_struct(_1c2b77301_ImportInfo* _self_, jule::Str _19534_ident, jule::Bool _19546_cpp_linked) {
	if ((!(_1c2b79622_is_lookupable(&(*_self_), _19534_ident)))) {
		return nullptr;
	};
	return _1c2b75b6d_find_struct_in_package((*_self_)._field_package.get()._field_files,_19534_ident,false);
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2b78ad8_find_fn(_1c2b77301_ImportInfo* _self_, jule::Str _20830_ident, jule::Bool _20842_cpp_linked) {
	if ((!(_1c2b79622_is_lookupable(&(*_self_), _20830_ident)))) {
		return nullptr;
	};
	return _1c2b7609c_find_fn_in_package((*_self_)._field_package.get()._field_files,_20830_ident,false);
}



inline jule::Ptr<_1c2a137db_Trait> _1c2b78de6_find_trait(_1c2b77301_ImportInfo* _self_, jule::Str _22033_ident) {
	if ((!(_1c2b79622_is_lookupable(&(*_self_), _22033_ident)))) {
		return nullptr;
	};
	return _1c2b763dd_find_trait_in_package((*_self_)._field_package.get()._field_files,_22033_ident);
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2b79204_find_enum(_1c2b77301_ImportInfo* _self_, jule::Str _23232_ident) {
	if ((!(_1c2b79622_is_lookupable(&(*_self_), _23232_ident)))) {
		return nullptr;
	};
	return _1c2b7672e_find_enum_in_package((*_self_)._field_package.get()._field_files,_23232_ident);
}



inline jule::Bool _1c2b79622_is_lookupable(_1c2b77301_ImportInfo* _self_, jule::Str _24228_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1c2b79930_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1c2b79930_exist_ident(&(*_self_), _24228_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1c2b79930_exist_ident(_1c2b77301_ImportInfo* _self_, jule::Str _26226_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1c4cc7ebb:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> &_26316_sident = *it;
			{
				if ((_26316_sident.get()._field_kind == _26226_ident)) {
					return true;
				};
			}
			_iter_next_1c4cc7ebb:;
			++it;
			goto _iter_begin_1c4cc7ebb;
		}
		_iter_end_1c4cc7ebb:;
	};
	return false;
}



inline jule::Bool _1c2b79bb6_is_accessible_via_selection(_1c2b77301_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1c2b79930_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b77301_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7a47a_find_package(_1c2b79eb3_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b7a788_select_package(_1c2b79eb3_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2b7ab40_find_var(_1c2b79eb3_Package* _self_, jule::Str _29231_ident, jule::Bool _29243_cpp_linked) {
	return _1c2b75321_find_var_in_package((*_self_)._field_files,_29231_ident,_29243_cpp_linked);
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b7aee7_find_type_alias(_1c2b79eb3_Package* _self_, jule::Str _29838_ident, jule::Bool _29850_cpp_linked) {
	return _1c2b75772_find_type_alias_in_package((*_self_)._field_files,_29838_ident,_29850_cpp_linked);
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2b7b39e_find_struct(_1c2b79eb3_Package* _self_, jule::Str _30434_ident, jule::Bool _30446_cpp_linked) {
	return _1c2b75b6d_find_struct_in_package((*_self_)._field_files,_30434_ident,_30446_cpp_linked);
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2b7b756_find_fn(_1c2b79eb3_Package* _self_, jule::Str _31030_ident, jule::Bool _31042_cpp_linked) {
	return _1c2b7609c_find_fn_in_package((*_self_)._field_files,_31030_ident,_31042_cpp_linked);
}



inline jule::Ptr<_1c2a137db_Trait> _1c2b7ba64_find_trait(_1c2b79eb3_Package* _self_, jule::Str _31633_ident) {
	return _1c2b763dd_find_trait_in_package((*_self_)._field_files,_31633_ident);
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2b7bd72_find_enum(_1c2b79eb3_Package* _self_, jule::Str _32232_ident) {
	return _1c2b7672e_find_enum_in_package((*_self_)._field_files,_32232_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b79eb3_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b804e6_find_package(_1c2b7eeda_Sema* _self_, jule::Str _22435_ident) {
	return _1c2bdc201_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2b80804_select_package(_1c2b7eeda_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _23437_selector) {
	return _1c2bdc50e_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2b80bab_find_var(_1c2b7eeda_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1c2b9a4de_Var> _24617_v = _1c2b75321_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4cd44b1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1c2b7d989_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1c4cd44b1;
				};
				_24617_v=_1c2b77ec2_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1c2b830cb_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1c4cd44b1:;
			++it;
			goto _iter_begin_1c4cd44b1;
		}
		_iter_end_1c4cd44b1:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b81063_find_type_alias(_1c2b7eeda_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1c2c1a3e9_TypeAlias> _27317_ta = _1c2b75772_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4cd7728:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1c2b7d989_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1c4cd7728;
				};
				_27317_ta=_1c2b78379_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1c2b830cb_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1c4cd7728:;
			++it;
			goto _iter_begin_1c4cd7728;
		}
		_iter_end_1c4cd7728:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2b8141a_find_struct(_1c2b7eeda_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1c1cb3e55_Struct> _30017_s = _1c2b75b6d_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4cda30d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1c2b7d989_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1c4cda30d;
				};
				_30017_s=_1c2b78731_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1c2b830cb_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1c4cda30d:;
			++it;
			goto _iter_begin_1c4cda30d;
		}
		_iter_end_1c4cda30d:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2b817c2_find_fn(_1c2b7eeda_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1c1cc65b6_Fn> _32717_f = _1c2b7609c_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4cdce7b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1c2b7d989_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1c4cdce7b;
				};
				_32717_f=_1c2b78ad8_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1c2b830cb_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1c4cdce7b:;
			++it;
			goto _iter_begin_1c4cdce7b;
		}
		_iter_end_1c4cdce7b:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2a137db_Trait> _1c2b81ad0_find_trait(_1c2b7eeda_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1c2a137db_Trait> _35417_t = _1c2b763dd_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4ce07ca:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1c2b7d989_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1c4ce07ca;
				};
				_35417_t=_1c2b78de6_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1c2b830cb_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1c4ce07ca:;
			++it;
			goto _iter_begin_1c4ce07ca;
		}
		_iter_end_1c4ce07ca:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2b81ddd_find_enum(_1c2b7eeda_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1c2a159ec_Enum> _38117_e = _1c2b7672e_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4ce30a2:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1c2b7d989_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1c4ce30a2;
				};
				_38117_e=_1c2b79204_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1c2b830cb_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1c4ce30a2:;
			++it;
			goto _iter_begin_1c4ce30a2;
		}
		_iter_end_1c4ce30a2:;
	};
	return nullptr;
}



inline jule::Bool _1c2b822b7_is_flag(_1c2b7eeda_Sema* _self_, jule::I64 _40322_flags) {
	return (((*_self_)._field_flags & _40322_flags) == _40322_flags);
}



inline void _1c2b8253c_set_current_file(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2bdbbe5_SymbolTable> _40539_f) {
	(*_self_)._field_file=_40539_f;
}



inline void _1c2b82905_push_err(_1c2b7eeda_Sema* _self_, jule::Ptr<_205139176_Token> _40727_token, jule::Str _40742_fmt, jule::Slice<jule::Any> _40755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c2b7d648_compiler_err(_40727_token,true,_40742_fmt,jule::Any(_40755_args)));;
}



inline void _1c2b82c24_push_suggestion(_1c2b7eeda_Sema* _self_, jule::Str _41234_fmt, jule::Slice<jule::Any> _41247_args) {
	{
		_1c2b7ea56_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_41234_fmt,jule::Any(_41247_args));
	};
}



inline jule::Bool _1c2b830cb_is_accessible_define(_1c2b7eeda_Sema* _self_, jule::Bool _41735_public, jule::Ptr<_205139176_Token> _41749_token) {
	return ((_41735_public || (_41749_token.get()._field_file == nullptr)) || (_20513ee5c_dir((*_self_)._field_file.get()._field_file.ptr()) == _20513ee5c_dir(_41749_token.get()._field_file.ptr())));
}



inline jule::Bool _1c2b8352c_is_duplicated_ident(_1c2b7eeda_Sema* _self_, jule::U64 _42434_itself, jule::Str _42451_ident, jule::Bool _42463_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c4cea7b3:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> &_42516_f = *it;
			{
				if (_1c2bdedc4_is_duplicated_ident(_42516_f.ptr(), _42434_itself,_42451_ident,_42463_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _42516_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1c4cebd47:;
					if (it != expr.end()) {
						jule::Ptr<_1c2b77301_ImportInfo> &_43020_imp = *it;
						{
							{
								auto &expr = _43020_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1c4cec50c:;
								if (it != expr.end()) {
									jule::Ptr<_205139176_Token> &_43124_selected = *it;
									{
										if ((_43124_selected.get()._field_kind == _42451_ident)) {
											return true;
										};
									}
									_iter_next_1c4cec50c:;
									++it;
									goto _iter_begin_1c4cec50c;
								}
								_iter_end_1c4cec50c:;
							};
						}
						_iter_next_1c4cebd47:;
						++it;
						goto _iter_begin_1c4cebd47;
					}
					_iter_end_1c4cebd47:;
				};
			}
			_iter_next_1c4cea7b3:;
			++it;
			goto _iter_begin_1c4cea7b3;
		}
		_iter_end_1c4cea7b3:;
	};
	return false;
}



inline void _1c2b8384b_check_directives(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Slice<jule::Ptr<_204ec174a_Directive>>& _44141_d, jule::Any _44167_o) {
	_1c2b719c1_DirectiveChecker _44217_dc = _1c2b719c1_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_204ec174a_Directive>>>)((&(_44141_d)))), ._field_o=jule::Any(_44167_o)};;
	_1c2b730cc_check(&_44217_dc);
}



inline jule::Bool _1c2b83c9c_check_generic_quantity(_1c2b7eeda_Sema* _self_, jule::I64 _45041_required, jule::I64 _45056_given, jule::Ptr<_205139176_Token> _45068_token) {
	jule::Bool _45085_ok = jule::Bool();
	{
		
		if (((_45041_required == 0LL) && (_45056_given > 0LL))) {
			_case_begin_1c4d00b2b:;
			{
				_1c2b82905_push_err(&(*_self_), _45068_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (((_45041_required > 0LL) && (_45056_given == 0LL))) {
			_case_begin_1c4d00bc5:;
			{
				_1c2b82905_push_err(&(*_self_), _45068_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required < _45056_given)) {
			_case_begin_1c4d00c3b:;
			{
				_1c2b82905_push_err(&(*_self_), _45068_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required > _45056_given)) {
			_case_begin_1c4d0090b:;
			{
				_1c2b82905_push_err(&(*_self_), _45068_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else {
			_case_begin_1c4d00499:;
			{
				_45085_ok = true;
				return _45085_ok;
			}
		}
		_match_end_1c4d003de:;
	};
}



inline jule::Bool _1c2b84176_is_duplicated_import_selection(_1c2b7eeda_Sema* _self_, jule::U64 _46945_itself, jule::Str _46962_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4d04745:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> &_47016_imp = *it;
			{
				if ((static_cast<jule::U64>(_47016_imp) == _46945_itself)) {
					goto _iter_end_1c4d04745;
				};
				if (_1c2b79930_exist_ident(_47016_imp.ptr(), _46962_ident)) {
					return true;
				};
			}
			_iter_next_1c4d04745:;
			++it;
			goto _iter_begin_1c4d04745;
		}
		_iter_end_1c4d04745:;
	};
	return false;
}



inline jule::Any _1c2b8453e_get_import_def(_1c2b7eeda_Sema* _self_, jule::Str _48429_ident, jule::Ptr<_1c2b77301_ImportInfo>& _48446_imp) {
	if ((_1c2c91edc_find_package_builtin_def(_48446_imp.get()._field_link_path,_48429_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _48446_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4d06c0e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _48921_f = *it;
			{
				;
				jule::Any _49121_def = _1c2bde973_def_by_ident(_48921_f.ptr(), _48429_ident,false);;
				if ((_49121_def != nullptr)) {
					return jule::Any(_49121_def);
				};
			}
			_iter_next_1c4d06c0e:;
			++it;
			goto _iter_begin_1c4d06c0e;
		}
		_iter_end_1c4d06c0e:;
	};
	return nullptr;
}



inline jule::Bool _1c2b8486e_check_import_selections(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2b77301_ImportInfo>& _50047_imp) {
	jule::Bool _50067_ok = jule::Bool();
	_50067_ok=true;
	{
		auto &expr = _50047_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1c4d08ae0:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> _50216_ident = *it;
			{
				if ((_50216_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1c4d08ae0;
				};
				if (_1c2b84176_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_50047_imp)),_50216_ident.get()._field_kind)) {
					_1c2b82905_push_err(&(*_self_), _50216_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
					_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50067_ok=false;
					goto _iter_next_1c4d08ae0;
				};
				jule::Any _51421_def = _1c2b8453e_get_import_def(&(*_self_), _50216_ident.get()._field_kind,_50047_imp);;
				{
					auto &_match_expr{ _51421_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1c4d0c330:;
						{
							goto _iter_next_1c4d08ae0;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
						_case_begin_1c4d0b780:;
						{
							jule::Ptr<_1c2b9a4de_Var> _52025_v = _51421_def.operator jule::Ptr<_1c2b9a4de_Var>();;
							if (_1c2b830cb_is_accessible_define(&(*_self_), _52025_v.get()._field_public,_52025_v.get()._field_token)) {
								goto _iter_next_1c4d08ae0;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2c1a3e9_TypeAlias>>()) {
						_case_begin_1c4d0b7e6:;
						{
							jule::Ptr<_1c2c1a3e9_TypeAlias> _52525_ta = _51421_def.operator jule::Ptr<_1c2c1a3e9_TypeAlias>();;
							if (_1c2b830cb_is_accessible_define(&(*_self_), _52525_ta.get()._field_public,_52525_ta.get()._field_token)) {
								goto _iter_next_1c4d08ae0;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
						_case_begin_1c4d0c473:;
						{
							jule::Ptr<_1c1cb3e55_Struct> _53025_strct = _51421_def.operator jule::Ptr<_1c1cb3e55_Struct>();;
							if (_1c2b830cb_is_accessible_define(&(*_self_), _53025_strct.get()._field_public,_53025_strct.get()._field_token)) {
								goto _iter_next_1c4d08ae0;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2a137db_Trait>>()) {
						_case_begin_1c4d0c4d9:;
						{
							jule::Ptr<_1c2a137db_Trait> _53525_t = _51421_def.operator jule::Ptr<_1c2a137db_Trait>();;
							if (_1c2b830cb_is_accessible_define(&(*_self_), _53525_t.get()._field_public,_53525_t.get()._field_token)) {
								goto _iter_next_1c4d08ae0;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2a159ec_Enum>>()) {
						_case_begin_1c4d0c550:;
						{
							jule::Ptr<_1c2a159ec_Enum> _54025_e = _51421_def.operator jule::Ptr<_1c2a159ec_Enum>();;
							if (_1c2b830cb_is_accessible_define(&(*_self_), _54025_e.get()._field_public,_54025_e.get()._field_token)) {
								goto _iter_next_1c4d08ae0;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c1cc65b6_Fn>>()) {
						_case_begin_1c4d0c5b6:;
						{
							jule::Ptr<_1c1cc65b6_Fn> _54525_f = _51421_def.operator jule::Ptr<_1c1cc65b6_Fn>();;
							if (_1c2b830cb_is_accessible_define(&(*_self_), _54525_f.get()._field_public,_54525_f.get()._field_token)) {
								goto _iter_next_1c4d08ae0;
							};
						}
					}
					else {
						_case_begin_1c4d0b5c6:;
						{
							_1c2b82905_push_err(&(*_self_), _50216_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
							_50067_ok=false;
							goto _iter_next_1c4d08ae0;
						}
					}
					_match_end_1c4d0b571:;
				};
				_1c2b82905_push_err(&(*_self_), _50216_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50216_ident.get()._field_kind)}));
				_1c2b82c24_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50067_ok=false;
			}
			_iter_next_1c4d08ae0:;
			++it;
			goto _iter_begin_1c4d08ae0;
		}
		_iter_end_1c4d08ae0:;
	};
	return _50067_ok;
}



inline jule::Bool _1c2b84bb0_is_use_alias_duplication(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2b77301_ImportInfo>& _56244_imp) {
	if ((_56244_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c4d148ba:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _56721_imp2 = *it;
			{
				if ((_56721_imp2 == _56244_imp)) {
					goto _iter_end_1c4d148ba;
				};
				if ((_56721_imp2.get()._field_alias == _56244_imp.get()._field_alias)) {
					return true;
				};
				if (((_56721_imp2.get()._field_ident == _56721_imp2.get()._field_link_path) && (_56721_imp2.get()._field_ident == _56244_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1c4d148ba:;
			++it;
			goto _iter_begin_1c4d148ba;
		}
		_iter_end_1c4d148ba:;
	};
	return false;
}



inline jule::Bool _1c2b84ece_check_import(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2b77301_ImportInfo>& _58336_imp) {
	if ((_58336_imp.get()._field_cpp_linked || (_58336_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1c2b84bb0_is_use_alias_duplication(&(*_self_), _58336_imp)) {
		_1c2b82905_push_err(&(*_self_), _58336_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_58336_imp.get()._field_alias)}));
		_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_58336_imp.get()._field_duplicate))) {
		jule::Ptr<_1c2b7eeda_Sema> _59421_sema = jule::new_ptr<_1c2b7eeda_Sema>(_1c2b7eeda_Sema{._field_flags=(*_self_)._field_flags});;
		_1c2b97497_check(_59421_sema, _58336_imp.get()._field_package.get()._field_files);
		if ((_59421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_59421_sema.get()._field_errors);
			_59421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1c2b8486e_check_import_selections(&(*_self_), _58336_imp);
}



inline void _1c2b851aa_check_imports(_1c2b7eeda_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c4d1b40a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _60821_file = *it;
			{
				_1c2b8253c_set_current_file(&(*_self_), _60821_file);
				{
					auto &expr = _60821_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1c4d1c087:;
					if (it != expr.end()) {
						jule::Ptr<_1c2b77301_ImportInfo> _61125_imp = *it;
						{
							jule::Bool _61221_ok = _1c2b84ece_check_import(&(*_self_), _61125_imp);;
							if ((!(_61221_ok))) {
								_1c2b82905_push_err(&(*_self_), _61125_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_61125_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1c4d1c087:;
						++it;
						goto _iter_begin_1c4d1c087;
					}
					_iter_end_1c4d1c087:;
				};
			}
			_iter_next_1c4d1b40a:;
			++it;
			goto _iter_begin_1c4d1b40a;
		}
		_iter_end_1c4d1b40a:;
	};
}



inline void _1c2b85386_impl_file_impls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1c4d1b806:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a16e71_Impl> _62421_imp = *it;
			{
				_1c2b8ddea_impl_impl(_self_, _62421_imp);
			}
			_iter_next_1c4d1b806:;
			++it;
			goto _iter_begin_1c4d1b806;
		}
		_iter_end_1c4d1b806:;
	};
}



inline void _1c2b85562_impl_impls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4d1ee58:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _63021_file = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _63021_file);
				_1c2b85386_impl_file_impls(_self_);
			}
			_iter_next_1c4d1ee58:;
			++it;
			goto _iter_begin_1c4d1ee58;
		}
		_iter_end_1c4d1ee58:;
	};
}



inline void _1c2b8573d_check_enums(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4d211bd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _63721_file = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _63721_file);
				_1c2b8b3c0_check_enum_decls(_self_);
			}
			_iter_next_1c4d211bd:;
			++it;
			goto _iter_begin_1c4d211bd;
		}
		_iter_end_1c4d211bd:;
	};
}



inline jule::Bool _1c2b85b8e_check_type_with_refers(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2c24d2c_TypeSymbol>& _64547_t, jule::Trait<_1c2c3934c_Lookup> _64613_l, jule::Ptr<_1c2c2e908_Referencer> _64628_referencer) {
	jule::Bool _64655_ok = jule::Bool();
	if (_1c2c25228_checked(_64547_t.ptr())) {
		_64655_ok = true;
		return _64655_ok;
	};
	_1c2c30585_TypeChecker _65017_tc = _1c2c30585_TypeChecker{._field_s=_self_, ._field_lookup=_64613_l, ._field_referencer=_64628_referencer};;
	if (((_64628_referencer != nullptr) && (_64628_referencer.get()._field_refs != nullptr))) {
		_65017_tc._field_owner_alias=_64628_referencer.get()._field_owner.operator jule::Ptr<_1c2c1a3e9_TypeAlias>();
	};
	_1c2c36e1b_check(&_65017_tc, _64547_t);
	_64655_ok = _1c2c25228_checked(_64547_t.ptr());
	return _64655_ok;
}



inline jule::Bool _1c2b86046_check_type(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2c24d2c_TypeSymbol>& _66935_t, jule::Trait<_1c2c3934c_Lookup> _66955_l) {
	return _1c2b85b8e_check_type_with_refers(_self_, _66935_t,_66955_l,nullptr);
}



inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b86420_build_type_with_generics(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_204ec8b92_TypeDecl>& _67549_t, jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _67613_generics) {
	jule::Ptr<_1c2c30585_TypeChecker> _67717_tc = jule::new_ptr<_1c2c30585_TypeChecker>(_1c2c30585_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2c3934c_Lookup>(_self_, 3), ._field_use_generics=_67613_generics});;
	return _1c2c36b96_check_decl(_67717_tc.ptr(), _67549_t);
}



inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b8673e_build_type(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_204ec8b92_TypeDecl>& _68635_t) {
	return _1c2b86420_build_type_with_generics(_self_, _68635_t,nullptr);
}



inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b86a4c_select_type(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_204ec8b92_TypeDecl>& _69136_t) {
	jule::Ptr<_1c2c30585_TypeChecker> _69217_tc = jule::new_ptr<_1c2c30585_TypeChecker>(_1c2c30585_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2c3934c_Lookup>(_self_, 3), ._field_selection=true});;
	return _1c2c36b96_check_decl(_69217_tc.ptr(), _69136_t);
}



inline jule::Ptr<_1c2be3823_Eval> _1c2b86e9d_evalpd(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Trait<_1c2c3934c_Lookup> _70230_l, jule::Ptr<_1c2c1b131_TypeKind> _70245_p, jule::Ptr<_1c2b9a4de_Var> _70263_owner) {
	jule::Ptr<_1c2be3823_Eval> _70317_e = jule::new_ptr<_1c2be3823_Eval>(_1c2be3823_Eval{._field_s=_self_, ._field_lookup=_70230_l, ._field_owner=_70263_owner});;
	{
		auto &_match_expr{ _70230_l };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
			_case_begin_1c4d2c7e5:;
			{
				_70317_e.get()._field_unsafety=_1c2b62c59_is_unsafe(_70230_l.operator jule::Ptr<_1c2b6197d_ScopeChecker>());
			}
		}
		_match_end_1c4d2c790:;
	};
	_70317_e.get()._field_prefix=_70245_p;
	return _70317_e;
}



inline jule::Ptr<_1c2be3823_Eval> _1c2b87355_evalp(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Trait<_1c2c3934c_Lookup> _72029_l, jule::Ptr<_1c2c1b131_TypeKind> _72044_p) {
	return _1c2b86e9d_evalpd(_self_, _72029_l,_72044_p,nullptr);
}



inline jule::Ptr<_1c2be3823_Eval> _1c2b87663_eval(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Trait<_1c2c3934c_Lookup> _72528_l) {
	return _1c2b87355_evalp(_self_, _72528_l,nullptr);
}



inline jule::Bool _1c2b87b5d_check_assign_type(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Bool _72937_dest_is_ref, jule::Ptr<_1c2c1b131_TypeKind>& _72961_dest, jule::Ptr<_1c2be1ca5_Data>& _73014_d, jule::Ptr<_205139176_Token> _73028_error_token) {
	if (_73014_d.get()._field_decl) {
		_1c2b82905_push_err(_self_.ptr(), _73028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_72937_dest_is_ref) {
		if ((!(_1c2c1b7e6_equals(_72961_dest, _73014_d.get()._field_kind)))) {
			_1c2b82905_push_err(_self_.ptr(), _73028_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_72961_dest.ptr())),jule::Any(_1c2c1b4d8_to_str(_73014_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1c2bce27b_AssignTypeChecker> _74121_atc = jule::new_ptr<_1c2bce27b_AssignTypeChecker>(_1c2bce27b_AssignTypeChecker{._field_s=_self_, ._field_error_token=_73028_error_token, ._field_dest=_72961_dest, ._field_d=_73014_d});;
		jule::Bool _74717_ok = _1c2bd0403_check(_74121_atc.ptr());;
		if ((!(_74717_ok))) {
			return false;
		};
	};
	if (((!(_1c2be2668_is_const(_73014_d.ptr()))) || (_1c2c2304a_prim(_72961_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _75717_kind = _1c2c2304a_prim(_72961_dest.ptr()).get()._field_kind;;
	{
		
		if (_1c2b5de53_is_sig_int(_75717_kind)) {
			_case_begin_1c4d34687:;
			{
				_1c2abe18d_set_i64(_73014_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2b5e23e_is_unsig_int(_75717_kind)) {
			_case_begin_1c4d3470e:;
			{
				_1c2abe413_set_u64(_73014_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2b5e7c2_is_float(_75717_kind)) {
			_case_begin_1c4d34786:;
			{
				_1c2abeb83_set_f64(_73014_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c2abde18_as_f64(_73014_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1c4d345aa:;
	};
	return true;
}



inline jule::Bool _1c2b880d1_check_type_compatibility(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2c1b131_TypeKind>& _77149_dest, jule::Ptr<_1c2c1b131_TypeKind>& _77214_src, jule::Ptr<_205139176_Token>& _77235_error_token) {
	if ((_77214_src == nullptr)) {
		_1c2b82905_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_77149_dest.ptr())),jule::Any(_1c2c1b4d8_to_str(_77214_src.ptr()))}));
		return false;
	};
	if ((_1c2c24975_tup(_77214_src.ptr()) != nullptr)) {
		_1c2b82905_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_77149_dest.ptr())),jule::Any(_1c2c1b4d8_to_str(_77214_src.ptr()))}));
		return false;
	};
	_1c2bccdc3_TypeCompatibilityChecker _78617_tcc = _1c2bccdc3_TypeCompatibilityChecker{._field_s=_self_, ._field_error_token=_77235_error_token, ._field_dest=_77149_dest, ._field_src=_77214_src};;
	if (_1c2bcdc3c_check(&_78617_tcc)) {
		return true;
	};
	_1c2b82905_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_77149_dest.ptr())),jule::Any(_1c2c1b4d8_to_str(_77214_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1c2c1b131_TypeKind> _1c2b884bb_build_non_generic_type_kind(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_204ec8b92_TypeDecl>& _80752_ast, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>& _80814_generics) {
	jule::Ptr<_1c2c30585_TypeChecker> _80917_tc = jule::new_ptr<_1c2c30585_TypeChecker>(_1c2c30585_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2c3934c_Lookup>(_self_, 3), ._field_ignore_generics=_80814_generics});;
	return _1c2c36b96_check_decl(_80917_tc.ptr(), _80752_ast);
}



inline void _1c2b88774_build_fn_non_generic_type_kinds(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc9762_FnIns>& _81756_f) {
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _81817_generics = nullptr;;
	if (_1c1cc6c7b_is_method(_81756_f.get()._field_decl.ptr())) {
		_81817_generics=jule::append(_81756_f.get()._field_decl.get()._field_generics,_81756_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_81817_generics=_81756_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _81756_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c4d3dcce:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc88c6_ParamIns> _82521_p = *it;
			{
				if ((!(_1c1cc53a6_is_self(_82521_p.get()._field_decl.ptr())))) {
					_82521_p.get()._field_kind=_1c2b884bb_build_non_generic_type_kind(_self_, _82521_p.get()._field_decl.get()._field_kind.get()._field_decl,_81817_generics);
				};
			}
			_iter_next_1c4d3dcce:;
			++it;
			goto _iter_begin_1c4d3dcce;
		}
		_iter_end_1c4d3dcce:;
	};
	if ((!(_1c1cc6a17_is_void(_81756_f.get()._field_decl.ptr())))) {
		_81756_f.get()._field_result=_1c2b884bb_build_non_generic_type_kind(_self_, _81756_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_81817_generics);
	};
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c2b88ab5_get_trait_check_fn_kind(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _83548_f) {
	jule::Ptr<_1c1cc9762_FnIns> _83617_ins = _1c1cc7e9c_instance_force(_83548_f);;
	_1c2b88774_build_fn_non_generic_type_kinds(_self_, _83617_ins);
	return _83617_ins;
}



inline jule::Bool _1c2b88dd4_reload_fn_ins_types(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc9762_FnIns>& _84144_f) {
	jule::Bool _84157_ok = jule::Bool();
	if ((_1c1cca4dd_is_builtin(_84144_f.ptr()) || _1c1cca752_is_anon(_84144_f.ptr()))) {
		_84157_ok = true;
		return _84157_ok;
	};
	jule::Ptr<_1c2b7eeda_Sema> _84617_sema = _84144_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1c2bdbbe5_SymbolTable> _84817_old = _84144_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c2b8253c_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _84817_old);
	});;
	jule::Ptr<_1c2bdbbe5_SymbolTable> _85017_file = _1c2b7e66b_find_file(_84144_f.get()._field_decl.get()._field_sema.get()._field_files,_84144_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_85017_file != nullptr)) {
		_1c2b8253c_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _85017_file);
	};
	jule::I64 _85517_size = _84144_f.get()._field_generics.len();;
	if (((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr))) {
		_85517_size+=_84144_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _86017_generics = jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>::alloc(0LL,_85517_size);;
	{
		auto &expr = _84144_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c4d47d4e:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_1c2c1b131_TypeKind> _86221_g = *it;
			{
				_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_ident=_84144_f.get()._field_decl.get()._field_generics[_86214_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_86221_g})}));;
			}
			_iter_next_1c4d47d4e:;
			++it;
			_86214_i++;
			goto _iter_begin_1c4d47d4e;
		}
		_iter_end_1c4d47d4e:;
	};
	if (((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1c1cb6ad4_StructIns> _87221_owner = _84144_f.get()._field_owner;;
		{
			auto &expr = _87221_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1c4d49889:;
			if (it != expr.end()) {
				jule::I64 _87318_i = it - expr.begin();
				jule::Ptr<_1c2c1b131_TypeKind> _87325_g = *it;
				{
					_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_ident=_87221_owner.get()._field_decl.get()._field_generics[_87318_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_87325_g})}));;
				}
				_iter_next_1c4d49889:;
				++it;
				_87318_i++;
				goto _iter_begin_1c4d49889;
			}
			_iter_end_1c4d49889:;
		};
	};
	_84157_ok=true;
	{
		auto &expr = _84144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c4d4b182:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc88c6_ParamIns> _88421_p = *it;
			{
				if (_1c1cc53a6_is_self(_88421_p.get()._field_decl.ptr())) {
					if (_1c1cc561a_is_ref(_88421_p.get()._field_decl.ptr())) {
						_88421_p.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c28bee_Sptr>(_1c2c28bee_Sptr{._field_elem=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_84144_f.get()._field_owner, 0)})}), 6)});
					} else {
						_88421_p.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_84144_f.get()._field_owner, 0)});
					};
				} else {
					_88421_p.get()._field_kind=_1c2b86420_build_type_with_generics(_84617_sema, _88421_p.get()._field_decl.get()._field_kind.get()._field_decl,_86017_generics);
					if ((_88421_p.get()._field_kind != nullptr)) {
						_88421_p.get()._field_kind.get()._field_variadic=_88421_p.get()._field_decl.get()._field_variadic;
						if ((_88421_p.get()._field_decl.get()._field_reference && (!(_1c2c2d61b_is_valid_for_ref(_88421_p.get()._field_kind))))) {
							_1c2b82905_push_err(_self_.ptr(), _88421_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_88421_p.get()._field_kind.ptr()))}));
						};
					} else {
						_84157_ok=false;
					};
				};
			}
			_iter_next_1c4d4b182:;
			++it;
			goto _iter_begin_1c4d4b182;
		}
		_iter_end_1c4d4b182:;
	};
	if ((!(_1c1cc6a17_is_void(_84144_f.get()._field_decl.ptr())))) {
		_84144_f.get()._field_result=_1c2b86420_build_type_with_generics(_84617_sema, _84144_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86017_generics);
		_84157_ok=((_84144_f.get()._field_result != nullptr) && _84157_ok);
	};
	if ((_84617_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_84617_sema.get()._field_errors);
		_84617_sema.get()._field_errors=nullptr;
	};
	return _84157_ok;
}



inline jule::Bool _1c2b89368_check_ref_validity_for_init_expr(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Bool _92552_left_mut, jule::Ptr<_1c2be1ca5_Data>& _92573_d, jule::Ptr<_205139176_Token>& _92588_error_token) {
	{
		auto &_match_expr{ _92573_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c4d54014:;
			{
				goto _match_end_1c4d53464;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>>()) {
			_case_begin_1c4d5408b:;
			{
				jule::Ptr<_1c1cbca85_TraitSubIdentExprModel> _93021_model = _92573_d.get()._field_model.operator jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>();;
				if ((!(_1c2b7d1a3_is_valid_model_for_ref(_93021_model.get()._field_expr)))) {
					_1c2b82905_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_93021_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
			_case_begin_1c4d54102:;
			{
				jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _93621_model = _92573_d.get()._field_model.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>();;
				if ((!(_1c2b7d1a3_is_valid_model_for_ref(_93621_model.get()._field_expr.get()._field_model)))) {
					_1c2b82905_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_93621_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbde3d_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>>()) {
			_case_begin_1c4d541ac:;
			{
				_1c2b82905_push_err(_self_.ptr(), _92588_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb90ae_UnaryExprModel>>()) {
			_case_begin_1c4d54223:;
			{
				jule::Ptr<_1c1cb90ae_UnaryExprModel> _94621_unary = _92573_d.get()._field_model.operator jule::Ptr<_1c1cb90ae_UnaryExprModel>();;
				if ((_94621_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1c2b7d1a3_is_valid_model_for_ref(_92573_d.get()._field_model)))) {
						_1c2b82905_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1c4d53464;
				};
				goto _case_begin_1c4d534b9;
			}
		}
		else {
			_case_begin_1c4d534b9:;
			{
				_1c2b82905_push_err(_self_.ptr(), _92588_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1c4d53464:;
	};
	if ((_92552_left_mut && (!(_92573_d.get()._field_mutable)))) {
		_1c2b82905_push_err(_self_.ptr(), _92588_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1c2b89962_check_validity_for_init_expr(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Bool _96748_left_mut, jule::Bool _96764_left_ref, jule::Ptr<_1c2c1b131_TypeKind>& _96810_left_kind, jule::Ptr<_1c2be1ca5_Data>& _96837_d, jule::Ptr<_205139176_Token>& _96852_error_token) {
	if (((_96748_left_mut && (!(_96837_d.get()._field_mutable))) && _1c2c1c4c8_mutable(_96837_d.get()._field_kind.ptr()))) {
		_1c2b82905_push_err(_self_.ptr(), _96852_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_96837_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_96764_left_ref) {
		if ((!(_1c2b89368_check_ref_validity_for_init_expr(_self_, _96748_left_mut,_96837_d,_96852_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1c2bce27b_AssignTypeChecker> _97917_atc = jule::new_ptr<_1c2bce27b_AssignTypeChecker>(_1c2bce27b_AssignTypeChecker{._field_s=_self_, ._field_d=_96837_d, ._field_error_token=_96852_error_token});;
	return _1c2bce952_check_validity(_97917_atc.ptr());
}



inline jule::Bool _1c2b89d19_check_type_alias_decl_kind(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2c1a3e9_TypeAlias>& _98751_ta, jule::Trait<_1c2c3934c_Lookup> _98771_l) {
	jule::Bool _98784_ok = jule::Bool();
	jule::Ptr<_1c2bdbbe5_SymbolTable> _98817_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c2b8253c_set_current_file(_self_.ptr(), _98817_old);
	});;
	if ((_98751_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1c2bdbbe5_SymbolTable> _99321_file = _1c2b7e66b_find_file(_self_.get()._field_files,_98751_ta.get()._field_token.get()._field_file);;
		if ((_99321_file != nullptr)) {
			_1c2b8253c_set_current_file(_self_.ptr(), _99321_file);
		};
	};
	_98784_ok=_1c2b85b8e_check_type_with_refers(_self_, _98751_ta.get()._field_kind,_98771_l,jule::new_ptr<_1c2c2e908_Referencer>(_1c2c2e908_Referencer{._field_ident=_98751_ta.get()._field_ident, ._field_owner=jule::Any(_98751_ta), ._field_refs=(&(_98751_ta.get()._field_refers))}));
	if (((_98784_ok && (_1c2c239eb_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1c2c239eb_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1c2b82905_push_err(_self_.ptr(), _98751_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_98784_ok=false;
	};
	return _98784_ok;
}



inline void _1c2b8a149_check_type_alias_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2c1a3e9_TypeAlias>& _101046_ta, jule::Trait<_1c2c3934c_Lookup> _101066_l) {
	if (_20513b8c6_is_ignore_ident(_101046_ta.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _101046_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c2b89d19_check_type_alias_decl_kind(_self_, _101046_ta,_101066_l);
}



inline void _1c2b8a3e1_check_type_alias_decl_dup(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2c1a3e9_TypeAlias>& _101850_ta) {
	if (_1c2b8352c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101850_ta)),_101850_ta.get()._field_ident,_101850_ta.get()._field_cpp_linked)) {
		_1c2b82905_push_err(_self_.ptr(), _101850_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_101850_ta.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c2b89d19_check_type_alias_decl_kind(_self_, _101850_ta,jule::Trait<_1c2c3934c_Lookup>(_self_, 3));
}



inline jule::Bool _1c2b8a666_check_type_alias_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	jule::Bool _102744_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1c4d68468:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1a3e9_TypeAlias> _102821_ta = *it;
			{
				_1c2b8a3e1_check_type_alias_decl_dup(_self_, _102821_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_102744_ok = false;
					return _102744_ok;
				};
			}
			_iter_next_1c4d68468:;
			++it;
			goto _iter_begin_1c4d68468;
		}
		_iter_end_1c4d68468:;
	};
	_102744_ok = true;
	return _102744_ok;
}



inline void _1c2b8a8db_check_enum_items_dup(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2a159ec_Enum> _103939_e) {
	{
		auto &expr = _103939_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1c4d69cd8:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a15007_EnumItem> &_104016_item = *it;
			{
				if (_20513b8c6_is_ignore_ident(_104016_item.get()._field_ident)) {
					_1c2b82905_push_err(&(*_self_), _104016_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _103939_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1c4d6b427:;
						if (it != expr.end()) {
							jule::Ptr<_1c2a15007_EnumItem> &_104424_citem = *it;
							{
								if ((_104016_item == _104424_citem)) {
									goto _iter_end_1c4d6b427;
								} else if ((_104016_item.get()._field_ident == _104424_citem.get()._field_ident)) {
									_1c2b82905_push_err(&(*_self_), _104016_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_104016_item.get()._field_ident)}));
									_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c4d6b427;
								};
							}
							_iter_next_1c4d6b427:;
							++it;
							goto _iter_begin_1c4d6b427;
						}
						_iter_end_1c4d6b427:;
					};
				};
			}
			_iter_next_1c4d69cd8:;
			++it;
			goto _iter_begin_1c4d69cd8;
		}
		_iter_end_1c4d69cd8:;
	};
}



inline void _1c2b8ab61_check_enum_items_str(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a159ec_Enum>& _105745_e) {
	{
		auto &expr = _105745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1c4d6d21a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a15007_EnumItem> _105821_item = *it;
			{
				if (_1c2a153e2_auto_expr(_105821_item.ptr())) {
					_105821_item.get()._field_value=jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_data=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=static__1c2abc18b_new_str(_105821_item.get()._field_ident)})});
					_105821_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_105821_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1c2be1ca5_Data> _106725_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_, jule::Trait<_1c2c3934c_Lookup>(_self_, 3)), _105821_item.get()._field_value.get()._field_expr);;
					if ((_106725_d == nullptr)) {
						goto _iter_next_1c4d6d21a;
					};
					if ((!(_1c2be2668_is_const(_106725_d.ptr())))) {
						_1c2b82905_push_err(_self_.ptr(), _105821_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1c2b87b5d_check_assign_type(_self_, false,_105745_e.get()._field_kind.get()._field_kind,_106725_d,_105821_item.get()._field_token);
					_105821_item.get()._field_value.get()._field_data=_106725_d;
				};
			}
			_iter_next_1c4d6d21a:;
			++it;
			goto _iter_begin_1c4d6d21a;
		}
		_iter_end_1c4d6d21a:;
	};
}



inline void _1c2b8add6_check_enum_items_int(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a159ec_Enum>& _108245_e) {
	jule::Ptr<_1c2c256e0_Prim> _108313_prim = _1c2c2304a_prim(_108245_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _108417_max = static_cast<jule::U64>(_1c2b5903b_max(_1c2c25a53_to_str(_108313_prim.ptr())));;
	{
		auto &expr = _108245_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1c4d73d14:;
		if (it != expr.end()) {
			jule::I64 _108514_i = it - expr.begin();
			jule::Ptr<_1c2a15007_EnumItem> _108521_item = *it;
			{
				if ((_108417_max == 0LLU)) {
					_1c2b82905_push_err(_self_.ptr(), _108521_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_108417_max)--;
				};
				if (_1c2a153e2_auto_expr(_108521_item.ptr())) {
					_108521_item.get()._field_value=jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_data=jule::new_ptr<_1c2be1ca5_Data>()});
					{
						
						if (_1c2b5de53_is_sig_int(_1c2c25a53_to_str(_108313_prim.ptr()))) {
							_case_begin_1c4d76102:;
							{
								_108521_item.get()._field_value.get()._field_data.get()._field_constant=static__1c2aba9a3_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_108417_max - (_108417_max - static_cast<jule::U64>(_108514_i))))));
							}
						}
						else {
							_case_begin_1c4d75c8e:;
							{
								_108521_item.get()._field_value.get()._field_data.get()._field_constant=static__1c2abbb91_new_u64(static_cast<jule::U64>((_108417_max - (_108417_max - static_cast<jule::U64>(_108514_i)))));
							}
						}
						_match_end_1c4d75c39:;
					};
					_108521_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_108521_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1c2be1ca5_Data> _110325_d = _1c2c0ced0_eval_expr(_1c2b87663_eval(_self_, jule::Trait<_1c2c3934c_Lookup>(_self_, 3)), _108521_item.get()._field_value.get()._field_expr);;
					if ((_110325_d == nullptr)) {
						goto _iter_next_1c4d73d14;
					};
					if ((!(_1c2be2668_is_const(_110325_d.ptr())))) {
						_1c2b82905_push_err(_self_.ptr(), _108521_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1c2b87b5d_check_assign_type(_self_, false,_108245_e.get()._field_kind.get()._field_kind,_110325_d,_108521_item.get()._field_token);
					_108521_item.get()._field_value.get()._field_data=_110325_d;
				};
			}
			_iter_next_1c4d73d14:;
			++it;
			_108514_i++;
			goto _iter_begin_1c4d73d14;
		}
		_iter_end_1c4d73d14:;
	};
}



inline void _1c2b8b15b_check_enum_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a159ec_Enum>& _111840_e) {
	if (_20513b8c6_is_ignore_ident(_111840_e.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2b8352c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_111840_e)),_111840_e.get()._field_ident,false)) {
		_1c2b82905_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111840_e.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_111840_e.get()._field_items.len() == 0LL)) {
		_1c2b82905_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_111840_e.get()._field_ident)}));
	};
	_1c2b8a8db_check_enum_items_dup(_self_.ptr(), _111840_e);
	if ((_111840_e.get()._field_kind != nullptr)) {
		if ((!(_1c2b86046_check_type(_self_, _111840_e.get()._field_kind,jule::Trait<_1c2c3934c_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_111840_e.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})});
	};
	jule::Ptr<_1c2c256e0_Prim> _114517_t = _1c2c2304a_prim(_111840_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_114517_t == nullptr)) {
		_1c2b82905_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c2c2869e_is_str(_114517_t.ptr())) {
			_case_begin_1c4d81edc:;
			{
				_1c2b8ab61_check_enum_items_str(_self_, _111840_e);
			}
		}
		else if (_1c2b5e4d6_is_int(_1c2c25a53_to_str(_114517_t.ptr()))) {
			_case_begin_1c4d81c56:;
			{
				_1c2b8add6_check_enum_items_int(_self_, _111840_e);
			}
		}
		else {
			_case_begin_1c4d7e160:;
			{
				_1c2b82905_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4d81085:;
	};
}



inline jule::Bool _1c2b8b3c0_check_enum_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	jule::Bool _116338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1c4d84143:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a159ec_Enum> _116421_e = *it;
			{
				_1c2b8b15b_check_enum_decl(_self_, _116421_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_116338_ok = false;
					return _116338_ok;
				};
			}
			_iter_next_1c4d84143:;
			++it;
			goto _iter_begin_1c4d84143;
		}
		_iter_end_1c4d84143:;
	};
	_116338_ok = true;
	return _116338_ok;
}



inline jule::Bool _1c2b8b6cd_check_decl_generics(_1c2b7eeda_Sema* _self_, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>& _117539_generics) {
	jule::Bool _117572_ok = jule::Bool();
	_117572_ok=true;
	{
		auto &expr = _117539_generics;
		auto it = expr.begin();
		_iter_begin_1c4d85c5a:;
		if (it != expr.end()) {
			jule::I64 _117713_i = it - expr.begin();
			jule::Ptr<_20514e235_GenericDecl> &_117716_g = *it;
			{
				if (_20513b8c6_is_ignore_ident(_117716_g.get()._field_ident)) {
					_1c2b82905_push_err(&(*_self_), _117716_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_117572_ok=false;
					goto _iter_next_1c4d85c5a;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _117539_generics;
					auto it = expr.begin();
					_iter_begin_1c4d86794:;
					if (it != expr.end()) {
						jule::I64 _118617_j = it - expr.begin();
						jule::Ptr<_20514e235_GenericDecl> &_118620_ct = *it;
						{
							{
								
								if ((_118617_j >= _117713_i)) {
									_case_begin_1c4d88147:;
									{
										goto _iter_end_1c4d86794;
									}
								}
								else if ((_117716_g.get()._field_ident == _118620_ct.get()._field_ident)) {
									_case_begin_1c4d881be:;
									{
										_1c2b82905_push_err(&(*_self_), _117716_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_117716_g.get()._field_ident)}));
										_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_117572_ok=false;
										goto _iter_end_1c4d86794;
									}
								}
								_match_end_1c4d88037:;
							};
						}
						_iter_next_1c4d86794:;
						++it;
						_118617_j++;
						goto _iter_begin_1c4d86794;
					}
					_iter_end_1c4d86794:;
				};
			}
			_iter_next_1c4d85c5a:;
			++it;
			_117713_i++;
			goto _iter_begin_1c4d85c5a;
		}
		_iter_end_1c4d85c5a:;
	};
	return _117572_ok;
}



inline jule::Bool _1c2b8ba0d_check_fn_decl_params_dup(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cc65b6_Fn>& _120244_f) {
	jule::Bool _120254_ok = jule::Bool();
	_120254_ok=true;
	_julec_label_check:;
	{
		auto &expr = _120244_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c4d8aea2:;
		if (it != expr.end()) {
			jule::I64 _120513_i = it - expr.begin();
			jule::Ptr<_1c1cc4c79_Param> &_120516_p = *it;
			{
				{
					auto &expr = _120244_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1c4d8b887:;
					if (it != expr.end()) {
						jule::Ptr<_20514e235_GenericDecl> &_120720_g = *it;
						{
							if ((_120516_p.get()._field_ident == _120720_g.get()._field_ident)) {
								_120254_ok=false;
								_1c2b82905_push_err(&(*_self_), _120516_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_120516_p.get()._field_ident)}));
								_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1c4d8aea2;
							};
						}
						_iter_next_1c4d8b887:;
						++it;
						goto _iter_begin_1c4d8b887;
					}
					_iter_end_1c4d8b887:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _120244_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1c4d8bb1d:;
					if (it != expr.end()) {
						jule::I64 _121717_j = it - expr.begin();
						jule::Ptr<_1c1cc4c79_Param> &_121720_jp = *it;
						{
							{
								
								if ((_121717_j >= _120513_i)) {
									_case_begin_1c4d8dd2e:;
									{
										goto _iter_end_1c4d8bb1d;
									}
								}
								else if ((_20513bb6d_is_anon_ident(_120516_p.get()._field_ident) || _20513bb6d_is_anon_ident(_121720_jp.get()._field_ident))) {
									_case_begin_1c4d8dda6:;
									{
										goto _iter_end_1c4d8bb1d;
									}
								}
								else if ((_120516_p.get()._field_ident == _121720_jp.get()._field_ident)) {
									_case_begin_1c4d8de2d:;
									{
										_120254_ok=false;
										_1c2b82905_push_err(&(*_self_), _120516_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_120516_p.get()._field_ident)}));
										_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1c4d8aea2;
									}
								}
								_match_end_1c4d8dc0d:;
							};
						}
						_iter_next_1c4d8bb1d:;
						++it;
						_121717_j++;
						goto _iter_begin_1c4d8bb1d;
					}
					_iter_end_1c4d8bb1d:;
				};
			}
			_iter_next_1c4d8aea2:;
			++it;
			_120513_i++;
			goto _iter_begin_1c4d8aea2;
		}
		_iter_end_1c4d8aea2:;
	};
	return _120254_ok;
}



inline jule::Bool _1c2b8bd4e_check_fn_decl_result_dup(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cc65b6_Fn>& _123644_f) {
	jule::Bool _123654_ok = jule::Bool();
	_123654_ok=true;
	if (_1c1cc6a17_is_void(_123644_f.ptr())) {
		return _123654_ok;
	};
	{
		auto &expr = _123644_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1c4d925d5:;
		if (it != expr.end()) {
			jule::I64 _124313_i = it - expr.begin();
			jule::Ptr<_205139176_Token> &_124316_v = *it;
			{
				if ((_20513b8c6_is_ignore_ident(_124316_v.get()._field_kind) || _20513bb6d_is_anon_ident(_124316_v.get()._field_kind))) {
					goto _iter_next_1c4d925d5;
				};
				{
					auto &expr = _123644_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1c4d938a0:;
					if (it != expr.end()) {
						jule::Ptr<_20514e235_GenericDecl> &_124820_g = *it;
						{
							if ((_124316_v.get()._field_kind == _124820_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c4d938a0:;
						++it;
						goto _iter_begin_1c4d938a0;
					}
					_iter_end_1c4d938a0:;
				};
				{
					auto &expr = _123644_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1c4d947a2:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc4c79_Param> &_125420_p = *it;
						{
							if ((_124316_v.get()._field_kind == _125420_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c4d947a2:;
						++it;
						goto _iter_begin_1c4d947a2;
					}
					_iter_end_1c4d947a2:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _123644_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1c4d95a28:;
					if (it != expr.end()) {
						jule::I64 _126217_j = it - expr.begin();
						jule::Ptr<_205139176_Token> &_126220_jv = *it;
						{
							{
								
								if ((_126217_j >= _124313_i)) {
									_case_begin_1c4d96430:;
									{
										goto _iter_end_1c4d95a28;
									}
								}
								else if ((_126220_jv.get()._field_kind == _124316_v.get()._field_kind)) {
									_case_begin_1c4d964a7:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1c4d96320:;
							};
						}
						_iter_next_1c4d95a28:;
						++it;
						_126217_j++;
						goto _iter_begin_1c4d95a28;
					}
					_iter_end_1c4d95a28:;
				};
				goto _iter_next_1c4d925d5;
				_julec_label_exist:;
				_1c2b82905_push_err(&(*_self_), _124316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_124316_v.get()._field_kind)}));
				_1c2b82c24_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_123654_ok=false;
			}
			_iter_next_1c4d925d5:;
			++it;
			_124313_i++;
			goto _iter_begin_1c4d925d5;
		}
		_iter_end_1c4d925d5:;
	};
	return _123654_ok;
}



inline void _1c2b8c0d5_check_fn_decl_types(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _128144_f) {
	jule::Slice<jule::Ptr<_20514e235_GenericDecl>> _128217_generics = _128144_f.get()._field_generics;;
	if (((_128144_f.get()._field_owner != nullptr) && (_128144_f.get()._field_owner.get()._field_generics.len() != 0LL))) {
		_128217_generics=jule::append(_128217_generics,_128144_f.get()._field_owner.get()._field_generics);
	};
	{
		auto &expr = _128144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c4d9a6dc:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc4c79_Param> _128721_p = *it;
			{
				if ((!(_1c1cc53a6_is_self(_128721_p.ptr())))) {
					jule::Ptr<_1c2c1b131_TypeKind> _128925_kind = _1c2b884bb_build_non_generic_type_kind(_self_, _128721_p.get()._field_kind.get()._field_decl,_128217_generics);;
					_128721_p.get()._field_kind.get()._field_kind=_128925_kind;
				};
			}
			_iter_next_1c4d9a6dc:;
			++it;
			goto _iter_begin_1c4d9a6dc;
		}
		_iter_end_1c4d9a6dc:;
	};
	if ((!(_1c1cc6a17_is_void(_128144_f.ptr())))) {
		jule::Ptr<_1c2c1b131_TypeKind> _129521_kind = _1c2b884bb_build_non_generic_type_kind(_self_, _128144_f.get()._field_result.get()._field_kind.get()._field_decl,_128217_generics);;
		_128144_f.get()._field_result.get()._field_kind.get()._field_kind=_129521_kind;
	};
}



inline void _1c2b8c37c_check_fn_decl_prototype(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _130248_f) {
	if ((_130248_f.get()._field_exceptional && _130248_f.get()._field_cpp_linked)) {
		_1c2b82905_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_130248_f.get()._field_exceptional) {
		if (_1c1cc6ee0_is_entry_point(_130248_f.ptr())) {
			_1c2b82905_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1c1cc7254_is_init(_130248_f.ptr())) {
			_1c2b82905_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c2b8b6cd_check_decl_generics(_self_.ptr(), _130248_f.get()._field_generics)))) {
			_case_begin_1c4d9e23a:;
		}
		else if ((!(_1c2b8ba0d_check_fn_decl_params_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1c4d9e2b2:;
		}
		else if ((!(_1c2b8bd4e_check_fn_decl_result_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1c4da0912:;
		}
		_match_end_1c4d9e119:;
	};
	_1c2b8c0d5_check_fn_decl_types(_self_, _130248_f);
}



inline void _1c2b8c635_check_trait_decl_method(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _132548_f) {
	if (_20513b8c6_is_ignore_ident(_132548_f.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _132548_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c2b8c37c_check_fn_decl_prototype(_self_, _132548_f);
	_132548_f.get()._field_sema=_self_;
}



inline void _1c2b8c8dd_check_trait_decl_methods(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a137db_Trait>& _133449_t) {
	{
		auto &expr = _133449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4da44d7:;
		if (it != expr.end()) {
			jule::I64 _133514_i = it - expr.begin();
			jule::Ptr<_1c1cc65b6_Fn> _133521_f = *it;
			{
				_1c2b8c635_check_trait_decl_method(_self_, _133521_f);
				_133449_t.get()._field_mutable=(_133449_t.get()._field_mutable || _133521_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _133449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1c4da5c25:;
					if (it != expr.end()) {
						jule::I64 _134617_j = it - expr.begin();
						jule::Ptr<_1c1cc65b6_Fn> _134620_jf = *it;
						{
							{
								
								if ((_134617_j >= _133514_i)) {
									_case_begin_1c4da6b9e:;
									{
										goto _iter_end_1c4da5c25;
									}
								}
								else if ((_133521_f.get()._field_ident == _134620_jf.get()._field_ident)) {
									_case_begin_1c4da6c26:;
									{
										_1c2b82905_push_err(_self_.ptr(), _133521_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133521_f.get()._field_ident)}));
										_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1c4da5c25;
									}
								}
								_match_end_1c4da6a8e:;
							};
						}
						_iter_next_1c4da5c25:;
						++it;
						_134617_j++;
						goto _iter_begin_1c4da5c25;
					}
					_iter_end_1c4da5c25:;
				};
			}
			_iter_next_1c4da44d7:;
			++it;
			_133514_i++;
			goto _iter_begin_1c4da44d7;
		}
		_iter_end_1c4da44d7:;
	};
}



inline void _1c2b8cb74_check_trait_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a137db_Trait>& _136541_t) {
	if (_20513b8c6_is_ignore_ident(_136541_t.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2b8352c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_136541_t)),_136541_t.get()._field_ident,false)) {
		_1c2b82905_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136541_t.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c2b8c8dd_check_trait_decl_methods(_self_, _136541_t);
}



inline jule::Bool _1c2b8cdd8_check_trait_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	jule::Bool _137739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1c4dac248:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> _137821_t = *it;
			{
				_1c2b8cb74_check_trait_decl(_self_, _137821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_137739_ok = false;
					return _137739_ok;
				};
			}
			_iter_next_1c4dac248:;
			++it;
			goto _iter_begin_1c4dac248;
		}
		_iter_end_1c4dac248:;
	};
	_137739_ok = true;
	return _137739_ok;
}



inline jule::Bool _1c2b8d2b2_check_trait_impl_methods(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2a137db_Trait>& _138948_base, jule::Ptr<_1c2a16e71_Impl>& _138963_ipl) {
	jule::Bool _138977_ok = jule::Bool();
	_138977_ok=true;
	{
		auto &expr = _138963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4dae3c1:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> &_139116_f = *it;
			{
				if ((_1c2a14666_find_method(_138948_base.ptr(), _139116_f.get()._field_ident) == nullptr)) {
					_1c2b82905_push_err(&(*_self_), _139116_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_138948_base.get()._field_ident),jule::Any(_139116_f.get()._field_ident)}));
					_138977_ok=false;
				};
			}
			_iter_next_1c4dae3c1:;
			++it;
			goto _iter_begin_1c4dae3c1;
		}
		_iter_end_1c4dae3c1:;
	};
	return _138977_ok;
}



inline jule::Bool _1c2b8d67a_impl_to_struct(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _140039_dest, jule::Ptr<_1c2a16e71_Impl>& _140059_ipl) {
	jule::Bool _140073_ok = jule::Bool();
	_140073_ok=true;
	{
		auto &expr = _140059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4db1db8:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _140421_f = *it;
			{
				if (((_1c1cb4a49_find_method(_140039_dest.ptr(), _140421_f.get()._field_ident,_140421_f.get()._field_statically) != nullptr) || (_1c1cb5165_find_field(_140039_dest.ptr(), _140421_f.get()._field_ident) != nullptr))) {
					_1c2b82905_push_err(_self_.ptr(), _140421_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_140039_dest.get()._field_ident),jule::Any(_140421_f.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1c4db1db8;
				};
				if (((_140039_dest.get()._field_generics.len() > 0LL) && (_140421_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _140421_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1c4db46e5:;
						if (it != expr.end()) {
							jule::Ptr<_20514e235_GenericDecl> _141224_fg = *it;
							{
								{
									auto &expr = _140039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1c4db4d99:;
									if (it != expr.end()) {
										jule::Ptr<_20514e235_GenericDecl> _141328_dg = *it;
										{
											if ((_141224_fg.get()._field_ident == _141328_dg.get()._field_ident)) {
												_1c2b82905_push_err(_self_.ptr(), _141224_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_140073_ok=false;
											};
										}
										_iter_next_1c4db4d99:;
										++it;
										goto _iter_begin_1c4db4d99;
									}
									_iter_end_1c4db4d99:;
								};
							}
							_iter_next_1c4db46e5:;
							++it;
							goto _iter_begin_1c4db46e5;
						}
						_iter_end_1c4db46e5:;
					};
				};
				_1c2b8384b_check_directives(_self_, _140421_f.get()._field_directives,jule::Any(_140421_f));
				_140421_f.get()._field_sema=_self_;
				_140421_f.get()._field_owner=_140039_dest;
				_140039_dest.get()._field_methods = jule::alloc_for_append(_140039_dest.get()._field_methods,1);_140039_dest.get()._field_methods.__push(_140421_f);;
			}
			_iter_next_1c4db1db8:;
			++it;
			goto _iter_begin_1c4db1db8;
		}
		_iter_end_1c4db1db8:;
	};
	{
		auto &expr = _140059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1c4db76c6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _142921_v = *it;
			{
				;
				if (((_1c1cb4a49_find_method(_140039_dest.ptr(), _142921_v.get()._field_ident,true) != nullptr) || (_1c1cb4d57_find_static(_140039_dest.ptr(), _142921_v.get()._field_ident) != nullptr))) {
					_1c2b82905_push_err(_self_.ptr(), _142921_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_140039_dest.get()._field_ident),jule::Any(_142921_v.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1c4db76c6;
				};
				_1c2b8e219_check_var_decl(_self_, _142921_v,jule::Trait<_1c2c3934c_Lookup>(_self_, 3));
				_1c2b93460_check_type_var(_self_, _142921_v,jule::Trait<_1c2c3934c_Lookup>(_self_, 3));
				_140039_dest.get()._field_statics = jule::alloc_for_append(_140039_dest.get()._field_statics,1);_140039_dest.get()._field_statics.__push(_142921_v);;
			}
			_iter_next_1c4db76c6:;
			++it;
			goto _iter_begin_1c4db76c6;
		}
		_iter_end_1c4db76c6:;
	};
	return _140073_ok;
}



inline void _1c2b8d900_impl_trait(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a16e71_Impl>& _144535_decl) {
	jule::Ptr<_1c2c1b131_TypeKind> _144617_base_t = _1c2b86a4c_select_type(_self_, _144535_decl.get()._field_base);;
	if ((_144617_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2a137db_Trait> _145017_base = _1c2c2449c_trt(_144617_base_t.ptr());;
	if ((_145017_base == nullptr)) {
		_1c2b82905_push_err(_self_.ptr(), _144535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_144617_base_t.ptr()))}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _145717_dest_t = _1c2b86a4c_select_type(_self_, _144535_decl.get()._field_dest);;
	if ((_145717_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _146117_dest_s = _1c2c24238_strct(_145717_dest_t.ptr());;
	if ((_146117_dest_s == nullptr)) {
		_1c2b82905_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_145717_dest_t.ptr()))}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c1cb3e55_Struct> _146817_dest = _146117_dest_s.get()._field_decl;;
	if ((_20513ee5c_dir(_146817_dest.get()._field_token.get()._field_file.ptr()) != _20513ee5c_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1c2b82905_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_145017_base.get()._field_implemented = jule::alloc_for_append(_145017_base.get()._field_implemented,1);_145017_base.get()._field_implemented.__push(_146817_dest);;
	_146817_dest.get()._field_implements = jule::alloc_for_append(_146817_dest.get()._field_implements,1);_146817_dest.get()._field_implements.__push(_145017_base);;
	if ((_144535_decl.get()._field_statics.len() > 0LL)) {
		_1c2b82905_push_err(_self_.ptr(), _144535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c2b8d2b2_check_trait_impl_methods(_self_.ptr(), _145017_base,_144535_decl)))) {
			_case_begin_1c4dc2c97:;
			{
				return;;
			}
		}
		else if ((!(_1c2b8d67a_impl_to_struct(_self_, _146817_dest,_144535_decl)))) {
			_case_begin_1c4dc2d0d:;
			{
				return;;
			}
		}
		_match_end_1c4dc2a33:;
	};
}



inline void _1c2b8db75_impl_struct(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a16e71_Impl>& _149036_decl) {
	jule::Ptr<_1c2c1b131_TypeKind> _149117_dest_t = _1c2b86a4c_select_type(_self_, _149036_decl.get()._field_dest);;
	if ((_149117_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _149517_dest_s = _1c2c24238_strct(_149117_dest_t.ptr());;
	if ((_149517_dest_s == nullptr)) {
		_1c2b82905_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_149117_dest_t.ptr()))}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c1cb3e55_Struct> _150217_dest = _149517_dest_s.get()._field_decl;;
	if ((_20513ee5c_dir(_150217_dest.get()._field_token.get()._field_file.ptr()) != _20513ee5c_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1c2b82905_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c2b8d67a_impl_to_struct(_self_, _150217_dest,_149036_decl)))) {
			_case_begin_1c4dc530a:;
			{
				return;;
			}
		}
		_match_end_1c4dc7681:;
	};
}



inline void _1c2b8ddea_impl_impl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2a16e71_Impl>& _151534_decl) {
	{
		
		if (_1c2a1736c_is_trait_impl(_151534_decl.ptr())) {
			_case_begin_1c4dc8bd2:;
			{
				_1c2b8d900_impl_trait(_self_, _151534_decl);
			}
		}
		else if (_1c2a175d1_is_struct_impl(_151534_decl.ptr())) {
			_case_begin_1c4dc8c59:;
			{
				_1c2b8db75_impl_struct(_self_, _151534_decl);
			}
		}
		_match_end_1c4dc8ac2:;
	};
}



inline void _1c2b8e219_check_var_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2b9a4de_Var>& _152639_decl, jule::Trait<_1c2c3934c_Lookup> _152655_l) {
	if (_20513b8c6_is_ignore_ident(_152639_decl.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1c2b9ab0a_is_type_inferred(_152639_decl.ptr())) {
		if ((!(_1c2b9a896_is_initialized(_152639_decl.ptr())))) {
			_1c2b82905_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1c2b86046_check_type(_self_, _152639_decl.get()._field_kind,_152655_l);
	};
	if ((_152639_decl.get()._field_constant && _152639_decl.get()._field_reference)) {
		_1c2b82905_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1c2b9a896_is_initialized(_152639_decl.ptr())))) {
		if (_152639_decl.get()._field_constant) {
			_1c2b82905_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_statically) {
			_1c2b82905_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_reference) {
			_1c2b82905_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1c2b8e48e_check_global_var_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2b9a4de_Var>& _156046_decl) {
	if (_1c2b8352c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_156046_decl)),_156046_decl.get()._field_ident,_156046_decl.get()._field_cpp_linked)) {
		_1c2b82905_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_156046_decl.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_156046_decl.get()._field_cpp_linked && _156046_decl.get()._field_constant)) {
		_1c2b82905_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_156046_decl.get()._field_cpp_linked)) && (!(_156046_decl.get()._field_constant))) && (!(_156046_decl.get()._field_statically)))) {
		_1c2b82905_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1c2b8384b_check_directives(_self_, _156046_decl.get()._field_directives,jule::Any(_156046_decl));
	_1c2b8e219_check_var_decl(_self_, _156046_decl,jule::Trait<_1c2c3934c_Lookup>(_self_, 3));
}



inline jule::Bool _1c2b8e703_check_global_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	jule::Bool _157940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1c4ddab5b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _158021_decl = *it;
			{
				_1c2b8e48e_check_global_var_decl(_self_, _158021_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_157940_ok = false;
					return _157940_ok;
				};
			}
			_iter_next_1c4ddab5b:;
			++it;
			goto _iter_begin_1c4ddab5b;
		}
		_iter_end_1c4ddab5b:;
	};
	_157940_ok = true;
	return _157940_ok;
}



inline jule::Bool _1c2b8eacc_check_struct_trait_impl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _159148_strct, jule::Ptr<_1c2a137db_Trait>& _159169_trt) {
	jule::Bool _159184_ok = jule::Bool();
	{
		auto &expr = _159169_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4ddcbd5:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _159221_tf = *it;
			{
				jule::Bool _159321_exist = false;;
				jule::Ptr<_1c1cc65b6_Fn> _159421_sf = _1c1cb4a49_find_method(_159148_strct.ptr(), _159221_tf.get()._field_ident,_159221_tf.get()._field_statically);;
				jule::Ptr<_1c1cc9762_FnIns> _159517_tf_k = _1c2b88ab5_get_trait_check_fn_kind(_self_, _159221_tf);;
				if ((_159421_sf != nullptr)) {
					jule::Ptr<_1c1cc9762_FnIns> _159725_sf_k = _1c2b88ab5_get_trait_check_fn_kind(_self_, _159421_sf);;
					_159321_exist=(((_159517_tf_k.get()._field_decl.get()._field_public == _159725_sf_k.get()._field_decl.get()._field_public) && (_159517_tf_k.get()._field_decl.get()._field_ident == _159725_sf_k.get()._field_decl.get()._field_ident)) && _1c1cc9dd3_equals(_159517_tf_k, jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_159725_sf_k, 1)})));
				};
				if (_159321_exist) {
					jule::Ptr<_204ec174a_Directive> _160321_d = _1c2c15c74_find_directive(_159421_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_160321_d != nullptr)) {
						_1c2b82905_push_err(_self_.ptr(), _160321_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_159184_ok=false;
				} else {
					;
					jule::Str _161025_s = _1c1ccad6d_get_kind_str(_159517_tf_k.ptr(), true);;
					if (_159221_tf.get()._field_public) {
						(_161025_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1c2b82905_push_err(_self_.ptr(), _159148_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_159169_trt.get()._field_ident),jule::Any(_161025_s)}));
					_159184_ok=false;
				};
			}
			_iter_next_1c4ddcbd5:;
			++it;
			goto _iter_begin_1c4ddcbd5;
		}
		_iter_end_1c4ddcbd5:;
	};
	return _159184_ok;
}



inline jule::Bool _1c2b8edeb_check_struct_impls(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _162143_s) {
	jule::Bool _162157_ok = jule::Bool();
	_162157_ok=true;
	{
		auto &expr = _162143_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1c4de4bcb:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> _162321_trt = *it;
			{
				_162157_ok=(_1c2b8eacc_check_struct_trait_impl(_self_, _162143_s,_162321_trt) && _162157_ok);
			}
			_iter_next_1c4de4bcb:;
			++it;
			goto _iter_begin_1c4de4bcb;
		}
		_iter_end_1c4de4bcb:;
	};
	return _162157_ok;
}



inline jule::Bool _1c2b90209_check_struct_fields(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _162944_st) {
	jule::Bool _162959_ok = jule::Bool();
	_162959_ok=true;
	jule::Ptr<_1c2c30585_TypeChecker> _163217_tc = jule::new_ptr<_1c2c30585_TypeChecker>(_1c2c30585_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2c3934c_Lookup>(_self_, 3), ._field_ignore_generics=_162944_st.get()._field_generics, ._field_referencer=jule::new_ptr<_1c2c2e908_Referencer>(_1c2c2e908_Referencer{._field_ident=_162944_st.get()._field_ident, ._field_owner=jule::Any(_162944_st)})});;
	jule::I64 _164213_n = _162944_st.get()._field_instances.len();;
	{
		auto &expr = _162944_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1c4de74c5:;
		if (it != expr.end()) {
			jule::Ptr<_1c1c07382_Field> _164321_f = *it;
			{
				_164321_f.get()._field_owner=_162944_st;
				_164321_f.get()._field_kind.get()._field_kind=_1c2c36b96_check_decl(_163217_tc.ptr(), _164321_f.get()._field_kind.get()._field_decl);
				_162959_ok=((_164321_f.get()._field_kind.get()._field_kind != nullptr) && _162959_ok);
				{
					auto &expr = _162944_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1c4de8bd0:;
					if (it != expr.end()) {
						jule::Ptr<_1c1c07382_Field> _164820_cf = *it;
						{
							if ((_164321_f == _164820_cf)) {
								goto _iter_end_1c4de8bd0;
							} else if ((_164321_f.get()._field_ident == _164820_cf.get()._field_ident)) {
								_1c2b82905_push_err(_self_.ptr(), _164321_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_164321_f.get()._field_ident)}));
								_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_162959_ok=false;
							};
						}
						_iter_next_1c4de8bd0:;
						++it;
						goto _iter_begin_1c4de8bd0;
					}
					_iter_end_1c4de8bd0:;
				};
			}
			_iter_next_1c4de74c5:;
			++it;
			goto _iter_begin_1c4de74c5;
		}
		_iter_end_1c4de74c5:;
	};
	if ((_162959_ok && (_164213_n != _162944_st.get()._field_instances.len()))) {
		_163217_tc.get()._field_referencer=nullptr;
		_162944_st.get()._field_instances=_162944_st.get()._field_instances.slice(0LL,_164213_n);
		{
			auto &expr = _162944_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1c4deae9b:;
			if (it != expr.end()) {
				jule::Ptr<_1c1c07382_Field> _166325_f = *it;
				{
					_166325_f.get()._field_kind.get()._field_kind=_1c2c36b96_check_decl(_163217_tc.ptr(), _166325_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_1c4deae9b:;
				++it;
				goto _iter_begin_1c4deae9b;
			}
			_iter_end_1c4deae9b:;
		};
	};
	return _162959_ok;
}



inline jule::Bool _1c2b90539_check_struct_decl_methods(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _167150_s) {
	jule::Bool _167164_ok = jule::Bool();
	{
		auto &expr = _167150_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4deca08:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _167221_m = *it;
			{
				_1c2b8c0d5_check_fn_decl_types(_self_, _167221_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167164_ok = false;
					return _167164_ok;
				};
			}
			_iter_next_1c4deca08:;
			++it;
			goto _iter_begin_1c4deca08;
		}
		_iter_end_1c4deca08:;
	};
	_167164_ok = true;
	return _167164_ok;
}



inline void _1c2b907c0_check_struct_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _168142_s) {
	if (_20513b8c6_is_ignore_ident(_168142_s.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2b8352c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_168142_s)),_168142_s.get()._field_ident,_168142_s.get()._field_cpp_linked)) {
		_1c2b82905_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_168142_s.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c2b8384b_check_directives(_self_, _168142_s.get()._field_directives,jule::Any(_168142_s));
	_168142_s.get()._field_sema=_self_;
	{
		
		if ((!(_1c2b8b6cd_check_decl_generics(_self_.ptr(), _168142_s.get()._field_generics)))) {
			_case_begin_1c4e01e2a:;
		}
		else if ((!(_1c2b90209_check_struct_fields(_self_, _168142_s)))) {
			_case_begin_1c4e01e91:;
		}
		else if ((!(_1c2b90539_check_struct_decl_methods(_self_, _168142_s)))) {
			_case_begin_1c4e02007:;
		}
		else if ((!(_1c2b8edeb_check_struct_impls(_self_, _168142_s)))) {
			_case_begin_1c4e0206d:;
		}
		_match_end_1c4e01ba5:;
	};
}



inline jule::Bool _1c2b90a34_check_struct_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	jule::Bool _170140_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1c4e040a3:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _170221_s = *it;
			{
				_1c2b907c0_check_struct_decl(_self_, _170221_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_170140_ok = false;
					return _170140_ok;
				};
			}
			_iter_next_1c4e040a3:;
			++it;
			goto _iter_begin_1c4e040a3;
		}
		_iter_end_1c4e040a3:;
	};
	_170140_ok = true;
	return _170140_ok;
}



inline void _1c2b90ca9_check_fn_decl(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _171438_f) {
	if (_20513b8c6_is_ignore_ident(_171438_f.get()._field_ident)) {
		_1c2b82905_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c2b8384b_check_directives(_self_, _171438_f.get()._field_directives,jule::Any(_171438_f));
	_171438_f.get()._field_sema=_self_;
	_1c2b8c37c_check_fn_decl_prototype(_self_, _171438_f);
	if (_1c2b8352c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_171438_f)),_171438_f.get()._field_ident,_171438_f.get()._field_cpp_linked)) {
		if ((_171438_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1c1cc65b6_Fn> _172621_init = _1c2b817c2_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_172621_init != nullptr)) {
				return;;
			};
		};
		_1c2b82905_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_171438_f.get()._field_ident)}));
		_1c2b82c24_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c2b9101d_check_fn_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	jule::Bool _173736_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c4e0a252:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _173821_f = *it;
			{
				_1c2b90ca9_check_fn_decl(_self_, _173821_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_173736_ok = false;
					return _173736_ok;
				};
			}
			_iter_next_1c4e0a252:;
			++it;
			goto _iter_begin_1c4e0a252;
		}
		_iter_end_1c4e0a252:;
	};
	_173736_ok = true;
	return _173736_ok;
}



inline void _1c2b913d6_push_cycle_error(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cb3e55_Struct>& _174932_st1, jule::Ptr<_1c1cb3e55_Struct>& _174947_st2, jule::Str& _174966_message) {
	;
	jule::Str _175213_refers_to = _2046db6b3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_174932_st1.get()._field_ident),jule::Any(_174947_st2.get()._field_ident)}));;
	(_174966_message).buffer.insert(0, (((_204c21b2c_repeat(jule::Str(" ", 1),4LL) + _175213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c2b91837_check_cross_cycle(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cb3e55_Struct>& _175633_st1, jule::Ptr<_1c1cb3e55_Struct>& _175648_st2, jule::Str& _175667_message) {
	{
		auto &expr = _175648_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1c4e0e487:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> &_175716_u = *it;
			{
				if ((_175716_u == _175633_st1)) {
					_1c2b913d6_push_cycle_error(&(*_self_), _175648_st2,_175716_u,_175667_message);
					return false;
				};
				if ((!(_1c2b91837_check_cross_cycle(&(*_self_), _175633_st1,_175716_u,_175667_message)))) {
					_1c2b913d6_push_cycle_error(&(*_self_), _175648_st2,_175716_u,_175667_message);
					return false;
				};
			}
			_iter_next_1c4e0e487:;
			++it;
			goto _iter_begin_1c4e0e487;
		}
		_iter_end_1c4e0e487:;
	};
	return true;
}



inline jule::Bool _1c2b91cbb_check_struct_derive_illegal_cycles(_1c2b7eeda_Sema* _self_, jule::Str _177253_derive, jule::Ptr<_1c1cb3e55_Struct>& _177267_st1, jule::Ptr<_1c2c1b131_TypeKind>& _177286_k) {
	jule::Bool _1772102_ok = jule::Bool();
	jule::Ptr<_1c1cb3e55_Struct> _177317_st2 = _1c2c2e298_get_struct_from_kind(_177286_k);;
	if ((_177317_st2 == nullptr)) {
		_1772102_ok = true;
		return _1772102_ok;
	};
	if ((_177267_st1 == _177317_st2)) {
		_1c2b82905_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_177253_derive),jule::Any(_177267_st1.get()._field_ident)}));
		_1772102_ok = false;
		return _1772102_ok;
	};
	jule::Str _178517_message = jule::Str();;
	if ((!(_1c2b91837_check_cross_cycle(&(*_self_), _177267_st1,_177317_st2,_178517_message)))) {
		jule::Str _178821_err_msg = _178517_message;;
		_178517_message=jule::Str();
		_1c2b913d6_push_cycle_error(&(*_self_), _177267_st1,_177317_st2,_178517_message);
		_178821_err_msg=(_178821_err_msg + _178517_message);
		_1c2b82905_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_177253_derive),jule::Any(_178821_err_msg)}));
		_1772102_ok = false;
		return _1772102_ok;
	};
	_1772102_ok = true;
	return _1772102_ok;
}



inline jule::Bool _1c2b920eb_check_struct_ins_derive_clone(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cb6ad4_StructIns> _179952_st) {
	jule::Bool _179970_ok = jule::Bool();
	if ((!(_1c1cb5781_is_derives(_179952_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_179970_ok = true;
		return _179970_ok;
	};
	{
		auto &expr = _179952_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1c4e16b87:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6276_FieldIns> _180421_f = *it;
			{
				if ((_180421_f.get()._field_kind == nullptr)) {
					goto _iter_next_1c4e16b87;
				};
				if ((!(_1c2c1cc15_supports_cloning(_180421_f.get()._field_kind.ptr())))) {
					_1c2b82905_push_err(&(*_self_), _179952_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_180421_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_179970_ok = false;
					return _179970_ok;
				};
				if ((!(_1c2b91cbb_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_179952_st.get()._field_decl,_180421_f.get()._field_kind)))) {
					_179970_ok = false;
					return _179970_ok;
				};
			}
			_iter_next_1c4e16b87:;
			++it;
			goto _iter_begin_1c4e16b87;
		}
		_iter_end_1c4e16b87:;
	};
	_179970_ok = true;
	return _179970_ok;
}



inline jule::Bool _1c2b9243c_check_struct_derive_clone(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cb3e55_Struct>& _182249_st) {
	return _1c2b920eb_check_struct_ins_derive_clone(&(*_self_), _1c1cb4384_instance(_182249_st));
}



inline jule::Bool _1c2b926b2_check_file_derives(_1c2b7eeda_Sema* _self_) {
	jule::Bool _182639_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1c4e1b021:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _182821_st = *it;
			{
				_182639_ok=_1c2b9243c_check_struct_derive_clone(&(*_self_), _182821_st);
				if ((!(_182639_ok))) {
					goto _iter_end_1c4e1b021;
				};
			}
			_iter_next_1c4e1b021:;
			++it;
			goto _iter_begin_1c4e1b021;
		}
		_iter_end_1c4e1b021:;
	};
	return _182639_ok;
}



inline void _1c2b9288d_check_package_derives(_1c2b7eeda_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e1c1a9:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _183921_f = *it;
			{
				_1c2b8253c_set_current_file(&(*_self_), _183921_f);
				jule::Bool _184117_ok = _1c2b926b2_check_file_derives(&(*_self_));;
				if ((!(_184117_ok))) {
					return;;
				};
			}
			_iter_next_1c4e1c1a9:;
			++it;
			goto _iter_begin_1c4e1c1a9;
		}
		_iter_end_1c4e1c1a9:;
	};
}



inline void _1c2b92a69_check_package_decls(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e1d881:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _185121_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _185121_f);
				if ((!(_1c2b8a666_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c4e1d881:;
			++it;
			goto _iter_begin_1c4e1d881;
		}
		_iter_end_1c4e1d881:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e1e475:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _185821_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _185821_f);
				if ((!(_1c2b8cdd8_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c4e1e475:;
			++it;
			goto _iter_begin_1c4e1e475;
		}
		_iter_end_1c4e1e475:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e1e794:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _186521_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _186521_f);
				if ((!(_1c2b8e703_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c4e1e794:;
			++it;
			goto _iter_begin_1c4e1e794;
		}
		_iter_end_1c4e1e794:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e21004:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _187221_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _187221_f);
				if ((!(_1c2b9101d_check_fn_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c4e21004:;
			++it;
			goto _iter_begin_1c4e21004;
		}
		_iter_end_1c4e21004:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e212bd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _187921_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _187921_f);
				if ((!(_1c2b90a34_check_struct_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c4e212bd:;
			++it;
			goto _iter_begin_1c4e212bd;
		}
		_iter_end_1c4e212bd:;
	};
	_1c2b9288d_check_package_derives(_self_.ptr());
}



inline void _1c2b92daa_check_data_for_type_inference(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c2be1ca5_Data>& _188949_d, jule::Ptr<_205139176_Token>& _188960_err_token) {
	{
		
		if (_1c2be2190_is_nil(_188949_d.ptr())) {
			_case_begin_1c4e23bd8:;
			{
				_1c2b82905_push_err(&(*_self_), _188960_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1c2be2404_is_void(_188949_d.ptr())) {
			_case_begin_1c4e23c60:;
			{
				_1c2b82905_push_err(&(*_self_), _188960_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_188949_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1c4e23cd7:;
			{
				_1c2b82905_push_err(&(*_self_), _188960_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4e23ac8:;
	};
}



inline void _1c2b93141_check_var(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2b9a4de_Var>& _190034_v) {
	if (_190034_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1c2b9ab0a_is_type_inferred(_190034_v.ptr())) {
		_190034_v.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_190034_v.get()._field_value.get()._field_data.get()._field_kind});
		_1c2b92daa_check_data_for_type_inference(_self_.ptr(), _190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1c2c2b806_Arr> _191121_arr = _1c2c239eb_arr(_190034_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_191121_arr != nullptr)) {
			if (_191121_arr.get()._field_auto) {
				jule::Ptr<_1c2c2b806_Arr> _191425_data_arr = _1c2c239eb_arr(_190034_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_191425_data_arr != nullptr)) {
					_191121_arr.get()._field_n=_191425_data_arr.get()._field_n;
				};
			};
		};
		_1c2b87b5d_check_assign_type(_self_, _190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_190034_v.get()._field_reference && (!(_1c2c2d61b_is_valid_for_ref(_190034_v.get()._field_kind.get()._field_kind))))) {
		_1c2b82905_push_err(_self_.ptr(), _190034_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_190034_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1c2b89962_check_validity_for_init_expr(_self_, _190034_v.get()._field_mutable,_190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_190034_v.get()._field_constant) {
		if ((!(_1c2be2668_is_const(_190034_v.get()._field_value.get()._field_data.ptr())))) {
			_1c2b82905_push_err(_self_.ptr(), _190034_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_190034_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1c2c24975_tup(_190034_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_190034_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1c2b93460_check_type_var(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c2b9a4de_Var>& _194939_decl, jule::Trait<_1c2c3934c_Lookup> _194955_l) {
	if ((_194939_decl.get()._field_cpp_linked || (!(_1c2b9a896_is_initialized(_194939_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c2be3823_Eval> _195417_eval = nullptr;;
	if ((_194939_decl.get()._field_kind != nullptr)) {
		_195417_eval=_1c2b86e9d_evalpd(_self_, _194955_l,_194939_decl.get()._field_kind.get()._field_kind,_194939_decl);
	} else {
		_195417_eval=_1c2b86e9d_evalpd(_self_, _194955_l,nullptr,_194939_decl);
	};
	_195417_eval.get()._field_immutable=(!(_194939_decl.get()._field_mutable));
	_194939_decl.get()._field_value.get()._field_data=_1c2c0ced0_eval_expr(_195417_eval, _194939_decl.get()._field_value.get()._field_expr);
	if ((_194939_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1c2b93141_check_var(_self_, _194939_decl);
}



inline void _1c2b9363b_check_global_types(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1c4e337ca:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _197121_decl = *it;
			{
				if (((_1c2b9a896_is_initialized(_197121_decl.ptr()) && (_197121_decl.get()._field_value.get()._field_data == nullptr)) || (_1c2b9ab0a_is_type_inferred(_197121_decl.ptr()) && (_197121_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1c2b93460_check_type_var(_self_, _197121_decl,jule::Trait<_1c2c3934c_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c4e337ca:;
			++it;
			goto _iter_begin_1c4e337ca;
		}
		_iter_end_1c4e337ca:;
	};
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c2b939e3_ready_to_check_fn(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _198142_s, jule::Ptr<_1c1cc65b6_Fn>& _198162_f) {
	jule::Ptr<_1c1cc9762_FnIns> _198217_ins = _1c1cc8211_instance(_198162_f);;
	if ((_198162_f.get()._field_instances.len() != 0LL)) {
		return _198217_ins;
	};
	_198217_ins.get()._field_owner=_198142_s;
	_1c1cc851e_append_instance(_198162_f.ptr(), _198217_ins);
	_1c2b88dd4_reload_fn_ins_types(_self_, _198217_ins);
	_198217_ins.get()._field_reloaded=true;
	return _198217_ins;
}



inline void _1c2b93d12_check_type_method(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _199342_s, jule::Ptr<_1c1cc65b6_Fn>& _199362_f) {
	if (_199362_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_199362_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	_1c2b939e3_ready_to_check_fn(_self_, _199342_s,_199362_f);
	{
		auto &expr = _199362_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c4e3944b:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc9762_FnIns> _200421_ins = *it;
			{
				if ((_200421_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1c4e3944b;
				};
				_1c2b96067_check_fn_ins(_self_, _200421_ins);
			}
			_iter_next_1c4e3944b:;
			++it;
			goto _iter_begin_1c4e3944b;
		}
		_iter_end_1c4e3944b:;
	};
}



inline void _1c2b94087_check_field_defaults(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _201345_ins) {
	jule::Ptr<_1c2be3823_Eval> _201417_eval = _1c2b87663_eval(_self_, jule::Trait<_1c2c3934c_Lookup>(_self_, 3));;
	{
		auto &expr = _201345_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1c4e3b78e:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6276_FieldIns> _201521_f = *it;
			{
				if ((_201521_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1c4e3b78e;
				};
				_201417_eval.get()._field_prefix=_201521_f.get()._field_kind;
				_201417_eval.get()._field_field=_201521_f;
				_201521_f.get()._field_default=_1c2c0ced0_eval_expr(_201417_eval, _201521_f.get()._field_decl.get()._field_default);
				if ((_201521_f.get()._field_default == nullptr)) {
					goto _iter_next_1c4e3b78e;
				};
				;
				_1c2b87b5d_check_assign_type(_self_, false,_201521_f.get()._field_kind,_201521_f.get()._field_default,_201521_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1c4e3b78e:;
			++it;
			goto _iter_begin_1c4e3b78e;
		}
		_iter_end_1c4e3b78e:;
	};
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c2b944d8_check_struct_ins_op(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _203544_s, jule::Ptr<_1c1cc65b6_Fn>& _203564_f, jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)> _203572_p) {
	if (((_203564_f == nullptr) || (_203564_f.get()._field_generics.len() > 0LL))) {
		return nullptr;
	};
	jule::Ptr<_1c1cc9762_FnIns> _203917_ins = _1c2b939e3_ready_to_check_fn(_self_, _203544_s,_203564_f);;
	if (_203572_p(_203564_f)) {
		return _203917_ins;
	};
	return nullptr;
}



inline void _1c2b9475d_check_struct_ins(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _204641_s) {
	_1c2b94087_check_field_defaults(_self_, _204641_s);
	{
		auto &expr = _204641_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4e42bb3:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _204821_f = *it;
			{
				_1c2b93d12_check_type_method(_self_, _204641_s,_204821_f);
			}
			_iter_next_1c4e42bb3:;
			++it;
			goto _iter_begin_1c4e42bb3;
		}
		_iter_end_1c4e42bb3:;
	};
}



inline void _1c2b949d3_check_type_struct(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _205342_s) {
	if (_205342_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_205342_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_205342_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1c1cb6ad4_StructIns> _206421_ins = _1c1cb4384_instance(_205342_s);;
		_206421_ins.get()._field_checked=true;
		_1c1cb4692_append_instance(_205342_s.ptr(), _206421_ins);
	};
	{
		auto &expr = _205342_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c4e45820:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _206921_ins = *it;
			{
				_1c2b9475d_check_struct_ins(_self_, _206921_ins);
			}
			_iter_next_1c4e45820:;
			++it;
			goto _iter_begin_1c4e45820;
		}
		_iter_end_1c4e45820:;
	};
}



inline void _1c2b94bae_check_struct_types(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1c4e46942:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _207521_s = *it;
			{
				_1c2b949d3_check_type_struct(_self_, _207521_s);
			}
			_iter_next_1c4e46942:;
			++it;
			goto _iter_begin_1c4e46942;
		}
		_iter_end_1c4e46942:;
	};
}



inline void _1c2b94e56_check_struct_ins_operators(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb6ad4_StructIns> _208050_s) {
	{
		auto &expr = _208050_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4e47bc9:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _208121_m = *it;
			{
				{
					auto &_match_expr{ _208121_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1c4e481c4:;
						{
							_208050_s.get()._field_operators._field_eq=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _208468_f) mutable -> jule::Bool {
								return static__1c2b9bee6_eq(_208468_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1c4e48713:;
						{
							_208050_s.get()._field_operators._field_gt=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _208668_f) mutable -> jule::Bool {
								return static__1c2b9c28d_gt(_208668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1c4e48779:;
						{
							_208050_s.get()._field_operators._field_gt_eq=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _208871_f) mutable -> jule::Bool {
								return static__1c2b9c535_gt_eq(_208871_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1c4e487e0:;
						{
							_208050_s.get()._field_operators._field_lt=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _209068_f) mutable -> jule::Bool {
								return static__1c2b9c7cc_lt(_209068_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1c4e48856:;
						{
							_208050_s.get()._field_operators._field_lt_eq=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _209271_f) mutable -> jule::Bool {
								return static__1c2b9ca74_lt_eq(_209271_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1c4e488cd:;
						{
							_208050_s.get()._field_operators._field_shl=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _209469_f) mutable -> jule::Bool {
								return static__1c2b9d15c_shl(_209469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1c4e48955:;
						{
							_208050_s.get()._field_operators._field_shr=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _209669_f) mutable -> jule::Bool {
								return static__1c2b9d404_shr(_209669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1c4e489cc:;
						{
							_208050_s.get()._field_operators._field_add=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _209869_f) mutable -> jule::Bool {
								return static__1c2b9d69b_add(_209869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1c4e48a54:;
						{
							_208050_s.get()._field_operators._field_sub=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _210069_f) mutable -> jule::Bool {
								return static__1c2b9d943_sub(_210069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1c4e48acb:;
						{
							_208050_s.get()._field_operators._field_div=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _210269_f) mutable -> jule::Bool {
								return static__1c2b9dbda_div(_210269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1c4e48b53:;
						{
							_208050_s.get()._field_operators._field_mul=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _210469_f) mutable -> jule::Bool {
								return static__1c2b9de82_mul(_210469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1c4e48bca:;
						{
							_208050_s.get()._field_operators._field_mod=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _210669_f) mutable -> jule::Bool {
								return static__1c2b9e229_mod(_210669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1c4e48c52:;
						{
							_208050_s.get()._field_operators._field_bit_and=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _210873_f) mutable -> jule::Bool {
								return static__1c2b9e4c1_bit_and(_210873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1c4e48cc9:;
						{
							_208050_s.get()._field_operators._field_bit_or=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _211072_f) mutable -> jule::Bool {
								return static__1c2b9e768_bit_or(_211072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1c4e48d51:;
						{
							_208050_s.get()._field_operators._field_bit_xor=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _211273_f) mutable -> jule::Bool {
								return static__1c2b9ea10_bit_xor(_211273_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1c4e48dc8:;
						{
							_208050_s.get()._field_operators._field_neg=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _211469_f) mutable -> jule::Bool {
								return static__1c2ba00e8_neg(_211469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1c4e48e50:;
						{
							_208050_s.get()._field_operators._field_pos=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _211669_f) mutable -> jule::Bool {
								return static__1c2ba0390_pos(_211669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1c4e48ec7:;
						{
							_208050_s.get()._field_operators._field_bit_not=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _211873_f) mutable -> jule::Bool {
								return static__1c2ba0637_bit_not(_211873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1c4e4904e:;
						{
							_208050_s.get()._field_operators._field_add_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _212076_f) mutable -> jule::Bool {
								return static__1c2ba0c20_add_assign(_212076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1c4e490c6:;
						{
							_208050_s.get()._field_operators._field_sub_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _212276_f) mutable -> jule::Bool {
								return static__1c2ba0eb7_sub_assign(_212276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1c4e4914d:;
						{
							_208050_s.get()._field_operators._field_div_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _212476_f) mutable -> jule::Bool {
								return static__1c2ba125e_div_assign(_212476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1c4e491c5:;
						{
							_208050_s.get()._field_operators._field_mul_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _212676_f) mutable -> jule::Bool {
								return static__1c2ba1506_mul_assign(_212676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1c4e4924c:;
						{
							_208050_s.get()._field_operators._field_mod_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _212876_f) mutable -> jule::Bool {
								return static__1c2ba179d_mod_assign(_212876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1c4e492c4:;
						{
							_208050_s.get()._field_operators._field_shl_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _213076_f) mutable -> jule::Bool {
								return static__1c2ba1a45_shl_assign(_213076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1c4e4934b:;
						{
							_208050_s.get()._field_operators._field_shr_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _213276_f) mutable -> jule::Bool {
								return static__1c2ba1cdc_shr_assign(_213276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1c4e493c3:;
						{
							_208050_s.get()._field_operators._field_bit_or_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _213479_f) mutable -> jule::Bool {
								return static__1c2ba2084_bit_or_assign(_213479_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1c4e4944a:;
						{
							_208050_s.get()._field_operators._field_bit_and_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _213680_f) mutable -> jule::Bool {
								return static__1c2ba232b_bit_and_assign(_213680_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1c4e494c2:;
						{
							_208050_s.get()._field_operators._field_bit_xor_assign=_1c2b944d8_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1c1cc65b6_Fn>)>([=](jule::Ptr<_1c1cc65b6_Fn> _213880_f) mutable -> jule::Bool {
								return static__1c2ba25c3_bit_xor_assign(_213880_f);
							}));
						}
					}
					_match_end_1c4e48416:;
				};
			}
			_iter_next_1c4e47bc9:;
			++it;
			goto _iter_begin_1c4e47bc9;
		}
		_iter_end_1c4e47bc9:;
	};
}



inline void _1c2b9520e_check_type_struct_operators(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cb3e55_Struct>& _214352_s) {
	if (_214352_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_214352_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_214352_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1c1cb6ad4_StructIns> _215421_ins = _1c1cb4384_instance(_214352_s);;
		_215421_ins.get()._field_checked=true;
		_1c1cb4692_append_instance(_214352_s.ptr(), _215421_ins);
	};
	_1c2b94e56_check_struct_ins_operators(_self_, _214352_s.get()._field_instances[0LL]);
}



inline void _1c2b9541d_check_struct_types_operators(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1c4e758b6:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _216321_s = *it;
			{
				_1c2b9520e_check_type_struct_operators(_self_, _216321_s);
			}
			_iter_next_1c4e758b6:;
			++it;
			goto _iter_begin_1c4e758b6;
		}
		_iter_end_1c4e758b6:;
	};
}



inline void _1c2b956a4_check_rets(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cc9762_FnIns>& _216834_f) {
	if (_1c1cc6a17_is_void(_216834_f.get()._field_decl.ptr())) {
		return;;
	};
	_1c2b9784e_MissingRetChecker _217213_mrc = static__1c2b97c17_new();;
	jule::Bool _217313_ok = _1c2b98c29_check(&_217213_mrc, _216834_f.get()._field_scope);;
	if ((!(_217313_ok))) {
		_1c2b82905_push_err(&(*_self_), _216834_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1c2b959c3_check_fn_ins_sc(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cc9762_FnIns>& _217939_f, jule::Ptr<_1c2b6197d_ScopeChecker>& _217955_sc) {
	if (_217939_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1c2b7dc86_append_ret_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1c2b7e03e_append_param_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1c2b7e319_append_generic_type_aliases(_217955_sc.get()._field_table.get()._field_type_aliases,_217939_f);
	_1c2b70b02_check(_217955_sc, _217939_f.get()._field_decl.get()._field_scope,_217939_f.get()._field_scope);
	if ((!(_1c2b6340d_stopped(_217955_sc.ptr())))) {
		_1c2b956a4_check_rets(&(*_self_), _217939_f);
	};
}



inline void _1c2b95ce2_check_fn_ins_caller(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc9762_FnIns>& _219644_f, jule::Ptr<_205139176_Token> _219659_caller) {
	if (_219644_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1c2bdbbe5_SymbolTable> _220117_old = _219644_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c2b8253c_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220117_old);
	});;
	jule::Ptr<_1c2bdbbe5_SymbolTable> _220317_file = _1c2b7e66b_find_file(_219644_f.get()._field_decl.get()._field_sema.get()._field_files,_219644_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_220317_file != nullptr)) {
		_1c2b8253c_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220317_file);
	};
	jule::Ptr<_1c2b6197d_ScopeChecker> _220817_sc = _1c2adc079_new_scope_checker(_219644_f.get()._field_decl.get()._field_sema,_219644_f);;
	_220817_sc.get()._field_called_from=_219659_caller;
	_1c2b959c3_check_fn_ins_sc(_self_.ptr(), _219644_f,_220817_sc);
	if ((_219644_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_219644_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_219644_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1c2b96067_check_fn_ins(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc9762_FnIns>& _221837_f) {
	_1c2b95ce2_check_fn_ins_caller(_self_, _221837_f,nullptr);
}



inline void _1c2b962dc_check_type_fn(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _222238_f) {
	if (_222238_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_222238_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _222238_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c4e83b49:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc9762_FnIns> _223221_ins = *it;
			{
				_1c2b96067_check_fn_ins(_self_, _223221_ins);
			}
			_iter_next_1c4e83b49:;
			++it;
			goto _iter_begin_1c4e83b49;
		}
		_iter_end_1c4e83b49:;
	};
}



inline void _1c2b96562_check_test_fn(_1c2b7eeda_Sema* _self_, jule::Ptr<_1c1cc9762_FnIns>& _223737_f) {
	if (_223737_f.get()._field_decl.get()._field_public) {
		_1c2b82905_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_223737_f.get()._field_params.len() != 1LL) || (_223737_f.get()._field_result != nullptr))) {
		_1c2b82905_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2c28bee_Sptr> _225017_sptr = _1c2c232ae_sptr(_223737_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_225017_sptr == nullptr)) {
		_1c2b82905_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _225713_s = _1c2c24238_strct(_225017_sptr.get()._field_elem.ptr());;
	if (((_225713_s == nullptr) || (!(_1c2b7c26d_is_std_package(_225713_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1c2b82905_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c2b82c24_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c2b967d7_precheck_type_fn(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Ptr<_1c1cc65b6_Fn>& _226541_f) {
	if (_226541_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_226541_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_226541_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1c1cc9762_FnIns> _227621_ins = _1c1cc8211_instance(_226541_f);;
		_226541_f.get()._field_instances = jule::alloc_for_append(_226541_f.get()._field_instances,1);_226541_f.get()._field_instances.__push(_227621_ins);;
		_1c2b88dd4_reload_fn_ins_types(_self_, _227621_ins);
		_227621_ins.get()._field_reloaded=true;
		if (_1c2c1996a_has_directive(_226541_f.get()._field_directives,jule::Str("test", 4))) {
			_1c2b96562_check_test_fn(_self_.ptr(), _227621_ins);
		};
	};
}



inline void _1c2b969b3_precheck_fn_types(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1c4e8ed97:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> _228921_decl = *it;
			{
				{
					auto &expr = _228921_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1c4e905b2:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _229025_m = *it;
						{
							_1c2b967d7_precheck_type_fn(_self_, _229025_m);
						}
						_iter_next_1c4e905b2:;
						++it;
						goto _iter_begin_1c4e905b2;
					}
					_iter_end_1c4e905b2:;
				};
			}
			_iter_next_1c4e8ed97:;
			++it;
			goto _iter_begin_1c4e8ed97;
		}
		_iter_end_1c4e8ed97:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c4e9024e:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _229421_decl = *it;
			{
				_1c2b967d7_precheck_type_fn(_self_, _229421_decl);
			}
			_iter_next_1c4e9024e:;
			++it;
			goto _iter_begin_1c4e9024e;
		}
		_iter_end_1c4e9024e:;
	};
}



inline void _1c2b96b8e_check_fn_types(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c4e91bce:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _230121_decl = *it;
			{
				_1c2b962dc_check_type_fn(_self_, _230121_decl);
			}
			_iter_next_1c4e91bce:;
			++it;
			goto _iter_begin_1c4e91bce;
		}
		_iter_end_1c4e91bce:;
	};
}



inline void _1c2b96d6a_check_package_types(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e92b8b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _230921_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _230921_f);
				_1c2b9363b_check_global_types(_self_);
			}
			_iter_next_1c4e92b8b:;
			++it;
			goto _iter_begin_1c4e92b8b;
		}
		_iter_end_1c4e92b8b:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e936d6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _231421_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _231421_f);
				_1c2b969b3_precheck_fn_types(_self_);
			}
			_iter_next_1c4e936d6:;
			++it;
			goto _iter_begin_1c4e936d6;
		}
		_iter_end_1c4e936d6:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e92d67:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _232121_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _232121_f);
				_1c2b9541d_check_struct_types_operators(_self_);
			}
			_iter_next_1c4e92d67:;
			++it;
			goto _iter_begin_1c4e92d67;
		}
		_iter_end_1c4e92d67:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e946c6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _232521_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _232521_f);
				_1c2b94bae_check_struct_types(_self_);
			}
			_iter_next_1c4e946c6:;
			++it;
			goto _iter_begin_1c4e946c6;
		}
		_iter_end_1c4e946c6:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e959d5:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _233021_f = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _233021_f);
				_1c2b96b8e_check_fn_types(_self_);
			}
			_iter_next_1c4e959d5:;
			++it;
			goto _iter_begin_1c4e959d5;
		}
		_iter_end_1c4e959d5:;
	};
}



inline void _1c2b97046_set_file_sema_fields(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c4e96d8d:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _233721_f = *it;
			{
				_233721_f.get()._field_sema=_self_;
			}
			_iter_next_1c4e96d8d:;
			++it;
			goto _iter_begin_1c4e96d8d;
		}
		_iter_end_1c4e96d8d:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1c4e97168:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _234121_st = *it;
			{
				_234121_st.get()._field_sema=_self_;
			}
			_iter_next_1c4e97168:;
			++it;
			goto _iter_begin_1c4e97168;
		}
		_iter_end_1c4e97168:;
	};
}



inline void _1c2b97222_set_sema_fields(jule::Ptr<_1c2b7eeda_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c4e982e0:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _234721_file = *it;
			{
				_1c2b8253c_set_current_file(_self_.ptr(), _234721_file);
				_1c2b97046_set_file_sema_fields(_self_);
			}
			_iter_next_1c4e982e0:;
			++it;
			goto _iter_begin_1c4e982e0;
		}
		_iter_end_1c4e982e0:;
	};
}



inline void _1c2b97497_check(jule::Ptr<_1c2b7eeda_Sema> _self_, jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _235330_files) {
	_self_.get()._field_files=_235330_files;
	_1c2b851aa_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2b8573d_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2b97222_set_sema_fields(_self_);
	_1c2b85562_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2b92a69_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2b96d6a_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b7eeda_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1c2b9784e_MissingRetChecker static__1c2b97c17_new(void) {
	return _1c2b9784e_MissingRetChecker{._field_breaked=jule::Slice<jule::U64>::alloc(16LL)};
}



inline jule::Bool _1c2b97ee2_check_conditional(_1c2b9784e_MissingRetChecker* _self_, jule::Ptr<_1c2aed860_Conditional> _239936_c) {
	{
		auto &expr = _239936_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1c4e9d070:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b53ae6_If> _240021_elif = *it;
			{
				if ((_240021_elif == nullptr)) {
					return false;
				};
				if ((!(_1c2b9891b_check_scope(&(*_self_), _240021_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1c4e9d070:;
			++it;
			goto _iter_begin_1c4e9d070;
		}
		_iter_end_1c4e9d070:;
	};
	return ((_239936_c.get()._field_default != nullptr) && _1c2b9891b_check_scope(&(*_self_), _239936_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1c2b98300_check_match(_1c2b9784e_MissingRetChecker* _self_, jule::Ptr<_1c2b60ac0_Match> _241130_m) {
	{
		auto &expr = _241130_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c4ea0748:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b60edd_Case> _241221_c = *it;
			{
				if ((_241221_c == nullptr)) {
					return false;
				};
				jule::I64 _241617_n = (*_self_)._field_breaked.len();;
				jule::Bool _241717_ok = _1c2b9891b_check_scope(&(*_self_), _241221_c.get()._field_scope);;
				{
					
					if ((_241617_n != (*_self_)._field_breaked.len())) {
						_case_begin_1c4ea1e0e:;
						{
							return false;
						}
					}
					else if ((!(_241717_ok))) {
						_case_begin_1c4ea1e86:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1c4ea200d;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1c4ea200d:;
						{
							(*_self_)._field_falled=false;
							if ((_241221_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1c4ea0748;
						}
					}
					_match_end_1c4ea1d32:;
				};
			}
			_iter_next_1c4ea0748:;
			++it;
			goto _iter_begin_1c4ea0748;
		}
		_iter_end_1c4ea0748:;
	};
	return ((_241130_m.get()._field_default != nullptr) && _1c2b9891b_check_scope(&(*_self_), _241130_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1c2b9860d_check_inf_iter(_1c2b9784e_MissingRetChecker* _self_, jule::Ptr<_1c2b0e486_InfIter> _243733_it) {
	jule::I64 _243813_n = (*_self_)._field_breaked.len();;
	if (_1c2b9891b_check_scope(&(*_self_), _243733_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
		return true;
	};
	if ((_243813_n != (*_self_)._field_breaked.len())) {
		jule::U64 _244417_itaddr = static_cast<jule::U64>(_243733_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_243813_n);
			auto it = expr.begin();
			_iter_begin_1c4ea6155:;
			if (it != expr.end()) {
				jule::U64 _244520_addr = *it;
				{
					if ((_244417_itaddr == _244520_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
						return false;
					};
				}
				_iter_next_1c4ea6155:;
				++it;
				goto _iter_begin_1c4ea6155;
			}
			_iter_end_1c4ea6155:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
	};
	return true;
}



inline jule::Bool _1c2b9891b_check_scope(_1c2b9784e_MissingRetChecker* _self_, jule::Ptr<_1c2b4c1e9_Scope> _245630_s) {
	if ((_245630_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _245630_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1c4ea7530:;
		if (it != expr.end()) {
			jule::Any _246021_st = *it;
			{
				{
					auto &_match_expr{ _246021_st };
					
					if (_match_expr.type_is<jule::Ptr<_1c2b611ca_FallSt>>()) {
						_case_begin_1c4ea8212:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b5ee43_BreakSt>>()) {
						_case_begin_1c4ea8289:;
						{
							jule::U64 _246621_addr = _246021_st.operator jule::Ptr<_1c2b5ee43_BreakSt>().get()._field_it;;
							if ((_246621_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_246621_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b3c706_ContSt>>()) {
						_case_begin_1c4ea8300:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b0e486_InfIter>>()) {
						_case_begin_1c4ea8366:;
						{
							if (_1c2b9860d_check_inf_iter(&(*_self_), _246021_st.operator jule::Ptr<_1c2b0e486_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b613b7_RetSt>>()) {
						_case_begin_1c4ea83dd:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b4c1e9_Scope>>()) {
						_case_begin_1c4ea8465:;
						{
							if (_1c2b9891b_check_scope(&(*_self_), _246021_st.operator jule::Ptr<_1c2b4c1e9_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
						_case_begin_1c4ea84dc:;
						{
							{
								auto &_match_expr{ _246021_st.operator jule::Ptr<_1c2be1ca5_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>()) {
									_case_begin_1c4eabea2:;
									{
										return true;
									}
								}
								_match_end_1c4eabe4c:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2aed860_Conditional>>()) {
						_case_begin_1c4ea8564:;
						{
							if (_1c2b97ee2_check_conditional(&(*_self_), _246021_st.operator jule::Ptr<_1c2aed860_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2b60ac0_Match>>()) {
						_case_begin_1c4ea85db:;
						{
							if (_1c2b98300_check_match(&(*_self_), _246021_st.operator jule::Ptr<_1c2b60ac0_Match>())) {
								return true;
							};
						}
					}
					_match_end_1c4ea8102:;
				};
			}
			_iter_next_1c4ea7530:;
			++it;
			goto _iter_begin_1c4ea7530;
		}
		_iter_end_1c4ea7530:;
	};
	return false;
}



inline jule::Bool _1c2b98c29_check(_1c2b9784e_MissingRetChecker* _self_, jule::Ptr<_1c2b4c1e9_Scope> _250224_s) {
	return _1c2b9891b_check_scope(&(*_self_), _250224_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b9784e_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b99521_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2b9a896_is_initialized(_1c2b9a4de_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1c2b9ab0a_is_type_inferred(_1c2b9a4de_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b9a4de_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c2b9b666_dispose(jule::Ptr<_1c1cc65b6_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1c1cc6a17_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1c1cc561a_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1c2b9b90d_to_str(jule::Ptr<_1c1cc65b6_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1c1cc6a17_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1c1cc561a_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1c1cc9762_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1c2c256e0_Prim> _4113_prim = _1c2c2304a_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1c2c2869e_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1c2b9bc4e_logical(jule::Ptr<_1c1cc65b6_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1c1cc6a17_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1c1cc561a_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1c1cc9762_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1c2c256e0_Prim> _6713_prim = _1c2c2304a_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1c2c2843a_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1c2c24238_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1c2b9bee6_eq(jule::Ptr<_1c1cc65b6_Fn> _7522_f) {
	return static__1c2b9bc4e_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1c2b9c28d_gt(jule::Ptr<_1c1cc65b6_Fn> _8022_f) {
	return static__1c2b9bc4e_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1c2b9c535_gt_eq(jule::Ptr<_1c1cc65b6_Fn> _8525_f) {
	return static__1c2b9bc4e_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1c2b9c7cc_lt(jule::Ptr<_1c1cc65b6_Fn> _9022_f) {
	return static__1c2b9bc4e_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1c2b9ca74_lt_eq(jule::Ptr<_1c1cc65b6_Fn> _9525_f) {
	return static__1c2b9bc4e_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1c2b9cdb5_result(jule::Ptr<_1c1cc65b6_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1c1cc6a17_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1c1cc561a_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1c1cc9762_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1c2c24238_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1c2b9d15c_shl(jule::Ptr<_1c1cc65b6_Fn> _12223_f) {
	return static__1c2b9cdb5_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1c2b9d404_shr(jule::Ptr<_1c1cc65b6_Fn> _12723_f) {
	return static__1c2b9cdb5_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1c2b9d69b_add(jule::Ptr<_1c1cc65b6_Fn> _13223_f) {
	return static__1c2b9cdb5_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1c2b9d943_sub(jule::Ptr<_1c1cc65b6_Fn> _13723_f) {
	return static__1c2b9cdb5_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1c2b9dbda_div(jule::Ptr<_1c1cc65b6_Fn> _14223_f) {
	return static__1c2b9cdb5_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1c2b9de82_mul(jule::Ptr<_1c1cc65b6_Fn> _14723_f) {
	return static__1c2b9cdb5_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1c2b9e229_mod(jule::Ptr<_1c1cc65b6_Fn> _15223_f) {
	return static__1c2b9cdb5_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1c2b9e4c1_bit_and(jule::Ptr<_1c1cc65b6_Fn> _15727_f) {
	return static__1c2b9cdb5_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1c2b9e768_bit_or(jule::Ptr<_1c1cc65b6_Fn> _16226_f) {
	return static__1c2b9cdb5_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1c2b9ea10_bit_xor(jule::Ptr<_1c1cc65b6_Fn> _16727_f) {
	return static__1c2b9cdb5_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1c2b9ed51_unary(jule::Ptr<_1c1cc65b6_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1c1cc6a17_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1c1cc561a_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1c1cc9762_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1c2c24238_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1c2ba00e8_neg(jule::Ptr<_1c1cc65b6_Fn> _19223_f) {
	return static__1c2b9ed51_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1c2ba0390_pos(jule::Ptr<_1c1cc65b6_Fn> _19723_f) {
	return static__1c2b9ed51_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1c2ba0637_bit_not(jule::Ptr<_1c1cc65b6_Fn> _20227_f) {
	return static__1c2b9ed51_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1c2ba0978_assign(jule::Ptr<_1c1cc65b6_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1c1cc6a17_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1c1cc561a_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1c2ba0c20_add_assign(jule::Ptr<_1c1cc65b6_Fn> _22730_f) {
	return static__1c2ba0978_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1c2ba0eb7_sub_assign(jule::Ptr<_1c1cc65b6_Fn> _23230_f) {
	return static__1c2ba0978_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1c2ba125e_div_assign(jule::Ptr<_1c1cc65b6_Fn> _23730_f) {
	return static__1c2ba0978_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1c2ba1506_mul_assign(jule::Ptr<_1c1cc65b6_Fn> _24230_f) {
	return static__1c2ba0978_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1c2ba179d_mod_assign(jule::Ptr<_1c1cc65b6_Fn> _24730_f) {
	return static__1c2ba0978_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1c2ba1a45_shl_assign(jule::Ptr<_1c1cc65b6_Fn> _25230_f) {
	return static__1c2ba0978_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1c2ba1cdc_shr_assign(jule::Ptr<_1c1cc65b6_Fn> _25730_f) {
	return static__1c2ba0978_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1c2ba2084_bit_or_assign(jule::Ptr<_1c1cc65b6_Fn> _26233_f) {
	return static__1c2ba0978_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1c2ba232b_bit_and_assign(jule::Ptr<_1c1cc65b6_Fn> _26734_f) {
	return static__1c2ba0978_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1c2ba25c3_bit_xor_assign(jule::Ptr<_1c1cc65b6_Fn> _27234_f) {
	return static__1c2ba0978_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2b9aee5_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c2bcd28b_push_err(_1c2bccdc3_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1c2b82905_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1c2bcd500_check_trait(_1c2bccdc3_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1c2c1c000_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1c2a137db_Trait> _12613_trt = _1c2c2449c_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1c2c232ae_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c4edb91b:;
			{
				_12717_ref=true;
				(*_self_)._field_src=_1c2c232ae_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1c2c24238_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1c4edb9c6;
			}
		}
		else if ((_1c2c24238_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c4edb9c6:;
			{
				jule::Ptr<_1c1cb6ad4_StructIns> _13717_s = _1c2c24238_strct((*_self_)._field_src.ptr());;
				if ((!(_1c1cb5473_is_implements(_13717_s.get()._field_decl.ptr(), _12613_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12717_ref)) && _1c2bcb7c8_trait_has_reference_receiver(_12613_trt))) {
					_1c2bcd28b_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1c2c2449c_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c4edba3c:;
			{
				_12132_ok = (_12613_trt == _1c2c2449c_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1c4edb29a:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1c4edb234:;
	};
}



inline jule::Bool _1c2bcd764_check_ptr(_1c2bccdc3_TypeCompatibilityChecker* _self_) {
	jule::Bool _15530_ok = jule::Bool();
	if (_1c2c1c000_is_nil((*_self_)._field_src.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	jule::Ptr<_1c2c2c263_Ptr> _16017_dest = _1c2c23523_ptr((*_self_)._field_dest.ptr());;
	if (_1c2c2cc36_is_unsafe(_16017_dest.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	_15530_ok = _1c2c1b7e6_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15530_ok;
}



inline jule::Bool _1c2bcd9c8_check_prim(_1c2bccdc3_TypeCompatibilityChecker* _self_) {
	jule::Bool _16931_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1c2c256e0_Prim> _17117_prim = _1c2c2304a_prim((*_self_)._field_dest.ptr());;
		if (((_17117_prim != nullptr) && _1c2c28913_is_any(_17117_prim.ptr()))) {
			_16931_ok = true;
			return _16931_ok;
		};
	};
	_16931_ok = _1c2c1b7e6_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16931_ok;
}



inline jule::Bool _1c2bcdc3c_check(_1c2bccdc3_TypeCompatibilityChecker* _self_) {
	jule::Bool _17926_ok = jule::Bool();
	if ((_1c2c23523_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_17926_ok = _1c2bcd764_check_ptr(&(*_self_));
		return _17926_ok;
	};
	if (_1c2c1c73c_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1c2c1c000_is_nil((*_self_)._field_src.ptr())) {
			_17926_ok = true;
			return _17926_ok;
		};
	};
	{
		
		if ((_1c2c2304a_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c4ee6d22:;
			{
				_17926_ok = _1c2bcd9c8_check_prim(&(*_self_));
				return _17926_ok;
			}
		}
		else if ((_1c2c2449c_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c4ee6728:;
			{
				_17926_ok = _1c2bcd500_check_trait(&(*_self_));
				return _17926_ok;
			}
		}
		else {
			_case_begin_1c4ee6173:;
			{
				_17926_ok = _1c2c1b7e6_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _17926_ok;
			}
		}
		_match_end_1c4ee6096:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bccdc3_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c2bce6dd_push_err(_1c2bce27b_AssignTypeChecker* _self_, jule::Str _20927_fmt, jule::Slice<jule::Any> _20940_args) {
	_1c2b82905_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_20927_fmt,jule::Any(_20940_args));
}



inline jule::Bool _1c2bce952_check_validity(_1c2bce27b_AssignTypeChecker* _self_) {
	jule::Bool _21417_valid = true;;
	{
		
		if ((_1c2c23ec4_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c4ee975e:;
			{
				jule::Ptr<_1c1cc9762_FnIns> _21717_f = _1c2c23ec4_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1c1cca4dd_is_builtin(_21717_f.ptr())) {
						_case_begin_1c4eeab6c:;
						{
							_1c2bce6dd_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_21717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1c4eeabe4:;
						{
							_1c2bce6dd_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_1c1cc6c7b_is_method(_21717_f.get()._field_decl.ptr())) {
						_case_begin_1c4eeac6b:;
						{
							_1c2bce6dd_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if ((_21717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1c4eeace3:;
						{
							_1c2bce6dd_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					_match_end_1c4eeaa7e:;
				};
			}
		}
		else if ((_1c2c24975_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c4ee97d6:;
			{
				_1c2bce6dd_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_21417_valid=false;
			}
		}
		_match_end_1c4ee9693:;
	};
	return _21417_valid;
}



inline jule::Bool _1c2bcebb6_check_const(_1c2bce27b_AssignTypeChecker* _self_) {
	if (((((!(_1c2be2668_is_const((*_self_)._field_d.ptr()))) || (_1c2c2304a_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1c2b5ea69_is_num(_1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _25313_kind = _1c2c2304a_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1c2b5e7c2_is_float(_25313_kind)) {
			_case_begin_1c5002d61:;
			{
				if ((!(_1c2bb3ccc_float_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1c2bce6dd_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1c2b5e4d6_is_int(_25313_kind)) {
			_case_begin_1c5002e4e:;
			{
				if ((!(_1c2bccc91_int_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1c2bce6dd_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1c5002756:;
			{
				return false;
			}
		}
		_match_end_1c50026ce:;
	};
	return true;
}



inline jule::Bool _1c2bcee2a_is_prim(_1c2bce27b_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1c2c1bc8b_cpp_linked((*_self_)._field_dest.ptr()) || _1c2c1bc8b_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1c2c2304a_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1c2bd018e_check_compatibility(_1c2bce27b_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c5007b35:;
			{
				return false;
			}
		}
		else if ((!(_1c2bce952_check_validity(&(*_self_))))) {
			_case_begin_1c5007bac:;
			{
				return false;
			}
		}
		else if (_1c2bcebb6_check_const(&(*_self_))) {
			_case_begin_1c5007c34:;
			{
				return true;
			}
		}
		else if ((_1c2c23787_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5007cab:;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _29521_dkind = (*_self_)._field_dest;;
				if ((_1c2c23787_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_29521_dkind=_1c2c23787_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1c2c2304a_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1c50079e2;
				};
				if (_1c2b5b2b3_types_are_compatible(_1c2c2304a_prim(_1c2c23787_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1c2c2304a_prim(_29521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1c2bcee2a_is_prim(&(*_self_))) {
			_case_begin_1c5007d33:;
			{
				jule::Ptr<_1c2c256e0_Prim> _30517_dest = _1c2c2304a_prim((*_self_)._field_dest.ptr());;
				if (_1c2c28913_is_any(_30517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1c2c256e0_Prim> _30921_src = _1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1c2b5b2b3_types_are_compatible(_30517_dest.get()._field_kind,_30921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1c50079e2:;
	};
	return _1c2b880d1_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1c2bd0403_check(_1c2bce27b_AssignTypeChecker* _self_) {
	jule::Bool _31813_ok = _1c2bd018e_check_compatibility(&(*_self_));;
	if (_31813_ok) {
		_1c2c3727e_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _31813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bce27b_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c2bd115c_push_generic(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _33636_k, jule::I64 _33650_i) {
	(*_self_)._field_f.get()._field_generics[_33650_i]=_33636_k;
}



inline jule::Bool _1c2bd1437_annotate_prim(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _34044_k) {
	jule::Bool _34060_ok = jule::Bool();
	jule::Str _34113_kind = _1c2c1b4d8_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c50120e5:;
		if (it != expr.end()) {
			jule::I64 _34213_i = it - expr.begin();
			jule::Ptr<_20514e235_GenericDecl> _34216_g = *it;
			{
				if ((_34113_kind != _34216_g.get()._field_ident)) {
					goto _iter_next_1c50120e5;
				};
				jule::Ptr<_1c2c1b131_TypeKind> _34717_t = (*_self_)._field_f.get()._field_generics[_34213_i];;
				{
					
					if ((_34717_t == nullptr)) {
						_case_begin_1c5013525:;
						{
							_1c2bd115c_push_generic(&(*_self_), _34044_k,_34213_i);
						}
					}
					else if ((!(_1c2c1b7e6_equals(_34717_t, _34044_k)))) {
						_case_begin_1c501359c:;
						{
							_34060_ok = false;
							return _34060_ok;
						}
					}
					_match_end_1c5013437:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_34044_k.get()._field_kind;
				_34060_ok = true;
				return _34060_ok;
			}
			_iter_next_1c50120e5:;
			++it;
			_34213_i++;
			goto _iter_begin_1c50120e5;
		}
		_iter_end_1c50120e5:;
	};
	_34060_ok = false;
	return _34060_ok;
}



inline jule::Bool _1c2bd1745_annotate_slc(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _36343_k) {
	jule::Bool _36359_ok = jule::Bool();
	jule::Ptr<_1c2c2965b_Slc> _36417_pslc = _1c2c23c60_slc((*((*_self_)._field_k)).ptr());;
	if ((_36417_pslc == nullptr)) {
		_36359_ok = false;
		return _36359_ok;
	};
	jule::Ptr<_1c2c2965b_Slc> _36917_slc = _1c2c23c60_slc(_36343_k.ptr());;
	(*_self_)._field_k=(&(_36417_pslc.get()._field_elem));
	_36359_ok = _1c2bd2e50_annotate_kind(&(*_self_), _36917_slc.get()._field_elem);
	return _36359_ok;
}



inline jule::Bool _1c2bd1aec_check_map_key(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>* _37443_k, jule::Ptr<_1c2c1b131_TypeKind>& _37463_ck) {
	jule::Bool _37480_ok = jule::Bool();
	jule::Ptr<_1c2c1b131_TypeKind>* _37517_old = (*_self_)._field_k;;
	(*_self_)._field_k=_37443_k;
	_37480_ok=_1c2bd2e50_annotate_kind(&(*_self_), _37463_ck);
	(*_self_)._field_k=_37517_old;
	return _37480_ok;
}



inline jule::Bool _1c2bd1e0a_annotate_map(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _38243_k) {
	jule::Bool _38259_ok = jule::Bool();
	jule::Ptr<_1c2c2ac12_Map> _38317_pmap = _1c2c24711_map((*((*_self_)._field_k)).ptr());;
	if ((_38317_pmap == nullptr)) {
		_38259_ok = false;
		return _38259_ok;
	};
	jule::Ptr<_1c2c2ac12_Map> _38817_m = _1c2c24711_map(_38243_k.ptr());;
	_38259_ok = (_1c2bd1aec_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_key)),_38817_m.get()._field_key) && _1c2bd1aec_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_val)),_38817_m.get()._field_val));
	return _38259_ok;
}



inline jule::Bool _1c2bd2218_annotate_fn(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _39442_k) {
	jule::Bool _39458_ok = jule::Bool();
	jule::Ptr<_1c1cc9762_FnIns> _39517_pf = _1c2c23ec4_fnc((*((*_self_)._field_k)).ptr());;
	if ((_39517_pf == nullptr)) {
		_39458_ok = false;
		return _39458_ok;
	};
	jule::Ptr<_1c1cc9762_FnIns> _39917_f = _1c2c23ec4_fnc(_39442_k.ptr());;
	{
		
		if ((_39517_pf.get()._field_params.len() != _39917_f.get()._field_params.len())) {
			_case_begin_1c501da6e:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		else if ((_1c1cc6a17_is_void(_39517_pf.get()._field_decl.ptr()) != _1c1cc6a17_is_void(_39917_f.get()._field_decl.ptr()))) {
			_case_begin_1c501dae6:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		_match_end_1c501d9c5:;
	};
	_39458_ok=true;
	jule::Ptr<_1c2c1b131_TypeKind>* _40817_old = (*_self_)._field_k;;
	{
		auto &expr = _39917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c50205cb:;
		if (it != expr.end()) {
			jule::I64 _40914_i = it - expr.begin();
			jule::Ptr<_1c1cc88c6_ParamIns> _40921_fp = *it;
			{
				(*_self_)._field_k=(&(_39517_pf.get()._field_params[_40914_i].get()._field_kind));
				_39458_ok=(_1c2bd2e50_annotate_kind(&(*_self_), _40921_fp.get()._field_kind) && _39458_ok);
			}
			_iter_next_1c50205cb:;
			++it;
			_40914_i++;
			goto _iter_begin_1c50205cb;
		}
		_iter_end_1c50205cb:;
	};
	if ((!(_1c1cc6a17_is_void(_39517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_39517_pf.get()._field_result));
		_39458_ok=(_1c2bd2e50_annotate_kind(&(*_self_), _39917_f.get()._field_result) && _39458_ok);
	};
	(*_self_)._field_k=_40817_old;
	return _39458_ok;
}



inline jule::Bool _1c2bd2526_annotate_ptr(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _42343_k) {
	jule::Bool _42359_ok = jule::Bool();
	jule::Ptr<_1c2c2c263_Ptr> _42417_pptr = _1c2c23523_ptr((*((*_self_)._field_k)).ptr());;
	if ((_42417_pptr == nullptr)) {
		_42359_ok = false;
		return _42359_ok;
	};
	jule::Ptr<_1c2c2c263_Ptr> _42917_ptr = _1c2c23523_ptr(_42343_k.ptr());;
	(*_self_)._field_k=(&(_42417_pptr.get()._field_elem));
	_42359_ok = _1c2bd2e50_annotate_kind(&(*_self_), _42917_ptr.get()._field_elem);
	return _42359_ok;
}



inline jule::Bool _1c2bd2834_annotate_sptr(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _43444_k) {
	jule::Bool _43460_ok = jule::Bool();
	jule::Ptr<_1c2c28bee_Sptr> _43517_ssptr = _1c2c232ae_sptr((*((*_self_)._field_k)).ptr());;
	if ((_43517_ssptr == nullptr)) {
		_43460_ok = false;
		return _43460_ok;
	};
	jule::Ptr<_1c2c28bee_Sptr> _44017_sptr = _1c2c232ae_sptr(_43444_k.ptr());;
	(*_self_)._field_k=(&(_43517_ssptr.get()._field_elem));
	_43460_ok = _1c2bd2e50_annotate_kind(&(*_self_), _44017_sptr.get()._field_elem);
	return _43460_ok;
}



inline jule::Bool _1c2bd2b42_annotate_any(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _44543_k) {
	jule::Bool _44559_ok = jule::Bool();
	jule::Str _44613_kind = _1c2c1b4d8_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c5028529:;
		if (it != expr.end()) {
			jule::I64 _44713_i = it - expr.begin();
			jule::Ptr<_20514e235_GenericDecl> _44716_g = *it;
			{
				if ((_44613_kind != _44716_g.get()._field_ident)) {
					goto _iter_next_1c5028529;
				};
				jule::Ptr<_1c2c1b131_TypeKind> _45217_t = (*_self_)._field_f.get()._field_generics[_44713_i];;
				{
					
					if ((_45217_t == nullptr)) {
						_case_begin_1c502996a:;
						{
							_1c2bd115c_push_generic(&(*_self_), _44543_k,_44713_i);
						}
					}
					else if ((!(_1c2c1b7e6_equals(_45217_t, _44543_k)))) {
						_case_begin_1c50299e2:;
						{
							_44559_ok = false;
							return _44559_ok;
						}
					}
					_match_end_1c502987c:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_44543_k.get()._field_kind;
				_44559_ok = true;
				return _44559_ok;
			}
			_iter_next_1c5028529:;
			++it;
			_44713_i++;
			goto _iter_begin_1c5028529;
		}
		_iter_end_1c5028529:;
	};
	_44559_ok = false;
	return _44559_ok;
}



inline jule::Bool _1c2bd2e50_annotate_kind(_1c2bd0ac9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _46844_k) {
	jule::Bool _46860_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _46860_ok;
	};
	{
		
		if (_1c2bd2b42_annotate_any(&(*_self_), _46844_k)) {
			_case_begin_1c502c62c:;
			{
				_46860_ok = true;
				return _46860_ok;
			}
		}
		else if ((_1c2c2304a_prim(_46844_k.ptr()) != nullptr)) {
			_case_begin_1c502c693:;
			{
				_46860_ok = _1c2bd1437_annotate_prim(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c2c23c60_slc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1c502c363:;
			{
				_46860_ok = _1c2bd1745_annotate_slc(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c2c24711_map(_46844_k.ptr()) != nullptr)) {
			_case_begin_1c502c3c9:;
			{
				_46860_ok = _1c2bd1e0a_annotate_map(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c2c23ec4_fnc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1c502c440:;
			{
				_46860_ok = _1c2bd2218_annotate_fn(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c2c23523_ptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1c502be89:;
			{
				_46860_ok = _1c2bd2526_annotate_ptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1c2c232ae_sptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1c502c000:;
			{
				_46860_ok = _1c2bd2834_annotate_sptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else {
			_case_begin_1c502be23:;
			{
				_46860_ok = false;
				return _46860_ok;
			}
		}
		_match_end_1c502bdbd:;
	};
}



inline jule::Bool _1c2bd31b4_annotate(_1c2bd0ac9_DynamicTypeAnnotation* _self_) {
	jule::Bool _49336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_49336_ok = _1c2bd2e50_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bd0ac9_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1c2bd3dda_push_err_token(_1c2bd388a_FnCallArgChecker* _self_, jule::Ptr<_205139176_Token> _50933_token, jule::Str _50948_fmt, jule::Slice<jule::Any> _50961_args) {
	_1c2b82905_push_err((*_self_)._field_e.get()._field_s.ptr(), _50933_token,_50948_fmt,jule::Any(_50961_args));
}



inline void _1c2bd4209_push_err(_1c2bd388a_FnCallArgChecker* _self_, jule::Str _51327_fmt, jule::Slice<jule::Any> _51340_args) {
	_1c2bd3dda_push_err_token(&(*_self_), (*_self_)._field_error_token,_51327_fmt,jule::Any(_51340_args));
}



inline jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>> _1c2bd446d_get_params(_1c2bd388a_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1c1cc53a6_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1c2bd477b_check_counts(_1c2bd388a_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();;
	if (((_52717_n > 0LL) && _1c1cc53a6_is_self(_52632_params[0LL].get()._field_decl.ptr()))) {
		(_52717_n)--;
	};
	jule::I64 _53217_diff = (_52717_n - (*_self_)._field_args.len());;
	{
		
		if ((_53217_diff == 0LL)) {
			_case_begin_1c50396b1:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_52717_n > 0LL) && _52632_params[(_52717_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1c5039738:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_53217_diff < 0LL) || (_53217_diff > _52632_params.len()))) {
			_case_begin_1c50397b0:;
			{
				_1c2bd4209_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_1c50395d4:;
	};
	jule::Str _54317_idents = jule::Str();;
	for (; (_53217_diff > 0LL); (_53217_diff)--) {
		{
			_54317_idents+=(jule::Str(", ", 2) + _52632_params[(_52717_n - _53217_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1c503b9b0:;
	}
	_iter_end_1c503b9b0:;;
	(_54317_idents).mut_slice(2LL);;
	_1c2bd4209_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_54317_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1c2bd4bcc_check_arg(_1c2bd388a_FnCallArgChecker* _self_, jule::Ptr<_1c1cc88c6_ParamIns>& _55333_p, jule::Ptr<_1c2be1ca5_Data>& _55352_arg, jule::Ptr<_205139176_Token>& _55369_error_token) {
	jule::Bool _55392_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1c1ccb621_parameter_uses_generics(_55333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_55392_ok=(!(_55333_p.get()._field_decl.get()._field_variadic));
		if (_55392_ok) {
			_1c2bd0ac9_DynamicTypeAnnotation _55725_dta = _1c2bd0ac9_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_55333_p, ._field_a=_55352_arg, ._field_error_token=_55369_error_token};;
			_55392_ok=_1c2bd31b4_annotate(&_55725_dta);
		};
		if ((!(_55392_ok))) {
			_1c2bd3dda_push_err_token(&(*_self_), _55369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55392_ok = false;
			return _55392_ok;
		};
	};
	if (_1c2b89962_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_mutable,_55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token)) {
		_1c2b87b5d_check_assign_type((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token);
	};
	_55392_ok = true;
	return _55392_ok;
}



inline jule::Bool _1c2bd5084_push(_1c2bd388a_FnCallArgChecker* _self_, jule::Ptr<_1c1cc88c6_ParamIns>& _58028_p, jule::Ptr<_2050bba21_Expr> _58046_arg) {
	jule::Bool _58060_ok = jule::Bool();
	jule::Ptr<_1c2c1b131_TypeKind> _58117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _58213_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1c2be1ca5_Data> _58317_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_58028_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_58028_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_58028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_58317_d=_1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any(_58046_arg.get()._field_kind));
	(*_self_)._field_e.get()._field_prefix=_58117_old;
	(*_self_)._field_e.get()._field_immutable=_58213_old_immut;
	if ((_58317_d == nullptr)) {
		_58060_ok = false;
		return _58060_ok;
	};
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_58317_d));;
	_58060_ok = _1c2bd4bcc_check_arg(&(*_self_), _58028_p,_58317_d,_58046_arg.get()._field_token);
	return _58060_ok;
}



inline jule::Bool _1c2bd543b_push_variadic(_1c2bd388a_FnCallArgChecker* _self_, jule::Ptr<_1c1cc88c6_ParamIns>& _60437_p, jule::I64 _60455_i) {
	jule::Bool _60465_ok = jule::Bool();
	_60465_ok=true;
	jule::Bool _60617_variadiced = false;;
	jule::Bool _60713_more = ((_60455_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1c1cbada2_SliceExprModel> _60817_model = jule::new_ptr<_1c1cbada2_SliceExprModel>(_1c1cbada2_SliceExprModel{._field_elem_kind=_60437_p.get()._field_kind});;
	jule::Ptr<_1c2c1b131_TypeKind> _61217_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _61713_variadic = _60437_p.get()._field_kind.get()._field_variadic;;
	_60437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_60437_p.get()._field_kind.get()._field_variadic=_61713_variadic;
	});;
	for (; (_60455_i < (*_self_)._field_args.len()); (_60455_i)++) {
		{
			jule::Ptr<_2050bba21_Expr> _62421_arg = (*_self_)._field_args[_60455_i];;
			{
				auto &_match_expr{ _62421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_20514c4a8_VariadicExpr>>()) {
					_case_begin_1c5050bc2:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=_60437_p.get()._field_kind}), 7)});
					}
				}
				else {
					_case_begin_1c5051376:;
					{
						(*_self_)._field_e.get()._field_prefix=_60437_p.get()._field_kind;
					}
				}
				_match_end_1c5051321:;
			};
			jule::Ptr<_1c2be1ca5_Data> _63721_d = _1c2c0cbc2_eval((*_self_)._field_e, _62421_arg);;
			if ((_63721_d == nullptr)) {
				_60465_ok=false;
				goto _iter_next_1c5050a3a;
			};
			if (_63721_d.get()._field_kind.get()._field_variadic) {
				_60617_variadiced=true;
				{
					auto &_match_expr{ _63721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cbada2_SliceExprModel>>()) {
						_case_begin_1c5053455:;
						{
							_60817_model=_63721_d.get()._field_model.operator jule::Ptr<_1c1cbada2_SliceExprModel>();
							_60817_model.get()._field_elem_kind=_60437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1c50538c8:;
						{
							_60817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_63721_d));;
						}
					}
					_match_end_1c5053873:;
				};
				_60437_p.get()._field_kind.get()._field_variadic=true;
				_60465_ok=(_60465_ok && _1c2bd4bcc_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
				(_60455_i)++;
				goto _iter_end_1c5050a3a;
			};
			_60465_ok=(_60465_ok && _1c2bd4bcc_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
			_60817_model.get()._field_elems = jule::alloc_for_append(_60817_model.get()._field_elems,1);_60817_model.get()._field_elems.__push(jule::Any(_63721_d.get()._field_model));;
		}
	_iter_next_1c5050a3a:;
	}
	_iter_end_1c5050a3a:;;
	(*_self_)._field_e.get()._field_prefix=_61217_old;
	if ((_60617_variadiced && _60713_more)) {
		_1c2bd3dda_push_err_token(&(*_self_), (*_self_)._field_args[_60455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_60817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60817_model));;
	};
	return _60465_ok;
}



inline jule::Bool _1c2bd5749_check_args(_1c2bd388a_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>& _68334_params) {
	jule::Bool _68357_ok = jule::Bool();
	jule::Bool _68413_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_68357_ok=true;
	jule::I64 _68817_i = 0LL;;
	_julec_label_iter:;
	while ((_68817_i < _68334_params.len())) {
		{
			jule::Ptr<_1c1cc88c6_ParamIns> _69121_p = _68334_params[_68817_i];;
			{
				
				if (_1c1cc53a6_is_self(_69121_p.get()._field_decl.ptr())) {
					_case_begin_1c505ab77:;
					{
						goto _match_end_1c5059d1e;
					}
				}
				else if (_69121_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1c505a21a:;
					{
						_68357_ok=(_1c2bd543b_push_variadic(&(*_self_), _69121_p,_68817_i) && _68357_ok);
						goto _iter_end_1c5059439;
					}
				}
				else if (((*_self_)._field_args.len() <= _68817_i)) {
					_case_begin_1c5059e0c:;
					{
						_68357_ok=false;
						goto _iter_end_1c5059439;
					}
				}
				else {
					_case_begin_1c5059d96:;
					{
						_68357_ok=(_1c2bd5084_push(&(*_self_), _69121_p,(*_self_)._field_args[_68817_i]) && _68357_ok);
					}
				}
				_match_end_1c5059d1e:;
			};
			(_68817_i)++;
		}
	_iter_next_1c5059439:;
	}
	_iter_end_1c5059439:;;
	(*_self_)._field_e.get()._field_arg=_68413_arg;
	return _68357_ok;
}



inline jule::Bool _1c2bd59d0_check_dynamic_type_annotation(_1c2bd388a_FnCallArgChecker* _self_) {
	jule::Bool _71350_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c505d11e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1b131_TypeKind> _71416_g = *it;
			{
				if ((_71416_g == nullptr)) {
					_1c2bd4209_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71350_ok = false;
					return _71350_ok;
				};
			}
			_iter_next_1c505d11e:;
			++it;
			goto _iter_begin_1c505d11e;
		}
		_iter_end_1c505d11e:;
	};
	_71350_ok = true;
	return _71350_ok;
}



inline jule::Bool _1c2bd5c55_check(_1c2bd388a_FnCallArgChecker* _self_) {
	jule::Bool _72326_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>> _72417_params = _1c2bd446d_get_params(&(*_self_));;
	_72326_ok=_1c2bd477b_check_counts(&(*_self_), _72417_params);
	if ((!(_72326_ok))) {
		_72326_ok = false;
		return _72326_ok;
	};
	_72326_ok=_1c2bd5749_check_args(&(*_self_), _72417_params);
	if ((_72326_ok && (*_self_)._field_dynamic_annotation)) {
		_72326_ok=_1c2bd59d0_check_dynamic_type_annotation(&(*_self_));
	};
	return _72326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bd388a_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1c2bd67a0_push_err(_1c2bd6294_StructLitChecker* _self_, jule::Ptr<_205139176_Token> _74727_token, jule::Str _74742_fmt, jule::Slice<jule::Any> _74755_args) {
	_1c2be3ceb_push_err((*_self_)._field_e.ptr(), _74727_token,_74742_fmt,jule::Any(_74755_args));
}



inline void _1c2bd6abe_push_suggestion(_1c2bd6294_StructLitChecker* _self_, jule::Str _75234_fmt, jule::Slice<jule::Any> _75247_args) {
	_1c2be411a_push_suggestion((*_self_)._field_e.ptr(), _75234_fmt,jule::Any(_75247_args));
}



inline void _1c2bd6e87_push_match(_1c2bd6294_StructLitChecker* _self_, jule::Ptr<_1c1cb6276_FieldIns>& _75634_f, jule::Ptr<_1c2be1ca5_Data>& _75653_d, jule::Ptr<_205139176_Token>& _75668_error_token) {
	;
	if (_1c2b89962_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_75634_f.get()._field_kind,_75653_d,_75668_error_token)) {
		_1c2b87b5d_check_assign_type((*_self_)._field_e.get()._field_s, false,_75634_f.get()._field_kind,_75653_d,_75668_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1c1cb94aa_StructArgExprModel>(_1c1cb94aa_StructArgExprModel{._field_field=_75634_f, ._field_expr=jule::Any(_75653_d.get()._field_model)}));;
}



inline void _1c2bd72a6_check_pair(_1c2bd6294_StructLitChecker* _self_, jule::Ptr<_20514d135_FieldExprPair>& _76934_pair, jule::Slice<jule::Ptr<_2050bba21_Expr>>& _76961_exprs) {
	jule::Ptr<_1c1cb6276_FieldIns> _77117_f = _1c1cb7d7c_find_field((*_self_)._field_s.ptr(), _76934_pair.get()._field_field.get()._field_kind);;
	if ((_77117_f == nullptr)) {
		_1c2bd67a0_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _77117_f.get()._field_decl.get()._field_public,_77117_f.get()._field_decl.get()._field_token)))) {
		_1c2bd67a0_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		_1c2bd6abe_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _76961_exprs;
		auto it = expr.begin();
		_iter_begin_1c506b407:;
		if (it != expr.end()) {
			jule::Ptr<_2050bba21_Expr> _78321_expr = *it;
			{
				{
					auto &_match_expr{ _78321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_20514d135_FieldExprPair>>()) {
						_case_begin_1c506bb99:;
						{
							jule::Ptr<_20514d135_FieldExprPair> _78625_dpair = _78321_expr.get()._field_kind.operator jule::Ptr<_20514d135_FieldExprPair>();;
							{
								
								if ((_76934_pair == _78625_dpair)) {
									_case_begin_1c506c8ae:;
									{
										goto _iter_end_1c506b407;
									}
								}
								else if ((_76934_pair.get()._field_field.get()._field_kind == _78625_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1c506c936:;
									{
										_1c2bd67a0_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1c506b407;
									}
								}
								_match_end_1c506c804:;
							};
						}
					}
					_match_end_1c506baab:;
				};
			}
			_iter_next_1c506b407:;
			++it;
			goto _iter_begin_1c506b407;
		}
		_iter_end_1c506b407:;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _79717_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_79717_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_77117_f.get()._field_kind;
	jule::Ptr<_1c2be1ca5_Data> _80117_d = _1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any(_76934_pair.get()._field_expr));;
	if ((_80117_d == nullptr)) {
		return;;
	};
	_1c2bd6e87_push_match(&(*_self_), _77117_f,_80117_d,_76934_pair.get()._field_field);
}



inline jule::Bool _1c2bd75b4_ready_exprs(_1c2bd6294_StructLitChecker* _self_, jule::Slice<jule::Ptr<_2050bba21_Expr>>& _80835_exprs) {
	jule::Bool _80917_ok = true;;
	{
		auto &expr = _80835_exprs;
		auto it = expr.begin();
		_iter_begin_1c5071880:;
		if (it != expr.end()) {
			jule::I64 _81014_i = it - expr.begin();
			jule::Ptr<_2050bba21_Expr> _81021_expr = *it;
			{
				{
					auto &_match_expr{ _81021_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_20514d6eb_KeyValPair>>()) {
						_case_begin_1c5072364:;
						{
							jule::Ptr<_20514d6eb_KeyValPair> _81325_pair = _81021_expr.get()._field_kind.operator jule::Ptr<_20514d6eb_KeyValPair>();;
							{
								auto &_match_expr{ _81325_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_20514c0ce_IdentExpr>>()) {
									_case_begin_1c5073de3:;
									{
										goto _match_end_1c50731bc;
									}
								}
								else {
									_case_begin_1c5073222:;
									{
										_1c2bd67a0_push_err(&(*_self_), _81325_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_80917_ok=false;
										goto _iter_next_1c5071880;
									}
								}
								_match_end_1c50731bc:;
							};
							_80835_exprs[_81014_i].get()._field_kind=jule::Any(jule::new_ptr<_20514d135_FieldExprPair>(_20514d135_FieldExprPair{._field_field=_81325_pair.get()._field_key.get()._field_token, ._field_expr=_81325_pair.get()._field_val}));
						}
					}
					_match_end_1c5072276:;
				};
			}
			_iter_next_1c5071880:;
			++it;
			_81014_i++;
			goto _iter_begin_1c5071880;
		}
		_iter_end_1c5071880:;
	};
	return _80917_ok;
}



inline void _1c2bd7839_check(_1c2bd6294_StructLitChecker* _self_, jule::Slice<jule::Ptr<_2050bba21_Expr>>& _83229_exprs) {
	if ((_83229_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1c2bd75b4_ready_exprs(&(*_self_), _83229_exprs)))) {
		return;;
	};
	jule::Bool _84117_paired = false;;
	{
		auto &expr = _83229_exprs;
		auto it = expr.begin();
		_iter_begin_1c5075c08:;
		if (it != expr.end()) {
			jule::I64 _84214_i = it - expr.begin();
			jule::Ptr<_2050bba21_Expr> _84221_expr = *it;
			{
				{
					auto &_match_expr{ _84221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_20514d135_FieldExprPair>>()) {
						_case_begin_1c507b406:;
						{
							jule::Ptr<_20514d135_FieldExprPair> _84525_pair = _84221_expr.get()._field_kind.operator jule::Ptr<_20514d135_FieldExprPair>();;
							if (((_84214_i > 0LL) && (!(_84117_paired)))) {
								_1c2bd67a0_push_err(&(*_self_), _84525_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_84117_paired=true;
							_1c2bd72a6_check_pair(&(*_self_), _84525_pair,_83229_exprs);
						}
					}
					else {
						_case_begin_1c5076654:;
						{
							if (_84117_paired) {
								_1c2bd67a0_push_err(&(*_self_), _84221_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_84214_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1c2bd67a0_push_err(&(*_self_), _84221_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1c5075c08;
							};
							jule::Ptr<_1c1cb6276_FieldIns> _86025_field = (*_self_)._field_s.get()._field_fields[_84214_i];;
							if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _86025_field.get()._field_decl.get()._field_public,_86025_field.get()._field_decl.get()._field_token)))) {
								_1c2bd67a0_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1c2bd6abe_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c2c1b131_TypeKind> _86825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_86825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_86025_field.get()._field_kind;
							jule::Ptr<_1c2be1ca5_Data> _87225_d = _1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any(_84221_expr.get()._field_kind));;
							if ((_87225_d == nullptr)) {
								goto _iter_next_1c5075c08;
							};
							_1c2bd6e87_push_match(&(*_self_), _86025_field,_87225_d,_84221_expr.get()._field_token);
						}
					}
					_match_end_1c50765ee:;
				};
			}
			_iter_next_1c5075c08:;
			++it;
			_84214_i++;
			goto _iter_begin_1c5075c08;
		}
		_iter_end_1c5075c08:;
	};
	if ((!(_84117_paired))) {
		jule::I64 _88317_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _88421_diff = (_88317_n - _83229_exprs.len());;
		{
			
			if ((_88421_diff <= 0LL)) {
				_case_begin_1c507e33d:;
				{
					return;;
				}
			}
			_match_end_1c507e22d:;
		};
		jule::Str _89021_idents = jule::Str();;
		for (; (_88421_diff > 0LL); (_88421_diff)--) {
			{
				_89021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_88317_n - _88421_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1c5076225:;
		}
		_iter_end_1c5076225:;;
		(_89021_idents).mut_slice(2LL);;
		_1c2bd67a0_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_89021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bd6294_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2bd831d_build_var(_1c2bd7d78_RangeChecker* _self_, jule::Ptr<_205150478_VarDecl>& _90929_decl) {
	jule::Ptr<_1c2b9a4de_Var> _91017_v = _1c1cd1b98_build_var(_90929_decl);;
	return _91017_v;
}



inline void _1c2bd84e9_set_size_key(_1c2bd7d78_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _20513b8c6_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1c2bd831d_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c5084365:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1c2b99521_IterRelation>(_1c2b99521_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1c2b9a4de_Var>()});
			}
		}
		_match_end_1c50842cc:;
	};
}



inline void _1c2bd88d4_check_range_expr_validity(_1c2bd7d78_RangeChecker* _self_, jule::Ptr<_1c2be1ca5_Data>& _94049_d, jule::Ptr<_1c2b9a4de_Var>& _94060_key, jule::Ptr<_1c2c1b131_TypeKind>& _94076_k) {
	jule::Bool _94117__mut = _94060_key.get()._field_mutable;;
	if ((_94117__mut && (!(_1c2c1c4c8_mutable(_94076_k.ptr()))))) {
		_94117__mut=false;
	};
	_1c2b89962_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _94117__mut,_94060_key.get()._field_reference,_94060_key.get()._field_kind.get()._field_kind,_94049_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1c2bd8ac1_check_slice(_1c2bd7d78_RangeChecker* _self_) {
	_1c2bd84e9_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20513b8c6_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2c2965b_Slc> _95917_slc = _1c2c23c60_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c2bd831d_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_95917_slc.get()._field_elem});
	_1c2bd88d4_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_95917_slc.get()._field_elem);
}



inline void _1c2bd8c9c_check_array(_1c2bd7d78_RangeChecker* _self_) {
	_1c2bd84e9_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20513b8c6_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2c2b806_Arr> _97217_arr = _1c2c239eb_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c2bd831d_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_97217_arr.get()._field_elem});
	_1c2bd88d4_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97217_arr.get()._field_elem);
}



inline void _1c2bd8e78_check_map_key_a(_1c2bd7d78_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _20513b8c6_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2c2ac12_Map> _98417_m = _1c2c24711_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1c2bd831d_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_98417_m.get()._field_key});
	jule::Ptr<_1c2be1ca5_Data> _98817_d = jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d)));;
	_98817_d.get()._field_kind=_98417_m.get()._field_key;
	_1c2bd88d4_check_range_expr_validity(&(*_self_), _98817_d,(*_self_)._field_kind.get()._field_key_a,_98417_m.get()._field_key);
}



inline void _1c2bd9154_check_map_key_b(_1c2bd7d78_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20513b8c6_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2c2ac12_Map> _99917_m = _1c2c24711_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c2bd831d_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_99917_m.get()._field_val});
	jule::Ptr<_1c2be1ca5_Data> _100317_d = jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d)));;
	_100317_d.get()._field_kind=_99917_m.get()._field_val;
	_1c2bd88d4_check_range_expr_validity(&(*_self_), _100317_d,(*_self_)._field_kind.get()._field_key_b,_99917_m.get()._field_val);
}



inline void _1c2bd9330_check_map(_1c2bd7d78_RangeChecker* _self_) {
	_1c2bd8e78_check_map_key_a(&(*_self_));
	_1c2bd9154_check_map_key_b(&(*_self_));
}



inline void _1c2bd950b_check_str(_1c2bd7d78_RangeChecker* _self_) {
	_1c2bd84e9_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _20513b8c6_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1c2bd831d_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u8", 2)), 5)})});
}



inline jule::Bool _1c2bd9770_check(_1c2bd7d78_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1c509927b:;
		}
		else if ((_1c2c23c60_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c50992e2:;
			{
				_1c2bd8ac1_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1c2c239eb_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5099358:;
			{
				_1c2bd8c9c_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1c2c24711_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c50993be:;
			{
				_1c2bd9330_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1c5099215:;
			{
				jule::Ptr<_1c2c256e0_Prim> _104217_prim = _1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_104217_prim != nullptr) && _1c2c2869e_is_str(_104217_prim.ptr()))) {
					_1c2bd950b_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1c5099149:;
	};
	_1c2b82905_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bd7d78_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c2bda4b8_prepare_types(_1c2bda012_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1c1cca279_types((*_self_)._field_f.ptr());
	};
}



inline void _1c2bda73d_prepare_exprs(_1c2bda012_RetTypeChecker* _self_, jule::Ptr<_2050bba21_Expr>& _107137_e) {
	if ((_107137_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _107137_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20514b5ea_TupleExpr>>()) {
			_case_begin_1c50a0419:;
			{
				(*_self_)._field_exprs=_107137_e.get()._field_kind.operator jule::Ptr<_20514b5ea_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1c50a05b2:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_107137_e);;
			}
		}
		_match_end_1c50a055c:;
	};
}



inline void _1c2bda919_ret_vars(_1c2bda012_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1c1cc6a17_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1c2b9a4de_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1c2b6197d_ScopeChecker> _108917_root_scope = _1c2b638d6_get_root((*_self_)._field_sc);;
	jule::I64 _109117_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1c50a387e:;
		if (it != expr.end()) {
			jule::I64 _109213_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _109216_ident = *it;
			{
				if (((!(_20513b8c6_is_ignore_ident(_109216_ident.get()._field_kind))) && (!(_20513bb6d_is_anon_ident(_109216_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_108917_root_scope.get()._field_table.get()._field_vars[_109117_j]);;
					(_109117_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1c2b9a4de_Var>(_1c2b9a4de_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=(*_self_)._field_types[_109213_i]})}));;
				};
			}
			_iter_next_1c50a387e:;
			++it;
			_109213_i++;
			goto _iter_begin_1c50a387e;
		}
		_iter_end_1c50a387e:;
	};
	if ((_109117_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1c2bdaae5_check_exprs(_1c2bda012_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _111517_datas = jule::Slice<jule::Ptr<_1c2be1ca5_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c50a74a9:;
		if (it != expr.end()) {
			jule::I64 _111714_i = it - expr.begin();
			jule::Ptr<_2050bba21_Expr> _111721_expr = *it;
			{
				if ((_111714_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1c50a74a9;
				};
				jule::Ptr<_1c2c1b131_TypeKind> _112221_t = (*_self_)._field_types[_111714_i];;
				jule::Ptr<_1c2be1ca5_Data> _112421_d = _1c2c0ced0_eval_expr(_1c2b87355_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1c2c3934c_Lookup>((*_self_)._field_sc, 0),_112221_t), _111721_expr);;
				if ((_112421_d == nullptr)) {
					goto _iter_next_1c50a74a9;
				};
				_111517_datas = jule::alloc_for_append(_111517_datas,1);_111517_datas.__push(_112421_d);;
				if (((!(_112421_d.get()._field_mutable)) && _1c2c1c4c8_mutable(_112421_d.get()._field_kind.ptr()))) {
					_1c2b82905_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1c2bce27b_AssignTypeChecker _113621_ac = _1c2bce27b_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_112221_t, ._field_d=_112421_d, ._field_error_token=(*_self_)._field_error_token};;
				_1c2bd0403_check(&_113621_ac);
			}
			_iter_next_1c50a74a9:;
			++it;
			_111714_i++;
			goto _iter_begin_1c50a74a9;
		}
		_iter_end_1c50a74a9:;
	};
	if ((_111517_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1c1cbe79b_TupleExprModel>(_1c1cbe79b_TupleExprModel{._field_datas=_111517_datas}));
	} else if ((_111517_datas.len() == 1LL)) {
		(*_self_)._field_model=jule::Any(_111517_datas[0LL].get()._field_model);
	};
}



inline jule::Bool _1c2bdae03_check(_1c2bda012_RetTypeChecker* _self_, jule::Ptr<_2050bba21_Expr>& _115529_e) {
	_1c2bda4b8_prepare_types(&(*_self_));
	_1c2bda73d_prepare_exprs(&(*_self_), _115529_e);
	_1c2bda919_ret_vars(&(*_self_));
	jule::I64 _116013_n = (*_self_)._field_exprs.len();;
	if (((_116013_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1c1cc772c_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1c2b82905_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_116013_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1c1cc6a17_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1c2b82905_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_116013_n > (*_self_)._field_types.len())) {
		_1c2b82905_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_116013_n < (*_self_)._field_types.len())) {
		_1c2b82905_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1c2bdaae5_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bda012_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2bdc201_find_package(_1c2bdbbe5_SymbolTable* _self_, jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1c50b3c35:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _2621_pkg = *it;
			{
				if ((_2621_pkg.get()._field_ident == _2535_ident)) {
					return _2621_pkg;
				};
			}
			_iter_next_1c50b3c35:;
			++it;
			goto _iter_begin_1c50b3c35;
		}
		_iter_end_1c50b3c35:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c2bdc50e_select_package(_1c2bdbbe5_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1c50b4e9a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _4221_pkg = *it;
			{
				if (_3737_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1c50b4e9a:;
			++it;
			goto _iter_begin_1c50b4e9a;
		}
		_iter_end_1c50b4e9a:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2bdc8b6_find_var(_1c2bdbbe5_SymbolTable* _self_, jule::Str _5231_ident, jule::Bool _5243_cpp_linked) {
	return _1c2bde16a___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2bdcc6d_find_type_alias(_1c2bdbbe5_SymbolTable* _self_, jule::Str _5838_ident, jule::Bool _5850_cpp_linked) {
	return _1c2bde5bb___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2bdd125_find_struct(_1c2bdbbe5_SymbolTable* _self_, jule::Str _6434_ident, jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1c50b890a:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_ident == _6434_ident) && (_6521_s.get()._field_cpp_linked == _6446_cpp_linked))) {
					return _6521_s;
				};
			}
			_iter_next_1c50b890a:;
			++it;
			goto _iter_begin_1c50b890a;
		}
		_iter_end_1c50b890a:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2bdd4cc_find_fn(_1c2bdbbe5_SymbolTable* _self_, jule::Str _7530_ident, jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c50ba2ad:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_ident == _7530_ident) && (_7621_f.get()._field_cpp_linked == _7542_cpp_linked))) {
					return _7621_f;
				};
			}
			_iter_next_1c50ba2ad:;
			++it;
			goto _iter_begin_1c50ba2ad;
		}
		_iter_end_1c50ba2ad:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2a137db_Trait> _1c2bdd7da_find_trait(_1c2bdbbe5_SymbolTable* _self_, jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1c50bb842:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_ident == _8633_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1c50bb842:;
			++it;
			goto _iter_begin_1c50bb842;
		}
		_iter_end_1c50bb842:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2bddae8_find_enum(_1c2bdbbe5_SymbolTable* _self_, jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1c50bcb0c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a159ec_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_ident == _9732_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1c50bcb0c:;
			++it;
			goto _iter_begin_1c50bcb0c;
		}
		_iter_end_1c50bcb0c:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2bde16a___find_var(_1c2bdbbe5_SymbolTable* _self_, jule::Str _10829_ident, jule::Bool _10841_cpp_linked, jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1c2b9a4de_Var> _11225_v = (*_self_)._field_vars[_11021_i];;
				if (((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked))) {
					return _11225_v;
				};
			}
		_iter_next_1c50be180:;
		}
		_iter_end_1c50be180:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1c50c0a11:;
			if (it != expr.end()) {
				jule::Ptr<_1c2b9a4de_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_ident == _10829_ident) && (_11825_v.get()._field_cpp_linked == _10841_cpp_linked))) {
						return _11825_v;
					};
				}
				_iter_next_1c50c0a11:;
				++it;
				goto _iter_begin_1c50c0a11;
			}
			_iter_end_1c50c0a11:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2bde5bb___find_type_alias(_1c2bdbbe5_SymbolTable* _self_, jule::Str _12736_ident, jule::Bool _12748_cpp_linked, jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1c2c1a3e9_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];;
				if (((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
					return _13125_ta;
				};
			}
		_iter_next_1c50c1e96:;
		}
		_iter_end_1c50c1e96:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1c50c3827:;
			if (it != expr.end()) {
				jule::Ptr<_1c2c1a3e9_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_ident == _12736_ident) && (_13725_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
						return _13725_ta;
					};
				}
				_iter_next_1c50c3827:;
				++it;
				goto _iter_begin_1c50c3827;
			}
			_iter_end_1c50c3827:;
		};
	};
	return nullptr;
}



inline jule::Any _1c2bde973_def_by_ident(_1c2bdbbe5_SymbolTable* _self_, jule::Str _14831_ident, jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1c50c474b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_ident == _14831_ident) && (_14921_v.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_14921_v);
				};
			}
			_iter_next_1c50c474b:;
			++it;
			goto _iter_begin_1c50c474b;
		}
		_iter_end_1c50c474b:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1c50c576e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1a3e9_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_ident == _14831_ident) && (_15521_ta.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_15521_ta);
				};
			}
			_iter_next_1c50c576e:;
			++it;
			goto _iter_begin_1c50c576e;
		}
		_iter_end_1c50c576e:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1c50c584b:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_ident == _14831_ident) && (_16121_s.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16121_s);
				};
			}
			_iter_next_1c50c584b:;
			++it;
			goto _iter_begin_1c50c584b;
		}
		_iter_end_1c50c584b:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c50c64ea:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_ident == _14831_ident) && (_16721_f.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16721_f);
				};
			}
			_iter_next_1c50c64ea:;
			++it;
			goto _iter_begin_1c50c64ea;
		}
		_iter_end_1c50c64ea:;
	};
	if (_14843_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1c50c8002:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_ident == _14831_ident)) {
					return jule::Any(_17721_t);
				};
			}
			_iter_next_1c50c8002:;
			++it;
			goto _iter_begin_1c50c8002;
		}
		_iter_end_1c50c8002:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1c50c86a6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a159ec_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_ident == _14831_ident)) {
					return jule::Any(_18321_e);
				};
			}
			_iter_next_1c50c86a6:;
			++it;
			goto _iter_begin_1c50c86a6;
		}
		_iter_end_1c50c86a6:;
	};
	return nullptr;
}



inline jule::Bool _1c2bdedc4_is_duplicated_ident(_1c2bdbbe5_SymbolTable* _self_, jule::U64 _19534_itself, jule::Str _19551_ident, jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1c50c97a6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> &_19616_v = *it;
			{
				if ((((static_cast<jule::U64>(_19616_v) != _19534_itself) && (_19616_v.get()._field_ident == _19551_ident)) && (_19616_v.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1c50c97a6:;
			++it;
			goto _iter_begin_1c50c97a6;
		}
		_iter_end_1c50c97a6:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1c50caa82:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1a3e9_TypeAlias> &_20216_ta = *it;
			{
				if ((((static_cast<jule::U64>(_20216_ta) != _19534_itself) && (_20216_ta.get()._field_ident == _19551_ident)) && (_20216_ta.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1c50caa82:;
			++it;
			goto _iter_begin_1c50caa82;
		}
		_iter_end_1c50caa82:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1c50c9b3b:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> &_20816_s = *it;
			{
				if ((((static_cast<jule::U64>(_20816_s) != _19534_itself) && (_20816_s.get()._field_ident == _19551_ident)) && (_20816_s.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1c50c9b3b:;
			++it;
			goto _iter_begin_1c50c9b3b;
		}
		_iter_end_1c50c9b3b:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1c50cbb93:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> &_21416_f = *it;
			{
				if ((((static_cast<jule::U64>(_21416_f) != _19534_itself) && (_21416_f.get()._field_ident == _19551_ident)) && (_21416_f.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1c50cbb93:;
			++it;
			goto _iter_begin_1c50cbb93;
		}
		_iter_end_1c50cbb93:;
	};
	if (_19563_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1c50cdd1b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a137db_Trait> &_22416_t = *it;
			{
				if (((static_cast<jule::U64>(_22416_t) != _19534_itself) && (_22416_t.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1c50cdd1b:;
			++it;
			goto _iter_begin_1c50cdd1b;
		}
		_iter_end_1c50cdd1b:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1c50ce635:;
		if (it != expr.end()) {
			jule::Ptr<_1c2a159ec_Enum> &_23016_e = *it;
			{
				if (((static_cast<jule::U64>(_23016_e) != _19534_itself) && (_23016_e.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1c50ce635:;
			++it;
			goto _iter_begin_1c50ce635;
		}
		_iter_end_1c50ce635:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2bdbbe5_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2be2190_is_nil(_1c2be1ca5_Data* _self_) {
	return _1c2c1c000_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1c2be2404_is_void(_1c2be1ca5_Data* _self_) {
	return _1c2c1c264_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1c2be2668_is_const(_1c2be1ca5_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1c2be2976_good_operand(_1c2be1ca5_Data* _self_, jule::Ptr<_1c2be1ca5_Data>& _9536_other) {
	return ((((_1c2c2304a_prim(_9536_other.get()._field_kind.ptr()) == nullptr) || (!(_1c2c28913_is_any(_1c2c2304a_prim(_9536_other.get()._field_kind.ptr()).ptr())))) && (_1c2c2449c_trt(_9536_other.get()._field_kind.ptr()) == nullptr)) && (!(_1c2c1c000_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2be1ca5_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2be2d2d_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1c2be3ceb_push_err(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _12327_token, jule::Str _12342_fmt, jule::Slice<jule::Any> _12355_args) {
	_1c2b82905_push_err((*_self_)._field_s.ptr(), _12327_token,_12342_fmt,jule::Any(_12355_args));
}



inline void _1c2be411a_push_suggestion(_1c2be3823_Eval* _self_, jule::Str _12834_fmt, jule::Slice<jule::Any> _12847_args) {
	_1c2b82c24_push_suggestion((*_self_)._field_s.ptr(), _12834_fmt,jule::Any(_12847_args));
}



inline void _1c2be42e6_allow_builtin(_1c2be3823_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1c2be44c2_disallow_builtin(_1c2be3823_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1c2be4736_is_unsafe(_1c2be3823_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1c2be499a_is_global(_1c2be3823_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b7eeda_Sema>>()) {
			_case_begin_1c50d7242:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c50d74a6:;
			{
				return false;
			}
		}
		_match_end_1c50d7451:;
	};
}



inline jule::Bool _1c2be4ca8_apply_numeric_prefix(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _15544_d) {
	if (((((_15544_d == nullptr) || (!(_1c2be2668_is_const(_15544_d.ptr())))) || (_1c2c2304a_prim(_15544_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1c2c256e0_Prim> _16213_prim = _1c2c2304a_prim((*_self_)._field_prefix.ptr());;
	if ((_16213_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1c2b5e7c2_is_float(_1c2c25a53_to_str(_16213_prim.ptr()))) {
			_case_begin_1c50d9cd3:;
			{
				_15544_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>((*((*_self_)._field_prefix)));
				_1c2abeb83_set_f64(_15544_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c2abde18_as_f64(_15544_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2b5de53_is_sig_int(_1c2c25a53_to_str(_16213_prim.ptr()))) {
			_case_begin_1c50d9d49:;
			{
				if ((!(_1c2bcca2c_sig_assignable(_1c2c25a53_to_str(_16213_prim.ptr()),_15544_d)))) {
					return false;
				};
				_15544_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>((*((*_self_)._field_prefix)));
				_1c2abe18d_set_i64(_15544_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_15544_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2b5e23e_is_unsig_int(_1c2c25a53_to_str(_16213_prim.ptr()))) {
			_case_begin_1c50d9db0:;
			{
				if ((!(_1c2bccb5e_unsig_assignable(_1c2c25a53_to_str(_16213_prim.ptr()),_15544_d)))) {
					return false;
				};
				_15544_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>((*((*_self_)._field_prefix)));
				_1c2abe413_set_u64(_15544_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_15544_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1c50da0ad:;
	};
	return true;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be501c_lit_nil(_1c2be3823_Eval* _self_) {
	jule::Ptr<_1c2abb9a4_Const> _19117_constant = static__1c2abc631_new_nil();;
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=_19117_constant, ._field_decl=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=nullptr}), ._field_model=jule::Any(_19117_constant)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be532a_lit_str(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr>& _20223_l) {
	jule::Str _20317_s = _20223_l.get()._field_value.slice(1LL,(_20223_l.get()._field_value.len() - 1LL));;
	if (_20513a4c9_is_raw_str(_20223_l.get()._field_value)) {
		_20317_s=_1c2bcbb19_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20317_s));
	} else {
		_20317_s=_1c2bcbda0_to_str(static_cast<jule::Slice<jule::U8>>(_20317_s));
	};
	jule::Ptr<_1c2abb9a4_Const> _20917_constant = static__1c2abc18b_new_str(_20317_s);;
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=_20917_constant, ._field_decl=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("str", 3)), 5)}), ._field_model=jule::Any(_20917_constant)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be5638_lit_bool(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr>& _22324_l) {
	jule::Ptr<_1c2abb9a4_Const> _22417_constant = static__1c2abbde4_new_bool((_22324_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=_22417_constant, ._field_decl=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)}), ._field_model=jule::Any(_22417_constant)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be5946_lit_rune(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr>& _23724_l) {
	;
	;
	jule::Str _24113_lt = _23724_l.get()._field_value.slice(1LL,(_23724_l.get()._field_value.len() - 1LL));;
	jule::I32 _24213_r = _1c2bcb9d7_to_rune(static_cast<jule::Slice<jule::U8>>(_24113_lt));;
	jule::Ptr<_1c2be1ca5_Data> _24317_data = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=static__1c2aba9a3_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24213_r))), ._field_decl=false});;
	jule::Bool _25113_is_ascii = _1c2bca013_is_ascii(_24213_r);;
	if (_25113_is_ascii) {
		_24317_data.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u8", 2)), 5)});
	} else {
		_24317_data.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i32", 3)), 5)});
	};
	_24317_data.get()._field_model=jule::Any(jule::new_ptr<_1c1cc2d87_RuneExprModel>(_1c1cc2d87_RuneExprModel{._field_code=_24213_r}));
	_24317_data.get()._field_is_rune=true;
	return _24317_data;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be5c54_lit_float(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr>& _26725_l) {
	;
	jule::F64 _27013_f = ({
		auto except = _1c2a0da4a_parse_float(_26725_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1c2abb9a4_Const> _27117_constant = static__1c2abc433_new_f64(_27013_f);;
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=_27117_constant, ._field_decl=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f64", 3)), 5)}), ._field_model=jule::Any(_27117_constant)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be6062_lit_int(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr>& _28527_l) {
	;
	jule::Str _28817_lit = _28527_l.get()._field_value;;
	jule::I64 _28917_base = 0LL;;
	{
		
		if (_204c1a131_has_prefix(_28817_lit,jule::Str("0x", 2))) {
			_case_begin_1c50ed09e:;
			{
				(_28817_lit).mut_slice(2LL);;
				_28917_base=16LL;
			}
		}
		else if (_204c1a131_has_prefix(_28817_lit,jule::Str("0b", 2))) {
			_case_begin_1c50ed3bd:;
			{
				(_28817_lit).mut_slice(2LL);;
				_28917_base=2LL;
			}
		}
		else if (_204c1a131_has_prefix(_28817_lit,jule::Str("0o", 2))) {
			_case_begin_1c50ed434:;
			{
				(_28817_lit).mut_slice(2LL);;
				_28917_base=8LL;
			}
		}
		else if (((_28817_lit[0LL] == '0') && (_28817_lit.len() > 1LL))) {
			_case_begin_1c50ecc91:;
			{
				(_28817_lit).mut_slice(1LL);;
				_28917_base=8LL;
			}
		}
		else {
			_case_begin_1c50ecc2a:;
			{
				_28917_base=10LL;
			}
		}
		_match_end_1c50ecbb4:;
	};
	jule::Ptr<_1c2be1ca5_Data> _30917_d = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_decl=false});;
	jule::Bool _31517_ok = true;;
	jule::I64 _31613_sig = ({
		auto except = _1c2a0c0cb_parse_int(_28817_lit,_28917_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31517_ok=false;
			0LL;
		});
	});;
	if (_31517_ok) {
		_30917_d.get()._field_constant=static__1c2aba9a3_new_i64(_31613_sig);
		_30917_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)});
	} else {
		jule::U64 _32617_unsig = ({
			auto except = _1dbbb3653_parse_uint(_28817_lit,_28917_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1c2be3ceb_push_err(&(*_self_), _28527_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1c2be411a_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30917_d.get()._field_constant=static__1c2abbb91_new_u64(_32617_unsig);
		_30917_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("uint", 4)), 5)});
	};
	_30917_d.get()._field_model=jule::Any(_30917_d.get()._field_constant);
	if ((!(_1c2be4ca8_apply_numeric_prefix(&(*_self_), _30917_d)))) {
		_1c2c16318_fit_bitsize(_30917_d);
	};
	return _30917_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be6370_lit_num(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr>& _34727_l) {
	{
		
		if (_20513b0e0_is_float(_34727_l.get()._field_value)) {
			_case_begin_1c5106dbb:;
			{
				return _1c2be5c54_lit_float(&(*_self_), _34727_l);
			}
		}
		else {
			_case_begin_1c510655d:;
			{
				return _1c2be6062_lit_int(&(*_self_), _34727_l);
			}
		}
		_match_end_1c5106492:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be667d_eval_lit(_1c2be3823_Eval* _self_, jule::Ptr<_20514ba18_LitExpr> _35627_lit) {
	{
		
		if (_204ee7e03_is_nil(_35627_lit.ptr())) {
			_case_begin_1c510862b:;
			{
				return _1c2be501c_lit_nil(&(*_self_));
			}
		}
		else if (_20513a232_is_str(_35627_lit.get()._field_value)) {
			_case_begin_1c5108692:;
			{
				return _1c2be532a_lit_str(&(*_self_), _35627_lit);
			}
		}
		else if (_20513ad48_is_bool(_35627_lit.get()._field_value)) {
			_case_begin_1c51083b7:;
			{
				return _1c2be5638_lit_bool(&(*_self_), _35627_lit);
			}
		}
		else if (_20513a771_is_rune(_35627_lit.get()._field_value)) {
			_case_begin_1c510842d:;
			{
				return _1c2be5946_lit_rune(&(*_self_), _35627_lit);
			}
		}
		else if (_20513b387_is_num(_35627_lit.get()._field_value)) {
			_case_begin_1c5108494:;
			{
				return _1c2be6370_lit_num(&(*_self_), _35627_lit);
			}
		}
		else {
			_case_begin_1c5107e55:;
			{
				return nullptr;
			}
		}
		_match_end_1c5107d89:;
	};
}



inline jule::Any _1c2be698b_find_builtins(_1c2be3823_Eval* _self_, jule::Str _37332_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b77301_ImportInfo>>()) {
			_case_begin_1c510b4b9:;
			{
				jule::Any _37621_def = _1c2c16109_find_builtins_import(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c2b77301_ImportInfo>());;
				if ((_37621_def != nullptr)) {
					return jule::Any(_37621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b7eeda_Sema>>()) {
			_case_begin_1c510b530:;
			{
				jule::Any _38121_def = _1c2c16c97_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c2b7eeda_Sema>());;
				if ((_38121_def != nullptr)) {
					return jule::Any(_38121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
			_case_begin_1c510b5b8:;
			{
				jule::Any _38621_def = _1c2c16c97_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>().get()._field_s);;
				if ((_38621_def != nullptr)) {
					return jule::Any(_38621_def);
				};
			}
		}
		_match_end_1c510b464:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1c2c73342_find_builtin_def(_37332_ident));
}



inline jule::Any _1c2be6d43_get_def(_1c2be3823_Eval* _self_, jule::Str _39726_ident, jule::Bool _39738_cpp_linked) {
	if ((!(_39738_cpp_linked))) {
		jule::Ptr<_1c2a159ec_Enum> _39921_enm = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c39209_find_enum((*_self_)._field_lookup, _39726_ident);;
		if ((_39921_enm != nullptr)) {
			return jule::Any(_39921_enm);
		};
	};
	jule::Ptr<_1c2b9a4de_Var> _40517_v = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c37ec7_find_var((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_40517_v != nullptr)) {
		return jule::Any(_40517_v);
	};
	jule::Ptr<_1c1cc65b6_Fn> _41017_f = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c38add_find_fn((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_41017_f != nullptr)) {
		return jule::Any(_41017_f);
	};
	jule::Ptr<_1c1cb3e55_Struct> _41517_s = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c38736_find_struct((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_41517_s != nullptr)) {
		return jule::Any(_41517_s);
	};
	jule::Ptr<_1c2c1a3e9_TypeAlias> _42017_ta = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c3837e_find_type_alias((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_42017_ta != nullptr)) {
		return jule::Any(_42017_ta);
	};
	return jule::Any(_1c2be698b_find_builtins(&(*_self_), _39726_ident));
}



inline void _1c2be70b8_push_reference(_1c2be3823_Eval* _self_, jule::Ptr<_1c1ccc798_ReferenceStack>& _42838_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
			_case_begin_1c51153b3:;
			{
				jule::Ptr<_1c2b6197d_ScopeChecker> _43121_sc = _1c2b638d6_get_root((*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>());;
				if ((!(_1c1ccd7cc_exist_1(_42838_references.ptr(), _43121_sc.get()._field_owner)))) {
					_1c1ccd4be_push(_42838_references.ptr(), jule::Any(_43121_sc.get()._field_owner));
				};
			}
		}
		else {
			_case_begin_1c5114bba:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c1ccd7cc_exist_0(_42838_references.ptr(), (*_self_)._field_owner))))) {
					_1c1ccd4be_push(_42838_references.ptr(), jule::Any((*_self_)._field_owner));
				};
			}
		}
		_match_end_1c5114b65:;
	};
}



inline void _1c2be733d_push_reference_to_fn(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cc9762_FnIns>& _44244_f) {
	_1c2be70b8_push_reference(&(*_self_), _44244_f.get()._field_references);
}



inline void _1c2be75b3_push_reference_to_var(_1c2be3823_Eval* _self_, jule::Ptr<_1c2b9a4de_Var>& _44645_v) {
	if ((_44645_v.get()._field_references != nullptr)) {
		_1c2be70b8_push_reference(&(*_self_), _44645_v.get()._field_references);
	};
}



inline void _1c2be785a_push_reference_to_struct(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _45248_s) {
	_1c2be70b8_push_reference(&(*_self_), _45248_s.get()._field_references);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be7b79___eval_enum(_1c2be3823_Eval* _self_, jule::Ptr<_1c2a159ec_Enum> _45630_enm) {
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=nullptr, ._field_decl=true, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_45630_enm, 3)})});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be8031_eval_enum(_1c2be3823_Eval* _self_, jule::Ptr<_1c2a159ec_Enum> _46832_enm, jule::Ptr<_205139176_Token> _46844_error_token) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _46832_enm.get()._field_public,_46832_enm.get()._field_token)))) {
		_1c2be3ceb_push_err(&(*_self_), _46844_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46832_enm.get()._field_ident)}));
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1c2be7b79___eval_enum(&(*_self_), _46832_enm);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be833e___eval_struct(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cb6ad4_StructIns> _47832_s) {
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=nullptr, ._field_decl=true, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_47832_s, 0)}), ._field_model=jule::Any(_47832_s)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be86e6_eval_struct(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cb6ad4_StructIns> _49134_s, jule::Ptr<_205139176_Token> _49149_error_token) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _49134_s.get()._field_decl.get()._field_public,_49134_s.get()._field_decl.get()._field_token)))) {
		_1c2be3ceb_push_err(&(*_self_), _49149_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49134_s.get()._field_decl.get()._field_ident)}));
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2be8d23_check_deprecated(&(*_self_), _49134_s.get()._field_decl.get()._field_directives,_49149_error_token);
	return _1c2be833e___eval_struct(&(*_self_), _49134_s);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be8a04_eval_fn_ins(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cc9762_FnIns> _50330_f) {
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_mutable=false, ._field_constant=nullptr, ._field_decl=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_50330_f, 1)}), ._field_model=jule::Any(_50330_f)});
}



inline void _1c2be8d23_check_deprecated(_1c2be3823_Eval* _self_, jule::Slice<jule::Ptr<_204ec174a_Directive>>& _51640_directives, jule::Ptr<_205139176_Token> _51682_tok) {
	if (_1c2be4736_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_204ec174a_Directive> _52113_d = _1c2c15c74_find_directive(_51640_directives,jule::Str("deprecated", 10));;
	if ((_52113_d != nullptr)) {
		if ((_52113_d.get()._field_args.len() == 0LL)) {
			_1c2be3ceb_push_err(&(*_self_), _51682_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1c2be3ceb_push_err(&(*_self_), _51682_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_52113_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2be91ca_eval_fn(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cc65b6_Fn> _53230_f, jule::Ptr<_205139176_Token> _53238_error_token) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _53230_f.get()._field_public,_53230_f.get()._field_token)))) {
		_1c2be3ceb_push_err(&(*_self_), _53238_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_53230_f.get()._field_ident)}));
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2be8d23_check_deprecated(&(*_self_), _53230_f.get()._field_directives,_53238_error_token);
	jule::Ptr<_1c1cc9762_FnIns> _54117_ins = _1c1cc8211_instance(_53230_f);;
	_1c2be733d_push_reference_to_fn(&(*_self_), _54117_ins);
	return _1c2be8a04_eval_fn_ins(&(*_self_), _54117_ins);
}



inline void _1c2be95b5_push_illegal_cycle_error(_1c2be3823_Eval* _self_, jule::Ptr<_1c2b9a4de_Var>& _54644_v1, jule::Ptr<_1c2b9a4de_Var>& _54655_v2, jule::Str& _54670_message) {
	;
	jule::Str _54913_refers_to = _2046db6b3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54644_v1.get()._field_ident),jule::Any(_54655_v2.get()._field_ident)}));;
	(_54670_message).buffer.insert(0, (((_204c21b2c_repeat(jule::Str(" ", 1),4LL) + _54913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c2be997d_check_cross_cycle(_1c2be3823_Eval* _self_, jule::Ptr<_1c2b9a4de_Var>& _55337_v, jule::Str& _55351_message) {
	{
		auto &expr = _55337_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1c51309b6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> &_55416_d = *it;
			{
				if ((_55416_d == (*_self_)._field_owner)) {
					_1c2be95b5_push_illegal_cycle_error(&(*_self_), _55337_v,_55416_d,_55351_message);
					return false;
				};
				if ((!(_1c2be997d_check_cross_cycle(&(*_self_), _55416_d,_55351_message)))) {
					_1c2be95b5_push_illegal_cycle_error(&(*_self_), _55337_v,_55416_d,_55351_message);
					return false;
				};
			}
			_iter_next_1c51309b6:;
			++it;
			goto _iter_begin_1c51309b6;
		}
		_iter_end_1c51309b6:;
	};
	return true;
}



inline jule::Bool _1c2be9d35_check_illegal_cycles(_1c2be3823_Eval* _self_, jule::Ptr<_1c2b9a4de_Var>& _57244_v, jule::Ptr<_205139176_Token> _57253_decl_token) {
	jule::Bool _57275_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_57275_ok = true;
		return _57275_ok;
	};
	if (((*_self_)._field_owner == _57244_v)) {
		_1c2be3ceb_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_57275_ok = false;
		return _57275_ok;
	};
	jule::Str _58417_message = jule::Str();;
	if ((!(_1c2be997d_check_cross_cycle(&(*_self_), _57244_v,_58417_message)))) {
		jule::Str _58721_err_msg = _58417_message;;
		_58417_message=jule::Str();
		_1c2be95b5_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_57244_v,_58417_message);
		_58721_err_msg=(_58721_err_msg + _58417_message);
		_1c2be3ceb_push_err(&(*_self_), _57253_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58721_err_msg)}));
		_57275_ok = false;
		return _57275_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_57244_v);;
	_57275_ok = true;
	return _57275_ok;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bea1dc_eval_var(_1c2be3823_Eval* _self_, jule::Ptr<_1c2b9a4de_Var> _59931_v, jule::Ptr<_205139176_Token> _59940_error_token) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _59931_v.get()._field_public,_59931_v.get()._field_token)))) {
		_1c2be3ceb_push_err(&(*_self_), _59940_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59931_v.get()._field_ident)}));
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2be8d23_check_deprecated(&(*_self_), _59931_v.get()._field_directives,_59940_error_token);
	_59931_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b7eeda_Sema>>()) {
			_case_begin_1c5139bbd:;
			{
				jule::Bool _61317_ok = _1c2be9d35_check_illegal_cycles(&(*_self_), _59931_v,_59940_error_token);;
				if ((!(_61317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
			_case_begin_1c5139c34:;
			{
				if (((!(_59931_v.get()._field_reference)) || _1c2be4736_is_unsafe(&(*_self_)))) {
					goto _match_end_1c5139b35;
				};
				jule::Ptr<_1c2b6197d_ScopeChecker> _62121_s = (*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>();;
				while (((_62121_s.get()._field_owner == nullptr) && (_62121_s.get()._field_parent != nullptr))) {
					{
						_62121_s=_62121_s.get()._field_parent;
					}
				_iter_next_1c513aa9d:;
				}
				_iter_end_1c513aa9d:;;
				if ((((_62121_s.get()._field_owner != nullptr) && _62121_s.get()._field_owner.get()._field_anon) && (_59931_v.get()._field_scope != _62121_s.get()._field_owner.get()._field_scope))) {
					_1c2be3ceb_push_err(&(*_self_), _59940_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59931_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1c5139b35:;
	};
	_1c2be75b3_push_reference_to_var(&(*_self_), _59931_v);
	if (((!(_59931_v.get()._field_cpp_linked)) && ((_59931_v.get()._field_value == nullptr) || (_59931_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_59931_v.get()._field_constant) {
			_1c2b93460_check_type_var((*_self_)._field_s, _59931_v,jule::Trait<_1c2c3934c_Lookup>((*_self_)._field_s, 3));
			if ((_59931_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_59931_v.get()._field_kind == nullptr) || (_59931_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_59931_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1c2b93460_check_type_var((*_self_)._field_s, _59931_v,(*_self_)._field_lookup);
		if (((_59931_v.get()._field_kind == nullptr) || (_59931_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1c2be1ca5_Data> _66117_d = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=(!(_59931_v.get()._field_constant)), ._field_mutable=_59931_v.get()._field_mutable, ._field_reference=_59931_v.get()._field_reference, ._field_kind=_59931_v.get()._field_kind.get()._field_kind, ._field_model=jule::Any(_59931_v)});;
	if ((((!(_59931_v.get()._field_cpp_linked)) && _1c2b9a896_is_initialized(_59931_v.ptr())) && (_59931_v.get()._field_value.get()._field_data != nullptr))) {
		_66117_d.get()._field_is_rune=_59931_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_59931_v.get()._field_constant && (_59931_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_66117_d.get()._field_constant=jule::new_ptr<_1c2abb9a4_Const>((*(_59931_v.get()._field_value.get()._field_data.get()._field_constant)));
		_66117_d.get()._field_model=jule::Any(_66117_d.get()._field_constant);
	};
	if (_1c2be2668_is_const(_66117_d.ptr())) {
		_1c2be4ca8_apply_numeric_prefix(&(*_self_), _66117_d);
	};
	return _66117_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bea594_eval_type_alias(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1a3e9_TypeAlias> _68538_ta, jule::Ptr<_205139176_Token> _68554_error_token) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _68538_ta.get()._field_public,_68538_ta.get()._field_token)))) {
		_1c2be3ceb_push_err(&(*_self_), _68554_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68538_ta.get()._field_ident)}));
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_68538_ta.get()._field_used=true;
	jule::Trait<_1c2c1ac02_Kind> _69417_kind = _68538_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1c2be1ca5_Data> _69517_d = nullptr;;
	{
		auto &_match_expr{ _69417_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb6ad4_StructIns>>()) {
			_case_begin_1c514a1d9:;
			{
				_69517_d=_1c2be833e___eval_struct(&(*_self_), _69417_kind.operator jule::Ptr<_1c1cb6ad4_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2a159ec_Enum>>()) {
			_case_begin_1c5148d42:;
			{
				_69517_d=_1c2be7b79___eval_enum(&(*_self_), _69417_kind.operator jule::Ptr<_1c2a159ec_Enum>());
			}
		}
		else {
			_case_begin_1c5148c10:;
			{
				_69517_d=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_decl=true, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=_68538_ta.get()._field_kind.get()._field_kind.get()._field_kind})});
				if (_68538_ta.get()._field_cpp_linked) {
					_69517_d.get()._field_kind.get()._field_cpp_ident=_68538_ta.get()._field_ident;
				} else {
					_69517_d.get()._field_kind.get()._field_cpp_ident=_68538_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_69517_d.get()._field_model=jule::Any(_69517_d.get()._field_kind);
			}
		}
		_match_end_1c5148baa:;
	};
	_69517_d.get()._field_kind.get()._field_generic=_68538_ta.get()._field_generic;
	return _69517_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bea94b_eval_def(_1c2be3823_Eval* _self_, jule::Any _71931_def, jule::Ptr<_205139176_Token> _71941_ident) {
	{
		auto &_match_expr{ _71931_def };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c514c98e:;
			{
				return _1c2bea1dc_eval_var(&(*_self_), _71931_def.operator jule::Ptr<_1c2b9a4de_Var>(),_71941_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2a159ec_Enum>>()) {
			_case_begin_1c514ca05:;
			{
				return _1c2be8031_eval_enum(&(*_self_), _71931_def.operator jule::Ptr<_1c2a159ec_Enum>(),_71941_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c514cac1:;
			{
				return _1c2be86e6_eval_struct(&(*_self_), _1c1cb4384_instance(_71931_def.operator jule::Ptr<_1c1cb3e55_Struct>()),_71941_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc65b6_Fn>>()) {
			_case_begin_1c514cb37:;
			{
				jule::Ptr<_1c1cc65b6_Fn> _72821_f = _71931_def.operator jule::Ptr<_1c1cc65b6_Fn>();;
				if ((_72821_f.get()._field_ident != jule::Str("init", 4))) {
					return _1c2be91ca_eval_fn(&(*_self_), _72821_f,_71941_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc9762_FnIns>>()) {
			_case_begin_1c514cb9d:;
			{
				return _1c2be8a04_eval_fn_ins(&(*_self_), _71931_def.operator jule::Ptr<_1c1cc9762_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c1a3e9_TypeAlias>>()) {
			_case_begin_1c514cc14:;
			{
				return _1c2bea594_eval_type_alias(&(*_self_), _71931_def.operator jule::Ptr<_1c2c1a3e9_TypeAlias>(),_71941_ident);
			}
		}
		_match_end_1c514c84b:;
	};
	_1c2be3ceb_push_err(&(*_self_), _71941_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71941_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2beac59_eval_ident(_1c2be3823_Eval* _self_, jule::Ptr<_20514c0ce_IdentExpr> _74129_ident) {
	jule::Any _74217_def = _1c2be6d43_get_def(&(*_self_), _74129_ident.get()._field_ident,_74129_ident.get()._field_cpp_linked);;
	return _1c2bea94b_eval_def(&(*_self_), jule::Any(_74217_def),_74129_ident.get()._field_token);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2beb067_eval_unary(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514c2bb_UnaryExpr> _74634_u) {
	_1c2c0d453_UnaryEval _74717_unary = static__1c2c0d909_new(_self_);;
	return _1c2c0eba2_eval(&_74717_unary, _74634_u);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2beb375_eval_variadic(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514c4a8_VariadicExpr> _75137_v) {
	if ((_75137_v.get()._field_expr == nullptr)) {
		_1c2be3ceb_push_err(_self_.ptr(), _75137_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _75717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75717_prefix;
	});;
	jule::Ptr<_1c2be1ca5_Data> _76117_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_75137_v.get()._field_expr));;
	if ((_76117_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2c1ce79_variadicable(_76117_d.get()._field_kind.ptr())))) {
		_1c2be3ceb_push_err(_self_.ptr(), _75137_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_76117_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1c2c2965b_Slc> _77113_slc = _1c2c23c60_slc(_76117_d.get()._field_kind.ptr());;
	_76117_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_variadic=true, ._field_generic=_77113_slc.get()._field_elem.get()._field_generic, ._field_cpp_ident=_77113_slc.get()._field_elem.get()._field_cpp_ident, ._field_kind=_77113_slc.get()._field_elem.get()._field_kind});
	return _76117_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2beb683_eval_unsafe(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514bc05_UnsafeExpr> _78135_u) {
	jule::Bool _78213_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1c2be1ca5_Data> _78517_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_78135_u.get()._field_expr));;
	_self_.get()._field_unsafety=_78213_unsafety;
	return _78517_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2beb991_eval_arr(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514d8d8_SliceExpr> _79232_s) {
	jule::Ptr<_1c2c2b806_Arr> _79417_pt = _1c2c239eb_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1c2c2b806_Arr> _79617_arr = jule::new_ptr<_1c2c2b806_Arr>(_1c2c2b806_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_79417_pt.get()._field_elem});;
	jule::Bool _80217_filled = false;;
	if ((_79232_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79232_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_20514c4a8_VariadicExpr>>()) {
				_case_begin_1c515e41d:;
				{
					if ((_79232_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_20514c4a8_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1c515e396;
					};
					if (_79417_pt.get()._field_auto) {
						_1c2be3ceb_push_err(_self_.ptr(), _79232_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_80217_filled=true;
					_79232_s.get()._field_exprs=_79232_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1c515e396:;
		};
	};
	_79617_arr.get()._field_n=static_cast<jule::I64>(_79232_s.get()._field_exprs.len());
	if ((!(_79417_pt.get()._field_auto))) {
		if ((_79617_arr.get()._field_n > _79417_pt.get()._field_n)) {
			_1c2be3ceb_push_err(_self_.ptr(), _79232_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79617_arr.get()._field_n < _79417_pt.get()._field_n)) {
			_79617_arr.get()._field_n=_79417_pt.get()._field_n;
		};
	};
	jule::Ptr<_1c1cbdb52_ArrayExprModel> _83117_model = jule::new_ptr<_1c1cbdb52_ArrayExprModel>(_1c1cbdb52_ArrayExprModel{._field_kind=_79617_arr});;
	if (_80217_filled) {
		_83117_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_83117_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_79232_s.get()._field_exprs.len());
	};
	jule::Ptr<_1c2c1b131_TypeKind> _84017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79617_arr.get()._field_elem;
	{
		auto &expr = _79232_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c51646a9:;
		if (it != expr.end()) {
			jule::Ptr<_2050bba21_Expr> _84221_elem = *it;
			{
				jule::Ptr<_1c2be1ca5_Data> _84321_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_84221_elem));;
				if ((_84321_d == nullptr)) {
					goto _iter_next_1c51646a9;
				};
				_1c2b87b5d_check_assign_type(_self_.get()._field_s, false,_79617_arr.get()._field_elem,_84321_d,_79232_s.get()._field_token);
				_83117_model.get()._field_elems = jule::alloc_for_append(_83117_model.get()._field_elems,1);_83117_model.get()._field_elems.__push(jule::Any(_84321_d.get()._field_model));;
			}
			_iter_next_1c51646a9:;
			++it;
			goto _iter_begin_1c51646a9;
		}
		_iter_end_1c51646a9:;
	};
	_self_.get()._field_prefix=_84017_prefix;
	if (_80217_filled) {
		_83117_model.get()._field_elems = jule::alloc_for_append(_83117_model.get()._field_elems,1);_83117_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=true, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_79617_arr, 10)}), ._field_model=jule::Any(_83117_model)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bebd48_eval_exp_slc(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514d8d8_SliceExpr> _86736_s, jule::Ptr<_1c2c1b131_TypeKind> _86755_elem_type) {
	jule::Ptr<_1c2c2965b_Slc> _86817_slc = jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=_86755_elem_type});;
	jule::Ptr<_1c1cbada2_SliceExprModel> _87217_model = jule::new_ptr<_1c1cbada2_SliceExprModel>(_1c1cbada2_SliceExprModel{._field_elem_kind=_86755_elem_type, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_86736_s.get()._field_exprs.len())});;
	jule::Ptr<_1c2c1b131_TypeKind> _87717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_86817_slc.get()._field_elem;
	{
		auto &expr = _86736_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c51692e6:;
		if (it != expr.end()) {
			jule::Ptr<_2050bba21_Expr> _87921_elem = *it;
			{
				jule::Ptr<_1c2be1ca5_Data> _88021_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_87921_elem));;
				if ((_88021_d == nullptr)) {
					goto _iter_next_1c51692e6;
				};
				_1c2b87b5d_check_assign_type(_self_.get()._field_s, false,_86817_slc.get()._field_elem,_88021_d,_86736_s.get()._field_token);
				_87217_model.get()._field_elems = jule::alloc_for_append(_87217_model.get()._field_elems,1);_87217_model.get()._field_elems.__push(jule::Any(_88021_d.get()._field_model));;
			}
			_iter_next_1c51692e6:;
			++it;
			goto _iter_begin_1c51692e6;
		}
		_iter_end_1c51692e6:;
	};
	_self_.get()._field_prefix=_87717_prefix;
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=true, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_86817_slc, 7)}), ._field_model=jule::Any(_87217_model)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bec156_eval_slice_expr(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514d8d8_SliceExpr> _89839_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1c2c239eb_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c516c7b1:;
				{
					return _1c2beb991_eval_arr(_self_, _89839_s);
				}
			}
			else if ((_1c2c23c60_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c516c838:;
				{
					jule::Ptr<_1c2c2965b_Slc> _90425_pt = _1c2c23c60_slc(_self_.get()._field_prefix.ptr());;
					return _1c2bebd48_eval_exp_slc(_self_, _89839_s,_90425_pt.get()._field_elem);
				}
			}
			_match_end_1c516c6a1:;
		};
	};
	jule::Ptr<_1c2c1b131_TypeKind> _90917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89839_s.get()._field_exprs.len() == 0LL)) {
		_1c2be3ceb_push_err(_self_.ptr(), _89839_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _91717_first_elem = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_89839_s.get()._field_exprs[0LL]));;
	if ((_91717_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _92217_d = _1c2bebd48_eval_exp_slc(_self_, _89839_s,_91717_first_elem.get()._field_kind);;
	_self_.get()._field_prefix=_90917_prefix;
	return _92217_d;
}



inline void _1c2bec497_check_integer_indexing_by_data(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _92854_d, jule::Ptr<_205139176_Token> _92864_token) {
	jule::Str _92913_err_key = _1c2c18172_check_data_for_integer_indexing(_92854_d);;
	{
		auto &_match_expr{ _92913_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c5173201:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1c5173267:;
			{
				_1c2be3ceb_push_err(&(*_self_), _92864_token,_92913_err_key,jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_92854_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1c5172ab3:;
			{
				_1c2be3ceb_push_err(&(*_self_), _92864_token,_92913_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1c5173058:;
	};
}



inline void _1c2bec871_indexing_ptr(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _94036_d, jule::Ptr<_1c2be1ca5_Data>& _94051_index, jule::Ptr<_20514b7d7_IndexingExpr>& _94066_i) {
	_1c2bec497_check_integer_indexing_by_data(&(*_self_), _94051_index,_94066_i.get()._field_token);
	jule::Ptr<_1c2c2c263_Ptr> _94317_ptr = _1c2c23523_ptr(_94036_d.get()._field_kind.ptr());;
	{
		
		if (_1c2c2cc36_is_unsafe(_94317_ptr.ptr())) {
			_case_begin_1c51761b0:;
			{
				_1c2be3ceb_push_err(&(*_self_), _94066_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c2be4736_is_unsafe(&(*_self_))))) {
			_case_begin_1c5176237:;
			{
				_1c2be3ceb_push_err(&(*_self_), _94066_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c51760a0:;
	};
	_94036_d.get()._field_kind=_94317_ptr.get()._field_elem;
}



inline void _1c2becc39_indexing_arr(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _95536_d, jule::Ptr<_1c2be1ca5_Data>& _95551_index, jule::Ptr<_20514b7d7_IndexingExpr>& _95566_i) {
	jule::Ptr<_1c2c2b806_Arr> _95617_arr = _1c2c239eb_arr(_95536_d.get()._field_kind.ptr());;
	_95536_d.get()._field_kind=_95617_arr.get()._field_elem;
	_1c2bec497_check_integer_indexing_by_data(&(*_self_), _95551_index,_95566_i.get()._field_token);
	if ((_1c2be2668_is_const(_95551_index.ptr()) && (_1c2abde18_as_f64(_95551_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_95617_arr.get()._field_n)))) {
		_1c2be3ceb_push_err(&(*_self_), _95566_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c2bed102_indexing_slc(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _96436_d, jule::Ptr<_1c2be1ca5_Data>& _96451_index, jule::Ptr<_20514b7d7_IndexingExpr>& _96466_i) {
	jule::Ptr<_1c2c2965b_Slc> _96517_slc = _1c2c23c60_slc(_96436_d.get()._field_kind.ptr());;
	_96436_d.get()._field_kind=_96517_slc.get()._field_elem;
	_1c2bec497_check_integer_indexing_by_data(&(*_self_), _96451_index,_96466_i.get()._field_token);
	if ((!(_1c2be2668_is_const(_96451_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _96436_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cbada2_SliceExprModel>>()) {
			_case_begin_1c517d21c:;
			{
				jule::Ptr<_1c1cbada2_SliceExprModel> _97521_m = _96436_d.get()._field_model.operator jule::Ptr<_1c1cbada2_SliceExprModel>();;
				jule::F64 _97617_indx = _1c2abde18_as_f64(_96451_index.get()._field_constant.ptr());;
				if ((_97617_indx >= static_cast<jule::F64>(_97521_m.get()._field_elems.len()))) {
					_1c2be3ceb_push_err(&(*_self_), _96466_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96436_d.get()._field_model=jule::Any(_97521_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_97617_indx))]);
					_96436_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1c517d1b7:;
	};
}



inline void _1c2bed4ba_indexing_map(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _98636_d, jule::Ptr<_1c2be1ca5_Data>& _98651_index, jule::Ptr<_20514b7d7_IndexingExpr>& _98670_i) {
	if ((_98651_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2c2ac12_Map> _99117_m = _1c2c24711_map(_98636_d.get()._field_kind.ptr());;
	_1c2bce27b_AssignTypeChecker _99217_atc = _1c2bce27b_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99117_m.get()._field_key, ._field_d=_98651_index, ._field_error_token=_98670_i.get()._field_token};;
	_1c2bd0403_check(&_99217_atc);
	_98636_d.get()._field_kind=_99117_m.get()._field_val;
}



inline void _1c2bed883_indexing_str(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _100336_d, jule::Ptr<_1c2be1ca5_Data>& _100351_index, jule::Ptr<_20514b7d7_IndexingExpr>& _100366_i) {
	;
	_100336_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u8", 2)), 5)});
	if ((_100351_index == nullptr)) {
		return;;
	};
	_1c2bec497_check_integer_indexing_by_data(&(*_self_), _100351_index,_100366_i.get()._field_token);
	if ((!(_1c2be2668_is_const(_100351_index.ptr())))) {
		_100336_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1c2be2668_is_const(_100336_d.ptr())) {
		jule::Ptr<_205139176_Token> _101917_error_token = _100366_i.get()._field_token;;
		jule::I64 _102017_j = _1c2abd940_as_i64(_100351_index.get()._field_constant.ptr());;
		jule::Str _102117_s = _1c2abd467_read_str(_100336_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_102017_j) >= _102117_s.len())) {
			_1c2be3ceb_push_err(&(*_self_), _101917_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1c2abe413_set_u64(_100336_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102117_s[_102017_j])));
		};
	};
}



inline void _1c2bedc4b_to_indexing(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _103035_d, jule::Ptr<_1c2be1ca5_Data>& _103050_index, jule::Ptr<_20514b7d7_IndexingExpr>& _103069_i) {
	{
		
		if ((_1c2c23523_ptr(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5188ee7:;
			{
				_1c2bec871_indexing_ptr(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1c2c239eb_arr(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c518906e:;
			{
				_1c2becc39_indexing_arr(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1c2c23c60_slc(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c51890e6:;
			{
				_1c2bed102_indexing_slc(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1c2c24711_map(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c518916d:;
			{
				_1c2bed4ba_indexing_map(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1c2c2304a_prim(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c51891e5:;
			{
				jule::Ptr<_1c2c256e0_Prim> _104517_prim = _1c2c2304a_prim(_103035_d.get()._field_kind.ptr());;
				{
					
					if (_1c2c2869e_is_str(_104517_prim.ptr())) {
						_case_begin_1c518d617:;
						{
							_1c2bed883_indexing_str(&(*_self_), _103035_d,_103050_index,_103069_i);
							return;;
						}
					}
					_match_end_1c518d55c:;
				};
			}
		}
		_match_end_1c5188db5:;
	};
	_1c2be3ceb_push_err(&(*_self_), _103069_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_103035_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1c2bee125_push_generics_from_index_data(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _105654_decl, jule::Ptr<_20514b7d7_IndexingExpr>& _105681_i) {
	{
		auto &_match_expr{ _105681_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20514c2bb_UnaryExpr>>()) {
			_case_begin_1c5191582:;
			{
				jule::Ptr<_1c2be1ca5_Data> _106121_d = _1c2beb067_eval_unary(_self_, _105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_20514c2bb_UnaryExpr>());;
				if ((!(_106121_d.get()._field_decl))) {
					_1c2be3ceb_push_err(_self_.ptr(), _105681_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_kind=jule::Any(_106121_d.get()._field_kind)}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec8b92_TypeDecl>>()) {
			_case_begin_1c51915e8:;
			{
				_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(_105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_204ec8b92_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c0ce_IdentExpr>>()) {
			_case_begin_1c51913a6:;
			{
				jule::Ptr<_20514c0ce_IdentExpr> _107221_expr = _105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_20514c0ce_IdentExpr>();;
				_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_107221_expr.get()._field_token, ._field_ident=_107221_expr.get()._field_ident}))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514b5ea_TupleExpr>>()) {
			_case_begin_1c519141c:;
			{
				{
					auto &expr = _105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_20514b5ea_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1c51958b6:;
					if (it != expr.end()) {
						jule::Ptr<_2050bba21_Expr> _108025_expr = *it;
						{
							{
								auto &_match_expr{ _108025_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_204ec8b92_TypeDecl>>()) {
									_case_begin_1c519617a:;
									{
										_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(_108025_expr.get()._field_kind.operator jule::Ptr<_204ec8b92_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_20514c0ce_IdentExpr>>()) {
									_case_begin_1c51961e1:;
									{
										jule::Ptr<_20514c0ce_IdentExpr> _108529_idexpr = _108025_expr.get()._field_kind.operator jule::Ptr<_20514c0ce_IdentExpr>();;
										_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_108529_idexpr.get()._field_token, ._field_ident=_108529_idexpr.get()._field_ident}))}));;
									}
								}
								_match_end_1c519608c:;
							};
						}
						_iter_next_1c51958b6:;
						++it;
						goto _iter_begin_1c51958b6;
					}
					_iter_end_1c51958b6:;
				};
			}
		}
		else {
			_case_begin_1c5190839:;
			{
				_1c2be3ceb_push_err(_self_.ptr(), _105681_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1c519077e:;
	};
	return true;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bee510_eval_ident_decl_from_indexing(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_1c2be1ca5_Data>& _110154_d, jule::Ptr<_20514b7d7_IndexingExpr>& _110169_i) {
	jule::Ptr<_204ec8b92_TypeDecl> _110217_tdecl = jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{});;
	jule::Ptr<_204ec8d7e_IdentTypeDecl> _110317_decl = nullptr;;
	{
		auto &_match_expr{ _110169_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20514c0ce_IdentExpr>>()) {
			_case_begin_1c5199d2c:;
			{
				jule::Ptr<_20514c0ce_IdentExpr> _110621_expr = _110169_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_20514c0ce_IdentExpr>();;
				_110317_decl=jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_110621_expr.get()._field_token, ._field_ident=_110621_expr.get()._field_ident});
				_110217_tdecl.get()._field_kind=jule::Any(_110317_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c882_NsSelectionExpr>>()) {
			_case_begin_1c5199c3e:;
			{
				jule::Ptr<_20514c882_NsSelectionExpr> _111321_expr = _110169_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_20514c882_NsSelectionExpr>();;
				_110317_decl=jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_111321_expr.get()._field_ident, ._field_ident=_111321_expr.get()._field_ident.get()._field_kind});
				_110217_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_204ec906b_NamespaceTypeDecl>(_204ec906b_NamespaceTypeDecl{._field_idents=_111321_expr.get()._field_ns, ._field_kind=_110317_decl}));
			}
		}
		else {
			_case_begin_1c519918e:;
			{
				_1c2be3ceb_push_err(_self_.ptr(), _110169_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c5199106:;
	};
	if ((!(_1c2bee125_push_generics_from_index_data(_self_, _110317_decl,_110169_i)))) {
		return nullptr;
	};
	return _1c2c043e4_eval_type(_self_.ptr(), _110217_tdecl);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2bee82e_eval_indexing(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514b7d7_IndexingExpr> _113237_i) {
	jule::Ptr<_1c2c1b131_TypeKind> _113317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_113317_prefix;
	});;
	jule::Ptr<_1c2be1ca5_Data> _113717_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_113237_i.get()._field_expr));;
	if ((_113717_d == nullptr)) {
		return nullptr;
	};
	if (_113717_d.get()._field_decl) {
		return _1c2bee510_eval_ident_decl_from_indexing(_self_, _113717_d,_113237_i);
	};
	_1c2be1ca5_Data _114717_old_d = (*(_113717_d));;
	jule::Ptr<_1c2be1ca5_Data> _114917_index = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_113237_i.get()._field_index));;
	if ((_114917_index == nullptr)) {
		return nullptr;
	};
	_113717_d.get()._field_decl=false;
	_1c2bedc4b_to_indexing(_self_.ptr(), _113717_d,_114917_index,_113237_i);
	if (_1c2be2668_is_const(_113717_d.ptr())) {
		_113717_d.get()._field_decl=false;
		_113717_d.get()._field_model=jule::Any(_113717_d.get()._field_constant);
	} else if (_113717_d.get()._field_decl) {
		_113717_d.get()._field_decl=false;
	} else {
		_113717_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cbb325_IndexingExprModel>(_1c1cbb325_IndexingExprModel{._field_token=_113237_i.get()._field_token, ._field_expr=jule::new_ptr<_1c2be1ca5_Data>(_114717_old_d), ._field_index=_114917_index}));
	};
	return _113717_d;
}



inline std::tuple<jule::Ptr<_1c2be1ca5_Data>,jule::Ptr<_1c2be1ca5_Data>> _1c2beeb3c_eval_slicing_exprs(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514e048_SlicingExpr>& _118043_s) {
	jule::Ptr<_1c2c1b131_TypeKind> _118117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_118117_prefix;
	});;
	jule::Ptr<_1c2be1ca5_Data> _118517_l = nullptr;;
	jule::Ptr<_1c2be1ca5_Data> _118617_r = nullptr;;
	if ((_118043_s.get()._field_start != nullptr)) {
		_118517_l=_1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_118043_s.get()._field_start));
		if ((_118517_l != nullptr)) {
			_1c2bec497_check_integer_indexing_by_data(_self_.ptr(), _118517_l,_118043_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_118517_l=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=static__1c2aba9a3_new_i64(0LL), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})});
		_118517_l.get()._field_model=jule::Any(_118517_l.get()._field_constant);
	};
	if ((_118043_s.get()._field_to != nullptr)) {
		_118617_r=_1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_118043_s.get()._field_to));
		if ((_118617_r != nullptr)) {
			_1c2bec497_check_integer_indexing_by_data(_self_.ptr(), _118617_r,_118043_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_118517_l,_118617_r);
}



inline void _1c2beedb2_slicing_arr(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _121531_d) {
	jule::Ptr<_1c2c1b131_TypeKind> _121617_elem_type = _1c2c239eb_arr(_121531_d.get()._field_kind.ptr()).get()._field_elem;;
	_121531_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=_121617_elem_type}), 7)});
	_121531_d.get()._field_lvalue=false;
	_121531_d.get()._field_mutable=(_121531_d.get()._field_mutable || (!(_1c2c1c4c8_mutable(_121617_elem_type.ptr()))));
}



inline void _1c2c0027a_slicing_str(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _123031_d, jule::Ptr<_1c2be1ca5_Data>& _123042_l, jule::Ptr<_1c2be1ca5_Data>& _123053_r) {
	_123031_d.get()._field_lvalue=false;
	_123031_d.get()._field_mutable=true;
	if ((!(_1c2be2668_is_const(_123031_d.ptr())))) {
		return;;
	};
	if (((_123042_l == nullptr) || (_123053_r == nullptr))) {
		_123031_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1c2be2668_is_const(_123042_l.ptr()) && _1c2be2668_is_const(_123053_r.ptr()))) {
		jule::I64 _124317_left = _1c2abd940_as_i64(_123042_l.get()._field_constant.ptr());;
		if ((_124317_left < 0LL)) {
			return;;
		};
		jule::Str _124817_s = _1c2abd467_read_str(_123031_d.get()._field_constant.ptr());;
		jule::I64 _124921_right = 0LL;;
		if ((_123053_r == nullptr)) {
			_124921_right=static_cast<jule::I64>(static_cast<jule::I64>(_124817_s.len()));
		} else {
			_124921_right=static_cast<jule::I64>(_1c2abd940_as_i64(_123053_r.get()._field_constant.ptr()));
		};
		if ((_124317_left > _124921_right)) {
			return;;
		};
		_1c2abe90d_set_str(_123031_d.get()._field_constant.ptr(), _124817_s.slice(_124317_left,_124921_right));
		_123031_d.get()._field_decl=true;
	} else {
		_123031_d.get()._field_constant=nullptr;
	};
}



inline void _1c2c006dc_check_slicing(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data>& _126637_d, jule::Ptr<_1c2be1ca5_Data>& _126648_l, jule::Ptr<_1c2be1ca5_Data>& _126659_r, jule::Ptr<_20514e048_SlicingExpr>& _126670_s) {
	{
		
		if ((_1c2c239eb_arr(_126637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c51b750e:;
			{
				_1c2beedb2_slicing_arr(&(*_self_), _126637_d);
				return;;
			}
		}
		else if ((_1c2c23c60_slc(_126637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c51b7586:;
			{
				return;;
			}
		}
		else if ((_1c2c2304a_prim(_126637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c51b760d:;
			{
				jule::Ptr<_1c2c256e0_Prim> _127417_prim = _1c2c2304a_prim(_126637_d.get()._field_kind.ptr());;
				{
					
					if (_1c2c2869e_is_str(_127417_prim.ptr())) {
						_case_begin_1c51b9951:;
						{
							_1c2c0027a_slicing_str(&(*_self_), _126637_d,_126648_l,_126659_r);
							return;;
						}
					}
					_match_end_1c51b9896:;
				};
			}
		}
		_match_end_1c51b73ee:;
	};
	_1c2be3ceb_push_err(&(*_self_), _126670_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_126637_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c009ea_eval_slicing(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514e048_SlicingExpr> _128536_s) {
	jule::Ptr<_1c2be1ca5_Data> _128617_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_128536_s.get()._field_expr));;
	if ((_128617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _129118_l;;
	jule::Ptr<_1c2be1ca5_Data> _129125_r;;
	std::tie(_129118_l,_129125_r) = _1c2beeb3c_eval_slicing_exprs(_self_, _128536_s);
	if ((_129118_l == nullptr)) {
		return _128617_d;
	};
	_128617_d.get()._field_decl=false;
	_1c2c006dc_check_slicing(_self_.ptr(), _128617_d,_129118_l,_129125_r,_128536_s);
	if (_1c2be2668_is_const(_128617_d.ptr())) {
		_128617_d.get()._field_decl=false;
		_128617_d.get()._field_model=jule::Any(_128617_d.get()._field_constant);
	} else if (_128617_d.get()._field_decl) {
		_128617_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1c1cbc546_SlicingExprModel> _130921_model = jule::new_ptr<_1c1cbc546_SlicingExprModel>(_1c1cbc546_SlicingExprModel{._field_token=_128536_s.get()._field_token, ._field_expr=jule::Any(_128617_d.get()._field_model), ._field_left=jule::Any(_129118_l.get()._field_model)});;
		if ((_129125_r != nullptr)) {
			_130921_model.get()._field_right=jule::Any(_129125_r.get()._field_model);
		};
		_128617_d.get()._field_model=jule::Any(_130921_model);
	};
	return _128617_d;
}



inline void _1c2c00db3_cast_ptr(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _132231_t, jule::Ptr<_1c2be1ca5_Data> _132249_d, jule::Ptr<_205139176_Token> _132259_error_token) {
	jule::Ptr<_1c2c28bee_Sptr> _132313_sptr = _1c2c232ae_sptr(_132249_d.get()._field_kind.ptr());;
	if ((_132313_sptr != nullptr)) {
		if ((!(_1c2c1b7e6_equals(_1c2c23523_ptr(_132231_t.ptr()).get()._field_elem, _132313_sptr.get()._field_elem)))) {
			_1c2be3ceb_push_err(&(*_self_), _132259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_132249_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_132231_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1c2be4736_is_unsafe(&(*_self_))))) {
		_1c2be3ceb_push_err(&(*_self_), _132259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2c256e0_Prim> _133613_prim = _1c2c2304a_prim(_132249_d.get()._field_kind.ptr());;
	if (((_1c2c23523_ptr(_132249_d.get()._field_kind.ptr()) == nullptr) && ((_133613_prim == nullptr) || (!(_1c2b5e4d6_is_int(_1c2c25a53_to_str(_133613_prim.ptr()))))))) {
		_1c2be3ceb_push_err(&(*_self_), _132259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_132249_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_132231_t.ptr()))}));
	};
	_132249_d.get()._field_constant=nullptr;
}



inline void _1c2c0127b_cast_struct(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _134434_t, jule::Ptr<_1c2be1ca5_Data> _134452_d, jule::Ptr<_205139176_Token> _134462_error_token) {
	jule::Ptr<_1c2a137db_Trait> _134517_tr = _1c2c2449c_trt(_134452_d.get()._field_kind.ptr());;
	if ((_134517_tr == nullptr)) {
		_1c2be3ceb_push_err(&(*_self_), _134462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_134452_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_134434_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _135117_s = _1c2c24238_strct(_134434_t.ptr());;
	_1c2be785a_push_reference_to_struct(&(*_self_), _135117_s);
	if ((!(_1c1cb5473_is_implements(_135117_s.get()._field_decl.ptr(), _134517_tr)))) {
		_1c2be3ceb_push_err(&(*_self_), _134462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_134452_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_134434_t.ptr()))}));
	};
}



inline void _1c2c01644_cast_ref(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _135931_t, jule::Ptr<_1c2be1ca5_Data> _135949_d, jule::Ptr<_205139176_Token> _135959_error_token) {
	jule::Ptr<_1c2c28bee_Sptr> _136017_sptr = _1c2c232ae_sptr(_135931_t.ptr());;
	jule::Ptr<_1c2c2c263_Ptr> _136217_ptr = _1c2c23523_ptr(_135949_d.get()._field_kind.ptr());;
	if (((_136217_ptr != nullptr) && _1c2c1b7e6_equals(_136017_sptr.get()._field_elem, _136217_ptr.get()._field_elem))) {
		if ((!(_1c2be4736_is_unsafe(&(*_self_))))) {
			_1c2be3ceb_push_err(&(*_self_), _135959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c2c24238_strct(_136017_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1c2c0127b_cast_struct(&(*_self_), _136017_sptr.get()._field_elem,_135949_d,_135959_error_token);
		return;;
	};
	_1c2be3ceb_push_err(&(*_self_), _135959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_135949_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_135931_t.ptr()))}));
}



inline void _1c2c01a0c_cast_slc(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _138131_t, jule::Ptr<_1c2be1ca5_Data> _138149_d, jule::Ptr<_205139176_Token> _138159_error_token) {
	if ((_1c2c23787_enm(_138149_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1c2c2304a_prim(_1c2c23787_enm(_138149_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1c2c2869e_is_str(_1c2c2304a_prim(_1c2c23787_enm(_138149_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1c2be3ceb_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_138131_t.ptr()))}));
			return;;
		};
	} else if (((_1c2c2304a_prim(_138149_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2c2869e_is_str(_1c2c2304a_prim(_138149_d.get()._field_kind.ptr()).ptr()))))) {
		_1c2be3ceb_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_138131_t.ptr()))}));
		return;;
	};
	_138131_t=_1c2c23c60_slc(_138131_t.ptr()).get()._field_elem;
	jule::Ptr<_1c2c256e0_Prim> _139313_prim = _1c2c2304a_prim(_138131_t.ptr());;
	if (((_139313_prim == nullptr) || ((!(_1c2c26c74_is_u8(_139313_prim.ptr()))) && (!(_1c2c2679b_is_i32(_139313_prim.ptr())))))) {
		_1c2be3ceb_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_138131_t.ptr()))}));
	};
}



inline void _1c2c01d2b_cast_str(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _139931_d, jule::Ptr<_205139176_Token> _139941_error_token) {
	if ((_1c2c23787_enm(_139931_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2a159ec_Enum> _140121_e = _1c2c23787_enm(_139931_d.get()._field_kind.ptr());;
		if (((_1c2c2304a_prim(_140121_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1c2c2869e_is_str(_1c2c2304a_prim(_140121_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1c2c2304a_prim(_139931_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c256e0_Prim> _140817_prim = _1c2c2304a_prim(_139931_d.get()._field_kind.ptr());;
		if (((!(_1c2c26c74_is_u8(_140817_prim.ptr()))) && (!(_1c2c2679b_is_i32(_140817_prim.ptr()))))) {
			_1c2be3ceb_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2c1b4d8_to_str(_139931_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1c2c23c60_slc(_139931_d.get()._field_kind.ptr()) == nullptr)) {
		_1c2be3ceb_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2c1b4d8_to_str(_139931_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _142017_t = _1c2c23c60_slc(_139931_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1c2c256e0_Prim> _142113_prim = _1c2c2304a_prim(_142017_t.ptr());;
	if (((_142113_prim == nullptr) || ((!(_1c2c26c74_is_u8(_142113_prim.ptr()))) && (!(_1c2c2679b_is_i32(_142113_prim.ptr())))))) {
		_1c2be3ceb_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2c1b4d8_to_str(_139931_d.get()._field_kind.ptr()))}));
	};
}



inline void _1c2c021e4_cast_int(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _142731_t, jule::Ptr<_1c2be1ca5_Data> _142749_d, jule::Ptr<_205139176_Token> _142759_error_token) {
	if (_1c2be2668_is_const(_142749_d.ptr())) {
		jule::Ptr<_1c2c256e0_Prim> _142917_prim = _1c2c2304a_prim(_142731_t.ptr());;
		{
			
			if (_1c2b5de53_is_sig_int(_142917_prim.get()._field_kind)) {
				_case_begin_1c51e0aba:;
				{
					_1c2abe18d_set_i64(_142749_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_142749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1c2b5e23e_is_unsig_int(_142917_prim.get()._field_kind)) {
				_case_begin_1c51e0b42:;
				{
					_1c2abe413_set_u64(_142749_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_142749_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1c51e09ee:;
		};
	};
	if ((_1c2c23787_enm(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2a159ec_Enum> _143917_e = _1c2c23787_enm(_142749_d.get()._field_kind.ptr());;
		if (_1c2b5ea69_is_num(_1c2c1b4d8_to_str(_143917_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1c2c232ae_sptr(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c256e0_Prim> _144617_prim = _1c2c2304a_prim(_142731_t.ptr());;
		if ((!(_1c2c281c6_is_uintptr(_144617_prim.ptr())))) {
			_1c2be3ceb_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_142731_t.ptr()))}));
		};
		return;;
	};
	if ((_1c2c23523_ptr(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c256e0_Prim> _145317_prim = _1c2c2304a_prim(_142731_t.ptr());;
		if (_1c2c281c6_is_uintptr(_145317_prim.ptr())) {
		} else if ((!(_1c2be4736_is_unsafe(&(*_self_))))) {
			_1c2be3ceb_push_err(&(*_self_), _142759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1c2c2679b_is_i32(_145317_prim.ptr()))) && (!(_1c2c26a10_is_i64(_145317_prim.ptr())))) && (!(_1c2c26ed8_is_u16(_145317_prim.ptr())))) && (!(_1c2c2724c_is_u32(_145317_prim.ptr())))) && (!(_1c2c274b1_is_u64(_145317_prim.ptr()))))) {
			_1c2be3ceb_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_142731_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1c2c256e0_Prim> _146413_prim = _1c2c2304a_prim(_142749_d.get()._field_kind.ptr());;
	if (((_146413_prim != nullptr) && _1c2b5ea69_is_num(_1c2c25a53_to_str(_146413_prim.ptr())))) {
		return;;
	};
	_1c2be3ceb_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_142731_t.ptr()))}));
}



inline void _1c2c025ac_cast_num(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _147231_t, jule::Ptr<_1c2be1ca5_Data> _147249_d, jule::Ptr<_205139176_Token> _147259_error_token) {
	if (_1c2be2668_is_const(_147249_d.ptr())) {
		jule::Ptr<_1c2c256e0_Prim> _147417_prim = _1c2c2304a_prim(_147231_t.ptr());;
		{
			
			if (_1c2b5e7c2_is_float(_147417_prim.get()._field_kind)) {
				_case_begin_1c51ed05b:;
				{
					_1c2abeb83_set_f64(_147249_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c2abde18_as_f64(_147249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1c2b5de53_is_sig_int(_147417_prim.get()._field_kind)) {
				_case_begin_1c51ed0d3:;
				{
					_1c2abe18d_set_i64(_147249_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_147249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1c2b5e23e_is_unsig_int(_147417_prim.get()._field_kind)) {
				_case_begin_1c51ed15a:;
				{
					_1c2abe413_set_u64(_147249_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_147249_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1c51ece7e:;
		};
	};
	if ((_1c2c23787_enm(_147249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2a159ec_Enum> _148617_e = _1c2c23787_enm(_147249_d.get()._field_kind.ptr());;
		if (_1c2b5ea69_is_num(_1c2c1b4d8_to_str(_148617_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c2c256e0_Prim> _149213_prim = _1c2c2304a_prim(_147249_d.get()._field_kind.ptr());;
	if (((_149213_prim != nullptr) && _1c2b5ea69_is_num(_1c2c25a53_to_str(_149213_prim.ptr())))) {
		return;;
	};
	_1c2be3ceb_push_err(&(*_self_), _147259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_147249_d.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_147231_t.ptr()))}));
}



inline void _1c2c02975_cast_prim(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _150032_t, jule::Ptr<_1c2be1ca5_Data> _150050_d, jule::Ptr<_205139176_Token> _150060_error_token) {
	jule::Ptr<_1c2c256e0_Prim> _150113_prim = _1c2c2304a_prim(_150032_t.ptr());;
	{
		
		if (_1c2c28913_is_any(_150113_prim.ptr())) {
			_case_begin_1c5204b34:;
		}
		else if (_1c2c2869e_is_str(_150113_prim.ptr())) {
			_case_begin_1c5204826:;
			{
				_1c2c01d2b_cast_str(&(*_self_), _150050_d,_150060_error_token);
			}
		}
		else if (_1c2b5e4d6_is_int(_1c2c25a53_to_str(_150113_prim.ptr()))) {
			_case_begin_1c520488c:;
			{
				_1c2c021e4_cast_int(&(*_self_), _150032_t,_150050_d,_150060_error_token);
			}
		}
		else if (_1c2b5ea69_is_num(_1c2c25a53_to_str(_150113_prim.ptr()))) {
			_case_begin_1c5204903:;
			{
				_1c2c025ac_cast_num(&(*_self_), _150032_t,_150050_d,_150060_error_token);
			}
		}
		else {
			_case_begin_1c52047b0:;
			{
				_1c2be3ceb_push_err(&(*_self_), _150060_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_150032_t.ptr()))}));
			}
		}
		_match_end_1c5204738:;
	};
}



inline void _1c2c02c94_cast_constant(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _151637_t, jule::Ptr<_1c2be1ca5_Data>& _151656_d) {
	if (((_151656_d == nullptr) || (!(_1c2be2668_is_const(_151656_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c2c256e0_Prim> _152013_prim = _1c2c2304a_prim(_151637_t.ptr());;
	_1c2c18727_cast_const_by_type(_152013_prim.get()._field_kind,_151656_d);
	_151656_d.get()._field_model=jule::Any(_151656_d.get()._field_constant);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c03217_eval_cast_by_type_n_data(_1c2be3823_Eval* _self_, jule::Ptr<_1c2c1b131_TypeKind> _152547_t, jule::Ptr<_1c2be1ca5_Data> _152565_d, jule::Ptr<_205139176_Token> _152579_error_token) {
	if (((_152565_d != nullptr) && _152565_d.get()._field_decl)) {
		_1c2be3ceb_push_err(&(*_self_), _152579_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1c2c2304a_prim(_152565_d.get()._field_kind.ptr()) != nullptr) && _1c2c28913_is_any(_1c2c2304a_prim(_152565_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1c520b520:;
			{
				if ((_1c2c23787_enm(_152547_t.ptr()) != nullptr)) {
					_1c2be3ceb_push_err(&(*_self_), _152579_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1c2be411a_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1c2c23523_ptr(_152547_t.ptr()) != nullptr)) {
			_case_begin_1c520b586:;
			{
				_1c2c00db3_cast_ptr(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1c2c232ae_sptr(_152547_t.ptr()) != nullptr)) {
			_case_begin_1c520b5ec:;
			{
				_1c2c01644_cast_ref(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1c2c23c60_slc(_152547_t.ptr()) != nullptr)) {
			_case_begin_1c520b663:;
			{
				_1c2c01a0c_cast_slc(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1c2c24238_strct(_152547_t.ptr()) != nullptr)) {
			_case_begin_1c520c488:;
			{
				_1c2c0127b_cast_struct(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1c2c2304a_prim(_152547_t.ptr()) != nullptr)) {
			_case_begin_1c520c4ee:;
			{
				_1c2c02975_cast_prim(&(*_self_), _152547_t,_152565_d,_152579_error_token);
				_1c2c02c94_cast_constant(&(*_self_), _152547_t,_152565_d);
			}
		}
		else {
			_case_begin_1c520b4a9:;
			{
				_1c2be3ceb_push_err(&(*_self_), _152579_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_152547_t.ptr()))}));
				_152565_d=nullptr;
			}
		}
		_match_end_1c520a640:;
	};
	if ((_152565_d == nullptr)) {
		return nullptr;
	};
	_152565_d.get()._field_mutable=(_152565_d.get()._field_mutable || ((!(_1c2c1c4c8_mutable(_152565_d.get()._field_kind.ptr()))) && _1c2c1c4c8_mutable(_152547_t.ptr())));
	_152565_d.get()._field_lvalue=false;
	_152565_d.get()._field_decl=false;
	if (((_1c2c23787_enm(_152565_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2c1b7e6_equals(_1c2c23787_enm(_152565_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _152547_t))))) {
		_1c2c17baa_apply_cast_kind(_152565_d,_152547_t);
		_152565_d.get()._field_model.operator jule::Ptr<_1c1cba1c0_CastingExprModel>().get()._field_token=_152579_error_token;
	} else {
		_152565_d.get()._field_kind=_152547_t;
	};
	return _152565_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c03536_eval_cast(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514c695_CastExpr> _157433_c) {
	jule::Ptr<_1c2c24d2c_TypeSymbol> _157517_t = _1c1ccded6_build_type(_157433_c.get()._field_kind);;
	jule::Bool _157613_ok = _1c2b86046_check_type(_self_.get()._field_s, _157517_t,_self_.get()._field_lookup);;
	if ((!(_157613_ok))) {
		return nullptr;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _158117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_158117_prefix;
	});;
	jule::Ptr<_1c2be1ca5_Data> _158517_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_157433_c.get()._field_expr));;
	if ((_158517_d == nullptr)) {
		return nullptr;
	};
	return _1c2c03217_eval_cast_by_type_n_data(_self_.ptr(), _157517_t.get()._field_kind,_158517_d,_157433_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c03844_eval_ns_selection(_1c2be3823_Eval* _self_, jule::Ptr<_20514c882_NsSelectionExpr> _159336_s) {
	jule::Str _159413_path = _1c2c2dbb0_build_link_path_by_tokens(_159336_s.get()._field_ns);;
	jule::Ptr<_1c2b77301_ImportInfo> _159517_imp = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c37b20_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>([=](jule::Ptr<_1c2b77301_ImportInfo> _159553_imp) mutable -> jule::Bool {
		if (((_159336_s.get()._field_ns.len() == 1LL) && (_159553_imp.get()._field_alias == _159413_path))) {
			return true;
		};
		return ((_159553_imp.get()._field_link_path == _159413_path) && _1c2b79bb6_is_accessible_via_selection(_159553_imp.ptr()));
	}));;
	if ((_159517_imp == nullptr)) {
		_1c2be3ceb_push_err(&(*_self_), _159336_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_159413_path)}));
		return nullptr;
	};
	jule::Trait<_1c2c3934c_Lookup> _160717_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1c2c3934c_Lookup>(_159517_imp, 1);
	;
	_1c2be44c2_disallow_builtin(&(*_self_));
	jule::Any _161217_def = _1c2be6d43_get_def(&(*_self_), _159336_s.get()._field_ident.get()._field_kind,false);;
	_1c2be42e6_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_160717_lookup;
	jule::Ptr<_1c2be1ca5_Data> _161617_d = _1c2bea94b_eval_def(&(*_self_), jule::Any(_161217_def),_159336_s.get()._field_ident);;
	return _161617_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c03cb7_eval_struct_lit_explicit(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_1c1cb6ad4_StructIns> _162148_s, jule::Slice<jule::Ptr<_2050bba21_Expr>> _162213_exprs, jule::Ptr<_205139176_Token> _162233_error_token) {
	jule::Bool _162313_ok = _1c2b83c9c_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_162148_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_162148_s.get()._field_generics.len()),_162233_error_token);;
	if ((!(_162313_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _162148_s.get()._field_decl))) {
		_1c2be3ceb_push_err(_self_.ptr(), _162233_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_162148_s.get()._field_decl.get()._field_ident)}));
	};
	_1c2be785a_push_reference_to_struct(_self_.ptr(), _162148_s);
	_1c2be8d23_check_deprecated(_self_.ptr(), _162148_s.get()._field_decl.get()._field_directives,_162233_error_token);
	_1c2bd6294_StructLitChecker _163617_slc = _1c2bd6294_StructLitChecker{._field_e=_self_, ._field_error_token=_162233_error_token, ._field_s=_162148_s};;
	_1c2bd7839_check(&_163617_slc, _162213_exprs);
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=(!(_self_.get()._field_immutable)), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_162148_s, 0)}), ._field_model=jule::Any(jule::new_ptr<_1c1cb9862_StructLitExprModel>(_1c1cb9862_StructLitExprModel{._field_strct=_162148_s, ._field_args=_163617_slc._field_args}))});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c040d6_eval_struct_lit(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514d322_StructLit> _165539_lit) {
	jule::Ptr<_1c2c24d2c_TypeSymbol> _165617_t = _1c1ccded6_build_type(_165539_lit.get()._field_kind);;
	jule::Bool _165713_ok = _1c2b86046_check_type(_self_.get()._field_s, _165617_t,_self_.get()._field_lookup);;
	if ((!(_165713_ok))) {
		return nullptr;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _166217_s = _1c2c24238_strct(_165617_t.get()._field_kind.ptr());;
	if ((_166217_s == nullptr)) {
		if ((_1c2c232ae_sptr(_165617_t.get()._field_kind.ptr()) != nullptr)) {
			_166217_s=_1c2c24238_strct(_1c2c232ae_sptr(_165617_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_166217_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1c2be3ceb_push_err(_self_.ptr(), _165539_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1c2be1ca5_Data> _167517_d = _1c2c03cb7_eval_struct_lit_explicit(_self_, _166217_s,_165539_lit.get()._field_exprs,_165539_lit.get()._field_kind.get()._field_token);;
	if ((_1c2c232ae_sptr(_165617_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c1cb9862_StructLitExprModel> _167721_model = _167517_d.get()._field_model.operator jule::Ptr<_1c1cb9862_StructLitExprModel>();;
		_1c2c16615_make_struct_lit_alloc(_167517_d,_167721_model);
	};
	return _167517_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c043e4_eval_type(_1c2be3823_Eval* _self_, jule::Ptr<_204ec8b92_TypeDecl> _168332_t) {
	jule::Ptr<_1c2c24d2c_TypeSymbol> _168417_tk = _1c1ccded6_build_type(_168332_t);;
	jule::Bool _168513_ok = _1c2b86046_check_type((*_self_)._field_s, _168417_tk,(*_self_)._field_lookup);;
	if ((!(_168513_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_decl=true, ._field_kind=_168417_tk.get()._field_kind, ._field_model=jule::Any(_168417_tk.get()._field_kind)});
}



inline void _1c2c04713_call_type_fn(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514ce48_FnCallExpr>& _169637_fc, jule::Ptr<_1c2be1ca5_Data>& _169659_d) {
	if ((_169637_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_self_.ptr(), _169637_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_169659_d.get()._field_kind.ptr()))}));
	} else if ((_169637_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_self_.ptr(), _169637_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_169637_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_self_.ptr(), _169637_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_169637_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1c2c1b131_TypeKind> _170621_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1c2be1ca5_Data> _170821_arg = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_169637_fc.get()._field_args[0LL].get()._field_kind));;
		_self_.get()._field_prefix=_170621_prefix;
		if ((_170821_arg != nullptr)) {
			_169659_d=_1c2c03217_eval_cast_by_type_n_data(_self_.ptr(), _169659_d.get()._field_kind,_170821_arg,_169637_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_169659_d != nullptr)) {
		_169659_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1c2c04aba_check_fn_call_generics(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cc9762_FnIns> _172045_f, jule::Ptr<_20514ce48_FnCallExpr> _172113_fc) {
	jule::Bool _172132_ok = jule::Bool();
	jule::Bool _172142_dynamic_annotation = jule::Bool();
	{
		
		if ((((_172045_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_172113_fc.get()._field_generics.len() == 0LL)) && (_172045_f.get()._field_params.len() > 0LL))) {
			_case_begin_1c5238c34:;
			{
				_172142_dynamic_annotation=true;
				_172045_f.get()._field_generics=jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>::alloc(_172045_f.get()._field_decl.get()._field_generics.len());
				_172132_ok = true;
				_172142_dynamic_annotation = true;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		else if ((!(_1c2b83c9c_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_172045_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_172113_fc.get()._field_generics.len()),_172113_fc.get()._field_token)))) {
			_case_begin_1c5238c9a:;
			{
				_172132_ok = false;
				_172142_dynamic_annotation = false;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		else {
			_case_begin_1c5235d85:;
			{
				_172045_f.get()._field_generics=jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>::alloc(0LL,_172045_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _172113_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1c52366c1:;
					if (it != expr.end()) {
						jule::Ptr<_204ec8b92_TypeDecl> _173325_g = *it;
						{
							jule::Ptr<_1c2c24d2c_TypeSymbol> _173425_k = _1c1ccded6_build_type(_173325_g);;
							_172132_ok=_1c2b86046_check_type((*_self_)._field_s, _173425_k,(*_self_)._field_lookup);
							if ((!(_172132_ok))) {
								_172132_ok = false;
								_172142_dynamic_annotation = false;
								return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
							};
							_172045_f.get()._field_generics = jule::alloc_for_append(_172045_f.get()._field_generics,1);_172045_f.get()._field_generics.__push(_173425_k.get()._field_kind);;
						}
						_iter_next_1c52366c1:;
						++it;
						goto _iter_begin_1c52366c1;
					}
					_iter_end_1c52366c1:;
				};
				_172132_ok = true;
				_172142_dynamic_annotation = false;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		_match_end_1c5235cca:;
	};
}



inline void _1c2c04dd9_call_builtin_fn(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514ce48_FnCallExpr>& _174640_fc, jule::Ptr<_1c2be1ca5_Data>& _174662_d) {
	_174662_d=_1c2c23ec4_fnc(_174662_d.get()._field_kind.ptr()).get()._field_caller(_self_,_174640_fc,_174662_d);
	if ((_174662_d == nullptr)) {
		return;;
	};
	_174662_d.get()._field_mutable=true;
}



inline void _1c2c0522a_check_fn_of_concurrent_call(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cc9762_FnIns>& _175447_f, jule::Ptr<_205139176_Token> _175458_error_token) {
	if (_1c2be4736_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _175447_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c523de8c:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc88c6_ParamIns> &_175916_p = *it;
			{
				if (_175916_p.get()._field_decl.get()._field_reference) {
					_1c2be3ceb_push_err(&(*_self_), _175458_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c523de8c:;
			++it;
			goto _iter_begin_1c523de8c;
		}
		_iter_end_1c523de8c:;
	};
}



inline void _1c2c05626_process_exceptional_handler(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cc9762_FnIns>& _176751_f, jule::Ptr<_20514ce48_FnCallExpr>& _176767_fc, jule::Ptr<_1c2be1ca5_Data>& _176789_d) {
	jule::Bool _176813_result_needed = ((!(_1c1cc6a17_is_void(_176751_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1c2b6197d_ScopeChecker> _176917_csc = nullptr;;
	jule::Ptr<_1c2b4c1e9_Scope> _177017_ch = nullptr;;
	jule::Ptr<_1c1cba9ea_FnCallExprModel> _177217_model = _176789_d.get()._field_model.operator jule::Ptr<_1c1cba9ea_FnCallExprModel>();;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b7eeda_Sema>>()) {
			_case_begin_1c52426bb:;
			{
				jule::Ptr<_1c2b7eeda_Sema> _177621_s = (*_self_)._field_lookup.operator jule::Ptr<_1c2b7eeda_Sema>();;
				_176917_csc=_1c2adc079_new_scope_checker(_177621_s,nullptr);
				if (_176813_result_needed) {
					_176917_csc.get()._field_result=_176751_f;
				};
				_177017_ch=jule::new_ptr<_1c2b4c1e9_Scope>();
				_176917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_176917_csc.get()._field_table.get()._field_vars,1);_176917_csc.get()._field_table.get()._field_vars.__push(_1c2c16956_build_error_var(_177017_ch,_176767_fc));;
				_1c2b70b02_check(_176917_csc, _176767_fc.get()._field_exception,_177017_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
			_case_begin_1c5242743:;
			{
				jule::Ptr<_1c2b6197d_ScopeChecker> _178521_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>();;
				_176917_csc=_1c2b70d66_new_child_checker(_178521_sc);
				if (_176813_result_needed) {
					_176917_csc.get()._field_result=_176751_f;
				};
				_177017_ch=_1c2b6518a_get_child(_178521_sc.ptr());
				_176917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_176917_csc.get()._field_table.get()._field_vars,1);_176917_csc.get()._field_table.get()._field_vars.__push(_1c2c16956_build_error_var(_177017_ch,_176767_fc));;
				_1c2b65553_check_child_ssc(_178521_sc, _176767_fc.get()._field_exception,_177017_ch,_176917_csc);
			}
		}
		_match_end_1c5242655:;
	};
	_177217_model.get()._field_assigned=_176813_result_needed;
	_177217_model.get()._field_except=_177017_ch;
	if ((_176813_result_needed && (_176917_csc.get()._field_result != nullptr))) {
		_1c2be3ceb_push_err(&(*_self_), _176767_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c2c05956_call_fn(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514ce48_FnCallExpr>& _180332_fc, jule::Ptr<_1c2be1ca5_Data>& _180354_d) {
	jule::Ptr<_1c1cc9762_FnIns> _180417_f = _1c2c23ec4_fnc(_180354_d.get()._field_kind.ptr());;
	if ((_1c2be499a_is_global(_self_.ptr()) && _180417_f.get()._field_decl.get()._field_exceptional)) {
		_1c2be3ceb_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1c2be411a_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
	};
	if (_1c1cca4dd_is_builtin(_180417_f.ptr())) {
		_1c2c04dd9_call_builtin_fn(_self_, _180332_fc,_180354_d);
		return;;
	};
	if (((!(_1c1cc6c7b_is_method(_180417_f.get()._field_decl.ptr()))) && _1c2c1996a_has_directive(_180417_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1c2be3ceb_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_180354_d=nullptr;
		return;;
	};
	if (((((!(_180354_d.get()._field_mutable)) && _1c1cc6c7b_is_method(_180417_f.get()._field_decl.ptr())) && (!(_180417_f.get()._field_decl.get()._field_statically))) && _180417_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1c2be3ceb_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1c2be4736_is_unsafe(_self_.ptr()))) && _180417_f.get()._field_decl.get()._field_unsafety)) {
		_1c2be3ceb_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _182718_ok;;
	jule::Bool _182722_dynamic_annotation;;
	std::tie(_182718_ok,_182722_dynamic_annotation) = _1c2c04aba_check_fn_call_generics(_self_.ptr(), _180417_f,_180332_fc);
	if ((!(_182718_ok))) {
		_180354_d=nullptr;
		return;;
	};
	jule::Ptr<_1c2b7eeda_Sema> _183317_old = _self_.get()._field_s;;
	if ((_180417_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_180417_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_183317_old != _self_.get()._field_s)) {
			_183317_old.get()._field_errors=jule::append(_183317_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_183317_old;
	});;
	if ((!(_182722_dynamic_annotation))) {
		if ((!(_180417_f.get()._field_reloaded))) {
			_182718_ok=_1c2b88dd4_reload_fn_ins_types(_self_.get()._field_s, _180417_f);
			if ((!(_182718_ok))) {
				_180354_d=nullptr;
				return;;
			};
			_180417_f.get()._field_reloaded=true;
		};
	} else {
		_1c2b88774_build_fn_non_generic_type_kinds(_self_.get()._field_s, _180417_f);
	};
	_1c2bd388a_FnCallArgChecker _185917_fcac = _1c2bd388a_FnCallArgChecker{._field_e=_self_, ._field_f=_180417_f, ._field_args=_180332_fc.get()._field_args, ._field_dynamic_annotation=_182722_dynamic_annotation, ._field_error_token=_180332_fc.get()._field_token};;
	if ((_180417_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_183317_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183317_old);
		_182718_ok=_1c2bd5c55_check(&_185917_fcac);
		std::tie(_183317_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183317_old);
	} else {
		_182718_ok=_1c2bd5c55_check(&_185917_fcac);
	};
	if (((!(_182718_ok)) && _182722_dynamic_annotation)) {
		_180354_d=nullptr;
		return;;
	};
	jule::Ptr<_1c1cc9762_FnIns> _187917_exist_instance = _1c1cc851e_append_instance(_180417_f.get()._field_decl.ptr(), _180417_f);;
	if ((_187917_exist_instance != nullptr)) {
		_180417_f=_187917_exist_instance;
	};
	jule::Any _188417_call_model = _180354_d.get()._field_model;;
	if (_1c1cc6a17_is_void(_180417_f.get()._field_decl.ptr())) {
		_180354_d=_1c2c17da8_build_void_data();
	} else {
		if (_182722_dynamic_annotation) {
			_182718_ok=_1c2b88dd4_reload_fn_ins_types(_self_.get()._field_s, _180417_f);
			if ((!(_182718_ok))) {
				_180354_d=nullptr;
				return;;
			};
			_180417_f.get()._field_reloaded=true;
		};
		_180354_d.get()._field_kind=_180417_f.get()._field_result;
		_180354_d.get()._field_lvalue=false;
	};
	_180354_d.get()._field_mutable=true;
	_180354_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cba9ea_FnCallExprModel>(_1c1cba9ea_FnCallExprModel{._field_token=_180332_fc.get()._field_token, ._field_func=_180417_f, ._field_expr=jule::Any(_188417_call_model), ._field_args=_185917_fcac._field_arg_models}));
	if (_180417_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_204eeaea0_unhandled(_180332_fc.ptr())) {
				_case_begin_1c5259507:;
				{
					_1c2be3ceb_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1c2be411a_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_205006ebc_ignored(_180332_fc.ptr())) {
				_case_begin_1c52591e9:;
				{
					goto _match_end_1c52590b7;
				}
			}
			else {
				_case_begin_1c5259183:;
				{
					_1c2c05626_process_exceptional_handler(_self_.ptr(), _180417_f,_180332_fc,_180354_d);
				}
			}
			_match_end_1c52590b7:;
		};
	} else if ((!(_204eeaea0_unhandled(_180332_fc.ptr())))) {
		_1c2be3ceb_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (((_180417_f.get()._field_generics.len() > 0LL) && (_187917_exist_instance == nullptr))) {
		_1c2b95ce2_check_fn_ins_caller(_self_.get()._field_s, _180417_f,_180332_fc.get()._field_token);
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c05c64_eval_fn_call(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514ce48_FnCallExpr> _193236_fc) {
	jule::Ptr<_1c2c1b131_TypeKind> _193317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_193317_prefix;
	});;
	{
		auto &_match_expr{ _193236_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_20514c0ce_IdentExpr>>()) {
			_case_begin_1c525d891:;
			{
				if ((_193236_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1c2c92d78_builtin_caller_error(_self_,_193236_fc);
				};
			}
		}
		_match_end_1c525d83b:;
	};
	jule::Ptr<_1c2be1ca5_Data> _194617_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_193236_fc.get()._field_expr.get()._field_kind));;
	if ((_194617_d == nullptr)) {
		return nullptr;
	};
	if (_194617_d.get()._field_decl) {
		_1c2c04713_call_type_fn(_self_, _193236_fc,_194617_d);
		return _194617_d;
	};
	if ((_1c2c23ec4_fnc(_194617_d.get()._field_kind.ptr()) == nullptr)) {
		_1c2be3ceb_push_err(_self_.ptr(), _193236_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2c05956_call_fn(_self_, _193236_fc,_194617_d);
	return _194617_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0611b_eval_enum_static(_1c2be3823_Eval* _self_, jule::Ptr<_1c2a159ec_Enum> _196539_enm, jule::Ptr<_205139176_Token> _196551_ident) {
	jule::Ptr<_1c2be1ca5_Data> _196617_d = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_decl=false, ._field_mutable=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_196539_enm, 3)})});;
	jule::Ptr<_1c2a15007_EnumItem> _197517_item = _1c2a165ad_find_item(_196539_enm.ptr(), _196551_ident.get()._field_kind);;
	if ((_197517_item == nullptr)) {
		_1c2be3ceb_push_err(&(*_self_), _196551_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_196539_enm.get()._field_ident),jule::Any(_196551_ident.get()._field_kind)}));
	} else {
		_196617_d.get()._field_constant=jule::new_ptr<_1c2abb9a4_Const>((*(_197517_item.get()._field_value.get()._field_data.get()._field_constant)));
		_196617_d.get()._field_model=jule::Any(_196617_d.get()._field_constant);
		_1c2c1845d_apply_cast_model_by_enum(_196617_d,_196539_enm);
	};
	return _196617_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c064c3_eval_struct_static(_1c2be3823_Eval* _self_, jule::Ptr<_1c1cb6ad4_StructIns> _198741_s, jule::Ptr<_205139176_Token> _198756_ident) {
	jule::Ptr<_1c2be1ca5_Data> _198817_d = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_decl=false, ._field_mutable=false});;
	;
	jule::Ptr<_1c1cc65b6_Fn> _199617_method = _1c1cb7a6e_find_method(_198741_s.ptr(), _198756_ident.get()._field_kind,true);;
	if ((_199617_method != nullptr)) {
		if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _199617_method.get()._field_public,_199617_method.get()._field_token)))) {
			_1c2be3ceb_push_err(&(*_self_), _198756_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_198756_ident.get()._field_kind)}));
			_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c1cc9762_FnIns> _200321_ins = _1c1cc8211_instance(_199617_method);;
		_200321_ins.get()._field_owner=_198741_s;
		_1c2be733d_push_reference_to_fn(&(*_self_), _200321_ins);
		_198817_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cbd789_StructStaticIdentExprModel>(_1c1cbd789_StructStaticIdentExprModel{._field_structure=_198741_s, ._field_expr=jule::Any(_198817_d.get()._field_model), ._field_method=_200321_ins}));
		_198817_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_200321_ins, 1)});
		return _198817_d;
	};
	jule::Ptr<_1c2b9a4de_Var> _201717_sttc = _1c1cb4d57_find_static(_198741_s.get()._field_decl.ptr(), _198756_ident.get()._field_kind);;
	if ((_201717_sttc != nullptr)) {
		return _1c2bea1dc_eval_var(&(*_self_), _201717_sttc,_198756_ident);
	};
	_1c2be3ceb_push_err(&(*_self_), _198756_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_198741_s.get()._field_decl.get()._field_ident),jule::Any(_198756_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c06924_eval_trait_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _202643_d, jule::Ptr<_1c2a137db_Trait> _202657_trt, jule::Ptr<_205139176_Token> _202674_ident) {
	jule::Ptr<_1c1cc65b6_Fn> _202717_f = _1c2a14666_find_method(_202657_trt.ptr(), _202674_ident.get()._field_kind);;
	if ((_202717_f == nullptr)) {
		_1c2be3ceb_push_err(&(*_self_), _202674_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_202657_trt.get()._field_ident),jule::Any(_202674_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_lvalue=false, ._field_decl=false, ._field_mutable=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c1cc8211_instance(_202717_f), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbca85_TraitSubIdentExprModel>(_1c1cbca85_TraitSubIdentExprModel{._field_token=_202674_ident, ._field_expr=jule::Any(_202643_d.get()._field_model), ._field_method=_202717_f, ._field_trt=_202657_trt}))});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c06e1e_eval_struct_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _204944_d, jule::Ptr<_1c1cb6ad4_StructIns> _204958_s, jule::Ptr<_20514ca6e_SubIdentExpr> _204977_si, jule::Bool _204996_ref) {
	jule::Ptr<_1c1cb6276_FieldIns> _205017_f = _1c1cb7d7c_find_field(_204958_s.ptr(), _204977_si.get()._field_ident.get()._field_kind);;
	if ((_205017_f != nullptr)) {
		if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _205017_f.get()._field_decl.get()._field_public,_205017_f.get()._field_decl.get()._field_token)))) {
			_1c2be3ceb_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_205017_f.get()._field_decl.get()._field_ident)}));
			_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _205721_model = jule::new_ptr<_1c1cbd2d3_StructSubIdentExprModel>(_1c1cbd2d3_StructSubIdentExprModel{._field_token=_204977_si.get()._field_ident, ._field_expr_kind=_204944_d.get()._field_kind, ._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*(_204944_d))), ._field_field=_205017_f});;
		_204944_d.get()._field_model=jule::Any(_205721_model);
		_204944_d.get()._field_kind=_205017_f.get()._field_kind;
		_204944_d.get()._field_lvalue=true;
		if ((_205017_f.get()._field_decl.get()._field_mutable && (!(_204944_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
					_case_begin_1c5275688:;
					{
						jule::Ptr<_1c2b6197d_ScopeChecker> _207125_scope = _1c2b638d6_get_root((*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>());;
						_204944_d.get()._field_mutable=((_207125_scope.get()._field_owner != nullptr) && (_207125_scope.get()._field_owner.get()._field_owner == _204958_s));
					}
				}
				_match_end_1c5275633:;
			};
		};
		return _204944_d;
	};
	;
	jule::Ptr<_1c1cc65b6_Fn> _208017_m = _1c1cb7a6e_find_method(_204958_s.ptr(), _204977_si.get()._field_ident.get()._field_kind,false);;
	if ((_208017_m == nullptr)) {
		_1c2be3ceb_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_204958_s.get()._field_decl.get()._field_ident),jule::Any(_204977_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _208017_m.get()._field_public,_208017_m.get()._field_token)))) {
		_1c2be3ceb_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_208017_m.get()._field_ident)}));
		_1c2be411a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1c1cc561a_is_ref(_208017_m.get()._field_params[0LL].ptr()) && (!(_204996_ref)))) {
		_1c2be3ceb_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1c2be8d23_check_deprecated(&(*_self_), _208017_m.get()._field_directives,_204977_si.get()._field_ident);
	jule::Ptr<_1c1cc9762_FnIns> _209617_ins = _1c1cc8211_instance(_208017_m);;
	_209617_ins.get()._field_owner=_204958_s;
	_1c2be733d_push_reference_to_fn(&(*_self_), _209617_ins);
	jule::Ptr<_1c2be1ca5_Data> _209917_model = jule::new_ptr<_1c2be1ca5_Data>((*(_204944_d)));;
	_204944_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cbd2d3_StructSubIdentExprModel>(_1c1cbd2d3_StructSubIdentExprModel{._field_token=_204977_si.get()._field_ident, ._field_expr_kind=_204944_d.get()._field_kind, ._field_expr=_209917_model, ._field_method=_209617_ins}));
	_204944_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_209617_ins, 1)});
	return _204944_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c072c6_eval_slice_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _211043_d, jule::Ptr<_205139176_Token> _211057_ident) {
	{
		auto &_match_expr{ _211057_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c527e30c:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_211057_ident, ._field_expr_kind=_211043_d.get()._field_kind, ._field_expr=jule::Any(_211043_d.get()._field_model), ._field_ident=jule::Str("len()", 5)}))});
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1c5280154:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_211057_ident, ._field_expr_kind=_211043_d.get()._field_kind, ._field_expr=jule::Any(_211043_d.get()._field_model), ._field_ident=jule::Str("cap()", 5)}))});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c52801ba:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_211043_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5eaae_builtin_caller_common_mut), ._field_params=jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>::make({jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})}),jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})})})}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_211057_ident, ._field_expr_kind=_211043_d.get()._field_kind, ._field_expr=jule::Any(_211043_d.get()._field_model), ._field_ident=jule::Str("swap", 4)}))});
			}
		}
		else {
			_case_begin_1c527dc46:;
			{
				_1c2be3ceb_push_err(&(*_self_), _211057_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_211043_d.get()._field_kind.ptr())),jule::Any(_211057_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c527de22:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0767d_eval_array_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _216943_d, jule::Ptr<_205139176_Token> _216957_ident) {
	{
		auto &_match_expr{ _216957_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c5284d7e:;
			{
				jule::Ptr<_1c2abb9a4_Const> _217221_c = static__1c2aba9a3_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2c239eb_arr(_216943_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_217221_c, ._field_mutable=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(_217221_c)});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c5284de5:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_216943_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5eaae_builtin_caller_common_mut), ._field_params=jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>::make({jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})}),jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})})})}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_216957_ident, ._field_expr_kind=_216943_d.get()._field_kind, ._field_expr=jule::Any(_216943_d.get()._field_model), ._field_ident=jule::Str("swap", 4)}))});
			}
		}
		else {
			_case_begin_1c5284a4e:;
			{
				_1c2be3ceb_push_err(&(*_self_), _216957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_216943_d.get()._field_kind.ptr())),jule::Any(_216957_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c5284c2a:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c07a35_eval_map_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _221441_d, jule::Ptr<_205139176_Token> _221455_ident) {
	jule::Ptr<_1c2c2ac12_Map> _221517_map_kind = _1c2c24711_map(_221441_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _221455_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c528bb33:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_221455_ident, ._field_expr_kind=_221441_d.get()._field_kind, ._field_expr=jule::Any(_221441_d.get()._field_model), ._field_ident=jule::Str("len()", 5)}))});
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1c528bb99:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_221441_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5eaae_builtin_caller_common_mut)}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_221455_ident, ._field_expr_kind=_221441_d.get()._field_kind, ._field_expr=jule::Any(_221441_d.get()._field_model), ._field_ident=jule::Str("clear", 5)}))});
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1c528b99b:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_221441_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5eaae_builtin_caller_common_mut), ._field_result=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=_221517_map_kind.get()._field_key}), 7)})}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_221455_ident, ._field_expr_kind=_221441_d.get()._field_kind, ._field_expr=jule::Any(_221441_d.get()._field_model), ._field_ident=jule::Str("keys", 4)}))});
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1c528ba12:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_221441_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5eaae_builtin_caller_common_mut), ._field_result=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=_221517_map_kind.get()._field_val}), 7)})}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_221455_ident, ._field_expr_kind=_221441_d.get()._field_kind, ._field_expr=jule::Any(_221441_d.get()._field_model), ._field_ident=jule::Str("values", 6)}))});
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1c528ba78:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_221441_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5e97c_builtin_caller_common), ._field_params=jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>::make({jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_221517_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_221455_ident, ._field_expr_kind=_221441_d.get()._field_kind, ._field_expr=jule::Any(_221441_d.get()._field_model), ._field_ident=jule::Str("has", 3)}))});
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1c528a703:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=_221441_d.get()._field_mutable, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c5eaae_builtin_caller_common_mut), ._field_params=jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>::make({jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_221517_map_kind.get()._field_key})})}), 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_221455_ident, ._field_expr_kind=_221441_d.get()._field_kind, ._field_expr=jule::Any(_221441_d.get()._field_model), ._field_ident=jule::Str("del", 3)}))});
			}
		}
		else {
			_case_begin_1c528a04e:;
			{
				_1c2be3ceb_push_err(&(*_self_), _221455_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2c2b075_to_str(_221517_map_kind.ptr())),jule::Any(_221455_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c528a5b0:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c07ddc_eval_str_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _233741_d, jule::Ptr<_205139176_Token> _233755_ident) {
	jule::Ptr<_1c2c1b131_TypeKind> _233817_str_kind = jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("str", 3)), 5)});;
	{
		auto &_match_expr{ _233755_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c52962be:;
			{
				jule::Ptr<_1c2be1ca5_Data> _234121_sd = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})});;
				if (_1c2be2668_is_const(_233741_d.ptr())) {
					_234121_sd.get()._field_constant=static__1c2aba9a3_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2abd467_read_str(_233741_d.get()._field_constant.ptr()).len())));
					_234121_sd.get()._field_model=jule::Any(_234121_sd.get()._field_constant);
				} else {
					_234121_sd.get()._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_token=_233755_ident, ._field_expr_kind=_233741_d.get()._field_kind, ._field_expr=jule::Any(_233741_d.get()._field_model), ._field_ident=jule::Str("len()", 5)}));
				};
				return _234121_sd;
			}
		}
		else {
			_case_begin_1c5295587:;
			{
				_1c2be3ceb_push_err(&(*_self_), _233755_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_233817_str_kind.ptr())),jule::Any(_233755_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c5295e6c:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c081ea_eval_int_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _236239_ident) {
	;
	{
		auto &_match_expr{ _236239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c529a537:;
			{
				jule::Ptr<_1c2abb9a4_Const> _236721_c = static__1c2aba9a3_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2b5903b_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_236721_c, ._field_model=jule::Any(_236721_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c529b1e7:;
			{
				jule::Ptr<_1c2abb9a4_Const> _237421_c = static__1c2aba9a3_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2b58c50_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_237421_c, ._field_model=jule::Any(_237421_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c5299e3d:;
			{
				_1c2be3ceb_push_err(&(*_self_), _236239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_236239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c529a1d5:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c08508_eval_uint_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _238640_ident) {
	;
	{
		auto &_match_expr{ _238640_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c529e508:;
			{
				jule::Ptr<_1c2abb9a4_Const> _239121_c = static__1c2abbb91_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1c2b5903b_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_239121_c, ._field_model=jule::Any(_239121_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("uint", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c529de0e:;
			{
				_1c2be3ceb_push_err(&(*_self_), _238640_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_238640_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c529e1a6:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c08816_eval_i8_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _240338_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _240338_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52a2907:;
			{
				jule::Ptr<_1c2abb9a4_Const> _241021_c = static__1c2aba9a3_new_i64(127LL);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_241021_c, ._field_model=jule::Any(_241021_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i8", 2)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c52a3551:;
			{
				jule::Ptr<_1c2abb9a4_Const> _241721_c = static__1c2aba9a3_new_i64(-128LL);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_241721_c, ._field_model=jule::Any(_241721_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i8", 2)), 5)})});
			}
		}
		else {
			_case_begin_1c52a21ed:;
			{
				_1c2be3ceb_push_err(&(*_self_), _240338_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_240338_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52a2561:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c08b24_eval_i16_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _242939_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52a68d9:;
			{
				jule::Ptr<_1c2abb9a4_Const> _243621_c = static__1c2aba9a3_new_i64(32767LL);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_243621_c, ._field_model=jule::Any(_243621_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i16", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c52a7544:;
			{
				jule::Ptr<_1c2abb9a4_Const> _244321_c = static__1c2aba9a3_new_i64(-32768LL);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_244321_c, ._field_model=jule::Any(_244321_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i16", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52a61e1:;
			{
				_1c2be3ceb_push_err(&(*_self_), _242939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_242939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52a6543:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c08e32_eval_i32_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _245539_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52aa8cc:;
			{
				jule::Ptr<_1c2abb9a4_Const> _246221_c = static__1c2aba9a3_new_i64(2147483647LL);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_246221_c, ._field_model=jule::Any(_246221_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i32", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c52ab537:;
			{
				jule::Ptr<_1c2abb9a4_Const> _246921_c = static__1c2aba9a3_new_i64(-2147483648LL);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_246921_c, ._field_model=jule::Any(_246921_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i32", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52aa1d4:;
			{
				_1c2be3ceb_push_err(&(*_self_), _245539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_245539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52aa536:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c09240_eval_i64_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _248139_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52ae848:;
			{
				jule::Ptr<_1c2abb9a4_Const> _248821_c = static__1c2aba9a3_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_248821_c, ._field_model=jule::Any(_248821_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i64", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c52b0492:;
			{
				jule::Ptr<_1c2abb9a4_Const> _249521_c = static__1c2aba9a3_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_249521_c, ._field_model=jule::Any(_249521_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i64", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52ae183:;
			{
				_1c2be3ceb_push_err(&(*_self_), _248139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_248139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52ae4a2:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0954d_eval_u8_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _250738_ident) {
	;
	;
	{
		auto &_match_expr{ _250738_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52b375e:;
			{
				jule::Ptr<_1c2abb9a4_Const> _251321_c = static__1c2abbb91_new_u64(255LLU);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_251321_c, ._field_model=jule::Any(_251321_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u8", 2)), 5)})});
			}
		}
		else {
			_case_begin_1c52b2c03:;
			{
				_1c2be3ceb_push_err(&(*_self_), _250738_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_250738_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52b33b8:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0985b_eval_u16_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _252539_ident) {
	;
	;
	{
		auto &_match_expr{ _252539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52b6542:;
			{
				jule::Ptr<_1c2abb9a4_Const> _253121_c = static__1c2abbb91_new_u64(65535LLU);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_253121_c, ._field_model=jule::Any(_253121_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u16", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52b59d6:;
			{
				_1c2be3ceb_push_err(&(*_self_), _252539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_252539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52b619b:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c09b69_eval_u32_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _254339_ident) {
	;
	;
	{
		auto &_match_expr{ _254339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52b9325:;
			{
				jule::Ptr<_1c2abb9a4_Const> _254921_c = static__1c2abbb91_new_u64(4294967295LLU);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_254921_c, ._field_model=jule::Any(_254921_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u32", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52b87b9:;
			{
				_1c2be3ceb_push_err(&(*_self_), _254339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_254339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52b8e7e:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c09e77_eval_u64_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _256139_ident) {
	;
	;
	{
		auto &_match_expr{ _256139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52bc0b4:;
			{
				jule::Ptr<_1c2abb9a4_Const> _256721_c = static__1c2abbb91_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_256721_c, ._field_model=jule::Any(_256721_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u64", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52bb59c:;
			{
				_1c2be3ceb_push_err(&(*_self_), _256139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_256139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52bbbda:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0a285_eval_f32_type_tatic(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _257938_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257938_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52c10b8:;
			{
				jule::Ptr<_1c2abb9a4_Const> _258721_c = static__1c2abc433_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_258721_c, ._field_model=jule::Any(_258721_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f32", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c52c112e:;
			{
				jule::Ptr<_1c2abb9a4_Const> _259421_c = static__1c2abc433_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_259421_c, ._field_model=jule::Any(_259421_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f32", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1c52c0e31:;
			{
				jule::Ptr<_1c2abb9a4_Const> _260121_c = static__1c2abc433_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_260121_c, ._field_model=jule::Any(_260121_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f32", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52beccb:;
			{
				_1c2be3ceb_push_err(&(*_self_), _257938_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_257938_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52c0084:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0a593_eval_f64_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_205139176_Token> _261339_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1c52c6189:;
			{
				jule::Ptr<_1c2abb9a4_Const> _262121_c = static__1c2abc433_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_262121_c, ._field_model=jule::Any(_262121_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f64", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1c52c6200:;
			{
				jule::Ptr<_1c2abb9a4_Const> _262821_c = static__1c2abc433_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_262821_c, ._field_model=jule::Any(_262821_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f64", 3)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1c52c6002:;
			{
				jule::Ptr<_1c2abb9a4_Const> _263521_c = static__1c2abc433_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_constant=_263521_c, ._field_model=jule::Any(_263521_c), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("f64", 3)), 5)})});
			}
		}
		else {
			_case_begin_1c52c4d9c:;
			{
				_1c2be3ceb_push_err(&(*_self_), _261339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_261339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52c5155:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0a94a_eval_prim_static(_1c2be3823_Eval* _self_, jule::Str _264735_kind, jule::Ptr<_205139176_Token> _264746_ident) {
	{
		auto &_match_expr{ _264735_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c52ca666:;
			{
				return _1c2c081ea_eval_int_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c52ca6cc:;
			{
				return _1c2c08508_eval_uint_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c52ca743:;
			{
				return _1c2c08816_eval_i8_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c52c9a3e:;
			{
				return _1c2c08b24_eval_i16_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c52c9aa5:;
			{
				return _1c2c08e32_eval_i32_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c52c9b1b:;
			{
				return _1c2c09240_eval_i64_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c52c9b82:;
			{
				return _1c2c0954d_eval_u8_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c52c9be8:;
			{
				return _1c2c0985b_eval_u16_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c52ca8ca:;
			{
				return _1c2c09b69_eval_u32_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c52ca941:;
			{
				return _1c2c09e77_eval_u64_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c52ca9b8:;
			{
				return _1c2c0a285_eval_f32_type_tatic(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c52caa40:;
			{
				return _1c2c0a593_eval_f64_type_static(&(*_self_), _264746_ident);
			}
		}
		else {
			_case_begin_1c52c9731:;
			{
				_1c2be3ceb_push_err(&(*_self_), _264746_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_264735_kind),jule::Any(_264746_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c52c97b9:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0ad02_eval_type_static(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _267939_d, jule::Ptr<_20514ca6e_SubIdentExpr> _267953_si) {
	{
		
		if ((_1c2c2304a_prim(_267939_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c52d1271:;
			{
				return _1c2c0a94a_eval_prim_static(&(*_self_), _1c2c25a53_to_str(_1c2c2304a_prim(_267939_d.get()._field_kind.ptr()).ptr()),_267953_si.get()._field_ident);
			}
		}
		else if ((_1c2c23787_enm(_267939_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c52d1ddc:;
			{
				return _1c2c0611b_eval_enum_static(&(*_self_), _1c2c23787_enm(_267939_d.get()._field_kind.ptr()),_267953_si.get()._field_ident);
			}
		}
		else if ((_1c2c24238_strct(_267939_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c52d1e53:;
			{
				return _1c2c064c3_eval_struct_static(&(*_self_), _1c2c24238_strct(_267939_d.get()._field_kind.ptr()),_267953_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1c52d0dec:;
			{
				_1c2be3ceb_push_err(&(*_self_), _267953_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_267939_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c52d0d42:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0b1a9_eval_obj_sub_ident(_1c2be3823_Eval* _self_, jule::Ptr<_1c2be1ca5_Data> _269341_d, jule::Ptr<_20514ca6e_SubIdentExpr> _269355_si) {
	if (_20513b8c6_is_ignore_ident(_269355_si.get()._field_ident.get()._field_kind)) {
		_1c2be3ceb_push_err(&(*_self_), _269355_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _269917_kind = _269341_d.get()._field_kind;;
	{
		
		if ((_1c2c23523_ptr(_269341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c52d67d7:;
			{
				jule::Ptr<_1c2c2c263_Ptr> _270217_ptr = _1c2c23523_ptr(_269341_d.get()._field_kind.ptr());;
				if (_1c2c2cc36_is_unsafe(_270217_ptr.ptr())) {
					goto _match_end_1c52d66c7;
				};
				if (((!(_269355_si.get()._field_is_self)) && (!(_1c2be4736_is_unsafe(&(*_self_)))))) {
					_1c2be3ceb_push_err(&(*_self_), _269355_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_269917_kind=_1c2c23523_ptr(_269341_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1c2c232ae_sptr(_269341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c52d685e:;
			{
				_269917_kind=_1c2c232ae_sptr(_269341_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1c52d66c7:;
	};
	{
		
		if ((_1c2c2449c_trt(_269341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c52d9367:;
			{
				return _1c2c06924_eval_trait_sub_ident(&(*_self_), _269341_d,_1c2c2449c_trt(_269341_d.get()._field_kind.ptr()),_269355_si.get()._field_ident);
			}
		}
		else if ((_1c2c24238_strct(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1c52d93de:;
			{
				jule::Ptr<_1c1cb6ad4_StructIns> _271817_s = _1c2c24238_strct(_269917_kind.ptr());;
				if (_1c2c1736e_is_instanced_struct(_271817_s)) {
					jule::Bool _272025_used_reference_elem = (_1c2c232ae_sptr(_269341_d.get()._field_kind.ptr()) != nullptr);;
					return _1c2c06e1e_eval_struct_sub_ident(&(*_self_), _269341_d,_1c2c24238_strct(_269917_kind.ptr()),_269355_si,_272025_used_reference_elem);
				};
			}
		}
		else if ((_1c2c23c60_slc(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1c52d9466:;
			{
				return _1c2c072c6_eval_slice_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
			}
		}
		else if ((_1c2c239eb_arr(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1c52d94dd:;
			{
				return _1c2c0767d_eval_array_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
			}
		}
		else if ((_1c2c24711_map(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1c52d9565:;
			{
				return _1c2c07a35_eval_map_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
			}
		}
		else if ((_1c2c2304a_prim(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1c52d9a93:;
			{
				jule::Ptr<_1c2c256e0_Prim> _273017_p = _1c2c2304a_prim(_269917_kind.ptr());;
				{
					auto &_match_expr{ _273017_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1c52e0170:;
						{
							return _1c2c07ddc_eval_str_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
						}
					}
					_match_end_1c52e0659:;
				};
			}
		}
		_match_end_1c52d928a:;
	};
	_1c2be3ceb_push_err(&(*_self_), _269355_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_269341_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0b4b7_eval_sub_ident(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514ca6e_SubIdentExpr> _274038_si) {
	jule::Ptr<_1c2c1b131_TypeKind> _274117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274117_prefix;
	});;
	jule::Ptr<_1c2be1ca5_Data> _274517_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_274038_si.get()._field_expr));;
	if ((_274517_d == nullptr)) {
		return nullptr;
	};
	if (_274517_d.get()._field_decl) {
		return _1c2c0ad02_eval_type_static(_self_.ptr(), _274517_d,_274038_si);
	};
	return _1c2c0b1a9_eval_obj_sub_ident(_self_.ptr(), _274517_d,_274038_si);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0b7c5_eval_tuple(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514b5ea_TupleExpr> _275734_tup) {
	jule::Ptr<_1c2c2a151_Tuple> _275817_tup_t = jule::new_ptr<_1c2c2a151_Tuple>(_1c2c2a151_Tuple{});;
	_275817_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>::alloc(0LL,_275734_tup.get()._field_expr.len());
	jule::Ptr<_1c1cbe79b_TupleExprModel> _276117_model = jule::new_ptr<_1c1cbe79b_TupleExprModel>(_1c1cbe79b_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1c2be1ca5_Data>>::alloc(0LL,_275734_tup.get()._field_expr.len())});;
	jule::Bool _276517_ok = true;;
	{
		auto &expr = _275734_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1c52e63eb:;
		if (it != expr.end()) {
			jule::Ptr<_2050bba21_Expr> _276621_expr = *it;
			{
				jule::Ptr<_1c2be1ca5_Data> _276721_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_276621_expr.get()._field_kind));;
				if ((_276721_d == nullptr)) {
					_276517_ok=false;
					goto _iter_next_1c52e63eb;
				};
				_275817_tup_t.get()._field_types = jule::alloc_for_append(_275817_tup_t.get()._field_types,1);_275817_tup_t.get()._field_types.__push(_276721_d.get()._field_kind);;
				_276117_model.get()._field_datas = jule::alloc_for_append(_276117_model.get()._field_datas,1);_276117_model.get()._field_datas.__push(_276721_d);;
			}
			_iter_next_1c52e63eb:;
			++it;
			goto _iter_begin_1c52e63eb;
		}
		_iter_end_1c52e63eb:;
	};
	if ((!(_276517_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_275817_tup_t, 8)}), ._field_model=jule::Any(_276117_model)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0bb7c_eval_map(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_1c2c2ac12_Map> _278632_m, jule::Ptr<_20514d50e_BraceLit> _278645_lit) {
	jule::Ptr<_1c1cbc007_MapExprModel> _278717_model = jule::new_ptr<_1c1cbc007_MapExprModel>(_1c1cbc007_MapExprModel{._field_key_kind=_278632_m.get()._field_key, ._field_val_kind=_278632_m.get()._field_val});;
	{
		auto &expr = _278645_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c52e9c7e:;
		if (it != expr.end()) {
			jule::Ptr<_2050bba21_Expr> _279221_expr = *it;
			{
				{
					auto &_match_expr{ _279221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_20514d6eb_KeyValPair>>()) {
						_case_begin_1c52ea213:;
						{
							goto _match_end_1c52ea444;
						}
					}
					else {
						_case_begin_1c52ea499:;
						{
							_1c2be3ceb_push_err(_self_.ptr(), _278645_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1c52ea444:;
				};
				jule::Ptr<_20514d6eb_KeyValPair> _280221_pair = _279221_expr.get()._field_kind.operator jule::Ptr<_20514d6eb_KeyValPair>();;
				jule::Ptr<_1c2be1ca5_Data> _280421_key = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_280221_pair.get()._field_key));;
				if ((_280421_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1c2be1ca5_Data> _280921_val = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_280221_pair.get()._field_val));;
				if ((_280921_val == nullptr)) {
					return nullptr;
				};
				_1c2b87b5d_check_assign_type(_self_.get()._field_s, false,_278632_m.get()._field_key,_280421_key,_280221_pair.get()._field_colon);
				_1c2b87b5d_check_assign_type(_self_.get()._field_s, false,_278632_m.get()._field_val,_280921_val,_280221_pair.get()._field_colon);
				_278717_model.get()._field_entries = jule::alloc_for_append(_278717_model.get()._field_entries,1);_278717_model.get()._field_entries.__push(jule::new_ptr<_1c1cbba84_KeyValPairExprModel>(_1c1cbba84_KeyValPairExprModel{._field_key=jule::Any(_280421_key.get()._field_model), ._field_val=jule::Any(_280921_val.get()._field_model)}));;
			}
			_iter_next_1c52e9c7e:;
			++it;
			goto _iter_begin_1c52e9c7e;
		}
		_iter_end_1c52e9c7e:;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=true, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_278632_m, 9)}), ._field_model=jule::Any(_278717_model)});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0be8a_eval_brace_lit(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514d50e_BraceLit> _283038_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1c5300438:;
			{
				_1c2be3ceb_push_err(_self_.ptr(), _283038_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1c2c24711_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c5300c30:;
			{
				return _1c2c0bb7c_eval_map(_self_, _1c2c24711_map(_self_.get()._field_prefix.ptr()),_283038_lit);
			}
		}
		else if ((_1c2c24238_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c5300c96:;
			{
				return _1c2c03cb7_eval_struct_lit_explicit(_self_, _1c2c24238_strct(_self_.get()._field_prefix.ptr()),_283038_lit.get()._field_exprs,_283038_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1c53000b4:;
			{
				_1c2be3ceb_push_err(_self_.ptr(), _283038_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c52eeee8:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0c298_eval_anon_fn(_1c2be3823_Eval* _self_, jule::Ptr<_20515028b_FnDecl> _284535_decl) {
	_1c2c30585_TypeChecker _284617_tc = _1c2c30585_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup};;
	jule::Ptr<_1c1cc9762_FnIns> _285017_ins = _1c2c3626c_build_fn(&_284617_tc, _284535_decl);;
	_285017_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
			_case_begin_1c5303dcb:;
			{
				jule::Ptr<_1c2b6197d_ScopeChecker> _285521_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>();;
				jule::Ptr<_1c2b6197d_ScopeChecker> _285621_scc = _1c2b70d66_new_child_checker(_285521_sc);;
				_285621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c2b615a4_ScopeLabel>>>(nullptr);
				_285621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c2b61791_ScopeGoto>>>(nullptr);
				_285621_scc.get()._field_owner=nullptr;
				_285621_scc.get()._field_child_index=0LL;
				_285621_scc.get()._field_it=0LLU;
				_285621_scc.get()._field_cse=0LLU;
				_285621_scc.get()._field_owner=_285017_ins;
				_1c2b959c3_check_fn_ins_sc((*_self_)._field_s.ptr(), _285017_ins,_285621_scc);
			}
		}
		else {
			_case_begin_1c530552b:;
			{
				_1c2b96067_check_fn_ins((*_self_)._field_s, _285017_ins);
			}
		}
		_match_end_1c53054c6:;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_285017_ins, 1)}), ._field_model=jule::Any(jule::new_ptr<_1c1cbb6cc_AnonFnExprModel>(_1c1cbb6cc_AnonFnExprModel{._field_func=_285017_ins, ._field_global=_1c2be499a_is_global(&(*_self_))}))});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0c5a6_eval_binop(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_20514cc5b_BinopExpr> _287834_op) {
	_1c2c101e1_BinaryEval _287917_bs = static__1c2c10796_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1c2c256e0_Prim> _288317_prim = _1c2c2304a_prim(_self_.get()._field_prefix.ptr());;
		if (((_288317_prim == nullptr) || (!(_1c2b5ea69_is_num(_1c2c25a53_to_str(_288317_prim.ptr())))))) {
			jule::Ptr<_1c2c1b131_TypeKind> _288525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288525_prefix;
			});;
			return _1c2c15878_eval(&_287917_bs, _287834_op);
		};
	};
	return _1c2c15878_eval(&_287917_bs, _287834_op);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0c8b4_eval_expr_kind(jule::Ptr<_1c2be3823_Eval> _self_, jule::Any _289538_kind) {
	jule::Ptr<_1c2be1ca5_Data> _289617_d = nullptr;;
	{
		auto &_match_expr{ _289538_kind };
		
		if (_match_expr.type_is<jule::Ptr<_2050bba21_Expr>>()) {
			_case_begin_1c53134a1:;
			{
				_289617_d=_1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_289538_kind.operator jule::Ptr<_2050bba21_Expr>().get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514ba18_LitExpr>>()) {
			_case_begin_1c5313517:;
			{
				_289617_d=_1c2be667d_eval_lit(_self_.ptr(), _289538_kind.operator jule::Ptr<_20514ba18_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c0ce_IdentExpr>>()) {
			_case_begin_1c531357d:;
			{
				_289617_d=_1c2beac59_eval_ident(_self_.ptr(), _289538_kind.operator jule::Ptr<_20514c0ce_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c2bb_UnaryExpr>>()) {
			_case_begin_1c531376a:;
			{
				_289617_d=_1c2beb067_eval_unary(_self_, _289538_kind.operator jule::Ptr<_20514c2bb_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c4a8_VariadicExpr>>()) {
			_case_begin_1c53137d1:;
			{
				_289617_d=_1c2beb375_eval_variadic(_self_, _289538_kind.operator jule::Ptr<_20514c4a8_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514bc05_UnsafeExpr>>()) {
			_case_begin_1c5313847:;
			{
				_289617_d=_1c2beb683_eval_unsafe(_self_, _289538_kind.operator jule::Ptr<_20514bc05_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514d8d8_SliceExpr>>()) {
			_case_begin_1c53138be:;
			{
				_289617_d=_1c2bec156_eval_slice_expr(_self_, _289538_kind.operator jule::Ptr<_20514d8d8_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514b7d7_IndexingExpr>>()) {
			_case_begin_1c5313946:;
			{
				_289617_d=_1c2bee82e_eval_indexing(_self_, _289538_kind.operator jule::Ptr<_20514b7d7_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514e048_SlicingExpr>>()) {
			_case_begin_1c53139bd:;
			{
				_289617_d=_1c2c009ea_eval_slicing(_self_, _289538_kind.operator jule::Ptr<_20514e048_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c695_CastExpr>>()) {
			_case_begin_1c5313a45:;
			{
				_289617_d=_1c2c03536_eval_cast(_self_, _289538_kind.operator jule::Ptr<_20514c695_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514c882_NsSelectionExpr>>()) {
			_case_begin_1c5313abc:;
			{
				_289617_d=_1c2c03844_eval_ns_selection(_self_.ptr(), _289538_kind.operator jule::Ptr<_20514c882_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514d322_StructLit>>()) {
			_case_begin_1c5313b44:;
			{
				_289617_d=_1c2c040d6_eval_struct_lit(_self_, _289538_kind.operator jule::Ptr<_20514d322_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec8b92_TypeDecl>>()) {
			_case_begin_1c5313bbb:;
			{
				_289617_d=_1c2c043e4_eval_type(_self_.ptr(), _289538_kind.operator jule::Ptr<_204ec8b92_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514ce48_FnCallExpr>>()) {
			_case_begin_1c5313c43:;
			{
				_289617_d=_1c2c05c64_eval_fn_call(_self_, _289538_kind.operator jule::Ptr<_20514ce48_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514ca6e_SubIdentExpr>>()) {
			_case_begin_1c5313cba:;
			{
				_289617_d=_1c2c0b4b7_eval_sub_ident(_self_, _289538_kind.operator jule::Ptr<_20514ca6e_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514b5ea_TupleExpr>>()) {
			_case_begin_1c5313d42:;
			{
				_289617_d=_1c2c0b7c5_eval_tuple(_self_, _289538_kind.operator jule::Ptr<_20514b5ea_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514d50e_BraceLit>>()) {
			_case_begin_1c5313db9:;
			{
				_289617_d=_1c2c0be8a_eval_brace_lit(_self_, _289538_kind.operator jule::Ptr<_20514d50e_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20515028b_FnDecl>>()) {
			_case_begin_1c5313e41:;
			{
				_289617_d=_1c2c0c298_eval_anon_fn(_self_.ptr(), _289538_kind.operator jule::Ptr<_20515028b_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514cc5b_BinopExpr>>()) {
			_case_begin_1c5313eb8:;
			{
				_289617_d=_1c2c0c5a6_eval_binop(_self_, _289538_kind.operator jule::Ptr<_20514cc5b_BinopExpr>());
			}
		}
		_match_end_1c531344b:;
	};
	return _289617_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0cbc2_eval(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_2050bba21_Expr> _294228_expr) {
	jule::Ptr<_1c2be1ca5_Data> _294317_d = _1c2c0c8b4_eval_expr_kind(_self_, jule::Any(_294228_expr.get()._field_kind));;
	if (((_294317_d == nullptr) || (_294317_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1c2c23ec4_fnc(_294317_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c531ee6e:;
			{
				jule::Ptr<_1c1cc9762_FnIns> _295021_f = _1c2c23ec4_fnc(_294317_d.get()._field_kind.ptr());;
				if (_1c1cca4dd_is_builtin(_295021_f.ptr())) {
					goto _match_end_1c531ed92;
				};
				if ((_295021_f.get()._field_generics.len() != _295021_f.get()._field_decl.get()._field_generics.len())) {
					_1c2b82905_push_err(_self_.get()._field_s.ptr(), _294228_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1c1cc6c7b_is_method(_295021_f.get()._field_decl.ptr())) {
					_1c2b82905_push_err(_self_.get()._field_s.ptr(), _294228_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c531ed92:;
	};
	return _294317_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0ced0_eval_expr(jule::Ptr<_1c2be3823_Eval> _self_, jule::Ptr<_2050bba21_Expr> _296833_expr) {
	jule::Ptr<_1c2be1ca5_Data> _296917_d = _1c2c0cbc2_eval(_self_, _296833_expr);;
	{
		
		if ((_296917_d == nullptr)) {
			_case_begin_1c5323d0d:;
			{
				return nullptr;
			}
		}
		else if (_296917_d.get()._field_decl) {
			_case_begin_1c5323d74:;
			{
				_1c2be3ceb_push_err(_self_.ptr(), _296833_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1c5323758:;
			{
				return _296917_d;
			}
		}
		_match_end_1c5323703:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2be3823_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c2c0d453_UnaryEval static__1c2c0d909_new(jule::Ptr<_1c2be3823_Eval> _298923_e) {
	return _1c2c0d453_UnaryEval{._field_e=_298923_e};
}



inline void _1c2c0dad5_minus(_1c2c0d453_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1c5325804:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5325c44:;
			{
				if ((!(_1c2b5ea69_is_num(_1c2c1b4d8_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c2c24238_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5325caa:;
			{
				if ((_1c2c24238_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c5325480:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c53253b4:;
	};
	if (_1c2be2668_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c2ac0a74_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5328e23:;
				{
					_1c2abeb83_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1c2abd6cb_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c2ac00c3_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5328e9a:;
				{
					_1c2abe18d_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1c2abcc2a_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c2ac0337_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5329022:;
				{
					_1c2abe18d_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1c2abd940_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1c5328bd1:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2c0dcb1_plus(_1c2c0d453_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1c532d774:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c532dbb4:;
			{
				if ((!(_1c2b5ea69_is_num(_1c2c1b4d8_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c2c24238_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c532dc2a:;
			{
				if ((_1c2c24238_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c532d400:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c532d334:;
	};
	if (_1c2be2668_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c2ac0a74_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5331d0a:;
				{
					_1c2abeb83_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1c2abd6cb_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c2ac00c3_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5331d82:;
				{
					_1c2abe18d_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1c2abcc2a_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c2ac0337_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5331e09:;
				{
					_1c2abe18d_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1c2abd940_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1c5331ab8:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2c0de8c_caret(_1c2c0d453_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1c5336738:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5336b78:;
			{
				if ((!(_1c2b5e4d6_is_int(_1c2c1b4d8_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c2c24238_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5336bde:;
			{
				if ((_1c2c24238_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c53363b4:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c53362e8:;
	};
	if (_1c2be2668_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c2ac00c3_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5339cad:;
				{
					_1c2abe18d_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1c2abcc2a_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1c2ac0337_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c5339d35:;
				{
					_1c2abe413_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1c2abce8e_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1c5339a7c:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2c0e168_excl(_1c2c0d453_UnaryEval* _self_) {
	jule::Ptr<_1c2c256e0_Prim> _310813_t = _1c2c2304a_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_310813_t == nullptr) || (!(_1c2c2843a_is_bool(_310813_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1c2be2668_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1c2ac059b_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1c533ea2c:;
				{
					_1c2abe688_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1c2abd203_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1c533e92d:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2c0e344_star(_1c2c0d453_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1c2c23523_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5342cc7:;
			{
				if ((!(_1c2be4736_is_unsafe((*_self_)._field_e.ptr())))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c2c2c263_Ptr> _314021_t = _1c2c23523_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1c2c2cc36_is_unsafe(_314021_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_314021_t.get()._field_elem;
			}
		}
		else if ((_1c2c232ae_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5343217:;
			{
				(*_self_)._field_d.get()._field_kind=_1c2c232ae_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1c5342975:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c5342920:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1c2c0e520_amper(_1c2c0d453_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb9862_StructLitExprModel>>()) {
			_case_begin_1c5347c22:;
			{
				jule::Ptr<_1c1cb9862_StructLitExprModel> _316021_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1c1cb9862_StructLitExprModel>();;
				_1c2c16615_make_struct_lit_alloc((*_self_)._field_d,_316021_lit);
			}
		}
		else {
			_case_begin_1c5347408:;
			{
				{
					
					if (_1c2c2d088_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1c5347eca:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c2c263_Ptr>(_1c2c2c263_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 11)});
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_expr=jule::new_ptr<_1c2be1ca5_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1c534789d:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1c5347804:;
				};
			}
		}
		_match_end_1c534734d:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1c2c0e6eb_type_decl(_1c2c0d453_UnaryEval* _self_) {
	_1c2c30585_TypeChecker _318417_tc = _1c2c30585_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op};;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c534d8a4:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c34b0b_build_ptr_from_type(&_318417_tc, (*_self_)._field_d.get()._field_kind), 11)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c534d91a:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c344e0_build_sptr_from_type(&_318417_tc, (*_self_)._field_d.get()._field_kind), 6)});
			}
		}
		else {
			_case_begin_1c534b2ec:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c534c0ab:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1c2c0e8c7_eval_data(_1c2c0d453_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c5351b82:;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _320621_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_320621_prefix;
			}
		}
		else {
			_case_begin_1c5351445:;
			{
				(*_self_)._field_d=_1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1c535180d:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c0eba2_eval(_1c2c0d453_UnaryEval* _self_, jule::Ptr<_20514c2bb_UnaryExpr> _321527_u) {
	(*_self_)._field_u=_321527_u;
	_1c2c0e8c7_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1c2c0e6eb_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _322613_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c5355d95:;
			{
				_1c2c0dad5_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c5355834:;
			{
				_1c2c0dcb1_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c535589a:;
			{
				_1c2c0de8c_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c5355911:;
			{
				_1c2c0e168_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c5355977:;
			{
				_1c2c0e344_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c535602c:;
			{
				_1c2c0e520_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1c5354b85:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1c53557ce:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c5356406:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str(_322613_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1c2be2668_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1c535646c:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1c535800c:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c0d453_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c2c101e1_BinaryEval static__1c2c10796_new_plain(jule::Ptr<_1c2be3823_Eval> _326429_e) {
	return _1c2c101e1_BinaryEval{._field_e=_326429_e};
}



inline _1c2c101e1_BinaryEval static__1c2c10ad7_new(jule::Ptr<_1c2be3823_Eval> _327023_e, jule::Ptr<_205139176_Token> _327037_op) {
	return _1c2c101e1_BinaryEval{._field_e=_327023_e, ._field_op=_327037_op};
}



inline jule::Bool _1c2c10d6d_check_type_compatibility(_1c2c101e1_BinaryEval* _self_) {
	return _1c2b880d1_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1c2c11126_check_struct_common_operator_compatibility(_1c2c101e1_BinaryEval* _self_) {
	jule::Ptr<_1c1cc9762_FnIns> _328417_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c535d364:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c535e3cb:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c535e442:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c535e4a8:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c535d0bc:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c535d133:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c535d199:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c535d210:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c535e695:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c535e70b:;
			{
				_328417_overload=_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1c535cac2:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1c535d023:;
	};
	if ((_328417_overload == nullptr)) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1c1cc88c6_ParamIns> _331617_p = _328417_overload.get()._field_params[1LL];;
	return _1c2b87b5d_check_assign_type((*_self_)._field_e.get()._field_s, _331617_p.get()._field_decl.get()._field_reference,_331617_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c113bd_eval_nil(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c1c73c_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c536913e:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c5367967:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1c5368ca9:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c11632_eval_enum(_1c2c101e1_BinaryEval* _self_) {
	jule::Ptr<_1c2a159ec_Enum> _334117_enm = _1c2c23787_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c536ac78:;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _334521_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1c2c23787_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_334521_rkind=_1c2c23787_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1c2b880d1_check_type_compatibility((*_self_)._field_e.get()._field_s, _334117_enm.get()._field_kind.get()._field_kind,_334521_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		_match_end_1c536b482:;
	};
	if (((_1c2c23787_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_334117_enm != _1c2c23787_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_334117_enm.get()._field_ident),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c5370e6a:;
			{
				if ((!(_1c2b5ea69_is_num(_1c2c1b4d8_to_str(_334117_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334117_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c5371da0:;
			{
				if (((_1c2c2304a_prim(_334117_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1c2b5e4d6_is_int(_1c2c25a53_to_str(_1c2c2304a_prim(_334117_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334117_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c53701bc:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334117_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1c5370ad5:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c11896_eval_sptr(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c5376ee8:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c53769a9:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c53766e0:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c11b0a_eval_ptr(_1c2c101e1_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c53793d5:;
			{
				if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1c537a5c3:;
			{
				if ((_1c2c23523_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1c2c2cc36_is_unsafe(_1c2c23523_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1c2c17649_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c537858d:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c5378e62:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c11d6e_eval_arr(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c5381464:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c5380e25:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c5380b4a:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c120d3_eval_slc(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c5383ca2:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c5383576:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c5383521:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c12347_eval_fn(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c5386634:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c5385e08:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c5385da3:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c125ab_eval_struct(_1c2c101e1_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c5388768:;
			{
				if ((_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c53887ce:;
			{
				if ((_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c5388845:;
			{
				if ((_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c53888ab:;
			{
				if ((_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c5388922:;
			{
				if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		_match_end_1c53885c0:;
	};
	if ((!(_1c2c11126_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c12820_eval_trait(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c5394158:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c5393a81:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c53936a7:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c12a84_eval_any(_1c2c101e1_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c53964ce:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c5395687:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1c539605b:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c12ce8_eval_bool(_1c2c101e1_BinaryEval* _self_) {
	if ((!(_1c2c10d6d_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1c5398aa8:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c539837c:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c5398327:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c1305c_eval_str(_1c2c101e1_BinaryEval* _self_) {
	jule::Str _361417_rk = _1c2c1b4d8_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_361417_rk != jule::Str("str", 3))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_361417_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c539c282:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c539beeb:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		else {
			_case_begin_1c539b0e9:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1c539ae73:;
	};
}



inline void _1c2c13238_set_type_to_greater(_1c2c101e1_BinaryEval* _self_) {
	if (_1c2be2668_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1c2be2668_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1c2be2668_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1c2b5cd31_is_greater(_1c2c2304a_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1c2c1347a_check_mod_data(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_1c2be1ca5_Data>& _365738_d) {
	if ((!(_1c2be2668_is_const(_365738_d.ptr())))) {
		if (((_1c2c2304a_prim(_365738_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2b5e4d6_is_int(_1c2c2304a_prim(_365738_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c2bcca2c_sig_assignable(jule::Str("i64", 3),_365738_d)) {
			_case_begin_1c53a4b2a:;
			{
				_1c2abe18d_set_i64(_365738_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_365738_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2bccb5e_unsig_assignable(jule::Str("u64", 3),_365738_d)) {
			_case_begin_1c53a4850:;
			{
				_1c2abe413_set_u64(_365738_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_365738_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1c53a47d9:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c53a2e47:;
	};
}



inline void _1c2c13656_mod(_1c2c101e1_BinaryEval* _self_) {
	_1c2c1347a_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1c2c1347a_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1c2c13a30_numbers_are_compatibile(_1c2c101e1_BinaryEval* _self_, jule::Str& _367939_lk, jule::Str& _367949_rk) {
	if ((!(_1c2b5ea69_is_num(_367949_rk)))) {
		return false;
	};
	if (_1c2be2668_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_367939_lk == jule::Str("f32", 3))) {
		if (_1c2be2668_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_367949_rk == jule::Str("f32", 3));
	};
	if ((_367939_lk == jule::Str("f64", 3))) {
		if (_1c2be2668_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_367949_rk == jule::Str("f64", 3));
	};
	if (_1c2be2668_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_367939_lk == _367949_rk);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c13ca5_eval_float(_1c2c101e1_BinaryEval* _self_) {
	jule::Str _370913_lk = _1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _371013_rk = _1c2c2304a_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1c2c13a30_numbers_are_compatibile(&(*_self_), _370913_lk,_371013_rk)))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c53ad24e:;
			{
				if (((!(_1c2be2668_is_const((*_self_)._field_l.ptr()))) || (!(_1c2bccc91_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
					return nullptr;
				};
				if (((!(_1c2be2668_is_const((*_self_)._field_r.ptr()))) || (!(_1c2bccc91_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
					return nullptr;
				};
				_1c2abe18d_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1c2abe413_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1c2c1703e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1c53ad1e9:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c53ad34d:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		_match_end_1c53b360b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1c53b5762:;
			{
				_1c2c13238_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c53b5674:;
			{
				if ((!(_1c2b5e4d6_is_int(_371013_rk)))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
					return nullptr;
				};
				_1c2c13656_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1c53b38a3:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c53b3ebe:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c14019_eval_int(_1c2c101e1_BinaryEval* _self_) {
	jule::Str _377313_lk = _1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _377413_rk = _1c2c2304a_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c53b839c:;
			{
				if (((!(_1c2b5e4d6_is_int(_377313_lk))) || (!(_1c2b5e4d6_is_int(_377413_rk))))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377313_lk),jule::Any(_377413_rk)}));
					return nullptr;
				};
				if ((!(_1c2c1703e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1c53b8b1c:;
	};
	if ((!(_1c2c13a30_numbers_are_compatibile(&(*_self_), _377313_lk,_377413_rk)))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_377313_lk),jule::Any(_377413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c53bc46c:;
			{
				return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("bool", 4)), 5)})});
			}
		}
		_match_end_1c53bc406:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c53be6a0:;
			{
				_1c2c13238_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c53be5b2:;
			{
				_1c2c13656_mod(&(*_self_));
				_1c2c13238_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c53bc57c:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1c53bce1d:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c1427d_eval_prim(_1c2c101e1_BinaryEval* _self_) {
	jule::Ptr<_1c2c256e0_Prim> _383213_prim = _1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1c2c2843a_is_bool(_383213_prim.ptr())) {
			_case_begin_1c53c1a04:;
			{
				return _1c2c12ce8_eval_bool(&(*_self_));
			}
		}
		else if (_1c2c2869e_is_str(_383213_prim.ptr())) {
			_case_begin_1c53c1a7b:;
			{
				return _1c2c1305c_eval_str(&(*_self_));
			}
		}
		_match_end_1c53c1938:;
	};
	if ((_1c2c2304a_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c25a53_to_str(_383213_prim.ptr())),jule::Any(_1c2c1b4d8_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1c2b5e7c2_is_float(_383213_prim.get()._field_kind)) {
			_case_begin_1c53c463e:;
			{
				return _1c2c13ca5_eval_float(&(*_self_));
			}
		}
		else if (_1c2b5e4d6_is_int(_383213_prim.get()._field_kind)) {
			_case_begin_1c53c46e9:;
			{
				return _1c2c14019_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1c53c3e46:;
			{
				return nullptr;
			}
		}
		_match_end_1c53c3d58:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c144e2_eval_op(_1c2c101e1_BinaryEval* _self_) {
	{
		
		if (_1c2c1c264_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1c53c607a:;
			{
				_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1c2c2304a_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1c2c28913_is_any(_1c2c2304a_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1c53c6168:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c53c61ce;
			}
		}
		else if (((_1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1c2c28913_is_any(_1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1c53c61ce:;
			{
				return _1c2c12a84_eval_any(&(*_self_));
			}
		}
		else if (_1c2c1c000_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1c53c5a08:;
			{
				return _1c2c113bd_eval_nil(&(*_self_));
			}
		}
		else if ((_1c2c23787_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c5a6e:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c53c5ad5;
			}
		}
		else if ((_1c2c23787_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c5ad5:;
			{
				return _1c2c11632_eval_enum(&(*_self_));
			}
		}
		else if ((_1c2c232ae_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c5b4b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c53c6256;
			}
		}
		else if ((_1c2c232ae_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6256:;
			{
				return _1c2c11896_eval_sptr(&(*_self_));
			}
		}
		else if ((_1c2c23523_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c62bc:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c53c6333;
			}
		}
		else if ((_1c2c23523_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6333:;
			{
				return _1c2c11b0a_eval_ptr(&(*_self_));
			}
		}
		else if ((_1c2c239eb_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6399:;
			{
				return _1c2c11d6e_eval_arr(&(*_self_));
			}
		}
		else if ((_1c2c23c60_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6421:;
			{
				return _1c2c120d3_eval_slc(&(*_self_));
			}
		}
		else if ((_1c2c23ec4_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6498:;
			{
				return _1c2c12347_eval_fn(&(*_self_));
			}
		}
		else if ((_1c2c2449c_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6520:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c53c6597;
			}
		}
		else if ((_1c2c2449c_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6597:;
			{
				return _1c2c12820_eval_trait(&(*_self_));
			}
		}
		else if ((_1c2c24238_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c661e:;
			{
				return _1c2c125ab_eval_struct(&(*_self_));
			}
		}
		else if ((_1c2c2304a_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c53c6696:;
			{
				return _1c2c1427d_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1c53c5992:;
			{
				return nullptr;
			}
		}
		_match_end_1c53c58c6:;
	};
}



inline void _1c2c14767_eval_const(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_1c2be1ca5_Data>& _390234_d) {
	{
		
		if ((_390234_d == nullptr)) {
			_case_begin_1c53d4ebd:;
			{
				return;;
			}
		}
		else if ((!(_1c2be2668_is_const((*_self_)._field_l.ptr()))) || (!(_1c2be2668_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1c53d5045:;
			{
				_390234_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1c53d4dad:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c53d5ee1:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c53d60ac:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c53d65a7:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(_1c2ac1712_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c53d661d:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(_1c2ac1404_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c53d6684:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c53d66ea:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c53d6772:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c53d67e9:;
			{
				_390234_d.get()._field_constant=static__1c2abbde4_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c53d6871:;
			{
				_1c2ac2a65_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c53d68e8:;
			{
				_1c2ac2d73_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c53d6970:;
			{
				_1c2ac3181_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c53d69e7:;
			{
				jule::Bool _393917_ok = _1c2ac348e_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_393917_ok)) && (_1c2abde18_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1c2c256e0_Prim> _394421_prim = _1c2c2304a_prim(_390234_d.get()._field_kind.ptr());;
				{
					
					if (_1c2b5de53_is_sig_int(_394421_prim.get()._field_kind)) {
						_case_begin_1c53e3a37:;
						{
							_1c2abe18d_set_i64(_390234_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_390234_d.get()._field_constant.ptr())));
						}
					}
					else if (_1c2b5e23e_is_unsig_int(_394421_prim.get()._field_kind)) {
						_case_begin_1c53e3aae:;
						{
							_1c2abe413_set_u64(_390234_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_390234_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1c53e396b:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c53d6a6e:;
			{
				jule::Bool _395217_ok = _1c2ac379c_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_395217_ok)) && (_1c2abde18_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c53d6ae6:;
			{
				_1c2ac3db8_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c53d6b6d:;
			{
				_1c2ac3aaa_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c53d6be5:;
			{
				_1c2ac41c6_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c53d6c6c:;
			{
				_1c2ac44d4_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c53d6ce4:;
			{
				_1c2ac47e2_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1c53d5d37:;
	};
	_1c2c1845d_apply_cast_model_by_enum(_390234_d,_1c2c23787_enm(_390234_d.get()._field_kind.ptr()));
	jule::Ptr<_1c2c256e0_Prim> _397617_prim = _1c2c2304a_prim(_390234_d.get()._field_kind.ptr());;
	if (((_397617_prim == nullptr) || (!(_1c2b5ea69_is_num(_1c2c25a53_to_str(_397617_prim.ptr())))))) {
		_390234_d.get()._field_model=jule::Any(_390234_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_390234_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_397617_prim=_1c2c2304a_prim(_390234_d.get()._field_kind.ptr());
		};
	};
	_1c2c16318_fit_bitsize(_390234_d);
	_1c2c18727_cast_const_by_type(_397617_prim.get()._field_kind,_390234_d);
}



inline void _1c2c149dc_check_data(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_1c2be1ca5_Data>& _399234_d) {
	jule::Ptr<_1c1cc9762_FnIns> _399313_f = _1c2c23ec4_fnc(_399234_d.get()._field_kind.ptr());;
	if ((((_399313_f != nullptr) && (_399313_f.get()._field_decl != nullptr)) && _1c1cc6c7b_is_method(_399313_f.get()._field_decl.ptr()))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1c2c14bb8_check_datas(_1c2c101e1_BinaryEval* _self_) {
	_1c2c149dc_check_data(&(*_self_), (*_self_)._field_l);
	_1c2c149dc_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1c2c14e3d_set_model(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_1c2be1ca5_Data>& _400433_d) {
	if (_1c2be2668_is_const(_400433_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1c2be1ca5_Data> _401218_l = (*_self_)._field_l;;
	jule::Ptr<_1c2be1ca5_Data> _401225_r = (*_self_)._field_r;;
	std::tie(_401218_l,_401225_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1c2be2976_good_operand(_401218_l.ptr(), _401225_r)))) {
		std::tie(_401218_l,_401225_r) = std::make_tuple(_401225_r,_401218_l);
	};
	_400433_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb8c07_BinopExprModel>(_1c1cb8c07_BinopExprModel{._field_left=jule::new_ptr<_1c1cb8740_OperandExprModel>(_1c1cb8740_OperandExprModel{._field_kind=_401218_l.get()._field_kind, ._field_model=jule::Any(_401218_l.get()._field_model)}), ._field_right=jule::new_ptr<_1c1cb8740_OperandExprModel>(_1c1cb8740_OperandExprModel{._field_kind=_401225_r.get()._field_kind, ._field_model=jule::Any(_401225_r.get()._field_model)}), ._field_op=(*_self_)._field_op}));
}



inline void _1c2c151b3_post_eval(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_1c2be1ca5_Data>& _403033_d) {
	_403033_d.get()._field_lvalue=false;
	_1c2c14e3d_set_model(&(*_self_), _403033_d);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c1556a_solve_explicit(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_1c2be1ca5_Data>& _403538_l, jule::Ptr<_1c2be1ca5_Data>& _403553_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403538_l,_403553_r);
	_1c2c14bb8_check_datas(&(*_self_));
	jule::Ptr<_1c2be1ca5_Data> _404017_d = _1c2c144e2_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403538_l,_403553_r);
	_1c2c14767_eval_const(&(*_self_), _404017_d);
	if ((_404017_d != nullptr)) {
		_404017_d.get()._field_mutable=true;
		_1c2c151b3_post_eval(&(*_self_), _404017_d);
	};
	return _404017_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c15878_eval(_1c2c101e1_BinaryEval* _self_, jule::Ptr<_20514cc5b_BinopExpr>& _405528_op) {
	if ((_405528_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1c2be3ceb_push_err((*_self_)._field_e.ptr(), _405528_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1c2be411a_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _406217_l = _1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any(_405528_op.get()._field_left));;
	if (((_406217_l == nullptr) || (_406217_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _406717_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_406217_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_406717_prefix;
	});;
	jule::Ptr<_1c2be1ca5_Data> _407017_r = _1c2c0c8b4_eval_expr_kind((*_self_)._field_e, jule::Any(_405528_op.get()._field_right));;
	if (((_407017_r == nullptr) || (_407017_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405528_op.get()._field_op;
	jule::Ptr<_1c2be1ca5_Data> _407717_d = _1c2c1556a_solve_explicit(&(*_self_), _406217_l,_407017_r);;
	if ((((_407717_d != nullptr) && _406217_l.get()._field_is_rune) && _407017_r.get()._field_is_rune)) {
		_407717_d.get()._field_is_rune=true;
	};
	return _407717_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c101e1_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c1a3e9_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2c1b4d8_to_str(_1c2c1b131_TypeKind* _self_) {
	if (_1c2c1c000_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7717_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	};
	if (_1c2c1bc8b_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_1c2c1ac02_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1c2c1a7a1_to_str((*_self_)._field_kind);
	};
	return _7717_kind;
}



inline jule::Bool _1c2c1b7e6_equals(jule::Ptr<_1c2c1b131_TypeKind> _self_, jule::Ptr<_1c2c1b131_TypeKind> _9326_other) {
	if (_1c2c1c000_is_nil(_self_.ptr())) {
		return _1c2c1c000_is_nil(_9326_other.ptr());
	};
	if (_1c2c1bc8b_cpp_linked(_self_.ptr())) {
		return (_1c2c1bc8b_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident));
	};
	return _1c2c1ac02_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1c2c1aaae_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _1c2c1bc8b_cpp_linked(_1c2c1b131_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1c2c1c000_is_nil(_1c2c1b131_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1c2c1c264_void(_1c2c1b131_TypeKind* _self_) {
	jule::Ptr<_1c2c256e0_Prim> _11613_prim = _1c2c2304a_prim(&(*_self_));;
	return ((_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1c2c1c4c8_mutable(_1c2c1b131_TypeKind* _self_) {
	{
		_1c2c1b131_TypeKind* _12321__self = (&((*_self_)));;
		if ((_1c2c24238_strct(_12321__self) != nullptr)) {
			return _1c2c24238_strct(_12321__self).get()._field_mutable;
		};
		if ((_1c2c2449c_trt(_12321__self) != nullptr)) {
			return _1c2c2449c_trt(_12321__self).get()._field_mutable;
		};
		if ((_1c2c2304a_prim(_12321__self) != nullptr)) {
			jule::Ptr<_1c2c256e0_Prim> _13221_p = _1c2c2304a_prim(_12321__self);;
			return _1c2c28913_is_any(_13221_p.ptr());
		};
		if ((_1c2c239eb_arr(_12321__self) != nullptr)) {
			return _1c2c1c4c8_mutable(_1c2c239eb_arr(_12321__self).get()._field_elem.ptr());
		};
		return (((_1c2c23c60_slc(_12321__self) != nullptr) || (_1c2c23523_ptr(_12321__self) != nullptr)) || (_1c2c232ae_sptr(_12321__self) != nullptr));
	};
}



inline jule::Bool _1c2c1c73c_nil_compatible(_1c2c1b131_TypeKind* _self_) {
	{
		_1c2c1b131_TypeKind* _14721__self = (&((*_self_)));;
		jule::Ptr<_1c2c256e0_Prim> _14917_prim = _1c2c2304a_prim(_14721__self);;
		if (((_14917_prim != nullptr) && _1c2c28913_is_any(_14917_prim.ptr()))) {
			return true;
		};
		return ((((((_1c2c1c000_is_nil(_14721__self) || (_1c2c23ec4_fnc(_14721__self) != nullptr)) || (_1c2c232ae_sptr(_14721__self) != nullptr)) || (_1c2c23523_ptr(_14721__self) != nullptr)) || (_1c2c2449c_trt(_14721__self) != nullptr)) || (_1c2c23c60_slc(_14721__self) != nullptr)) || (_1c2c24711_map(_14721__self) != nullptr));
	};
}



inline jule::Bool _1c2c1c9a1_performs_rc(_1c2c1b131_TypeKind* _self_) {
	{
		_1c2c1b131_TypeKind* _16721__self = (&((*_self_)));;
		return (((_1c2c232ae_sptr(_16721__self) != nullptr) || (_1c2c23c60_slc(_16721__self) != nullptr)) || (_1c2c2449c_trt(_16721__self) != nullptr));
	};
}



inline jule::Bool _1c2c1cc15_supports_cloning(_1c2c1b131_TypeKind* _self_) {
	{
		_1c2c1b131_TypeKind* _17521__self = (&((*_self_)));;
		{
			
			if ((_1c2c2304a_prim(_17521__self) != nullptr)) {
				_case_begin_1c5421092:;
				{
					return (!(_1c2c28913_is_any(_1c2c2304a_prim(_17521__self).ptr())));
				}
			}
			else if ((_1c2c23787_enm(_17521__self) != nullptr)) {
				_case_begin_1c5421108:;
				{
					return true;
				}
			}
			else if ((_1c2c23ec4_fnc(_17521__self) != nullptr)) {
				_case_begin_1c5420d0b:;
				{
					return true;
				}
			}
			else if ((_1c2c23523_ptr(_17521__self) != nullptr)) {
				_case_begin_1c5420d72:;
				{
					return true;
				}
			}
			else if ((_1c2c23c60_slc(_17521__self) != nullptr)) {
				_case_begin_1c5420dd8:;
				{
					return _1c2c1cc15_supports_cloning(_1c2c23c60_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c2c24711_map(_17521__self) != nullptr)) {
				_case_begin_1c5420910:;
				{
					jule::Ptr<_1c2c2ac12_Map> _18821_m = _1c2c24711_map(_17521__self);;
					return (_1c2c1cc15_supports_cloning(_18821_m.get()._field_key.ptr()) && _1c2c1cc15_supports_cloning(_18821_m.get()._field_val.ptr()));
				}
			}
			else if ((_1c2c239eb_arr(_17521__self) != nullptr)) {
				_case_begin_1c5420976:;
				{
					return _1c2c1cc15_supports_cloning(_1c2c239eb_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c2c232ae_sptr(_17521__self) != nullptr)) {
				_case_begin_1c54209dc:;
				{
					return _1c2c1cc15_supports_cloning(_1c2c232ae_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c2c24238_strct(_17521__self) != nullptr)) {
				_case_begin_1c5420a64:;
				{
					jule::Ptr<_1c1cb6ad4_StructIns> _19525_s = _1c2c24238_strct(_17521__self);;
					return (((_19525_s.get()._field_decl != nullptr) && (!(_19525_s.get()._field_decl.get()._field_cpp_linked))) && _1c1cb5781_is_derives(_19525_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1c5420899:;
				{
					return false;
				}
			}
			_match_end_1c5420822:;
		};
	};
}



inline jule::Bool _1c2c1ce79_variadicable(_1c2c1b131_TypeKind* _self_) {
	{
		_1c2c1b131_TypeKind* _20821__self = (&((*_self_)));;
		return (_1c2c23c60_slc(_20821__self) != nullptr);
	};
}



inline jule::Ptr<_1c2c256e0_Prim> _1c2c2304a_prim(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c256e0_Prim>>()) {
			_case_begin_1c541e27c:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c256e0_Prim>();
			}
		}
		else {
			_case_begin_1c5426c46:;
			{
				return nullptr;
			}
		}
		_match_end_1c5426be1:;
	};
}



inline jule::Ptr<_1c2c28bee_Sptr> _1c2c232ae_sptr(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c28bee_Sptr>>()) {
			_case_begin_1c5427c14:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c28bee_Sptr>();
			}
		}
		else {
			_case_begin_1c54289d4:;
			{
				return nullptr;
			}
		}
		_match_end_1c542897e:;
	};
}



inline jule::Ptr<_1c2c2c263_Ptr> _1c2c23523_ptr(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c2c263_Ptr>>()) {
			_case_begin_1c5429089:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c2c263_Ptr>();
			}
		}
		else {
			_case_begin_1c54296c7:;
			{
				return nullptr;
			}
		}
		_match_end_1c5429672:;
	};
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2c23787_enm(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2a159ec_Enum>>()) {
			_case_begin_1c542973d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2a159ec_Enum>();
			}
		}
		else {
			_case_begin_1c542a431:;
			{
				return nullptr;
			}
		}
		_match_end_1c542a3cb:;
	};
}



inline jule::Ptr<_1c2c2b806_Arr> _1c2c239eb_arr(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c2b806_Arr>>()) {
			_case_begin_1c542a9d6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c2b806_Arr>();
			}
		}
		else {
			_case_begin_1c542b0d0:;
			{
				return nullptr;
			}
		}
		_match_end_1c542b07a:;
	};
}



inline jule::Ptr<_1c2c2965b_Slc> _1c2c23c60_slc(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c2965b_Slc>>()) {
			_case_begin_1c542b146:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c2965b_Slc>();
			}
		}
		else {
			_case_begin_1c542bd39:;
			{
				return nullptr;
			}
		}
		_match_end_1c542bcd4:;
	};
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c2c23ec4_fnc(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc9762_FnIns>>()) {
			_case_begin_1c542c3de:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c1cc9762_FnIns>();
			}
		}
		else {
			_case_begin_1c542c9d8:;
			{
				return nullptr;
			}
		}
		_match_end_1c542c983:;
	};
}



inline jule::Ptr<_1c1cb6ad4_StructIns> _1c2c24238_strct(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb6ad4_StructIns>>()) {
			_case_begin_1c542ca4e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c1cb6ad4_StructIns>();
			}
		}
		else {
			_case_begin_1c542d742:;
			{
				return nullptr;
			}
		}
		_match_end_1c542d6dc:;
	};
}



inline jule::Ptr<_1c2a137db_Trait> _1c2c2449c_trt(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2a137db_Trait>>()) {
			_case_begin_1c542ddb3:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2a137db_Trait>();
			}
		}
		else {
			_case_begin_1c542e446:;
			{
				return nullptr;
			}
		}
		_match_end_1c542e3e1:;
	};
}



inline jule::Ptr<_1c2c2ac12_Map> _1c2c24711_map(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c2ac12_Map>>()) {
			_case_begin_1c542eab7:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c2ac12_Map>();
			}
		}
		else {
			_case_begin_1c543018e:;
			{
				return nullptr;
			}
		}
		_match_end_1c5430139:;
	};
}



inline jule::Ptr<_1c2c2a151_Tuple> _1c2c24975_tup(_1c2c1b131_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c2a151_Tuple>>()) {
			_case_begin_1c5430810:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c2a151_Tuple>();
			}
		}
		else {
			_case_begin_1c5430dd7:;
			{
				return nullptr;
			}
		}
		_match_end_1c5430d82:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c1b131_TypeKind _Src) {
	_Stream << _1c2c1b4d8_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1c2c25228_checked(_1c2c24d2c_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1c2c25404_remove_kind(_1c2c24d2c_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c24d2c_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2c25a53_to_str(_1c2c256e0_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1c2c25d61_equals(jule::Ptr<_1c2c256e0_Prim> _self_, jule::Ptr<_1c2c1b131_TypeKind> _35126_other) {
	jule::Ptr<_1c2c256e0_Prim> _35213_prim = _1c2c2304a_prim(_35126_other.ptr());;
	if ((_35213_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _35213_prim.get()._field_kind);
}



inline jule::Bool _1c2c262c3_is_i8(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1c2c26537_is_i16(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1c2c2679b_is_i32(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1c2c26a10_is_i64(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1c2c26c74_is_u8(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1c2c26ed8_is_u16(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1c2c2724c_is_u32(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1c2c274b1_is_u64(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1c2c27725_is_f32(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1c2c27989_is_f64(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1c2c27bed_is_int(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1c2c27e62_is_uint(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1c2c281c6_is_uintptr(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1c2c2843a_is_bool(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1c2c2869e_is_str(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1c2c28913_is_any(_1c2c256e0_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c256e0_Prim _Src) {
	_Stream << _1c2c25a53_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2c29062_to_str(_1c2c28bee_Sptr* _self_) {
	return (jule::Str("&", 1) + _1c2c1b4d8_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c2c29370_equals(jule::Ptr<_1c2c28bee_Sptr> _self_, jule::Ptr<_1c2c1b131_TypeKind> _42026_other) {
	jule::Ptr<_1c2c28bee_Sptr> _42113_sptr = _1c2c232ae_sptr(_42026_other.ptr());;
	if ((_42113_sptr == nullptr)) {
		return false;
	};
	return _1c2c1b7e6_equals(_self_.get()._field_elem, _42113_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c28bee_Sptr _Src) {
	_Stream << _1c2c29062_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2c29ace_to_str(_1c2c2965b_Slc* _self_) {
	return (jule::Str("[]", 2) + _1c2c1b4d8_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c2c29ddc_equals(jule::Ptr<_1c2c2965b_Slc> _self_, jule::Ptr<_1c2c1b131_TypeKind> _43926_other) {
	jule::Ptr<_1c2c2965b_Slc> _44013_slc = _1c2c23c60_slc(_43926_other.ptr());;
	if ((_44013_slc == nullptr)) {
		return false;
	};
	return _1c2c1b7e6_equals(_self_.get()._field_elem, _44013_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c2965b_Slc _Src) {
	_Stream << _1c2c29ace_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2c2a54c_to_str(_1c2c2a151_Tuple* _self_) {
	jule::Str _45617_s = jule::Str("(", 1);;
	_45617_s+=_1c2c1b4d8_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c5442778:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1b131_TypeKind> &_45816_t = *it;
			{
				_45617_s+=jule::Str(",", 1);
				_45617_s+=_1c2c1b4d8_to_str(_45816_t.ptr());
			}
			_iter_next_1c5442778:;
			++it;
			goto _iter_begin_1c5442778;
		}
		_iter_end_1c5442778:;
	};
	_45617_s+=jule::Str(")", 1);
	return _45617_s;
}



inline jule::Bool _1c2c2a85a_equals(jule::Ptr<_1c2c2a151_Tuple> _self_, jule::Ptr<_1c2c1b131_TypeKind> _46726_other) {
	jule::Ptr<_1c2c2a151_Tuple> _46813_tup = _1c2c24975_tup(_46726_other.ptr());;
	if ((_46813_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _46813_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _47717_i = 0LL;;
	for (; (_47717_i < _self_.get()._field_types.len()); (_47717_i)++) {
		{
			if ((!(_1c2c1b7e6_equals(_self_.get()._field_types[_47717_i], _46813_tup.get()._field_types[_47717_i])))) {
				return false;
			};
		}
	_iter_next_1c54453e6:;
	}
	_iter_end_1c54453e6:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c2a151_Tuple _Src) {
	_Stream << _1c2c2a54c_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2c2b075_to_str(_1c2c2ac12_Map* _self_) {
	jule::Str _49717_s = jule::Str("[", 1);;
	_49717_s+=_1c2c1b4d8_to_str((*_self_)._field_key.ptr());
	_49717_s+=jule::Str(":", 1);
	_49717_s+=_1c2c1b4d8_to_str((*_self_)._field_val.ptr());
	_49717_s+=jule::Str("]", 1);
	return _49717_s;
}



inline jule::Bool _1c2c2b383_equals(jule::Ptr<_1c2c2ac12_Map> _self_, jule::Ptr<_1c2c1b131_TypeKind> _50626_other) {
	jule::Ptr<_1c2c2ac12_Map> _50713_map = _1c2c24711_map(_50626_other.ptr());;
	if ((_50713_map == nullptr)) {
		return false;
	};
	return (_1c2c1b7e6_equals(_self_.get()._field_key, _50713_map.get()._field_key) && _1c2c1b7e6_equals(_self_.get()._field_val, _50713_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c2ac12_Map _Src) {
	_Stream << _1c2c2b075_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2c2bb69_to_str(_1c2c2b806_Arr* _self_) {
	jule::Str _52517_s = jule::Str("[", 1);;
	_52517_s+=_1c2a124aa_itoa((*_self_)._field_n);
	_52517_s+=jule::Str("]", 1);
	_52517_s+=_1c2c1b4d8_to_str((*_self_)._field_elem.ptr());
	return _52517_s;
}



inline jule::Bool _1c2c2be77_equals(jule::Ptr<_1c2c2b806_Arr> _self_, jule::Ptr<_1c2c1b131_TypeKind> _53326_other) {
	jule::Ptr<_1c2c2b806_Arr> _53413_arr = _1c2c239eb_arr(_53326_other.ptr());;
	if ((_53413_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _53413_arr.get()._field_n) && _1c2c1b7e6_equals(_self_.get()._field_elem, _53413_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c2b806_Arr _Src) {
	_Stream << _1c2c2bb69_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2c2c5c6_to_str(_1c2c2c263_Ptr* _self_) {
	if (_1c2c2cc36_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1c2c1b4d8_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c2c2c8d4_equals(jule::Ptr<_1c2c2c263_Ptr> _self_, jule::Ptr<_1c2c1b131_TypeKind> _55726_other) {
	jule::Ptr<_1c2c2c263_Ptr> _55813_ptr = _1c2c23523_ptr(_55726_other.ptr());;
	if ((_55813_ptr == nullptr)) {
		return false;
	};
	return _1c2c1b7e6_equals(_self_.get()._field_elem, _55813_ptr.get()._field_elem);
}



inline jule::Bool _1c2c2cc36_is_unsafe(_1c2c2c263_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c2c263_Ptr _Src) {
	_Stream << _1c2c2c5c6_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c2e908_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c2c30c4a_push_err(_1c2c30585_TypeChecker* _self_, jule::Ptr<_205139176_Token> _71927_token, jule::Str _71942_fmt, jule::Slice<jule::Any> _71955_args) {
	_1c2b82905_push_err((*_self_)._field_s.ptr(), _71927_token,_71942_fmt,jule::Any(_71955_args));
}



inline void _1c2c30e26_allow_builtin(_1c2c30585_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1c2c31102_disallow_builtin(_1c2c30585_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1c2c256e0_Prim> _1c2c31410_build_prim(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _73130_decl) {
	if ((!(_1c2c2e540_is_prim(_73130_decl.get()._field_ident)))) {
		_1c2c30c4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_73130_decl.get()._field_generics.len() > 0LL)) {
		_1c2c30c4a_push_err(&(*_self_), _73130_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_73130_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1c2c2de68_build_prim_type(_73130_decl.get()._field_ident);
}



inline void _1c2c317c8_push_cycle_error(_1c2c30585_TypeChecker* _self_, jule::Any _74531_def1, jule::Any _74542_def2, jule::Str& _74558_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _74813_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _74829_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _74829_def };
			
			if (_match_expr.type_is<jule::Ptr<_1c2c1a3e9_TypeAlias>>()) {
				_case_begin_1c5457b01:;
				{
					return _74829_def.operator jule::Ptr<_1c2c1a3e9_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
				_case_begin_1c5458272:;
				{
					return _74829_def.operator jule::Ptr<_1c1cb3e55_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2a159ec_Enum>>()) {
				_case_begin_1c5458184:;
				{
					return _74829_def.operator jule::Ptr<_1c2a159ec_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1c5457c66:;
				{
					return jule::Str();
				}
			}
			_match_end_1c5457c11:;
		};
	});;
	jule::Str _76113_def1_ident = _74813_get_ident(_74531_def1);;
	jule::Str _76213_def2_ident = _74813_get_ident(_74542_def2);;
	jule::Str _76313_refers_to = _2046db6b3_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_76113_def1_ident),jule::Any(_76213_def2_ident)}));;
	(_74558_message).buffer.insert(0, (((_204c21b2c_repeat(jule::Str(" ", 1),4LL) + _76313_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c2c31b80_check_cross_cycle(_1c2c30585_TypeChecker* _self_, jule::Any _76732_decl, jule::Str& _76748_message) {
	{
		auto &_match_expr{ _76732_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c1a3e9_TypeAlias>>()) {
			_case_begin_1c545b2db:;
			{
				jule::Ptr<_1c2c1a3e9_TypeAlias> _77017_ta = _76732_decl.operator jule::Ptr<_1c2c1a3e9_TypeAlias>();;
				{
					auto &expr = _77017_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1c545c023:;
					if (it != expr.end()) {
						jule::Any &_77120_d = *it;
						{
							{
								
								if ((_77120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1c545c72c:;
									{
										_1c2c317c8_push_cycle_error(&(*_self_), jule::Any(_77017_ta),jule::Any(_77120_d),_76748_message);
										return false;
									}
								}
								else if ((!(_1c2c31b80_check_cross_cycle(&(*_self_), jule::Any(_77120_d),_76748_message)))) {
									_case_begin_1c545c7a4:;
									{
										_1c2c317c8_push_cycle_error(&(*_self_), jule::Any(_77017_ta),jule::Any(_77120_d),_76748_message);
										return false;
									}
								}
								_match_end_1c545c61c:;
							};
						}
						_iter_next_1c545c023:;
						++it;
						goto _iter_begin_1c545c023;
					}
					_iter_end_1c545c023:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c545b352:;
			{
				jule::Ptr<_1c1cb3e55_Struct> _78217_s = _76732_decl.operator jule::Ptr<_1c1cb3e55_Struct>();;
				{
					auto &expr = _78217_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1c545c331:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cb3e55_Struct> &_78320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _78320_d)) {
									_case_begin_1c545ee27:;
									{
										_1c2c317c8_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_78320_d),_76748_message);
										return false;
									}
								}
								else if ((!(_1c2c31b80_check_cross_cycle(&(*_self_), jule::Any(_78320_d),_76748_message)))) {
									_case_begin_1c545ee9e:;
									{
										_1c2c317c8_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_78320_d),_76748_message);
										return false;
									}
								}
								_match_end_1c545ed17:;
							};
						}
						_iter_next_1c545c331:;
						++it;
						goto _iter_begin_1c545c331;
					}
					_iter_end_1c545c331:;
				};
			}
		}
		_match_end_1c545b1dc:;
	};
	return true;
}



inline jule::Bool _1c2c32037_check_illegal_cycles(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _80140_ident, jule::Any _80167_decl) {
	jule::Bool _80180_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_80180_ok = true;
		return _80180_ok;
	};
	{
		auto &_match_expr{ _80167_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c546714e:;
			{
				if (((*_self_)._field_not_plain || _80167_decl.operator jule::Ptr<_1c1cb3e55_Struct>().get()._field_cpp_linked)) {
					_80180_ok = true;
					return _80180_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c1a3e9_TypeAlias>>()) {
			_case_begin_1c54671b5:;
			{
				if (_80167_decl.operator jule::Ptr<_1c2c1a3e9_TypeAlias>().get()._field_cpp_linked) {
					_80180_ok = true;
					return _80180_ok;
				};
			}
		}
		_match_end_1c5466ec8:;
	};
	if ((_80167_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1c2c30c4a_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_80180_ok = false;
		return _80180_ok;
	};
	jule::Str _82417_message = jule::Str();;
	if ((!(_1c2c31b80_check_cross_cycle(&(*_self_), jule::Any(_80167_decl),_82417_message)))) {
		jule::Str _82721_err_msg = _82417_message;;
		_82417_message=jule::Str();
		_1c2c317c8_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_80167_decl),_82417_message);
		_82721_err_msg=(_82721_err_msg + _82417_message);
		_1c2c30c4a_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_82721_err_msg)}));
		_80180_ok = false;
		return _80180_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c1a3e9_TypeAlias>>()) {
			_case_begin_1c546ba38:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_80167_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c546ba9e:;
			{
				{
					auto &_match_expr{ _80167_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
						_case_begin_1c546c3c9:;
						{
							jule::Ptr<_1c1cb3e55_Struct> _84325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1c1cb3e55_Struct>();;
							_84325_s.get()._field_depends = jule::alloc_for_append(_84325_s.get()._field_depends,1);_84325_s.get()._field_depends.__push(_80167_decl.operator jule::Ptr<_1c1cb3e55_Struct>());;
						}
					}
					_match_end_1c546c374:;
				};
			}
		}
		_match_end_1c546bbc0:;
	};
	_80180_ok = true;
	return _80180_ok;
}



inline jule::Trait<_1c2c1ac02_Kind> _1c2c323de_from_type_alias(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _85135_decl, jule::Ptr<_1c2c1a3e9_TypeAlias>& _85162_ta) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _85162_ta.get()._field_public,_85162_ta.get()._field_token)))) {
		_1c2c30c4a_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	};
	_85162_ta.get()._field_used=true;
	if ((_85135_decl.get()._field_generics.len() > 0LL)) {
		_1c2c30c4a_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1c5472588:;
			if (it != expr.end()) {
				jule::Ptr<_1c2c1a3e9_TypeAlias> _86820_bg = *it;
				{
					if (((_86820_bg == _85162_ta) || ((_85162_ta.get()._field_kind.get()._field_kind != nullptr) && _1c2c1b7e6_equals(_85162_ta.get()._field_kind.get()._field_kind, _86820_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1c5472588;
					};
				}
				_iter_next_1c5472588:;
				++it;
				goto _iter_begin_1c5472588;
			}
			_iter_end_1c5472588:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1c5474359:;
			if (it != expr.end()) {
				jule::Ptr<_1c2c1a3e9_TypeAlias> _87920_bg = *it;
				{
					if ((_87920_bg == _85162_ta)) {
						_1c2c30c4a_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_85135_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _85162_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1c54749ca:;
						if (it != expr.end()) {
							jule::Ptr<_1c2c1a3e9_TypeAlias> _88424_dg = *it;
							{
								if ((_87920_bg == _88424_dg)) {
									_1c2c30c4a_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_85135_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1c54749ca:;
							++it;
							goto _iter_begin_1c54749ca;
						}
						_iter_end_1c54749ca:;
					};
				}
				_iter_next_1c5474359:;
				++it;
				goto _iter_begin_1c5474359;
			}
			_iter_end_1c5474359:;
		};
	};
	jule::Bool _89317_ok = _1c2c32037_check_illegal_cycles(&(*_self_), _85135_decl,jule::Any(_85162_ta));;
	if ((!(_89317_ok))) {
		return nullptr;
	};
	_89317_ok=_1c2b89d19_check_type_alias_decl_kind((*_self_)._field_s, _85162_ta,(*_self_)._field_lookup);
	if ((!(_89317_ok))) {
		return nullptr;
	};
	if ((_85162_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_85162_ta);;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _91017_tk = jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_generic=_85162_ta.get()._field_generic, ._field_kind=_85162_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	if (_85162_ta.get()._field_cpp_linked) {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_ident;
	} else {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1c2c1ac02_Kind>(_91017_tk, 4);
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2c32796_from_enum(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _92229_decl, jule::Ptr<_1c2a159ec_Enum>& _92256_e) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _92256_e.get()._field_public,_92256_e.get()._field_token)))) {
		_1c2c30c4a_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_92229_decl.get()._field_generics.len() > 0LL)) {
		_1c2c30c4a_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	};
	return _92256_e;
}



inline jule::Ptr<_1c2a137db_Trait> _1c2c32b4d_from_trait(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _93430_decl, jule::Ptr<_1c2a137db_Trait>& _93457_t) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _93457_t.get()._field_public,_93457_t.get()._field_token)))) {
		_1c2c30c4a_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_93430_decl.get()._field_generics.len() > 0LL)) {
		_1c2c30c4a_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	};
	return _93457_t;
}



inline jule::Bool _1c2c33005_check_struct_ins(_1c2c30585_TypeChecker* _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _94640_ins, jule::Ptr<_205139176_Token>& _94658_error_token) {
	jule::Bool _94681_ok = jule::Bool();
	if (_94640_ins.get()._field_checked) {
		_94681_ok = true;
		return _94681_ok;
	};
	_94640_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _94640_ins.get()._field_decl))) {
		_94681_ok = true;
		return _94681_ok;
	};
	jule::Ptr<_1c2bdbbe5_SymbolTable> _95717_old_file = (*_self_)._field_s.get()._field_file;;
	__JULE_DEFER({
		_1c2b8253c_set_current_file((*_self_)._field_s.ptr(), _95717_old_file);
	});;
	jule::Ptr<_1c2bdbbe5_SymbolTable> _96017_file = _1c2b7e66b_find_file((*_self_)._field_s.get()._field_files,_94640_ins.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_96017_file != nullptr)) {
		_1c2b8253c_set_current_file((*_self_)._field_s.ptr(), _96017_file);
	};
	jule::Ptr<_1c2c2e908_Referencer> _96517_referencer = jule::new_ptr<_1c2c2e908_Referencer>(_1c2c2e908_Referencer{._field_ident=_94640_ins.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_94640_ins.get()._field_decl)});;
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _97017_generics = jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>::alloc(0LL,_94640_ins.get()._field_generics.len());;
	{
		auto &expr = _94640_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c5484c3d:;
		if (it != expr.end()) {
			jule::I64 _97114_i = it - expr.begin();
			jule::Ptr<_1c2c1b131_TypeKind> _97121_g = *it;
			{
				_97017_generics = jule::alloc_for_append(_97017_generics,1);_97017_generics.__push(jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_ident=_94640_ins.get()._field_decl.get()._field_generics[_97114_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_97121_g})}));;
			}
			_iter_next_1c5484c3d:;
			++it;
			_97114_i++;
			goto _iter_begin_1c5484c3d;
		}
		_iter_end_1c5484c3d:;
	};
	jule::Ptr<_1c2bdbbe5_SymbolTable> _98017_old_sema_file = _94640_ins.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c2b8253c_set_current_file(_94640_ins.get()._field_decl.get()._field_sema.ptr(), _98017_old_sema_file);
	});;
	_1c2c30585_TypeChecker _98517_tc = _1c2c30585_TypeChecker{._field_s=_94640_ins.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1c2c3934c_Lookup>(_94640_ins.get()._field_decl.get()._field_sema, 3), ._field_referencer=_96517_referencer, ._field_use_generics=_97017_generics};;
	{
		auto &expr = _94640_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1c54872e5:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6276_FieldIns> _99321_field = *it;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _99421_kind = _1c2c36b96_check_decl(&_98517_tc, _99321_field.get()._field_decl.get()._field_kind.get()._field_decl);;
				_94681_ok=(_99421_kind != nullptr);
				if ((((_94640_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _94640_ins.get()._field_decl.get()._field_sema)) && (_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				};
				if (_94681_ok) {
					_99321_field.get()._field_kind=_99421_kind;
					_94640_ins.get()._field_mutable=(_94640_ins.get()._field_mutable || ((!(_99321_field.get()._field_decl.get()._field_mutable)) && _1c2c1c4c8_mutable(_99321_field.get()._field_kind.ptr())));
					_1c2b920eb_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _94640_ins);
				};
			}
			_iter_next_1c54872e5:;
			++it;
			goto _iter_begin_1c54872e5;
		}
		_iter_end_1c54872e5:;
	};
	if ((_94640_ins.get()._field_generics.len() > 0LL)) {
		_1c2b94e56_check_struct_ins_operators((*_self_)._field_s, _94640_ins);
		_1c2b9475d_check_struct_ins((*_self_)._field_s, _94640_ins);
	};
	_94681_ok = true;
	return _94681_ok;
}



inline void _1c2c3329c_append_used_struct_reference(_1c2c30585_TypeChecker* _self_, jule::Ptr<_1c1cb3e55_Struct>& _101652_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c548d098:;
			{
				jule::Ptr<_1c1cb3e55_Struct> _102321_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1c1cb3e55_Struct>();;
				if ((!(_1c1cb5a8e_is_uses(_102321_ref_s.ptr(), _101652_s)))) {
					_102321_ref_s.get()._field_uses = jule::alloc_for_append(_102321_ref_s.get()._field_uses,1);_102321_ref_s.get()._field_uses.__push(_101652_s);;
				};
			}
		}
		_match_end_1c548cb69:;
	};
}



inline jule::Ptr<_1c1cb6ad4_StructIns> _1c2c33665_build_struct_instance(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _103045_decl, jule::Ptr<_1c1cb3e55_Struct>& _103072_s) {
	jule::Ptr<_1c2c2e908_Referencer> _103217_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>> _103417_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1c2b6197d_ScopeChecker>>()) {
				_case_begin_1c5491189:;
				{
					jule::Ptr<_1c2b6197d_ScopeChecker> _104125_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c2b6197d_ScopeChecker>();;
					jule::Ptr<_1c2b6197d_ScopeChecker> _104225_hard = _1c2b63b4a_get_hard_root(_104125_sc);;
					if (((_104225_hard.get()._field_owner.get()._field_owner == nullptr) || (_104225_hard.get()._field_owner.get()._field_owner.get()._field_decl != _103072_s))) {
						goto _match_end_1c5491134;
					};
					jule::I64 _104621_n = (_104225_hard.get()._field_owner.get()._field_generics.len() + _104225_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_104225_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_104621_n);
				}
			}
			_match_end_1c5491134:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _105617_ins = _1c1cb4384_instance(_103072_s);;
	_105617_ins.get()._field_generics=jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>::alloc(0LL,_103045_decl.get()._field_generics.len());
	{
		auto &expr = _103045_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c549480d:;
		if (it != expr.end()) {
			jule::Ptr<_204ec8b92_TypeDecl> _105821_g = *it;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _105921_kind = _1c2c36888_build(&(*_self_), _105821_g.get()._field_kind);;
				if ((_105921_kind == nullptr)) {
					return nullptr;
				};
				_105617_ins.get()._field_generics = jule::alloc_for_append(_105617_ins.get()._field_generics,1);_105617_ins.get()._field_generics.__push(_105921_kind);;
			}
			_iter_next_1c549480d:;
			++it;
			goto _iter_begin_1c549480d;
		}
		_iter_end_1c549480d:;
	};
	(*_self_)._field_banned_generics=_103417_banned_generics;
	(*_self_)._field_referencer=_103217_referencer;
	return _105617_ins;
}



inline jule::Ptr<_1c1cb6ad4_StructIns> _1c2c33a1c_from_struct(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _107335_decl, jule::Ptr<_1c1cb3e55_Struct>& _107362_s) {
	if ((!(_1c2b830cb_is_accessible_define((*_self_)._field_s.ptr(), _107362_s.get()._field_public,_107362_s.get()._field_token)))) {
		_1c2c30c4a_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_107335_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_107335_decl.get()._field_generics.len() > 0LL)) {
			_1c2c30c4a_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1c1cb6ad4_StructIns>(_1c1cb6ad4_StructIns{._field_decl=_107362_s});
	};
	if (((_107362_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL))) {
		return nullptr;
	};
	jule::Bool _109617_ok = ((*_self_)._field_not_plain || _1c2c32037_check_illegal_cycles(&(*_self_), _107335_decl,jule::Any(_107362_s)));;
	if ((!(_109617_ok))) {
		return nullptr;
	};
	_1c2c3329c_append_used_struct_reference(&(*_self_), _107362_s);
	jule::Ptr<_1c1cb6ad4_StructIns> _110217_ins = _1c2c33665_build_struct_instance(&(*_self_), _107335_decl,_107362_s);;
	if ((_110217_ins == nullptr)) {
		return nullptr;
	};
	_109617_ok=_1c2b83c9c_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_110217_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_110217_ins.get()._field_generics.len()),_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _111217_exist_instance = _1c1cb4692_append_instance(_107362_s.ptr(), _110217_ins);;
	if ((_111217_exist_instance != nullptr)) {
		return _111217_exist_instance;
	};
	_109617_ok=_1c2c33005_check_struct_ins(&(*_self_), _110217_ins,_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	};
	return _110217_ins;
}



inline jule::Trait<_1c2c1ac02_Kind> _1c2c33dc4_get_def(_1c2c30585_TypeChecker* _self_, jule::Trait<_1c2c3934c_Lookup> _113426_l, jule::Ptr<_204ec8d7e_IdentTypeDecl>& _113442_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1c549ec9c:;
		if (it != expr.end()) {
			jule::Ptr<_20514e235_GenericDecl> _113516_g = *it;
			{
				if ((_113516_g.get()._field_ident == _113442_decl.get()._field_ident)) {
					return jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(_113516_g.get()._field_ident), 5);
				};
			}
			_iter_next_1c549ec9c:;
			++it;
			goto _iter_begin_1c549ec9c;
		}
		_iter_end_1c549ec9c:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1c54a07a3:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1a3e9_TypeAlias> _114121_g = *it;
			{
				if ((_114121_g.get()._field_ident == _113442_decl.get()._field_ident)) {
					jule::Ptr<_1c1cb6ad4_StructIns> _114325_st = _1c2c24238_strct(_114121_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_114325_st != nullptr)) {
						jule::Bool _114525_ok = _1c2c32037_check_illegal_cycles(&(*_self_), _113442_decl,jule::Any(_114325_st.get()._field_decl));;
						if ((!(_114525_ok))) {
							return nullptr;
						};
					};
					return _114121_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1c54a07a3:;
			++it;
			goto _iter_begin_1c54a07a3;
		}
		_iter_end_1c54a07a3:;
	};
	if ((!(_113442_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1c2a159ec_Enum> _115521_e = _1c2c3934c_Lookup_mptr_data[(_113426_l).type_offset]._1c2c39209_find_enum(_113426_l, _113442_decl.get()._field_ident);;
		if ((_115521_e != nullptr)) {
			return jule::Trait<_1c2c1ac02_Kind>(_1c2c32796_from_enum(&(*_self_), _113442_decl,_115521_e), 3);
		};
		jule::Ptr<_1c2a137db_Trait> _116021_t = _1c2c3934c_Lookup_mptr_data[(_113426_l).type_offset]._1c2c38deb_find_trait(_113426_l, _113442_decl.get()._field_ident);;
		if (((_116021_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_116021_t=_1c2c46623_find_builtin_trait(_113442_decl.get()._field_ident);
		};
		if ((_116021_t != nullptr)) {
			return jule::Trait<_1c2c1ac02_Kind>(_1c2c32b4d_from_trait(&(*_self_), _113442_decl,_116021_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1c2c30c4a_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c1cb3e55_Struct> _117217_s = _1c2c3934c_Lookup_mptr_data[(_113426_l).type_offset]._1c2c38736_find_struct(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);;
	if ((_117217_s != nullptr)) {
		return jule::Trait<_1c2c1ac02_Kind>(_1c2c33a1c_from_struct(&(*_self_), _113442_decl,_117217_s), 0);
	};
	jule::Ptr<_1c2c1a3e9_TypeAlias> _117717_ta = _1c2c3934c_Lookup_mptr_data[(_113426_l).type_offset]._1c2c3837e_find_type_alias(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);;
	if (((_117717_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_117717_ta=_1c2c452d1_find_builtin_type_alias(_113442_decl.get()._field_ident);
	};
	if ((_117717_ta != nullptr)) {
		return _1c2c323de_from_type_alias(&(*_self_), _113442_decl,_117717_ta);
	};
	_1c2c30c4a_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_113442_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1c2c1ac02_Kind> _1c2c341d2_build_ident(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8d7e_IdentTypeDecl> _118934_decl) {
	{
		
		if (_1c2c2e540_is_prim(_118934_decl.get()._field_ident)) {
			_case_begin_1c54aa23b:;
			{
				return jule::Trait<_1c2c1ac02_Kind>(_1c2c31410_build_prim(&(*_self_), _118934_decl), 5);
			}
		}
		else {
			_case_begin_1c54a98cd:;
			{
				return _1c2c33dc4_get_def(&(*_self_), (*_self_)._field_lookup,_118934_decl);
			}
		}
		_match_end_1c54a9812:;
	};
}



inline jule::Ptr<_1c2c28bee_Sptr> _1c2c344e0_build_sptr_from_type(_1c2c30585_TypeChecker* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _119844_elem) {
	{
		
		if ((_119844_elem == nullptr)) {
			_case_begin_1c54aa967:;
			{
				return nullptr;
			}
		}
		else if ((_1c2c24238_strct(_119844_elem.ptr()) != nullptr)) {
			_case_begin_1c54ab03e:;
			{
				jule::Ptr<_1c1cb6ad4_StructIns> _120417_s = _1c2c24238_strct(_119844_elem.ptr());;
				if (((_120417_s.get()._field_decl != nullptr) && _120417_s.get()._field_decl.get()._field_cpp_linked)) {
					_1c2c30c4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1c2c239eb_arr(_119844_elem.ptr()) != nullptr) && _1c2c239eb_arr(_119844_elem.ptr()).get()._field_auto)) {
			_case_begin_1c54ab0a5:;
			{
				_1c2c30c4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c54aa857:;
	};
	return jule::new_ptr<_1c2c28bee_Sptr>(_1c2c28bee_Sptr{._field_elem=_119844_elem});
}



inline jule::Ptr<_1c2c28bee_Sptr> _1c2c347ed_build_sptr(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec9258_SptrTypeDecl> _121833_decl) {
	jule::Bool _121913_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121913_not_plain;
	});;
	jule::Ptr<_1c2c1b131_TypeKind> _122317_elem = _1c2c36b96_check_decl(&(*_self_), _121833_decl.get()._field_elem);;
	return _1c2c344e0_build_sptr_from_type(&(*_self_), _122317_elem);
}



inline jule::Ptr<_1c2c2c263_Ptr> _1c2c34b0b_build_ptr_from_type(_1c2c30585_TypeChecker* _self_, jule::Ptr<_1c2c1b131_TypeKind>& _122743_elem) {
	{
		
		if ((_122743_elem == nullptr)) {
			_case_begin_1c54b142e:;
			{
				return nullptr;
			}
		}
		else if (((_1c2c239eb_arr(_122743_elem.ptr()) != nullptr) && _1c2c239eb_arr(_122743_elem.ptr()).get()._field_auto)) {
			_case_begin_1c54b14a6:;
			{
				_1c2c30c4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1c2c2c263_Ptr>();
			}
		}
		_match_end_1c54b131e:;
	};
	return jule::new_ptr<_1c2c2c263_Ptr>(_1c2c2c263_Ptr{._field_elem=_122743_elem});
}



inline jule::Ptr<_1c2c2c263_Ptr> _1c2c34e19_build_ptr(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec981e_PtrTypeDecl> _124232_decl) {
	jule::Bool _124313_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_124313_not_plain;
	});;
	jule::Ptr<_1c2c1b131_TypeKind> _124717_elem = nullptr;;
	if ((!(_204ee278d_is_unsafe(_124232_decl.ptr())))) {
		_124717_elem=_1c2c36b96_check_decl(&(*_self_), _124232_decl.get()._field_elem);
		return _1c2c34b0b_build_ptr_from_type(&(*_self_), _124717_elem);
	};
	return jule::new_ptr<_1c2c2c263_Ptr>(_1c2c2c263_Ptr{._field_elem=_124717_elem});
}



inline jule::Ptr<_1c2c2965b_Slc> _1c2c35227_build_slc(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec9445_SlcTypeDecl> _125932_decl) {
	jule::Bool _126013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126013_not_plain;
	});;
	jule::Ptr<_1c2c1b131_TypeKind> _126417_elem = _1c2c36b96_check_decl(&(*_self_), _125932_decl.get()._field_elem);;
	{
		
		if ((_126417_elem == nullptr)) {
			_case_begin_1c54b6e4b:;
			{
				return nullptr;
			}
		}
		else if (((_1c2c239eb_arr(_126417_elem.ptr()) != nullptr) && _1c2c239eb_arr(_126417_elem.ptr()).get()._field_auto)) {
			_case_begin_1c54b6ec3:;
			{
				_1c2c30c4a_push_err(&(*_self_), _125932_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c54b6d80:;
	};
	return jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=_126417_elem});
}



inline jule::Ptr<_1c2c2b806_Arr> _1c2c35535_build_arr(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec9a0b_ArrTypeDecl> _128032_decl) {
	jule::Bool _128113_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128113_not_plain;
	});;
	jule::I64 _128517_n = 0LL;;
	if ((!(_204ee3030_auto_sized(_128032_decl.ptr())))) {
		jule::Ptr<_1c2be1ca5_Data> _128821_size = _1c2c0ced0_eval_expr(_1c2b87663_eval((*_self_)._field_s, (*_self_)._field_lookup), _128032_decl.get()._field_size);;
		if ((_128821_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1c2be2668_is_const(_128821_size.ptr())))) {
			_1c2c30c4a_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1c2c2304a_prim(_128821_size.get()._field_kind.ptr()) == nullptr) || (!(_1c2b5e4d6_is_int(_1c2c2304a_prim(_128821_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c2c30c4a_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_128517_n=static_cast<jule::I64>(static_cast<jule::I64>(_1c2abd940_as_i64(_128821_size.get()._field_constant.ptr())));
		if ((_128517_n < 0LL)) {
			_1c2c30c4a_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1c2b53ed1_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_128517_n) > _1c2b5903b_max(jule::Str("int", 3))))) {
			_1c2c30c4a_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1c2c1b131_TypeKind> _131117_elem = _1c2c36b96_check_decl(&(*_self_), _128032_decl.get()._field_elem);;
	{
		
		if ((_131117_elem == nullptr)) {
			_case_begin_1c54c1153:;
			{
				return nullptr;
			}
		}
		else if (((_1c2c239eb_arr(_131117_elem.ptr()) != nullptr) && _1c2c239eb_arr(_131117_elem.ptr()).get()._field_auto)) {
			_case_begin_1c54c11b9:;
			{
				_1c2c30c4a_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c54c0e77:;
	};
	return jule::new_ptr<_1c2c2b806_Arr>(_1c2c2b806_Arr{._field_auto=_204ee3030_auto_sized(_128032_decl.ptr()), ._field_n=_128517_n, ._field_elem=_131117_elem});
}



inline jule::Ptr<_1c2c2ac12_Map> _1c2c35843_build_map(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec9be8_MapTypeDecl> _132932_decl) {
	jule::Bool _133013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_133013_not_plain;
	});;
	jule::Ptr<_1c2c1b131_TypeKind> _133417_key = _1c2c36b96_check_decl(&(*_self_), _132932_decl.get()._field_key);;
	if ((_133417_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _133917_val = _1c2c36b96_check_decl(&(*_self_), _132932_decl.get()._field_val);;
	if ((_133917_val == nullptr)) {
		return nullptr;
	};
	if ((_1c2c23787_enm(_133917_val.ptr()) != nullptr)) {
		_1c2c30c4a_push_err(&(*_self_), _132932_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c2c2ac12_Map>(_1c2c2ac12_Map{._field_key=_133417_key, ._field_val=_133917_val});
}



inline jule::Ptr<_1c2c2a151_Tuple> _1c2c35b51_build_tuple(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec9632_TupleTypeDecl> _135334_decl) {
	jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _135417_types = jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>>::alloc(0LL,_135334_decl.get()._field_types.len());;
	{
		auto &expr = _135334_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1c54c72e1:;
		if (it != expr.end()) {
			jule::Ptr<_204ec8b92_TypeDecl> _135521_t = *it;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _135621_kind = _1c2c36b96_check_decl(&(*_self_), _135521_t);;
				if ((_135621_kind == nullptr)) {
					return nullptr;
				};
				_135417_types = jule::alloc_for_append(_135417_types,1);_135417_types.__push(_135621_kind);;
			}
			_iter_next_1c54c72e1:;
			++it;
			goto _iter_begin_1c54c72e1;
		}
		_iter_end_1c54c72e1:;
	};
	return jule::new_ptr<_1c2c2a151_Tuple>(_1c2c2a151_Tuple{._field_types=_135417_types});
}



inline jule::Bool _1c2c35e5e_check_fn_types(_1c2c30585_TypeChecker* _self_, jule::Ptr<_1c1cc9762_FnIns>& _136638_f) {
	jule::Bool _136651_ok = jule::Bool();
	{
		auto &expr = _136638_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c54c948b:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc88c6_ParamIns> _136721_p = *it;
			{
				_136721_p.get()._field_kind=_1c2c36888_build(&(*_self_), _136721_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_136651_ok=(_136721_p.get()._field_kind != nullptr);
				if ((!(_136651_ok))) {
					_136651_ok = false;
					return _136651_ok;
				};
			}
			_iter_next_1c54c948b:;
			++it;
			goto _iter_begin_1c54c948b;
		}
		_iter_end_1c54c948b:;
	};
	if ((!(_1c1cc6a17_is_void(_136638_f.get()._field_decl.ptr())))) {
		_136638_f.get()._field_result=_1c2c36888_build(&(*_self_), _136638_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_136651_ok = (_136638_f.get()._field_result != nullptr);
		return _136651_ok;
	};
	_136651_ok = true;
	return _136651_ok;
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c2c3626c_build_fn(_1c2c30585_TypeChecker* _self_, jule::Ptr<_20515028b_FnDecl> _138331_decl) {
	if ((_138331_decl.get()._field_generics.len() > 0LL)) {
		_1c2c30c4a_push_err(&(*_self_), _138331_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c1cc65b6_Fn> _138917_f = _1c1cd09aa_build_fn(_138331_decl);;
	jule::Ptr<_1c1cc9762_FnIns> _139017_ins = _1c1cc7e9c_instance_force(_138917_f);;
	_139017_ins.get()._field_anon=true;
	jule::Bool _139313_ok = _1c2c35e5e_check_fn_types(&(*_self_), _139017_ins);;
	if ((!(_139313_ok))) {
		return nullptr;
	};
	return _139017_ins;
}



inline jule::Trait<_1c2c1ac02_Kind> _1c2c3657a_build_by_namespace(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec906b_NamespaceTypeDecl> _140141_decl) {
	jule::Str _140213_path = _1c2c2dbb0_build_link_path_by_tokens(_140141_decl.get()._field_idents);;
	jule::Ptr<_1c2b77301_ImportInfo> _140317_imp = _1c2c3934c_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2c37b20_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c2b77301_ImportInfo>)>([=](jule::Ptr<_1c2b77301_ImportInfo> _140353_imp) mutable -> jule::Bool {
		if (((_140141_decl.get()._field_idents.len() == 1LL) && (_140353_imp.get()._field_alias == _140213_path))) {
			return true;
		};
		return ((_140353_imp.get()._field_link_path == _140213_path) && _1c2b79bb6_is_accessible_via_selection(_140353_imp.ptr()));
	}));;
	if (((_140317_imp == nullptr) || (!(_1c2b79622_is_lookupable(_140317_imp.ptr(), jule::Str("self", 4)))))) {
		_1c2c30c4a_push_err(&(*_self_), _140141_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_140213_path)}));
		return nullptr;
	};
	_1c2c31102_disallow_builtin(&(*_self_));
	jule::Trait<_1c2c1ac02_Kind> _141617_kind = _1c2c33dc4_get_def(&(*_self_), jule::Trait<_1c2c3934c_Lookup>(_140317_imp, 1),_140141_decl.get()._field_kind);;
	_1c2c30e26_allow_builtin(&(*_self_));
	return _141617_kind;
}



inline jule::Ptr<_1c2c1b131_TypeKind> _1c2c36888_build(_1c2c30585_TypeChecker* _self_, jule::Any& _142229_decl_kind) {
	jule::Trait<_1c2c1ac02_Kind> _142317_kind = nullptr;;
	{
		auto &_match_expr{ _142229_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c1b131_TypeKind>>()) {
			_case_begin_1c54d495d:;
			{
				_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_142229_decl_kind.operator jule::Ptr<_1c2c1b131_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec8d7e_IdentTypeDecl>>()) {
			_case_begin_1c54d5a5d:;
			{
				jule::Trait<_1c2c1ac02_Kind> _142821_t = _1c2c341d2_build_ident(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec8d7e_IdentTypeDecl>());;
				if ((_142821_t != nullptr)) {
					_142317_kind=_142821_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec9258_SptrTypeDecl>>()) {
			_case_begin_1c54d5b29:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2c28bee_Sptr> _143421_t = _1c2c347ed_build_sptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec9258_SptrTypeDecl>());;
				if ((_143421_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_143421_t, 6);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec981e_PtrTypeDecl>>()) {
			_case_begin_1c54d5b90:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2c2c263_Ptr> _144021_t = _1c2c34e19_build_ptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec981e_PtrTypeDecl>());;
				if ((_144021_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_144021_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec9445_SlcTypeDecl>>()) {
			_case_begin_1c54d4e25:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2c2965b_Slc> _144621_t = _1c2c35227_build_slc(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec9445_SlcTypeDecl>());;
				if ((_144621_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_144621_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec9a0b_ArrTypeDecl>>()) {
			_case_begin_1c54d4e8b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2c2b806_Arr> _145221_t = _1c2c35535_build_arr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec9a0b_ArrTypeDecl>());;
				if ((_145221_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_145221_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec9be8_MapTypeDecl>>()) {
			_case_begin_1c54d5002:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2c2ac12_Map> _145821_t = _1c2c35843_build_map(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec9be8_MapTypeDecl>());;
				if ((_145821_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_145821_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec9632_TupleTypeDecl>>()) {
			_case_begin_1c54d5068:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2c2a151_Tuple> _146421_t = _1c2c35b51_build_tuple(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec9632_TupleTypeDecl>());;
				if ((_146421_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_146421_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20515028b_FnDecl>>()) {
			_case_begin_1c54d5c17:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c1cc9762_FnIns> _147021_t = _1c2c3626c_build_fn(&(*_self_), _142229_decl_kind.operator jule::Ptr<_20515028b_FnDecl>());;
				if ((_147021_t != nullptr)) {
					_142317_kind=jule::Trait<_1c2c1ac02_Kind>(_147021_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_204ec906b_NamespaceTypeDecl>>()) {
			_case_begin_1c54d5c7d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1c2c1ac02_Kind> _147621_t = _1c2c3657a_build_by_namespace(&(*_self_), _142229_decl_kind.operator jule::Ptr<_204ec906b_NamespaceTypeDecl>());;
				if ((_147621_t != nullptr)) {
					_142317_kind=_147621_t;
				};
			}
		}
		else {
			_case_begin_1c54d4cc1:;
			{
				_1c2c30c4a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c54d4c6b:;
	};
	if ((_142317_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _142317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c1b131_TypeKind>>()) {
			_case_begin_1c54e177d:;
			{
				return _142317_kind.operator jule::Ptr<_1c2c1b131_TypeKind>();
			}
		}
		else {
			_case_begin_1c54e12a5:;
			{
				return jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=_142317_kind});
			}
		}
		_match_end_1c54e1250:;
	};
}



inline jule::Ptr<_1c2c1b131_TypeKind> _1c2c36b96_check_decl(_1c2c30585_TypeChecker* _self_, jule::Ptr<_204ec8b92_TypeDecl>& _149734_decl) {
	jule::Ptr<_205139176_Token> _149917_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_149734_decl.get()._field_token;
	jule::Ptr<_1c2c1b131_TypeKind> _150217_kind = _1c2c36888_build(&(*_self_), _149734_decl.get()._field_kind);;
	(*_self_)._field_error_token=_149917_error_token;
	return _150217_kind;
}



inline void _1c2c36e1b_check(_1c2c30585_TypeChecker* _self_, jule::Ptr<_1c2c24d2c_TypeSymbol>& _150829_t) {
	if ((_150829_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2c1b131_TypeKind> _151217_kind = _1c2c36b96_check_decl(&(*_self_), _150829_t.get()._field_decl);;
	if ((_151217_kind == nullptr)) {
		_1c2c25404_remove_kind(_150829_t.ptr());
		return;;
	};
	_150829_t.get()._field_kind=_151217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c30585_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _204e30423_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _204e6da16_push_err(_204e891a2_DirectiveEval* _self_, jule::Ptr<_205139176_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_2046db273_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_2046db6b3_logf(_2138_fmt,jule::Any(_2151_args))});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _204e6decd_split_operans(_204e891a2_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_205139176_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_205139176_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c5656b46:;
						{
							(_3717_range_n)++;
							goto _iter_next_1c5655eca;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c5656ea9:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1c5656cbc:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1c5655eca;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1c5655eca:;
	}
	_iter_end_1c5655eca:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_204e6da16_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _204e70595_eval_directive_ident(_204e891a2_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1c565ace3:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1c565ace3:;
			++it;
			goto _iter_begin_1c565ace3;
		}
		_iter_end_1c565ace3:;
	};
	return false;
}



inline jule::Bool _204e715eb_eval_directive_part(_204e891a2_DirectiveEval* _self_, jule::Slice<jule::Ptr<_205139176_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_204e6da16_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _204e70595_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _204e72d6c_eval(_204e891a2_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_204e6da16_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _11317_logical_or_parts = _204e6decd_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1c56620d5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_205139176_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _12021_logical_and_parts = _204e6decd_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1c56635ae:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_205139176_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_205139176_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_205139176_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_204e6da16_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _204e715eb_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1c56635ae:;
						++it;
						goto _iter_begin_1c56635ae;
					}
					_iter_end_1c56635ae:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1c56620d5:;
			++it;
			goto _iter_begin_1c56620d5;
		}
		_iter_end_1c56620d5:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _204e891a2_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1db25a0c4_JuleImporter> static__1dadaa32e_new(_204e30423_CompileInfo _5823_info) {
	jule::Ptr<_1db25a0c4_JuleImporter> _5917_imp = jule::new_ptr<_1db25a0c4_JuleImporter>(_1db25a0c4_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2046ee8d5_PATH_STDLIB})});;
	_204e30c3c_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>> _1dadb1203_all_packages(_1db25a0c4_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1dadc0652_set_mod_path(_1db25a0c4_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1dadc1ba3_get_mod_path(_1db25a0c4_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1dae13574_mod_by_id(_1db25a0c4_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1dae19c62_get_import(_1db25a0c4_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1c566aae4:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1c566aae4:;
			++it;
			goto _iter_begin_1c566aae4;
		}
		_iter_end_1c566aae4:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_20500541b_Ast>>,jule::Slice<_2046db273_Log>> _1dae25003_import_package(_1db25a0c4_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_235b1ea71_DirEntry>> _9717_dirents = ({
		auto except = static__204c67722_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_2046db273_Log>::make({_1dada920c_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
			return std::make_tuple(nullptr,jule::Slice<_2046db273_Log>::make({_1dada920c_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _204e8e608_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_2046db273_Log> _10525_errs = _204e6c619_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_20500541b_Ast>> _11217_asts = jule::Slice<jule::Ptr<_20500541b_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1c5670225:;
		if (it != expr.end()) {
			jule::Ptr<_235b1ea71_DirEntry> _11316_dirent = *it;
			{
				if ((_235b49804_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_204c03cc9_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1c5670225;
				};
				jule::Str _11917__path = _204c66ed5_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_20513e566_File> _12021_file = _205140a95_new_file_set(_11917__path);;
				_20513ebe8_fill(_12021_file.ptr(), _1dada6a67_read_buff(_12021_file.get()._field_path));
				jule::Slice<_2046db273_Log> _12221_errors = _20514b254_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1dad01550_FileInfo> _12721_finfo = _1dad46452_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_204e2e565_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1c5670225;
				};
				jule::Bool _13718_r;;
				jule::Slice<_2046db273_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1dae394bd_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1c5670225;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1c5670225:;
			++it;
			goto _iter_begin_1c5670225;
		}
		_iter_end_1c5670225:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1dae2c956_imported(_1db25a0c4_JuleImporter* _self_, jule::Ptr<_1c2b77301_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1c56773d6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1c56773d6:;
			++it;
			goto _iter_begin_1c56773d6;
		}
		_iter_end_1c56773d6:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1c5678618:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1c5678618:;
				++it;
				_16217_i++;
				goto _iter_begin_1c5678618;
			}
			_iter_end_1c5678618:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_2046db273_Log>> _1dae394bd_is_pass_build_directives(_1db25a0c4_JuleImporter* _self_, jule::Ptr<_20500541b_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1c567b5c7:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1c567b5c7;
				};
				_204e891a2_DirectiveEval _18421_de = _204e891a2_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _204e72d6c_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1c567b5c7:;
			++it;
			goto _iter_begin_1c567b5c7;
		}
		_iter_end_1c567b5c7:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1db25a0c4_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1db408a03_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1db258c3d_is_common_ordered_0(jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>& _1837_s, jule::Ptr<_1c1cb3e55_Struct> _1846_t) {
	jule::Ptr<_1c1cb3e55_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1c1cb3e55_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1c56ad917:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1c56ad917;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1c56ad917:;
			++it;
			goto _iter_begin_1c56ad917;
		}
		_iter_end_1c56ad917:;
	};
	return false;
}

inline jule::Bool static__1db258c3d_is_common_ordered_1(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>& _1837_s, jule::Ptr<_1c2b9a4de_Var> _1846_t) {
	jule::Ptr<_1c2b9a4de_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1c2b9a4de_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1c56b6029:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1c56b6029;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1c56b6029:;
			++it;
			goto _iter_begin_1c56b6029;
		}
		_iter_end_1c56b6029:;
	};
	return false;
}



inline void static__1db259722_order_common_0(jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1c56a85b0:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1c1cb3e55_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1c56a85b0:;
			++it;
			_4114_j++;
			goto _iter_begin_1c56a85b0;
		}
		_iter_end_1c56a85b0:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(static__1db258c3d_is_common_ordered_0(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1c56aa46e:;
			}
			_iter_end_1c56aa46e:;;
		}
	_iter_next_1c56a801b:;
	}
	_iter_end_1c56a801b:;;
}

inline void static__1db259722_order_common_1(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1c56b0c16:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1c2b9a4de_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1c56b0c16:;
			++it;
			_4114_j++;
			goto _iter_begin_1c56b0c16;
		}
		_iter_end_1c56b0c16:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(static__1db258c3d_is_common_ordered_1(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1c56b2ac5:;
			}
			_iter_end_1c56b2ac5:;;
		}
	_iter_next_1c56ae077:;
	}
	_iter_end_1c56ae077:;;
}



inline void static__1db259b62_order_structures(jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>& _6141_structs) {
	static__1db259722_order_common_0(_6141_structs);
}



inline void static__1db25d5d3_order_vars(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>& _6735_vars) {
	static__1db259722_order_common_1(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1db576e6d_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1db448c63_optimize_child(jule::Ptr<_1db43516c_ScopeDeadCode> _self_, jule::Ptr<_1c2b4c1e9_Scope>& _3039_s) {
	jule::Ptr<_1db43516c_ScopeDeadCode> _3117_sdc = jule::new_ptr<_1db43516c_ScopeDeadCode>(_1db43516c_ScopeDeadCode{._field_parent=_self_, ._field_s=_3039_s, ._field_stmts=(&(_3039_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1db53c6a3_optimize_stmts(_3117_sdc);
	};
}



inline void _1db44c31b_eliminate_followed(_1db43516c_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_1db43516c_ScopeDeadCode> _4617_parent = (*_self_)._field_parent;;
	while ((_4617_parent != nullptr)) {
		{
			(*(_4617_parent.get()._field_stmts))=(*(_4617_parent.get()._field_stmts)).slice(0LL,(_4617_parent.get()._field_i + 1LL));
			_4617_parent=_4617_parent.get()._field_parent;
		}
	_iter_next_1c56cb8e1:;
	}
	_iter_end_1c56cb8e1:;;
}



inline void _1db44e9d3_push_goto(jule::Ptr<_1db43516c_ScopeDeadCode> _self_, jule::Ptr<_1c2b6031c_GotoSt> _5333_gt) {
	jule::I64 _5417_i = 0LL;;
	while ((_5417_i < _self_.get()._field_labels.get().len())) {
		{
			if ((_5333_gt.get()._field_ident == (*(_self_.get()._field_labels))[_5417_i].get()._field_ident)) {
				return;;
			};
			(_5417_i)++;
		}
	_iter_next_1c56ce471:;
	}
	_iter_end_1c56ce471:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c2b6031c_GotoSt>>::make({_5333_gt}));
}



inline void _1db44a171_push_label(jule::Ptr<_1db43516c_ScopeDeadCode> _self_, jule::Ptr<_1c2b60130_Label> _6434_l) {
	jule::I64 _6517_i = 0LL;;
	while ((_6517_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_6434_l.get()._field_ident == (*(_self_.get()._field_gotos))[_6517_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_6517_i)), ((*(_self_.get()._field_gotos)).slice((_6517_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1c56d14a6;
			};
			(_6517_i)++;
		}
	_iter_next_1c56d14a6:;
	}
	_iter_end_1c56d14a6:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c2b60130_Label>>::make({_6434_l}));
}



inline void _1db53ba59_optimize_stmt(jule::Ptr<_1db43516c_ScopeDeadCode> _self_, jule::Any _7744_st) {
	{
		auto &_match_expr{ _7744_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b4c1e9_Scope>>()) {
			_case_begin_1c56d42ab:;
			{
				jule::Ptr<_1c2b4c1e9_Scope> _8021_scope = _7744_st.operator jule::Ptr<_1c2b4c1e9_Scope>();;
				if (_8021_scope.get()._field_deferred) {
					_1db540783_eliminate_dead_code_of_scope(_8021_scope);
				} else {
					_1db448c63_optimize_child(_self_, _8021_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c56d4322:;
			{
				{
					auto &_match_expr{ _7744_st.operator jule::Ptr<_1c2be1ca5_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>>()) {
						_case_begin_1c56d6016:;
						{
							_1db44c31b_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_1c56d5e7d:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b613b7_RetSt>>()) {
			_case_begin_1c56d44ba:;
			{
				_1db44c31b_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b6031c_GotoSt>>()) {
			_case_begin_1c56d4531:;
			{
				_1db44e9d3_push_goto(_self_, _7744_st.operator jule::Ptr<_1c2b6031c_GotoSt>());
				_1db44c31b_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b60130_Label>>()) {
			_case_begin_1c56d4597:;
			{
				_1db44a171_push_label(_self_, _7744_st.operator jule::Ptr<_1c2b60130_Label>());
			}
		}
		_match_end_1c56d4421:;
	};
}



inline void _1db53c6a3_optimize_stmts(jule::Ptr<_1db43516c_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1db53ba59_optimize_stmt(_self_, jule::Any((*(_self_.get()._field_stmts))[_self_.get()._field_i]));
		}
	_iter_next_1c56d4960:;
	}
	_iter_end_1c56d4960:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1db43516c_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos;
	_Stream << "}";
	return _Stream;
}



inline void static__1db9d95de_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1db9debdd_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1db9d95de_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1dadb30a1_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1dad96e0e_log_flat(_2046db273_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1dada3190_log_error(_2046db273_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1db9d95de_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1c2a124aa_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1c2a124aa_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _204c65ea1_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_204c65ea1_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1c2a124aa_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_204c21b2c_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_204c21b2c_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_204c21b2c_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1db9debdd_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1db274c59_log(_2046db273_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1c5726ad4:;
			{
				static__1dad96e0e_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1c5726b6c:;
			{
				static__1dada3190_log_error(_6524_l);
			}
		}
		_match_end_1c5726a5c:;
	};
}



inline void static__1db28860d_print_logs(jule::Slice<_2046db273_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1c5727dd2:;
		if (it != expr.end()) {
			_2046db273_Log &_7616_l = *it;
			{
				static__1db274c59_log(_7616_l);
			}
			_iter_next_1c5727dd2:;
			++it;
			goto _iter_begin_1c5727dd2;
		}
		_iter_end_1c5727dd2:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1c2a124aa_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1db26c37d_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c347a483_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c34873b3_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c34875a0_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c34879ac_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3487d86_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c3489261_ScopeOptimizer> static__1c3489739_new(jule::Ptr<_1c2b4c1e9_Scope> _4527_scope) {
	return jule::new_ptr<_1c3489261_ScopeOptimizer>(_1c3489261_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1c34899ae_set_current_stmt(_1c3489261_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=jule::Any(_5139_stmt);
}



inline void _1c3489c34_optimize_data(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2be1ca5_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>()) {
			_case_begin_1c573c457:;
			{
				jule::Ptr<_1c1cba9ea_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1c1cba9ea_FnCallExprModel>();;
				if (_2359c7e57_PRODUCTION) {
					if (((!(_1c1cca4dd_is_builtin(_5821_m.get()._field_func.ptr()))) && _1c348cb16_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1c34899ae_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1c573c402:;
	};
	static__1c3490344_optimize(_5536_d.get()._field_model);
}



inline void _1c3489ea9_optimize_var(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b9a4de_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1c3490344_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1c348a22e_optimize_conditional(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2aed860_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1c574169d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b53ae6_If> _7721_elif = *it;
			{
				static__1c3490344_optimize(_7721_elif.get()._field_expr);
				_1c348c53e_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1c574169d:;
			++it;
			goto _iter_begin_1c574169d;
		}
		_iter_end_1c574169d:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1c348c53e_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_2359c8919_OPT_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1c574378d:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1c2b53ae6_If> _9221_elif = *it;
			{
				if ((!(_1c348ce35_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1c574378d;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1c2aed673_Else>(_1c2aed673_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1c574378d;
			}
			_iter_next_1c574378d:;
			++it;
			_9214_i++;
			goto _iter_begin_1c574378d;
		}
		_iter_end_1c574378d:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c2b53ae6_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1c2b53ae6_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1c348d7b5_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1c574653d:;
	}
	_iter_end_1c574653d:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1c5747e57:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1c2b53ae6_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1c5747e57:;
			++it;
			_12913_j++;
			goto _iter_begin_1c5747e57;
		}
		_iter_end_1c5747e57:;
	};
	if ((_12817_only != -1LL)) {
		_1c34899ae_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1c348a619_build_default_constat_true_case(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b60edd_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1c2b60ac0_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1c574a4dc;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1c2b611ca_FallSt>>()) {
					_case_begin_1c574c4de:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1c574a4dc;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1c574c2ad:;
					{
						goto _iter_end_1c574a4dc;
					}
				}
				_match_end_1c574c258:;
			};
		}
	_iter_next_1c574a4dc:;
	}
	_iter_end_1c574a4dc:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1c348a8a0_optimize_match(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b60ac0_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c574ea52:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b60edd_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1c5750091:;
					if (it != expr.end()) {
						jule::Ptr<_1c2be1ca5_Data> _17325_expr = *it;
						{
							static__1c3490344_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1c5750091:;
						++it;
						goto _iter_begin_1c5750091;
					}
					_iter_end_1c5750091:;
				};
				_1c348c53e_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1c574ea52:;
			++it;
			goto _iter_begin_1c574ea52;
		}
		_iter_end_1c574ea52:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1c348c53e_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_2359c8919_OPT_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c5751aed:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1c2b60edd_Case> _18925_case = *it;
			{
				if ((!(_1c348d4da_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1c5751aed;
				};
				_18617_const_case=true;
				_1c348a619_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1c5751aed;
			}
			_iter_next_1c5751aed:;
			++it;
			_18918_i++;
			goto _iter_begin_1c5751aed;
		}
		_iter_end_1c5751aed:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c2b60edd_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1c2b60edd_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1c348da90_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1c57545a1:;
	}
	_iter_end_1c57545a1:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c5755937:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1c2b60edd_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1c5755937:;
			++it;
			_21913_j++;
			goto _iter_begin_1c5755937;
		}
		_iter_end_1c5755937:;
	};
	if ((_21817_only != -1LL)) {
		_1c34899ae_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1c348ab25_optimize_range_iter(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b3c519_RangeIter> _23542_it) {
	static__1c3490344_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1c348c53e_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1c348ad9a_optimize_while_iter(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b0e673_WhileIter> _24042_it) {
	static__1c3490344_optimize(_24042_it.get()._field_expr);
	_1c348c2b9_optimize_stmt(&(*_self_), jule::Any(_24042_it.get()._field_next));
	_1c348c53e_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1c348b1a8_substr(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b606e6_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cbc546_SlicingExprModel>>()) {
			_case_begin_1c575ab29:;
			{
				jule::Ptr<_1c1cbc546_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1c1cbc546_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1c34899ae_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1c34879ac_MutSlicingExprModel>(_1c34879ac_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=jule::Any(_24921_sem.get()._field_expr), ._field_left=jule::Any(_24921_sem.get()._field_left), ._field_right=jule::Any(_24921_sem.get()._field_right)})));
					return true;
				};
			}
		}
		_match_end_1c575a93c:;
	};
	return false;
}



inline jule::Bool _1c348b4b6_str_insert(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b606e6_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cb8c07_BinopExprModel>>()) {
			_case_begin_1c575d566:;
			{
				jule::Ptr<_1c1cb8c07_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1c1cb8c07_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1c34899ae_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1c3487d86_StrInsertBeginExprModel>(_1c3487d86_StrInsertBeginExprModel{._field_dest=jule::Any(_26333_a.get()._field_l.get()._field_model), ._field_expr=jule::Any(_26621_m.get()._field_left.get()._field_model)})));
					return true;
				};
			}
		}
		_match_end_1c575d379:;
	};
	return false;
}



inline jule::Bool _1c348b7c4_str_assign(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b606e6_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1c2c256e0_Prim> _28213_lp = _1c2c2304a_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1c2c2869e_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1c348b1a8_substr(&(*_self_), _27833_a) || _1c348b4b6_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1c5762290:;
			{
				return true;
			}
		}
		_match_end_1c5762207:;
	};
	return false;
}



inline void _1c348ba49_optimize_assign(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b606e6_Assign> _29438_assign) {
	if ((_2359c8045_OPT_COPY && _1c348b7c4_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1c3490344_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1c3490344_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c57639bc:;
			{
				if ((_2359c830e_OPT_MATH && (_1c2c24238_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1c1cb8c07_BinopExprModel>(_1c1cb8c07_BinopExprModel{._field_op=_29438_assign.get()._field_op, ._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r}));;
					static__1c3490344_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1c1cb8c07_BinopExprModel>>()) {
							_case_begin_1c5766e32:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1c1cb8740_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=jule::Any(_30725_model);
								return;;
							}
						}
						_match_end_1c57669ae:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1c5764913:;
	};
	if (_2359c8221_OPT_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>>()) {
				_case_begin_1c57689a0:;
				{
					jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1c1cbada2_SliceExprModel>>()) {
							_case_begin_1c5769792:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>() || _match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
										_case_begin_1c576a023:;
										{
											_1c34899ae_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1c34875a0_PushToSliceExprModel>(_1c34875a0_PushToSliceExprModel{._field_dest=jule::Any(_32825_m.get()._field_dest), ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1c1cbada2_SliceExprModel>()})));
										}
									}
									_match_end_1c5769ebd:;
								};
							}
						}
						_match_end_1c5769709:;
					};
				}
			}
			_match_end_1c5768791:;
		};
	};
}



inline void _1c348bcbe_optimize_multi_assign(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b608d3_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1c5769c8c:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1c3490344_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=jule::Any(_34521_l);
				};
			}
			_iter_next_1c5769c8c:;
			++it;
			_34514_i++;
			goto _iter_begin_1c5769c8c;
		}
		_iter_end_1c5769c8c:;
	};
	static__1c3490344_optimize(_34444_assign.get()._field_r);
}



inline void _1c348c044_optimize_ret(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b613b7_RetSt> _35435_r) {
	static__1c3490344_optimize(_35435_r.get()._field_expr);
}



inline void _1c348c2b9_optimize_stmt(_1c3489261_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b4c1e9_Scope>>()) {
			_case_begin_1c576d323:;
			{
				_1c348c53e_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b4c1e9_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c576d4bb:;
			{
				_1c3489c34_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2be1ca5_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c576d532:;
			{
				_1c3489ea9_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b9a4de_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2aed860_Conditional>>()) {
			_case_begin_1c576d598:;
			{
				_1c348a22e_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2aed860_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b3c519_RangeIter>>()) {
			_case_begin_1c576d60e:;
			{
				_1c348ab25_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b3c519_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b0e673_WhileIter>>()) {
			_case_begin_1c576d675:;
			{
				_1c348ad9a_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b0e673_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b0e486_InfIter>>()) {
			_case_begin_1c576d6db:;
			{
				_1c348c53e_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b0e486_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b606e6_Assign>>()) {
			_case_begin_1c576d752:;
			{
				_1c348ba49_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b606e6_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b608d3_MultiAssign>>()) {
			_case_begin_1c576d7c9:;
			{
				_1c348bcbe_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b608d3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b60ac0_Match>>()) {
			_case_begin_1c576d851:;
			{
				_1c348a8a0_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b60ac0_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b613b7_RetSt>>()) {
			_case_begin_1c576d8c8:;
			{
				_1c348c044_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2b613b7_RetSt>());
			}
		}
		_match_end_1c576d422:;
	};
}



inline void _1c348c53e_optimize_child(_1c3489261_ScopeOptimizer* _self_, jule::Ptr<_1c2b4c1e9_Scope> _38537_child) {
	jule::Ptr<_1c3489261_ScopeOptimizer> _38617_so = static__1c3489739_new(_38537_child);;
	_1c348c71a_optimize(_38617_so.ptr());
}



inline void _1c348c71a_optimize(_1c3489261_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1c577567c:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1c348c2b9_optimize_stmt(&(*_self_), jule::Any(_39221_stmt));
			}
			_iter_next_1c577567c:;
			++it;
			_39214_i++;
			goto _iter_begin_1c577567c;
		}
		_iter_end_1c577567c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c3489261_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1c3490344_optimize(jule::Any& _5333_model) {
	{
		
		if (_2359c8793_OPT_PTR || _2359c830e_OPT_MATH || _2359c840d_OPT_ACCESS || _2359c8919_OPT_COND) {
			_case_begin_1c57766a0:;
			{
				jule::Ptr<_1c348e84e_ExprOptimizer> _6021_exop = jule::new_ptr<_1c348e84e_ExprOptimizer>(_1c348e84e_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5333_model))))});;
				_1c34957cd_do(_6021_exop.ptr());
			}
		}
		_match_end_1c5775cdc:;
	};
}



inline jule::Bool _1c3490652_str_cond(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cb8c07_BinopExprModel> _6727_m) {
	jule::Ptr<_1c2c256e0_Prim> _6813_lp = _1c2c2304a_prim(_6727_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6813_lp == nullptr) || (!(_1c2c2869e_is_str(_6813_lp.ptr()))))) {
		return false;
	};
	if (((_6727_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6727_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6727_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c577a1a9:;
			{
				std::tie(_6727_m.get()._field_left,_6727_m.get()._field_right) = std::make_tuple(_6727_m.get()._field_right,_6727_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1c5779ede:;
	};
	{
		auto &_match_expr{ _6727_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c57797e6:;
			{
				goto _match_end_1c577b100;
			}
		}
		else {
			_case_begin_1c577b199:;
			{
				return true;
			}
		}
		_match_end_1c577b100:;
	};
	_julec_label_opt:;
	jule::Ptr<_1c2abb9a4_Const> _8713_c = _6727_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c2abb9a4_Const>();;
	if ((!(_1c2abd467_read_str(_8713_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6727_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c577c376:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_expr_kind=_6727_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6727_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c577c73e:;
			{
				jule::Ptr<_205139176_Token> _9921_op = _6727_m.get()._field_op;;
				_9921_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1c1cb90ae_UnaryExprModel>(_1c1cb90ae_UnaryExprModel{._field_op=_9921_op, ._field_expr=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_model=jule::Any(jule::new_ptr<_1c1cbe49e_CommonSubIdentExprModel>(_1c1cbe49e_CommonSubIdentExprModel{._field_expr_kind=_6727_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6727_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)}))})}));
			}
		}
		_match_end_1c577c057:;
	};
	return true;
}



inline void _1c34908c7_binary(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cb8c07_BinopExprModel> _11525_m) {
	static__1c3490344_optimize(_11525_m.get()._field_left.get()._field_model);
	static__1c3490344_optimize(_11525_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11525_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c5780995:;
			{
				goto _match_end_1c5781611;
			}
		}
		else {
			_case_begin_1c57817dc:;
			{
				return;;
			}
		}
		_match_end_1c5781611:;
	};
	if ((_2359c8919_OPT_COND && _1c3490652_str_cond(&(*_self_), _11525_m))) {
		return;;
	};
	if ((!(_2359c830e_OPT_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11525_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c57825ac:;
			{
				jule::Bool _13518_ok;;
				jule::U64 _13522_x;;
				std::tie(_13518_ok,_13522_x) = _1c3495beb_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_13518_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1c2abb9a4_Const> _13825_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c2abb9a4_Const>();;
					_1c2abe413_set_u64(_13825_c.ptr(), _13522_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c5782920:;
			{
				jule::Bool _14318_ok;;
				jule::U64 _14322_x;;
				std::tie(_14318_ok,_14322_x) = _1c3495beb_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_14318_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1c2abb9a4_Const> _14625_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c2abb9a4_Const>();;
					_1c2abe413_set_u64(_14625_c.ptr(), _14322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c5782986:;
			{
				jule::Ptr<_1c2abb9a4_Const> _15121_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1c2abb9a4_Const>();;
				jule::F64 _15217_d = _1c2abde18_as_f64(_15121_c.ptr());;
				if ((_15217_d == 2LL)) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1c2abe18d_set_i64(_15121_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1c5782744:;
	};
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1c347a483_UnsafeBinopExprModel>(_1c347a483_UnsafeBinopExprModel{._field_node=_11525_m}));
}



inline void _1c3490b4c_unary(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cb90ae_UnaryExprModel> _16324_m) {
	static__1c3490344_optimize(_16324_m.get()._field_expr.get()._field_model);
	if ((_2359c8793_OPT_PTR && (_16324_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1c1cb90ae_UnaryExprModel>>()) {
				_case_begin_1c5789592:;
				{
					jule::Ptr<_1c1cb90ae_UnaryExprModel> _16825_um = _16324_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1c1cb90ae_UnaryExprModel>();;
					if ((_16825_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=jule::Any(_16825_um.get()._field_expr.get()._field_model);
					};
				}
			}
			_match_end_1c57893a5:;
		};
	};
}



inline void _1c3490dc2_structure_lit(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cb9862_StructLitExprModel> _17632_m) {
	{
		auto &expr = _17632_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1c578b6d7:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb94aa_StructArgExprModel> _17721_arg = *it;
			{
				static__1c3490344_optimize(_17721_arg.get()._field_expr);
			}
			_iter_next_1c578b6d7:;
			++it;
			goto _iter_begin_1c578b6d7;
		}
		_iter_end_1c578b6d7:;
	};
}



inline void _1c3491147_alloc_structure(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cb9b70_AllocStructLitExprModel> _18234_m) {
	_1c3490dc2_structure_lit(&(*_self_), _18234_m.get()._field_lit);
}



inline void _1c34913bc_casting(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cba1c0_CastingExprModel> _18626_m) {
	static__1c3490344_optimize(_18626_m.get()._field_expr);
}



inline void _1c3491642_args(_1c348e84e_ExprOptimizer* _self_, jule::Slice<jule::Any> _19023_args) {
	{
		auto &expr = _19023_args;
		auto it = expr.begin();
		_iter_begin_1c578ddd2:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__1c3490344_optimize(_19121_arg);
				_19023_args[_19114_i]=jule::Any(_19121_arg);
			}
			_iter_next_1c578ddd2:;
			++it;
			_19114_i++;
			goto _iter_begin_1c578ddd2;
		}
		_iter_end_1c578ddd2:;
	};
}



inline void _1c34918b7_scope(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c2b4c1e9_Scope>& _19725_s) {
	jule::Ptr<_1c3489261_ScopeOptimizer> _19817_scopt = static__1c3489739_new(_19725_s);;
	_1c348c71a_optimize(_19817_scopt.ptr());
}



inline void _1c3491b3c_func_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cba9ea_FnCallExprModel> _20228_m) {
	static__1c3490344_optimize(_20228_m.get()._field_expr);
	_1c3491642_args(&(*_self_), _20228_m.get()._field_args);
	if ((_20228_m.get()._field_except != nullptr)) {
		_1c34918b7_scope(&(*_self_), _20228_m.get()._field_except);
	};
}



inline void _1c3491db2_slice(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbada2_SliceExprModel> _21024_m) {
	_1c3491642_args(&(*_self_), _21024_m.get()._field_elems);
}



inline void _1c3492137_array(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbdb52_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_elems.len() == 2LL) && (_21424_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_elems[0LL];;
		static__1c3490344_optimize(_21621_elem);
		_21424_m.get()._field_elems[0LL]=jule::Any(_21621_elem);
	};
	_1c3491642_args(&(*_self_), _21424_m.get()._field_elems);
}



inline void _1c34923ac_indexing(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbb325_IndexingExprModel> _22327_m) {
	static__1c3490344_optimize(_22327_m.get()._field_expr.get()._field_model);
	static__1c3490344_optimize(_22327_m.get()._field_index.get()._field_model);
	if ((!(_2359c840d_OPT_ACCESS))) {
		return;;
	};
	jule::Bool _22913_array = (_1c2c239eb_arr(_22327_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22913_array && _1c2be2668_is_const(_22327_m.get()._field_index.ptr()))) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1c34873b3_UnsafeIndexingExprModel>(_1c34873b3_UnsafeIndexingExprModel{._field_node=_22327_m}));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c579853a:;
			{
				jule::Ptr<_1c2b9a4de_Var> _23917_i = _22327_m.get()._field_index.get()._field_model.operator jule::Ptr<_1c2b9a4de_Var>();;
				if ((_23917_i.get()._field_mutable || (_23917_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1c57983b4;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
						_case_begin_1c5799b9b:;
						{
							jule::Ptr<_1c2b9a4de_Var> _24521_r = _22327_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1c2b9a4de_Var>();;
							if ((_23917_i.get()._field_iter_relation.get()._field_range == _24521_r)) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1c34873b3_UnsafeIndexingExprModel>(_1c34873b3_UnsafeIndexingExprModel{._field_node=_22327_m}));
							};
						}
					}
					_match_end_1c57999d1:;
				};
			}
		}
		_match_end_1c57983b4:;
	};
}



inline void _1c3492632_anon_func(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbb6cc_AnonFnExprModel> _25628_m) {
	_1c34918b7_scope(&(*_self_), _25628_m.get()._field_func.get()._field_scope);
}



inline void _1c34928a7_map(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbc007_MapExprModel> _26022_m) {
	{
		auto &expr = _26022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1c579c484:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cbba84_KeyValPairExprModel> _26121_pair = *it;
			{
				static__1c3490344_optimize(_26121_pair.get()._field_key);
				static__1c3490344_optimize(_26121_pair.get()._field_val);
			}
			_iter_next_1c579c484:;
			++it;
			goto _iter_begin_1c579c484;
		}
		_iter_end_1c579c484:;
	};
}



inline void _1c3492b2c_slicing(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbc546_SlicingExprModel> _26726_m) {
	static__1c3490344_optimize(_26726_m.get()._field_expr);
	static__1c3490344_optimize(_26726_m.get()._field_left);
	if ((_26726_m.get()._field_right != nullptr)) {
		static__1c3490344_optimize(_26726_m.get()._field_right);
	};
}



inline void _1c3492da2_trait_sub(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbca85_TraitSubIdentExprModel> _27528_m) {
	static__1c3490344_optimize(_27528_m.get()._field_expr);
}



inline void _1c3493127_structure_sub(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _27932_m) {
	static__1c3490344_optimize(_27932_m.get()._field_expr.get()._field_model);
}



inline void _1c349339c_common_sub(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel> _28329_m) {
	static__1c3490344_optimize(_28329_m.get()._field_expr);
}



inline void _1c3493622_tuple(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbe79b_TupleExprModel> _28724_m) {
	{
		auto &expr = _28724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1c57a2027:;
		if (it != expr.end()) {
			jule::Ptr<_1c2be1ca5_Data> _28821_d = *it;
			{
				static__1c3490344_optimize(_28821_d.get()._field_model);
			}
			_iter_next_1c57a2027:;
			++it;
			goto _iter_begin_1c57a2027;
		}
		_iter_end_1c57a2027:;
	};
}



inline void _1c3493897_new_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel> _29327_m) {
	if ((_29327_m.get()._field_init != nullptr)) {
		static__1c3490344_optimize(_29327_m.get()._field_init);
	};
}



inline void _1c3493b1c_out_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel> _29927_m) {
	static__1c3490344_optimize(_29927_m.get()._field_expr);
}



inline void _1c3493d92_outln_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel> _30329_m) {
	static__1c3490344_optimize(_30329_m.get()._field_expr);
}



inline void _1c3494117_panic_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel> _30729_m) {
	static__1c3490344_optimize(_30729_m.get()._field_expr);
}



inline void _1c349438c_assert_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel> _31130_m) {
	static__1c3490344_optimize(_31130_m.get()._field_expr);
}



inline void _1c3494612_error_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel> _31529_m) {
	static__1c3490344_optimize(_31529_m.get()._field_err);
}



inline void _1c3494887_make_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel> _31928_m) {
	if ((_31928_m.get()._field_len != nullptr)) {
		static__1c3490344_optimize(_31928_m.get()._field_len);
	};
	if ((_31928_m.get()._field_cap != nullptr)) {
		static__1c3490344_optimize(_31928_m.get()._field_cap);
	};
}



inline void _1c3494b0c_append_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel> _32830_m) {
	static__1c3490344_optimize(_32830_m.get()._field_dest);
	static__1c3490344_optimize(_32830_m.get()._field_elements);
}



inline void _1c3494d82_clone_call(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel> _33329_m) {
	static__1c3490344_optimize(_33329_m.get()._field_expr);
}



inline void _1c3495107_sizeof(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc2925_SizeofExprModel> _33725_m) {
	static__1c3490344_optimize(_33725_m.get()._field_expr);
}



inline void _1c349537c_alignof(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc2b12_AlignofExprModel> _34126_m) {
	static__1c3490344_optimize(_34126_m.get()._field_expr);
}



inline void _1c3495602_integrated_to_str(_1c348e84e_ExprOptimizer* _self_, jule::Ptr<_1c1cc3195_IntegratedToStrExprModel> _34536_m) {
	static__1c3490344_optimize(_34536_m.get()._field_expr);
}



inline void _1c34957cd_do(_1c348e84e_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c57abd89:;
			{
				(*((*_self_)._field_model))=jule::Any((*((*_self_)._field_model)).operator jule::Ptr<_1c2be1ca5_Data>().get()._field_model);
				_1c34957cd_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb8c07_BinopExprModel>>()) {
			_case_begin_1c57ac2eb:;
			{
				_1c34908c7_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cb8c07_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb90ae_UnaryExprModel>>()) {
			_case_begin_1c57ac362:;
			{
				_1c3490b4c_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cb90ae_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb9862_StructLitExprModel>>()) {
			_case_begin_1c57ac3c8:;
			{
				_1c3490dc2_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cb9862_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb9b70_AllocStructLitExprModel>>()) {
			_case_begin_1c57ac43e:;
			{
				_1c3491147_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cb9b70_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cba1c0_CastingExprModel>>()) {
			_case_begin_1c57ac4a5:;
			{
				_1c34913bc_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cba1c0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>()) {
			_case_begin_1c57ac51b:;
			{
				_1c3491b3c_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cba9ea_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbada2_SliceExprModel>>()) {
			_case_begin_1c57ac593:;
			{
				_1c3491db2_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbada2_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbdb52_ArrayExprModel>>()) {
			_case_begin_1c57ac61a:;
			{
				_1c3492137_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbdb52_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbb325_IndexingExprModel>>()) {
			_case_begin_1c57ac692:;
			{
				_1c34923ac_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbb325_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbb6cc_AnonFnExprModel>>()) {
			_case_begin_1c57ac719:;
			{
				_1c3492632_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbb6cc_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbc007_MapExprModel>>()) {
			_case_begin_1c57ac791:;
			{
				_1c34928a7_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbc007_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbc546_SlicingExprModel>>()) {
			_case_begin_1c57ac818:;
			{
				_1c3492b2c_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbc546_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>>()) {
			_case_begin_1c57ac890:;
			{
				_1c3492da2_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
			_case_begin_1c57ac917:;
			{
				_1c3493127_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>>()) {
			_case_begin_1c57ac98e:;
			{
				_1c349339c_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbe79b_TupleExprModel>>()) {
			_case_begin_1c57aca16:;
			{
				_1c3493622_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbe79b_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>>()) {
			_case_begin_1c57aca8d:;
			{
				_1c3493b1c_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1c57acb15:;
			{
				_1c3493d92_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel>>()) {
			_case_begin_1c57acb8c:;
			{
				_1c3493897_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>>()) {
			_case_begin_1c57acc14:;
			{
				_1c3494117_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1c57acc8b:;
			{
				_1c349438c_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c57acd13:;
			{
				_1c3494612_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel>>()) {
			_case_begin_1c57acd8a:;
			{
				_1c3494887_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>>()) {
			_case_begin_1c57ace12:;
			{
				_1c3494b0c_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>>()) {
			_case_begin_1c57ace89:;
			{
				_1c3494d82_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2925_SizeofExprModel>>()) {
			_case_begin_1c57ad011:;
			{
				_1c3495107_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc2925_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2b12_AlignofExprModel>>()) {
			_case_begin_1c57ad088:;
			{
				_1c349537c_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc2b12_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc3195_IntegratedToStrExprModel>>()) {
			_case_begin_1c57ad110:;
			{
				_1c3495602_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1c1cc3195_IntegratedToStrExprModel>());
			}
		}
		_match_end_1c57abd34:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c348e84e_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c3496713_Optimizer> static__1c3496b53_new(jule::Ptr<_1db2583d0_IR>& _2128_ir) {
	return jule::new_ptr<_1c3496713_Optimizer>(_1c3496713_Optimizer{._field_ir=_2128_ir});
}



inline void _1c3496dc8_optimize_global(_1c3496713_Optimizer* _self_, jule::Ptr<_1c2b9a4de_Var>& _2739_v) {
	if ((!(_2739_v.get()._field_cpp_linked))) {
		static__1c3490344_optimize(_2739_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1c349714d_optimize_function(_1c3496713_Optimizer* _self_, jule::Ptr<_1c1cc65b6_Fn>& _3341_func) {
	if (_3341_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3341_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c57c319c:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc9762_FnIns> _3721_ins = *it;
			{
				jule::Ptr<_1c3489261_ScopeOptimizer> _3821_so = static__1c3489739_new(_3721_ins.get()._field_scope);;
				_1c348c71a_optimize(_3821_so.ptr());
			}
			_iter_next_1c57c319c:;
			++it;
			goto _iter_begin_1c57c319c;
		}
		_iter_end_1c57c319c:;
	};
}



inline void _1c34973c3_optimize_struct(_1c3496713_Optimizer* _self_, jule::Ptr<_1c1cb3e55_Struct>& _4339_s) {
	if (_4339_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4339_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c57c4885:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _4721_ins = *it;
			{
				{
					auto &expr = _4721_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1c57c5402:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cb6276_FieldIns> _4825_f = *it;
						{
							if ((_4825_f.get()._field_default != nullptr)) {
								static__1c3490344_optimize(_4825_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1c57c5402:;
						++it;
						goto _iter_begin_1c57c5402;
					}
					_iter_end_1c57c5402:;
				};
				{
					auto &expr = _4721_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1c57c5b50:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _5325_m = *it;
						{
							_1c349714d_optimize_function(&(*_self_), _5325_m);
						}
						_iter_next_1c57c5b50:;
						++it;
						goto _iter_begin_1c57c5b50;
					}
					_iter_end_1c57c5b50:;
				};
			}
			_iter_next_1c57c4885:;
			++it;
			goto _iter_begin_1c57c4885;
		}
		_iter_end_1c57c4885:;
	};
}



inline void _1c3497648_optimize_globals(_1c3496713_Optimizer* _self_, jule::Ptr<_1c2b79eb3_Package>& _5940_p) {
	{
		auto &expr = _5940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c57c7019:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _6021_f = *it;
			{
				{
					auto &expr = _6021_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1c57c7778:;
					if (it != expr.end()) {
						jule::Ptr<_1c2b9a4de_Var> _6125_v = *it;
						{
							_1c3496dc8_optimize_global(&(*_self_), _6125_v);
						}
						_iter_next_1c57c7778:;
						++it;
						goto _iter_begin_1c57c7778;
					}
					_iter_end_1c57c7778:;
				};
			}
			_iter_next_1c57c7019:;
			++it;
			goto _iter_begin_1c57c7019;
		}
		_iter_end_1c57c7019:;
	};
}



inline void _1c34978bd_optimize_functions(_1c3496713_Optimizer* _self_, jule::Ptr<_1c2b79eb3_Package>& _6742_p) {
	{
		auto &expr = _6742_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c57c85d1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _6821_f = *it;
			{
				{
					auto &expr = _6821_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1c57c8d40:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _6925_func = *it;
						{
							_1c349714d_optimize_function(&(*_self_), _6925_func);
						}
						_iter_next_1c57c8d40:;
						++it;
						goto _iter_begin_1c57c8d40;
					}
					_iter_end_1c57c8d40:;
				};
			}
			_iter_next_1c57c85d1:;
			++it;
			goto _iter_begin_1c57c85d1;
		}
		_iter_end_1c57c85d1:;
	};
}



inline void _1c3497b43_optimize_structs(_1c3496713_Optimizer* _self_, jule::Ptr<_1c2b79eb3_Package>& _7540_p) {
	{
		auto &expr = _7540_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c57c9d52:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _7621_f = *it;
			{
				{
					auto &expr = _7621_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1c57ca391:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cb3e55_Struct> _7725_s = *it;
						{
							_1c34973c3_optimize_struct(&(*_self_), _7725_s);
						}
						_iter_next_1c57ca391:;
						++it;
						goto _iter_begin_1c57ca391;
					}
					_iter_end_1c57ca391:;
				};
			}
			_iter_next_1c57c9d52:;
			++it;
			goto _iter_begin_1c57c9d52;
		}
		_iter_end_1c57c9d52:;
	};
}



inline void _1c3497db8_optimize_package(_1c3496713_Optimizer* _self_, jule::Ptr<_1c2b79eb3_Package>& _8340_p) {
	_1c3497648_optimize_globals(&(*_self_), _8340_p);
	_1c34978bd_optimize_functions(&(*_self_), _8340_p);
	_1c3497b43_optimize_structs(&(*_self_), _8340_p);
}



inline void _1c3498094_optimize(_1c3496713_Optimizer* _self_) {
	{
		
		if (_2359c8919_OPT_COND || _2359c8221_OPT_APPEND || _2359c8045_OPT_COPY) {
			_case_begin_1c57cca25:;
			{
				goto _match_end_1c57cc4c5;
			}
		}
		else {
			_case_begin_1c57cc591:;
			{
				return;;
			}
		}
		_match_end_1c57cc4c5:;
	};
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1c57ccbbd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _10021_u = *it;
			{
				if ((!(_10021_u.get()._field_cpp_linked))) {
					_1c3497db8_optimize_package(&(*_self_), _10021_u.get()._field_package);
				};
			}
			_iter_next_1c57ccbbd:;
			++it;
			goto _iter_begin_1c57ccbbd;
		}
		_iter_end_1c57ccbbd:;
	};
	_1c3497db8_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _1c3496713_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1c3512c8a_unix(_1c35128a0_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1c3517443_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1c35177c8_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1c35128a0_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1c3513076_Time static__1c351341c_unix(jule::U64 _9124_sec) {
	return _1c3513076_Time{._field_sec=_9124_sec};
}



inline _1c3513076_Time static__1c351361a_now(void) {
	return static__1c351341c_unix(static_cast<jule::U64>(_1c3517102_unix()));
}



inline jule::U64 _1c3513a6b_unix(_1c3513076_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1c3513cd0_day(_1c3513076_Time* _self_) {
	return _1c3514c59_abs(&(*_self_))._field_day;
}



inline jule::U64 _1c3514044_month(_1c3513076_Time* _self_) {
	return _1c3514c59_abs(&(*_self_))._field_month;
}



inline jule::U64 _1c35142a8_year(_1c3513076_Time* _self_) {
	return _1c3514c59_abs(&(*_self_))._field_year;
}



inline jule::U64 _1c351451c_second(_1c3513076_Time* _self_) {
	return _1c3514c59_abs(&(*_self_))._field_second;
}



inline jule::U64 _1c3514781_minute(_1c3513076_Time* _self_) {
	return _1c3514c59_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1c35149e5_hour(_1c3513076_Time* _self_) {
	return _1c3514c59_abs(&(*_self_))._field_hour;
}



inline _1c35128a0_AbsTime _1c3514c59_abs(_1c3513076_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1c3511dee_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1c3511dee_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1c5802264:;
	}
	_iter_end_1c5802264:;;
	_1c35128a0_AbsTime _17417_t = _1c35128a0_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3513076_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__1c3515474_nanoseconds(jule::I64 _22731_d) {
	return static_cast<jule::I64>((_22731_d * 1LL));
}



inline jule::I64 static__1c351571b_microseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>((_23232_d * 1000LL));
}



inline jule::I64 static__1c35159b3_milliseconds(jule::I64 _23732_d) {
	return static_cast<jule::I64>((_23732_d * 1000000LL));
}



inline jule::I64 static__1c3515c5a_seconds(jule::I64 _24227_d) {
	return static_cast<jule::I64>((_24227_d * 1000000000LL));
}



inline jule::I64 static__1c3516002_minutes(jule::I64 _24727_d) {
	return static_cast<jule::I64>((_24727_d * 60000000000LL));
}



inline jule::I64 static__1c3516299_hours(jule::I64 _25225_d) {
	return static_cast<jule::I64>((_25225_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1c3515045_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c338414a_ScopeCoder> static__1c338abce_new(jule::Ptr<_1c34d0d35_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1c338414a_ScopeCoder>(_1c338414a_ScopeCoder{._field_oc=_4724_oc});
}



inline void _1c33a3cc4_range_index_iter(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b3c519_RangeIter>& _5341_it) {
	jule::Str _5413_begin = static__1c34a69a9_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it)));;
	jule::Str _5513_next = static__1c34a6ee8_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it)));;
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_2359c8045_OPT_COPY && _1c3398e0c_is_copy_optimizable(_5341_it.get()._field_expr))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1c349c97d_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_5341_it.get()._field_expr.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, _5413_begin);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1c3519984_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c34dbacc_indent(_self_.get()._field_oc);
	};
	if ((_5341_it.get()._field_key_b != nullptr)) {
		if (_2359c8045_OPT_COPY) {
			_5341_it.get()._field_key_b.get()._field_reference=_1c334b7d8_is_iter_copy_optimizable(_5341_it.get()._field_expr,_5341_it.get()._field_key_b);
		};
		_1c3519984_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c34dbacc_indent(_self_.get()._field_oc);
	};
	_1c338a5b3_scope(_self_, _5341_it.get()._field_scope);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, _5513_next);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c34dbacc_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6712_var(_5341_it.get()._field_key_a));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1c34dbacc_indent(_self_.get()._field_oc);
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c34da4b0_write(_self_.get()._field_oc, _5413_begin);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6c51_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c33a6469_range_hashmap_iter(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b3c519_RangeIter>& _12143_it) {
	jule::Str _12213_begin = static__1c34a69a9_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it)));;
	jule::Str _12313_next = static__1c34a6ee8_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it)));;
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_2359c8045_OPT_COPY && _1c3398e0c_is_copy_optimizable(_12143_it.get()._field_expr))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1c349c97d_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_12143_it.get()._field_expr.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, _12213_begin);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	if ((_12143_it.get()._field_key_a != nullptr)) {
		if (_2359c8045_OPT_COPY) {
			_12143_it.get()._field_key_a.get()._field_reference=_1c334b7d8_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_a);
		};
		_1c3519984_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c34dbacc_indent(_self_.get()._field_oc);
	};
	if ((_12143_it.get()._field_key_b != nullptr)) {
		if (_2359c8045_OPT_COPY) {
			_12143_it.get()._field_key_b.get()._field_reference=_1c334b7d8_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_b);
		};
		_1c3519984_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c34dbacc_indent(_self_.get()._field_oc);
	};
	_1c338a5b3_scope(_self_, _12143_it.get()._field_scope);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, _12313_next);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c34da4b0_write(_self_.get()._field_oc, _12213_begin);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6c51_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c33a8aba_if_case(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b53ae6_If> _18731_i) {
	if ((_18731_i.get()._field_expr != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_18731_i.get()._field_expr));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1c338a5b3_scope(_self_, _18731_i.get()._field_scope);
}



inline void _1c33be4d7_conditional(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2aed860_Conditional> _19635_c) {
	jule::Bool _19717_writed = false;;
	{
		auto &expr = _19635_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1c5867cbe:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b53ae6_If> _19821_elif = *it;
			{
				if ((_19821_elif == nullptr)) {
					goto _iter_next_1c5867cbe;
				};
				if (_19717_writed) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_19717_writed=true;
				_1c33a8aba_if_case(_self_, _19821_elif);
			}
			_iter_next_1c5867cbe:;
			++it;
			goto _iter_begin_1c5867cbe;
		}
		_iter_end_1c5867cbe:;
	};
	if ((_19635_c.get()._field_default != nullptr)) {
		if (_19717_writed) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1c338a5b3_scope(_self_, _19635_c.get()._field_default.get()._field_scope);
	};
}



inline void _1c34215a0_inf_iter(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b0e486_InfIter> _21632_it) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c338a5b3_scope(_self_, _21632_it.get()._field_scope);
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6ee8_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_21632_it))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6c51_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_21632_it))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1c343a674_while_iter(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b0e673_WhileIter> _23334_it) {
	if (((_23334_it.get()._field_expr != nullptr) && (_23334_it.get()._field_next == nullptr))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_23334_it.get()._field_expr != nullptr)) {
			_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		};
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_23334_it.get()._field_next != nullptr)) {
			_1c334ae9c_st(_self_, jule::Any(_23334_it.get()._field_next));
		};
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c338a5b3_scope(_self_, _23334_it.get()._field_scope);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6ee8_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_23334_it))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6c51_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_23334_it))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1c3446d01_range_iter(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b3c519_RangeIter> _26634_it) {
	{
		
		if ((_1c2c23c60_slc(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c587aa5c:;
			{
				_1c33a3cc4_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1c2c239eb_arr(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c587a74e:;
			{
				_1c33a3cc4_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1c2c24711_map(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c587a7b5:;
			{
				_1c33a6469_range_hashmap_iter(_self_, _26634_it);
			}
		}
		else {
			_case_begin_1c587a6d8:;
			{
				_1c33a3cc4_range_index_iter(_self_, _26634_it);
			}
		}
		_match_end_1c587a61c:;
	};
}



inline void _1c334b332_cont(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b3c706_ContSt> _27924_c) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6ee8_iter_next(_27924_c.get()._field_it));
}



inline void _1c3384931_label(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b60130_Label> _28425_l) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a7290_label(_28425_l.get()._field_ident));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1c33b6c3d_goto_st(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b6031c_GotoSt> _28927_gt) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a7290_label(_28927_gt.get()._field_ident));
}



inline void _1c3435e33_postfix(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b60509_Postfix> _29431_p) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_29431_p.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1c34da4b0_write(_self_.get()._field_oc, _29431_p.get()._field_op);
}



inline void _1c34437ae_assign(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b606e6_Assign> _30130_a) {
	_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_l.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, _30130_a.get()._field_op.get()._field_kind);
	_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_r.get()._field_model));
}



inline void _1c34476c5_multi_assign(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b608d3_MultiAssign> _30736_a) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _30736_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1c588d036:;
		if (it != expr.end()) {
			jule::I64 _30914_i = it - expr.begin();
			jule::Any _30921_l = *it;
			{
				if ((_30921_l == nullptr)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30921_l));
				};
				if (((_30736_a.get()._field_l.len() - _30914_i) > 1LL)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c588d036:;
			++it;
			_30914_i++;
			goto _iter_begin_1c588d036;
		}
		_iter_end_1c588d036:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30736_a.get()._field_r));
}



inline jule::Fn<void(void)> _1c3448165_match_expr(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b60ac0_Match> _32334_m) {
	if ((!(_1c2be2668_is_const(_32334_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1c2ac059b_is_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1c2abd203_read_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c349c97d_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_32334_m.get()._field_expr.get()._field_model));
		});
	};
	return nullptr;
}



inline void _1c344a6c8_case(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b60ac0_Match> _33328_m, jule::Ptr<_1c2b60edd_Case> _33343_c) {
	if (((_33343_c.get()._field_exprs.len() != 0LL) && (!(_1c2b3d394_is_generic_type_match(_33328_m.ptr()))))) {
		if (((_33328_m.get()._field_cases.len() > 0LL) && (_33328_m.get()._field_cases[0LL] == _33343_c))) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _33343_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1c589689c:;
			if (it != expr.end()) {
				jule::I64 _34018_i = it - expr.begin();
				jule::Ptr<_1c2be1ca5_Data> _34025_expr = *it;
				{
					{
						
						if ((!(_33328_m.get()._field_type_match))) {
							_case_begin_1c5897b34:;
							{
								jule::Fn<void(void)> _34325_case_expr = _1c3448165_match_expr(_self_, _33328_m);;
								if (_1c2be2976_good_operand(_33328_m.get()._field_expr.ptr(), _34025_expr)) {
									if ((_34325_case_expr != nullptr)) {
										_34325_case_expr();
										_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								} else {
									_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
									if ((_34325_case_expr != nullptr)) {
										_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_34325_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1c58977b0:;
							{
								_1c34da4b0_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1c58976e4:;
					};
					if (((_33343_c.get()._field_exprs.len() - _34018_i) > 1LL)) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1c589689c:;
				++it;
				_34018_i++;
				goto _iter_begin_1c589689c;
			}
			_iter_end_1c589689c:;
		};
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_33328_m.get()._field_default == _33343_c) && (_33328_m.get()._field_cases.len() != 0LL))) {
		_1c34dbacc_indent(_self_.get()._field_oc);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a77ce_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_33343_c))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_33343_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1c34dbacc_indent(_self_.get()._field_oc);
		_1c338a5b3_scope(_self_, _33343_c.get()._field_scope);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c344b0ad_match_st(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b60ac0_Match> _39232_m) {
	if (((_39232_m.get()._field_cases.len() == 0LL) && (_39232_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _39713_generic_type_match = _1c2b3d394_is_generic_type_match(_39232_m.ptr());;
	if ((_39713_generic_type_match && ((_39232_m.get()._field_default == nullptr) || (_39232_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	if (((!(_39713_generic_type_match)) && (!(_1c2be2668_is_const(_39232_m.get()._field_expr.ptr()))))) {
		if ((_2359c8045_OPT_COPY && _1c3398e0c_is_copy_optimizable(_39232_m.get()._field_expr))) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_39232_m.get()._field_expr.get()._field_model));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1c34dbacc_indent(_self_.get()._field_oc);
	};
	if ((_39232_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _39232_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1c58aa31c:;
			if (it != expr.end()) {
				jule::Ptr<_1c2b60edd_Case> _42125_c = *it;
				{
					if ((_42125_c == nullptr)) {
						goto _iter_next_1c58aa31c;
					};
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1c34dbacc_indent(_self_.get()._field_oc);
					_1c344a6c8_case(_self_, _39232_m,_42125_c);
				}
				_iter_next_1c58aa31c:;
				++it;
				goto _iter_begin_1c58aa31c;
			}
			_iter_end_1c58aa31c:;
		};
	};
	if ((_39232_m.get()._field_default != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c344a6c8_case(_self_, _39232_m,_39232_m.get()._field_default);
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a7537_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_39232_m))));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c344b993_fall_st(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b611ca_FallSt> _44827_f) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a77ce_case_begin(_44827_f.get()._field_dest_case));
}



inline void _1c344c378_break_st(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b5ee43_BreakSt> _45328_b) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_45328_b.get()._field_it != 0LLU)) {
		_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6c51_iter_end(_45328_b.get()._field_it));
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, static__1c34a7537_match_end(_45328_b.get()._field_mtch));
	};
}



inline void _1c344cc5d_ret_with_vars(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b613b7_RetSt> _46237_r) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_46237_r.get()._field_func.get()._field_result));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _46237_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1c58b7c42:;
		if (it != expr.end()) {
			jule::I64 _47214_i = it - expr.begin();
			jule::Ptr<_1c2b9a4de_Var> _47221_v = *it;
			{
				if (_20513b8c6_is_ignore_ident(_47221_v.get()._field_ident)) {
					_1c349d1ed_init_expr(_self_.get()._field_oc.get()._field_ec, _47221_v.get()._field_kind.get()._field_kind);
				} else {
					_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6712_var(_47221_v));
				};
				if (((_46237_r.get()._field_vars.len() - _47214_i) > 1LL)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c58b7c42:;
			++it;
			_47214_i++;
			goto _iter_begin_1c58b7c42;
		}
		_iter_end_1c58b7c42:;
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1c344ed5e_ret_tuple(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b613b7_RetSt> _49233_r) {
	jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _49317_datas = _49233_r.get()._field_expr.operator jule::Ptr<_1c1cbe79b_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _49233_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1c58bcc25:;
		if (it != expr.end()) {
			jule::I64 _49414_i = it - expr.begin();
			jule::Ptr<_1c2b9a4de_Var> _49421_v = *it;
			{
				if (_20513b8c6_is_ignore_ident(_49421_v.get()._field_ident)) {
					goto _iter_next_1c58bcc25;
				};
				jule::Any _49821_model = _49317_datas[_49414_i].get()._field_model;;
				if ((_49821_model == _49421_v)) {
					goto _iter_next_1c58bcc25;
				};
				_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6712_var(_49421_v));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_49821_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1c34dbacc_indent(_self_.get()._field_oc);
			}
			_iter_next_1c58bcc25:;
			++it;
			_49414_i++;
			goto _iter_begin_1c58bcc25;
		}
		_iter_end_1c58bcc25:;
	};
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_49233_r.get()._field_func.get()._field_result));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _49317_datas;
		auto it = expr.begin();
		_iter_begin_1c58c2653:;
		if (it != expr.end()) {
			jule::I64 _51914_i = it - expr.begin();
			jule::Ptr<_1c2be1ca5_Data> _51921_d = *it;
			{
				jule::Ptr<_1c2b9a4de_Var> _52021_v = _49233_r.get()._field_vars[_51914_i];;
				if (_20513b8c6_is_ignore_ident(_52021_v.get()._field_ident)) {
					_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_51921_d.get()._field_model));
				} else {
					_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6712_var(_52021_v));
				};
				if (((_49317_datas.len() - _51914_i) > 1LL)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c58c2653:;
			++it;
			_51914_i++;
			goto _iter_begin_1c58c2653;
		}
		_iter_end_1c58c2653:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1c3450b84_ret_with_exprs(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b613b7_RetSt> _53738_r) {
	if ((_53738_r.get()._field_vars.len() > 1LL)) {
		_1c344ed5e_ret_tuple(_self_, _53738_r);
		return;;
	};
	if ((_53738_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1c2b9a4de_Var> _54521_v = _53738_r.get()._field_vars[0LL];;
		if (((!(_20513b8c6_is_ignore_ident(_54521_v.get()._field_ident))) && (_53738_r.get()._field_expr != _54521_v))) {
			jule::Str _54721_ident = static__1c34a6712_var(_54521_v);;
			_1c34da4b0_write(_self_.get()._field_oc, _54721_ident);
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1c34dbacc_indent(_self_.get()._field_oc);
			if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_53738_r.get()._field_func.get()._field_result));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1c34da4b0_write(_self_.get()._field_oc, _54721_ident);
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1c34da4b0_write(_self_.get()._field_oc, _54721_ident);
			};
			return;;
		};
	};
	if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_53738_r.get()._field_func.get()._field_result));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
	return;;
}



inline void _1c3451536_ret_st(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b613b7_RetSt> _58130_r) {
	if (((_58130_r.get()._field_expr == nullptr) && (_58130_r.get()._field_vars.len() == 0LL))) {
		if (_58130_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58130_r.get()._field_expr == nullptr)) {
		_1c344cc5d_ret_with_vars(_self_, _58130_r);
		return;;
	};
	_1c3450b84_ret_with_exprs(_self_, _58130_r);
}



inline void _1c3451dd8_ret_with_defaults(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2c1b131_TypeKind> _59941_result) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if ((_1c2c24975_tup(_59941_result.ptr()) != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
		jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _60321_types = _1c2c24975_tup(_59941_result.ptr()).get()._field_types;;
		{
			auto &expr = _60321_types;
			auto it = expr.begin();
			_iter_begin_1c58d7657:;
			if (it != expr.end()) {
				jule::I64 _60418_i = it - expr.begin();
				jule::Ptr<_1c2c1b131_TypeKind> _60425_t = *it;
				{
					_1c349d1ed_init_expr(_self_.get()._field_oc.get()._field_ec, _60425_t);
					if (((_60321_types.len() - _60418_i) > 1LL)) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1c58d7657:;
				++it;
				_60418_i++;
				goto _iter_begin_1c58d7657;
			}
			_iter_end_1c58d7657:;
		};
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1c349d1ed_init_expr(_self_.get()._field_oc.get()._field_ec, _59941_result);
	};
}



inline void _1c3452a10_var(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b9a4de_Var> _61627_v) {
	if ((!(_61627_v.get()._field_constant))) {
		_1c3519ab6_var(_self_.get()._field_oc, _61627_v);
	};
}



inline void _1c334ae9c_st(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Any _62326_st) {
	if ((_62326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _62326_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b4c1e9_Scope>>()) {
			_case_begin_1c58db936:;
			{
				_1c338a5b3_scope(_self_, _62326_st.operator jule::Ptr<_1c2b4c1e9_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c58dc43c:;
			{
				_1c3452a10_var(_self_, _62326_st.operator jule::Ptr<_1c2b9a4de_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c58dc4a3:;
			{
				_1c349cc03_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_62326_st.operator jule::Ptr<_1c2be1ca5_Data>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2aed860_Conditional>>()) {
			_case_begin_1c58dc519:;
			{
				_1c33be4d7_conditional(_self_, _62326_st.operator jule::Ptr<_1c2aed860_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b0e486_InfIter>>()) {
			_case_begin_1c58dc580:;
			{
				_1c34215a0_inf_iter(_self_, _62326_st.operator jule::Ptr<_1c2b0e486_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b0e673_WhileIter>>()) {
			_case_begin_1c58dc5e6:;
			{
				_1c343a674_while_iter(_self_, _62326_st.operator jule::Ptr<_1c2b0e673_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b3c519_RangeIter>>()) {
			_case_begin_1c58dc65c:;
			{
				_1c3446d01_range_iter(_self_, _62326_st.operator jule::Ptr<_1c2b3c519_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b3c706_ContSt>>()) {
			_case_begin_1c58dc6c3:;
			{
				_1c334b332_cont(_self_, _62326_st.operator jule::Ptr<_1c2b3c706_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b60130_Label>>()) {
			_case_begin_1c58dc739:;
			{
				_1c3384931_label(_self_, _62326_st.operator jule::Ptr<_1c2b60130_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b6031c_GotoSt>>()) {
			_case_begin_1c58dc7a0:;
			{
				_1c33b6c3d_goto_st(_self_, _62326_st.operator jule::Ptr<_1c2b6031c_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b60509_Postfix>>()) {
			_case_begin_1c58dc816:;
			{
				_1c3435e33_postfix(_self_, _62326_st.operator jule::Ptr<_1c2b60509_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b606e6_Assign>>()) {
			_case_begin_1c58dc87c:;
			{
				_1c34437ae_assign(_self_, _62326_st.operator jule::Ptr<_1c2b606e6_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b608d3_MultiAssign>>()) {
			_case_begin_1c58dc8e3:;
			{
				_1c34476c5_multi_assign(_self_, _62326_st.operator jule::Ptr<_1c2b608d3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b60ac0_Match>>()) {
			_case_begin_1c58dc959:;
			{
				_1c344b0ad_match_st(_self_, _62326_st.operator jule::Ptr<_1c2b60ac0_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b611ca_FallSt>>()) {
			_case_begin_1c58dc9d1:;
			{
				_1c344b993_fall_st(_self_, _62326_st.operator jule::Ptr<_1c2b611ca_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b5ee43_BreakSt>>()) {
			_case_begin_1c58dca58:;
			{
				_1c344c378_break_st(_self_, _62326_st.operator jule::Ptr<_1c2b5ee43_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b613b7_RetSt>>()) {
			_case_begin_1c58dcad0:;
			{
				_1c3451536_ret_st(_self_, _62326_st.operator jule::Ptr<_1c2b613b7_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c34875a0_PushToSliceExprModel>>()) {
			_case_begin_1c58dcb57:;
			{
				_1c349b240_push_to_slice(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1c34875a0_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c34879ac_MutSlicingExprModel>>()) {
			_case_begin_1c58dcbce:;
			{
				_1c349c483_mut_slicing(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1c34879ac_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3487d86_StrInsertBeginExprModel>>()) {
			_case_begin_1c58dcc56:;
			{
				_1c349c708_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1c3487d86_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1c58db6c2:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c58db66c:;
	};
}



inline void _1c3440d2d_scope_stmts(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b4c1e9_Scope>& _67336_s) {
	{
		auto &expr = _67336_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1c58ea24c:;
		if (it != expr.end()) {
			jule::Any _67421_st = *it;
			{
				_1c34dbacc_indent(_self_.get()._field_oc);
				_1c334ae9c_st(_self_, jule::Any(_67421_st));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c58ea24c:;
			++it;
			goto _iter_begin_1c58ea24c;
		}
		_iter_end_1c58ea24c:;
	};
}



inline void _1c338a5b3_scope(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c2b4c1e9_Scope> _68229_s) {
	_1c34dab97_add_indent(_self_.get()._field_oc);
	if (_68229_s.get()._field_deferred) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c3440d2d_scope_stmts(_self_, _68229_s);
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68229_s.get()._field_deferred) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1c347c188_func_scope(jule::Ptr<_1c338414a_ScopeCoder> _self_, jule::Ptr<_1c1cc9762_FnIns> _69834_f) {
	if ((_69834_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	if ((!(_1c1cc6a17_is_void(_69834_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _70521_types = _1c1cca279_types(_69834_f.ptr());;
		{
			auto &expr = _69834_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1c5901ad3:;
			if (it != expr.end()) {
				jule::I64 _70617_i = it - expr.begin();
				jule::Ptr<_205139176_Token> _70620_ident = *it;
				{
					if ((_20513b8c6_is_ignore_ident(_70620_ident.get()._field_kind) || _20513bb6d_is_anon_ident(_70620_ident.get()._field_kind))) {
						goto _iter_next_1c5901ad3;
					};
					_1c34dbacc_indent(_self_.get()._field_oc);
					_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_70521_types[_70617_i]));
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1c34da4b0_write(_self_.get()._field_oc, static__1c34a5106_to_local(_70620_ident.get()._field_row,_70620_ident.get()._field_column,_70620_ident.get()._field_kind));
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1c349d1ed_init_expr(_self_.get()._field_oc.get()._field_ec, _70521_types[_70617_i]);
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1c5901ad3:;
				++it;
				_70617_i++;
				goto _iter_begin_1c5901ad3;
			}
			_iter_end_1c5901ad3:;
		};
	};
	_1c3440d2d_scope_stmts(_self_, _69834_f.get()._field_scope);
	if ((_69834_f.get()._field_decl.get()._field_exceptional && _1c1cc6a17_is_void(_69834_f.get()._field_decl.ptr()))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1c338414a_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c334a9a2_ExprCoder> static__1c33c8029_new(jule::Ptr<_1c34d0d35_ObjectCoder>& _9024_oc) {
	return jule::new_ptr<_1c334a9a2_ExprCoder>(_1c334a9a2_ExprCoder{._field_oc=_9024_oc});
}



inline void _1c341cc61_string(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2abb9a4_Const>& _9627_c) {
	jule::Str _9713_content = _1c2abd467_read_str(_9627_c.ptr());;
	if ((_9713_content.len() == 0LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9713_content);;
	jule::Str _10313_len = _1c2a12213_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);;
	jule::Str _10413_lit = _1c349ddbe_cstr_lit(_10213_bytes);;
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c34da4b0_write(_self_.get()._field_oc, _10413_lit);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1c34da4b0_write(_self_.get()._field_oc, _10313_len);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c341cd93_boolean(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2abb9a4_Const>& _11328_c) {
	if (_1c2abd203_read_bool(_11328_c.ptr())) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1c3479b25_nil_lit(jule::Ptr<_1c334a9a2_ExprCoder> _self_) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1c3479c57_ftoa_special_cases(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::F64& _12539_x) {
	{
		
		if (_1c294dc10_is_nan(_12539_x)) {
			_case_begin_1c5911ebc:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1c2965d7b_is_inf(_12539_x,1LL)) {
			_case_begin_1c5912099:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1c2965d7b_is_inf(_12539_x,-1LL)) {
			_case_begin_1c5912110:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c59118a1:;
			{
				return false;
			}
		}
		_match_end_1c59117d5:;
	};
	return true;
}



inline void _1c3479d89_float32(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2abb9a4_Const>& _13928_c) {
	jule::F64 _14013_x = _1c2abde18_as_f64(_13928_c.ptr());;
	if (_1c3479c57_ftoa_special_cases(_self_, _14013_x)) {
		return;;
	};
	{
		
		if ((_14013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c5915454:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c5915179:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c5915113:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, _1c349e210_ftoa(_14013_x,32LL));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1c5915003:;
	};
}



inline void _1c341d15c_float64(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2abb9a4_Const>& _15828_c) {
	jule::F64 _15913_x = _1c2abde18_as_f64(_15828_c.ptr());;
	if (_1c3479c57_ftoa_special_cases(_self_, _15913_x)) {
		return;;
	};
	{
		
		if ((_15913_x == jule::MAX_F64)) {
			_case_begin_1c5918c71:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_15913_x == jule::MIN_F64)) {
			_case_begin_1c5918996:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c5918930:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, _1c349e210_ftoa(_15913_x,64LL));
			}
		}
		_match_end_1c591880e:;
	};
}



inline void _1c341d28e_constant(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2abb9a4_Const> _17732_c, jule::Bool _17743_fx32) {
	{
		
		if (_1c2ac0810_is_str(_17732_c.ptr())) {
			_case_begin_1c591b5c0:;
			{
				_1c341cc61_string(_self_, _17732_c);
			}
		}
		else if (_1c2ac059b_is_bool(_17732_c.ptr())) {
			_case_begin_1c591b636:;
			{
				_1c341cd93_boolean(_self_, _17732_c);
			}
		}
		else if (_1c2ac0a74_is_f64(_17732_c.ptr())) {
			_case_begin_1c591b69c:;
			{
				{
					
					if (_17743_fx32) {
						_case_begin_1c591db00:;
						{
							_1c3479d89_float32(_self_, _17732_c);
						}
					}
					else {
						_case_begin_1c591d77b:;
						{
							_1c341d15c_float64(_self_, _17732_c);
						}
					}
					_match_end_1c591d6b0:;
				};
			}
		}
		else if (_1c2ac00c3_is_i64(_17732_c.ptr())) {
			_case_begin_1c591b713:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, _1c349e4a7_itoa(static_cast<jule::I64>(_1c2abcc2a_read_i64(_17732_c.ptr()))));
			}
		}
		else if (_1c2ac0337_is_u64(_17732_c.ptr())) {
			_case_begin_1c591c0c6:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, _1c349e74e_utoa(static_cast<jule::U64>(_1c2abce8e_read_u64(_17732_c.ptr()))));
			}
		}
		else if (_1c2ac0cd8_is_nil(_17732_c.ptr())) {
			_case_begin_1c591c13c:;
			{
				_1c3479b25_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1c591b559:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c591b49e:;
	};
}



inline void _1c341d3c1_div_by_zero_binary(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_205139176_Token>& _20139_op, jule::Ptr<_1c1cb8740_OperandExprModel>& _20156_l, jule::Ptr<_1c1cb8740_OperandExprModel>& _20183_r) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20139_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1c59228a1:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c5922917:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1c592283a:;
	};
	if ((!(_2359c7e57_PRODUCTION))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c34dce52_loc_info(_self_.get()._field_oc, _20139_op);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c349cc03_expr(_self_, jule::Any(_20156_l.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c349cc03_expr(_self_, jule::Any(_20183_r.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c3498281_unsafe_binary(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb8c07_BinopExprModel> _22337_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c349c97d_model(_self_, jule::Any(_22337_m.get()._field_left.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c34da4b0_write(_self_.get()._field_oc, _22337_m.get()._field_op.get()._field_kind);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c349c97d_model(_self_, jule::Any(_22337_m.get()._field_right.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c34983b3_binary(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb8c07_BinopExprModel> _23330_m) {
	{
		auto &_match_expr{ _23330_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1c592ab73:;
			{
				if ((_1c2c24238_strct(_23330_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1c341d3c1_div_by_zero_binary(_self_, _23330_m.get()._field_op,_23330_m.get()._field_left,_23330_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1c592aab8:;
	};
	_1c3498281_unsafe_binary(_self_, _23330_m);
}



inline void _1c34984e5_var(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2b9a4de_Var> _24527_m) {
	if (_24527_m.get()._field_cpp_linked) {
		jule::Ptr<_204ec174a_Directive> _24717_d = _1c35243d9_find_directive(_24527_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_24717_d != nullptr)) {
			_1c34da4b0_write(_self_.get()._field_oc, _1c351c3c1_concat_all_parts(_24717_d.get()._field_args));
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a6712_var(_24527_m));
}



inline void _1c3498627_structure(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb3e55_Struct> _25629_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3521590_structure(_25629_m));
}



inline void _1c3498759_structure_ins(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns> _26037_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3521837_structure_ins(_26037_m));
}



inline void _1c349888b_unary(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb90ae_UnaryExprModel> _26429_m) {
	{
		auto &_match_expr{ _26429_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c593375d:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1c349cc03_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c59337c4:;
			{
				if ((_2359c7e57_PRODUCTION || (_1c2c232ae_sptr(_26429_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1c59336a3;
				};
				_1c349cc03_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1c34dce52_loc_info(_self_.get()._field_oc, _26429_m.get()._field_op);
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1c59336a3:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c34da4b0_write(_self_.get()._field_oc, _26429_m.get()._field_op.get()._field_kind);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c349cc03_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1c34989bd_structure_lit(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb9862_StructLitExprModel> _28837_m) {
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a61c3_structure_ins(_28837_m.get()._field_strct));
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto &expr = _28837_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1c593bec5:;
		if (it != expr.end()) {
			jule::I64 _29714_i = it - expr.begin();
			jule::Ptr<_1c1cb94aa_StructArgExprModel> _29721_arg = *it;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".", 1));
				_1c34da4b0_write(_self_.get()._field_oc, static__1c34a646a_field(_29721_arg.get()._field_field.get()._field_decl));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1c349cc03_expr(_self_, jule::Any(_29721_arg.get()._field_expr));
				if (((_28837_m.get()._field_args.len() - _29714_i) > 1LL)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1c593bec5:;
			++it;
			_29714_i++;
			goto _iter_begin_1c593bec5;
		}
		_iter_end_1c593bec5:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c3498b00_alloc_structure(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cb9b70_AllocStructLitExprModel> _30939_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a61c3_structure_ins(_30939_m.get()._field_lit.get()._field_strct));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1c34989bd_structure_lit(_self_, _30939_m.get()._field_lit);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c3498c32_casting(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cba1c0_CastingExprModel> _31731_m) {
	{
		
		if (((_1c2c2304a_prim(_31731_m.get()._field_kind.ptr()) != nullptr) && _1c2c28913_is_any(_1c2c2304a_prim(_31731_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1c5943839:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_31731_m.get()._field_kind));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1c349c97d_model(_self_, jule::Any(_31731_m.get()._field_expr));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1c2c23523_ptr(_31731_m.get()._field_expr_kind.ptr()) != nullptr) || (_1c2c23523_ptr(_31731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c59438a0:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_31731_m.get()._field_kind));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1c349cc03_expr(_self_, jule::Any(_31731_m.get()._field_expr));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1c2c2449c_trt(_31731_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1c2c2304a_prim(_31731_m.get()._field_expr_kind.ptr()) != nullptr) && _1c2c28913_is_any(_1c2c2304a_prim(_31731_m.get()._field_expr_kind.ptr()).ptr()))) {
			_case_begin_1c5943916:;
			{
				_1c349c97d_model(_self_, jule::Any(_31731_m.get()._field_expr));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_2359c7e57_PRODUCTION) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_31731_m.get()._field_kind));
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if (((_1c2c2449c_trt(_31731_m.get()._field_expr_kind.ptr()) != nullptr) && (_1c2c232ae_sptr(_31731_m.get()._field_kind.ptr()) != nullptr))) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_1c2c232ae_sptr(_31731_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_31731_m.get()._field_kind));
					};
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1c34dce52_loc_info(_self_.get()._field_oc, _31731_m.get()._field_token);
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1c2c2449c_trt(_31731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c594397c:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_31731_m.get()._field_kind));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1c349cc03_expr(_self_, jule::Any(_31731_m.get()._field_expr));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1c34da4b0_write(_self_.get()._field_oc, _1c2a124aa_itoa(static_cast<jule::I64>(_1c34ec0c6_find_type_offset(_self_.get()._field_oc.ptr(), _1c2c2449c_trt(_31731_m.get()._field_kind.ptr()),_31731_m.get()._field_expr_kind))));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1c59437c3:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_31731_m.get()._field_kind));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1c349cc03_expr(_self_, jule::Any(_31731_m.get()._field_expr));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c5943707:;
	};
}



inline void _1c3498d64_args(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Slice<jule::Any> _36728_args) {
	if ((_36728_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _36728_args;
		auto it = expr.begin();
		_iter_begin_1c5956264:;
		if (it != expr.end()) {
			jule::I64 _37114_i = it - expr.begin();
			jule::Any _37121_a = *it;
			{
				_1c349cc03_expr(_self_, jule::Any(_37121_a));
				if (((_36728_args.len() - _37114_i) > 1LL)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c5956264:;
			++it;
			_37114_i++;
			goto _iter_begin_1c5956264;
		}
		_iter_end_1c5956264:;
	};
}



inline void _1c3498e96_model_for_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Any _37938_expr) {
	{
		auto &_match_expr{ _37938_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc9762_FnIns>>()) {
			_case_begin_1c5958750:;
			{
				_1c349a52a_func_ins(_self_, _37938_expr.operator jule::Ptr<_1c1cc9762_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
			_case_begin_1c59587c7:;
			{
				jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _38521_ssie = _37938_expr.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>();;
				if ((_38521_ssie.get()._field_method != nullptr)) {
					_1c349a52a_func_ins(_self_, _38521_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1c59586ea:;
	};
	_1c349c97d_model(_self_, jule::Any(_37938_expr));
}



inline void _1c34990c8_push_call_inf(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cba9ea_FnCallExprModel>& _39434_m) {
	if ((_2359c7e57_PRODUCTION || ((!(_39434_m.get()._field_func.get()._field_anon)) && (!(_1c349ed48_is_builtin_call_has_debuginf(_39434_m)))))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_39434_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _39434_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
				_case_begin_1c595c798:;
				{
					if (_39434_m.get()._field_expr.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1c595c9c9;
				}
			}
			else {
				_case_begin_1c595c9c9:;
				{
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1c595c974:;
		};
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1c34dce52_loc_info(_self_.get()._field_oc, _39434_m.get()._field_token);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_39434_m.get()._field_args.len() != 0LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1c349920a_is_wrapped(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cba9ea_FnCallExprModel>& _41935_m) {
	if ((((!(_1c1cca4dd_is_builtin(_41935_m.get()._field_func.ptr()))) && (_41935_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1c1cc53a6_is_self(_41935_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _41935_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
				_case_begin_1c5961e0c:;
				{
					jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _42325_ssie = _41935_m.get()._field_expr.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>();;
					{
						
						if (_1c1cc561a_is_ref(_41935_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1c2c232ae_sptr(_42325_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1c5964cde:;
							{
								goto _match_end_1c5962abc;
							}
						}
						else {
							_case_begin_1c5962b33:;
							{
								if ((_1c2c24238_strct(_42325_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_42325_ssie.get()._field_expr.get()._field_lvalue))) {
										_1c34da4b0_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1c349c97d_model(_self_, jule::Any(_42325_ssie.get()._field_expr));
										_1c34da4b0_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1c5962abc:;
					};
				}
			}
			_match_end_1c5961d74:;
		};
	};
	return false;
}



inline void _1c349933c_pure_func_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cba9ea_FnCallExprModel>& _44339_m) {
	jule::Bool _44413_wrapped = _1c349920a_is_wrapped(_self_, _44339_m);;
	if (_44339_m.get()._field_is_co) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1c3498e96_model_for_call(_self_, jule::Any(_44339_m.get()._field_expr));
	if ((!(_1c1cca4dd_is_builtin(_44339_m.get()._field_func.ptr())))) {
		if ((_44339_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_44339_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1c352476e_has_directive(_44339_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _44339_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1c59698b5:;
					if (it != expr.end()) {
						jule::I64 _45326_i = it - expr.begin();
						jule::Ptr<_1c2c1b131_TypeKind> _45333_g = *it;
						{
							_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_45333_g));
							if (((_44339_m.get()._field_func.get()._field_generics.len() - _45326_i) > 1LL)) {
								_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1c59698b5:;
						++it;
						_45326_i++;
						goto _iter_begin_1c59698b5;
					}
					_iter_end_1c59698b5:;
				};
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1c34990c8_push_call_inf(_self_, _44339_m);
	jule::Bool _46417_locinfo = false;;
	if ((((!(_1c1cca4dd_is_builtin(_44339_m.get()._field_func.ptr()))) && (_44339_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1c1cc53a6_is_self(_44339_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _44339_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
				_case_begin_1c596d16b:;
				{
					jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _46825_ssie = _44339_m.get()._field_expr.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>();;
					{
						
						if (_1c1cc561a_is_ref(_44339_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1c5970a42:;
							{
								_1c349c97d_model(_self_, jule::Any(_46825_ssie.get()._field_expr));
							}
						}
						else if ((_1c2c232ae_sptr(_46825_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1c5970aa8:;
							{
								_1c349c97d_model(_self_, jule::Any(_46825_ssie.get()._field_expr));
								_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_2359c7e57_PRODUCTION))) {
									_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1c34dce52_loc_info(_self_.get()._field_oc, _44339_m.get()._field_token);
									_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1c596de19:;
							{
								if ((_1c2c24238_strct(_46825_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1c34da4b0_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_44413_wrapped) {
									_1c34da4b0_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1c349c97d_model(_self_, jule::Any(_46825_ssie.get()._field_expr));
								};
							}
						}
						_match_end_1c596dda3:;
					};
					if ((_44339_m.get()._field_args.len() > 0LL)) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>>()) {
				_case_begin_1c596d215:;
				{
					_1c349c97d_model(_self_, jule::Any(_44339_m.get()._field_expr.operator jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>().get()._field_expr));
					if ((!(_2359c7e57_PRODUCTION))) {
						_46417_locinfo=true;
					};
					if ((_44339_m.get()._field_args.len() > 0LL)) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1c596d0c2:;
		};
	};
	_1c3498d64_args(_self_, _44339_m.get()._field_args);
	if (_46417_locinfo) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1c34dce52_loc_info(_self_.get()._field_oc, _44339_m.get()._field_token);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_44413_wrapped) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_44339_m.get()._field_is_co) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1c349946e_func_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cba9ea_FnCallExprModel> _52233_m) {
	if (((_1c1cca4dd_is_builtin(_52233_m.get()._field_func.ptr()) || (!(_52233_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_52233_m.get()._field_except != nullptr) && (_52233_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1c349933c_pure_func_call(_self_, _52233_m);
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1c349933c_pure_func_call(_self_, _52233_m);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	if ((_52233_m.get()._field_except != nullptr)) {
		if (((_52233_m.get()._field_func.get()._field_result == nullptr) || (!(_52233_m.get()._field_assigned)))) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1c338a5b3_scope(_self_.get()._field_oc.get()._field_sc, _52233_m.get()._field_except);
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _54421_forwarded = _1c349ea7e_is_forwarded(_52233_m.get()._field_except);;
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_54421_forwarded) {
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1c338a5b3_scope(_self_.get()._field_oc.get()._field_sc, _52233_m.get()._field_except);
			if (_54421_forwarded) {
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1c349d1ed_init_expr(_self_, _52233_m.get()._field_func.get()._field_result);
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1c34db3b2_done_indent(_self_.get()._field_oc);
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1c34dce52_loc_info(_self_.get()._field_oc, _52233_m.get()._field_token);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1c1cc6a17_is_void(_52233_m.get()._field_func.get()._field_decl.ptr())))) {
			_1c34dbacc_indent(_self_.get()._field_oc);
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1c34db3b2_done_indent(_self_.get()._field_oc);
	};
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c34995a1_slice(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbada2_SliceExprModel> _57329_m) {
	if ((_57329_m.get()._field_elems.len() == 0LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, static__1c352076a_as_slice(_57329_m.get()._field_elem_kind));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, static__1c352076a_as_slice(_57329_m.get()._field_elem_kind));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1c3498d64_args(_self_, _57329_m.get()._field_elems);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c34996d3_indexing(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbb325_IndexingExprModel> _58532_m) {
	_1c349c97d_model(_self_, jule::Any(_58532_m.get()._field_expr.get()._field_model));
	{
		
		if (_2359c7e57_PRODUCTION || (_1c2c23523_ptr(_58532_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1c2c24711_map(_58532_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c598c93d:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1c349cc03_expr(_self_, jule::Any(_58532_m.get()._field_index.get()._field_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1c598c5b9:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1c34dce52_loc_info(_self_.get()._field_oc, _58532_m.get()._field_token);
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1c349cc03_expr(_self_, jule::Any(_58532_m.get()._field_index.get()._field_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c598c542:;
	};
}



inline void _1c3499815_unsafe_indexing(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c34873b3_UnsafeIndexingExprModel> _60439_m) {
	_1c349c97d_model(_self_, jule::Any(_60439_m.get()._field_node.get()._field_expr.get()._field_model));
	{
		
		if (_2359c7e57_PRODUCTION || (_1c2c23523_ptr(_60439_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1c2c24711_map(_60439_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5992b30:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1c349cc03_expr(_self_, jule::Any(_60439_m.get()._field_node.get()._field_index.get()._field_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1c59927ab:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("__at(", 5));
				_1c349cc03_expr(_self_, jule::Any(_60439_m.get()._field_node.get()._field_index.get()._field_model));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c5992734:;
	};
}



inline void _1c3499947_anon_func(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbb6cc_AnonFnExprModel> _62133_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522b9b_func(_62133_m.get()._field_func));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1c3519852_params_ins(_self_.get()._field_oc, _62133_m.get()._field_func.get()._field_params);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c352265c_func_ins_result(_62133_m.get()._field_func));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c347c188_func_scope(_self_.get()._field_oc.get()._field_sc, _62133_m.get()._field_func);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c3499a79_map(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbc007_MapExprModel> _63227_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_63227_m.get()._field_key_kind));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_63227_m.get()._field_val_kind));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_63227_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _63227_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1c599dca1:;
			if (it != expr.end()) {
				jule::I64 _63918_i = it - expr.begin();
				jule::Ptr<_1c1cbba84_KeyValPairExprModel> _63925_pair = *it;
				{
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1c349cc03_expr(_self_, jule::Any(_63925_pair.get()._field_key));
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1c349cc03_expr(_self_, jule::Any(_63925_pair.get()._field_val));
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_63227_m.get()._field_entries.len() - _63918_i) > 1LL)) {
						_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1c599dca1:;
				++it;
				_63918_i++;
				goto _iter_begin_1c599dca1;
			}
			_iter_end_1c599dca1:;
		};
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c3499bab_slicing(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbc546_SlicingExprModel> _65331_m) {
	_1c349c97d_model(_self_, jule::Any(_65331_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_2359c7e57_PRODUCTION))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c34dce52_loc_info(_self_.get()._field_oc, _65331_m.get()._field_token);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c349cc03_expr(_self_, jule::Any(_65331_m.get()._field_left));
	if ((_65331_m.get()._field_right != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c349cc03_expr(_self_, jule::Any(_65331_m.get()._field_right));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c3499cdd_trait_sub(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbca85_TraitSubIdentExprModel> _66933_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a58dc_trait_decl(_66933_m.get()._field_trt));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1c349c97d_model(_self_, jule::Any(_66933_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a539d_func(_66933_m.get()._field_method));
}



inline void _1c3499e20_structure_sub(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _67837_m) {
	_1c349c97d_model(_self_, jule::Any(_67837_m.get()._field_expr));
	if ((_67837_m.get()._field_field != nullptr)) {
		if ((_1c2c23523_ptr(_67837_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1c2c232ae_sptr(_67837_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_2359c7e57_PRODUCTION))) {
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1c34dce52_loc_info(_self_.get()._field_oc, _67837_m.get()._field_token);
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1c34da4b0_write(_self_.get()._field_oc, static__1c34a646a_field(_67837_m.get()._field_field.get()._field_decl));
	};
}



inline void _1c349a052_common_ident(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbde3d_CommonIdentExprModel> _69832_m) {
	_1c34da4b0_write(_self_.get()._field_oc, _69832_m.get()._field_ident);
}



inline void _1c349a184_common_sub(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel> _70234_m) {
	_1c349c97d_model(_self_, jule::Any(_70234_m.get()._field_expr));
	{
		
		if ((_1c2c23523_ptr(_70234_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1c59b2303:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1c2c232ae_sptr(_70234_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1c59b1ee5:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_2359c7e57_PRODUCTION))) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c34dce52_loc_info(_self_.get()._field_oc, _70234_m.get()._field_token);
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1c59b1e7e:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1c59b1e18:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, _70234_m.get()._field_ident);
}



inline void _1c349a2b6_array(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbdb52_ArrayExprModel> _72129_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3521ace_array(_72129_m.get()._field_kind));
	if ((_72129_m.get()._field_elems.len() == 0LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_72129_m.get()._field_elems.len() == 2LL) && (_72129_m.get()._field_elems[1LL] == nullptr))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1c349cc03_expr(_self_, jule::Any(_72129_m.get()._field_elems[0LL]));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1c3498d64_args(_self_, _72129_m.get()._field_elems);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1c349a3e8_func_ins_common(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc9762_FnIns> _74439_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522b9b_func(_74439_m));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c349a52a_func_ins(_self_, _74439_m);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349a52a_func_ins(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc9762_FnIns> _75132_m) {
	if (((_75132_m.get()._field_decl != nullptr) && _75132_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_204ec174a_Directive> _75317_d = _1c35243d9_find_directive(_75132_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_75317_d != nullptr)) {
			_1c34da4b0_write(_self_.get()._field_oc, _1c351c3c1_concat_all_parts(_75317_d.get()._field_args));
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a5645_func_ins(_75132_m));
}



inline void _1c349a65c_tuple(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbe79b_TupleExprModel> _76229_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _76229_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1c59c1e6c:;
		if (it != expr.end()) {
			jule::I64 _76414_i = it - expr.begin();
			jule::Ptr<_1c2be1ca5_Data> _76421_d = *it;
			{
				_1c349cc03_expr(_self_, jule::Any(_76421_d.get()._field_model));
				if (((_76229_m.get()._field_datas.len() - _76414_i) > 1LL)) {
					_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c59c1e6c:;
			++it;
			_76414_i++;
			goto _iter_begin_1c59c1e6c;
		}
		_iter_end_1c59c1e6c:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349a78e_new_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel> _77332_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_77332_m.get()._field_kind));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_77332_m.get()._field_init != nullptr)) {
		_1c349cc03_expr(_self_, jule::Any(_77332_m.get()._field_init));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349a8c1_out_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel> _78332_m) {
	if ((_78332_m.get()._field_debug && _2359c7e57_PRODUCTION)) {
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1c349cc03_expr(_self_, jule::Any(_78332_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349aa03_outln_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel> _79234_m) {
	if ((_79234_m.get()._field_debug && _2359c7e57_PRODUCTION)) {
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1c349cc03_expr(_self_, jule::Any(_79234_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349ab35_panic_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel> _80134_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1c349cc03_expr(_self_, jule::Any(_80134_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1c34dce52_loc_info(_self_.get()._field_oc, _80134_m.get()._field_token);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1c349ac67_assert_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel> _80935_m) {
	if (_2359c7e57_PRODUCTION) {
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1c349cc03_expr(_self_, jule::Any(_80935_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1c34da4b0_write(_self_.get()._field_oc, _1c349ddbe_cstr_lit(static_cast<jule::Slice<jule::U8>>(_80935_m.get()._field_log)));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1c34dce52_loc_info(_self_.get()._field_oc, _80935_m.get()._field_token);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1c349ad99_error_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel> _82234_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1c1cc6a17_is_void(_82234_m.get()._field_func.get()._field_decl.ptr())) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_82234_m.get()._field_func.get()._field_result));
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1c349cc03_expr(_self_, jule::Any(_82234_m.get()._field_err));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349aecb_copy_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc1d86_BuiltinCopyCallExprModel> _83533_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1c349c97d_model(_self_, jule::Any(_83533_m.get()._field_dest.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c2c2304a_prim(_83533_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1c349c97d_model(_self_, jule::Any(_83533_m.get()._field_src.get()._field_model));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c2c2304a_prim(_83533_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349b10d_make_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel> _85133_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_85133_m.get()._field_kind));
	if ((_1c2c23787_enm(_1c2c23c60_slc(_85133_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		if ((_85133_m.get()._field_cap != nullptr)) {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1c34da4b0_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	if ((_85133_m.get()._field_len != nullptr)) {
		_1c349cc03_expr(_self_, jule::Any(_85133_m.get()._field_len));
	} else {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("0", 1));
	};
	if ((_85133_m.get()._field_cap != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c349cc03_expr(_self_, jule::Any(_85133_m.get()._field_cap));
	};
	if ((_1c2c23787_enm(_1c2c23c60_slc(_85133_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c349d1ed_init_expr(_self_, _1c2c23c60_slc(_85133_m.get()._field_kind.ptr()).get()._field_elem);
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349b240_push_to_slice(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c34875a0_PushToSliceExprModel> _88037_m) {
	jule::I64 _88113_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1c349c97d_model(_self_, jule::Any(_88037_m.get()._field_dest));
	jule::Str _88313_dest = _self_.get()._field_oc.get()._field_obj.slice(_88113_n);;
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1c34da4b0_write(_self_.get()._field_oc, _88313_dest);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c34da4b0_write(_self_.get()._field_oc, _1c2a124aa_itoa(static_cast<jule::I64>(_88037_m.get()._field_elems.get()._field_elems.len())));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _88037_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1c59e9e1d:;
		if (it != expr.end()) {
			jule::Any _89021_e = *it;
			{
				_1c34da4b0_write(_self_.get()._field_oc, _88313_dest);
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1c349c97d_model(_self_, jule::Any(_89021_e));
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1c59e9e1d:;
			++it;
			goto _iter_begin_1c59e9e1d;
		}
		_iter_end_1c59e9e1d:;
	};
}



inline void _1c349b372_append_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel> _89935_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1c349c97d_model(_self_, jule::Any(_89935_m.get()._field_dest));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c349c97d_model(_self_, jule::Any(_89935_m.get()._field_elements));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349b4a4_clone_call(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel> _90734_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1c349c97d_model(_self_, jule::Any(_90734_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349b5d6_sizeof(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc2925_SizeofExprModel> _91330_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1c349c97d_model(_self_, jule::Any(_91330_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349b718_alignof(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc2b12_AlignofExprModel> _91931_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1c349c97d_model(_self_, jule::Any(_91931_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1c349b84a_rune_lit(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc2d87_RuneExprModel> _92528_m) {
	if ((_92528_m.get()._field_code <= 127LL)) {
		jule::Str _92721_b = _1c349d83b_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_92528_m.get()._field_code)));;
		if ((_92721_b == jule::Str("'", 1))) {
			_92721_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _92721_b) + jule::Str("'", 1));
	};
	return _1c349e4a7_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_92528_m.get()._field_code)));
}



inline void _1c349b98d_structure_static(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cbd789_StructStaticIdentExprModel> _93640_m) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a5645_func_ins(_93640_m.get()._field_method));
}



inline void _1c349bc13_integrated_to_str(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc3195_IntegratedToStrExprModel> _94041_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1c349c97d_model(_self_, jule::Any(_94041_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c349be88_backend_emit(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc355d_BackendEmitExprModel> _94636_m) {
	if ((_94636_m.get()._field_exprs.len() == 0LL)) {
		_1c34da4b0_write(_self_.get()._field_oc, _94636_m.get()._field_code);
		return;;
	};
	jule::I64 _95113_n = _self_.get()._field_oc.get()._field_obj.len();;
	{
		auto &expr = _94636_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c5a0a0c6:;
		if (it != expr.end()) {
			jule::I64 _95214_i = it - expr.begin();
			jule::Any _95221_expr = *it;
			{
				_1c349cc03_expr(_self_, jule::Any(_95221_expr));
				jule::Str _95417_obj = _self_.get()._field_oc.get()._field_obj.slice(_95113_n);;
				_94636_m.get()._field_exprs[_95214_i]=jule::Any(_95417_obj);
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_95113_n);
			}
			_iter_next_1c5a0a0c6:;
			++it;
			_95214_i++;
			goto _iter_begin_1c5a0a0c6;
		}
		_iter_end_1c5a0a0c6:;
	};
	_1c34da4b0_write(_self_.get()._field_oc, _1c2c91daa_format(_94636_m.get()._field_code,jule::Any(_94636_m.get()._field_exprs)));
}



inline void _1c349c20d_free(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c1cc3849_FreeExprModel> _96128_m) {
	_1c349cc03_expr(_self_, jule::Any(_96128_m.get()._field_expr));
	if (_2359c9981_RC) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1c349c483_mut_slicing(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c34879ac_MutSlicingExprModel> _97035_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c349c97d_model(_self_, jule::Any(_97035_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_2359c7e57_PRODUCTION))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c34dce52_loc_info(_self_.get()._field_oc, _97035_m.get()._field_token);
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c349cc03_expr(_self_, jule::Any(_97035_m.get()._field_left));
	if ((_97035_m.get()._field_right != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c349cc03_expr(_self_, jule::Any(_97035_m.get()._field_right));
	};
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1c349c708_str_insert_begin(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c3487d86_StrInsertBeginExprModel> _98740_m) {
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c349c97d_model(_self_, jule::Any(_98740_m.get()._field_dest));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1c349c97d_model(_self_, jule::Any(_98740_m.get()._field_expr));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1c349c97d_model(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Any _99529_m) {
	{
		auto &_match_expr{ _99529_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c5a16324:;
			{
				_1c349c97d_model(_self_, jule::Any(_99529_m.operator jule::Ptr<_1c2be1ca5_Data>().get()._field_model));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c1b131_TypeKind>>()) {
			_case_begin_1c5a1638a:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_99529_m.operator jule::Ptr<_1c2c1b131_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c5a16632:;
			{
				_1c341d28e_constant(_self_, _99529_m.operator jule::Ptr<_1c2abb9a4_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c5a16698:;
			{
				_1c34984e5_var(_self_, _99529_m.operator jule::Ptr<_1c2b9a4de_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2a137db_Trait>>()) {
			_case_begin_1c5a1670e:;
			{
				static__1c34a58dc_trait_decl(_99529_m.operator jule::Ptr<_1c2a137db_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb3e55_Struct>>()) {
			_case_begin_1c5a172c0:;
			{
				_1c3498627_structure(_self_, _99529_m.operator jule::Ptr<_1c1cb3e55_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb6ad4_StructIns>>()) {
			_case_begin_1c5a17336:;
			{
				_1c3498759_structure_ins(_self_, _99529_m.operator jule::Ptr<_1c1cb6ad4_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc9762_FnIns>>()) {
			_case_begin_1c5a1739c:;
			{
				_1c349a3e8_func_ins_common(_self_, _99529_m.operator jule::Ptr<_1c1cc9762_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c347a483_UnsafeBinopExprModel>>()) {
			_case_begin_1c5a17413:;
			{
				_1c3498281_unsafe_binary(_self_, _99529_m.operator jule::Ptr<_1c347a483_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb8c07_BinopExprModel>>()) {
			_case_begin_1c5a17479:;
			{
				_1c34983b3_binary(_self_, _99529_m.operator jule::Ptr<_1c1cb8c07_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb90ae_UnaryExprModel>>()) {
			_case_begin_1c5a174e0:;
			{
				_1c349888b_unary(_self_, _99529_m.operator jule::Ptr<_1c1cb90ae_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb9862_StructLitExprModel>>()) {
			_case_begin_1c5a17567:;
			{
				_1c34989bd_structure_lit(_self_, _99529_m.operator jule::Ptr<_1c1cb9862_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb9b70_AllocStructLitExprModel>>()) {
			_case_begin_1c5a175de:;
			{
				_1c3498b00_alloc_structure(_self_, _99529_m.operator jule::Ptr<_1c1cb9b70_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cba1c0_CastingExprModel>>()) {
			_case_begin_1c5a17666:;
			{
				_1c3498c32_casting(_self_, _99529_m.operator jule::Ptr<_1c1cba1c0_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>()) {
			_case_begin_1c5a176dd:;
			{
				_1c349946e_func_call(_self_, _99529_m.operator jule::Ptr<_1c1cba9ea_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbada2_SliceExprModel>>()) {
			_case_begin_1c5a17765:;
			{
				_1c34995a1_slice(_self_, _99529_m.operator jule::Ptr<_1c1cbada2_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbdb52_ArrayExprModel>>()) {
			_case_begin_1c5a177dc:;
			{
				_1c349a2b6_array(_self_, _99529_m.operator jule::Ptr<_1c1cbdb52_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c34873b3_UnsafeIndexingExprModel>>()) {
			_case_begin_1c5a17864:;
			{
				_1c3499815_unsafe_indexing(_self_, _99529_m.operator jule::Ptr<_1c34873b3_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbb325_IndexingExprModel>>()) {
			_case_begin_1c5a178db:;
			{
				_1c34996d3_indexing(_self_, _99529_m.operator jule::Ptr<_1c1cbb325_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbb6cc_AnonFnExprModel>>()) {
			_case_begin_1c5a17963:;
			{
				_1c3499947_anon_func(_self_, _99529_m.operator jule::Ptr<_1c1cbb6cc_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbc007_MapExprModel>>()) {
			_case_begin_1c5a179da:;
			{
				_1c3499a79_map(_self_, _99529_m.operator jule::Ptr<_1c1cbc007_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbc546_SlicingExprModel>>()) {
			_case_begin_1c5a17a62:;
			{
				_1c3499bab_slicing(_self_, _99529_m.operator jule::Ptr<_1c1cbc546_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>>()) {
			_case_begin_1c5a17ad9:;
			{
				_1c3499cdd_trait_sub(_self_, _99529_m.operator jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
			_case_begin_1c5a17b61:;
			{
				_1c3499e20_structure_sub(_self_, _99529_m.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbde3d_CommonIdentExprModel>>()) {
			_case_begin_1c5a17bd8:;
			{
				_1c349a052_common_ident(_self_, _99529_m.operator jule::Ptr<_1c1cbde3d_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>>()) {
			_case_begin_1c5a17c60:;
			{
				_1c349a184_common_sub(_self_, _99529_m.operator jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbe79b_TupleExprModel>>()) {
			_case_begin_1c5a17cd7:;
			{
				_1c349a65c_tuple(_self_, _99529_m.operator jule::Ptr<_1c1cbe79b_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>>()) {
			_case_begin_1c5a17d5e:;
			{
				_1c349a8c1_out_call(_self_, _99529_m.operator jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1c5a17dd6:;
			{
				_1c349aa03_outln_call(_self_, _99529_m.operator jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel>>()) {
			_case_begin_1c5a17e5d:;
			{
				_1c349a78e_new_call(_self_, _99529_m.operator jule::Ptr<_1c1cc0769_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>>()) {
			_case_begin_1c5a17ed5:;
			{
				_1c349ab35_panic_call(_self_, _99529_m.operator jule::Ptr<_1c1cc0b54_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>>()) {
			_case_begin_1c5a1805c:;
			{
				_1c349ac67_assert_call(_self_, _99529_m.operator jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c5a180d4:;
			{
				_1c349ad99_error_call(_self_, _99529_m.operator jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel>>()) {
			_case_begin_1c5a1815b:;
			{
				_1c349b10d_make_call(_self_, _99529_m.operator jule::Ptr<_1c1cc15b1_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>>()) {
			_case_begin_1c5a181d3:;
			{
				_1c349b372_append_call(_self_, _99529_m.operator jule::Ptr<_1c1cc199b_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>>()) {
			_case_begin_1c5a1825a:;
			{
				_1c349b4a4_clone_call(_self_, _99529_m.operator jule::Ptr<_1c1cc037e_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc1d86_BuiltinCopyCallExprModel>>()) {
			_case_begin_1c5a182d2:;
			{
				_1c349aecb_copy_call(_self_, _99529_m.operator jule::Ptr<_1c1cc1d86_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2925_SizeofExprModel>>()) {
			_case_begin_1c5a18359:;
			{
				_1c349b5d6_sizeof(_self_, _99529_m.operator jule::Ptr<_1c1cc2925_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2b12_AlignofExprModel>>()) {
			_case_begin_1c5a183d1:;
			{
				_1c349b718_alignof(_self_, _99529_m.operator jule::Ptr<_1c1cc2b12_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc2d87_RuneExprModel>>()) {
			_case_begin_1c5a18458:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, _1c349b84a_rune_lit(_self_, _99529_m.operator jule::Ptr<_1c1cc2d87_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbd789_StructStaticIdentExprModel>>()) {
			_case_begin_1c5a184d0:;
			{
				_1c349b98d_structure_static(_self_, _99529_m.operator jule::Ptr<_1c1cbd789_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc3195_IntegratedToStrExprModel>>()) {
			_case_begin_1c5a18557:;
			{
				_1c349bc13_integrated_to_str(_self_, _99529_m.operator jule::Ptr<_1c1cc3195_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc355d_BackendEmitExprModel>>()) {
			_case_begin_1c5a185ce:;
			{
				_1c349be88_backend_emit(_self_, _99529_m.operator jule::Ptr<_1c1cc355d_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cc3849_FreeExprModel>>()) {
			_case_begin_1c5a18656:;
			{
				_1c349c20d_free(_self_, _99529_m.operator jule::Ptr<_1c1cc3849_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c34879ac_MutSlicingExprModel>>()) {
			_case_begin_1c5a186cd:;
			{
				_1c349c483_mut_slicing(_self_, _99529_m.operator jule::Ptr<_1c34879ac_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3487d86_StrInsertBeginExprModel>>()) {
			_case_begin_1c5a18755:;
			{
				_1c349c708_str_insert_begin(_self_, _99529_m.operator jule::Ptr<_1c3487d86_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1c5a164cd:;
			{
				_1c34da4b0_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c5a16478:;
	};
}



inline void _1c349cc03_expr(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Any _109428_e) {
	_1c349c97d_model(_self_, jule::Any(_109428_e));
}



inline void _1c349ce78_val(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2be2d2d_Value> _109827_v) {
	if (_1c2be2668_is_const(_109827_v.get()._field_data.ptr())) {
		_1c341d28e_constant(_self_, _109827_v.get()._field_data.get()._field_constant,((_109827_v.get()._field_data.get()._field_kind != nullptr) && _1c2c27725_is_f32(_1c2c2304a_prim(_109827_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1c349cc03_expr(_self_, jule::Any(_109827_v.get()._field_data.get()._field_model));
}



inline void _1c349d1ed_init_expr(jule::Ptr<_1c334a9a2_ExprCoder> _self_, jule::Ptr<_1c2c1b131_TypeKind> _110633_t) {
	if ((_1c2c23523_ptr(_110633_t.ptr()) != nullptr)) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1c2a159ec_Enum> _111117_enm = _1c2c23787_enm(_110633_t.ptr());;
	if ((_111117_enm != nullptr)) {
		_1c349ce78_val(_self_, _111117_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3522e43_kind(_110633_t));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1c334a9a2_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1c34a0783_clone_func_decl(jule::Ptr<_1c1cb3e55_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1c3521590_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1c34a0a2a_clone_func_def(jule::Ptr<_1c1cb3e55_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1c3521590_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1c34a0431_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c34a1a09_TestCoder> static__1c34a1e7c_new(jule::Ptr<_1c34d0d35_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1c34a1a09_TestCoder>(_1c34a1a09_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1c2b77301_ImportInfo> _1c34a21e1_find_testing_package(jule::Ptr<_1c34a1a09_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1c5a3b646:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1c5a3b646:;
			++it;
			goto _iter_begin_1c5a3b646;
		}
		_iter_end_1c5a3b646:;
	};
	return nullptr;
}



inline void _1c34a2466_append_test(jule::Ptr<_1c34a1a09_TestCoder> _self_, jule::Ptr<_1c1cc9762_FnIns> _4335_f) {
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34a2b2b_call_tm_reset(_self_);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1c34da4b0_write(_self_.get()._field_oc, _1c349ddbe_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a5645_func_ins(_4335_f));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1c34a26db_append_package_tests(jule::Ptr<_1c34a1a09_TestCoder> _self_, jule::Ptr<_1c2b79eb3_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c5a432da:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1c5a43a27:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _6225_f = *it;
						{
							if (_1c352476e_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1c34a2466_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1c5a43a27:;
						++it;
						goto _iter_begin_1c5a43a27;
					}
					_iter_end_1c5a43a27:;
				};
			}
			_iter_next_1c5a432da:;
			++it;
			goto _iter_begin_1c5a432da;
		}
		_iter_end_1c5a432da:;
	};
}



inline jule::Bool _1c34a2950_ready_testing_package(jule::Ptr<_1c34a1a09_TestCoder> _self_) {
	jule::Ptr<_1c2b77301_ImportInfo> _7117_p = _1c34a21e1_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1c2b78731_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1c1cb7a6e_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1c1cb7a6e_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1c1cb7a6e_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1c34a2b2b_call_tm_reset(jule::Ptr<_1c34a1a09_TestCoder> _self_) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a539d_func(_self_.get()._field_tm_reset));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c34a2d07_call_tm_failed(jule::Ptr<_1c34a1a09_TestCoder> _self_) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a539d_func(_self_.get()._field_tm_failed));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c34a2ed3_call_tm_skipped(jule::Ptr<_1c34a1a09_TestCoder> _self_) {
	_1c34da4b0_write(_self_.get()._field_oc, static__1c34a539d_func(_self_.get()._field_tm_skipped));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c34a31ae_serialize(jule::Ptr<_1c34a1a09_TestCoder> _self_) {
	_1c351b887_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1c351b6ab_end(_self_.get()._field_oc);
	});;
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	if ((!(_1c34a2950_ready_testing_package(_self_)))) {
		_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1c34db3b2_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1c34da4b0_write(_self_.get()._field_oc, static__1c351e945_as_sptr(static__1c3521837_structure_ins(_self_.get()._field_t)));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1c34da4b0_write(_self_.get()._field_oc, static__1c3521837_structure_ins(_self_.get()._field_t));
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1c34dab97_add_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1c34a2d07_call_tm_failed(_self_);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1c34a2ed3_call_tm_skipped(_self_);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1c34a26db_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1c34db3b2_done_indent(_self_.get()._field_oc);
	_1c34dbacc_indent(_self_.get()._field_oc);
	_1c34da4b0_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1c34a1a09_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1c34a4633_to_ident(jule::Str _3024_ident) {
	return (jule::Str("_", 1) + _3024_ident);
}



inline jule::Str static__1c34a48ca_addr(jule::U64 _3520_addr) {
	return (jule::Str("_", 1) + _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3520_addr)),15LL));
}



inline jule::Str static__1c34a4c1b_to_out(jule::Str _4422_ident, jule::U64 _4434_addr) {
	if ((_4434_addr != 0LLU)) {
		jule::Str _4621_obj = static__1c34a48ca_addr(_4434_addr);;
		_4621_obj+=jule::Str("_", 1);
		_4621_obj+=_4422_ident;
		return _4621_obj;
	};
	return static__1c34a4633_to_ident(_4422_ident);
}



inline jule::Str static__1c34a5106_to_local(jule::I64 _6024_row, jule::I64 _6034_col, jule::Str _6044_ident) {
	jule::Str _6117_obj = _1c2a124aa_itoa(_6024_row);;
	_6117_obj+=_1c2a124aa_itoa(_6034_col);
	_6117_obj+=jule::Str("_", 1);
	_6117_obj+=_6044_ident;
	return static__1c34a4633_to_ident(_6117_obj);
}



inline jule::Str static__1c34a539d_func(jule::Ptr<_1c1cc65b6_Fn>& _6921_f) {
	{
		
		if (_6921_f.get()._field_cpp_linked) {
			_case_begin_1c5a6059e:;
			{
				return _6921_f.get()._field_ident;
			}
		}
		else if ((_6921_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1c5a60a22:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1c1cc6c7b_is_method(_6921_f.ptr())) {
			_case_begin_1c5a5ecc9:;
			{
				jule::Str _7621_obj = static__1c34a4c1b_to_out(_6921_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6921_f)));;
				if (_6921_f.get()._field_statically) {
					(_7621_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7621_obj;
				};
				return _7621_obj;
			}
		}
		else {
			_case_begin_1c5a5e757:;
			{
				return static__1c34a4c1b_to_out(_6921_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6921_f)));
			}
		}
		_match_end_1c5a5e6be:;
	};
}



inline jule::Str static__1c34a5645_func_ins(jule::Ptr<_1c1cc9762_FnIns>& _8829_f) {
	if (_1c1cca4dd_is_builtin(_8829_f.ptr())) {
		return (jule::Str("jule::", 6) + _8829_f.get()._field_decl.get()._field_ident);
	};
	if ((_8829_f.get()._field_decl.get()._field_cpp_linked || (_8829_f.get()._field_generics.len() == 0LL))) {
		return static__1c34a539d_func(_8829_f.get()._field_decl);
	};
	{
		auto &expr = _8829_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5a639e2:;
		if (it != expr.end()) {
			jule::I64 _9514_i = it - expr.begin();
			jule::Ptr<_1c1cc9762_FnIns> _9521_ins = *it;
			{
				if (_1c1ccaa60_same(_9521_ins.ptr(), _8829_f)) {
					jule::Str _9725_obj = static__1c34a539d_func(_8829_f.get()._field_decl);;
					_9725_obj+=jule::Str("_", 1);
					_9725_obj+=_1c2a124aa_itoa(_9514_i);
					return _9725_obj;
				};
			}
			_iter_next_1c5a639e2:;
			++it;
			_9514_i++;
			goto _iter_begin_1c5a639e2;
		}
		_iter_end_1c5a639e2:;
	};
	return jule::Str("__?__", 5);
}



inline jule::Str static__1c34a58dc_trait_decl(jule::Ptr<_1c2a137db_Trait> _10726_t) {
	if (_1c2a14358_is_builtin(_10726_t.ptr())) {
		return (jule::Str("jule::", 6) + _10726_t.get()._field_ident);
	};
	return static__1c34a4c1b_to_out(_10726_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_10726_t)));
}



inline jule::Str static__1c34a5b84_param(jule::Ptr<_1c1cc4c79_Param>& _11522_p) {
	if ((_20513bb6d_is_anon_ident(_11522_p.get()._field_ident) || _20513b8c6_is_ignore_ident(_11522_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1c1cc53a6_is_self(_11522_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_11522_p.get()._field_token == nullptr)) {
		return static__1c34a5106_to_local(0LL,0LL,_11522_p.get()._field_ident);
	};
	return static__1c34a5106_to_local(_11522_p.get()._field_token.get()._field_row,_11522_p.get()._field_token.get()._field_column,_11522_p.get()._field_ident);
}



inline jule::Str static__1c34a5e2b_structure(jule::Ptr<_1c1cb3e55_Struct>& _12926_s) {
	if (_12926_s.get()._field_cpp_linked) {
		if (_1c352476e_has_directive(_12926_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12926_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _12926_s.get()._field_ident);
	};
	return static__1c34a4c1b_to_out(_12926_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12926_s)));
}



inline jule::Str static__1c34a61c3_structure_ins(jule::Ptr<_1c1cb6ad4_StructIns>& _14034_s) {
	if ((_14034_s.get()._field_decl.get()._field_cpp_linked || (_14034_s.get()._field_generics.len() == 0LL))) {
		return static__1c34a5e2b_structure(_14034_s.get()._field_decl);
	};
	{
		auto &expr = _14034_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5a6b258:;
		if (it != expr.end()) {
			jule::I64 _14414_i = it - expr.begin();
			jule::Ptr<_1c1cb6ad4_StructIns> _14421_ins = *it;
			{
				if (_1c1cb76b7_same(_14421_ins.ptr(), _14034_s)) {
					jule::Str _14625_obj = static__1c34a5e2b_structure(_14034_s.get()._field_decl);;
					_14625_obj+=jule::Str("_", 1);
					_14625_obj+=_1c2a124aa_itoa(_14414_i);
					return _14625_obj;
				};
			}
			_iter_next_1c5a6b258:;
			++it;
			_14414_i++;
			goto _iter_begin_1c5a6b258;
		}
		_iter_end_1c5a6b258:;
	};
	return jule::Str("__?__", 5);
}



inline jule::Str static__1c34a646a_field(jule::Ptr<_1c1c07382_Field>& _15622_f) {
	if (_15622_f.get()._field_owner.get()._field_cpp_linked) {
		return _15622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _15622_f.get()._field_ident);
}



inline jule::Str static__1c34a6712_var(jule::Ptr<_1c2b9a4de_Var> _16423_v) {
	{
		
		if (_16423_v.get()._field_cpp_linked) {
			_case_begin_1c5a6e3d2:;
			{
				return _16423_v.get()._field_ident;
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1c5a6e448:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1c5a6d6bc:;
			{
				if ((_1c2c232ae_sptr(_16423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16423_v.get()._field_scope != nullptr)) {
			_case_begin_1c5a6d733:;
			{
				return static__1c34a5106_to_local(_16423_v.get()._field_token.get()._field_row,_16423_v.get()._field_token.get()._field_column,_16423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1c5a6d656:;
			{
				return static__1c34a4c1b_to_out(_16423_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_16423_v)));
			}
		}
		_match_end_1c5a6caea:;
	};
}



inline jule::Str static__1c34a69a9_iter_begin(jule::U64 _18326_it) {
	return (jule::Str("_iter_begin_", 12) + _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18326_it)),15LL));
}



inline jule::Str static__1c34a6c51_iter_end(jule::U64 _18824_it) {
	return (jule::Str("_iter_end_", 10) + _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18824_it)),15LL));
}



inline jule::Str static__1c34a6ee8_iter_next(jule::U64 _19325_it) {
	return (jule::Str("_iter_next_", 11) + _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19325_it)),15LL));
}



inline jule::Str static__1c34a7290_label(jule::Str _19821_ident) {
	return (jule::Str("_julec_label_", 13) + _19821_ident);
}



inline jule::Str static__1c34a7537_match_end(jule::U64 _20325_m) {
	return (jule::Str("_match_end_", 11) + _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_m)),15LL));
}



inline jule::Str static__1c34a77ce_case_begin(jule::U64 _20826_c) {
	return (jule::Str("_case_begin_", 12) + _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20826_c)),15LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1c34a41b0_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c34dc2e7_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c34d0b48_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c351d614_to_str(_1c351d328_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1c351d922_equals(jule::Ptr<_1c351d328_CustomType> _self_, jule::Ptr<_1c2c1b131_TypeKind> _3826_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c351d328_CustomType _Src) {
	_Stream << _1c351d614_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1c351e15e_to_type(jule::Str _5827_id) {
	_5827_id=_1c2b54685_real_kind_of(_5827_id);
	if (((97LL <= _5827_id[0LL]) && (_5827_id[0LL] <= 122LLU))) {
		_5827_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _5827_id);
}



inline jule::Str static__1c351e406_prim(jule::Ptr<_1c2c256e0_Prim> _6720_p) {
	return static__1c351e15e_to_type(_1c2c25a53_to_str(_6720_p.ptr()));
}



inline jule::Str static__1c351e69d_tuple(jule::Ptr<_1c2c2a151_Tuple> _7225_t) {
	jule::Str _7317_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7225_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1c5b606c1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c1b131_TypeKind> _7421_tk = *it;
			{
				_7317_obj+=static__1c3522e43_kind(_7421_tk);
				_7317_obj+=jule::Str(",", 1);
			}
			_iter_next_1c5b606c1:;
			++it;
			goto _iter_begin_1c5b606c1;
		}
		_iter_end_1c5b606c1:;
	};
	(_7317_obj).mut_slice(0LL,(_7317_obj.len() - 1LL));;
	_7317_obj+=jule::Str(">", 1);
	return _7317_obj;
}



inline jule::Str static__1c351e945_as_sptr(jule::Str _8423_elem) {
	jule::Str _8517_obj = jule::Str("jule::Ptr<", 10);;
	_8517_obj+=_8423_elem;
	_8517_obj+=jule::Str(">", 1);
	return _8517_obj;
}



inline jule::Str static__1c351ebdc_as_ptr(jule::Str _9222_elem) {
	return (_9222_elem + jule::Str("*", 1));
}



inline jule::Str static__1c351ee84_sptr(jule::Ptr<_1c2c28bee_Sptr> _9724_sptr) {
	return static__1c351e945_as_sptr(static__1c3522e43_kind(_9724_sptr.get()._field_elem));
}



inline jule::Str static__1c352022b_ptr(jule::Ptr<_1c2c2c263_Ptr> _10223_p) {
	;
	if (_1c2c2cc36_is_unsafe(_10223_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _10717_elem = static__1c3522e43_kind(_10223_p.get()._field_elem);;
	_10717_elem+=jule::Str("*", 1);
	return _10717_elem;
}



inline jule::Str static__1c35204c3_enum_decl(jule::Ptr<_1c2a159ec_Enum> _11329_e) {
	return static__1c3522e43_kind(_11329_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1c352076a_as_slice(jule::Ptr<_1c2c1b131_TypeKind> _11728_elem) {
	jule::Str _11817_obj = jule::Str("jule::Slice<", 12);;
	_11817_obj+=static__1c3522e43_kind(_11728_elem);
	_11817_obj+=jule::Str(">", 1);
	return _11817_obj;
}



inline jule::Str static__1c3520a12_slice(jule::Ptr<_1c2c2965b_Slc> _12525_s) {
	return static__1c352076a_as_slice(_12525_s.get()._field_elem);
}



inline jule::Str static__1c3520ca9_map(jule::Ptr<_1c2c2ac12_Map> _13023_m) {
	jule::Str _13117_obj = jule::Str("jule::Map<", 10);;
	_13117_obj+=static__1c3522e43_kind(_13023_m.get()._field_key);
	_13117_obj+=jule::Str(",", 1);
	_13117_obj+=static__1c3522e43_kind(_13023_m.get()._field_val);
	_13117_obj+=jule::Str(">", 1);
	return _13117_obj;
}



inline jule::Str static__1c3521051_trait_ident(jule::Str _13927_ident) {
	jule::Str _14017_obj = jule::Str("jule::Trait<", 12);;
	_14017_obj+=_13927_ident;
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1c35212e8_trait_decl(jule::Ptr<_1c2a137db_Trait> _14726_t) {
	return static__1c3521051_trait_ident(static__1c34a58dc_trait_decl(_14726_t));
}



inline jule::Str static__1c3521590_structure(jule::Ptr<_1c1cb3e55_Struct> _15225_s) {
	jule::Str _15317_rep = jule::Str();;
	if ((_15225_s.get()._field_cpp_linked && (!(_1c352476e_has_directive(_15225_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_15317_rep+=jule::Str("struct ", 7);
	};
	_15317_rep+=static__1c34a5e2b_structure(_15225_s);
	return _15317_rep;
}



inline jule::Str static__1c3521837_structure_ins(jule::Ptr<_1c1cb6ad4_StructIns> _16233_s) {
	if (_16233_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _16421_ident = static__1c34a61c3_structure_ins(_16233_s);;
		if ((_16233_s.get()._field_generics.len() > 0LL)) {
			_16421_ident+=jule::Str("<", 1);
			{
				auto &expr = _16233_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1c5b6c238:;
				if (it != expr.end()) {
					jule::Ptr<_1c2c1b131_TypeKind> _16729_g = *it;
					{
						_16421_ident+=static__1c3522e43_kind(_16729_g);
						_16421_ident+=jule::Str(",", 1);
					}
					_iter_next_1c5b6c238:;
					++it;
					goto _iter_begin_1c5b6c238;
				}
				_iter_end_1c5b6c238:;
			};
			(_16421_ident).mut_slice(0LL,(_16421_ident.len() - 1LL));;
			_16421_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_204ec174a_Directive> _17417_d = _1c35243d9_find_directive(_16233_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_17417_d != nullptr)) {
			(_16421_ident).buffer.insert(0, ((_1c351c3c1_concat_all_parts(_17417_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _16421_ident;
	};
	return static__1c34a61c3_structure_ins(_16233_s);
}



inline jule::Str static__1c3521ace_array(jule::Ptr<_1c2c2b806_Arr> _18425_a) {
	jule::Str _18517_obj = jule::Str("jule::Array<", 12);;
	_18517_obj+=static__1c3522e43_kind(_18425_a.get()._field_elem);
	_18517_obj+=jule::Str(",", 1);
	_18517_obj+=_1c2a124aa_itoa(_18425_a.get()._field_n);
	_18517_obj+=jule::Str(">", 1);
	return _18517_obj;
}



inline jule::Str static__1c3521d76_param(jule::Ptr<_1c1cc4c79_Param>& _19426_p) {
	jule::Str _19517_obj = jule::Str();;
	if (_19426_p.get()._field_variadic) {
		_19517_obj+=jule::Str("jule::Slice<", 12);
		_19517_obj+=static__1c3522e43_kind(_19426_p.get()._field_kind.get()._field_kind);
		_19517_obj+=jule::Str(">", 1);
	} else {
		_19517_obj+=static__1c3522e43_kind(_19426_p.get()._field_kind.get()._field_kind);
	};
	if (_19426_p.get()._field_reference) {
		_19517_obj+=jule::Str("&", 1);
	};
	return _19517_obj;
}



inline jule::Str static__1c352211d_param_ins(jule::Ptr<_1c1cc88c6_ParamIns>& _21030_p) {
	jule::Str _21117_obj = jule::Str();;
	if (_21030_p.get()._field_decl.get()._field_variadic) {
		_21117_obj+=jule::Str("jule::Slice<", 12);
		_21117_obj+=static__1c3522e43_kind(_21030_p.get()._field_kind);
		_21117_obj+=jule::Str(">", 1);
	} else {
		_21117_obj+=static__1c3522e43_kind(_21030_p.get()._field_kind);
	};
	if (_21030_p.get()._field_decl.get()._field_reference) {
		_21117_obj+=jule::Str("&", 1);
	};
	return _21117_obj;
}



inline jule::Str static__1c35223b5_func_result(jule::Ptr<_1c1cc65b6_Fn>& _22632_f) {
	if (_1c1cc6a17_is_void(_22632_f.ptr())) {
		if (_22632_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_22632_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1c3522e43_kind(_22632_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	};
	return static__1c3522e43_kind(_22632_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1c352265c_func_ins_result(jule::Ptr<_1c1cc9762_FnIns>& _24036_f) {
	if (_1c1cc6a17_is_void(_24036_f.get()._field_decl.ptr())) {
		if (_24036_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24036_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1c3522e43_kind(_24036_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1c3522e43_kind(_24036_f.get()._field_result);
}



inline jule::Str static__1c3522904_anon_func(jule::Ptr<_1c1cc9762_FnIns> _25329_f) {
	jule::Str _25417_decl = static__1c352265c_func_ins_result(_25329_f);;
	_25417_decl+=jule::Str("(", 1);
	if ((_25329_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _25329_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1c5b791ce:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cc88c6_ParamIns> _25725_param = *it;
				{
					if (_1c1cc53a6_is_self(_25725_param.get()._field_decl.ptr())) {
						goto _iter_next_1c5b791ce;
					};
					_25417_decl+=static__1c352211d_param_ins(_25725_param);
					_25417_decl+=jule::Str(",", 1);
				}
				_iter_next_1c5b791ce:;
				++it;
				goto _iter_begin_1c5b791ce;
			}
			_iter_end_1c5b791ce:;
		};
		(_25417_decl).mut_slice(0LL,(_25417_decl.len() - 1LL));;
	} else {
		_25417_decl+=jule::Str("void", 4);
	};
	_25417_decl+=jule::Str(")", 1);
	return _25417_decl;
}



inline jule::Str static__1c3522b9b_func(jule::Ptr<_1c1cc9762_FnIns> _27324_f) {
	jule::Str _27417_obj = jule::Str("jule::Fn<", 9);;
	_27417_obj+=static__1c3522904_anon_func(_27324_f);
	_27417_obj+=jule::Str(">", 1);
	return _27417_obj;
}



inline jule::Str static__1c3522e43_kind(jule::Ptr<_1c2c1b131_TypeKind> _28124_k) {
	{
		
		if (_1c2c1bc8b_cpp_linked(_28124_k.ptr())) {
			_case_begin_1c5b7bb1b:;
			{
				return _28124_k.get()._field_cpp_ident;
			}
		}
		else if ((_1c2c2304a_prim(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7bb93:;
			{
				return static__1c351e406_prim(_1c2c2304a_prim(_28124_k.ptr()));
			}
		}
		else if ((_1c2c24975_tup(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7bc1a:;
			{
				return static__1c351e69d_tuple(_1c2c24975_tup(_28124_k.ptr()));
			}
		}
		else if ((_1c2c232ae_sptr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7bc92:;
			{
				return static__1c351ee84_sptr(_1c2c232ae_sptr(_28124_k.ptr()));
			}
		}
		else if ((_1c2c23523_ptr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7bd19:;
			{
				return static__1c352022b_ptr(_1c2c23523_ptr(_28124_k.ptr()));
			}
		}
		else if ((_1c2c23787_enm(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7bd91:;
			{
				return static__1c35204c3_enum_decl(_1c2c23787_enm(_28124_k.ptr()));
			}
		}
		else if ((_1c2c23c60_slc(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7be18:;
			{
				return static__1c3520a12_slice(_1c2c23c60_slc(_28124_k.ptr()));
			}
		}
		else if ((_1c2c24711_map(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7be90:;
			{
				return static__1c3520ca9_map(_1c2c24711_map(_28124_k.ptr()));
			}
		}
		else if ((_1c2c2449c_trt(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7c017:;
			{
				return static__1c35212e8_trait_decl(_1c2c2449c_trt(_28124_k.ptr()));
			}
		}
		else if ((_1c2c24238_strct(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7c08e:;
			{
				return static__1c3521837_structure_ins(_1c2c24238_strct(_28124_k.ptr()));
			}
		}
		else if ((_1c2c239eb_arr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7c116:;
			{
				return static__1c3521ace_array(_1c2c239eb_arr(_28124_k.ptr()));
			}
		}
		else if ((_1c2c23ec4_fnc(_28124_k.ptr()) != nullptr)) {
			_case_begin_1c5b7c18d:;
			{
				return static__1c3522b9b_func(_1c2c23ec4_fnc(_28124_k.ptr()));
			}
		}
		_match_end_1c5b7b951:;
	};
	{
		auto &_match_expr{ _28124_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c351d328_CustomType>>()) {
			_case_begin_1c5b85086:;
			{
				return _28124_k.get()._field_kind.operator jule::Ptr<_1c351d328_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1c5b843a4:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1c5b8434e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c351db42_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c5ba004b_name(_1c35531d7_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1c5ba017d_what(_1c35531d7_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _1c5ba02b0_reset(_1c35531d7_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1c5ba03e2_short(_1c35531d7_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c35531d7_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c5ba301b_name(_1c35531d7_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1c5ba2c74_what(_1c35531d7_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _1c5ba1844_reset(_1c35531d7_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1c5ba3170_short(_1c35531d7_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c35531d7_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c5ba6140_name(_1c35531d7_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1c5ba5d98_what(_1c35531d7_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _1c5ba4968_reset(_1c35531d7_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1c5ba6294_short(_1c35531d7_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c35531d7_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c5ba92a8_name(_1c35531d7_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1c5ba9011_what(_1c35531d7_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _1c5ba7ad1_reset(_1c35531d7_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1c5ba940c_short(_1c35531d7_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c35531d7_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c5bac3cc_name(_1c35531d7_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1c5bac135_what(_1c35531d7_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _1c5baac05_reset(_1c35531d7_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1c5bac531_short(_1c35531d7_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c35531d7_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c355444c_FlagSet> static__1c3554738_new(void) {
	return jule::new_ptr<_1c355444c_FlagSet>(_1c355444c_FlagSet{._field__flags=jule::Slice<jule::Trait<_1c2d421ad_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1c2d421ad_CommonFlag> _1c3554c00_find_flag(_1c355444c_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1c5bb5a89:;
		if (it != expr.end()) {
			jule::Trait<_1c2d421ad_CommonFlag> _7221_flag = *it;
			{
				if ((_1c2d421ad_CommonFlag_mptr_data[(_7221_flag).type_offset]._1c3552a55_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1c5bb5a89:;
			++it;
			goto _iter_begin_1c5bb5a89;
		}
		_iter_end_1c5bb5a89:;
	};
	return nullptr;
}



inline jule::Trait<_1c2d421ad_CommonFlag> _1c355500d_find_flag_short(_1c355444c_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1c5bb6cee:;
		if (it != expr.end()) {
			jule::Trait<_1c2d421ad_CommonFlag> _8221_flag = *it;
			{
				if ((_1c2d421ad_CommonFlag_mptr_data[(_8221_flag).type_offset]._1c3552b87_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1c5bb6cee:;
			++it;
			goto _iter_begin_1c5bb6cee;
		}
		_iter_end_1c5bb6cee:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1c2d421ad_CommonFlag>> _1c3555272_flags(_1c355444c_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c3555580_parse(_1c355444c_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1c3556b58_ArgParser _11617_ap = _1c3556b58_ArgParser{._field_set=(*_self_), ._field_args=_11528_args};;
	({
		auto except = _1c3558044_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1c355575b_reset(_1c355444c_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1c5bba3c9:;
		if (it != expr.end()) {
			jule::Trait<_1c2d421ad_CommonFlag> _12616_f = *it;
			{
				_1c2d421ad_CommonFlag_mptr_data[(_12616_f).type_offset]._1c3552deb_reset(_12616_f);
			}
			_iter_next_1c5bba3c9:;
			++it;
			goto _iter_begin_1c5bba3c9;
		}
		_iter_end_1c5bba3c9:;
	};
}



inline jule::Ptr<_1c35531d7_Flag_4> _1c3555bac_add_flag_common_0(_1c355444c_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1c5c348a5:;
			{
				goto _match_end_1c5c34850;
			}
		}
		_match_end_1c5c34850:;
	};
	if ((_1c3554c00_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1c355500d_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1c35531d7_Flag_4> _14817_flag = jule::new_ptr<_1c35531d7_Flag_4>(_1c35531d7_Flag_4{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what});;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1c2d421ad_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1c35531d7_Flag_3> _1c3555bac_add_flag_common_1(_1c355444c_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1c5c3d6a0:;
			{
				goto _match_end_1c5c3d64a;
			}
		}
		_match_end_1c5c3d64a:;
	};
	if ((_1c3554c00_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1c355500d_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1c35531d7_Flag_3> _14817_flag = jule::new_ptr<_1c35531d7_Flag_3>(_1c35531d7_Flag_3{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what});;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1c2d421ad_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}





inline void _1c3556619_add_var_0(_1c355444c_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1c35531d7_Flag_4> _17617_flag = _1c3555bac_add_flag_common_0(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1c3556619_add_var_1(_1c355444c_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1c35531d7_Flag_3> _17617_flag = _1c3555bac_add_flag_common_1(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1c355444c_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c1cb6e8b_to_str(_1c1cb6ad4_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();;
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1c4a703e5:;
			if (it != expr.end()) {
				jule::Ptr<_1c2c1b131_TypeKind> &_24820_g = *it;
				{
					_24417_kind+=_1c2c1b4d8_to_str(_24820_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_1c4a703e5:;
				++it;
				goto _iter_begin_1c4a703e5;
			}
			_iter_end_1c4a703e5:;
		};
		(_24417_kind).mut_slice(0LL,(_24417_kind.len() - 1LL));;
		_24417_kind+=jule::Str("]", 1);
	};
	return _24417_kind;
}



inline jule::Bool _1c1cb7299_equals(jule::Ptr<_1c1cb6ad4_StructIns> _self_, jule::Ptr<_1c2c1b131_TypeKind> _25926_other) {
	jule::Ptr<_1c1cb6ad4_StructIns> _26013_s = _1c2c24238_strct(_25926_other.ptr());;
	if ((_26013_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _26013_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _26013_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27317_i = 0LL;;
	for (; (_27317_i < _self_.get()._field_generics.len()); (_27317_i)++) {
		{
			if ((!(_1c2c1b7e6_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			};
		}
	_iter_next_1c4a742d9:;
	}
	_iter_end_1c4a742d9:;;
	return true;
}



inline jule::Bool _1c1cb76b7_same(_1c1cb6ad4_StructIns* _self_, jule::Ptr<_1c1cb6ad4_StructIns> _28723_s) {
	if ((((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1c4a76b7c:;
		if (it != expr.end()) {
			jule::I64 _29213_i = it - expr.begin();
			jule::Ptr<_1c2c1b131_TypeKind> &_29216_g = *it;
			{
				if ((!(_1c2c1b7e6_equals(_29216_g, _28723_s.get()._field_generics[_29213_i])))) {
					return false;
				};
			}
			_iter_next_1c4a76b7c:;
			++it;
			_29213_i++;
			goto _iter_begin_1c4a76b7c;
		}
		_iter_end_1c4a76b7c:;
	};
	return true;
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c1cb7a6e_find_method(_1c1cb6ad4_StructIns* _self_, jule::Str _30234_ident, jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1c4a7884e:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _30321_f = *it;
			{
				if (((_30321_f.get()._field_statically == _30246_statically) && (_30321_f.get()._field_ident == _30234_ident))) {
					return _30321_f;
				};
			}
			_iter_next_1c4a7884e:;
			++it;
			goto _iter_begin_1c4a7884e;
		}
		_iter_end_1c4a7884e:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1cb6276_FieldIns> _1c1cb7d7c_find_field(_1c1cb6ad4_StructIns* _self_, jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1c4a79dd3:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6276_FieldIns> _31421_f = *it;
			{
				if ((_31421_f.get()._field_decl.get()._field_ident == _31333_ident)) {
					return _31421_f;
				};
			}
			_iter_next_1c4a79dd3:;
			++it;
			goto _iter_begin_1c4a79dd3;
		}
		_iter_end_1c4a79dd3:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1cb6ad4_StructIns _Src) {
	_Stream << _1c1cb6e8b_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c34d0d35_ObjectCoder> static__1c34d9c1d_new(jule::Ptr<_1db2583d0_IR>& _7128_ir, _1c34dc2e7_SerializationInfo _7137_info) {
	jule::Ptr<_1c34d0d35_ObjectCoder> _7217_oc = jule::new_ptr<_1c34d0d35_ObjectCoder>(_1c34d0d35_ObjectCoder{._field_ir=_7128_ir, ._field_info=_7137_info});;
	_7217_oc.get()._field_ec=static__1c33c8029_new(_7217_oc);
	_7217_oc.get()._field_sc=static__1c338abce_new(_7217_oc);
	return _7217_oc;
}



inline void _1c34da4b0_write(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Str _8125_s) {
	_self_.get()._field_obj+=_8125_s;
}



inline void _1c34dab97_add_indent(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1c34db3b2_done_indent(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1c34dbacc_indent(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1c34ec0c6_find_type_offset(_1c34d0d35_ObjectCoder* _self_, jule::Ptr<_1c2a137db_Trait> _10131_t, jule::Ptr<_1c2c1b131_TypeKind> _10146_k) {
	if ((_10131_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1c1cb6ad4_StructIns> _10517_s = nullptr;;
	if ((_1c2c232ae_sptr(_10146_k.ptr()) != nullptr)) {
		_10146_k=_1c2c232ae_sptr(_10146_k.ptr()).get()._field_elem;
	};
	if ((_1c2c24238_strct(_10146_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10517_s=_1c2c24238_strct(_10146_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c5a7a751:;
		if (it != expr.end()) {
			jule::Ptr<_1c34d0b48_TraitHash> &_11316_hash = *it;
			{
				if (((_11316_hash.get()._field_t == _10131_t) && (_11316_hash.get()._field_s == _10517_s))) {
					return _11316_hash.get()._field_i;
				};
			}
			_iter_next_1c5a7a751:;
			++it;
			goto _iter_begin_1c5a7a751;
		}
		_iter_end_1c5a7a751:;
	};
	return -1LL;
}



inline void _1c34dce52_loc_info(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_205139176_Token>& _12229_t) {
	jule::Str &_12314_loc = _12229_t.get()._field_file.get()._field_path;;
	if (_2359c7e57_PRODUCTION) {
		{
			
			if (_204c1a131_has_prefix(_12314_loc,_2046ee8d5_PATH_STDLIB)) {
				_case_begin_1c5a7c610:;
				{
					_1c34da4b0_write(_self_, _1c349dad3_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc.slice((_204c674ad_dir(_2046ee8d5_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_204c1a131_has_prefix(_12314_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1c5a7c302:;
				{
					_1c34da4b0_write(_self_, _1c349dad3_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc.slice((_204c674ad_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1c5a7c28b:;
				{
					_1c34da4b0_write(_self_, _1c349dad3_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc)));
				}
			}
			_match_end_1c5a7c1c0:;
		};
	} else {
		_1c34da4b0_write(_self_, _1c349dad3_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc)));
	};
	_1c34da4b0_write(_self_, jule::Str(":", 1));
	_1c34da4b0_write(_self_, _1c2a124aa_itoa(_12229_t.get()._field_row));
	_1c34da4b0_write(_self_, jule::Str(":", 1));
	_1c34da4b0_write(_self_, _1c2a124aa_itoa(_12229_t.get()._field_column));
}



inline void _1c34dd10b_head(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3513076_Time _14913_time = static__1c351361a_now();;
	_1c35128a0_AbsTime _15013_abs = _1c3514c59_abs(&_14913_time);;
	_1c34da4b0_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1c34da4b0_write(_self_, jule::Str("// JuleC version: ", 18));
	_1c34da4b0_write(_self_, jule::Str("jule0.0.11 @master", 18));
	_1c34da4b0_write(_self_, jule::Str("\n", 1));
	_1c34da4b0_write(_self_, jule::Str("// Date: ", 9));
	_1c34da4b0_write(_self_, _1c2a11d7d_fmt_uint(_15013_abs._field_day,10LL));
	_1c34da4b0_write(_self_, jule::Str("/", 1));
	_1c34da4b0_write(_self_, _1c2a11d7d_fmt_uint(_15013_abs._field_month,10LL));
	_1c34da4b0_write(_self_, jule::Str("/", 1));
	_1c34da4b0_write(_self_, _1c2a11d7d_fmt_uint(_15013_abs._field_year,10LL));
	_1c34da4b0_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c34da4b0_write(_self_, _self_.get()._field_info._field_compiler);
	_1c34da4b0_write(_self_, jule::Str(" ", 1));
	_1c34da4b0_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	if (_2359c7e57_PRODUCTION) {
		_1c34da4b0_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2359c9981_RC))) {
		_1c34da4b0_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2359c9b90_SAFETY))) {
		_1c34da4b0_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c34da4b0_write(_self_, jule::Str("\n\n#include \"", 12));
	_1c34da4b0_write(_self_, _20470e2c9_PATH_API);
	_1c34da4b0_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1c34d2ae5_links(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1c5a8a81b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _18216_used = *it;
			{
				{
					
					if ((!(_18216_used.get()._field_cpp_linked))) {
						_case_begin_1c5a8b50e:;
						{
							goto _iter_next_1c5a8a81b;
						}
					}
					else if (_2046ce6ea_is_std_header_path(_18216_used.get()._field_path)) {
						_case_begin_1c5a8b201:;
						{
							_1c34da4b0_write(_self_, jule::Str("#include ", 9));
							_1c34da4b0_write(_self_, _18216_used.get()._field_path);
							_1c34da4b0_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1c5a8b18a:;
						{
							_1c34da4b0_write(_self_, jule::Str("#include \"", 10));
							_1c34da4b0_write(_self_, _18216_used.get()._field_path);
							_1c34da4b0_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1c5a8b0be:;
				};
			}
			_iter_next_1c5a8a81b:;
			++it;
			goto _iter_begin_1c5a8a81b;
		}
		_iter_end_1c5a8a81b:;
	};
}



inline void _1c34ed89c_prepare_structures(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1c5a8e006:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _19921_s = *it;
			{
				if ((_19921_s.get()._field_token != nullptr)) {
					_1c351c129_prepare_structure(_19921_s);
				};
			}
			_iter_next_1c5a8e006:;
			++it;
			goto _iter_begin_1c5a8e006;
		}
		_iter_end_1c5a8e006:;
	};
}



inline void _1c3517ce5_iter_packages(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)> _20633_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1c5a90975:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _20721_used = *it;
			{
				if ((!(_20721_used.get()._field_cpp_linked))) {
					_20633_f(_20721_used.get()._field_package);
				};
			}
			_iter_next_1c5a90975:;
			++it;
			goto _iter_begin_1c5a90975;
		}
		_iter_end_1c5a90975:;
	};
	_20633_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1c3517e27_build_trait_map(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3517ce5_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>([=](jule::Ptr<_1c2b79eb3_Package>& _21636_pkg) mutable -> void {
		_1c351bdc6_iter_files(_21636_pkg,jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>([=](jule::Ptr<_1c2bdbbe5_SymbolTable>& _21737_file) mutable -> void {
			{
				auto &expr = _21737_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1c5a9412c:;
				if (it != expr.end()) {
					jule::Ptr<_1c2a137db_Trait> _21829_t = *it;
					{
						if ((_21829_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21829_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1c34d0b48_TraitHash>(_1c34d0b48_TraitHash{._field_t=_21829_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1c5a9412c;
						};
						jule::I64 _23029_i = 0LL;;
						{
							auto &expr = _21829_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1c5a954a2:;
							if (it != expr.end()) {
								jule::Ptr<_1c1cb3e55_Struct> _23133_s = *it;
								{
									{
										auto &expr = _23133_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1c5a96371:;
										if (it != expr.end()) {
											jule::Ptr<_1c1cb6ad4_StructIns> _23237_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1c34d0b48_TraitHash>(_1c34d0b48_TraitHash{._field_t=_21829_t, ._field_s=_23237_ins, ._field_i=_23029_i}));;
												(_23029_i)++;
											}
											_iter_next_1c5a96371:;
											++it;
											goto _iter_begin_1c5a96371;
										}
										_iter_end_1c5a96371:;
									};
								}
								_iter_next_1c5a954a2:;
								++it;
								goto _iter_begin_1c5a954a2;
							}
							_iter_end_1c5a954a2:;
						};
					}
					_iter_next_1c5a9412c:;
					++it;
					goto _iter_begin_1c5a9412c;
				}
				_iter_end_1c5a9412c:;
			};
		}));
	}));
}



inline void _1c3518059_trait_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3517ce5_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>([=](jule::Ptr<_1c2b79eb3_Package>& _24736_pkg) mutable -> void {
		_1c351bdc6_iter_files(_24736_pkg,jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>([=](jule::Ptr<_1c2bdbbe5_SymbolTable>& _24837_file) mutable -> void {
			{
				auto &expr = _24837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1c5a9895b:;
				if (it != expr.end()) {
					jule::Ptr<_1c2a137db_Trait> _24929_t = *it;
					{
						if ((_24929_t.get()._field_token == nullptr)) {
							return;;
						};
						_1c34dbacc_indent(_self_);
						_1c34da4b0_write(_self_, jule::Str("struct ", 7));
						_1c34da4b0_write(_self_, static__1c34a58dc_trait_decl(_24929_t));
						_1c34da4b0_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1c5a9895b:;
					++it;
					goto _iter_begin_1c5a9895b;
				}
				_iter_end_1c5a9895b:;
			};
		}));
	}));
}



inline void _1c351818b_structure_plain_decl(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb3e55_Struct>& _26245_s) {
	{
		auto &expr = _26245_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5a9ac6b:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _26321_ins = *it;
			{
				_1c34da4b0_write(_self_, jule::Str("struct ", 7));
				_1c34da4b0_write(_self_, static__1c34a61c3_structure_ins(_26321_ins));
				_1c34da4b0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c5a9ac6b:;
			++it;
			goto _iter_begin_1c5a9ac6b;
		}
		_iter_end_1c5a9ac6b:;
	};
}



inline void _1c35182bd_structure_plain_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1c5a9c6eb:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _27121_s = *it;
			{
				if ((_27121_s.get()._field_token != nullptr)) {
					_1c351818b_structure_plain_decl(_self_, _27121_s);
				};
			}
			_iter_next_1c5a9c6eb:;
			++it;
			goto _iter_begin_1c5a9c6eb;
		}
		_iter_end_1c5a9c6eb:;
	};
}



inline void _1c3518400_field_decl(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6276_FieldIns>& _27835_f) {
	_1c34da4b0_write(_self_, static__1c3522e43_kind(_27835_f.get()._field_kind));
	_1c34da4b0_write(_self_, jule::Str(" ", 1));
	_1c34da4b0_write(_self_, static__1c34a646a_field(_27835_f.get()._field_decl));
	_1c34da4b0_write(_self_, jule::Str(" = ", 3));
	if ((_27835_f.get()._field_default == nullptr)) {
		_1c349d1ed_init_expr(_self_.get()._field_ec, _27835_f.get()._field_kind);
	} else {
		_1c349cc03_expr(_self_.get()._field_ec, jule::Any(_27835_f.get()._field_default.get()._field_model));
	};
	_1c34da4b0_write(_self_, jule::Str(";", 1));
}



inline void _1c3518532_structure_destructor(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _29345_s) {
	;
	jule::Ptr<_1c1cc65b6_Fn> _29513_dispose_method = _1c1cb7a6e_find_method(_29345_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29617_disposed = static__1c2b9b666_dispose(_29513_dispose_method);;
	if ((!(_29617_disposed))) {
		return;;
	};
	_1c34da4b0_write(_self_, jule::Str("~", 1));
	_1c34da4b0_write(_self_, static__1c34a61c3_structure_ins(_29345_s));
	_1c34da4b0_write(_self_, jule::Str("(void) { ", 9));
	_1c34da4b0_write(_self_, static__1c34a539d_func(_29513_dispose_method));
	_1c34da4b0_write(_self_, jule::Str("(this); }", 9));
}



inline void _1c3518664_structure_derive_defs_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _30848_s) {
	if (_1c1cb5781_is_derives(_30848_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, static__1c34a0783_clone_func_decl(_30848_s.get()._field_decl));
		_1c34da4b0_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1c3518796_structure_operator_eq(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Str& _31642_ident, jule::Ptr<_1c1cb6ad4_StructIns>& _31659_s) {
	if ((_31659_s.get()._field_operators._field_eq != nullptr)) {
		_1c3518a0a_structure_operator(_self_, _31642_ident,_31659_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1c34dbacc_indent(_self_);
	if (_2359c8584_OPT_INLINE) {
		_1c34da4b0_write(_self_, jule::Str("inline ", 7));
	};
	_1c34da4b0_write(_self_, jule::Str("bool operator==(", 16));
	_1c34da4b0_write(_self_, _31642_ident);
	_1c34da4b0_write(_self_, jule::Str(" _other) {", 10));
	if ((_31659_s.get()._field_fields.len() > 0LL)) {
		_1c34dab97_add_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("\n", 1));
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("return ", 7));
		_1c34dab97_add_indent(_self_);
		jule::Bool _33621_writed = false;;
		{
			auto &expr = _31659_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1c5aac95e:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cb6276_FieldIns> _33725_f = *it;
				{
					jule::Ptr<_1c1cb6ad4_StructIns> _33921_strct = _1c2c24238_strct(_33725_f.get()._field_kind.ptr());;
					if ((((_33921_strct != nullptr) && (_33921_strct.get()._field_decl != nullptr)) && _33921_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1c5aac95e;
					};
					if (_33621_writed) {
						_1c34da4b0_write(_self_, jule::Str(" &&", 3));
					};
					_33621_writed=true;
					_1c34da4b0_write(_self_, jule::Str("\n", 1));
					_1c34dbacc_indent(_self_);
					_1c34da4b0_write(_self_, jule::Str("this->", 6));
					jule::Str _35121_f_ident = static__1c34a646a_field(_33725_f.get()._field_decl);;
					_1c34da4b0_write(_self_, _35121_f_ident);
					_1c34da4b0_write(_self_, jule::Str(" == _other.", 11));
					_1c34da4b0_write(_self_, _35121_f_ident);
				}
				_iter_next_1c5aac95e:;
				++it;
				goto _iter_begin_1c5aac95e;
			}
			_iter_end_1c5aac95e:;
		};
		_1c34db3b2_done_indent(_self_);
		if ((!(_33621_writed))) {
			_1c34da4b0_write(_self_, jule::Str("true", 4));
		};
		_1c34da4b0_write(_self_, jule::Str(";\n", 2));
		_1c34db3b2_done_indent(_self_);
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("}", 1));
	} else {
		_1c34da4b0_write(_self_, jule::Str(" return true; }", 15));
	};
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c35188c8_structure_operator_not_eq(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Str& _37046_ident, jule::Ptr<_1c1cb6ad4_StructIns>& _37063_s) {
	_1c34dbacc_indent(_self_);
	if (_2359c8584_OPT_INLINE) {
		_1c34da4b0_write(_self_, jule::Str("inline ", 7));
	};
	_1c34da4b0_write(_self_, jule::Str("bool operator!=(", 16));
	_1c34da4b0_write(_self_, _37046_ident);
	_1c34da4b0_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1c3518a0a_structure_operator(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Str& _38139_ident, jule::Ptr<_1c1cc9762_FnIns>& _38156_f, jule::Str _38167_op) {
	if ((_38156_f == nullptr)) {
		return;;
	};
	jule::Bool _38613_unary = (_38156_f.get()._field_params.len() == 1LL);;
	jule::Bool _38713_assignment = _1c1cc6a17_is_void(_38156_f.get()._field_decl.ptr());;
	_1c34dbacc_indent(_self_);
	if (_2359c8584_OPT_INLINE) {
		_1c34da4b0_write(_self_, jule::Str("inline ", 7));
	};
	if (_38713_assignment) {
		_1c34da4b0_write(_self_, _38139_ident);
		_1c34da4b0_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1c2c2304a_prim(_38156_f.get()._field_result.ptr()) == nullptr)) {
			_1c34da4b0_write(_self_, _38139_ident);
		} else {
			_1c34da4b0_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1c34da4b0_write(_self_, jule::Str(" operator", 9));
	_1c34da4b0_write(_self_, _38167_op);
	_1c34da4b0_write(_self_, jule::Str("(", 1));
	if ((!(_38613_unary))) {
		jule::Ptr<_1c1cc88c6_ParamIns> _40921_p = _38156_f.get()._field_params[1LL];;
		_1c34da4b0_write(_self_, static__1c352211d_param_ins(_40921_p));
		_1c34da4b0_write(_self_, jule::Str(" _other", 7));
	};
	_1c34da4b0_write(_self_, jule::Str(") { ", 4));
	if ((!(_38713_assignment))) {
		_1c34da4b0_write(_self_, jule::Str("return ", 7));
	};
	_1c34da4b0_write(_self_, static__1c34a5645_func_ins(_38156_f));
	if ((!(_38613_unary))) {
		_1c34da4b0_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38713_assignment) {
			_1c34da4b0_write(_self_, jule::Str("return *this; ", 14));
		};
		_1c34da4b0_write(_self_, jule::Str("}", 1));
	} else {
		_1c34da4b0_write(_self_, jule::Str("(this); }", 9));
	};
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c3518b3c_structure_operators(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _43044_s) {
	jule::Str _43113_ident = static__1c34a61c3_structure_ins(_43044_s);;
	_1c3518796_structure_operator_eq(_self_, _43113_ident,_43044_s);
	_1c35188c8_structure_operator_not_eq(_self_, _43113_ident,_43044_s);
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1c3518a0a_structure_operator(_self_, _43113_ident,_43044_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1c3518c6e_structure_ins_decl(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _46943_s) {
	if ((_46943_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _46943_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1c5ad0bc4:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cc65b6_Fn> _47125_m = *it;
				{
					_1c3519379_func_decl(_self_, _47125_m,false);
				}
				_iter_next_1c5ad0bc4:;
				++it;
				goto _iter_begin_1c5ad0bc4;
			}
			_iter_end_1c5ad0bc4:;
		};
	};
	_1c34da4b0_write(_self_, jule::Str("struct ", 7));
	jule::Str _47713_out_ident = static__1c34a61c3_structure_ins(_46943_s);;
	_1c34da4b0_write(_self_, _47713_out_ident);
	_1c34da4b0_write(_self_, jule::Str(" {\n", 3));
	_1c34dab97_add_indent(_self_);
	{
		auto &expr = _46943_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1c5ad3248:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6276_FieldIns> _48321_f = *it;
			{
				_1c34dbacc_indent(_self_);
				_1c3518400_field_decl(_self_, _48321_f);
				_1c34da4b0_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1c5ad3248:;
			++it;
			goto _iter_begin_1c5ad3248;
		}
		_iter_end_1c5ad3248:;
	};
	_1c34dbacc_indent(_self_);
	_1c3518532_structure_destructor(_self_, _46943_s);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c34dbacc_indent(_self_);
	_1c34da4b0_write(_self_, _47713_out_ident);
	_1c34da4b0_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1c3518664_structure_derive_defs_decls(_self_, _46943_s);
	_1c3518b3c_structure_operators(_self_, _46943_s);
	_1c34da4b0_write(_self_, jule::Str("\n", 1));
	_1c34db3b2_done_indent(_self_);
	_1c34dbacc_indent(_self_);
	_1c34da4b0_write(_self_, jule::Str("};", 2));
}



inline void _1c3518da1_structure_decl(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb3e55_Struct>& _50839_s) {
	{
		auto &expr = _50839_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5ad7d96:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _50921_ins = *it;
			{
				_1c3518c6e_structure_ins_decl(_self_, _50921_ins);
			}
			_iter_next_1c5ad7d96:;
			++it;
			goto _iter_begin_1c5ad7d96;
		}
		_iter_end_1c5ad7d96:;
	};
}



inline void _1c3518ed3_structure_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1c5ad8c54:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _51521_s = *it;
			{
				if ((_51521_s.get()._field_token != nullptr)) {
					_1c3518da1_structure_decl(_self_, _51521_s);
					_1c34da4b0_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1c5ad8c54:;
			++it;
			goto _iter_begin_1c5ad8c54;
		}
		_iter_end_1c5ad8c54:;
	};
}



inline void _1c3519115_params_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>& _52337_params) {
	if ((_52337_params.len() == 0LL)) {
		_1c34da4b0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c34da4b0_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52337_params;
		auto it = expr.begin();
		_iter_begin_1c5adb350:;
		if (it != expr.end()) {
			jule::I64 _53014_i = it - expr.begin();
			jule::Ptr<_1c1cc88c6_ParamIns> _53021_p = *it;
			{
				_1c34da4b0_write(_self_, static__1c352211d_param_ins(_53021_p));
				if (((_52337_params.len() - _53014_i) > 1LL)) {
					_1c34da4b0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1c5adb350:;
			++it;
			_53014_i++;
			goto _iter_begin_1c5adb350;
		}
		_iter_end_1c5adb350:;
	};
	_1c34da4b0_write(_self_, jule::Str(")", 1));
}



inline void _1c3519247_func_head(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cc9762_FnIns>& _54034_f, jule::Bool _54045_ptr) {
	if ((((!(_54045_ptr)) && _2359c8584_OPT_INLINE) && (!(_1c1cc6ee0_is_entry_point(_54034_f.get()._field_decl.ptr()))))) {
		_1c34da4b0_write(_self_, jule::Str("inline ", 7));
	};
	_1c34da4b0_write(_self_, static__1c352265c_func_ins_result(_54034_f));
	if (_54045_ptr) {
		_1c34da4b0_write(_self_, jule::Str("(*", 2));
		_1c34da4b0_write(_self_, static__1c34a5645_func_ins(_54034_f));
		_1c34da4b0_write(_self_, jule::Str(")", 1));
	} else {
		_1c34da4b0_write(_self_, jule::Str(" ", 1));
		_1c34da4b0_write(_self_, static__1c34a5645_func_ins(_54034_f));
	};
}



inline void _1c3519379_func_decl(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cc65b6_Fn>& _55534_f, jule::Bool _55542_ptr) {
	{
		auto &expr = _55534_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5ae2587:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc9762_FnIns> _55621_c = *it;
			{
				_1c34dbacc_indent(_self_);
				_1c3519247_func_head(_self_, _55621_c,_55542_ptr);
				_1c3519115_params_decls(_self_, _55621_c.get()._field_params);
				_1c34da4b0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c5ae2587:;
			++it;
			goto _iter_begin_1c5ae2587;
		}
		_iter_end_1c5ae2587:;
	};
}



inline void _1c35194ab_func_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3517ce5_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>([=](jule::Ptr<_1c2b79eb3_Package>& _56536_pkg) mutable -> void {
		_1c351bdc6_iter_files(_56536_pkg,jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>([=](jule::Ptr<_1c2bdbbe5_SymbolTable>& _56637_file) mutable -> void {
			{
				auto &expr = _56637_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1c5ae61c3:;
				if (it != expr.end()) {
					jule::Ptr<_1c1cc65b6_Fn> _56729_f = *it;
					{
						if (((!(_56729_f.get()._field_cpp_linked)) && (_56729_f.get()._field_token != nullptr))) {
							_1c3519379_func_decl(_self_, _56729_f,false);
						};
					}
					_iter_next_1c5ae61c3:;
					++it;
					goto _iter_begin_1c5ae61c3;
				}
				_iter_end_1c5ae61c3:;
			};
		}));
	}));
}



inline void _1c35195dd_trait_data_types(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3517ce5_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>([=](jule::Ptr<_1c2b79eb3_Package>& _57736_pkg) mutable -> void {
		_1c351bdc6_iter_files(_57736_pkg,jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>([=](jule::Ptr<_1c2bdbbe5_SymbolTable>& _57837_file) mutable -> void {
			{
				auto &expr = _57837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1c5ae91b5:;
				if (it != expr.end()) {
					jule::Ptr<_1c2a137db_Trait> _57929_t = *it;
					{
						if ((_57929_t.get()._field_token == nullptr)) {
							return;;
						};
						_1c34da4b0_write(_self_, jule::Str("struct ", 7));
						_1c34da4b0_write(_self_, static__1c34a58dc_trait_decl(_57929_t));
						_1c34da4b0_write(_self_, jule::Str("MptrData", 8));
						_1c34da4b0_write(_self_, jule::Str(" {\n", 3));
						_1c34dab97_add_indent(_self_);
						{
							auto &expr = _57929_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1c5aeb43c:;
							if (it != expr.end()) {
								jule::Ptr<_1c1cc65b6_Fn> _58833_m = *it;
								{
									jule::Ptr<_1c1cc9762_FnIns> _58933_ins = _58833_m.get()._field_instances[0LL];;
									jule::Ptr<_1c1cc88c6_ParamIns> _59033_p = _58933_ins.get()._field_params[0LL];;
									_59033_p.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_57929_t, 2)});
									{
										auto expr = _58933_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1c5aece00:;
										if (it != expr.end()) {
											jule::I64 _59430_i = it - expr.begin();
											jule::Ptr<_1c1cc88c6_ParamIns> _59437_ip = *it;
											{
												if (_20513bb6d_is_anon_ident(_59437_ip.get()._field_decl.get()._field_ident)) {
													_59437_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1c2a124aa_itoa(_59430_i));
												};
											}
											_iter_next_1c5aece00:;
											++it;
											_59430_i++;
											goto _iter_begin_1c5aece00;
										}
										_iter_end_1c5aece00:;
									};
									if ((!(_2359c7e57_PRODUCTION))) {
										_58933_ins.get()._field_params = jule::alloc_for_append(_58933_ins.get()._field_params,1);_58933_ins.get()._field_params.__push(jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c351d328_CustomType>(_1c351d328_CustomType{._field_kind=jule::Str("const char*", 11)}), 12)})}));;
									};
									_1c3519379_func_decl(_self_, _58833_m,true);
								}
								_iter_next_1c5aeb43c:;
								++it;
								goto _iter_begin_1c5aeb43c;
							}
							_iter_end_1c5aeb43c:;
						};
						_1c34db3b2_done_indent(_self_);
						_1c34dbacc_indent(_self_);
						_1c34da4b0_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1c5ae91b5:;
					++it;
					goto _iter_begin_1c5ae91b5;
				}
				_iter_end_1c5ae91b5:;
			};
		}));
	}));
}



inline void _1c3519720_param_ins(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cc88c6_ParamIns>& _62134_p) {
	_1c34da4b0_write(_self_, static__1c352211d_param_ins(_62134_p));
	_1c34da4b0_write(_self_, jule::Str(" ", 1));
	_1c34da4b0_write(_self_, static__1c34a5b84_param(_62134_p.get()._field_decl));
}



inline void _1c3519852_params_ins(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>& _62735_params) {
	if ((_62735_params.len() == 0LL)) {
		_1c34da4b0_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c34da4b0_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62735_params;
		auto it = expr.begin();
		_iter_begin_1c5b02d7d:;
		if (it != expr.end()) {
			jule::I64 _63314_i = it - expr.begin();
			jule::Ptr<_1c1cc88c6_ParamIns> _63321_p = *it;
			{
				_1c3519720_param_ins(_self_, _63321_p);
				if (((_62735_params.len() - _63314_i) > 1LL)) {
					_1c34da4b0_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1c5b02d7d:;
			++it;
			_63314_i++;
			goto _iter_begin_1c5b02d7d;
		}
		_iter_end_1c5b02d7d:;
	};
	_1c34da4b0_write(_self_, jule::Str(")", 1));
}



inline void _1c3519984_var_init_expr(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c2b9a4de_Var>& _64238_v, jule::Fn<void(void)> _64247_init) {
	if (_64238_v.get()._field_statically) {
		_1c34da4b0_write(_self_, jule::Str("static ", 7));
	};
	_1c34da4b0_write(_self_, static__1c3522e43_kind(_64238_v.get()._field_kind.get()._field_kind));
	_1c34da4b0_write(_self_, jule::Str(" ", 1));
	if (_64238_v.get()._field_reference) {
		_1c34da4b0_write(_self_, jule::Str("&", 1));
	};
	_1c34da4b0_write(_self_, static__1c34a6712_var(_64238_v));
	if ((_64247_init != nullptr)) {
		_1c34da4b0_write(_self_, jule::Str(" = ", 3));
		_64247_init();
	};
	_1c34da4b0_write(_self_, jule::Str(";", 1));
}



inline void _1c3519ab6_var(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c2b9a4de_Var> _66027_v) {
	if (_20513b8c6_is_ignore_ident(_66027_v.get()._field_ident)) {
		return;;
	};
	if (((_66027_v.get()._field_value != nullptr) && (_66027_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66027_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1c3519984_var_init_expr(_self_, _66027_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1c349ce78_val(_self_.get()._field_ec, _66027_v.get()._field_value);
			}));
			return;;
		};
		_1c3519984_var_init_expr(_self_, _66027_v,nullptr);
		return;;
	};
	_1c3519984_var_init_expr(_self_, _66027_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1c349d1ed_init_expr(_self_.get()._field_ec, _66027_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1c3519be8_func(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cc65b6_Fn>& _67529_f) {
	{
		auto &expr = _67529_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5b0ce21:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc9762_FnIns> _67621_ins = *it;
			{
				_1c3519247_func_head(_self_, _67621_ins,false);
				_1c3519852_params_ins(_self_, _67621_ins.get()._field_params);
				_1c34da4b0_write(_self_, jule::Str(" ", 1));
				_1c347c188_func_scope(_self_.get()._field_sc, _67621_ins);
				if ((_67621_ins.get()._field_scope != nullptr)) {
					_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1c5b0ce21:;
			++it;
			goto _iter_begin_1c5b0ce21;
		}
		_iter_end_1c5b0ce21:;
	};
}



inline void _1c3519d2a_trait_wrappers(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c5b103eb:;
		if (it != expr.end()) {
			jule::Ptr<_1c34d0b48_TraitHash> _68821_hash = *it;
			{
				{
					auto &expr = _68821_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1c5b10b9e:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _68925_m = *it;
						{
							jule::Str _69021_ident = _68925_m.get()._field_ident;;
							_68925_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_68925_m.get()._field_ident=((_69021_ident + jule::Str("_", 1)) + _1c2a124aa_itoa(_68821_hash.get()._field_i));
							_1c3519be8_func(_self_, _68925_m);
							_68925_m.get()._field_ident=_69021_ident;
							if ((_68821_hash.get()._field_s == nullptr)) {
								if (_2359c7e57_PRODUCTION) {
									_1c34da4b0_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1c34da4b0_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1c5b10b9e;
							};
							jule::Bool _70621_ptr = (!(_1c1cc561a_is_ref(_68925_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1c1cc65b6_Fn> _70825_sm = _1c1cb7a6e_find_method(_68821_hash.get()._field_s.ptr(), _68925_m.get()._field_ident,false);;
							if (((_70825_sm == nullptr) || (_70825_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1c5b10b9e;
							};
							_1c34dab97_add_indent(_self_);
							_1c34da4b0_write(_self_, jule::Str("{\n", 2));
							_1c34dbacc_indent(_self_);
							if ((!(_1c1cc6a17_is_void(_70825_sm.ptr())))) {
								_1c34da4b0_write(_self_, jule::Str("return ", 7));
							};
							_1c34da4b0_write(_self_, static__1c34a539d_func(_70825_sm));
							_1c34da4b0_write(_self_, jule::Str("(", 1));
							if (_70621_ptr) {
								_1c34da4b0_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1c34da4b0_write(_self_, static__1c3521837_structure_ins(_68821_hash.get()._field_s));
								_1c34da4b0_write(_self_, jule::Str(">(", 2));
								if ((!(_2359c7e57_PRODUCTION))) {
									_1c34da4b0_write(_self_, jule::Str("_00___file", 10));
								};
								_1c34da4b0_write(_self_, jule::Str(")", 1));
							} else {
								_1c34da4b0_write(_self_, jule::Str("_self_.data.as<", 15));
								_1c34da4b0_write(_self_, static__1c3521590_structure(_70825_sm.get()._field_owner));
								_1c34da4b0_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _68925_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1c5b17a74:;
								if (it != expr.end()) {
									jule::Ptr<_1c1cc4c79_Param> _73424_mp = *it;
									{
										_1c34da4b0_write(_self_, jule::Str(", ", 2));
										_1c34da4b0_write(_self_, static__1c34a5b84_param(_73424_mp));
									}
									_iter_next_1c5b17a74:;
									++it;
									goto _iter_begin_1c5b17a74;
								}
								_iter_end_1c5b17a74:;
							};
							_1c34da4b0_write(_self_, jule::Str(");\n}\n", 5));
							_1c34db3b2_done_indent(_self_);
						}
						_iter_next_1c5b10b9e:;
						++it;
						goto _iter_begin_1c5b10b9e;
					}
					_iter_end_1c5b10b9e:;
				};
			}
			_iter_next_1c5b103eb:;
			++it;
			goto _iter_begin_1c5b103eb;
		}
		_iter_end_1c5b103eb:;
	};
}



inline void _1c3519e5c_trait_datas(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	jule::Ptr<_1c2a137db_Trait> _74517_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c5b1c24e:;
		if (it != expr.end()) {
			jule::Ptr<_1c34d0b48_TraitHash> _74621_hash = *it;
			{
				jule::Str _74717_ident = static__1c34a58dc_trait_decl(_74621_hash.get()._field_t);;
				if ((_74621_hash.get()._field_t != _74517_old)) {
					if ((_74517_old != nullptr)) {
						_1c34db3b2_done_indent(_self_);
						_1c34dbacc_indent(_self_);
						_1c34da4b0_write(_self_, jule::Str("};\n", 3));
					};
					_1c34da4b0_write(_self_, jule::Str("static ", 7));
					_1c34da4b0_write(_self_, _74717_ident);
					_1c34da4b0_write(_self_, jule::Str("MptrData ", 9));
					_1c34da4b0_write(_self_, _74717_ident);
					_1c34da4b0_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74517_old=_74621_hash.get()._field_t;
					_1c34dab97_add_indent(_self_);
				};
				_1c34dbacc_indent(_self_);
				_1c34da4b0_write(_self_, jule::Str("{\n", 2));
				_1c34dab97_add_indent(_self_);
				{
					auto &expr = _74621_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1c5b21bd2:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _76525_m = *it;
						{
							jule::Str _76621_m_ident = static__1c34a539d_func(_76525_m);;
							_1c34dbacc_indent(_self_);
							_1c34da4b0_write(_self_, jule::Str(".", 1));
							_1c34da4b0_write(_self_, _76621_m_ident);
							_1c34da4b0_write(_self_, jule::Str("=", 1));
							_1c34da4b0_write(_self_, _76621_m_ident);
							_1c34da4b0_write(_self_, jule::Str("_", 1));
							_1c34da4b0_write(_self_, _1c2a124aa_itoa(_74621_hash.get()._field_i));
							_1c34da4b0_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1c5b21bd2:;
						++it;
						goto _iter_begin_1c5b21bd2;
					}
					_iter_end_1c5b21bd2:;
				};
				_1c34db3b2_done_indent(_self_);
				_1c34dbacc_indent(_self_);
				_1c34da4b0_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1c5b1c24e:;
			++it;
			goto _iter_begin_1c5b1c24e;
		}
		_iter_end_1c5b1c24e:;
	};
	if ((_74517_old != nullptr)) {
		_1c34db3b2_done_indent(_self_);
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1c351a08e_globals(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1c5b266a9:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b9a4de_Var> _78821_v = *it;
			{
				_1c34da4b0_write(_self_, static__1c3522e43_kind(_78821_v.get()._field_kind.get()._field_kind));
				_1c34da4b0_write(_self_, jule::Str(" ", 1));
				if (_78821_v.get()._field_reference) {
					_1c34da4b0_write(_self_, jule::Str("&", 1));
				};
				_1c34da4b0_write(_self_, static__1c34a6712_var(_78821_v));
				_1c34da4b0_write(_self_, jule::Str(" = ", 3));
				_1c349ce78_val(_self_.get()._field_ec, _78821_v.get()._field_value);
				_1c34da4b0_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c5b266a9:;
			++it;
			goto _iter_begin_1c5b266a9;
		}
		_iter_end_1c5b266a9:;
	};
}



inline void _1c351a1c1_decls(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3518059_trait_decls(_self_);
	_1c35182bd_structure_plain_decls(_self_);
	_1c3518ed3_structure_decls(_self_);
	_1c35194ab_func_decls(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c35195dd_trait_data_types(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c3519d2a_trait_wrappers(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c3519e5c_trait_datas(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c351a08e_globals(_self_);
}



inline void _1c351a303_structure_methods(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _81642_s) {
	{
		auto &expr = _81642_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c5b2d947:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _81721_f = *it;
			{
				_1c3519be8_func(_self_, _81721_f);
				_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1c5b2d947:;
			++it;
			goto _iter_begin_1c5b2d947;
		}
		_iter_end_1c5b2d947:;
	};
}



inline void _1c351a479_structure_derive_defs(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _82346_s) {
	if (_1c1cb5781_is_derives(_82346_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1c34da4b0_write(_self_, static__1c34a0a2a_clone_func_def(_82346_s.get()._field_decl));
		_1c34da4b0_write(_self_, jule::Str("{\n", 2));
		_1c34dab97_add_indent(_self_);
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, static__1c3521837_structure_ins(_82346_s));
		_1c34da4b0_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82346_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1c5b320ee:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cb6276_FieldIns> _83120_f = *it;
				{
					jule::Str _83221_ident = static__1c34a646a_field(_83120_f.get()._field_decl);;
					_1c34dbacc_indent(_self_);
					_1c34da4b0_write(_self_, jule::Str("clone.", 6));
					_1c34da4b0_write(_self_, _83221_ident);
					_1c34da4b0_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1c34da4b0_write(_self_, _83221_ident);
					_1c34da4b0_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1c5b320ee:;
				++it;
				goto _iter_begin_1c5b320ee;
			}
			_iter_end_1c5b320ee:;
		};
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("return clone;\n", 14));
		_1c34db3b2_done_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("}", 1));
	};
}



inline void _1c351a6cc_structure_ostream(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _84742_s) {
	_1c34dbacc_indent(_self_);
	_1c34da4b0_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1c34da4b0_write(_self_, static__1c34a61c3_structure_ins(_84742_s));
	_1c34da4b0_write(_self_, jule::Str(" _Src) {\n", 9));
	_1c34dab97_add_indent(_self_);
	_1c34dbacc_indent(_self_);
	jule::Ptr<_1c1cc65b6_Fn> _85517_fts = _1c1cb7a6e_find_method(_84742_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1c2b9b90d_to_str(_85517_fts)) {
		_1c34da4b0_write(_self_, jule::Str("_Stream << ", 11));
		_1c34da4b0_write(_self_, static__1c34a539d_func(_85517_fts));
		_1c34da4b0_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1c34da4b0_write(_self_, jule::Str("_Stream << \"", 12));
		_1c34da4b0_write(_self_, _84742_s.get()._field_decl.get()._field_ident);
		_1c34da4b0_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84742_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1c5b3a7cd:;
			if (it != expr.end()) {
				jule::I64 _86518_i = it - expr.begin();
				jule::Ptr<_1c1cb6276_FieldIns> _86525_f = *it;
				{
					_1c34dbacc_indent(_self_);
					_1c34da4b0_write(_self_, jule::Str("_Stream << \"", 12));
					_1c34da4b0_write(_self_, _86525_f.get()._field_decl.get()._field_ident);
					_1c34da4b0_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1c1cb6ad4_StructIns> _87221_strct = _1c2c24238_strct(_86525_f.get()._field_kind.ptr());;
					if ((((_87221_strct != nullptr) && (_87221_strct.get()._field_decl != nullptr)) && _87221_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1c34da4b0_write(_self_, jule::Str(" cpp.", 5));
						_1c34da4b0_write(_self_, static__1c34a646a_field(_86525_f.get()._field_decl));
						_1c34da4b0_write(_self_, jule::Str("\"", 1));
					} else {
						_1c34da4b0_write(_self_, jule::Str("\" << _Src.", 10));
						_1c34da4b0_write(_self_, static__1c34a646a_field(_86525_f.get()._field_decl));
					};
					if (((_86518_i + 1LL) < _84742_s.get()._field_fields.len())) {
						_1c34da4b0_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1c34da4b0_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1c5b3a7cd:;
				++it;
				_86518_i++;
				goto _iter_begin_1c5b3a7cd;
			}
			_iter_end_1c5b3a7cd:;
		};
		_1c34dbacc_indent(_self_);
		_1c34da4b0_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1c34dbacc_indent(_self_);
	_1c34da4b0_write(_self_, jule::Str("return _Stream;\n", 16));
	_1c34db3b2_done_indent(_self_);
	_1c34da4b0_write(_self_, jule::Str("}", 1));
}



inline void _1c351a952_structure_ins(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb6ad4_StructIns>& _89838_s) {
	_1c351a303_structure_methods(_self_, _89838_s);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c351a479_structure_derive_defs(_self_, _89838_s);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
	_1c351a6cc_structure_ostream(_self_, _89838_s);
}



inline void _1c351abc7_structure(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c1cb3e55_Struct>& _90634_s) {
	{
		auto &expr = _90634_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5b44cc1:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _90721_ins = *it;
			{
				_1c351a952_structure_ins(_self_, _90721_ins);
				_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1c5b44cc1:;
			++it;
			goto _iter_begin_1c5b44cc1;
		}
		_iter_end_1c5b44cc1:;
	};
}



inline void _1c351ada3_structures(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1c5b46102:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb3e55_Struct> _91421_s = *it;
			{
				if ((_91421_s.get()._field_token != nullptr)) {
					_1c351abc7_structure(_self_, _91421_s);
					_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1c5b46102:;
			++it;
			goto _iter_begin_1c5b46102;
		}
		_iter_end_1c5b46102:;
	};
}



inline void _1c351b07e_funcs(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c3517ce5_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>([=](jule::Ptr<_1c2b79eb3_Package>& _92336_pkg) mutable -> void {
		_1c351bdc6_iter_files(_92336_pkg,jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>([=](jule::Ptr<_1c2bdbbe5_SymbolTable>& _92437_file) mutable -> void {
			{
				auto &expr = _92437_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1c5b497cb:;
				if (it != expr.end()) {
					jule::Ptr<_1c1cc65b6_Fn> _92529_f = *it;
					{
						if (((!(_2359c980a_TEST)) && _1c352476e_has_directive(_92529_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1c5b497cb;
						};
						if (((!(_92529_f.get()._field_cpp_linked)) && (_92529_f.get()._field_token != nullptr))) {
							_1c3519be8_func(_self_, _92529_f);
							_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1c5b497cb:;
					++it;
					goto _iter_begin_1c5b497cb;
				}
				_iter_end_1c5b497cb:;
			};
		}));
	}));
}



inline void _1c351b304_push_init(jule::Ptr<_1c34d0d35_ObjectCoder> _self_, jule::Ptr<_1c2b79eb3_Package>& _93834_pkg) {
	_1c351bdc6_iter_files(_93834_pkg,jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)>([=](jule::Ptr<_1c2bdbbe5_SymbolTable>& _93933_file) mutable -> void {
		{
			auto &expr = _93933_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1c5b526b3:;
			if (it != expr.end()) {
				jule::Ptr<_1c1cc65b6_Fn> _94020_f = *it;
				{
					if ((_94020_f.get()._field_ident == jule::Str("init", 4))) {
						_1c34dbacc_indent(_self_);
						_1c34da4b0_write(_self_, static__1c34a539d_func(_94020_f));
						_1c34da4b0_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1c5b526b3:;
				++it;
				goto _iter_begin_1c5b526b3;
			}
			_iter_end_1c5b526b3:;
		};
	}));
}



inline void _1c351b4d0_init_caller(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c34da4b0_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1c34dab97_add_indent(_self_);
	_1c3517ce5_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2b79eb3_Package>&)>([=](jule::Ptr<_1c2b79eb3_Package>& _95336_pkg) mutable -> void {
		_1c351b304_push_init(_self_, _95336_pkg);
	}));
	_1c34db3b2_done_indent(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n}", 2));
}



inline void _1c351b6ab_end(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c34da4b0_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2359c980a_TEST) {
		_1c34da4b0_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1c34da4b0_write(_self_, jule::Str("entry_point();", 14));
	};
	_1c34da4b0_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1c351b887_serialize_head(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c34ed89c_prepare_structures(_self_);
	_1c3517e27_build_trait_map(_self_);
	_1c34dd10b_head(_self_);
	_1c34d2ae5_links(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n", 1));
	_1c351a1c1_decls(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n", 1));
	_1c351ada3_structures(_self_);
	_1c351b07e_funcs(_self_);
	_1c351b4d0_init_caller(_self_);
	_1c34da4b0_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c351ba63_serialize(jule::Ptr<_1c34d0d35_ObjectCoder> _self_) {
	_1c351b887_serialize_head(_self_);
	_1c351b6ab_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c34d0d35_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1db2583d0_IR>,jule::Slice<_2046db273_Log>> static__1dae4dbb9_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1db25a0c4_JuleImporter> _2917_importer = static__1dadaa32e_new(_1db257a0b_build_compile_info());;
	jule::Slice<jule::Ptr<_20500541b_Ast>> _3018_files;;
	jule::Slice<_2046db273_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1dae25003_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1c2b79eb3_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1c2c3a738_analyze_package(_3018_files,jule::Trait<_1c2b74e8b_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1db2583d0_IR> _4517_ir = jule::new_ptr<_1db2583d0_IR>(_1db2583d0_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1dadb1203_all_packages(_2917_importer.ptr())});;
	_4517_ir.get()._field_passes=_1db2563bc_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1dae5530d_append_structs(_1db2583d0_IR* _self_, jule::Ptr<_1c2b79eb3_Package>& _5734_p, jule::Slice<jule::Ptr<_1c1cb3e55_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c569d264:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1c569d97e:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cb3e55_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1c569d97e:;
						++it;
						goto _iter_begin_1c569d97e;
					}
					_iter_end_1c569d97e:;
				};
			}
			_iter_next_1c569d264:;
			++it;
			goto _iter_begin_1c569d264;
		}
		_iter_end_1c569d264:;
	};
}



inline jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _1dae576d9_get_all_structures(_1db2583d0_IR* _self_) {
	jule::Slice<jule::Ptr<_1c1cb3e55_Struct>> _7017_buffer = nullptr;;
	_1dae5530d_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1c56a0134:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1dae5530d_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1c56a0134:;
			++it;
			goto _iter_begin_1c56a0134;
		}
		_iter_end_1c56a0134:;
	};
	return _7017_buffer;
}



inline void _1dae5ba1d_append_globals(_1db2583d0_IR* _self_, jule::Ptr<_1c2b79eb3_Package>& _8034_p, jule::Slice<jule::Ptr<_1c2b9a4de_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c56a1ae7:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1c56a2312:;
					if (it != expr.end()) {
						jule::Ptr<_1c2b9a4de_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1c56a2312:;
						++it;
						goto _iter_begin_1c56a2312;
					}
					_iter_end_1c56a2312:;
				};
			}
			_iter_next_1c56a1ae7:;
			++it;
			goto _iter_begin_1c56a1ae7;
		}
		_iter_end_1c56a1ae7:;
	};
}



inline jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _1db2332ab_get_all_globals(_1db2583d0_IR* _self_) {
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _9317_buffer = nullptr;;
	_1dae5ba1d_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1c56a40c2:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1dae5ba1d_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1c56a40c2:;
			++it;
			goto _iter_begin_1c56a40c2;
		}
		_iter_end_1c56a40c2:;
	};
	return _9317_buffer;
}



inline void _1db2534da_order(_1db2583d0_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1dae576d9_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1db2332ab_get_all_globals(&(*_self_));
	static__1db259b62_order_structures((*_self_)._field_ordered._field_structs);
	static__1db25d5d3_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1db2583d0_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1c35571a8_parse_integer_0(_1c3556b58_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1c5bc5219:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_204c1a131_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1c5bc4dd9:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_204c1a131_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1c5bc4658:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_204c1a131_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1c5bc46be:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1c5bc4735:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1c5bc45e2:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1c5bc4526:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1c35571a8_parse_integer_1(_1c3556b58_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1c5bcd992:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_204c1a131_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1c5bcd662:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_204c1a131_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1c5bccdd1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_204c1a131_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1c5bcce47:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1c5bccead:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1c5bccd6a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1c5bccc9e:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1c355741c_get_data(_1c3556b58_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1c3557692_process_flag(_1c3556b58_ArgParser* _self_, jule::Trait<_1c2d421ad_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1c35531d7_Flag_3>>()) {
			_case_begin_1c5bbc750:;
			{
				jule::Ptr<_1c35531d7_Flag_3> _22021_bf = _21736_flag.operator jule::Ptr<_1c35531d7_Flag_3>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1c5bbc6c8:;
	};
	jule::Str _22513_data = _1c355741c_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1c2d421ad_CommonFlag_mptr_data[(_21736_flag).type_offset]._1c3552a55_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1c35531d7_Flag_0>>()) {
			_case_begin_1c5bbdb3b:;
			{
				jule::Ptr<_1c35531d7_Flag_0> _23221_intf = _21736_flag.operator jule::Ptr<_1c35531d7_Flag_0>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1c35571a8_parse_integer_0(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1c2a0c0cb_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1c2d421ad_CommonFlag_mptr_data[(_21736_flag).type_offset]._1c3552a55_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c35531d7_Flag_1>>()) {
			_case_begin_1c5bbe5dc:;
			{
				jule::Ptr<_1c35531d7_Flag_1> _24021_uintf = _21736_flag.operator jule::Ptr<_1c35531d7_Flag_1>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1c35571a8_parse_integer_1(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1dbbb3653_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1c2d421ad_CommonFlag_mptr_data[(_21736_flag).type_offset]._1c3552a55_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c35531d7_Flag_2>>()) {
			_case_begin_1c5bbe653:;
			{
				jule::Ptr<_1c35531d7_Flag_2> _24821_ff = _21736_flag.operator jule::Ptr<_1c35531d7_Flag_2>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1c2a0da4a_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1c2d421ad_CommonFlag_mptr_data[(_21736_flag).type_offset]._1c3552a55_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c35531d7_Flag_4>>()) {
			_case_begin_1c5bbe6b9:;
			{
				(*(_21736_flag.operator jule::Ptr<_1c35531d7_Flag_4>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1c5bbe565:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c3557917_single_dash(_1c3556b58_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1c5bd4756:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1c2d421ad_CommonFlag> _26321_flag = _1c355500d_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1c3557692_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1c5bd4756:;
			++it;
			goto _iter_begin_1c5bd4756;
		}
		_iter_end_1c5bd4756:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c3557b8c_double_dash(_1c3556b58_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1c2d421ad_CommonFlag> _27617_flag = _1c3554c00_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1c3557692_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c3557d68_try_arg(_1c3556b58_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1c3557b8c_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1c3557917_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c3558044_parse(_1c3556b58_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1c3557d68_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1c5bdc044:;
	}
	_iter_end_1c5bdc044:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1c3556b58_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2359c8ad4_push_opt_level(jule::I64 _3323_level) {
	_2359c8045_OPT_COPY=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c8133_OPT_DEADCODE=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c8221_OPT_APPEND=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c830e_OPT_MATH=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c840d_OPT_ACCESS=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c8584_OPT_INLINE=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c8793_OPT_PTR=(_3323_level >= static_cast<jule::I64>(1LL));
	_2359c8919_OPT_COND=(_3323_level >= static_cast<jule::I64>(1LL));
}



inline jule::I32 _2368122ce_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _236812576_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _236812b09_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1c3570e19:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1c3570b0b:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_2368122ce_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1c3570a95:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1c3570a1d:;
			};
			(_12113_n)++;
		}
	_iter_next_1c356eb0a:;
	}
	_iter_end_1c356eb0a:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _236812e4a_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1c3570226:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1c357028c:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _236812576_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1c35731a2:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _236800003_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1c3581248:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1c3581248;
				};
				_2113_buff=_236812e4a_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1c3581248:;
			++it;
			goto _iter_begin_1c3581248;
		}
		_iter_end_1c3581248:;
	};
	return _236812e4a_append_rune(_2113_buff,0LL);
}



inline jule::Str _2367ec088_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1c3582ca5:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1c3582ca5;
				};
			}
			_iter_next_1c3582ca5:;
			++it;
			_399_i++;
			goto _iter_begin_1c3582ca5;
		}
		_iter_end_1c3582ca5:;
	};
	return static_cast<jule::Str>(_236812b09_decode(_3813_code_page));
}



inline jule::Str _236801c80_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_236812b09_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1c3583d3e:;
	}
	_iter_end_1c3583d3e:;;
	return jule::Str();
}



inline jule::I64 _235b95ba2_get_last_errno(void) {
	return errno;
}



inline jule::U64 _236813a1c_get_std_handle(jule::U64 _5423_stdh) {
	return static_cast<jule::U64>(((jule::U64)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _236814105_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _2368144e0__wopen(jule::U16* _6322_path, jule::I64 _6334_flag, jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _2368146dd_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _236814a2e_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _23681506d_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _236815315_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _2368155ac_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _236815854__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _236815aeb__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _236815d93__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _236816569_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _2368168aa_get_console_mode(jule::U64 _11325_handle, jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _236816beb_set_console_mode(jule::U64 _11825_handle, jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _236817229_write_console(jule::U64 _12329_handle, jule::U16* _12345_buffer, jule::I64 _12359_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _236817757_read_console(jule::U64 _13028_handle, jule::U16* _13048_buffer, jule::I64 _13062_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _236819a89_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _236819e74_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _23681a2a4_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _23681a68e_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _23681a89d_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _2369b30b7_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _2369b1ed9_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_2369b255b_accept_range _1969_accept = _2369b27d1_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _2369b364a_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_2369b4ecb_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1c36052ab;
			};
		}
	_iter_next_1c36052ab:;
	}
	_iter_end_1c36052ab:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _2369b30b7_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _2369b3b89_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1c360c00a:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1c360bceb:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1c360bd62:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1c360bdd9:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1c360bb86:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1c360bc0d:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1c360b713:;
			{
				return -1LL;
			}
		}
		_match_end_1c360ac40:;
	};
}



inline jule::I64 _2369b4063_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1c3612098:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1c3611d78:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1c3611dde:;
			{
				_37439_r=65533LL;
				goto _case_begin_1c3611e55;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1c3611e55:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1c360e6c2:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1c360e628:;
	};
}



inline jule::Slice<jule::U8> _2369b43a4_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _2369b46e5_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _2369b46e5_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1c3619b94:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1c3618489:;
			{
				_41245_r=65533LL;
				goto _case_begin_1c3618500;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1c3618500:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1c3617994:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1c36178ea:;
	};
}



inline jule::I64 _2369b4c34_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1c36237d5;
			};
			jule::U8 _48213_x = _2369b1ed9_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1c36237d5;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1c36237d5;
			};
			_2369b255b_accept_range _49213_accept = _2369b27d1_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1c36237d5:;
	}
	_iter_end_1c36237d5:;;
	return _47333_n;
}



inline jule::Bool _2369b4ecb_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _236a66533_get_last_os_error_windows(void) {
	jule::U32 _169_err = _2368146dd_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1c364685d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c364630d:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c3646374:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1c36463da:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1c3644075:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1c36432b6:;
	};
}



inline jule::Slice<jule::Str> _236a673d0_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _236a67820_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _236a6825a___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _236a6825a___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _236814a2e_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_236a66533_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_236801c80_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _236aec8e9_stobs(jule::Str& _915_s) {
	return _915_s.fake_slice();
}



inline jule::Bool _204c29739_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_204c5d74b__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _204c64a3d_is_excluding_latin(_204c2ed38_LETTER,_7618_r);
}



inline jule::Bool _204c63ed2_is16(jule::Slice<_204c62398_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1c3b94e33:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_204c62398_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1c3b94e33:;
				++it;
				_19313_i++;
				goto _iter_begin_1c3b94e33;
			}
			_iter_end_1c3b94e33:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_204c62398_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1c3b944a4:;
	}
	_iter_end_1c3b944a4:;;
	return false;
}



inline jule::Bool _204c64323_is32(jule::Slice<_204c62860_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1c3b9ab5e:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_204c62860_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1c3b9ab5e:;
				++it;
				_23013_i++;
				goto _iter_begin_1c3b9ab5e;
			}
			_iter_end_1c3b9ab5e:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_204c62860_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1c3b9a39a:;
	}
	_iter_end_1c3b9a39a:;;
	return false;
}



inline jule::Bool _204c64a3d_is_excluding_latin(jule::Ptr<_204c62cd3_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_204c62398_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _204c63ed2_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_204c62860_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _204c64323_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _204c21b2c_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	jule::Str _1913_ss = _1415_s;;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_1c3bc0117:;
	}
	_iter_end_1c3bc0117:;;
	return _1913_ss;
}



inline jule::Bool _204c1405e__has_prefix(jule::Str& _2617_s, jule::Str& _2626_sub, jule::I64 _2640_start) {
	if (((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < _2626_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2626_sub.len()); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2640_start + 1LL)))) {
		{
			if ((_2617_s[_2640_start] != _2626_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1c3bc24b0:;
	}
	_iter_end_1c3bc24b0:;;
	return true;
}



inline jule::Bool _204c1a131_has_prefix(jule::Str _4119_s, jule::Str _4127_sub) {
	return _204c1405e__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _204c03757__has_suffix(jule::Str& _4517_s, jule::Str& _4526_sub, jule::I64 _4540_start) {
	if (((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < _4526_sub.len()))) {
		return false;
	};
	_4540_start=static_cast<jule::I64>((_4517_s.len() - _4540_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4526_sub.len()); (_5113_i)++) {
		{
			if ((_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1c3bc3b87:;
	}
	_iter_end_1c3bc3b87:;;
	return true;
}



inline jule::Bool _204c03cc9_has_suffix(jule::Str _6119_s, jule::Str _6127_sub) {
	return _204c03757__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I64 _204c04307_find_at(jule::Str _6916_s, jule::Str _6924_sub, jule::I64 _6938_i) {
	if ((((_6938_i < 0LL) || (_6916_s.len() < _6924_sub.len())) || (_6924_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6938_i < _6916_s.len()); (_6938_i)++) {
		{
			if (_204c1405e__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			};
		}
	_iter_next_1c3bc7cce:;
	}
	_iter_end_1c3bc7cce:;;
	return -1LL;
}



inline jule::I64 _20498c1b1_find_last_at(jule::Str _9221_s, jule::Str _9229_sub, jule::I64 _9239_i) {
	jule::I64 _9313_j = ((_9239_i - _9229_sub.len()) + 1LL);;
	if (((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= _9221_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9229_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9221_s[_9917_k] != _9229_sub[_10017_z])) {
						goto _iter_next_1c3bcb7b6;
					};
				}
			_iter_next_1c3bcc245:;
			}
			_iter_end_1c3bcc245:;;
			return _9313_j;
		}
	_iter_next_1c3bcb7b6:;
	}
	_iter_end_1c3bcb7b6:;;
	return -1LL;
}



inline jule::I64 _20498c2e3_find_last(jule::Str _11418_s, jule::Str _11426_sub) {
	return static_cast<jule::I64>(_20498c1b1_find_last_at(_11418_s,_11426_sub,static_cast<jule::I64>((_11418_s.len() - 1LL))));
}



inline jule::I64 _20498c8ed__find_rune(jule::Slice<jule::U8>& _17016_s, jule::I32 _17027_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17016_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _2369b30b7_decode_rune(_17016_s.slice(_17113_i));
			if ((_17027_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1c3bd545c:;
	}
	_iter_end_1c3bd545c:;;
	return -1LL;
}



inline jule::I64 _20498cd93_find_last_byte(jule::Str _19723_s, jule::U8 _19731_b) {
	jule::I64 _19813_i = (_19723_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19723_s[_19813_i] == _19731_b)) {
				return _19813_i;
			};
		}
	_iter_next_1c3bd7d11:;
	}
	_iter_end_1c3bd7d11:;;
	return -1LL;
}



inline jule::I64 _20498d36b_find_any(jule::Str _23817_s, jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _236aec8e9_stobs(_23817_s);;
	jule::Slice<jule::U8> _24013_rb = _236aec8e9_stobs(_23825_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _2369b30b7_decode_rune(_2399_sb.slice(_24113_i));
			if ((_20498c8ed__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1c3bdb63e:;
	}
	_iter_end_1c3bdb63e:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _204c04967_split(jule::Str _27214_s, jule::Str _27222_sub, jule::I64 _27236_n) {
	jule::I64 _27313_cap = _27236_n;;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28613_j = _204c04307_find_at(_27214_s,_27222_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1c3be346a;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27222_sub.len()));
		}
	_iter_next_1c3be346a:;
	}
	_iter_end_1c3be346a:;;
	if (((_27236_n > 0LL) && (_28413_i < _27214_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _204c04a99_contains(jule::Str _30017_s, jule::Str _30025_sub) {
	return (_204c04307_find_at(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _204c652e1_contains_any(jule::Str _31621_s, jule::Str _31629_runes) {
	return (_20498d36b_find_any(_31621_s,_31629_runes) != -1LL);
}



inline jule::Str _204c65555_replace(jule::Str _34216_s, jule::Str _34224_sub, jule::Str _34234_new, jule::I64 _34248_n) {
	if (((_34248_n == 0LL) || (_34224_sub == _34234_new))) {
		return _34216_s;
	};
	if ((_34248_n < 0LL)) {
		_34248_n=static_cast<jule::I64>(_34216_s.len());
	};
	jule::Str _35113_ss = jule::Str();;
	jule::I64 _35213_i = 0LL;;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I64 _35413_j = _204c04307_find_at(_34216_s,_34224_sub,_35213_i);;
			if ((_35413_j == -1LL)) {
				goto _iter_end_1c3bebb16;
			};
			_35113_ss+=_34216_s.slice(_35213_i,_35413_j);
			_35113_ss+=_34234_new;
			_35213_i=static_cast<jule::I64>((_35413_j + _34224_sub.len()));
		}
	_iter_next_1c3bebb16:;
	}
	_iter_end_1c3bebb16:;;
	_35113_ss+=_34216_s.slice(_35213_i);
	return _35113_ss;
}



inline void _20498cb62__trim_left(jule::Slice<jule::U8>& _39420_s, jule::Slice<jule::U8>& _39432_cutset) {
	jule::I64 _39513_i = 0LL;;
	while ((_39513_i < _39420_s.len())) {
		{
			jule::I32 _39714_r;;
			jule::I64 _39717_n;;
			std::tie(_39714_r,_39717_n) = _2369b30b7_decode_rune(_39420_s.slice(_39513_i));
			if ((_20498c8ed__find_rune(_39432_cutset,_39714_r) == -1LL)) {
				_39420_s=_39420_s.slice(_39513_i);
				return;;
			};
			_39513_i+=_39717_n;
		}
	_iter_next_1c3c019d9:;
	}
	_iter_end_1c3c019d9:;;
	_39420_s=nullptr;
}



inline jule::Str _204c65ea1_trim_left(jule::Str _40918_s, jule::Str _40926_cutset) {
	jule::Slice<jule::U8> _41013_bytes = _236aec8e9_stobs(_40918_s);;
	jule::Slice<jule::U8> _4119_bcutset = _236aec8e9_stobs(_40926_cutset);;
	_20498cb62__trim_left(_41013_bytes,_4119_bcutset);
	return static_cast<jule::Str>(_41013_bytes);
}



inline void _204c660d3__trim_right(jule::Slice<jule::U8>& _41621_s, jule::Slice<jule::U8>& _41633_cutset) {
	jule::I64 _41713_i = _41621_s.len();;
	while ((_41713_i > 0LL)) {
		{
			jule::I32 _41914_r;;
			jule::I64 _41917_n;;
			std::tie(_41914_r,_41917_n) = _2369b364a_decode_last_rune(_41621_s.slice(0LL,_41713_i));
			if ((_20498c8ed__find_rune(_41633_cutset,_41914_r) == -1LL)) {
				_41621_s=_41621_s.slice(0LL,_41713_i);
				return;;
			};
			_41713_i-=_41917_n;
		}
	_iter_next_1c3c04a42:;
	}
	_iter_end_1c3c04a42:;;
	_41621_s=nullptr;
}



inline jule::Str _204c66347_trim(jule::Str _44013_s, jule::Str _44021_cutset) {
	jule::Slice<jule::U8> _44113_bytes = _236aec8e9_stobs(_44013_s);;
	jule::Slice<jule::U8> _4429_bcutset = _236aec8e9_stobs(_44021_cutset);;
	_20498cb62__trim_left(_44113_bytes,_4429_bcutset);
	_204c660d3__trim_right(_44113_bytes,_4429_bcutset);
	return static_cast<jule::Str>(_44113_bytes);
}



inline jule::Bool _236a3ec26_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _236a3ed58_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _236a3cae2_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I64 _236a3ce55_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_236a3ed58_is_slash(_8220_path[0LL]))) || (!(_236a3ed58_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _236a3d1ec_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _236a3d1ec_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_236a3cae2_to_upper(_9613_p2[0LL]) == 'U')) && (_236a3cae2_to_upper(_9613_p2[1LL]) == 'N')) && (_236a3cae2_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _236a3d1ec_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _236a3d1ec_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		};
	};
	return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _236a3d1ec_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1c3c2625b:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_236a3ed58_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1c3c2625b:;
			++it;
			_1209_i++;
			goto _iter_begin_1c3c2625b;
		}
		_iter_end_1c3c2625b:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _236a3d494_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _236800003_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_236816569_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _2367ec088_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1c3c287be:;
	}
	_iter_end_1c3c287be:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _236a3d7c4___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _236a3d494_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_204c66b3e_clean(_14514_path),_14532_ok);
}



inline jule::Str _236a3db7b___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1c3c2dde0:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1c3c2e990:;
					}
					else if (_236a3ed58_is_slash(_16113_last_char)) {
						_case_begin_1c3c2e682:;
						{
							while (((_16217_e.len() > 0LL) && _236a3ed58_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1c3c30551:;
							}
							_iter_end_1c3c30551:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1c3c2e6e8:;
					}
					else {
						_case_begin_1c3c2e61b:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1c3c2e550:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1c3c2dde0:;
			++it;
			goto _iter_begin_1c3c2dde0;
		}
		_iter_end_1c3c2dde0:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _204c66b3e_clean(_16013_s);
}



inline jule::Str _204c66b3e_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _236a3ce55_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _236a3ec26_is_path_sep(_1099_original_path[0LL])) && _236a3ec26_is_path_sep(_1099_original_path[1LL]))) {
			return _204c66da3_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _236a3ec26_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_204c665ab_LazyBuff _12713_out = _204c665ab_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_204c668ca_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_236a3ec26_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1c3c3b2c6:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _236a3ec26_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1c3c3bd21:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _236a3ec26_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1c3c3bd87:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1c3c3ee89:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_236a3ec26_is_path_sep(static_cast<jule::U8>(_204c66798_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1c3c407c5:;
									}
									_iter_end_1c3c407c5:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1c3c40011:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_204c668ca_append(&_12713_out, 92LLU);
									};
									_204c668ca_append(&_12713_out, '.');
									_204c668ca_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1c3c3ee01:;
						};
					}
				}
				else {
					_case_begin_1c3c3715c:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_204c668ca_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_236a3ec26_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_204c668ca_append(&_12713_out, '.');
										_204c668ca_append(&_12713_out, 92LLU);
										goto _iter_end_1c3c38a65;
									};
								}
							_iter_next_1c3c38a65:;
							}
							_iter_end_1c3c38a65:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_236a3ec26_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_204c668ca_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1c3c38823:;
						}
						_iter_end_1c3c38823:;;
					}
				}
				_match_end_1c3c37091:;
			};
		}
	_iter_next_1c3c36689:;
	}
	_iter_end_1c3c36689:;;
	if ((_12713_out._field_w == 0LL)) {
		_204c668ca_append(&_12713_out, '.');
	};
	return _204c66da3_from_slash(_204c66a0c_string(&_12713_out));
}



inline jule::Str _204c66da3_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _204c65555_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _204c66ed5_join(jule::Slice<jule::Str> _22513_elem) {
	return _236a3db7b___join(_22513_elem);
}



inline jule::Str _204c67117_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_236a3ec26_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1c3c45148:;
	}
	_iter_end_1c3c45148:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _204c67249_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _236a3d7c4___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _204c6737b_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _236a3ec26_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1c3c47931:;
	}
	_iter_end_1c3c47931:;;
	(_25417_path).mut_slice(_204c675e0_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_236a3ec26_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1c3c49801:;
	}
	_iter_end_1c3c49801:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _204c674ad_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _204c675e0_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_236a3ec26_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1c3c4a538:;
	}
	_iter_end_1c3c4a538:;;
	jule::Str _2919_dir = _204c66b3e_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _204c675e0_volume_name(jule::Str _30320_path) {
	return _204c66da3_from_slash(_30320_path.slice(0LL,_236a3ce55_volume_name_len(_30320_path)));
}



inline jule::I64 _235a66c82_get_last_fs_error(void) {
	jule::I64 _729_err = _235b95ba2_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c3c81085:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c3c80a02:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c3c80a68:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c3c80ace:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c3c80b45:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c3c812a5:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1c3c8131b:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c3c81382:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c3c813e8:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c3c8145e:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c3c814c5:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c3c8153b:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c3c815a2:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c3c81618:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c3c8167e:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1c3c816e5:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c3c8175b:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c3c817c2:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c3c81849:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c3c818c1:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c3c81948:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c3c819c0:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c3c81a47:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c3c81abe:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c3c81b46:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1c3c81bbd:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1c3c81c45:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1c3c81cbc:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1c3c7ebaa:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1c3c807e3:;
	};
}



inline jule::Bool _2369b5a48_is_console_handle(jule::U64 _11622_handle) {
	return (((_11622_handle == _2367d1259_STDIN) || (_11622_handle == _235ba6751_STDOUT)) || (_11622_handle == _2368137b9_STDERR));
}



inline jule::I64 _20472b4c2_get_last_process_error(void) {
	jule::I64 _429_err = _235b95ba2_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c3c95b05:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c3c95550:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c3c955b6:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c3c9562c:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c3c95693:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c3c9586e:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c3c958d5:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c3c9594b:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c3c959b2:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1c3c95a28:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c3c95d25:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1c3c9542e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1c3c953c9:;
	};
}



inline jule::Slice<wchar_t*> _204cbdb52_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1c3c99367:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1c3c99367:;
			++it;
			_199_i++;
			goto _iter_begin_1c3c99367;
		}
		_iter_end_1c3c99367:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _204cbde2c_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1c3c9ac09:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_236800003_utf16_from_str(_2812_p));;
			}
			_iter_next_1c3c9ac09:;
			++it;
			goto _iter_begin_1c3c9ac09;
		}
		_iter_end_1c3c9ac09:;
	};
	return _2713_us;
}



inline jule::I64 _204cbe27e_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _236800003_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _204cbde2c_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _204cbdb52_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _204cbe669_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _204cbde2c_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _204cbdb52_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _204cbde2c_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _204cbdb52_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _236800003_utf16_from_str(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _204cc036d_exit(jule::I64 _1213_code) {
	_23681a89d_exit(_1213_code);
}



inline jule::Str _204cc056b_executable(void) {
	return jule::executable();
}



inline jule::Bool _2046ce6ea_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _2046ce9d6_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _2046cca28_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1c3ccd7ec:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1c3ccd7ec:;
			++it;
			goto _iter_begin_1c3ccd7ec;
		}
		_iter_end_1c3ccd7ec:;
	};
	return false;
}



inline jule::Bool _2046cec7d_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _2046cd221_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1c3cce897:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1c3cce897:;
			++it;
			goto _iter_begin_1c3cce897;
		}
		_iter_end_1c3cce897:;
	};
	{
		auto &expr = _2046ce453_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1c3cd0139:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1c3cd0139:;
			++it;
			goto _iter_begin_1c3cd0139;
		}
		_iter_end_1c3cd0139:;
	};
	return false;
}



inline jule::Str _2046db6b3_logf(jule::Str _29113_fmt, jule::Slice<jule::Any> _29126_args) {
	return _2046dc0cb_apply_fmt(_29113_fmt,jule::Any(_29126_args));
}



inline jule::Str _2046db99e_arg_to_str(jule::Any _29515_arg) {
	{
		auto &_match_expr{ _29515_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c3cd1767:;
			{
				return _29515_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1c3cd1679:;
			{
				return static_cast<jule::Str>(_29515_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1c3cd16e0:;
			{
				return static_cast<jule::Str>(_29515_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1c3ccea95:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1c3ccea40:;
	};
}



inline jule::I64 _2046dbc46_find_next_fmt(jule::Str _30818_fmt) {
	{
		auto &expr = _30818_fmt;
		auto it = expr.begin();
		_iter_begin_1c3cd1e71:;
		if (it != expr.end()) {
			jule::I64 _3099_i = it - expr.begin();
			jule::U8 &_30912_b = *it;
			{
				if ((_30912_b == '@')) {
					return _3099_i;
				};
			}
			_iter_next_1c3cd1e71:;
			++it;
			_3099_i++;
			goto _iter_begin_1c3cd1e71;
		}
		_iter_end_1c3cd1e71:;
	};
	return -1LL;
}



inline jule::Str _2046dc0cb_apply_fmt(jule::Str _31718_fmt, jule::Slice<jule::Any> _31728_args) {
	jule::Str _31813_s = jule::Str();;
	{
		auto &expr = _31728_args;
		auto it = expr.begin();
		_iter_begin_1c3cd3a77:;
		if (it != expr.end()) {
			jule::Any &_32012_arg = *it;
			{
				jule::I64 _32113_i = _2046dbc46_find_next_fmt(_31718_fmt);;
				if ((_32113_i == -1LL)) {
					goto _iter_end_1c3cd3a77;
				};
				_31813_s+=_31718_fmt.slice(0LL,_32113_i);
				_31813_s+=_2046db99e_arg_to_str(jule::Any(_32012_arg));
				(_31718_fmt).mut_slice((_32113_i + 1LL));;
			}
			_iter_next_1c3cd3a77:;
			++it;
			goto _iter_begin_1c3cd3a77;
		}
		_iter_end_1c3cd3a77:;
	};
	_31813_s+=_31718_fmt;
	return _31813_s;
}



inline jule::Bool _2046dcede_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _2046de771_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _2046dea5c_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _2046ded04_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _2046e00e0_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _2046e0387_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _2046e062e_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _2046e08c6_is_unix(jule::Str _6916_os) {
	return (_2046dea5c_is_darwin(_6916_os) || _2046ded04_is_linux(_6916_os));
}



inline jule::Bool _2046e0c06_is_32bit(jule::Str _7217_arch) {
	return _2046e00e0_is_i386(_7217_arch);
}



inline jule::Bool _2046e0e9d_is_64bit(jule::Str _7517_arch) {
	return (_2046e0387_is_amd64(_7517_arch) || _2046e062e_is_arm64(_7517_arch));
}



inline void _20472a009_init(void) {
	jule::Str _2513_path = _204cc056b_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _236a67820_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _204c674ad_dir(_2513_path);;
	_2513_path=_204c66ed5_join(jule::Slice<jule::Str>::make({_359_path_exec,jule::Str("..", 2)}));
	{
		_20470cc12_PATH_WD=_309_pwd;
		_2046edc7a_PATH_EXEC=_359_path_exec;
		_2046ee8d5_PATH_STDLIB=_204c66ed5_join(jule::Slice<jule::Str>::make({_2513_path,jule::Str("std", 3)}));
		_20470e2c9_PATH_API=_204c66ed5_join(jule::Slice<jule::Str>::make({_2046edc7a_PATH_EXEC,jule::Str("..", 2)}));
		_20470e2c9_PATH_API=_204c66ed5_join(jule::Slice<jule::Str>::make({_20470e2c9_PATH_API,jule::Str("api", 3)}));
		_20470e2c9_PATH_API=_204c66ed5_join(jule::Slice<jule::Str>::make({_20470e2c9_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _2051398b3_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _205085aa6_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1c3d75b2a:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1c3d75b2a:;
			++it;
			goto _iter_begin_1c3d75b2a;
		}
		_iter_end_1c3d75b2a:;
	};
	return false;
}



inline jule::Bool _205139b9e_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _205086304_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1c3d768b7:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1c3d768b7:;
			++it;
			goto _iter_begin_1c3d768b7;
		}
		_iter_end_1c3d768b7:;
	};
	return false;
}



inline jule::Bool _20513a232_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _20513a4c9_is_raw_str(_34615_k)));
}



inline jule::Bool _20513a4c9_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _20513a771_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _20513ad48_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _20513b0e0_is_float(jule::Str _36217_k) {
	if (_204c1a131_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _204c652e1_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _204c652e1_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _20513b387_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _20513b8c6_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _20513bb6d_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _20513c1ac_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _205085963_SPACES;
		auto it = expr.begin();
		_iter_begin_1c3d80618:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1c3d80618:;
			++it;
			goto _iter_begin_1c3d80618;
		}
		_iter_end_1c3d80618:;
	};
	return false;
}



inline jule::Bool _20513c575_is_letter(jule::I32 _41318_r) {
	return _204c29739_is_letter(_41318_r);
}



inline jule::Bool _20513cab4_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _20513cd5b_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _20513d103_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _20513d39a_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1c3d85057:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1c3d85134:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1c3d8519a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c3d8493b:;
			{
				return false;
			}
		}
		_match_end_1c3d841aa:;
	};
}



inline jule::Bool _20513d642_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _20513d8d9_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _205086667_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1c3d88489:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1c3d88489:;
			++it;
			goto _iter_begin_1c3d88489;
		}
		_iter_end_1c3d88489:;
	};
	return false;
}



inline jule::Bool _20513db81_is_assign_op(jule::Str _48121_kind) {
	if (_20513d8d9_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _205086821_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1c3d892c0:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1c3d892c0:;
			++it;
			goto _iter_begin_1c3d892c0;
		}
		_iter_end_1c3d892c0:;
	};
	return false;
}



inline jule::Ptr<_20513e566_File> _205140a95_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_20513e566_File>(_20513e566_File{._field_path=_6321_path});
}



inline _2046db273_Log _205142118_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_20513e566_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _2046db273_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_2046db6b3_logf(_11144_fmt,jule::Any(_11157_args))};
}



inline jule::Bool _20514249d_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1c3d8b833:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1c3d8b833:;
			++it;
			_1259_i++;
			goto _iter_begin_1c3d8b833;
		}
		_iter_end_1c3d8b833:;
	};
	return true;
}



inline jule::Str _2051427de_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_20513cab4_is_decimal(_13913_b))))) {
				goto _iter_end_1c3d8ec21;
			};
		}
	_iter_next_1c3d8ec21:;
	}
	_iter_end_1c3d8ec21:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _205142b74_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _2051427de_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _205142eb5_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _20513cab4_is_decimal(_17913_b)) {
					_case_begin_1c3d9330c:;
					{
						goto _iter_next_1c3d9299e;
					}
				}
				else if (_2051446e2_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1c3d93384:;
					{
						return _205142b74_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1c3d93263:;
					{
						goto _iter_end_1c3d9299e;
					}
				}
				_match_end_1c3d931db:;
			};
		}
	_iter_next_1c3d9299e:;
	}
	_iter_end_1c3d9299e:;;
	return jule::Str();
}



inline jule::Str _205143306_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _2051427de_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _205143647_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _2051427de_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _205143a21_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _2051427de_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_20513cab4_is_decimal(_21213_b))))) {
				goto _iter_end_1c3d96893;
			};
		}
	_iter_next_1c3d96893:;
	}
	_iter_end_1c3d96893:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _205143cb8_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1c3d9a39c:;
					{
						_22731_lit = _205143a21_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1c3d9a424:;
					{
						goto _iter_next_1c3d99885;
					}
				}
				else if (_2051443a1_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1c3d9a49b:;
					{
						_22731_lit = _2051427de_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_20513cab4_is_decimal(_23113_b)))) {
					_case_begin_1c3d9a523:;
					{
						goto _iter_end_1c3d99885;
					}
				}
				_match_end_1c3d9a2ae:;
			};
		}
	_iter_next_1c3d99885:;
	}
	_iter_end_1c3d99885:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _205144060_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_20514249d_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_20513cd5b_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1c3d9dbdb;
			};
		}
	_iter_next_1c3d9dbdb:;
	}
	_iter_end_1c3d9dbdb:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _2051443a1_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _2051446e2_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _205144a33_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _20513cab4_is_decimal(_28713_b)) {
					_case_begin_1c3da344e:;
					{
						goto _iter_next_1c3da2ae1;
					}
				}
				else if (_2051446e2_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1c3da34c6:;
					{
						return true;
					}
				}
				else {
					_case_begin_1c3da33a5:;
					{
						goto _iter_end_1c3da2ae1;
					}
				}
				_match_end_1c3da332d:;
			};
		}
	_iter_next_1c3da2ae1:;
	}
	_iter_end_1c3da2ae1:;;
	return false;
}



inline jule::Bool _205144d74_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1c3da5220:;
			{
				goto _case_begin_1c3da52ec;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1c3da52ec:;
			{
				goto _case_begin_1c3da5363;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1c3da5363:;
			{
				return false;
			}
		}
		else {
			_case_begin_1c3da4b04:;
			{
				return true;
			}
		}
		_match_end_1c3da4a38:;
	};
}



inline jule::Bool _2051451b5_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1c3dac25a:;
			{
				goto _case_begin_1c3dac326;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1c3dac326:;
			{
				goto _case_begin_1c3dac38c;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1c3dac38c:;
			{
				goto _case_begin_1c3dac090;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1c3dac090:;
			{
				return false;
			}
		}
		else {
			_case_begin_1c3dab732:;
			{
				return true;
			}
		}
		_match_end_1c3dab666:;
	};
}



inline jule::Str _20514557d_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _205143a21_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_2051443a1_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _2051427de_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_20513d103_is_octal(_35013_b))))) {
				goto _iter_end_1c3db155b;
			};
		}
	_iter_next_1c3db155b:;
	}
	_iter_end_1c3db155b:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _205145825_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_205144d74_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1c3db71aa:;
					{
						_37128_lit = _205143647_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2051451b5_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1c3db7232:;
					{
						_37128_lit = _205143306_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2051446e2_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1c3db72a9:;
					{
						_37128_lit = _205142b74_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_205144a33_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1c3db7331:;
					{
						_37128_lit = _205142eb5_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_20513d39a_is_hex(_38313_b))))) {
					_case_begin_1c3db73a8:;
					{
						goto _iter_end_1c3db66c6;
					}
				}
				_match_end_1c3db70ab:;
			};
		}
	_iter_next_1c3db66c6:;
	}
	_iter_end_1c3db66c6:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _205145b66_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_20513d39a_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1c3dba301:;
	}
	_iter_end_1c3dba301:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _205145e30_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _205145b66_hex_escape(_42230_txt,10LL);
}



inline jule::Str _20514620a_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _205145b66_hex_escape(_42733_txt,6LL);
}



inline jule::Str _2051464b3_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _205145b66_hex_escape(_43221_txt,4LL);
}



inline jule::Str _20514675a_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_20513d103_is_octal(_43717_txt[1LL]))) || (!(_20513d103_is_octal(_43717_txt[2LL])))) || (!(_20513d103_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_2046db273_Log> _20514b254_lex(jule::Ptr<_20513e566_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_205146e42_Lex _83713_lex = _205146e42_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL};;
	_2051499d3_new_line(&_83713_lex);
	_2051479d1_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _204e7690e_find_module_file(jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1c3e12964:;
		if (it != expr.end()) {
			jule::Ptr<_235b1ea71_DirEntry> &_1312_d = *it;
			{
				if (((!(_235b49804_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1c3e12964:;
			++it;
			goto _iter_begin_1c3e12964;
		}
		_iter_end_1c3e12964:;
	};
	return false;
}



inline jule::Str _204e8e608_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_235b1ea71_DirEntry>> _2617_dirents = ({
				auto except = static__204c67722_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c3e12678;
					goto _iter_end_1c3e12678;
				} jule::Slice<jule::Ptr<_235b1ea71_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _204e7690e_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_204c674ad_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1c3e12678;
			};
		}
	_iter_next_1c3e12678:;
	}
	_iter_end_1c3e12678:;;
	return jule::Str();
}



inline jule::Slice<_2046db273_Log> _204e6c619_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__235b31c3c_read(_204c66ed5_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_2046db273_Log>::make({_2046db273_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50)}});
			return jule::Slice<_2046db273_Log>::make({_2046db273_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50)}});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _204c66347_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_2046db273_Log>::make({_2046db273_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31)}});
	};
	return nullptr;
}



inline jule::Ptr<_1dad01550_FileInfo> _1dad46452_parse_file(jule::Ptr<_20513e566_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1dad01550_FileInfo> _2813_finf = jule::new_ptr<_1dad01550_FileInfo>(_1dad01550_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1dad469d5_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_20500541b_Ast>,jule::Slice<_2046db273_Log>> _1dad469d5_parse_fileset(jule::Ptr<_20513e566_File> _6022_f) {
	jule::Ptr<_1dad657e5_Parser> _6113_p = jule::new_ptr<_1dad657e5_Parser>(_1dad657e5_Parser{});;
	_1dad74958_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_20514edb2_ScopeTree> _1dad4771c_new_scope(void) {
	return jule::new_ptr<_20514edb2_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1dad479e7_is_st(jule::Ptr<_205139176_Token> _4710_current, jule::Ptr<_205139176_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=((_4710_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row));
	_4753_terminated=(_4710_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _1dad47d5a_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_205139176_Token>>& _5329_tokens, jule::I64& _5348_i) {
	if (((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_205139176_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];;
		return ((_5913_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _205139b9e_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1dad48201_next_st_pos(jule::Slice<jule::Ptr<_205139176_Token>>& _6817_tokens, jule::I64 _6835_start) {
	jule::I64 _6913_brace_n = 0LL;;
	jule::I64 _7013_i = _6835_start;;
	for (; (_7013_i < _6817_tokens.len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_205139176_Token> _7413_tok = _6817_tokens[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1c4299191:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1c429b1e8:;
								{
									if (((_6913_brace_n == 0LL) && (_7013_i > _6835_start))) {
										if ((!(_1dad47d5a_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1dad479e7_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1c4299933:;
								{
									(_6913_brace_n)--;
									if (((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len()))) {
										std::tie(_7217_ok,_7317_terminated) = _1dad479e7_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1c4299aed:;
						};
						goto _iter_next_1c4297e09;
					}
				}
				_match_end_1c4299306:;
			};
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1c4297e09;
			};
			if ((_7013_i > _6835_start)) {
				if (_1dad47d5a_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1c4297e09;
				};
				std::tie(_7217_ok,_7317_terminated) = _1dad479e7_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1dad479e7_is_st(_7413_tok,_7413_tok);
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1c4297e09;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1c4297e09:;
	}
	_iter_end_1c4297e09:;;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::Bool> _1dad48542_skip_st(jule::I64& _13017_i, jule::Slice<jule::Ptr<_205139176_Token>> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;;
	jule::Bool _13213_terminated = false;;
	std::tie(_13017_i,_13213_terminated) = _1dad48201_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_205139176_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);;
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1dad48542_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		};
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _1dad48bd5_split_stmts(jule::Slice<jule::Ptr<_205139176_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1dad4883e_Stmt>> _15313_stmts = nullptr;;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < _15221_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_205139176_Token>> _15618_stmt;;
			jule::Bool _15624_terminated;;
			std::tie(_15618_stmt,_15624_terminated) = _1dad48542_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1dad4883e_Stmt>(_1dad4883e_Stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated}));;
		}
	_iter_next_1c42a1a8e:;
	}
	_iter_end_1c42a1a8e:;;
	return _15313_stmts;
}



inline jule::Ptr<_1dad55a38_CallData> _1dad55d9b_get_call_data(jule::Slice<jule::Ptr<_205139176_Token>>& _4423_tokens) {
	jule::Ptr<_1dad55a38_CallData> _4513_data = jule::new_ptr<_1dad55a38_CallData>();;
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1dad641a6_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	};
	jule::Ptr<_205139176_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_529_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1dad641a6_range_last(_4513_data.get()._field_expr_tokens);
	};
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_205139176_Token>> _1dad56187_get_block_expr(jule::Slice<jule::Ptr<_205139176_Token>>& _6024_tokens) {
	jule::I64 _6113_brace_n = 0LL;;
	jule::I64 _6213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1c42a8678:;
		if (it != expr.end()) {
			jule::I64 _639_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _6312_tok = *it;
			{
				{
					auto &_match_expr{ _6312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1c42a8d82:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1c42a91a1:;
						{
							{
								auto &_match_expr{ _6312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1c42aa49e:;
									{
										if (((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL))) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											};
											(_6113_brace_n)++;
											goto _match_end_1c42aa108;
										};
										return _6024_tokens.slice(0LL,_639_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1c42aa6ad:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1c42a9e3d:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1c42aa108:;
							};
						}
					}
					_match_end_1c42a90b3:;
				};
			}
			_iter_next_1c42a8678:;
			++it;
			_639_i++;
			goto _iter_begin_1c42a8678;
		}
		_iter_end_1c42a8678:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::Slice<jule::Ptr<_205139176_Token>>> _1dad5642e_split_colon(jule::Slice<jule::Ptr<_205139176_Token>>& _9121_tokens) {
	jule::I64 _9213_range_n = 0LL;;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1c42a9a53:;
		if (it != expr.end()) {
			jule::I64 _939_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _9312_token = *it;
			{
				{
					auto &_match_expr{ _9312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1c42abeb7:;
						{
							{
								auto &_match_expr{ _9312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1c42ace96:;
									{
										(_9213_range_n)++;
										goto _iter_next_1c42a9a53;
									}
								}
								else {
									_case_begin_1c42ac935:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1c42acb00:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1c42ac2d6:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_205139176_Token>> _10725_l = _9121_tokens.slice(0LL,_939_i);;
								jule::Slice<jule::Ptr<_205139176_Token>> _10825_r = _9121_tokens.slice((_939_i + 1LL));;
								return std::make_tuple(_10725_l,_10825_r);
							};
						}
					}
					_match_end_1c42ac1e8:;
				};
			}
			_iter_next_1c42a9a53:;
			++it;
			_939_i++;
			goto _iter_begin_1c42a9a53;
		}
		_iter_end_1c42a9a53:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1dad5671a_find_lowest_prec_op(jule::Slice<jule::Ptr<_205139176_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;;
	jule::I64 _12413_prec_pos = -1LL;;
	jule::I64 _12613_brace_n = 0LL;;
	jule::Bool _12713_skip_to_next_brace_open = false;;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1c42b0251:;
		if (it != expr.end()) {
			jule::I64 _1289_i = it - expr.begin();
			jule::Ptr<_205139176_Token> &_12812_token = *it;
			{
				{
					
					if ((_12812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1c42b0c68:;
						{
							{
								auto &_match_expr{ _12812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1c42b1e78:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1c42b2165;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1c42b2165:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1c42b1917:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1c42b1a8d:;
							};
							goto _iter_next_1c42b0251;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1c42b0ce0:;
						{
							goto _iter_next_1c42b0251;
						}
					}
					else if ((_12812_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1c42b0d67:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1c42b0251;
						}
					}
					else if ((_1289_i == 0LL)) {
						_case_begin_1c42b0dde:;
						{
							goto _iter_next_1c42b0251;
						}
					}
					else if ((_12812_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1c42b0e66:;
						{
							goto _iter_next_1c42b0251;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1c42b0edd:;
						{
							goto _iter_next_1c42b0251;
						}
					}
					_match_end_1c42b0b14:;
				};
				jule::Ptr<_205139176_Token> _15513_left = _11825_tokens[(_1289_i - 1LL)];;
				if (((_15513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1c42b0251;
				};
				if ((((_1289_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_205139176_Token> _16317_lleft = _11825_tokens[(_1289_i - 2LL)];;
					if (((_16317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12812_token.get()._field_kind == jule::Str("&", 1)) || (_12812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1c42b0251;
						};
					};
				};
				jule::U8 _17213_p = _205139561_prec(_12812_token.ptr());;
				if (((_17213_p != 0LLU) && (_17213_p <= _12313_prec))) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1289_i;
				};
			}
			_iter_next_1c42b0251:;
			++it;
			_1289_i++;
			goto _iter_begin_1c42b0251;
		}
		_iter_end_1c42b0251:;
	};
	return _12413_prec_pos;
}



inline jule::Ptr<_20514c0ce_IdentExpr> _1dad569b2_build_ident_expr(jule::Ptr<_205139176_Token>& _18226_token) {
	return jule::new_ptr<_20514c0ce_IdentExpr>(_20514c0ce_IdentExpr{._field_token=_18226_token, ._field_ident=_18226_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::I64> _1dad56c59_get_range_expr_tokens(jule::Slice<jule::Ptr<_205139176_Token>>& _19031_tokens) {
	jule::I64 _19113_range_n = 0LL;;
	jule::I64 _19213_i = (_19031_tokens.len() - 1LL);;
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_205139176_Token> _19413_tok = _19031_tokens[_19213_i];;
			if ((_19413_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c42b9d71:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1c42b9777:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1c42b99a8:;
				};
			};
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			};
		}
	_iter_next_1c42b83ad:;
	}
	_iter_end_1c42b83ad:;;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _1dad6265a_check_assign_tokens(jule::Slice<jule::Ptr<_205139176_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_20513d642_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1c42bbc85:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c42bcd1e:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1c42bc714:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1c42bc956:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1c42bbc85;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _20513db81_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1c42bbc85:;
			++it;
			goto _iter_begin_1c42bbc85;
		}
		_iter_end_1c42bbc85:;
	};
	return false;
}



inline _2046db273_Log _1dad63969_make_err(jule::I64 _4913_row, jule::I64 _4923_col, jule::Ptr<_20513e566_File>& _4934_f, jule::Str _4944_fmt, jule::Slice<jule::Any> _4957_args) {
	return _2046db273_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4913_row, ._field_column=_4923_col, ._field_path=_4934_f.get()._field_path, ._field_text=_2046db6b3_logf(_4944_fmt,jule::Any(_4957_args))};
}



inline jule::Slice<jule::Ptr<_205139176_Token>> _1dad63e0e_range(jule::I64& _6815_i, jule::Str _6823_open, jule::Str _6840_close, jule::Slice<jule::Ptr<_205139176_Token>>& _6863_tokens) {
	if ((_6815_i >= _6863_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_205139176_Token> _739_tok = _6863_tokens[_6815_i];;
	if (((_739_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok.get()._field_kind != _6823_open))) {
		return nullptr;
	};
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;;
	jule::I64 _809_start = _6815_i;;
	for (; ((_7913_range_n != 0LL) && (_6815_i < _6863_tokens.len())); (_6815_i)++) {
		{
			jule::Ptr<_205139176_Token> _8213_token = _6863_tokens[_6815_i];;
			if ((_8213_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8213_token.get()._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1c42c3143:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1c42c3440:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1c42c3352:;
				};
			};
		}
	_iter_next_1c42bec99:;
	}
	_iter_end_1c42bec99:;;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::Slice<jule::Ptr<_205139176_Token>>> _1dad641a6_range_last(jule::Slice<jule::Ptr<_205139176_Token>>& _10320_tokens) {
	jule::Slice<jule::Ptr<_205139176_Token>> _10340_cutted = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::Slice<jule::Ptr<_205139176_Token>> _10358_cut = jule::Slice<jule::Ptr<_205139176_Token>>();
	if ((_10320_tokens.len() == 0LL)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	} else if ((_10320_tokens[(_10320_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	};
	jule::I64 _11013_brace_n = 0LL;;
	jule::I64 _11113_i = (_10320_tokens.len() - 1LL);;
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_205139176_Token> _11313_token = _10320_tokens[_11113_i];;
			if ((_11313_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11313_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c42c7312:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1c42c3b9e;
						}
					}
					else {
						_case_begin_1c42c6c18:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1c42c6e49:;
				};
			};
			if ((_11013_brace_n == 0LL)) {
				_10340_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10358_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10340_cutted,_10358_cut);
			};
		}
	_iter_next_1c42c3b9e:;
	}
	_iter_end_1c42c3b9e:;;
	_10340_cutted = _10320_tokens;
	_10358_cut = nullptr;
	return std::make_tuple(_10340_cutted,_10358_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>>,jule::Slice<_2046db273_Log>> _1dad645d5_parts(jule::Slice<jule::Ptr<_205139176_Token>>& _14015_tokens, jule::U64 _14033_id, jule::Bool _14046_expr_must) {
	if ((_14015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_205139176_Token>>> _14513_parts = nullptr;;
	jule::Slice<_2046db273_Log> _14613_errors = nullptr;;
	jule::I64 _14813_range_n = 0LL;;
	jule::I64 _14913_last = 0LL;;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_1c42ced0e:;
		if (it != expr.end()) {
			jule::I64 _1509_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _15012_token = *it;
			{
				if ((_15012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _15012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c42d112e:;
							{
								(_14813_range_n)++;
								goto _iter_next_1c42ced0e;
							}
						}
						else {
							_case_begin_1c42d0a24:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_1c42d0c66:;
					};
				};
				if ((_14813_range_n > 0LL)) {
					goto _iter_next_1c42ced0e;
				};
				if ((_15012_token.get()._field_id == _14033_id)) {
					if ((_14046_expr_must && ((_1509_i - _14913_last) <= 0LL))) {
						_2046db273_Log _16921_err = _1dad63969_make_err(_15012_token.get()._field_row,_15012_token.get()._field_column,_15012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14613_errors = jule::alloc_for_append(_14613_errors,1);_14613_errors.__push(_16921_err);;
					};
					_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last,_1509_i));;
					_14913_last=static_cast<jule::I64>((_1509_i + 1LL));
				};
			}
			_iter_next_1c42ced0e:;
			++it;
			_1509_i++;
			goto _iter_begin_1c42ced0e;
		}
		_iter_end_1c42ced0e:;
	};
	if ((_14913_last < _14015_tokens.len())) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last));;
	} else if ((!(_14046_expr_must))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(jule::Slice<jule::Ptr<_205139176_Token>>());;
	};
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1dad6489e_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1c42d4cc0:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1c42d034d:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1c42d03b4:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1c42d44d9:;
			{
				return jule::Str();
			}
		}
		_match_end_1c42d43b8:;
	};
}



inline _2046db273_Log _1dad64c9a_compiler_err(jule::Ptr<_205139176_Token>& _19918_token, jule::Str& _19934_fmt, jule::Slice<jule::Any> _19947_args) {
	return _2046db273_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_19918_token.get()._field_row, ._field_column=_19918_token.get()._field_column, ._field_path=_19918_token.get()._field_file.get()._field_path, ._field_text=_2046db6b3_logf(_19934_fmt,jule::Any(_19947_args)), ._field_line=_205140743_get_row(_19918_token.get()._field_file.ptr(), _19918_token.get()._field_row)};
}



inline void _1dad650ec_push_suggestion(_2046db273_Log* _21031_log, jule::Str _21042_fmt, jule::Slice<jule::Any> _21055_args) {
	_21031_log->_field_suggestion=_2046db6b3_logf(_21042_fmt,jule::Any(_21055_args));
}



inline jule::Str _1dad6542c_tokstoa(jule::Slice<jule::Ptr<_205139176_Token>>& _21413_tokens) {
	jule::Str _21513_s = jule::Str();;
	{
		auto &expr = _21413_tokens;
		auto it = expr.begin();
		_iter_begin_1c42d7be6:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> &_21612_token = *it;
			{
				_21513_s+=_21612_token.get()._field_kind;
			}
			_iter_next_1c42d7be6:;
			++it;
			goto _iter_begin_1c42d7be6;
		}
		_iter_end_1c42d7be6:;
	};
	return _21513_s;
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad75580_build_void_type(void) {
	return jule::new_ptr<_204ec8b92_TypeDecl>();
}



inline jule::Ptr<_204ec8b92_TypeDecl> _1dad757c2_build_prim_type(jule::Ptr<_205139176_Token> _2224_t) {
	return jule::new_ptr<_204ec8b92_TypeDecl>(_204ec8b92_TypeDecl{._field_token=_2224_t, ._field_kind=jule::Any(jule::new_ptr<_204ec8d7e_IdentTypeDecl>(_204ec8d7e_IdentTypeDecl{._field_token=_2224_t, ._field_ident=_2224_t.get()._field_kind}))});
}



inline std::tuple<jule::Slice<jule::Ptr<_205139176_Token>>,jule::I64> _1dad75b13_split_map_range(jule::Slice<jule::Ptr<_205139176_Token>>& _3525_tokens, jule::I64& _3548_i) {
	jule::Slice<jule::Ptr<_205139176_Token>> _3558_range_tokens = jule::Slice<jule::Ptr<_205139176_Token>>();
	jule::I64 _3582_colon = jule::I64();
	_3582_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;;
	jule::I64 _389_start = _3548_i;;
	for (; (_3548_i < _3525_tokens.len()); (_3548_i)++) {
		{
			jule::Ptr<_205139176_Token> _4013_token = _3525_tokens[_3548_i];;
			if ((_4013_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c42dae3b:;
						{
							(_3713_range_n)++;
							goto _iter_next_1c42d9676;
						}
					}
					else {
						_case_begin_1c42da853:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1c42daa73:;
				};
			};
			if ((_3713_range_n == 0LL)) {
				if (((_389_start + 1LL) > _3548_i)) {
					return std::make_tuple(_3558_range_tokens,_3582_colon);
				};
				_3558_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3548_i);
				goto _iter_end_1c42d9676;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1c42d9676;
			};
			if (((_3582_colon == -1LL) && (_4013_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3582_colon=static_cast<jule::I64>(((_3548_i - _389_start) - 1LL));
			};
		}
	_iter_next_1c42d9676:;
	}
	_iter_end_1c42d9676:;;
	return std::make_tuple(_3558_range_tokens,_3582_colon);
}



inline jule::I64 _1c29d2337_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1c29d8b68_len64(_6124_x)));
}



inline jule::I64 _1c29d2c83_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1c29d3899_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1c29d3602_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1c29d2700_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1c29d3899_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1c29d2a30_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1c29d88c1_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1c29d8b68_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1c29d9828_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1c29daeab_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1c2900068_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1c2900354_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1c29005eb_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1c29008d7_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1c2902851_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1c43c9b1d:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1c2965d7b_is_inf(_4718_f,0LL) || _1c294dc10_is_nan(_4718_f)) {
			_case_begin_1c43c9b95:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1c43c9a1e:;
	};
	std::tie(_4718_f,_4739_exp) = _1c2986a7d_normalize(_4718_f);
	jule::U64 _5613_x = _1c29005eb_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1c29008d7_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1c29ac950_nan(void) {
	return static_cast<jule::F64>(_1c29008d7_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1c294dc10_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1c295074a_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1c29008d7_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1c29008d7_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1c2965d7b_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1c2986a7d_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1c29dee38_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1c29de861_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1c294dc10_is_nan(_11112_x) || _1c2965d7b_is_inf(_11112_x,1LL)) {
			_case_begin_1c441c7ed:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1c441c875:;
			{
				return static_cast<jule::F64>(_1c29ac950_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1c441c8ec:;
			{
				return static_cast<jule::F64>(_1c295074a_inf(-1LL));
			}
		}
		_match_end_1c441c721:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1c2902851_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1c29dee38_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1c29008d7_f64_from_bits(static_cast<jule::U64>((_1c29005eb_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1c29e1742_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1c29dee38_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1c44883a2:;
		}
		_iter_end_1c44883a2:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1c29e1b60_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1c2902851_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1c29de861_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1dbba6b96_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1dbc70468_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1dbc237d4_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1dbc70468_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1c2794acd_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c46aba48:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1c2900068_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1c2794acd_FloatInfo>)((&(_204c8db88_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c46ab817:;
			{
				_8313_bits=static_cast<jule::U64>(_1c29005eb_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1c2794acd_FloatInfo>)((&(_1dbbb5853_F64_INFO))));
			}
		}
		else {
			_case_begin_1c46ab509:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c46ab42c:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1c46aec9e:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1c46b228a:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1c46b2488:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1c46b1278:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1c46b11ac:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c46b0871:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1c46ab482:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1c46aec49:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1dbbc4543_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1c26b4613_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1dbc26ee1_DecimalSlice _13213_digs = _1dbc26ee1_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1c2a0e1cc_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c46b6921:;
				{
					_8259_prec=static_cast<jule::I64>(_1dbc237d4_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c46b6987:;
				{
					_8259_prec=static_cast<jule::I64>(_1dbc237d4_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c46b6a20:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1c46b68bb:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c46b8bdc:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c46b8c53:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1c46b6a86:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1c46b85c1:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1c2a0dd36_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1c2a0de68_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1c2796580_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1c27d6988_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1c2796580_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1c2794acd_FloatInfo& _18327_flt) {
	_1c2a10398_Decimal _18413_d = _1c2a10398_Decimal{};;
	_1c2a10585_assign(&_18413_d, _1835_mant);
	_1c2a106b7_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1dbc26ee1_DecimalSlice _18713_digs = _1dbc26ee1_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1c28d3436_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1dbc26ee1_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp};
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c46c0cb0:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c46c1c4a:;
				{
					_18234_prec=static_cast<jule::I64>(_1dbc237d4_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c46c1cb1:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1c46c1ae6:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c46c0a90:;
				{
					_1c2a10a5d_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c46c0b06:;
				{
					_1c2a10a5d_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c46c0b6c:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1c2a10a5d_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1c46c0a29:;
		};
		_18713_digs=_1dbc26ee1_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp};
	};
	return _1c27d6988_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1c27d6988_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1dbc26ee1_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c46c6ec5:;
			{
				return _1dbbd3552_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c46c703b:;
			{
				return _1c27d6647_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c46c70a2:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1dbbd3552_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1c27d6647_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1dbc237d4_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1c46c6e70:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1c28d3436_round_shortest(_1c2a10398_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1c2794acd_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1c2a10398_Decimal _28713_upper = _1c2a10398_Decimal{};;
	_1c2a10585_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1c2a106b7_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1c2a10398_Decimal _30613_lower = _1c2a10398_Decimal{};;
	_1c2a10585_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1c2a106b7_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1c46d0c15;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1c46d923a:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1c46d92b2:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1c46d9339:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1c46d916e:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1c46dc20a:;
					{
						_1c2a10a5d_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1c46dc282:;
					{
						_1c2a107e9_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1c46dc309:;
					{
						_1c2a1092b_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c46dc161:;
			};
		}
	_iter_next_1c46d0c15:;
	}
	_iter_end_1c46d0c15:;;
}



inline jule::Slice<jule::U8> _1dbbd3552_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1dbc26ee1_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1c27d3545_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1c46e22cb:;
		}
		_iter_end_1c46e22cb:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1c46e3d5a:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1c46e3dc1:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c46e4520:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c46e3651:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1c27d6647_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1dbc26ee1_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1c27d3545_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1c46e906e:;
		}
		_iter_end_1c46e906e:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1c46e9c73:;
		}
		_iter_end_1c46e9c73:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1dbbc4543_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1c2794acd_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1c2a1306b_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1c2a1306b_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1c26b4613_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1c2794acd_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c47056c9:;
	}
	_iter_end_1c47056c9:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c470929e:;
		}
		_iter_end_1c470929e:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c470c637:;
		}
		_iter_end_1c470c637:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1dbbb33de_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c4712175:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c47096bc:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c4709656:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c470de41:;
	};
	return _50614_dst;
}



inline jule::I64 _1c27d3545_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1dbc237d4_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1dbbb33de_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1dbbb3521___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1c4716ba2:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1c4716a70:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1dbbb33de_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1c4718632:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1dbbb33de_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1c4718698:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1dbbb33de_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1c4718324:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c47182ad:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1c47181e2:;
					};
				};
			}
		}
		else {
			_case_begin_1c4715d27:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1c4715cc2:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c471d46c:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c471d109:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c471ca32:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1c471cd73:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c4718005:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c471de95:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1c471d89b:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1c471e76a:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c47212e9:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1dbbb33de_lower(_10912_c)) && (_1dbbb33de_lower(_10912_c) <= 'z'))) {
						_case_begin_1c47211b7:;
						{
							_11017_d=static_cast<jule::U8>(((_1dbbb33de_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c472122d:;
						{
							goto _iter_next_1c471e76a;
						}
					}
					else {
						_case_begin_1c4720c55:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1c4720bcd:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1c471e76a:;
			++it;
			goto _iter_begin_1c471e76a;
		}
		_iter_end_1c471e76a:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1dbbb3653_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1dbbb3521___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1c2a0c0cb_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1dbbb3521___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1c2a0c4e9_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1c29008d7_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1c29d2337_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1c29daeab_mul64(_4123_man,_1dbc7c2aa_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1c29daeab_mul64(_4123_man,_1dbc7c2aa_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1c29008d7_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1c2a0c62b_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1c2900354_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1c29d2337_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1c29daeab_mul64(_11023_man,_1dbc7c2aa_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1c29daeab_mul64(_11023_man,_1dbc7c2aa_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1c2900354_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1c2a0cac1_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1c4746374:;
	}
	_iter_end_1c4746374:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1c2a0cc03_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c474ab81:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1c474abe7;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c474abe7:;
			{
				jule::I64 _8317_case_n = _1c2a0cac1_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1c295074a_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c474ac5d:;
			{
				if ((_1c2a0cac1_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1c29ac950_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1c474ab2b:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1c2a0cd35_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1c4751aaa:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1c4751d0d:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1c475189b:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1dbbb33de_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1c47571ed:;
					{
						goto _iter_next_1c475674c;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1c4757275:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1c475674c;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1c47572ec:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1c475674c;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1c475674c;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1dbbb33de_lower(_13313_c))) && (_1dbbb33de_lower(_13313_c) <= 'f'))) {
					_case_begin_1c4757374:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1dbbb33de_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1c475674c;
					}
				}
				_match_end_1c4757110:;
			};
			goto _iter_end_1c475674c;
		}
	_iter_next_1c475674c:;
	}
	_iter_end_1c475674c:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1dbbb33de_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1c4761911;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1c4761911:;
		}
		_iter_end_1c4761911:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1c2a0d30d_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1dbbb5853_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1c476bb08:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1c476bb80:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1c276279e_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1c276279e_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1c476bc07:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1c276279e_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1c476ba5e:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1c2a0d440_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _204c8db88_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1c4771855:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1c47718bb:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1c2762e64_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1c2762e64_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1c4771932:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1c2762e64_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1c4771712:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1c2a0d572_atof_hex(jule::Str _55113_s, _1c2794acd_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1c4776e98:;
	}
	_iter_end_1c4776e98:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1c47782b8:;
	}
	_iter_end_1c47782b8:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1c4778dbd:;
	}
	_iter_end_1c4778dbd:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _204c8db88_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1c2900354_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1c29008d7_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1c2a0d6a4_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1c2a0cc03_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1c2a0cd35_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1c2a0d572_atof_hex(_61611_s.slice(0LL,_61629_n),_204c8db88_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1c2a0d440_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1c2a0c62b_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1c2a0c62b_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1c2a10398_Decimal _66213_d = _1c2a10398_Decimal{};;
	if ((!(_1c2a0ce67_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1c2a0d099_float_bits(&_66213_d, _204c8db88_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1c2900354_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2a0d7d6_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1c2a0cc03_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1c2a0cd35_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1c2a0d572_atof_hex(_67411_s.slice(0LL,_67429_n),_1dbbb5853_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1c2a0d30d_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1c2a0c4e9_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1c2a0c4e9_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1c2a10398_Decimal _71913_d = _1c2a10398_Decimal{};;
	if ((!(_1c2a0ce67_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1c2a0d099_float_bits(&_71913_d, _1dbbb5853_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1c29008d7_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2a0d918_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1c2a0d6a4_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1c2a0d7d6_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1c2a0da4a_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1c2a0d918_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1c2a0dd36_ryu_ftoa_fixed32(_1dbc26ee1_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1c29d88c1_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1c2a0e30e_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1c2a0ea29_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1c2a0ec8d_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1c2a0e09a_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1c2a0de68_ryu_ftoa_fixed64(_1dbc26ee1_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1c29d8b68_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1c2a0e30e_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1c2a0eb5b_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1c2a0ec8d_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1c2a0e09a_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1c2a0e09a_format_decimal(_1dbc26ee1_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1c2798cbe_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1c47aee6a:;
	}
	_iter_end_1c47aee6a:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1c47b02bc:;
	}
	_iter_end_1c47b02bc:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1c47b89bd:;
	}
	_iter_end_1c47b89bd:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1c2a0e1cc_ryu_ftoa_shortest(_1dbc26ee1_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1c2794acd_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1c29d3899_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1c2a0e7b5_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1c2a0e573_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1c2a0e7b5_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1c2a0e30e_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _204c8db88_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1c2a0ea29_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1c2a0ea29_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1c2a0ea29_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1c2a0eb5b_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1c2a0eb5b_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1c2a0eb5b_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1c2a0ec8d_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1c2a0ec8d_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1c2a0ec8d_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1c2a0e7b5_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1c2a0e30e_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1c2a0e441_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1c2a0e573_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1c2794acd_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1c2a0e7b5_ryu_digits(_1dbc26ee1_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1c2a0edc0_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1c2a0edc0_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1c2a0edc0_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1c2a0e8e7_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1c2a0e8e7_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1c47d8d2e:;
		}
		_iter_end_1c47d8d2e:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1c2a0e8e7_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1c47d948e:;
	}
	_iter_end_1c47d948e:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1c47dc816:;
	}
	_iter_end_1c47dc816:;;
}



inline void _1c2a0e8e7_ryu_digits32(_1dbc26ee1_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1c47e0572;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1c47e0572:;
	}
	_iter_end_1c47e0572:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1c47e05b6:;
	}
	_iter_end_1c47e05b6:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1c2a0ea29_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1dbc7c2aa_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1c29daeab_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1c2a0e441_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1c2a0eb5b_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1dbc7c2aa_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1c2a0e441_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1c29daeab_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1c29daeab_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1c29d9828_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1c2a0ec8d_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1c48025d9:;
	}
	_iter_end_1c48025d9:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1c2a0edc0_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
	jule::U64 _60710_hi;;
	std::tie(_60710_hi,std::ignore) = _1c29daeab_mul64(static_cast<jule::U64>((_60214_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6089_q = (_60710_hi >> 28LLU);;
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6089_q)),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x - (_6089_q * 1000000000LL)))));
}



inline void _1c2a10e04_trim(_1c2a10398_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1c4808689:;
	}
	_iter_end_1c4808689:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1c2a11036_right_shift(_1c2a10398_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1c480bbcb:;
				}
				_iter_end_1c480bbcb:;;
				goto _iter_end_1c4809db6;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1c4809db6:;
	}
	_iter_end_1c4809db6:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1c480dace:;
	}
	_iter_end_1c480dace:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1c4810d01:;
	}
	_iter_end_1c4810d01:;;
	_34321_a._field_nd=_34513_w;
	_1c2a10e04_trim(_34321_a);
}



inline jule::Bool _1c2a11168_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1c48131cc:;
	}
	_iter_end_1c48131cc:;;
	return false;
}



inline void _1c2a1129a_left_shift(_1c2a10398_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1c2865132_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1c2a11168_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1c2865132_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1c48169a5:;
	}
	_iter_end_1c48169a5:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1c4816ae8:;
	}
	_iter_end_1c4816ae8:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1c2a10e04_trim(_41120_a);
}



inline jule::Bool _1c2a113cc_should_round_up(_1c2a10398_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1c2a11d7d_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1c2a12796_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1c2a1306b_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1c2a12213_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1c2a12796_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1c2a1306b_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1c2a124aa_itoa(jule::I64 _8013_i) {
	return _1c2a12213_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1c2a12796_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1c2a12a3d_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1c2a1306b_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1c4829622:;
		}
		_iter_end_1c4829622:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1c2a12a3d_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1c29d2c83_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1c48314e7:;
		}
		_iter_end_1c48314e7:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1c4832053:;
		}
		_iter_end_1c4832053:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1c2ac4b55_lshift_unsig(_1c2abb9a4_Const& _58722_c, _1c2abb9a4_Const& _58733_x) {
	jule::U64 _5889_l = _1c2abdba4_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1c2abdba4_as_u64(&_58733_x);;
	_1c2abe413_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1c2ac4e52_rshift_unsig(_1c2abb9a4_Const& _59322_c, _1c2abb9a4_Const& _59333_x) {
	jule::U64 _5949_l = _1c2abdba4_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1c2abdba4_as_u64(&_59333_x);;
	_1c2abe413_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::Str _1c2b54685_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c48b3bb7:;
			{
				return _1c2b540be_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c48b3c2d:;
			{
				return _1c2b541ac_SYS_UINT;
			}
		}
		else {
			_case_begin_1c48b3b51:;
			{
				return _4521_kind;
			}
		}
		_match_end_1c48b3aeb:;
	};
}



inline jule::I64 _1c2b5492c_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1c48b4cd9:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1c48b4adb:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1c48b4b52:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1c48b4bb8:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1c48b4965:;
			{
				return _1c2b53ed1_BIT_SIZE;
			}
		}
		else {
			_case_begin_1c48ade26:;
			{
				return -1LL;
			}
		}
		_match_end_1c48addc1:;
	};
}



inline jule::Str _1c2b54c18_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1c48b6cca:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c48b5e3e:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c48b5ea5:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c48b601b:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1c48b4a20:;
			{
				return jule::Str();
			}
		}
		_match_end_1c48b668c:;
	};
}



inline jule::Str _1c2b54eb0_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1c48b822c:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c48b6dc9:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c48b6e40:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c48b6ea6:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1c48b7a56:;
			{
				return jule::Str();
			}
		}
		_match_end_1c48b79bd:;
	};
}



inline jule::Str _1c2b55257_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1c48b965c:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c48b832b:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1c48b8ace:;
			{
				return jule::Str();
			}
		}
		_match_end_1c48b8e20:;
	};
}



inline jule::Bool _1c2b55cb3_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1c2a0da4a_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1c2b5605a_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c48bea6e:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1c48bda4b:;
			{
				return 64LL;
			}
		}
		_match_end_1c48be61d:;
	};
}



inline jule::I64 _1c2b56302_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1c48c0ae7:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1c48c0b5d:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1c48c092c:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1c48c0762:;
			{
				return 64LL;
			}
		}
		_match_end_1c48c04ed:;
	};
}



inline jule::I64 _1c2b56599_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1c48c2ae9:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1c48c2b60:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1c48c292e:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1c48c24cd:;
			{
				return 64LL;
			}
		}
		_match_end_1c48c2412:;
	};
}



inline void _1c2b5670e_update_target(void) {
	{
		{
			auto &_match_expr{ _2047146ca_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1c48c3e5d:;
				{
					_1c2b53ed1_BIT_SIZE=64LL;
					_1c2b540be_SYS_INT=jule::Str("i64", 3);
					_1c2b541ac_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1c48c3ec4:;
				{
					_1c2b53ed1_BIT_SIZE=32LL;
					_1c2b540be_SYS_INT=jule::Str("i32", 3);
					_1c2b541ac_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1c48c3dd6:;
		};
	};
}



inline void _1c2b56874_init(void) {
	_1c2b5670e_update_target();
}



inline jule::F64 _1c2b58c50_min(jule::Str _6116_k) {
	_6116_k=_1c2b54685_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c48c6977:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c48c678a:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c48c6801:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c48c6614:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c48c667a:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c48c66e1:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1c48c418e:;
			{
				return 0LL;
			}
		}
		_match_end_1c48c4337:;
	};
}



inline jule::F64 _1c2b5903b_max(jule::Str _8316_k) {
	_8316_k=_1c2b54685_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c48c8627:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c48c868d:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c48c84a1:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c48c8517:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c48c857d:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c48c814e:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c48c81b5:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c48c822b:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c48c8292:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c48c889c:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1c48c6aed:;
			{
				return 0LL;
			}
		}
		_match_end_1c48c80e9:;
	};
}



inline jule::Bool _1c2b5949d_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1c2b59789_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1c2b59a31_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1c2b59d1c_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1c2b5a0b4_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1c2b5a35b_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1c2b5a603_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1c2b5a933_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1c2b5abca_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1c2b5ae72_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1c2b5b2b3_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c48d1d6c:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c48d1dd3:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c48d1e8d:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c48d2004:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c48d1960:;
			{
				return _1c2b5949d_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c48d19c6:;
			{
				return _1c2b59789_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c48d1a3c:;
			{
				return _1c2b59a31_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c48d1aa3:;
			{
				return _1c2b59d1c_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c48d209d:;
			{
				return _1c2b5a0b4_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c48d2125:;
			{
				return _1c2b5a35b_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c48d219c:;
			{
				return _1c2b5a603_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c48d2224:;
			{
				return _1c2b5a933_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c48d229b:;
			{
				return _1c2b5abca_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c48d2323:;
			{
				return _1c2b5ae72_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1c48d239a:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1c48d2422:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1c48d0dc1:;
			{
				return false;
			}
		}
		_match_end_1c48d17b7:;
	};
}



inline jule::Bool _1c2b5b55a_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1c2b5b802_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1c2b5ba99_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1c2b5bd41_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1c2b5c209_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1c2b5c4a1_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1c2b5c748_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1c2b5c9e0_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1c2b5cd31_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c48db0b8:;
			{
				return _1c2b5de53_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c48db12e:;
			{
				return _1c2b5e23e_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c48dad32:;
			{
				return _1c2b5e23e_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c48dad98:;
			{
				return _1c2b5b55a_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c48dae0e:;
			{
				return _1c2b5b802_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c48daace:;
			{
				return _1c2b5ba99_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c48dab45:;
			{
				return _1c2b5bd41_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c48dabbc:;
			{
				return _1c2b5c209_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c48db1c8:;
			{
				return _1c2b5c4a1_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c48db23e:;
			{
				return _1c2b5c748_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c48db2a5:;
			{
				return _1c2b5c9e0_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c48db31b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c48da22c:;
			{
				return false;
			}
		}
		_match_end_1c48da2b5:;
	};
}



inline jule::Bool _1c2b5de53_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1c2b5e23e_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1c2b5e4d6_is_int(jule::Str _4615_k) {
	return (_1c2b5de53_is_sig_int(_4615_k) || _1c2b5e23e_is_unsig_int(_4615_k));
}



inline jule::Bool _1c2b5e7c2_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1c2b5ea69_is_num(jule::Str _5615_k) {
	return (_1c2b5e4d6_is_int(_5615_k) || _1c2b5e7c2_is_float(_5615_k));
}



inline jule::Bool _1c2bca013_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1c2bcb9d7_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1c2bcc488_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _2369b30b7_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1c2bcbb19_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1c2bcbda0_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1c2bcc7c9_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _2369b30b7_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_2369b43a4_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1c48e9a99:;
	}
	_iter_end_1c48e9a99:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1c2bcc147_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c48ed905:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c48ee4a5:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c48ee51b:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c48ee582:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c48ee5e8:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c48ee670:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c48ee6e7:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c48ee76e:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c48ee7e6:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c48ee86d:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1c48ee351:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1c2bcc488_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1c2bcc147_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1c4904ca2:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1dbbb3653_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c4904972:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1dbbb3653_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c49049d8:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dbbb3653_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1c4903b80:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dbbb3653_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1c4903575:;
	};
}



inline jule::Slice<jule::U8> _1c2bcc7c9_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1c2bcc488_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1c2cb4b9c_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _2369b30b7_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1c4937a82:;
	}
	_iter_end_1c4937a82:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1c2c99ec3_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _2369b30b7_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1c493a436:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c493a4e1:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1c493a3d1:;
			};
		}
	_iter_next_1c49395ab:;
	}
	_iter_end_1c49395ab:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1c2ca68e7_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1c493c46b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dbba6b96_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c493c0b4:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dbba6b96_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1c493b624:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a12213_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1c493bca6:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a12213_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1c493bd1c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a12213_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c493bd94:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a12213_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1c493be0a:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a11d7d_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1c4939611:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a11d7d_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1c4939677:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a11d7d_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c49396dd:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2a11d7d_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c4939754:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1c493c515:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1c493a6de:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1c493baa8:;
	};
}



inline jule::Slice<jule::U8> _235a2bd8a_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1c2ca68e7_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1c2c92691_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _235a2bd8a_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1c2c927c3_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1c2cb4b9c_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1c2cb4b9c_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1c2c99ec3_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1c49488a6;
			};
			_11213_bytes=jule::append(_11213_bytes,_1c2c92691_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1c49488a6;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1c49488a6:;
	}
	_iter_end_1c49488a6:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1c2c91daa_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1c2c927c3_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1c1ccb269_kind_uses_generics(jule::Ptr<_1c2c1b131_TypeKind> _42023_k, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>& _42038_generics) {
	jule::Str _4219_pk = _1c2c1b4d8_to_str(_42023_k.ptr());;
	{
		auto &expr = _42038_generics;
		auto it = expr.begin();
		_iter_begin_1c54e4e8a:;
		if (it != expr.end()) {
			jule::Ptr<_20514e235_GenericDecl> &_42212_g = *it;
			{
				if (_204c04a99_contains(_4219_pk,_42212_g.get()._field_ident)) {
					return true;
				};
			}
			_iter_next_1c54e4e8a:;
			++it;
			goto _iter_begin_1c54e4e8a;
		}
		_iter_end_1c54e4e8a:;
	};
	return false;
}



inline jule::Bool _1c1ccb621_parameter_uses_generics(jule::Ptr<_1c1cc4c79_Param>& _43029_p, jule::Slice<jule::Ptr<_20514e235_GenericDecl>>& _43041_generics) {
	if (_1c1cc53a6_is_self(_43029_p.ptr())) {
		return false;
	};
	return _1c1ccb269_kind_uses_generics(_43029_p.get()._field_kind.get()._field_kind,_43041_generics);
}



inline jule::Ptr<_1c2c24d2c_TypeSymbol> _1c1ccded6_build_type(jule::Ptr<_204ec8b92_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_decl=_8419_t});
}



inline jule::Ptr<_1c2be2d2d_Value> _1c1cce2c2_build_expr(jule::Ptr<_2050bba21_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_expr=_9319_expr});
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c1cce569_build_type_alias(jule::Ptr<_2051518a8_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_scope=_10225_decl.get()._field_scope, ._field_public=_10225_decl.get()._field_public, ._field_cpp_linked=_10225_decl.get()._field_cpp_linked, ._field_token=_10225_decl.get()._field_token, ._field_ident=_10225_decl.get()._field_ident, ._field_kind=_1c1ccded6_build_type(_10225_decl.get()._field_kind)});
}



inline jule::Ptr<_1c1c07382_Field> _1c1cce855_build_field(jule::Ptr<_205152b84_FieldDecl> _11320_decl) {
	return jule::new_ptr<_1c1c07382_Field>(_1c1c07382_Field{._field_token=_11320_decl.get()._field_token, ._field_public=_11320_decl.get()._field_public, ._field_mutable=_11320_decl.get()._field_mutable, ._field_ident=_11320_decl.get()._field_ident, ._field_kind=_1c1ccded6_build_type(_11320_decl.get()._field_kind), ._field_default=_11320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1c1c07382_Field>> _1c1cceaec_build_fields(jule::Slice<jule::Ptr<_205152b84_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_1c1c07382_Field>> _12513_fields = jule::Slice<jule::Ptr<_1c1c07382_Field>>::alloc(0LL,_12422_decls.len());;
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_1c54e9368:;
		if (it != expr.end()) {
			jule::Ptr<_205152b84_FieldDecl> _12617_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_1c1cce855_build_field(_12617_decl));;
			}
			_iter_next_1c54e9368:;
			++it;
			goto _iter_begin_1c54e9368;
		}
		_iter_end_1c54e9368:;
	};
	return _12513_fields;
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c1cced94_build_struct(jule::Ptr<_2051534e2_StructDecl> _13221_decl) {
	return jule::new_ptr<_1c1cb3e55_Struct>(_1c1cb3e55_Struct{._field_token=_13221_decl.get()._field_token, ._field_ident=_13221_decl.get()._field_ident, ._field_fields=_1c1cceaec_build_fields(_13221_decl.get()._field_fields), ._field_public=_13221_decl.get()._field_public, ._field_cpp_linked=_13221_decl.get()._field_cpp_linked, ._field_directives=_13221_decl.get()._field_directives, ._field_generics=_13221_decl.get()._field_generics});
}



inline jule::Ptr<_1c1cc4c79_Param> _1c1cd013b_build_param(jule::Ptr<_20515009e_ParamDecl> _14420_decl) {
	return jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_token=_14420_decl.get()._field_token, ._field_mutable=_14420_decl.get()._field_mutable, ._field_variadic=_14420_decl.get()._field_variadic, ._field_reference=_14420_decl.get()._field_reference, ._field_kind=_1c1ccded6_build_type(_14420_decl.get()._field_kind), ._field_ident=_14420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1c1cc4c79_Param>> _1c1cd046b_build_params(jule::Slice<jule::Ptr<_20515009e_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_1c1cc4c79_Param>> _15613_params = jule::Slice<jule::Ptr<_1c1cc4c79_Param>>::alloc(0LL,_15522_decls.len());;
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_1c54ec2e4:;
		if (it != expr.end()) {
			jule::Ptr<_20515009e_ParamDecl> _15717_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_1c1cd013b_build_param(_15717_decl));;
			}
			_iter_next_1c54ec2e4:;
			++it;
			goto _iter_begin_1c54ec2e4;
		}
		_iter_end_1c54ec2e4:;
	};
	return _15613_params;
}



inline jule::Ptr<_1c1cc4570_RetType> _1c1cd0713_build_ret_type(jule::Ptr<_2050bb834_RetTypeDecl> _16323_decl) {
	if (((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1c1cc4570_RetType>(_1c1cc4570_RetType{._field_kind=_1c1ccded6_build_type(_16323_decl.get()._field_kind), ._field_idents=_16323_decl.get()._field_idents});
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c1cd09aa_build_fn(jule::Ptr<_20515028b_FnDecl> _17317_decl) {
	return jule::new_ptr<_1c1cc65b6_Fn>(_1c1cc65b6_Fn{._field_token=_17317_decl.get()._field_token, ._field_global=_17317_decl.get()._field_global, ._field_unsafety=_17317_decl.get()._field_unsafety, ._field_public=_17317_decl.get()._field_public, ._field_cpp_linked=_17317_decl.get()._field_cpp_linked, ._field_statically=_17317_decl.get()._field_statically, ._field_exceptional=_17317_decl.get()._field_exceptional, ._field_ident=_17317_decl.get()._field_ident, ._field_directives=_17317_decl.get()._field_directives, ._field_scope=_17317_decl.get()._field_scope, ._field_generics=_17317_decl.get()._field_generics, ._field_result=_1c1cd0713_build_ret_type(_17317_decl.get()._field_result), ._field_params=_1c1cd046b_build_params(_17317_decl.get()._field_params)});
}



inline jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _1c1cd0c52_build_methods(jule::Slice<jule::Ptr<_20515028b_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_1c1cc65b6_Fn>> _19213_methods = jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>::alloc(0LL,_19123_decls.len());;
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_1c54ee3a1:;
		if (it != expr.end()) {
			jule::Ptr<_20515028b_FnDecl> _19317_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_1c1cd09aa_build_fn(_19317_decl));;
			}
			_iter_next_1c54ee3a1:;
			++it;
			goto _iter_begin_1c54ee3a1;
		}
		_iter_end_1c54ee3a1:;
	};
	return _19213_methods;
}



inline jule::Ptr<_1c2a137db_Trait> _1c1cd0ee9_build_trait(jule::Ptr<_205153aec_TraitDecl> _19920_decl) {
	return jule::new_ptr<_1c2a137db_Trait>(_1c2a137db_Trait{._field_token=_19920_decl.get()._field_token, ._field_ident=_19920_decl.get()._field_ident, ._field_public=_19920_decl.get()._field_public, ._field_methods=_1c1cd0c52_build_methods(_19920_decl.get()._field_methods)});
}



inline jule::Ptr<_1c2a15007_EnumItem> _1c1cd1291_build_enum_item(jule::Ptr<_20515215b_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_1c2a15007_EnumItem>(_1c2a15007_EnumItem{._field_token=_20824_decl.get()._field_token, ._field_ident=_20824_decl.get()._field_ident, ._field_value=_1c1cce2c2_build_expr(_20824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1c2a15007_EnumItem>> _1c1cd1538_build_enum_items(jule::Slice<jule::Ptr<_20515215b_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_1c2a15007_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_1c2a15007_EnumItem>>::alloc(0LL,_21626_decls.len());;
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_1c55038b1:;
		if (it != expr.end()) {
			jule::Ptr<_20515215b_EnumItemDecl> _21817_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_1c1cd1291_build_enum_item(_21817_decl));;
			}
			_iter_next_1c55038b1:;
			++it;
			goto _iter_begin_1c55038b1;
		}
		_iter_end_1c55038b1:;
	};
	return _21713_items;
}



inline jule::Ptr<_1c2a159ec_Enum> _1c1cd17d0_build_enum(jule::Ptr<_205152579_EnumDecl> _22419_decl) {
	return jule::new_ptr<_1c2a159ec_Enum>(_1c2a159ec_Enum{._field_token=_22419_decl.get()._field_token, ._field_public=_22419_decl.get()._field_public, ._field_ident=_22419_decl.get()._field_ident, ._field_kind=_1c1ccded6_build_type(_22419_decl.get()._field_kind), ._field_items=_1c1cd1538_build_enum_items(_22419_decl.get()._field_items)});
}



inline jule::Ptr<_1c2b9a4de_Var> _1c1cd1b98_build_var(jule::Ptr<_205150478_VarDecl> _23418_decl) {
	return jule::new_ptr<_1c2b9a4de_Var>(_1c2b9a4de_Var{._field_token=_23418_decl.get()._field_token, ._field_ident=_23418_decl.get()._field_ident, ._field_cpp_linked=_23418_decl.get()._field_cpp_linked, ._field_constant=_23418_decl.get()._field_constant, ._field_mutable=_23418_decl.get()._field_mutable, ._field_public=_23418_decl.get()._field_public, ._field_statically=_23418_decl.get()._field_statically, ._field_reference=_23418_decl.get()._field_reference, ._field_directives=_23418_decl.get()._field_directives, ._field_references=static__1c1cccaa6_new(), ._field_kind=_1c1ccded6_build_type(_23418_decl.get()._field_kind), ._field_value=_1c1cce2c2_build_expr(_23418_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _1c1cd1e40_build_vars(jule::Slice<jule::Ptr<_205150478_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_1c2b9a4de_Var>> _25213_vars = jule::Slice<jule::Ptr<_1c2b9a4de_Var>>::alloc(0LL,_25119_decls.len());;
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_1c5506ed0:;
		if (it != expr.end()) {
			jule::Ptr<_205150478_VarDecl> _25317_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_1c1cd1b98_build_var(_25317_decl));;
			}
			_iter_next_1c5506ed0:;
			++it;
			goto _iter_begin_1c5506ed0;
		}
		_iter_end_1c5506ed0:;
	};
	return _25213_vars;
}



inline jule::Ptr<_1c2a16e71_Impl> _1c1cd21d7_build_impl(jule::Ptr<_205154207_Impl> _25919_decl) {
	return jule::new_ptr<_1c2a16e71_Impl>(_1c2a16e71_Impl{._field_base=_25919_decl.get()._field_base, ._field_dest=_25919_decl.get()._field_dest, ._field_methods=_1c1cd0c52_build_methods(_25919_decl.get()._field_methods), ._field_statics=_1c1cd1e40_build_vars(_25919_decl.get()._field_statics)});
}



inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2ad5869_new_scope_checker_base(jule::Ptr<_1c2b7eeda_Sema>& _4032_s, jule::Ptr<_1c1cc9762_FnIns> _4046_owner) {
	return jule::new_ptr<_1c2b6197d_ScopeChecker>(_1c2b6197d_ScopeChecker{._field_s=_4032_s, ._field_owner=_4046_owner, ._field_table=jule::new_ptr<_1c2bdbbe5_SymbolTable>(_1c2bdbbe5_SymbolTable{})});
}



inline jule::Ptr<_1c2b6197d_ScopeChecker> _1c2adc079_new_scope_checker(jule::Ptr<_1c2b7eeda_Sema>& _4827_s, jule::Ptr<_1c1cc9762_FnIns> _4841_owner) {
	jule::Ptr<_1c2b6197d_ScopeChecker> _4913_base = _1c2ad5869_new_scope_checker_base(_4827_s,_4841_owner);;
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c2b615a4_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c2b61791_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1c2b615a4_ScopeLabel> _1c2b2a89d_find_label_parent(jule::Str _5822_ident, jule::Ptr<_1c2b6197d_ScopeChecker> _5838_scope) {
	jule::Ptr<_1c2b615a4_ScopeLabel> _5913_label = _1c2b64266_find_label_scope(_5838_scope, _5822_ident);;
	while ((_5913_label == nullptr)) {
		{
			if (((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1c2b64266_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1c550a5dd:;
	}
	_iter_end_1c550a5dd:;;
	return _5913_label;
}



inline jule::Bool _1c2b2d0ba_stmt_is_goto_scope(jule::Any& _7224_stmt, jule::Ptr<_1c2b4c1e9_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b4c1e9_Scope>>()) {
			_case_begin_1c550c689:;
			{
				return (_7224_stmt.operator jule::Ptr<_1c2b4c1e9_Scope>() == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b0e486_InfIter>>()) {
			_case_begin_1c550c700:;
			{
				return (_7224_stmt.operator jule::Ptr<_1c2b0e486_InfIter>().get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b3c519_RangeIter>>()) {
			_case_begin_1c550c205:;
			{
				return (_7224_stmt.operator jule::Ptr<_1c2b3c519_RangeIter>().get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b0e673_WhileIter>>()) {
			_case_begin_1c550c26b:;
			{
				return (_7224_stmt.operator jule::Ptr<_1c2b0e673_WhileIter>().get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b60ac0_Match>>()) {
			_case_begin_1c550c2d2:;
			{
				jule::Ptr<_1c2b60ac0_Match> _8313_m = _7224_stmt.operator jule::Ptr<_1c2b60ac0_Match>();;
				{
					auto &expr = _8313_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1c550e9ee:;
					if (it != expr.end()) {
						jule::Ptr<_1c2b60edd_Case> &_8416_c = *it;
						{
							if ((_8416_c.get()._field_scope == _7236_sc)) {
								return true;
							};
						}
						_iter_next_1c550e9ee:;
						++it;
						goto _iter_begin_1c550e9ee;
					}
					_iter_end_1c550e9ee:;
				};
				return ((_8313_m.get()._field_default != nullptr) && (_8313_m.get()._field_default.get()._field_scope == _7236_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2aed860_Conditional>>()) {
			_case_begin_1c550c348:;
			{
				jule::Ptr<_1c2aed860_Conditional> _9113_c = _7224_stmt.operator jule::Ptr<_1c2aed860_Conditional>();;
				{
					auto &expr = _9113_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1c551124d:;
					if (it != expr.end()) {
						jule::Ptr<_1c2b53ae6_If> &_9216_elif = *it;
						{
							if ((_9216_elif.get()._field_scope == _7236_sc)) {
								return true;
							};
						}
						_iter_next_1c551124d:;
						++it;
						goto _iter_begin_1c551124d;
					}
					_iter_end_1c551124d:;
				};
				return ((_9113_c.get()._field_default != nullptr) && (_9113_c.get()._field_default.get()._field_scope == _7236_sc));
			}
		}
		else {
			_case_begin_1c550c06d:;
			{
				return false;
			}
		}
		_match_end_1c550c018:;
	};
}



inline jule::I64 _1c2b2d84b_count_match_type(jule::Ptr<_1c2b60ac0_Match>& _10322_m, jule::Ptr<_1c2c1b131_TypeKind>& _10334_t) {
	jule::I64 _10413_n = 0LL;;
	jule::Str _1059_kind = _1c2c1b4d8_to_str(_10334_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _10322_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1c5512c77:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b60edd_Case> &_10712_c = *it;
			{
				if ((_10712_c == nullptr)) {
					goto _iter_next_1c5512c77;
				};
				{
					auto &expr = _10712_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1c55134e7:;
					if (it != expr.end()) {
						jule::Ptr<_1c2be1ca5_Data> &_11216_expr = *it;
						{
							if ((_11216_expr == nullptr)) {
								goto _iter_end_1c5512c77;
							};
							if ((_1059_kind == _1c2c1b4d8_to_str(_11216_expr.get()._field_model.operator jule::Ptr<_1c2c1b131_TypeKind>().ptr()))) {
								(_10413_n)++;
							};
						}
						_iter_next_1c55134e7:;
						++it;
						goto _iter_begin_1c55134e7;
					}
					_iter_end_1c55134e7:;
				};
			}
			_iter_next_1c5512c77:;
			++it;
			goto _iter_begin_1c5512c77;
		}
		_iter_end_1c5512c77:;
	};
	return _10413_n;
}



inline jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _1c2b2e484_get_datas_from_tuple_data(jule::Ptr<_1c2be1ca5_Data>& _12735_d) {
	if ((_1c2c24975_tup(_12735_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _12735_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1c1cbe79b_TupleExprModel>>()) {
				_case_begin_1c55150a9:;
				{
					return _12735_d.get()._field_model.operator jule::Ptr<_1c1cbe79b_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1c5514ebb:;
				{
					jule::Ptr<_1c2c2a151_Tuple> _13321_t = _1c2c24975_tup(_12735_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1c2be1ca5_Data>> _13421_r = jule::Slice<jule::Ptr<_1c2be1ca5_Data>>::alloc(0LL,_13321_t.get()._field_types.len());;
					{
						auto &expr = _13321_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1c5515e56:;
						if (it != expr.end()) {
							jule::Ptr<_1c2c1b131_TypeKind> _13525_kind = *it;
							{
								_13421_r = jule::alloc_for_append(_13421_r,1);_13421_r.__push(jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=true, ._field_kind=_13525_kind}));;
							}
							_iter_next_1c5515e56:;
							++it;
							goto _iter_begin_1c5515e56;
						}
						_iter_end_1c5515e56:;
					};
					return _13421_r;
				}
			}
			_match_end_1c5514e66:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c2be1ca5_Data>>::make({_12735_d});
	};
}



inline jule::Slice<jule::Any> _1c2b318a4_get_expr_models(jule::Any& _14825_m) {
	{
		auto &_match_expr{ _14825_m };
		
		if (_match_expr.type_is<jule::Ptr<_20514b5ea_TupleExpr>>()) {
			_case_begin_1c5517b06:;
			{
				jule::Ptr<_20514b5ea_TupleExpr> _15117_tup = _14825_m.operator jule::Ptr<_20514b5ea_TupleExpr>();;
				jule::Slice<jule::Any> _15217_models = jule::Slice<jule::Any>::alloc(0LL,_15117_tup.get()._field_expr.len());;
				{
					auto &expr = _15117_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1c55185eb:;
					if (it != expr.end()) {
						jule::Ptr<_2050bba21_Expr> _15321_expr = *it;
						{
							_15217_models = jule::alloc_for_append(_15217_models,1);_15217_models.__push(jule::Any(_15321_expr.get()._field_kind));;
						}
						_iter_next_1c55185eb:;
						++it;
						goto _iter_begin_1c55185eb;
					}
					_iter_end_1c55185eb:;
				};
				return _15217_models;
			}
		}
		else {
			_case_begin_1c5513a8b:;
			{
				return jule::Slice<jule::Any>::make({jule::Any(_14825_m)});
			}
		}
		_match_end_1c55168e6:;
	};
}



inline jule::Bool _1c2b32135_check_mut(jule::Ptr<_1c2b7eeda_Sema>& _16219_s, jule::Ptr<_1c2be1ca5_Data>& _16230_left, jule::Ptr<_1c2be1ca5_Data> _16247_right, jule::Ptr<_205139176_Token> _16261_op) {
	jule::Bool _16275_ok = jule::Bool();
	{
		
		if ((!(_16230_left.get()._field_mutable))) {
			_case_begin_1c551a09d:;
			{
				_1c2b82905_push_err(_16219_s.ptr(), _16261_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else if ((((_16247_right != nullptr) && (!(_16247_right.get()._field_mutable))) && _1c2c1c4c8_mutable(_16247_right.get()._field_kind.ptr()))) {
			_case_begin_1c551a169:;
			{
				if (((_16261_op.get()._field_kind != jule::Str("=", 1)) && (_1c2c24238_strct(_16247_right.get()._field_kind.ptr()) != nullptr))) {
					_16275_ok = true;
					return _16275_ok;
				};
				_1c2b82905_push_err(_16219_s.ptr(), _16261_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_16247_right.get()._field_kind.ptr()))}));
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else {
			_case_begin_1c5519971:;
			{
				_16275_ok = true;
				return _16275_ok;
			}
		}
		_match_end_1c5519443:;
	};
}



inline jule::Bool _1c2b328c7_check_assign(jule::Ptr<_1c2b7eeda_Sema>& _18122_s, jule::Ptr<_1c2be1ca5_Data>& _18137_left, jule::Ptr<_1c2be1ca5_Data> _18154_right, jule::Ptr<_205139176_Token> _18168_op) {
	jule::Bool _18182_ok = jule::Bool();
	jule::Ptr<_1c1cc9762_FnIns> _1829_f = _1c2c23ec4_fnc(_18137_left.get()._field_kind.ptr());;
	if ((((_1829_f != nullptr) && (_1829_f.get()._field_decl != nullptr)) && _1829_f.get()._field_decl.get()._field_global)) {
		_1c2b82905_push_err(_18122_s.ptr(), _18168_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18182_ok = false;
		return _18182_ok;
	};
	{
		
		if (_1c2be2668_is_const(_18137_left.ptr())) {
			_case_begin_1c55201e6:;
			{
				_1c2b82905_push_err(_18122_s.ptr(), _18168_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1c2b82c24_push_suggestion(_18122_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_18137_left.get()._field_lvalue))) {
			_case_begin_1c55202a1:;
			{
				_1c2b82905_push_err(_18122_s.ptr(), _18168_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_1c2b32135_check_mut(_18122_s,_18137_left,_18154_right,_18168_op)))) {
			_case_begin_1c5520317:;
			{
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else {
			_case_begin_1c551eab9:;
			{
				_18182_ok = true;
				return _18182_ok;
			}
		}
		_match_end_1c551e9cb:;
	};
}



inline jule::Bool _1c2b39956_is_valid_ast_st_for_next_st(jule::Any& _20337_n) {
	{
		auto &_match_expr{ _20337_n };
		
		if (_match_expr.type_is<jule::Ptr<_20514ebc5_AssignSt>>()) {
			_case_begin_1c552299b:;
			{
				return (!(_20337_n.operator jule::Ptr<_20514ebc5_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_20514ce48_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_2050bba21_Expr>>()) {
			_case_begin_1c5522a12:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c552048d:;
			{
				return false;
			}
		}
		_match_end_1c552001a:;
	};
}



inline jule::Bool _1c2b3a193_is_valid_st_for_next_st(jule::Any& _21529_st) {
	{
		auto &_match_expr{ _21529_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1c2b60509_Postfix>>() || _match_expr.type_is<jule::Ptr<_1c2b606e6_Assign>>() || _match_expr.type_is<jule::Ptr<_1c2b608d3_MultiAssign>>()) {
			_case_begin_1c5523b23:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c5523b89:;
			{
				{
					auto &_match_expr{ _21529_st.operator jule::Ptr<_1c2be1ca5_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cba9ea_FnCallExprModel>>()) {
						_case_begin_1c552430a:;
						{
							return true;
						}
					}
					else {
						_case_begin_1c5524904:;
						{
							return false;
						}
					}
					_match_end_1c552489e:;
				};
			}
		}
		else {
			_case_begin_1c5522d42:;
			{
				return false;
			}
		}
		_match_end_1c5522cdc:;
	};
}



inline jule::Bool _1c2b3accb_st_is_def(jule::Any& _23415_st) {
	{
		auto &_match_expr{ _23415_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c5525608:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c5524aad:;
			{
				return false;
			}
		}
		_match_end_1c5524a58:;
	};
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2b75321_find_var_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1c5525b7a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c2b9a4de_Var> _4817_v = _1c2bdc8b6_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1c5525b7a:;
			++it;
			goto _iter_begin_1c5525b7a;
		}
		_iter_end_1c5525b7a:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2b75772_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1c5526032:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c2c1a3e9_TypeAlias> _6017_ta = _1c2bdcc6d_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1c5526032:;
			++it;
			goto _iter_begin_1c5526032;
		}
		_iter_end_1c5526032:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2b75b6d_find_struct_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1c5527d36:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1c1cb3e55_Struct> _7217_s = _1c2bdd125_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1c5527d36:;
			++it;
			goto _iter_begin_1c5527d36;
		}
		_iter_end_1c5527d36:;
	};
	return nullptr;
}



inline jule::Ptr<_1c1cc65b6_Fn> _1c2b7609c_find_fn_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1c5529255:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1c1cc65b6_Fn> _8417_f = _1c2bdd4cc_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1c5529255:;
			++it;
			goto _iter_begin_1c5529255;
		}
		_iter_end_1c5529255:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2a137db_Trait> _1c2b763dd_find_trait_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1c552a685:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1c2a137db_Trait> _9617_t = _1c2bdd7da_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1c552a685:;
			++it;
			goto _iter_begin_1c552a685;
		}
		_iter_end_1c552a685:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2a159ec_Enum> _1c2b7672e_find_enum_in_package(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1c5529c8e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1c2a159ec_Enum> _10817_e = _1c2bddae8_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1c5529c8e:;
			++it;
			goto _iter_begin_1c5529c8e;
		}
		_iter_end_1c5529c8e:;
	};
	return nullptr;
}



inline jule::Bool _1c2b7c26d_is_std_package(jule::Str _32719_f, jule::Str _32727_p) {
	return _204c1a131_has_prefix(_32719_f,_204c66ed5_join(jule::Slice<jule::Str>::make({_2046ee8d5_PATH_STDLIB,_32727_p})));
}



inline jule::Bool _1c2b7d1a3_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c552dde7:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>>()) {
			_case_begin_1c552de5d:;
			{
				jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1c1cbd2d3_StructSubIdentExprModel>();;
				return _1c2b7d1a3_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>>()) {
			_case_begin_1c552d974:;
			{
				jule::Ptr<_1c1cbca85_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1c1cbca85_TraitSubIdentExprModel>();;
				return _1c2b7d1a3_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb90ae_UnaryExprModel>>()) {
			_case_begin_1c552d9da:;
			{
				jule::Ptr<_1c1cb90ae_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1c1cb90ae_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1c2c23523_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1c2c232ae_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1c2b7d1a3_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1c552c247:;
			{
				return false;
			}
		}
		_match_end_1c552cc2b:;
	};
}



inline _2046db273_Log _1c2b7d648_compiler_err(jule::Ptr<_205139176_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_2046db273_Log _4213_log = _2046db273_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_2046db6b3_logf(_4145_fmt,jule::Any(_4158_args))};;
	if (_4133_line) {
		_4213_log._field_line=_205140743_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1c2b7d989_imp_is_lookupable(jule::Ptr<_1c2b77301_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1c2b79930_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1c2b7dc86_append_ret_vars(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>& _6825_dest, jule::Ptr<_1c1cc9762_FnIns>& _6844_f) {
	if ((_1c1cc6a17_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c2c1b131_TypeKind>> _7313_types = _1c1cca279_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1c5536dbc:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_205139176_Token> _7417_ident = *it;
			{
				if ((_20513b8c6_is_ignore_ident(_7417_ident.get()._field_kind) || _20513bb6d_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1c5536dbc;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1c2b9a4de_Var>(_1c2b9a4de_Var{._field_used=true, ._field_mutable=true, ._field_ident=_7417_ident.get()._field_kind, ._field_token=_7417_ident, ._field_scope=_6844_f.get()._field_scope, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_data=jule::new_ptr<_1c2be1ca5_Data>()})}));;
			}
			_iter_next_1c5536dbc:;
			++it;
			_7410_i++;
			goto _iter_begin_1c5536dbc;
		}
		_iter_end_1c5536dbc:;
	};
}



inline void _1c2b7e03e_append_param_vars(jule::Slice<jule::Ptr<_1c2b9a4de_Var>>& _9427_dest, jule::Ptr<_1c1cc9762_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1c55394c9:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc88c6_ParamIns> _9917_p = *it;
			{
				if ((_20513b8c6_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _20513bb6d_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1c55394c9;
				};
				jule::Ptr<_1c2b9a4de_Var> _10417_v = jule::new_ptr<_1c2b9a4de_Var>(_1c2b9a4de_Var{._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(), ._field_scope=_9446_f.get()._field_scope, ._field_value=jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_data=jule::new_ptr<_1c2be1ca5_Data>()})});;
				{
					
					if (_1c1cc53a6_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1c553bd17:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1c2c1ac02_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1c1cc561a_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1c1cc561a_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c28bee_Sptr>(_1c2c28bee_Sptr{._field_elem=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 6);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1c553ba3c:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c2965b_Slc>(_1c2c2965b_Slc{._field_elem=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 7)});
						}
					}
					else {
						_case_begin_1c553b9c6:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1c553b8b6:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1c55394c9:;
			++it;
			goto _iter_begin_1c55394c9;
		}
		_iter_end_1c55394c9:;
	};
}



inline void _1c2b7e319_append_generic_type_aliases(jule::Slice<jule::Ptr<_1c2c1a3e9_TypeAlias>>& _15437_dest, jule::Ptr<_1c1cc9762_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c5541e60:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1c2c1b131_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_20514e235_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_used=true, ._field_generic=true, ._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_ident=_16517_decl.get()._field_ident, ._field_token=_16517_decl.get()._field_token, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_16417_g})}));;
			}
			_iter_next_1c5541e60:;
			++it;
			_16410_i++;
			goto _iter_begin_1c5541e60;
		}
		_iter_end_1c5541e60:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1c1cb6ad4_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1c55432d5:;
			if (it != expr.end()) {
				jule::I64 _18014_i = it - expr.begin();
				jule::Ptr<_1c2c1b131_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_20514e235_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_used=true, ._field_generic=true, ._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_ident=_18121_decl.get()._field_ident, ._field_token=_18121_decl.get()._field_token, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=_18021_g})}));;
				}
				_iter_next_1c55432d5:;
				++it;
				_18014_i++;
				goto _iter_begin_1c55432d5;
			}
			_iter_end_1c55432d5:;
		};
	};
}



inline jule::Ptr<_1c2bdbbe5_SymbolTable> _1c2b7e66b_find_file(jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>& _19619_files, jule::Ptr<_20513e566_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1c554600d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1c554600d:;
			++it;
			goto _iter_begin_1c554600d;
		}
		_iter_end_1c554600d:;
	};
	return nullptr;
}



inline void _1c2b7ea56_push_suggestion(_2046db273_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_2046db6b3_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1c2bcb7c8_trait_has_reference_receiver(jule::Ptr<_1c2a137db_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c55472a6:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1c55472a6;
				};
				jule::Ptr<_1c1cc4c79_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1c1cc561a_is_ref(_3313_p.ptr()) && _1c1cc53a6_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1c55472a6:;
			++it;
			goto _iter_begin_1c55472a6;
		}
		_iter_end_1c55472a6:;
	};
	return false;
}



inline jule::Bool _1c2bb3ccc_float_assignable(jule::Str _4121_kind, jule::Ptr<_1c2be1ca5_Data>& _4133_d) {
	jule::Str _429_value = _1dbba6b96_fmt_float(static_cast<jule::F64>(_1c2abde18_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1c2b55cb3_check_bit_float(_429_value,static_cast<jule::I64>(_1c2b5492c_bitsize_of(_4121_kind)));
}



inline jule::Bool _1c2bcca2c_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1c2be1ca5_Data>& _4631_d) {
	jule::F64 _479_min = _1c2b58c50_min(_4619_kind);;
	jule::F64 _489_max = _1c2b5903b_max(_4619_kind);;
	{
		
		if (_1c2ac0a74_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1c554aa4b:;
			{
				jule::F64 _5113_x = _1c2abd6cb_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1c29e1742_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1c2ac0337_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1c554aab2:;
			{
				jule::F64 _5813_x = _1c2abde18_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1c2ac00c3_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1c554ab28:;
			{
				jule::F64 _6313_x = _1c2abde18_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1c554a8e7:;
	};
	return false;
}



inline jule::Bool _1c2bccb5e_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1c2be1ca5_Data>& _6933_d) {
	jule::F64 _709_max = _1c2b5903b_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1c2bca013_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1c2abcc2a_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1c2ac0a74_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1c5550842:;
			{
				jule::F64 _7713_x = _1c2abd6cb_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1c29e1742_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1c2ac0337_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1c55508a8:;
			{
				jule::F64 _8713_x = _1c2abde18_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1c2ac00c3_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1c5550930:;
			{
				jule::F64 _9213_x = _1c2abde18_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1c55501d2:;
	};
	return false;
}



inline jule::Bool _1c2bccc91_int_assignable(jule::Str _9819_kind, jule::Ptr<_1c2be1ca5_Data>& _9831_d) {
	{
		
		if (_1c2b5de53_is_sig_int(_9819_kind)) {
			_case_begin_1c5554ed9:;
			{
				return _1c2bcca2c_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1c2b5e23e_is_unsig_int(_9819_kind)) {
			_case_begin_1c55550c7:;
			{
				return _1c2bccb5e_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1c5551249:;
			{
				return false;
			}
		}
		_match_end_1c555117d:;
	};
}



inline jule::Ptr<_204ec174a_Directive> _1c2c15c74_find_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>& _408924_directives, jule::Str _408966_d) {
	{
		auto &expr = _408924_directives;
		auto it = expr.begin();
		_iter_begin_1c555543a:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _409017_dr = *it;
			{
				if ((_409017_dr.get()._field_tag.get()._field_kind == _408966_d)) {
					return _409017_dr;
				};
			}
			_iter_next_1c555543a:;
			++it;
			goto _iter_begin_1c555543a;
		}
		_iter_end_1c555543a:;
	};
	return nullptr;
}



inline jule::Any _1c2c16109_find_builtins_import(jule::Str _409825_ident, jule::Ptr<_1c2b77301_ImportInfo> _409837_imp) {
	return jule::Any(_1c2c91edc_find_package_builtin_def(_409837_imp.get()._field_link_path,_409825_ident));
}



inline void _1c2c16318_fit_bitsize(jule::Ptr<_1c2be1ca5_Data>& _410521_d) {
	jule::Ptr<_1c2c256e0_Prim> _410613_prim = _1c2c2304a_prim(_410521_d.get()._field_kind.ptr());;
	jule::I64 _41079_z = _1c2b5492c_bitsize_of(_1c2c25a53_to_str(_410613_prim.ptr()));;
	if ((_41079_z == 64LL)) {
		return;;
	};
	jule::I64 _411213_k = 0LL;;
	{
		
		if (_1c2ac00c3_is_i64(_410521_d.get()._field_constant.ptr())) {
			_case_begin_1c5558619:;
			{
				_411213_k=static_cast<jule::I64>(_1c2b56302_bitsize_of_int(static_cast<jule::I64>(_1c2abcc2a_read_i64(_410521_d.get()._field_constant.ptr()))));
				if ((_411213_k > _41079_z)) {
					_410613_prim.get()._field_kind=_1c2b54c18_int_from_bits(_411213_k);
				};
			}
		}
		else if (_1c2ac0337_is_u64(_410521_d.get()._field_constant.ptr())) {
			_case_begin_1c5558691:;
			{
				_411213_k=static_cast<jule::I64>(_1c2b56599_bitsize_of_uint(static_cast<jule::U64>(_1c2abce8e_read_u64(_410521_d.get()._field_constant.ptr()))));
				if ((_411213_k > _41079_z)) {
					_410613_prim.get()._field_kind=_1c2b54eb0_uint_from_bits(_411213_k);
				};
			}
		}
		else if (_1c2ac0a74_is_f64(_410521_d.get()._field_constant.ptr())) {
			_case_begin_1c5558718:;
			{
				_411213_k=static_cast<jule::I64>(_1c2b5605a_bitsize_of_float(static_cast<jule::F64>(_1c2abd6cb_read_f64(_410521_d.get()._field_constant.ptr()))));
				if ((_411213_k > _41079_z)) {
					_410613_prim.get()._field_kind=_1c2b55257_float_from_bits(_411213_k);
				};
			}
		}
		_match_end_1c555853c:;
	};
}



inline void _1c2c16615_make_struct_lit_alloc(jule::Ptr<_1c2be1ca5_Data>& _413231_d, jule::Ptr<_1c1cb9862_StructLitExprModel>& _413246_lit) {
	_413231_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c28bee_Sptr>(_1c2c28bee_Sptr{._field_elem=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_413246_lit.get()._field_strct, 0)})}), 6)});
	_413231_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cb9b70_AllocStructLitExprModel>(_1c1cb9b70_AllocStructLitExprModel{._field_lit=_413246_lit}));
}



inline jule::Ptr<_1c2b9a4de_Var> _1c2c16956_build_error_var(jule::Ptr<_1c2b4c1e9_Scope>& _414325_s, jule::Ptr<_20514ce48_FnCallExpr>& _414341_fc) {
	return jule::new_ptr<_1c2b9a4de_Var>(_1c2b9a4de_Var{._field_used=true, ._field_reference=false, ._field_mutable=true, ._field_ident=jule::Str("error", 5), ._field_token=_414341_fc.get()._field_token, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("any", 3)), 5)})}), ._field_scope=_414325_s, ._field_value=jule::new_ptr<_1c2be2d2d_Value>(_1c2be2d2d_Value{._field_data=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{})})});
}



inline jule::Any _1c2c16c97_find_builtins_sema(jule::Str _416223_ident, jule::Ptr<_1c2b7eeda_Sema> _416239_s) {
	{
		auto &expr = _416239_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c555e8b7:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _416317_imp = *it;
			{
				if ((_416317_imp.get()._field_import_all || _1c2b79930_exist_ident(_416317_imp.ptr(), _416223_ident))) {
					jule::Any _416521_def = _1c2c16109_find_builtins_import(_416223_ident,_416317_imp);;
					if ((_416521_def != nullptr)) {
						return jule::Any(_416521_def);
					};
				};
			}
			_iter_next_1c555e8b7:;
			++it;
			goto _iter_begin_1c555e8b7;
		}
		_iter_end_1c555e8b7:;
	};
	jule::Str _417313_ppath = _20513ee5c_dir(_416239_s.get()._field_file.get()._field_file.ptr());;
	if (_204c1a131_has_prefix(_417313_ppath,_2046ee8d5_PATH_STDLIB)) {
		(_417313_ppath).mut_slice(_2046ee8d5_PATH_STDLIB.len());;
		_417313_ppath=(jule::Str("std", 3) + _204c65555_replace(_417313_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1c2c91edc_find_package_builtin_def(_417313_ppath,_416223_ident));
	};
	return nullptr;
}



inline jule::Bool _1c2c1703e_is_ok_for_shifting(jule::Ptr<_1c2be1ca5_Data>& _418728_d) {
	if (_1c2be2668_is_const(_418728_d.ptr())) {
		{
			
			if (_1c2ac00c3_is_i64(_418728_d.get()._field_constant.ptr())) {
				_case_begin_1c556348c:;
				{
					return (_1c2abcc2a_read_i64(_418728_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1c2ac0337_is_u64(_418728_d.get()._field_constant.ptr())) {
				_case_begin_1c5563569:;
				{
					return true;
				}
			}
			else if (_1c2ac0a74_is_f64(_418728_d.get()._field_constant.ptr())) {
				_case_begin_1c55635d0:;
				{
					return (_1c2abd6cb_read_f64(_418728_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1c5562d71:;
				{
					return false;
				}
			}
			_match_end_1c5562ca5:;
		};
	};
	jule::Ptr<_1c2c256e0_Prim> _42009_prim = _1c2c2304a_prim(_418728_d.get()._field_kind.ptr());;
	return ((_42009_prim != nullptr) && _1c2b5e4d6_is_int(_1c2c25a53_to_str(_42009_prim.ptr())));
}



inline jule::Bool _1c2c1736e_is_instanced_struct(jule::Ptr<_1c1cb6ad4_StructIns> _420424_s) {
	return (_420424_s.get()._field_decl.get()._field_generics.len() == _420424_s.get()._field_generics.len());
}



inline jule::Bool _1c2c17649_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c2be1ca5_Data>& _420842_d) {
	if (_1c2be2668_is_const(_420842_d.ptr())) {
		return _1c2bccc91_int_assignable(jule::Str("int", 3),_420842_d);
	};
	_1c2bccdc3_TypeCompatibilityChecker _421213_tcc = _1c2bccdc3_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)}), ._field_src=_420842_d.get()._field_kind};;
	return _1c2bcdc3c_check(&_421213_tcc);
}



inline void _1c2c17902_apply_cast_kind_model(jule::Ptr<_1c2be1ca5_Data>& _422131_d, jule::Ptr<_1c2c1b131_TypeKind>& _422146_t) {
	_422131_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cba1c0_CastingExprModel>(_1c1cba1c0_CastingExprModel{._field_expr=jule::Any(_422131_d.get()._field_model), ._field_kind=_422146_t, ._field_expr_kind=_422131_d.get()._field_kind}));
}



inline void _1c2c17baa_apply_cast_kind(jule::Ptr<_1c2be1ca5_Data>& _422925_d, jule::Ptr<_1c2c1b131_TypeKind>& _422940_t) {
	_1c2c17902_apply_cast_kind_model(_422925_d,_422940_t);
	_422925_d.get()._field_kind=_422940_t;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c17da8_build_void_data(void) {
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("void", 4)), 5)})});
}



inline jule::Str _1c2c18172_check_data_for_integer_indexing(jule::Ptr<_1c2be1ca5_Data>& _424541_d) {
	jule::Str _424553_err_fmt = jule::Str();
	if ((_424541_d == nullptr)) {
		_424553_err_fmt = jule::Str();
		return _424553_err_fmt;
	};
	{
		
		if ((_1c2c2304a_prim(_424541_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1c5569a37:;
			{
				_424553_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424553_err_fmt;
			}
		}
		else if ((!(_1c2b5e4d6_is_int(_1c2c25a53_to_str(_1c2c2304a_prim(_424541_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1c5569a9d:;
			{
				_424553_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424553_err_fmt;
			}
		}
		else if (_1c2be2668_is_const(_424541_d.ptr())) {
			_case_begin_1c5569b14:;
			{
				if ((_1c2abde18_as_f64(_424541_d.get()._field_constant.ptr()) < 0LL)) {
					_424553_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _424553_err_fmt;
				};
			}
		}
		else if ((_1c2c2304a_prim(_424541_d.get()._field_kind.ptr()) == nullptr) || _1c2be2668_is_const(_424541_d.ptr()) || (_1c2b54685_real_kind_of(_1c2c25a53_to_str(_1c2c2304a_prim(_424541_d.get()._field_kind.ptr()).ptr())) != _1c2b54685_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1c5569b7a:;
			{
				jule::Ptr<_1c2c1b131_TypeKind> _426217_t = jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)});;
				_1c2c17baa_apply_cast_kind(_424541_d,_426217_t);
			}
		}
		_match_end_1c556a043:;
	};
	_424553_err_fmt = jule::Str();
	return _424553_err_fmt;
}



inline void _1c2c1845d_apply_cast_model_by_enum(jule::Ptr<_1c2be1ca5_Data>& _427134_d, jule::Ptr<_1c2a159ec_Enum> _427148_e) {
	if ((_427148_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2c256e0_Prim> _42759_p = _1c2c2304a_prim(_427148_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1c2c2869e_is_str(_42759_p.ptr())) {
		return;;
	};
	_1c2c17902_apply_cast_kind_model(_427134_d,_427148_e.get()._field_kind.get()._field_kind);
}



inline void _1c2c18727_cast_const_by_type(jule::Str& _428224_t, jule::Ptr<_1c2be1ca5_Data>& _428237_d) {
	{
		
		if (_1c2b5de53_is_sig_int(_428224_t)) {
			_case_begin_1c5570be7:;
			{
				{
					auto _match_expr{ _1c2b5492c_bitsize_of(_1c2b54685_real_kind_of(_428224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1c5571467:;
						{
							_1c2abe18d_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1c2abd940_as_i64(_428237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1c5571a0b:;
						{
							_1c2abe18d_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1c2abd940_as_i64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1c5571a72:;
						{
							_1c2abe18d_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1c2abd940_as_i64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1c5571ae9:;
						{
							_1c2abe18d_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1c2abd940_as_i64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1c5571643:;
				};
			}
		}
		else if (_1c2b5e23e_is_unsig_int(_428224_t)) {
			_case_begin_1c5570c6e:;
			{
				{
					auto _match_expr{ _1c2b5492c_bitsize_of(_1c2b54685_real_kind_of(_428224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1c55752c3:;
						{
							_1c2abe413_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1c2abdba4_as_u64(_428237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1c5575339:;
						{
							_1c2abe413_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1c2abdba4_as_u64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1c55753a0:;
						{
							_1c2abe413_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1c2abdba4_as_u64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1c5575416:;
						{
							_1c2abe413_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1c2abdba4_as_u64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1c55721c1:;
				};
			}
		}
		else if (_1c2b5e7c2_is_float(_428224_t)) {
			_case_begin_1c5570ce6:;
			{
				{
					auto _match_expr{ _1c2b5492c_bitsize_of(_1c2b54685_real_kind_of(_428224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1c5578abd:;
						{
							_1c2abeb83_set_f64(_428237_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1c2abde18_as_f64(_428237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1c5578b34:;
						{
							_1c2abeb83_set_f64(_428237_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1c2abde18_as_f64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1c55759bb:;
				};
			}
		}
		_match_end_1c5570ac6:;
	};
}



inline jule::Bool _1c2c1996a_has_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>& _3323_directives, jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1c5577c10:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _3417_dr = *it;
			{
				if ((_3417_dr.get()._field_tag.get()._field_kind == _3354_tag)) {
					return true;
				};
			}
			_iter_next_1c5577c10:;
			++it;
			goto _iter_begin_1c5577c10;
		}
		_iter_end_1c5577c10:;
	};
	return false;
}



inline jule::Bool _1c2c2d088_can_get_ptr(jule::Ptr<_1c2be1ca5_Data>& _57121_d) {
	if (((!(_57121_d.get()._field_lvalue)) || _1c2be2668_is_const(_57121_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1c2c23ec4_fnc(_57121_d.get()._field_kind.ptr()) != nullptr) || (_1c2c23787_enm(_57121_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1c557bcbe:;
			{
				return false;
			}
		}
		else {
			_case_begin_1c557b6d6:;
			{
				return true;
			}
		}
		_match_end_1c557b4a5:;
	};
}



inline jule::Bool _1c2c2d330_is_valid_for_sptr_type(jule::Ptr<_1c2c1b131_TypeKind>& _58532_t) {
	jule::Ptr<_1c1cb6ad4_StructIns> _58613_s = _1c2c24238_strct(_58532_t.ptr());;
	if ((((_58613_s != nullptr) && (_58613_s.get()._field_decl != nullptr)) && _58613_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1c2c2d61b_is_valid_for_ref(jule::Ptr<_1c2c1b131_TypeKind>& _59426_t) {
	return (_1c2c23ec4_fnc(_59426_t.ptr()) == nullptr);
}



inline jule::Bool _1c2c2d8d5_is_builtin_str_convertable(jule::Ptr<_1c2c1b131_TypeKind>& _59736_t) {
	return (((!(_1c2c1c264_void(_59736_t.ptr()))) && (_1c2c23ec4_fnc(_59736_t.ptr()) == nullptr)) && (_1c2c24975_tup(_59736_t.ptr()) == nullptr));
}



inline jule::Str _1c2c2dbb0_build_link_path_by_tokens(jule::Slice<jule::Ptr<_205139176_Token>>& _60131_tokens) {
	jule::Str _60213_s = _60131_tokens[0LL].get()._field_kind;;
	{
		auto expr = _60131_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c55808e9:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> &_60312_token = *it;
			{
				_60213_s+=jule::Str("::", 2);
				_60213_s+=_60312_token.get()._field_kind;
			}
			_iter_next_1c55808e9:;
			++it;
			goto _iter_begin_1c55808e9;
		}
		_iter_end_1c55808e9:;
	};
	return _60213_s;
}



inline jule::Ptr<_1c2c256e0_Prim> _1c2c2de68_build_prim_type(jule::Str _61020_kind) {
	return jule::new_ptr<_1c2c256e0_Prim>(_1c2c256e0_Prim{._field_kind=_61020_kind});
}



inline jule::Ptr<_1c1cb3e55_Struct> _1c2c2e298_get_struct_from_kind(jule::Ptr<_1c2c1b131_TypeKind> _61629_k) {
	{
		
		if ((_61629_k == nullptr)) {
			_case_begin_1c55820c1:;
			{
				return nullptr;
			}
		}
		else if ((_1c2c24238_strct(_61629_k.ptr()) != nullptr)) {
			_case_begin_1c5582137:;
			{
				return _1c2c24238_strct(_61629_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1c2c232ae_sptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1c5581d5c:;
			{
				return _1c2c2e298_get_struct_from_kind(_1c2c232ae_sptr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c2c23c60_slc(_61629_k.ptr()) != nullptr)) {
			_case_begin_1c5581dc3:;
			{
				return _1c2c2e298_get_struct_from_kind(_1c2c23c60_slc(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c2c239eb_arr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1c5581e39:;
			{
				return _1c2c2e298_get_struct_from_kind(_1c2c239eb_arr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c2c23523_ptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1c5581994:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1c5580e05:;
			{
				return nullptr;
			}
		}
		_match_end_1c5580d39:;
	};
}



inline jule::Bool _1c2c2e540_is_prim(jule::Str _63912_kind) {
	return ((((((((((((((((_63912_kind == jule::Str("i8", 2)) || (_63912_kind == jule::Str("i16", 3))) || (_63912_kind == jule::Str("i32", 3))) || (_63912_kind == jule::Str("i64", 3))) || (_63912_kind == jule::Str("u8", 2))) || (_63912_kind == jule::Str("u16", 3))) || (_63912_kind == jule::Str("u32", 3))) || (_63912_kind == jule::Str("u64", 3))) || (_63912_kind == jule::Str("f32", 3))) || (_63912_kind == jule::Str("f64", 3))) || (_63912_kind == jule::Str("int", 3))) || (_63912_kind == jule::Str("uint", 4))) || (_63912_kind == jule::Str("uintptr", 7))) || (_63912_kind == jule::Str("bool", 4))) || (_63912_kind == jule::Str("str", 3))) || (_63912_kind == jule::Str("any", 3)));
}



inline void _1c2c3727e_apply_implicit_cast(jule::Ptr<_1c2c1b131_TypeKind>& _152129_dest, jule::Ptr<_1c2be1ca5_Data>& _152151_d) {
	if (_1c2c1c000_is_nil(_152151_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c2c256e0_Prim> _15269_dest_prim = _1c2c2304a_prim(_152129_dest.ptr());;
	jule::Ptr<_1c2c256e0_Prim> _15279_prim = _1c2c2304a_prim(_152151_d.get()._field_kind.ptr());;
	if ((_15269_dest_prim != nullptr)) {
		if (_1c2c28913_is_any(_15269_dest_prim.ptr())) {
			_1c2c17baa_apply_cast_kind(_152151_d,_152129_dest);
			return;;
		};
		if (((((((!(_1c2c1bc8b_cpp_linked(_152151_d.get()._field_kind.ptr()))) && (!(_152151_d.get()._field_kind.get()._field_variadic))) && (!(_152151_d.get()._field_lvalue))) && (!(_1c2be2668_is_const(_152151_d.ptr())))) && (_15279_prim != nullptr)) && _1c2b5ea69_is_num(_15279_prim.get()._field_kind))) {
			_1c2c17baa_apply_cast_kind(_152151_d,_152129_dest);
		};
		return;;
	};
	if (((_1c2c2449c_trt(_152129_dest.ptr()) != nullptr) && (_1c2c2449c_trt(_152151_d.get()._field_kind.ptr()) == nullptr))) {
		_1c2c17902_apply_cast_kind_model(_152151_d,_152129_dest);
	};
}



inline std::tuple<jule::Ptr<_1c2bdbbe5_SymbolTable>,jule::Slice<_2046db273_Log>> _1c2c39e1e_build_symbols(jule::Ptr<_20500541b_Ast>& _1523_ast, jule::Trait<_1c2b74e8b_Importer>& _1539_importer, jule::Ptr<_1c1cd2737_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1c1cd2737_SymbolBuilder> _1613_sb = jule::new_ptr<_1c1cd2737_SymbolBuilder>(_1c1cd2737_SymbolBuilder{._field_ast=_1523_ast, ._field_importer=_1539_importer, ._field_owner=_1563_owner});;
	_1c1cd7891_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1c2b79eb3_Package>,jule::Slice<_2046db273_Log>> _1c2c3a34d___analyze_package(jule::Slice<jule::Ptr<_20500541b_Ast>>& _2927_files, jule::Trait<_1c2b74e8b_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1c2bdbbe5_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1c5590200:;
		if (it != expr.end()) {
			jule::Ptr<_20500541b_Ast> _3217_f = *it;
			{
				jule::Ptr<_1c2bdbbe5_SymbolTable> _3318_table;;
				jule::Slice<_2046db273_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1c2c39e1e_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1c5590200:;
			++it;
			goto _iter_begin_1c5590200;
		}
		_iter_end_1c5590200:;
	};
	jule::Ptr<_1c2b7eeda_Sema> _4013_sema = jule::new_ptr<_1c2b7eeda_Sema>(_1c2b7eeda_Sema{._field_flags=_2968_flags});;
	_1c2b97497_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1c2b79eb3_Package> _4813_pkg = jule::new_ptr<_1c2b79eb3_Package>(_1c2b79eb3_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1c2b79eb3_Package>,jule::Slice<_2046db273_Log>> _1c2c3a738_analyze_package(jule::Slice<jule::Ptr<_20500541b_Ast>> _7228_files, jule::Trait<_1c2b74e8b_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1c2b79eb3_Package> _7714_package;;
	jule::Slice<_2046db273_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1c2c3a34d___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1c1cc9762_FnIns> _1c2c44445_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1c5597d95:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _2420_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c92eaa_builtin_caller_out)});;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1c5597e0b:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _2720_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c930dc_builtin_caller_outln)});;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1c5597b31:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _3020_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc0a54_builtin_caller_new)});;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1c5597b97:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _3320_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc0db7_builtin_caller_panic)});;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1c5597c1e:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _3620_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc0ee9_builtin_caller_make)});;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1c55978bc:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _3920_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc112b_builtin_caller_append)});;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1c5597944:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _4220_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc14c2_builtin_caller_copy)});;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1c55979bb:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _4520_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc1604_builtin_caller_clone)});;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1c5597e83:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _4820_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc1736_builtin_caller_assert)});;
				return _4820_f;
			}
		}
		else {
			_case_begin_1c55973c2:;
			{
				return nullptr;
			}
		}
		_match_end_1c5597724:;
	};
}



inline jule::Ptr<_1c2c1a3e9_TypeAlias> _1c2c452d1_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1c559d2c9:;
			{
				static jule::Ptr<_1c2c1a3e9_TypeAlias> _5820_t = jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("u8", 2)), 5)})})});;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1c559d384:;
			{
				static jule::Ptr<_1c2c1a3e9_TypeAlias> _6820_t = jule::new_ptr<_1c2c1a3e9_TypeAlias>(_1c2c1a3e9_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1c2c24d2c_TypeSymbol>(_1c2c24d2c_TypeSymbol{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("i32", 3)), 5)})})});;
				return _6820_t;
			}
		}
		else {
			_case_begin_1c559cc13:;
			{
				return nullptr;
			}
		}
		_match_end_1c559802c:;
	};
}



inline jule::Ptr<_1c2a137db_Trait> _1c2c46623_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1c2c73342_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1c1cc9762_FnIns> _8713_f = _1c2c44445_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1c2c1a3e9_TypeAlias> _9213_ta = _1c2c452d1_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1c2a137db_Trait> _9713_t = _1c2c46623_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1c2c42dd3_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1c55a23dd:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _10820_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc255b_builtin_caller_std_debug_out)});;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1c55a2498:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _11120_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc2979_builtin_caller_std_debug_outln)});;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1c55a073d:;
			{
				return nullptr;
			}
		}
		_match_end_1c55a1a80:;
	};
}



inline jule::Any _1c2c4a56c_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1c55a3c19:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _12120_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc1868_builtin_caller_std_mem_size_of)});;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1c55a3cb3:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _12420_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc199a_builtin_caller_std_mem_align_of)});;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1c55a3d29:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _12720_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc1acc_builtin_caller_std_mem_free)});;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1c55a2234:;
			{
				return nullptr;
			}
		}
		_match_end_1c55a1ec0:;
	};
}



inline jule::Any _1c2c7c79c_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1c55a5d4d:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _13720_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc1c53_builtin_caller_std_jule_integrated_to_str)});;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1c55a5e08:;
			{
				static jule::Ptr<_1c1cc9762_FnIns> _14020_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2cc214e_builtin_caller_std_jule_integrated_emit)});;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1c55a3a3d:;
			{
				return nullptr;
			}
		}
		_match_end_1c55a52ae:;
	};
}



inline jule::Any _1c2c91edc_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1c55a77ab:;
			{
				return jule::Any(_1c2c42dd3_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1c55a7855:;
			{
				return jule::Any(_1c2c4a56c_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1c55a78bb:;
			{
				return jule::Any(_1c2c7c79c_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1c55a36b9:;
			{
				return nullptr;
			}
		}
		_match_end_1c55a6ea3:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c9211e_builtin_caller_common_plain(jule::Ptr<_1c2be3823_Eval>& _16037_e, jule::Ptr<_20514ce48_FnCallExpr>& _16052_fc, jule::Ptr<_1c2be1ca5_Data>& _16074_d) {
	jule::Ptr<_1c1cc9762_FnIns> _16113_f = _1c2c23ec4_fnc(_16074_d.get()._field_kind.ptr());;
	_1c2bd388a_FnCallArgChecker _16313_fcac = _1c2bd388a_FnCallArgChecker{._field_e=_16037_e, ._field_f=_16113_f, ._field_args=_16052_fc.get()._field_args, ._field_dynamic_annotation=false, ._field_error_token=_16052_fc.get()._field_token};;
	if ((!(_1c2bd5c55_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1c1cba9ea_FnCallExprModel> _17413_model = jule::new_ptr<_1c1cba9ea_FnCallExprModel>(_1c1cba9ea_FnCallExprModel{._field_func=_16113_f, ._field_expr=jule::Any(_16074_d.get()._field_model), ._field_args=_16313_fcac._field_arg_models, ._field_token=_16052_fc.get()._field_token});;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1c2c17da8_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=_16113_f.get()._field_result});
	};
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c5e97c_builtin_caller_common(jule::Ptr<_1c2be3823_Eval>& _19331_e, jule::Ptr<_20514ce48_FnCallExpr>& _19346_fc, jule::Ptr<_1c2be1ca5_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1c2c9211e_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c5eaae_builtin_caller_common_mut(jule::Ptr<_1c2be3823_Eval>& _20135_e, jule::Ptr<_20514ce48_FnCallExpr>& _20150_fc, jule::Ptr<_1c2be1ca5_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1c2be3ceb_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1c2c5e97c_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c92d78_builtin_caller_error(jule::Ptr<_1c2be3823_Eval>& _20830_e, jule::Ptr<_20514ce48_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _21913_expr = _1c2c0ced0_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1c2be2190_is_nil(_21913_expr.ptr())) {
		_1c2be3ceb_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _22813_d = _1c2c17da8_build_void_data();;
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc2271_BuiltinErrorCallExprModel>(_1c1cc2271_BuiltinErrorCallExprModel{._field_err=jule::Any(_21913_expr.get()._field_model)}));
	return _22813_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c92eaa_builtin_caller_out(jule::Ptr<_1c2be3823_Eval>& _23628_e, jule::Ptr<_20514ce48_FnCallExpr>& _23643_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _24813_expr = _1c2c0ced0_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2c2d8d5_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1c2be3ceb_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _25813_d = _1c2c17da8_build_void_data();;
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cbeb75_BuiltinOutCallExprModel>(_1c1cbeb75_BuiltinOutCallExprModel{._field_expr=jule::Any(_24813_expr.get()._field_model)}));
	return _25813_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2c930dc_builtin_caller_outln(jule::Ptr<_1c2be3823_Eval>& _26330_e, jule::Ptr<_20514ce48_FnCallExpr>& _26345_fc, jule::Ptr<_1c2be1ca5_Data>& _26367_d) {
	_26367_d=_1c2c92eaa_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc0060_BuiltinOutlnCallExprModel>(_1c1cc0060_BuiltinOutlnCallExprModel{._field_expr=jule::Any(_26367_d.get()._field_model.operator jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>().get()._field_expr)}));
	return _26367_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc0a54_builtin_caller_new(jule::Ptr<_1c2be3823_Eval>& _27528_e, jule::Ptr<_20514ce48_FnCallExpr>& _27543_fc, jule::Ptr<_1c2be1ca5_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1c2be3ceb_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _28713_t = _1c2c0c8b4_eval_expr_kind(_27528_e, jule::Any(_27543_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1c2be3ceb_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1c2c2d330_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1c1cb6ad4_StructIns> _29817_s = _1c2c24238_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1c2be3ceb_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c2c28bee_Sptr>(_1c2c28bee_Sptr{._field_elem=_28713_t.get()._field_kind}), 6)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1c2c1b131_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1c2be1ca5_Data> _31517_init = _1c2c0ced0_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_205139176_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1c2b89962_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1c2b87b5d_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc0769_BuiltinNewCallExprModel>(_1c1cc0769_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=jule::Any(_31517_init.get()._field_model)}));
		};
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc0769_BuiltinNewCallExprModel>(_1c1cc0769_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind}));
	};
	return _27565_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc0db7_builtin_caller_panic(jule::Ptr<_1c2be3823_Eval>& _34030_e, jule::Ptr<_20514ce48_FnCallExpr>& _34045_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _35213_expr = _1c2c0ced0_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c2c2304a_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1c2c2869e_is_str(_1c2c2304a_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1c2be3ceb_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _36113_d = _1c2c17da8_build_void_data();;
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc0b54_BuiltinPanicCallExprModel>(_1c1cc0b54_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=jule::Any(_35213_expr.get()._field_model)}));
	return _36113_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc0ee9_builtin_caller_make(jule::Ptr<_1c2be3823_Eval>& _36929_e, jule::Ptr<_20514ce48_FnCallExpr>& _36944_fc, jule::Ptr<_1c2be1ca5_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1c2be3ceb_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1c2be3ceb_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_1c2be3ceb_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _38513_t = _1c2c0c8b4_eval_expr_kind(_36929_e, jule::Any(_36944_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_38513_t == nullptr)) {
		return nullptr;
	};
	if (((!(_38513_t.get()._field_decl)) || (_1c2c23c60_slc(_38513_t.get()._field_kind.ptr()) == nullptr))) {
		_1c2be3ceb_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_1c2be1ca5_Data> _39713_len = _1c2c0ced0_eval_expr(_1c2b87355_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_39713_len == nullptr)) {
		return _36966_d;
	};
	_1c2bec497_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1c2be1ca5_Data> _40517_cap = _1c2c0ced0_eval_expr(_1c2b87355_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		};
		_1c2bec497_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc15b1_BuiltinMakeCallExprModel>(_1c1cc15b1_BuiltinMakeCallExprModel{._field_kind=_38513_t.get()._field_kind, ._field_len=jule::Any(_39713_len.get()._field_model), ._field_cap=jule::Any(_40517_cap.get()._field_model)}));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc15b1_BuiltinMakeCallExprModel>(_1c1cc15b1_BuiltinMakeCallExprModel{._field_kind=_38513_t.get()._field_kind, ._field_len=jule::Any(_39713_len.get()._field_model)}));
	};
	return _36966_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc112b_builtin_caller_append(jule::Ptr<_1c2be3823_Eval>& _42631_e, jule::Ptr<_20514ce48_FnCallExpr>& _42646_fc, jule::Ptr<_1c2be1ca5_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_1c2be3ceb_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c2be3ceb_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _43913_t = _1c2c0ced0_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);;
	if ((_43913_t == nullptr)) {
		return nullptr;
	};
	if ((_1c2c23c60_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_1c2be3ceb_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c1cc9762_FnIns> _44913_f = jule::new_ptr<_1c1cc9762_FnIns>(_1c1cc9762_FnIns{._field_params=jule::Slice<jule::Ptr<_1c1cc88c6_ParamIns>>::make({jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_mutable=true}), ._field_kind=_43913_t.get()._field_kind}),jule::new_ptr<_1c1cc88c6_ParamIns>(_1c1cc88c6_ParamIns{._field_decl=jule::new_ptr<_1c1cc4c79_Param>(_1c1cc4c79_Param{._field_mutable=true, ._field_variadic=true}), ._field_kind=_1c2c23c60_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_43913_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1c2be1ca5_Data>(jule::Ptr<_1c2be3823_Eval>&,jule::Ptr<_20514ce48_FnCallExpr>&,jule::Ptr<_1c2be1ca5_Data>&)>(_1c2c9211e_builtin_caller_common_plain)});;
	_42668_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_44913_f, 1)});
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cbde3d_CommonIdentExprModel>(_1c1cbde3d_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42668_d=_1c2c9211e_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_1c1cba9ea_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_1c1cba9ea_FnCallExprModel>();;
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc199b_BuiltinAppendCallExprModel>(_1c1cc199b_BuiltinAppendCallExprModel{._field_dest=jule::Any(_47717_model.get()._field_args[0LL]), ._field_elements=jule::Any(_47717_model.get()._field_args[1LL])}));
	};
	return _42668_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc125d_caller_copy_slice(jule::Ptr<_1c2be1ca5_Data>& _48627_dest, jule::Ptr<_1c2be3823_Eval>& _48645_e, jule::Ptr<_20514ce48_FnCallExpr>& _48660_fc, jule::Ptr<_1c2be1ca5_Data>& _48682_d) {
	if ((!(_48627_dest.get()._field_mutable))) {
		_1c2be3ceb_push_err(_48645_e.ptr(), _48660_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _49113_src = _1c2c0ced0_eval_expr(_48645_e, _48660_fc.get()._field_args[1LL]);;
	if ((_49113_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2c2965b_Slc> _49513_slc = _1c2c23c60_slc(_49113_src.get()._field_kind.ptr());;
	if ((_49513_slc != nullptr)) {
		if (((!(_49113_src.get()._field_mutable)) && _1c2c1c4c8_mutable(_49513_slc.get()._field_elem.ptr()))) {
			_1c2be3ceb_push_err(_48645_e.ptr(), _48660_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1c2c1b7e6_equals(_48627_dest.get()._field_kind, _49113_src.get()._field_kind)))) {
			_1c2be3ceb_push_err(_48645_e.ptr(), _48660_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_48627_dest.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_49113_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1c2c256e0_Prim> _50513_dest_prim = _1c2c2304a_prim(_1c2c23c60_slc(_48627_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1c2c256e0_Prim> _50613_prim = _1c2c2304a_prim(_49113_src.get()._field_kind.ptr());;
		if (((((_50513_dest_prim == nullptr) || (_50613_prim == nullptr)) || (!(_1c2c2869e_is_str(_50613_prim.ptr())))) || (!(_1c2c26c74_is_u8(_50513_dest_prim.ptr()))))) {
			_1c2be3ceb_push_err(_48645_e.ptr(), _48660_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_48627_dest.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_49113_src.get()._field_kind.ptr()))}));
		};
	};
	_48682_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)});
	_48682_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc1d86_BuiltinCopyCallExprModel>(_1c1cc1d86_BuiltinCopyCallExprModel{._field_dest=_48627_dest, ._field_src=_49113_src}));
	return _48682_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1390_caller_copy_str(jule::Ptr<_1c2be1ca5_Data>& _52025_dest, jule::Ptr<_1c2be3823_Eval>& _52043_e, jule::Ptr<_20514ce48_FnCallExpr>& _52058_fc, jule::Ptr<_1c2be1ca5_Data>& _52080_d) {
	if ((!(_52025_dest.get()._field_mutable))) {
		_1c2be3ceb_push_err(_52043_e.ptr(), _52058_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _52513_src = _1c2c0ced0_eval_expr(_52043_e, _52058_fc.get()._field_args[1LL]);;
	if ((_52513_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1c2c2304a_prim(_52513_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c5603560:;
			{
				if (_1c2c2869e_is_str(_1c2c2304a_prim(_52513_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1c2c23c60_slc(_52513_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c56035c6:;
			{
				jule::Ptr<_1c2c2965b_Slc> _53517_slc = _1c2c23c60_slc(_52513_src.get()._field_kind.ptr());;
				if (((_1c2c2304a_prim(_53517_slc.get()._field_elem.ptr()) != nullptr) && _1c2c26c74_is_u8(_1c2c2304a_prim(_53517_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1c560387e:;
	};
	_1c2be3ceb_push_err(_52043_e.ptr(), _52058_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_52025_dest.get()._field_kind.ptr())),jule::Any(_1c2c1b4d8_to_str(_52513_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52080_d.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("int", 3)), 5)});
	_52080_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc1d86_BuiltinCopyCallExprModel>(_1c1cc1d86_BuiltinCopyCallExprModel{._field_dest=_52025_dest, ._field_src=_52513_src}));
	return _52080_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc14c2_builtin_caller_copy(jule::Ptr<_1c2be3823_Eval>& _55029_e, jule::Ptr<_20514ce48_FnCallExpr>& _55044_fc, jule::Ptr<_1c2be1ca5_Data>& _55066_d) {
	if ((_55044_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_55029_e.ptr(), _55044_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55044_fc.get()._field_args.len() < 2LL)) {
		if ((_55044_fc.get()._field_args.len() == 1LL)) {
			_1c2be3ceb_push_err(_55029_e.ptr(), _55044_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c2be3ceb_push_err(_55029_e.ptr(), _55044_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55044_fc.get()._field_args.len() > 2LL)) {
		_1c2be3ceb_push_err(_55029_e.ptr(), _55044_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _56613_dest = _1c2c0ced0_eval_expr(_55029_e, _55044_fc.get()._field_args[0LL]);;
	{
		
		if ((_56613_dest == nullptr)) {
			_case_begin_1c560e3e5:;
			{
				return nullptr;
			}
		}
		else if ((_1c2c23c60_slc(_56613_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1c560e2e6:;
			{
				return _1c2cc125d_caller_copy_slice(_56613_dest,_55029_e,_55044_fc,_55066_d);
			}
		}
		else if (((_1c2c2304a_prim(_56613_dest.get()._field_kind.ptr()) != nullptr) && _1c2c2869e_is_str(_1c2c2304a_prim(_56613_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1c560e35c:;
			{
				return _1c2cc1390_caller_copy_str(_56613_dest,_55029_e,_55044_fc,_55066_d);
			}
		}
		else {
			_case_begin_1c560d3e4:;
			{
				_1c2be3ceb_push_err(_55029_e.ptr(), _55044_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c560d36c:;
	};
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1604_builtin_caller_clone(jule::Ptr<_1c2be3823_Eval>& _58030_e, jule::Ptr<_20514ce48_FnCallExpr>& _58045_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_58045_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_58030_e.ptr(), _58045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58045_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_58030_e.ptr(), _58045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58045_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_58030_e.ptr(), _58045_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _59313_d = _1c2c0c8b4_eval_expr_kind(_58030_e, jule::Any(_58045_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_59313_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2c1cc15_supports_cloning(_59313_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1c2c23c60_slc(_59313_d.get()._field_kind.ptr()) != nullptr) || (_1c2c24711_map(_59313_d.get()._field_kind.ptr()) != nullptr) || (_1c2c239eb_arr(_59313_d.get()._field_kind.ptr()) != nullptr) || (_1c2c232ae_sptr(_59313_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1c5615ae4:;
				{
					{
						_1c2be3ceb_push_err(_58030_e.ptr(), _58045_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_59313_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1c2c24238_strct(_59313_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1c5615484:;
				{
					{
						_1c2be3ceb_push_err(_58030_e.ptr(), _58045_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_59313_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1c561541d:;
				{
					{
						_1c2be3ceb_push_err(_58030_e.ptr(), _58045_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1c2c1b4d8_to_str(_59313_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1c5614c9c:;
		};
	};
	_59313_d.get()._field_mutable=true;
	_59313_d.get()._field_model=jule::Any(jule::new_ptr<_1c1cc037e_BuiltinCloneCallExprModel>(_1c1cc037e_BuiltinCloneCallExprModel{._field_expr=jule::Any(_59313_d.get()._field_model)}));
	return _59313_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1736_builtin_caller_assert(jule::Ptr<_1c2be3823_Eval>& _62631_e, jule::Ptr<_20514ce48_FnCallExpr>& _62646_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_62646_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_62631_e.ptr(), _62646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62646_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_62631_e.ptr(), _62646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62646_fc.get()._field_args.len() > 2LL)) {
		_1c2be3ceb_push_err(_62631_e.ptr(), _62646_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _63813_expr = _1c2c0ced0_eval_expr(_62631_e, _62646_fc.get()._field_args[0LL]);;
	if ((_63813_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c2c2304a_prim(_63813_expr.get()._field_kind.ptr()) == nullptr) || (!(_1c2c2843a_is_bool(_1c2c2304a_prim(_63813_expr.get()._field_kind.ptr()).ptr()))))) {
		_1c2be3ceb_push_err(_62631_e.ptr(), _62646_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c1cc110a_BuiltinAssertCallExprModel> _64713_model = jule::new_ptr<_1c1cc110a_BuiltinAssertCallExprModel>(_1c1cc110a_BuiltinAssertCallExprModel{._field_token=_62646_fc.get()._field_token, ._field_expr=jule::Any(_63813_expr.get()._field_model), ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62646_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1c2be1ca5_Data> _65517_log = _1c2c0ced0_eval_expr(_62631_e, _62646_fc.get()._field_args[1LL]);;
		if ((_65517_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1c2be2668_is_const(_65517_log.ptr()))) || (_1c2c2304a_prim(_65517_log.get()._field_kind.ptr()) == nullptr)) || (!(_1c2c2869e_is_str(_1c2c2304a_prim(_65517_log.get()._field_kind.ptr()).ptr()))))) {
			_1c2be3ceb_push_err(_62631_e.ptr(), _62646_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1c2c1b4d8_to_str(_65517_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_64713_model.get()._field_log=_1c2abd467_read_str(_65517_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1c2be1ca5_Data> _66813_d = _1c2c17da8_build_void_data();;
	_66813_d.get()._field_model=jule::Any(_64713_model);
	return _66813_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1868_builtin_caller_std_mem_size_of(jule::Ptr<_1c2be3823_Eval>& _67340_e, jule::Ptr<_20514ce48_FnCallExpr>& _67355_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_67355_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_67340_e.ptr(), _67355_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _67713_result = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("uint", 4)), 5)})});;
	if ((_67355_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_67340_e.ptr(), _67355_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _67713_result;
	};
	if ((_67355_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_67340_e.ptr(), _67355_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _68913_d = _1c2c0c8b4_eval_expr_kind(_67340_e, jule::Any(_67355_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_68913_d == nullptr)) {
		return _67713_result;
	};
	_67713_result.get()._field_model=jule::Any(jule::new_ptr<_1c1cc2925_SizeofExprModel>(_1c1cc2925_SizeofExprModel{._field_expr=jule::Any(_68913_d.get()._field_model)}));
	return _67713_result;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc199a_builtin_caller_std_mem_align_of(jule::Ptr<_1c2be3823_Eval>& _69841_e, jule::Ptr<_20514ce48_FnCallExpr>& _69856_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_69856_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_69841_e.ptr(), _69856_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _70213_result = jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("uint", 4)), 5)})});;
	if ((_69856_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_69841_e.ptr(), _69856_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70213_result;
	};
	if ((_69856_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_69841_e.ptr(), _69856_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _71413_d = _1c2c0c8b4_eval_expr_kind(_69841_e, jule::Any(_69856_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_71413_d == nullptr)) {
		return _70213_result;
	};
	_70213_result.get()._field_model=jule::Any(jule::new_ptr<_1c1cc2b12_AlignofExprModel>(_1c1cc2b12_AlignofExprModel{._field_expr=jule::Any(_71413_d.get()._field_model)}));
	return _70213_result;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1acc_builtin_caller_std_mem_free(jule::Ptr<_1c2be3823_Eval>& _72337_e, jule::Ptr<_20514ce48_FnCallExpr>& _72352_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_72352_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_72337_e.ptr(), _72352_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72352_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_72337_e.ptr(), _72352_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72352_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_72337_e.ptr(), _72352_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _73613_d = _1c2c0c8b4_eval_expr_kind(_72337_e, jule::Any(_72352_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_73613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2c1c9a1_performs_rc(_73613_d.get()._field_kind.ptr())))) {
		_1c2be3ceb_push_err(_72337_e.ptr(), _72352_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _74513_result = _1c2c17da8_build_void_data();;
	_74513_result.get()._field_model=jule::Any(jule::new_ptr<_1c1cc3849_FreeExprModel>(_1c1cc3849_FreeExprModel{._field_expr=jule::Any(_73613_d.get()._field_model)}));
	return _74513_result;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc1c53_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c2be3823_Eval>& _75051_e, jule::Ptr<_20514ce48_FnCallExpr>& _75066_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((_75066_fc.get()._field_generics.len() > 0LL)) {
		_1c2be3ceb_push_err(_75051_e.ptr(), _75066_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75066_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_75051_e.ptr(), _75066_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75066_fc.get()._field_args.len() > 1LL)) {
		_1c2be3ceb_push_err(_75051_e.ptr(), _75066_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2be1ca5_Data> _76313_d = _1c2c0c8b4_eval_expr_kind(_75051_e, jule::Any(_75066_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_76313_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2c2d8d5_is_builtin_str_convertable(_76313_d.get()._field_kind)))) {
		_1c2be3ceb_push_err(_75051_e.ptr(), _75066_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c2be1ca5_Data>(_1c2be1ca5_Data{._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(_1c2c2de68_build_prim_type(jule::Str("str", 3)), 5)}), ._field_model=jule::Any(jule::new_ptr<_1c1cc3195_IntegratedToStrExprModel>(_1c1cc3195_IntegratedToStrExprModel{._field_expr=jule::Any(_76313_d.get()._field_model)}))});
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc214e_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1c2be3823_Eval>& _78149_e, jule::Ptr<_20514ce48_FnCallExpr>& _78164_fc, jule::Ptr<_1c2be1ca5_Data>& ) {
	if ((!(_1c2be4736_is_unsafe(_78149_e.ptr())))) {
		_1c2be3ceb_push_err(_78149_e.ptr(), _78164_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78164_fc.get()._field_args.len() < 1LL)) {
		_1c2be3ceb_push_err(_78149_e.ptr(), _78164_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _79113_d = _1c2c0ced0_eval_expr(_78149_e, _78164_fc.get()._field_args[0LL]);;
	if ((_79113_d == nullptr)) {
		return nullptr;
	};
	if (((_1c2c2304a_prim(_79113_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2c2869e_is_str(_1c2c2304a_prim(_79113_d.get()._field_kind.ptr()).ptr()))))) {
		_1c2be3ceb_push_err(_78149_e.ptr(), _78164_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2c1b4d8_to_str(_79113_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1c2be2668_is_const(_79113_d.ptr()))) || (!(_1c2ac0810_is_str(_79113_d.get()._field_constant.ptr()))))) {
		_1c2be3ceb_push_err(_78149_e.ptr(), _78164_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2be1ca5_Data> _80613_r = _1c2c17da8_build_void_data();;
	if ((_78164_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1c2b83c9c_check_generic_quantity(_78149_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_78164_fc.get()._field_generics.len()),_78164_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1c2c24d2c_TypeSymbol> _81217_k = _1c1ccded6_build_type(_78164_fc.get()._field_generics[0LL]);;
		if ((!(_1c2b86046_check_type(_78149_e.get()._field_s, _81217_k,_78149_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80613_r.get()._field_kind=_81217_k.get()._field_kind;
	};
	jule::Ptr<_1c1cc355d_BackendEmitExprModel> _81913_model = jule::new_ptr<_1c1cc355d_BackendEmitExprModel>(_1c1cc355d_BackendEmitExprModel{._field_code=_1c2abd467_read_str(_79113_d.get()._field_constant.ptr())});;
	if ((_78164_fc.get()._field_args.len() > 1LL)) {
		_81913_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78164_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78164_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1c5645481:;
			if (it != expr.end()) {
				jule::Ptr<_2050bba21_Expr> _82521_arg = *it;
				{
					jule::Ptr<_1c2be1ca5_Data> _82621_argd = _1c2c0c8b4_eval_expr_kind(_78149_e, jule::Any(_82521_arg.get()._field_kind));;
					if ((_82621_argd == nullptr)) {
						return nullptr;
					};
					_81913_model.get()._field_exprs = jule::alloc_for_append(_81913_model.get()._field_exprs,1);_81913_model.get()._field_exprs.__push(jule::Any(_82621_argd.get()._field_model));;
				}
				_iter_next_1c5645481:;
				++it;
				goto _iter_begin_1c5645481;
			}
			_iter_end_1c5645481:;
		};
	};
	_80613_r.get()._field_model=jule::Any(_81913_model);
	return _80613_r;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc255b_builtin_caller_std_debug_out(jule::Ptr<_1c2be3823_Eval>& _83838_e, jule::Ptr<_20514ce48_FnCallExpr>& _83853_fc, jule::Ptr<_1c2be1ca5_Data>& _83875_d) {
	_83875_d=_1c2c92eaa_builtin_caller_out(_83838_e,_83853_fc,_83875_d);
	if ((_83875_d == nullptr)) {
		return nullptr;
	};
	_83875_d.get()._field_model.operator jule::Ptr<_1c1cbeb75_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _83875_d;
}



inline jule::Ptr<_1c2be1ca5_Data> _1c2cc2979_builtin_caller_std_debug_outln(jule::Ptr<_1c2be3823_Eval>& _84840_e, jule::Ptr<_20514ce48_FnCallExpr>& _84855_fc, jule::Ptr<_1c2be1ca5_Data>& _84877_d) {
	_84877_d=_1c2c930dc_builtin_caller_outln(_84840_e,_84855_fc,_84877_d);
	if ((_84877_d == nullptr)) {
		return nullptr;
	};
	_84877_d.get()._field_model.operator jule::Ptr<_1c1cc0060_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _84877_d;
}



inline std::tuple<jule::Bool,jule::Bool> _204e10128_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1c567ea70:;
			{
				_925_ok=_2046de771_is_windows(_204710165_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1c567ead6:;
			{
				_925_ok=_2046dea5c_is_darwin(_204710165_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1c567eb4c:;
			{
				_925_ok=_2046ded04_is_linux(_204710165_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1c567ebb3:;
			{
				_925_ok=_2046e08c6_is_unix(_204710165_OS);
			}
		}
		else {
			_case_begin_1c567e355:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1c567e883:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _204e1025a_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1c56822d1:;
			{
				_3027_ok=_2046e00e0_is_i386(_2047146ca_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1c5682347:;
			{
				_3027_ok=_2046e0387_is_amd64(_2047146ca_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1c56823ad:;
			{
				_3027_ok=_2046e062e_is_arm64(_2047146ca_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1c5682424:;
			{
				_3027_ok=_2046e0e9d_is_64bit(_2047146ca_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1c568248a:;
			{
				_3027_ok=_2046e0c06_is_32bit(_2047146ca_ARCH);
			}
		}
		else {
			_case_begin_1c5681ac7:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1c56820e4:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _204e2e565_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_204c6737b_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _204c67117_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _20498cd93_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _204e10128_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _204e1025a_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_20498cd93_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _204e10128_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _204e1025a_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _204e1025a_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _204e10128_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _204e10128_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _204e30731_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_204710165_OS);;
	if (_2046e08c6_is_unix(_204710165_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _204e30984_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_2047146ca_ARCH);;
	if (_2046e0e9d_is_64bit(_2047146ca_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_2046e0c06_is_32bit(_2047146ca_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _204e30c3c_init_vars(jule::Slice<jule::Str>& _5519_vars, _204e30423_CompileInfo& _5533_info) {
	_204e30731_set_os_vars(_5519_vars);
	_204e30984_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c568d7b5:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c568e3cb:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1c568e552:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c568e442:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c569018a:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c5690201:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1c5690641:;
	};
}



inline jule::Slice<jule::U8> _1dada6a67_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__235b31c3c_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_204cc036d_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _2046db273_Log _1dada920c_flat_compiler_err(jule::Str _4122_text) {
	return _2046db273_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text};
}



inline void _1db255674_push_passes(jule::Ptr<_1c2b79eb3_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c56ae121:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1c56b6568:;
					if (it != expr.end()) {
						_1c1ccdb84_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1c56b6568;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1c56b8878:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1c56b6568;
										};
									}
									_iter_next_1c56b8878:;
									++it;
									goto _iter_begin_1c56b8878;
								}
								_iter_end_1c56b8878:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1c56b6568:;
						++it;
						goto _iter_begin_1c56b6568;
					}
					_iter_end_1c56b6568:;
				};
			}
			_iter_next_1c56ae121:;
			++it;
			goto _iter_begin_1c56ae121;
		}
		_iter_end_1c56ae121:;
	};
}



inline jule::Slice<jule::Str> _1db2563bc_get_all_unique_passes(jule::Ptr<_1c2b79eb3_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1c2b77301_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1db255674_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1c56b9ba9:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1db255674_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1c56b9ba9:;
			++it;
			goto _iter_begin_1c56b9ba9;
		}
		_iter_end_1c56b9ba9:;
	};
	return _13013_passes;
}



inline _204e30423_CompileInfo _1db257a0b_build_compile_info(void) {
	_204e30423_CompileInfo _14313_info = _204e30423_CompileInfo{._field_prod=_2359c7e57_PRODUCTION, ._field_test=_2359c980a_TEST};;
	{
		auto &_match_expr{ _2359c9002_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c56bb24e:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c56bb2b5:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1c56bb1e9:;
	};
	{
		auto &_match_expr{ _2359c9343_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c56bbd98:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c56bb6a0:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c56bb716:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1c56bbcbb:;
	};
	return _14313_info;
}



inline jule::Ptr<_204ec174a_Directive> _1db26b8cc_find_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>& _3224_directives, jule::Str _3255_tag) {
	{
		auto &expr = _3224_directives;
		auto it = expr.begin();
		_iter_begin_1c56d9965:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _3317_dr = *it;
			{
				if ((_3317_dr.get()._field_tag.get()._field_kind == _3255_tag)) {
					return _3317_dr;
				};
			}
			_iter_next_1c56d9965:;
			++it;
			goto _iter_begin_1c56d9965;
		}
		_iter_end_1c56d9965:;
	};
	return nullptr;
}



inline jule::Bool _1db27198c_has_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>& _4219_directives, jule::Str _4250_tag) {
	return (_1db26b8cc_find_directive(_4219_directives,_4250_tag) != nullptr);
}



inline jule::Bool _1db2775a8_is_exist(jule::Slice<jule::Any> _4713_arr, jule::Any _4725_t) {
	{
		auto &expr = _4713_arr;
		auto it = expr.begin();
		_iter_begin_1c56db22a:;
		if (it != expr.end()) {
			jule::Any &_4812_ref = *it;
			{
				if ((_4725_t == _4812_ref)) {
					return true;
				};
			}
			_iter_next_1c56db22a:;
			++it;
			goto _iter_begin_1c56db22a;
		}
		_iter_end_1c56db22a:;
	};
	return false;
}



inline jule::Bool _1db2a6087_is_dead(jule::Any _5716_ref) {
	jule::Bool _5728_dead = jule::Bool();
	if (_1db2775a8_is_exist(_1dadb41b2_deads,jule::Any(_5716_ref))) {
		_5728_dead = true;
		return _5728_dead;
	};
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc9762_FnIns>>()) {
			_case_begin_1c56dd507:;
			{
				if (_1c1cc7254_is_init(_5716_ref.operator jule::Ptr<_1c1cc9762_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_1c56dc45c;
				};
				goto _case_begin_1c56dc4b2;
			}
		}
		else {
			_case_begin_1c56dc4b2:;
			{
				if (((_1dae08646_current == _5716_ref) || (_1dae08e60_main_current == _5716_ref))) {
					_5728_dead = true;
					return _5728_dead;
				};
				if (_1db2775a8_is_exist(_1dadb9daa_checking,jule::Any(_5716_ref))) {
					_5728_dead = true;
					return _5728_dead;
				};
			}
		}
		_match_end_1c56dc45c:;
	};
	jule::Any _7813_old = _1dae08646_current;;
	_1dae08646_current=jule::Any(_5716_ref);
	jule::I64 _809_len = _1dadb9daa_checking.len();;
	_1dadb9daa_checking = jule::alloc_for_append(_1dadb9daa_checking,1);_1dadb9daa_checking.__push(jule::Any(_5716_ref));;
	__JULE_DEFER({
		_1dae08646_current=jule::Any(_7813_old);
		_1db2aa399_drop_ref(_1dadb9daa_checking,_809_len);
	});;
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cc9762_FnIns>>()) {
			_case_begin_1c56e04c6:;
			{
				_5728_dead = _1db2eb583_is_fn_dead(_5716_ref.operator jule::Ptr<_1c1cc9762_FnIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2b9a4de_Var>>()) {
			_case_begin_1c56e0394:;
			{
				_5728_dead = _1db3385d1_is_var_dead(_5716_ref.operator jule::Ptr<_1c2b9a4de_Var>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb6ad4_StructIns>>()) {
			_case_begin_1c56e040a:;
			{
				_5728_dead = _1db34a4e4_is_struct_dead(_5716_ref.operator jule::Ptr<_1c1cb6ad4_StructIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2a137db_Trait>>()) {
			_case_begin_1c56e05c5:;
			{
				_5728_dead = _1db34bc21_is_trait_dead(_5716_ref.operator jule::Ptr<_1c2a137db_Trait>());
				return _5728_dead;
			}
		}
		else {
			_case_begin_1c56dd716:;
			{
				_5728_dead = false;
				return _5728_dead;
			}
		}
		_match_end_1c56de89e:;
	};
}



inline void _1db2aa399_drop_ref(jule::Slice<jule::Any>& _10518_refs, jule::I64 _10531_pos) {
	_10518_refs=_10518_refs.slice(0LL,_10531_pos);
}



inline jule::Bool _1db289e6c_is_all_references_are_dead(jule::Ptr<_1c1ccc798_ReferenceStack> _11335_references) {
	jule::I64 _11413_i = 0LL;;
	for (; (_11413_i < _1c1ccce3b_len(_11335_references.ptr())); (_11413_i)++) {
		{
			jule::Any _11617_ref = _1c1ccd249_at(_11335_references.ptr(), _11413_i);;
			if ((_11617_ref == _1dae08646_current)) {
				goto _iter_next_1c56e2484;
			};
			if ((_11617_ref == _1dae08e60_main_current)) {
				goto _iter_next_1c56e2484;
			};
			if ((!(_1db2a6087_is_dead(jule::Any(_11617_ref))))) {
				return false;
			};
		}
	_iter_next_1c56e2484:;
	}
	_iter_end_1c56e2484:;;
	return true;
}



inline jule::Bool _1db2eb583_is_fn_dead(jule::Ptr<_1c1cc9762_FnIns> _13019_f) {
	if ((_13019_f.get()._field_decl.get()._field_cpp_linked || _13019_f.get()._field_anon)) {
		return false;
	};
	if ((_1c1cc6ee0_is_entry_point(_13019_f.get()._field_decl.ptr()) || _1c1cc7254_is_init(_13019_f.get()._field_decl.ptr()))) {
		return (!(_13019_f.get()._field_decl.get()._field_statically));
	};
	if ((_2359c980a_TEST && _1db27198c_has_directive(_13019_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		return false;
	};
	if ((_13019_f.get()._field_owner != nullptr)) {
		if (_1db2775a8_is_exist(_1dadb9daa_checking,jule::Any(_13019_f.get()._field_owner))) {
			return true;
		};
		return _1db2a6087_is_dead(jule::Any(_13019_f.get()._field_owner));
	};
	return _1db289e6c_is_all_references_are_dead(_13019_f.get()._field_references);
}



inline jule::Bool _1db3385d1_is_var_dead(jule::Ptr<_1c2b9a4de_Var> _16020_v) {
	if (_16020_v.get()._field_constant) {
		return true;
	};
	if (_16020_v.get()._field_cpp_linked) {
		return false;
	};
	return _1db289e6c_is_all_references_are_dead(_16020_v.get()._field_references);
}



inline jule::Bool _1db34a4e4_is_struct_dead(jule::Ptr<_1c1cb6ad4_StructIns> _20523_s) {
	return false;
}



inline jule::Bool _1db34bc21_is_trait_dead(jule::Ptr<_1c2a137db_Trait> _22222_t) {
	return false;
}



inline void _1db35098e_eliminate_dead_functions(jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>& _23934_funcs) {
	jule::I64 _24013_i = 0LL;;
	while ((_24013_i < _23934_funcs.len())) {
		{
			jule::Ptr<_1c1cc65b6_Fn> _24217_f = _23934_funcs[_24013_i];;
			jule::I64 _24317_j = 0LL;;
			while ((_24317_j < _24217_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1c1cc9762_FnIns> _24521_ins = _24217_f.get()._field_instances[_24317_j];;
					_1dae08e60_main_current=jule::Any(_24521_ins);
					if (_1db2eb583_is_fn_dead(_24521_ins)) {
						_1dadb41b2_deads = jule::alloc_for_append(_1dadb41b2_deads,1);_1dadb41b2_deads.__push(jule::Any(_24521_ins));;
						_24217_f.get()._field_instances=jule::append(_24217_f.get()._field_instances.slice(0LL,_24317_j),_24217_f.get()._field_instances.slice((_24317_j + 1LL)));
					} else {
						(_24317_j)++;
					};
				}
			_iter_next_1c5701e00:;
			}
			_iter_end_1c5701e00:;;
			if ((_24217_f.get()._field_instances.len() == 0LL)) {
				_23934_funcs=jule::append(_23934_funcs.slice(0LL,_24013_i),_23934_funcs.slice((_24013_i + 1LL)));
				goto _iter_next_1c5700162;
			};
			(_24013_i)++;
		}
	_iter_next_1c5700162:;
	}
	_iter_end_1c5700162:;;
}



inline void _1db354e27_eliminate_dead_globals(jule::Ptr<_1c2b79eb3_Package>& _26432_pkg) {
	{
		auto &expr = _26432_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c5703297:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _26517_f = *it;
			{
				jule::I64 _26617_i = 0LL;;
				while ((_26617_i < _26517_f.get()._field_vars.len())) {
					{
						jule::Ptr<_1c2b9a4de_Var> _26821_v = _26517_f.get()._field_vars[_26617_i];;
						_1dae08e60_main_current=jule::Any(_26821_v);
						if (_1db3385d1_is_var_dead(_26821_v)) {
							_1dadb41b2_deads = jule::alloc_for_append(_1dadb41b2_deads,1);_1dadb41b2_deads.__push(jule::Any(_26821_v));;
							_26517_f.get()._field_vars=jule::append(_26517_f.get()._field_vars.slice(0LL,_26617_i),_26517_f.get()._field_vars.slice((_26617_i + 1LL)));
						} else {
							(_26617_i)++;
						};
					}
				_iter_next_1c5705035:;
				}
				_iter_end_1c5705035:;;
			}
			_iter_next_1c5703297:;
			++it;
			goto _iter_begin_1c5703297;
		}
		_iter_end_1c5703297:;
	};
}



inline void _1db3ce4bd_eliminate_dead_functions_package(jule::Ptr<_1c2b79eb3_Package>& _28042_pkg) {
	{
		auto &expr = _28042_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c57033da:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _28117_f = *it;
			{
				_1db35098e_eliminate_dead_functions(_28117_f.get()._field_funcs);
			}
			_iter_next_1c57033da:;
			++it;
			goto _iter_begin_1c57033da;
		}
		_iter_end_1c57033da:;
	};
}



inline void _1db42cac1_keep_alive_init(jule::Ptr<_1c2b79eb3_Package>& _32825_pkg) {
	;
	;
	jule::Ptr<_1c1cc65b6_Fn> _33113_f = _1c2b7b756_find_fn(_32825_pkg.ptr(), jule::Str("init", 4),false);;
	if ((_33113_f != nullptr)) {
		_33113_f.get()._field_statically=true;
	};
}



inline void _1db430c39_eliminate_package(jule::Ptr<_1c2b79eb3_Package>& _33727_pkg) {
	_1dadb41b2_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_1db42cac1_keep_alive_init(_33727_pkg);
	_1db354e27_eliminate_dead_globals(_33727_pkg);
	_1db3ce4bd_eliminate_dead_functions_package(_33727_pkg);
}



inline void _1db447c40_eliminate_defines(jule::Ptr<_1db2583d0_IR>& _34931_ir) {
	jule::I64 _35013_i = (_34931_ir.get()._field_used.len() - 1LL);;
	for (; (_35013_i >= 0LL); (_35013_i)--) {
		{
			jule::Ptr<_1c2b77301_ImportInfo> _35217_u = _34931_ir.get()._field_used[_35013_i];;
			if ((!(_35217_u.get()._field_cpp_linked))) {
				_1db430c39_eliminate_package(_35217_u.get()._field_package);
			};
		}
	_iter_next_1c57115b3:;
	}
	_iter_end_1c57115b3:;;
	_1db430c39_eliminate_package(_34931_ir.get()._field_main);
	_1dadb41b2_deads=nullptr;
	_1dadb9daa_checking=nullptr;
	_1dae08646_current=nullptr;
}



inline void _1db540783_eliminate_dead_code_of_scope(jule::Ptr<_1c2b4c1e9_Scope> _11637_s) {
	jule::Slice<jule::Ptr<_1c2b60130_Label>> _1179_labels = jule::Slice<jule::Ptr<_1c2b60130_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1c2b6031c_GotoSt>> _1189_gotos = jule::Slice<jule::Ptr<_1c2b6031c_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1db43516c_ScopeDeadCode> _11913_sdc = jule::new_ptr<_1db43516c_ScopeDeadCode>(_1db43516c_ScopeDeadCode{._field_s=_11637_s, ._field_stmts=(&(_11637_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c2b60130_Label>>>)((&(_1179_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c2b6031c_GotoSt>>>)((&(_1189_gotos))))});;
	{
		_1db53c6a3_optimize_stmts(_11913_sdc);
	};
}



inline void _1db540c4a_eliminate_scope_functions(jule::Slice<jule::Ptr<_1c1cc65b6_Fn>>& _12935_funcs) {
	{
		auto &expr = _12935_funcs;
		auto it = expr.begin();
		_iter_begin_1c5715a90:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cc65b6_Fn> _13017_func = *it;
			{
				{
					auto &expr = _13017_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1c5716024:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc9762_FnIns> _13121_ins = *it;
						{
							_1db540783_eliminate_dead_code_of_scope(_13121_ins.get()._field_scope);
						}
						_iter_next_1c5716024:;
						++it;
						goto _iter_begin_1c5716024;
					}
					_iter_end_1c5716024:;
				};
			}
			_iter_next_1c5715a90:;
			++it;
			goto _iter_begin_1c5715a90;
		}
		_iter_end_1c5715a90:;
	};
}



inline void _1db9d5046_eliminate_functions_scope_package(jule::Ptr<_1c2b79eb3_Package>& _13743_pkg) {
	{
		auto &expr = _13743_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c5715d37:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _13817_f = *it;
			{
				_1db540c4a_eliminate_scope_functions(_13817_f.get()._field_funcs);
			}
			_iter_next_1c5715d37:;
			++it;
			goto _iter_begin_1c5715d37;
		}
		_iter_end_1c5715d37:;
	};
}



inline void _1db9d5b3a_eliminate_scope_package(jule::Ptr<_1c2b79eb3_Package>& _14333_pkg) {
	_1db9d5046_eliminate_functions_scope_package(_14333_pkg);
}



inline void _1db9d7ec2_eliminate_scopes(jule::Ptr<_1db2583d0_IR>& _14830_ir) {
	jule::I64 _14913_i = (_14830_ir.get()._field_used.len() - 1LL);;
	for (; (_14913_i >= 0LL); (_14913_i)--) {
		{
			jule::Ptr<_1c2b77301_ImportInfo> _15117_u = _14830_ir.get()._field_used[_14913_i];;
			if ((!(_15117_u.get()._field_cpp_linked))) {
				_1db9d5b3a_eliminate_scope_package(_15117_u.get()._field_package);
			};
		}
	_iter_next_1c57177b7:;
	}
	_iter_end_1c57177b7:;;
	_1db9d5b3a_eliminate_scope_package(_14830_ir.get()._field_main);
}



inline void _1db3159dc_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_204cc036d_exit(1LL);
}



inline jule::Bool _1c348cb16_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _204c1a131_has_prefix(_39919_f,_204c66ed5_join(jule::Slice<jule::Str>::make({_2046ee8d5_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1c348ce35_is_constant_valid_conditional_case(jule::Ptr<_1c2b53ae6_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c57ce54e:;
			{
				jule::Ptr<_1c2abb9a4_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1c2abb9a4_Const>();;
				return (_1c2ac059b_is_bool(_40613_c.ptr()) && _1c2abd203_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1c57ce4d8:;
	};
	return false;
}



inline jule::Bool _1c348d1cc_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c57d00aa:;
			{
				jule::Ptr<_1c2abb9a4_Const> _41513_c = _41225_expr.operator jule::Ptr<_1c2abb9a4_Const>();;
				return (_1c2ac059b_is_bool(_41513_c.ptr()) && (!(_1c2abd203_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c1cb8c07_BinopExprModel>>()) {
			_case_begin_1c57d0121:;
			{
				jule::Ptr<_1c1cb8c07_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1c1cb8c07_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1c348d1cc_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1c348d1cc_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1c57d07e7:;
	};
	return false;
}



inline jule::Bool _1c348d4da_is_constant_valid_match_case(jule::Ptr<_1c2b60edd_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c57d141e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2be1ca5_Data> &_42712_expr = *it;
			{
				if (((_1c2be2668_is_const(_42712_expr.ptr()) && _1c2ac059b_is_bool(_42712_expr.get()._field_constant.ptr())) && _1c2abd203_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1c57d141e:;
			++it;
			goto _iter_begin_1c57d141e;
		}
		_iter_end_1c57d141e:;
	};
	return false;
}



inline jule::Bool _1c348d7b5_is_unreachable_conditional_case(jule::Ptr<_1c2b53ae6_If>& _43537_i) {
	return _1c348d1cc_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1c348da90_is_unreachable_match_case(jule::Ptr<_1c2b60edd_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c57d4eb1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2be1ca5_Data> &_44012_expr = *it;
			{
				if ((!(_1c348d1cc_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1c57d4eb1:;
			++it;
			goto _iter_begin_1c57d4eb1;
		}
		_iter_end_1c57d4eb1:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1c3495beb_check_for_bit_shift_opt(jule::Ptr<_1c1cb8740_OperandExprModel>& _42329_l, jule::Ptr<_1c1cb8740_OperandExprModel>& _42352_r) {
	jule::Bool _42376_ok = jule::Bool();
	jule::U64 _42386_x = jule::U64();
	if (((!(_1c2b5e4d6_is_int(_1c2c1b4d8_to_str(_42329_l.get()._field_kind.ptr())))) || (!(_1c2b5e4d6_is_int(_1c2c1b4d8_to_str(_42352_r.get()._field_kind.ptr())))))) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	};
	{
		auto &_match_expr{ _42352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2abb9a4_Const>>()) {
			_case_begin_1c57d7a52:;
			{
				goto _match_end_1c57d74ad;
			}
		}
		else {
			_case_begin_1c57d7513:;
			{
				_42376_ok = false;
				_42386_x = 0LLU;
				return std::make_tuple(_42376_ok,_42386_x);
			}
		}
		_match_end_1c57d74ad:;
	};
	_42386_x=static_cast<jule::U64>(_1c2abdba4_as_u64(_42352_r.get()._field_model.operator jule::Ptr<_1c2abb9a4_Const>().ptr()));
	if (((_42386_x == 0LLU) || ((_42386_x & 1LL) != 0LLU))) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	};
	jule::F64 _4379_j = _1c29e1b60_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42386_x)));;
	jule::U64 _4389_z = static_cast<jule::U64>(_4379_j);;
	if ((static_cast<jule::F64>(_4389_z) != _4379_j)) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	};
	_42376_ok = true;
	_42386_x = _4389_z;
	return std::make_tuple(_42376_ok,_42386_x);
}



inline jule::U64 _1c3517102_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1c3517443_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1c35177c8_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1c5813b05:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c5814067:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c58140cd:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c5814144:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c58141aa:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c5814221:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c5814287:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c581430e:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c5814386:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1c581440d:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c5814485:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1c5813d58:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1c3398e0c_is_copy_optimizable(jule::Ptr<_1c2be1ca5_Data>& _73325_expr) {
	if ((!(_73325_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _73325_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cbc546_SlicingExprModel>>()) {
			_case_begin_1c5b7a851:;
			{
				return false;
			}
		}
		_match_end_1c5b85b7a:;
	};
	return true;
}



inline jule::Bool _1c334b7d8_is_iter_copy_optimizable(jule::Ptr<_1c2be1ca5_Data>& _74430_expr, jule::Ptr<_1c2b9a4de_Var>& _74444_v) {
	if (((!(_74430_expr.get()._field_lvalue)) && (!(_1c2c1c4c8_mutable(_74430_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_74444_v.get()._field_mutable)) && (!(_74430_expr.get()._field_mutable)));
}



inline jule::Str _1c349d550_decompose_common_esq(jule::U8 _112125_b) {
	{
		auto &_match_expr{ _112125_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c5b87583:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c5b875e9:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c5b87660:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c5b876c6:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c5b877a3:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c5b87819:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c5b87880:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c5b87907:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c5b8797e:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c5b87b6b:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1c5b87385:;
			{
				return jule::Str();
			}
		}
		_match_end_1c5b86d35:;
	};
}



inline jule::Str _1c349d83b_sbtoa(jule::U8 _114810_b) {
	if ((_114810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_114810_b < 128LLU)) {
		jule::Str _115313_seq = _1c349d550_decompose_common_esq(_114810_b);;
		if ((!(_115313_seq.empty()))) {
			return _115313_seq;
		};
		if (((32LL <= _114810_b) && (_114810_b <= 126LLU))) {
			return static_cast<jule::Str>(_114810_b);
		};
	};
	jule::Str _11619_seq = _1c2a11d7d_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_114810_b)),8LL);;
	if ((_11619_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11619_seq);
	};
	return (jule::Str("\\", 1) + _11619_seq);
}



inline jule::Str _1c349dad3_cstr_bytes(jule::Slice<jule::U8> _116815_bytes) {
	jule::Str _116913_lit = jule::Str();;
	{
		auto &expr = _116815_bytes;
		auto it = expr.begin();
		_iter_begin_1c5b8d105:;
		if (it != expr.end()) {
			jule::U8 &_117012_b = *it;
			{
				_116913_lit+=_1c349d83b_sbtoa(_117012_b);
			}
			_iter_next_1c5b8d105:;
			++it;
			goto _iter_begin_1c5b8d105;
		}
		_iter_end_1c5b8d105:;
	};
	return _116913_lit;
}



inline jule::Str _1c349ddbe_cstr_lit(jule::Slice<jule::U8> _117613_bytes) {
	return ((jule::Str("\"", 1) + _1c349dad3_cstr_bytes(_117613_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1c349e210_ftoa(jule::F64 _11809_f, jule::I64 _118017_bitsize) {
	if ((_118017_bitsize != 32LL)) {
		if ((_11809_f == static_cast<jule::F64>(static_cast<jule::I64>(_11809_f)))) {
			return _1c349e4a7_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_11809_f)));
		};
		if ((_11809_f == static_cast<jule::F64>(static_cast<jule::U64>(_11809_f)))) {
			return _1c349e74e_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_11809_f)));
		};
	};
	jule::Str _118913_m = _1dbba6b96_fmt_float(_11809_f,'f',-1LL,_118017_bitsize);;
	if ((!(_204c04a99_contains(_118913_m,jule::Str(".", 1))))) {
		_118913_m+=jule::Str(".0", 2);
	};
	return _118913_m;
}



inline jule::Str _1c349e4a7_itoa(jule::I64 _11969_x) {
	{
		
		if ((_11969_x == jule::MAX_I64)) {
			_case_begin_1c5b91dd9:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_11969_x == jule::MIN_I64)) {
			_case_begin_1c5b91ea5:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1c5b91cc9:;
	};
	jule::Str _12049_fmt = _1c2a12213_fmt_int(_11969_x,10LL);;
	if (_2046e0e9d_is_64bit(jule::Str("arm64", 5))) {
		return (_12049_fmt + jule::Str("LL", 2));
	};
	return (_12049_fmt + jule::Str("L", 1));
}



inline jule::Str _1c349e74e_utoa(jule::U64 _12119_x) {
	{
		
		if ((_12119_x == jule::MAX_U64)) {
			_case_begin_1c5b93c32:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1c5b93b66:;
	};
	jule::Str _12179_fmt = _1c2a11d7d_fmt_uint(_12119_x,10LL);;
	if (_2046e0e9d_is_64bit(jule::Str("arm64", 5))) {
		return (_12179_fmt + jule::Str("LLU", 3));
	};
	return (_12179_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1c349ea7e_is_forwarded(jule::Ptr<_1c2b4c1e9_Scope>& _122418_s) {
	jule::Any _12259_last = _122418_s.get()._field_stmts[(_122418_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12259_last };
		
		if (_match_expr.type_is<jule::Ptr<_1c2be1ca5_Data>>()) {
			_case_begin_1c5b9643d:;
			{
				{
					auto &_match_expr{ _12259_last.operator jule::Ptr<_1c2be1ca5_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c1cc2271_BuiltinErrorCallExprModel>>()) {
						_case_begin_1c5b97065:;
						{
							return true;
						}
					}
					else {
						_case_begin_1c5b96938:;
						{
							return false;
						}
					}
					_match_end_1c5b968d3:;
				};
			}
		}
		else {
			_case_begin_1c5b95d11:;
			{
				return true;
			}
		}
		_match_end_1c5b95cab:;
	};
}



inline jule::Bool _1c349ed48_is_builtin_call_has_debuginf(jule::Ptr<_1c1cba9ea_FnCallExprModel>& _123934_m) {
	if ((!(_1c1cca4dd_is_builtin(_123934_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _123934_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>>()) {
			_case_begin_1c5b96be1:;
			{
				jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel> _124513_csie = _123934_m.get()._field_expr.operator jule::Ptr<_1c1cbe49e_CommonSubIdentExprModel>();;
				return (_124513_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1c5b96b03:;
			{
				return false;
			}
		}
		_match_end_1c5b96a9d:;
	};
}



inline void _1c351bdc6_iter_files(jule::Ptr<_1c2b79eb3_Package>& _100020_pkg, jule::Fn<void(jule::Ptr<_1c2bdbbe5_SymbolTable>&)> _100035_f) {
	{
		auto &expr = _100020_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c5b97780:;
		if (it != expr.end()) {
			jule::Ptr<_1c2bdbbe5_SymbolTable> _100117_file = *it;
			{
				_100035_f(_100117_file);
			}
			_iter_next_1c5b97780:;
			++it;
			goto _iter_begin_1c5b97780;
		}
		_iter_end_1c5b97780:;
	};
}



inline void _1c351c129_prepare_structure(jule::Ptr<_1c1cb3e55_Struct>& _100627_s) {
	{
		auto &expr = _100627_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1c5b98d25:;
		if (it != expr.end()) {
			jule::Ptr<_1c1cb6ad4_StructIns> _100717_ins = *it;
			{
				{
					auto &expr = _100717_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1c5b999a2:;
					if (it != expr.end()) {
						jule::Ptr<_1c1cc65b6_Fn> _100821_m = *it;
						{
							if (_100821_m.get()._field_statically) {
								goto _iter_next_1c5b999a2;
							};
							{
								auto &expr = _100821_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1c5b9a5eb:;
								if (it != expr.end()) {
									jule::Ptr<_1c1cc9762_FnIns> _101225_mins = *it;
									{
										jule::Ptr<_1c1cc88c6_ParamIns> _101325_p = _101225_mins.get()._field_params[0LL];;
										if ((!(_1c1cc561a_is_ref(_101325_p.get()._field_decl.ptr())))) {
											_101325_p.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c351d328_CustomType>(_1c351d328_CustomType{._field_kind=static__1c351ebdc_as_ptr(static__1c3522e43_kind(_101325_p.get()._field_kind))}), 12)});
										} else {
											_101325_p.get()._field_kind=jule::new_ptr<_1c2c1b131_TypeKind>(_1c2c1b131_TypeKind{._field_kind=jule::Trait<_1c2c1ac02_Kind>(jule::new_ptr<_1c351d328_CustomType>(_1c351d328_CustomType{._field_kind=static__1c3522e43_kind(_101325_p.get()._field_kind)}), 12)});
										};
									}
									_iter_next_1c5b9a5eb:;
									++it;
									goto _iter_begin_1c5b9a5eb;
								}
								_iter_end_1c5b9a5eb:;
							};
						}
						_iter_next_1c5b999a2:;
						++it;
						goto _iter_begin_1c5b999a2;
					}
					_iter_end_1c5b999a2:;
				};
			}
			_iter_next_1c5b98d25:;
			++it;
			goto _iter_begin_1c5b98d25;
		}
		_iter_end_1c5b98d25:;
	};
}



inline jule::Str _1c351c3c1_concat_all_parts(jule::Slice<jule::Ptr<_205139176_Token>> _103321_parts) {
	jule::Str _103413_s = jule::Str();;
	{
		auto &expr = _103321_parts;
		auto it = expr.begin();
		_iter_begin_1c5b9a95e:;
		if (it != expr.end()) {
			jule::Ptr<_205139176_Token> &_103512_p = *it;
			{
				_103413_s+=_103512_p.get()._field_kind;
			}
			_iter_next_1c5b9a95e:;
			++it;
			goto _iter_begin_1c5b9a95e;
		}
		_iter_end_1c5b9a95e:;
	};
	return _103413_s;
}



inline jule::Ptr<_204ec174a_Directive> _1c35243d9_find_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>& _31824_directives, jule::Str _31855_tag) {
	{
		auto &expr = _31824_directives;
		auto it = expr.begin();
		_iter_begin_1c5b99e36:;
		if (it != expr.end()) {
			jule::Ptr<_204ec174a_Directive> _31917_dr = *it;
			{
				if ((_31917_dr.get()._field_tag.get()._field_kind == _31855_tag)) {
					return _31917_dr;
				};
			}
			_iter_next_1c5b99e36:;
			++it;
			goto _iter_begin_1c5b99e36;
		}
		_iter_end_1c5b99e36:;
	};
	return nullptr;
}



inline jule::Bool _1c352476e_has_directive(jule::Slice<jule::Ptr<_204ec174a_Directive>>& _32819_directives, jule::Str _32850_tag) {
	return (_1c35243d9_find_directive(_32819_directives,_32850_tag) != nullptr);
}



inline void _2046a7ad0_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _2046ba30c_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_2046a7ad0_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _2046bed7d_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _2046bed7d_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1c5bead00:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1c5bead00:;
			++it;
			goto _iter_begin_1c5bead00;
		}
		_iter_end_1c5bead00:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _2046bed7d_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1c5bec395:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_204c21b2c_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1c5bec395:;
			++it;
			_519_i++;
			goto _iter_begin_1c5bec395;
		}
		_iter_end_1c5bec395:;
	};
	jule::outln(_4913_s);
}



inline void _2046bb907_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_2046a7ad0_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11 @master", 18));
}



inline void _2046bc199_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _2046de320_DISTOS;
		auto it = expr.begin();
		_iter_begin_1c5c006a6:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1c5c006a6:;
			++it;
			goto _iter_begin_1c5c006a6;
		}
		_iter_end_1c5c006a6:;
	};
	jule::outln(jule::Str());
}



inline void _2046bc93b_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _2046de51d_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1c5c011bd:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1c5c011bd:;
			++it;
			goto _iter_begin_1c5c011bd;
		}
		_iter_end_1c5c011bd:;
	};
	jule::outln(jule::Str());
}



inline void _2046bd1cd_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_2046a7ad0_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1c5c03a72:;
			{
				_2046bc199_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1c5c037db:;
			{
				_2046bc93b_tool_distarch();
			}
		}
		else {
			_case_begin_1c5c03698:;
			{
				_2046a7ad0_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1c5c035aa:;
	};
}



inline void _2046bd970_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_2046a7ad0_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _2359c9002_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _2359c9343_CPP_STD));
}



inline void _2046cd72c_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_2046a7ad0_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1c5c080c6:;
			{
				({
					auto except = static__235b353e4_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_2046a7ad0_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c5c07191:;
			{
				_2046a7ad0_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1c5c07c1e:;
	};
}



inline jule::Bool _2046a5050_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1c5c098be:;
			{
				_2046ba30c_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1c5c09935:;
			{
				_2046bb907_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1c5c09ea7:;
			{
				_2046bd1cd_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1c5c0a01d:;
			{
				_2046bd970_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1c5c0a0c8:;
			{
				_2046cd72c_mod(_15121_args);
			}
		}
		else {
			_case_begin_1c5c07ceb:;
			{
				return false;
			}
		}
		_match_end_1c5c0944b:;
	};
	return true;
}



inline void _2046b9718_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _236a673d0_args();;
	if ((_18713_args.len() < 2LL)) {
		_2046b9718_show_info();
		return;;
	};
	if (_2046a5050_process_command(_18713_args)) {
		return;;
	};
	_1c3558d14_compile_command(_18713_args);
}



inline void _2046ab51d_enable_vtp(void) {
	jule::U64 _199_h_out = _236813a1c_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dw_mode = 0LL;;
	if ((!(_2368168aa_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_236816beb_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _2046c6291_init(void) {
	_2046ab51d_enable_vtp();
}



inline jule::Ptr<_2368217d8_File> _1c352bbb6_open_output(jule::Str& _4917_path) {
	jule::Str _509_dir = _204c674ad_dir(_4917_path);;
	({
		auto except = static__204c67c72_of(_509_dir);
		if (!except.ok()) {
			({
				auto except = static__204c67854_create(_509_dir);
				if (!except.ok()) {
					_1db3159dc_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__235b29ebb_create(_4917_path);
		(except.ok()) ? (except.result) : ({
			_1db3159dc_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1c353abe7_clear_objects(void) {
	({
		auto except = static__23697739a_remove(_1c33122d7_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__204c67986_remove(_1c3065348_OUT_DIR);
}



inline void _1c2d42268_compile_ir(jule::Str _7815_compiler, jule::Str _7830_compiler_cmd) {
	jule::Ptr<_20472bc31_Cmd> _7913_cmd = static__20472c160_new(_7815_compiler);;
	_7913_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7815_compiler});
	_7913_cmd.get()._field_args=jule::append(_7913_cmd.get()._field_args,_204c04967_split(_7830_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _829_status = ({
		auto except = _204731582_spawn(_7913_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1c5c14cb4:;
					{
						static__1db9debdd_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1c5c14d2a:;
					{
						static__1db9debdd_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1c5c14d91:;
					{
						static__1db9debdd_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1c5c14e07:;
					{
						static__1db9debdd_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c5c14a0b:;
					{
						static__1db9debdd_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1c5c14a94:;
			};
			_1db3159dc_throw(jule::Str());
			0LL;
		});
	});;
	if ((_829_status != 0LL)) {
		jule::Str _9913_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _2359c9002_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1db9debdd_print(jule::Str("\033[31m", 5),_9913_error_message);
		_1db3159dc_throw(jule::Str());
	};
	_1c353abe7_clear_objects();
}



inline jule::Bool _1c35281ce_is_cpp_source_file(jule::Str _11023_path) {
	jule::I64 _1119_offset = _20498cd93_find_last_byte(_11023_path,'.');;
	if ((_1119_offset == -1LL)) {
		return false;
	};
	return _2046cec7d_is_valid_cpp_ext(_11023_path.slice(_1119_offset));
}



inline void _1c3533052_push_comp_cmd_clang(jule::Str& _11829_cmd) {
	_11829_cmd+=jule::Str("-Wno-everything ", 16);
	_11829_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2359c9343_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c5c19add:;
			{
				_11829_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c5c1a627:;
			{
				_11829_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c5c1a68d:;
			{
				_11829_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1c5c1a54a:;
	};
	_11829_cmd+=jule::Str(" ", 1);
	if (_2359c7e57_PRODUCTION) {
		_11829_cmd+=jule::Str("-O3 ", 4);
		_11829_cmd+=jule::Str("-flto ", 6);
		_11829_cmd+=jule::Str("-DNDEBUG ", 9);
		_11829_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11829_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1c3525b9e_push_comp_cmd_gcc(jule::Str& _14427_cmd) {
	_14427_cmd+=jule::Str("-w ", 3);
	_14427_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _2359c9343_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c5c1ca69:;
			{
				_14427_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c5c1cad0:;
			{
				_14427_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c5c1cb46:;
			{
				_14427_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1c5c1c96a:;
	};
	_14427_cmd+=jule::Str(" ", 1);
	if (_2359c7e57_PRODUCTION) {
		_14427_cmd+=jule::Str("-O3 ", 4);
		_14427_cmd+=jule::Str("-DNDEBUG ", 9);
		_14427_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14427_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1c320e514_gen_compile_cmd(jule::Str _17020_source_path, jule::Ptr<_1db2583d0_IR>& _17039_ir) {
	jule::Str &_17110_compiler = _2359c91bc_COMPILER_PATH;;
	jule::Str _17213_cmd = jule::Str();;
	{
		auto &_match_expr{ _2359c9002_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c5c1ed9b:;
			{
				_1c3525b9e_push_comp_cmd_gcc(_17213_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c5c20231:;
			{
				_1c3533052_push_comp_cmd_clang(_17213_cmd);
			}
		}
		_match_end_1c5c20088:;
	};
	{
		auto &expr = _17039_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1c5c20d47:;
		if (it != expr.end()) {
			jule::Str &_18212_pass = *it;
			{
				_17213_cmd+=_18212_pass;
				_17213_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1c5c20d47:;
			++it;
			goto _iter_begin_1c5c20d47;
		}
		_iter_end_1c5c20d47:;
	};
	{
		auto &expr = _17039_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1c5c21a18:;
		if (it != expr.end()) {
			jule::Ptr<_1c2b77301_ImportInfo> &_18812_u = *it;
			{
				if ((_18812_u.get()._field_cpp_linked && _1c35281ce_is_cpp_source_file(_18812_u.get()._field_path))) {
					_17213_cmd+=_18812_u.get()._field_path;
					_17213_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1c5c21a18:;
			++it;
			goto _iter_begin_1c5c21a18;
		}
		_iter_end_1c5c21a18:;
	};
	if ((!(_1c35293de_OUT.empty()))) {
		_17213_cmd+=jule::Str("-o ", 3);
		_17213_cmd+=_1c35293de_OUT;
		_17213_cmd+=jule::Str(" ", 1);
	};
	_17213_cmd+=_17020_source_path;
	return std::make_tuple(_17110_compiler,_17213_cmd);
}



inline jule::Str _1c33122d7_get_compile_path(void) {
	return _204c66ed5_join(jule::Slice<jule::Str>::make({_1c3065348_OUT_DIR,_1c3110ba7_OUT_NAME}));
}



inline void _1c352992d_apply_target_independent_optimizations(jule::Ptr<_1db2583d0_IR>& _21548_ir) {
	if (_2359c8133_OPT_DEADCODE) {
		_1db447c40_eliminate_defines(_21548_ir);
	};
	jule::Ptr<_1c3496713_Optimizer> _22213_opt = static__1c3496b53_new(_21548_ir);;
	_1c3498094_optimize(_22213_opt.ptr());
	if (_2359c8133_OPT_DEADCODE) {
		_1db9d7ec2_eliminate_scopes(_21548_ir);
	};
}



inline void _1c3525044_check_compiler_flag(void) {
	{
		auto &_match_expr{ _2359c9002_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c5c24e4a:;
			{
				_1db3159dc_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c5c24796:;
			{
				if (_2359c91bc_COMPILER_PATH.empty()) {
					_2359c91bc_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c5c2480c:;
			{
				if (_2359c91bc_COMPILER_PATH.empty()) {
					_2359c91bc_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c5c24675:;
			{
				_1db3159dc_throw((jule::Str("invalid option value for --compiler: ", 37) + _2359c9002_COMPILER));
			}
		}
		_match_end_1c5c2470d:;
	};
}



inline void _1c3525176_check_target_arch(jule::Str _24822_arch) {
	{
		auto &expr = _2046de51d_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1c5c2619e:;
		if (it != expr.end()) {
			jule::Str &_24912_distarch = *it;
			{
				if ((_24822_arch == _24912_distarch)) {
					return;;
				};
			}
			_iter_next_1c5c2619e:;
			++it;
			goto _iter_begin_1c5c2619e;
		}
		_iter_end_1c5c2619e:;
	};
	_1db3159dc_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _24822_arch));
}



inline void _1c3558264_check_target_os(jule::Str _25720_os) {
	{
		auto &expr = _2046de320_DISTOS;
		auto it = expr.begin();
		_iter_begin_1c5c27a30:;
		if (it != expr.end()) {
			jule::Str &_25812_distos = *it;
			{
				if ((_25720_os == _25812_distos)) {
					return;;
				};
			}
			_iter_next_1c5c27a30:;
			++it;
			goto _iter_begin_1c5c27a30;
		}
		_iter_end_1c5c27a30:;
	};
	_1db3159dc_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _25720_os));
}



inline void _1c3558396_check_target_flag(jule::Str& _26623_target) {
	if (_26623_target.empty()) {
		_1db3159dc_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2719_parts = _204c04967_split(_26623_target,jule::Str("-", 1),-1LL);;
	if ((_2719_parts.len() != 2LL)) {
		_1db3159dc_throw((jule::Str("--target: undefined platform target format: ", 44) + _26623_target));
	};
	jule::Str _27610_os = _2719_parts[0LL];;
	jule::Str _27614_arch = _2719_parts[1LL];;
	std::tie(_27610_os,_27614_arch) = std::make_tuple(_2719_parts[0LL],_2719_parts[1LL]);
	if ((_27610_os != jule::Str("native", 6))) {
		_1c3558264_check_target_os(_27610_os);
		_204710165_OS=_27610_os;
	};
	if ((_27614_arch != jule::Str("native", 6))) {
		_1c3525176_check_target_arch(_27614_arch);
		_2047146ca_ARCH=_27614_arch;
	};
	_1c2b5670e_update_target();
}



inline void _1c35584c8_check_opt_flag(jule::Str& _28920_opt) {
	if (_28920_opt.empty()) {
		_1db3159dc_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _28920_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1c5c2cb12:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1c5c2cb78:;
			{
				_2359c8ad4_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1c5c2c408:;
			{
				_1db3159dc_throw((jule::Str("--opt: invalid optimization level: ", 35) + _28920_opt));
			}
		}
		_match_end_1c5c2ca79:;
	};
}



inline void _1c355883b_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _2359c9343_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c5c2dea9:;
			{
				goto _match_end_1c5c2d54c;
			}
		}
		else {
			_case_begin_1c5c2cbde:;
			{
				_1db3159dc_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _2359c9343_CPP_STD));
			}
		}
		_match_end_1c5c2d54c:;
	};
}



inline jule::Slice<jule::Str> _1c355896d_check_flags(jule::Slice<jule::Str>& _31417_args) {
	jule::Str _31513_opt = jule::Str("L0", 2);;
	jule::Str _31613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1c355444c_FlagSet> _31813_fs = static__1c3554738_new();;
	_1c3556619_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31513_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1c3556619_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31613_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1c3556619_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1c35293de_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c950d_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c9684_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1c3556619_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2359c9002_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1c3556619_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2359c91bc_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c7e57_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c9981_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c9b90_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1c3556619_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2359c9343_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c8045_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c8133_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c8221_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c830e_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c840d_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c8584_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c8793_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1c3556619_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2359c8919_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _34013_content = ({
		auto except = _1c3555580_parse(_31813_fs.ptr(), _31417_args);
		(except.ok()) ? (except.result) : ({
			_1db3159dc_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1c3525044_check_compiler_flag();
	_1c355883b_check_cpp_std_flag();
	_1c3558396_check_target_flag(_31613_target);
	_1c35584c8_check_opt_flag(_31513_opt);
	return _34013_content;
}



inline void _1c3558aa0_setup_sema_flags(jule::I64& _35326_flags) {
	if (_2359c950d_SHADOWING) {
		_35326_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1db2583d0_IR> _1c3558bd2_build_ir(jule::Slice<jule::Str>& _35914_args) {
	jule::Slice<jule::Str> _3609_content = _1c355896d_check_flags(_35914_args);;
	jule::I64 _36213_sema_flags = static_cast<jule::I64>(0LL);;
	_1c3558aa0_setup_sema_flags(_36213_sema_flags);
	if ((_3609_content.len() == 0LL)) {
		_1db3159dc_throw(_2046db6b3_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3609_content.len() > 1LL)) {
		_1db3159dc_throw((jule::Str("undefined content: ", 19) + _3609_content[1LL]));
	};
	jule::Str _37014_path;;
	jule::Bool _37020_ok;;
	std::tie(_37014_path,_37020_ok) = _204c67249_abs(_3609_content[0LL]);
	if ((!(_37020_ok))) {
		_1db3159dc_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_236821b7e_Status> _3769_inf = ({
		auto except = static__204c67c72_of(_2046ee8d5_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1db3159dc_throw(_2046db6b3_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_236821b7e_Status>();});
	});;
	if ((!(_235b49804_is_dir(_3769_inf.ptr())))) {
		_1db3159dc_throw(_2046db6b3_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1db2583d0_IR> _38414_ir;;
	jule::Slice<_2046db273_Log> _38418_logs;;
	std::tie(_38414_ir,_38418_logs) = static__1dae4dbb9_build(_37014_path,_36213_sema_flags);
	if (((_38414_ir == nullptr) && (_38418_logs == nullptr))) {
		_1db3159dc_throw(_2046db6b3_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_37014_path)})));
	};
	if ((_38418_logs != nullptr)) {
		static__1db28860d_print_logs(_38418_logs);
		_1db3159dc_throw(jule::Str());
	};
	return _38414_ir;
}



inline void _1c3558d14_compile_command(jule::Slice<jule::Str>& _39925_args) {
	_39925_args=_39925_args.slice(1LL);
	if ((_39925_args[0LL] == jule::Str("test", 4))) {
		_2359c980a_TEST=true;
		_39925_args=_39925_args.slice(1LL);
	};
	jule::Ptr<_1db2583d0_IR> _40513_ir = _1c3558bd2_build_ir(_39925_args);;
	;
	if ((!(_2359c980a_TEST))) {
		jule::Ptr<_1c1cc65b6_Fn> _41017_main = _1c2b7b756_find_fn(_40513_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_41017_main == nullptr)) {
			_1db3159dc_throw(_2046db6b3_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
		_41017_main.get()._field_statically=true;
	};
	jule::Ptr<_1c1cc65b6_Fn> _41613_init = _1c2b7b756_find_fn(_40513_ir.get()._field_main.ptr(), jule::Str("init", 4),false);;
	if ((_41613_init != nullptr)) {
		_41613_init.get()._field_statically=true;
	};
	_1c352992d_apply_target_independent_optimizations(_40513_ir);
	_1db2534da_order(_40513_ir.ptr());
	jule::Str _42610_compiler;;
	jule::Str _42620_compiler_cmd;;
	std::tie(_42610_compiler,_42620_compiler_cmd) = _1c320e514_gen_compile_cmd(_1c33122d7_get_compile_path(),_40513_ir);
	jule::Ptr<_1c34d0d35_ObjectCoder> _42813_oc = static__1c34d9c1d_new(_40513_ir,_1c34dc2e7_SerializationInfo{._field_compiler=_42610_compiler, ._field_compiler_command=_42620_compiler_cmd});;
	if (_2359c980a_TEST) {
		jule::Ptr<_1c34a1a09_TestCoder> _43317_tc = static__1c34a1e7c_new(_42813_oc);;
		_1c34a31ae_serialize(_43317_tc);
	} else {
		_1c351ba63_serialize(_42813_oc);
	};
	jule::Str _4399_path = _1c33122d7_get_compile_path();;
	jule::Ptr<_2368217d8_File> _44013_file = _1c352bbb6_open_output(_4399_path);;
	({
		auto except = _2369436b8_write(_44013_file.ptr(), static_cast<jule::Slice<jule::U8>>(_42813_oc.get()._field_obj));
		if (!except.ok()) {
			_1db3159dc_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _235b48407_close(_44013_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:444:5"));
	});
	if ((!(_2359c9684_TRANSPILATION))) {
		_1c2d42268_compile_ir(_42610_compiler,_42620_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_20472a009_init();
	_1c2b56874_init();
	_2046c6291_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}