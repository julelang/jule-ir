// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 29/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1c2cee05a_Importer{};
struct _1c2d9e3e6_Kind{};
struct _1c2dba3bd_Lookup{};
struct _1a96a4dd0_CommonFlag{};
struct _205e01c1d_accept_range;
struct _207b1050c_Range16;
struct _207b10980_Range32;
struct _207b10e03_RangeTable;
struct _207b15da3_LazyBuff;
struct _205146a35_DirEntry;
struct _20514876d_Directory;
struct _205d30ac5_File;
struct _205d30e8d_Status;
struct _207bc0ba5_Cmd;
struct _207b80eb7_Log;
struct _1db7061a7_Token;
struct _1db70b542_File;
struct _1db70d599_KindPair;
struct _1db7141c6_Lex;
struct _1dcd355c6_Ast;
struct _1dcd36275_Node;
struct _1dcd36671_Directive;
struct _1dcd69d69_TypeDecl;
struct _1dcd6a430_IdentTypeDecl;
struct _1dcd6aa7e_SubIdentTypeDecl;
struct _1dcd6ae36_NamespaceTypeDecl;
struct _1dcd6b222_SptrTypeDecl;
struct _1dcd6b61d_SlcTypeDecl;
struct _1dcd6b909_TupleTypeDecl;
struct _1dcd6bbe5_PtrTypeDecl;
struct _1dcd6c377_ArrTypeDecl;
struct _1dcd6cac5_MapTypeDecl;
struct _1dcd6ce7c_RetTypeDecl;
struct _1dcd6e38a_Expr;
struct _1dcd6e676_RangeExpr;
struct _1dcd6ec2b_UseExpr;
struct _1dcd70017_TupleExpr;
struct _1dcd703be_LitExpr;
struct _1dcd70ac8_UnsafeExpr;
struct _1dcd70e80_CoExpr;
struct _1dcd71403_IdentExpr;
struct _1dcd71b0c_UnaryExpr;
struct _1dcd71eb4_VariadicExpr;
struct _1dcd7236b_CastExpr;
struct _1dcd72723_NsSelectionExpr;
struct _1dcd72b96_SubIdentExpr;
struct _1dcd73119_BinopExpr;
struct _1dcd73658_FnCallExpr;
struct _1dcd740d7_FieldExprPair;
struct _1dcd74835_StructLit;
struct _1dcd74ca8_BraceLit;
struct _1dcd757c0_KeyValPair;
struct _1dcd75c43_SliceExpr;
struct _1dcd765d4_IndexingExpr;
struct _1dcd76bde_SlicingExpr;
struct _1dcd76eca_Constraint;
struct _1dcd7744d_GenericDecl;
struct _1dcd77805_LabelSt;
struct _1dcd77bac_GotoSt;
struct _1dcd77e98_FallSt;
struct _1dcd785a3_AssignLeft;
struct _1dcd78ae2_AssignSt;
struct _1dcd79a7c_Stmt;
struct _1dcd7a187_ScopeTree;
struct _1dcd7a85d_ParamDecl;
struct _1dcd7bb7d_FnDecl;
struct _1dcd7cb5c_VarDecl;
struct _1dcd7d014_RetSt;
struct _1dcd7d674_Iter;
struct _1dcd7de49_WhileKind;
struct _1dcd7e7da_RangeKind;
struct _1dcd7eb92_BreakSt;
struct _1dcd80049_ContSt;
struct _1dcd804bc_If;
struct _1dcd80874_Else;
struct _1dcd80ce7_Conditional;
struct _1dcd814bd_TypeAliasDecl;
struct _1dcd81941_Case;
struct _1dcd82117_MatchCase;
struct _1dcd828a9_UseDecl;
struct _1dcd82d2c_EnumItemDecl;
struct _1dcd83855_EnumDecl;
struct _1dcd8435b_TypeEnumItemDecl;
struct _1dcd84559_TypeEnumDecl;
struct _1dcd84aa9_FieldDecl;
struct _1dcd85417_StructDecl;
struct _1dcd85a22_TraitDecl;
struct _1dcd8612c_Impl;
struct _1dcdbd1a8_Const;
struct _1c2c24e09_FloatInfo;
struct _1c2c25ab9_DecimalSlice;
struct _1c2c373d3_LeftCheat;
struct _1c2c37dea_Decimal;
struct _1dcd4ca61_Field;
struct _1dcd5bec1_Operators;
struct _1dcd5a596_Struct;
struct _1dcd62c0d_FieldIns;
struct _1dce31529_OperandExprModel;
struct _1dce31716_BinopExprModel;
struct _1dce31903_UnaryExprModel;
struct _1dce31ae0_StructArgExprModel;
struct _1dce31ccc_StructLitExprModel;
struct _1dce31eb9_AllocStructLitExprModel;
struct _1dce321a6_CastingExprModel;
struct _1dce32393_FnCallExprModel;
struct _1dce32580_SliceExprModel;
struct _1dce3276c_IndexingExprModel;
struct _1dce32959_AnonFnExprModel;
struct _1dce32b46_KeyValPairExprModel;
struct _1dce32d33_MapExprModel;
struct _1dce33020_SlicingExprModel;
struct _1dce3320c_TraitSubIdentExprModel;
struct _1dce3362a_StructSubIdentExprModel;
struct _1dce33817_StructStaticIdentExprModel;
struct _1dce33a04_ArrayExprModel;
struct _1dce33be1_CommonIdentExprModel;
struct _1dce33dcd_CommonSubIdentExprModel;
struct _1dce340ba_TupleExprModel;
struct _1dce342a7_BuiltinOutCallExprModel;
struct _1dce34494_BuiltinOutlnCallExprModel;
struct _1dce34681_BuiltinCloneCallExprModel;
struct _1dce3486d_BuiltinNewCallExprModel;
struct _1dce34a5a_BuiltinPanicCallExprModel;
struct _1dce34c47_BuiltinAssertCallExprModel;
struct _1dce34e34_BuiltinMakeCallExprModel;
struct _1dce35121_BuiltinAppendCallExprModel;
struct _1dce3530d_BuiltinCopyCallExprModel;
struct _1dce354ea_BuiltinErrorCallExprModel;
struct _1dce333e9_SizeofExprModel;
struct _1dce35b5a_AlignofExprModel;
struct _1dce35d47_RuneExprModel;
struct _1dce36034_IntegratedToStrExprModel;
struct _1dce36221_BackendEmitExprModel;
struct _1dce3640d_FreeExprModel;
struct _1dce36991_RetType;
struct _1dce37156_Param;
struct _1dce38993_Fn;
struct _1dce3a775_ParamIns;
struct _1dce3b644_FnIns;
struct _1dce3e548_ReferenceStack;
struct _1dce40912_Pass;
struct _1dce44dab_SymbolBuilder;
struct _1c2c3d54e_Trait;
struct _1c2c3ec15_EnumItem;
struct _1c2c4070a_Enum;
struct _1c2c4173e_TypeEnumItem;
struct _1c2c41d05_TypeEnum;
struct _1c2c59e50_ConstraintChecker;
struct _1c2cc44d6_Impl;
struct _1c2cd2d1e_Scope;
struct _1c2cd321a_If;
struct _1c2cd3506_Else;
struct _1c2cd3902_Conditional;
struct _1c2cd3bdd_InfIter;
struct _1c2cd4161_WhileIter;
struct _1c2cd4a46_RangeIter;
struct _1c2cd4e42_ContSt;
struct _1c2cd52e9_BreakSt;
struct _1c2cd55d5_Label;
struct _1c2cd58c1_GotoSt;
struct _1c2cd5c78_Postfix;
struct _1c2cd61eb_Assign;
struct _1c2cd65a3_MultiAssign;
struct _1c2cd6ae2_Match;
struct _1c2cd763c_Case;
struct _1c2cd7be2_FallSt;
struct _1c2cd8165_RetSt;
struct _1c2cd8770_ScopeLabel;
struct _1c2cd8be3_ScopeGoto;
struct _1c2cd9a07_ScopeChecker;
struct _1c2ceab4a_DirectiveChecker;
struct _1c2d01854_ImportInfo;
struct _1c2d047ad_Package;
struct _1c2d099a0_Sema;
struct _1c2d23a85_MissingRetChecker;
struct _1c2d25746_IterRelation;
struct _1c2d266ae_Var;
struct _1c2d271d7_FuncPattern;
struct _1c2d57877_TypeCompatibilityChecker;
struct _1c2d594a0_AssignTypeChecker;
struct _1c2d5adb9_DynamicTypeAnnotation;
struct _1c2d6075e_FnCallArgChecker;
struct _1c2d63168_StructLitChecker;
struct _1c2d64c4c_RangeChecker;
struct _1c2d66dd6_RetTypeChecker;
struct _1c2d68c84_SymbolTable;
struct _1c2d6d9e2_Data;
struct _1c2d6ea6a_Value;
struct _1c2d70560_Eval;
struct _1c2d91460_UnaryEval;
struct _1c2d931ed_BinaryEval;
struct _1c2d9d0e8_InsGeneric;
struct _1c2d9db32_TypeAlias;
struct _1c2d9e825_TypeKind;
struct _1c2da397d_TypeSymbol;
struct _1c2da42ec_Prim;
struct _1c2da7a81_Sptr;
struct _1c2da84dd_Slc;
struct _1c2da906b_Tuple;
struct _1c2da9a94_Map;
struct _1c2daa688_Arr;
struct _1c2dab0e5_Ptr;
struct _1c2dac03b_Referencer;
struct _1c2dacc84_TypeChecker;
struct _1c2db5495_IdentTypeLookup;
struct _1c437d286_FileInfo;
struct _1c43c6a1b_stmt;
struct _1c43c7346_ScopeParser;
struct _1c43d46d8_ExprBuilder;
struct _1c43dea56_AssignInfo;
struct _1c43e30cb_Parser;
struct _1c44044a5_TypeBuilder;
struct _1c3b4d1a5_CompileInfo;
struct _1c3b4e508_DirectiveEval;
struct _1c4378d75_JuleImporter;
struct _1c4407a4c_OrderedDefines;
struct _1c4407c39_DefineOrderer;
struct _1a944ca8a_LiveTable;
struct _1a947e6c1_ScopeDeadCode;
struct _1a948365e_ExprDeadCode;
struct _1c2e60b17_UnsafeBinopExprModel;
struct _1c2e60e36_UnsafeIndexingExprModel;
struct _1c2e612ee_PushToSliceExprModel;
struct _1c2e618b5_MutSlicingExprModel;
struct _1c2e61c5b_StrInsertBeginExprModel;
struct _1c2e62dd3_ScopeOptimizer;
struct _1c2e68515_ExprOptimizer;
struct _1a9457e80_Optimizer;
struct _1a949cd93_AnsiEscape;
struct _1a949e47c_Logger;
struct _1a9a722ad_AbsTime;
struct _1a9a72951_Time;
struct _1a99eb4e0_ScopeCoder;
struct _1a9a04064_ExprCoder;
struct _1a9a11e62_DeriveCoder;
struct _1a9a13392_TestCoder;
struct _1a9a159e3_IdentCoder;
struct _1a9a77c75_SerializationInfo;
struct _1a9a77e62_TraitHash;
struct _1a9a7dbc1_CustomType;
struct _1a9a7e4b8_TypeCoder;
struct _1ac2e0694_Flag;
struct _1ac2e4357_Flag;
struct _1ac2e7d3e_Flag;
struct _1ac2eb86a_Flag;
struct _1ac300352_Flag;
struct _1a9ab9b1e_FlagSet;
struct _1c41b3132_IR;
struct _1dcd868e1_StructIns;
struct _1a944cd54_ObjectDeadCode;
struct _1a9a7814e_ObjectCoder;
struct _1a9abc2e7_ArgParser;
struct _205e01c1d_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_205e01c1d_accept_range(void) = default;

	inline bool operator==(_205e01c1d_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_205e01c1d_accept_range _other) { return !this->operator==(_other); }


};
struct _207b1050c_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_207b1050c_Range16(void) = default;

	inline bool operator==(_207b1050c_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_207b1050c_Range16 _other) { return !this->operator==(_other); }


};
struct _207b10980_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_207b10980_Range32(void) = default;

	inline bool operator==(_207b10980_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_207b10980_Range32 _other) { return !this->operator==(_other); }


};
struct _207b10e03_RangeTable {
	jule::Slice<_207b1050c_Range16> _field_r16 = jule::Slice<_207b1050c_Range16>();
	jule::Slice<_207b10980_Range32> _field_r32 = jule::Slice<_207b10980_Range32>();
	jule::I64 _field_latin_offset = jule::I64();
	

	_207b10e03_RangeTable(void) = default;

	inline bool operator==(_207b10e03_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_207b10e03_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _207b16090_index(_207b15da3_LazyBuff*, jule::I64);
inline void _207b161c2_append(_207b15da3_LazyBuff*, jule::U8);
inline jule::Str _207b16304_string(_207b15da3_LazyBuff*);
struct _207b15da3_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();
	

	_207b15da3_LazyBuff(void) = default;

	inline bool operator==(_207b15da3_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_207b15da3_LazyBuff _other) { return !this->operator==(_other); }


};
struct _205146a35_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_205d30e8d_Status> _field_stat = jule::Ptr<_205d30e8d_Status>();
	

	_205146a35_DirEntry(void) = default;

	inline bool operator==(_205146a35_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_205146a35_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_205146a35_DirEntry>>> static__207b17019_read(jule::Str);
inline jule::VoidExceptional static__207b1714b_create(jule::Str);
inline jule::VoidExceptional static__207b1727d_remove(jule::Str);
struct _20514876d_Directory {
	

	_20514876d_Directory(void) = default;

	inline bool operator==(_20514876d_Directory _other) { return true; }

	inline bool operator!=(_20514876d_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_205d30ac5_File> static__20512d214_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_205d30ac5_File>> static__20512d9b7_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20512e545_read(jule::Str);
inline jule::VoidExceptional static__205130029_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _20513158b_seek(_205d30ac5_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _2051320d6_close(_205d30ac5_File*);
inline jule::Exceptional<jule::Ptr<_205d30ac5_File>> static__205d8906d_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__205d8a316_remove(jule::Str);
inline jule::Exceptional<jule::I64> _205db4a7c_write(_205d30ac5_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _205dbcc94_read(_205d30ac5_File*, jule::Slice<jule::U8>);
struct _205d30ac5_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_205d30ac5_File(void) = default;

	inline bool operator==(_205d30ac5_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_205d30ac5_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _205134160_is_dir(_205d30e8d_Status*);
inline jule::Bool _20513542a_is_reg(_205d30e8d_Status*);
inline jule::Exceptional<jule::Ptr<_205d30e8d_Status>> static__207b1758b_of(jule::Str);
struct _205d30e8d_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();
	

	_205d30e8d_Status(void) = default;

	inline bool operator==(_205d30e8d_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_205d30e8d_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_207bc0ba5_Cmd> static__207bc10d4_new(jule::Str);
inline jule::Exceptional<jule::I64> _207bc1348_spawn(_207bc0ba5_Cmd*);
inline jule::Exceptional<jule::I64> _207bd0e7e___spawn(_207bc0ba5_Cmd*);
struct _207bc0ba5_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_207bc0ba5_Cmd(void) = default;

	inline bool operator==(_207bc0ba5_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_207bc0ba5_Cmd _other) { return !this->operator==(_other); }


};
struct _207b80eb7_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_207b80eb7_Log(void) = default;

	inline bool operator==(_207b80eb7_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_207b80eb7_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1db70655e_prec(_1db7061a7_Token*);
struct _1db7061a7_Token {
	jule::Ptr<_1db70b542_File> _field_file = jule::Ptr<_1db70b542_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;
	

	_1db7061a7_Token(void) = default;

	inline bool operator==(_1db7061a7_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1db7061a7_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1db70b94e_is_ok(_1db70b542_File*);
inline void _1db70bbc4_fill(_1db70b542_File*, jule::Slice<jule::U8>);
inline jule::Str _1db70be38_dir(_1db70b542_File*);
inline jule::Str _1db70c19c_name(_1db70b542_File*);
inline jule::Uintptr _1db70c411_addr(_1db70b542_File*);
inline jule::Str _1db70c71e_get_row(_1db70b542_File*, jule::I64);
struct _1db70b542_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_tokens = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	

	_1db70b542_File(void) = default;

	inline bool operator==(_1db70b542_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1db70b542_File _other) { return !this->operator==(_other); }


};
struct _1db70d599_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1db70d599_KindPair(void) = default;

	inline bool operator==(_1db70d599_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1db70d599_KindPair _other) { return !this->operator==(_other); }


};
inline void _1db71476a_push_err(_1db7141c6_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1db714a89_push_err_tok(_1db7141c6_Lex*, jule::Ptr<_1db7061a7_Token>&, jule::Str);
inline void _1db714c65_lex(_1db7141c6_Lex*);
inline jule::Str _1db715073_id(_1db7141c6_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1db7152d7_resume(_1db7141c6_Lex*);
inline void _1db71555c_lex_line_comment(_1db7141c6_Lex*, jule::Ptr<_1db7061a7_Token>&);
inline void _1db7157d2_lex_range_comment(_1db7141c6_Lex*, jule::Ptr<_1db7061a7_Token>&);
inline jule::Str _1db715ae0_num(_1db7141c6_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1db715ded_escape_seq(_1db7141c6_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1db7162a5_get_rune(_1db7141c6_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1db7165b3_lex_rune(_1db7141c6_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1db716827_lex_str(_1db7141c6_Lex*);
inline jule::Bool _1db716a8b_is_first_token_of_line(_1db7141c6_Lex*);
inline void _1db716c67_new_line(_1db7141c6_Lex*);
inline jule::Bool _1db717262_is_op(_1db7141c6_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1db717619_lex_basic_ops(_1db7141c6_Lex*, jule::Slice<jule::U8>, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1db7179c1_lex_id(_1db7141c6_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1db717d78_lex_num(_1db7141c6_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Ptr<_1db7061a7_Token> _1db7180dc_token(_1db7141c6_Lex*);
struct _1db7141c6_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_tokens = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Ptr<_1db70b542_File> _field_file = jule::Ptr<_1db70b542_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_207b80eb7_Log> _field_errors = jule::Slice<_207b80eb7_Log>();
	

	_1db7141c6_Lex(void) = default;

	inline bool operator==(_1db7141c6_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1db7141c6_Lex _other) { return !this->operator==(_other); }


};
struct _1dcd355c6_Ast {
	jule::Ptr<_1db70b542_File> _field_file = jule::Ptr<_1db70b542_File>();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Slice<jule::Ptr<_1dcd828a9_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1dcd828a9_UseDecl>>();
	jule::Slice<_1dcd36275_Node> _field_nodes = jule::Slice<_1dcd36275_Node>();
	

	_1dcd355c6_Ast(void) = default;

	inline bool operator==(_1dcd355c6_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1dcd355c6_Ast _other) { return !this->operator==(_other); }


};
struct _1dcd36275_Node {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_data = jule::Any();
	

	_1dcd36275_Node(void) = default;

	inline bool operator==(_1dcd36275_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dcd36275_Node _other) { return !this->operator==(_other); }


};
struct _1dcd36671_Directive {
	jule::Ptr<_1db7061a7_Token> _field_tag = jule::Ptr<_1db7061a7_Token>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_args = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	

	_1dcd36671_Directive(void) = default;

	inline bool operator==(_1dcd36671_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1dcd36671_Directive _other) { return !this->operator==(_other); }


};
struct _1dcd69d69_TypeDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1dcd69d69_TypeDecl(void) = default;

	inline bool operator==(_1dcd69d69_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dcd69d69_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd6a793_is_prim(_1dcd6a430_IdentTypeDecl*);
struct _1dcd6a430_IdentTypeDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>();
	

	_1dcd6a430_IdentTypeDecl(void) = default;

	inline bool operator==(_1dcd6a430_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1dcd6a430_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6aa7e_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1dcd6a430_IdentTypeDecl>> _field_idents = jule::Slice<jule::Ptr<_1dcd6a430_IdentTypeDecl>>();
	

	_1dcd6aa7e_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1dcd6aa7e_SubIdentTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1dcd6aa7e_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6ae36_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_idents = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd6ae36_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1dcd6ae36_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dcd6ae36_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6b222_SptrTypeDecl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_elem = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd6b222_SptrTypeDecl(void) = default;

	inline bool operator==(_1dcd6b222_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1dcd6b222_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6b61d_SlcTypeDecl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_elem = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd6b61d_SlcTypeDecl(void) = default;

	inline bool operator==(_1dcd6b61d_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1dcd6b61d_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6b909_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>();
	

	_1dcd6b909_TupleTypeDecl(void) = default;

	inline bool operator==(_1dcd6b909_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1dcd6b909_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd6c047_is_unsafe(_1dcd6bbe5_PtrTypeDecl*);
struct _1dcd6bbe5_PtrTypeDecl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_elem = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd6bbe5_PtrTypeDecl(void) = default;

	inline bool operator==(_1dcd6bbe5_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1dcd6bbe5_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd6c751_auto_sized(_1dcd6c377_ArrTypeDecl*);
struct _1dcd6c377_ArrTypeDecl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_elem = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd6e38a_Expr> _field_size = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd6c377_ArrTypeDecl(void) = default;

	inline bool operator==(_1dcd6c377_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1dcd6c377_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6cac5_MapTypeDecl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_key = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_val = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd6cac5_MapTypeDecl(void) = default;

	inline bool operator==(_1dcd6cac5_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1dcd6cac5_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6ce7c_RetTypeDecl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_idents = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	

	_1dcd6ce7c_RetTypeDecl(void) = default;

	inline bool operator==(_1dcd6ce7c_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1dcd6ce7c_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd6e38a_Expr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1dcd6e38a_Expr(void) = default;

	inline bool operator==(_1dcd6e38a_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dcd6e38a_Expr _other) { return !this->operator==(_other); }


};
struct _1dcd6e676_RangeExpr {
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd6e676_RangeExpr(void) = default;

	inline bool operator==(_1dcd6e676_RangeExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd6e676_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1dcd6ec2b_UseExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd6ec2b_UseExpr(void) = default;

	inline bool operator==(_1dcd6ec2b_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd6ec2b_UseExpr _other) { return !this->operator==(_other); }


};
struct _1dcd70017_TupleExpr {
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_expr = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	

	_1dcd70017_TupleExpr(void) = default;

	inline bool operator==(_1dcd70017_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd70017_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd70721_is_nil(_1dcd703be_LitExpr*);
struct _1dcd703be_LitExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_value = jule::Str();
	

	_1dcd703be_LitExpr(void) = default;

	inline bool operator==(_1dcd703be_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1dcd703be_LitExpr _other) { return !this->operator==(_other); }


};
struct _1dcd70ac8_UnsafeExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd70ac8_UnsafeExpr(void) = default;

	inline bool operator==(_1dcd70ac8_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd70ac8_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1dcd70e80_CoExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd70e80_CoExpr(void) = default;

	inline bool operator==(_1dcd70e80_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd70e80_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd71755_is_self(_1dcd71403_IdentExpr*);
struct _1dcd71403_IdentExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1dcd71403_IdentExpr(void) = default;

	inline bool operator==(_1dcd71403_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1dcd71403_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1dcd71b0c_UnaryExpr {
	jule::Ptr<_1db7061a7_Token> _field_op = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd71b0c_UnaryExpr(void) = default;

	inline bool operator==(_1dcd71b0c_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd71b0c_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1dcd71eb4_VariadicExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd71eb4_VariadicExpr(void) = default;

	inline bool operator==(_1dcd71eb4_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd71eb4_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1dcd7236b_CastExpr {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd7236b_CastExpr(void) = default;

	inline bool operator==(_1dcd7236b_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd7236b_CastExpr _other) { return !this->operator==(_other); }


};
struct _1dcd72723_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_ns = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Ptr<_1db7061a7_Token> _field_ident = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd72723_NsSelectionExpr(void) = default;

	inline bool operator==(_1dcd72723_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dcd72723_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1dcd72b96_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1db7061a7_Token> _field_ident = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd72b96_SubIdentExpr(void) = default;

	inline bool operator==(_1dcd72b96_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dcd72b96_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1dcd73119_BinopExpr {
	jule::Ptr<_1dcd6e38a_Expr> _field_left = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd6e38a_Expr> _field_right = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1db7061a7_Token> _field_op = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd73119_BinopExpr(void) = default;

	inline bool operator==(_1dcd73119_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1dcd73119_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd739bb_unhandled(_1dcd73658_FnCallExpr*);
inline jule::Bool _1dcd73c30_ignored(_1dcd73658_FnCallExpr*);
struct _1dcd73658_FnCallExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_args = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_exception = jule::Ptr<_1dcd7a187_ScopeTree>();
	

	_1dcd73658_FnCallExpr(void) = default;

	inline bool operator==(_1dcd73658_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1dcd73658_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd74439_is_targeted(_1dcd740d7_FieldExprPair*);
struct _1dcd740d7_FieldExprPair {
	jule::Ptr<_1db7061a7_Token> _field_field = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd740d7_FieldExprPair(void) = default;

	inline bool operator==(_1dcd740d7_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd740d7_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1dcd74835_StructLit {
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	

	_1dcd74835_StructLit(void) = default;

	inline bool operator==(_1dcd74835_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dcd74835_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd75429_is_empty(_1dcd74ca8_BraceLit*);
struct _1dcd74ca8_BraceLit {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	

	_1dcd74ca8_BraceLit(void) = default;

	inline bool operator==(_1dcd74ca8_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dcd74ca8_BraceLit _other) { return !this->operator==(_other); }


};
struct _1dcd757c0_KeyValPair {
	jule::Ptr<_1dcd6e38a_Expr> _field_key = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd6e38a_Expr> _field_val = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1db7061a7_Token> _field_colon = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd757c0_KeyValPair(void) = default;

	inline bool operator==(_1dcd757c0_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1dcd757c0_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd76095_is_empty(_1dcd75c43_SliceExpr*);
struct _1dcd75c43_SliceExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	

	_1dcd75c43_SliceExpr(void) = default;

	inline bool operator==(_1dcd75c43_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dcd75c43_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1dcd765d4_IndexingExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd6e38a_Expr> _field_index = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd765d4_IndexingExpr(void) = default;

	inline bool operator==(_1dcd765d4_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1dcd765d4_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1dcd76bde_SlicingExpr {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd6e38a_Expr> _field_start = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd6e38a_Expr> _field_to = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd76bde_SlicingExpr(void) = default;

	inline bool operator==(_1dcd76bde_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1dcd76bde_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1dcd76eca_Constraint {
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _field_mask = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>();
	

	_1dcd76eca_Constraint(void) = default;

	inline bool operator==(_1dcd76eca_Constraint _other) {
		return 
			this->_field_mask == _other._field_mask;
	}

	inline bool operator!=(_1dcd76eca_Constraint _other) { return !this->operator==(_other); }


};
struct _1dcd7744d_GenericDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd76eca_Constraint> _field_constraint = jule::Ptr<_1dcd76eca_Constraint>();
	

	_1dcd7744d_GenericDecl(void) = default;

	inline bool operator==(_1dcd7744d_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_constraint == _other._field_constraint;
	}

	inline bool operator!=(_1dcd7744d_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1dcd77805_LabelSt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1dcd77805_LabelSt(void) = default;

	inline bool operator==(_1dcd77805_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dcd77805_LabelSt _other) { return !this->operator==(_other); }


};
struct _1dcd77bac_GotoSt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_label = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd77bac_GotoSt(void) = default;

	inline bool operator==(_1dcd77bac_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1dcd77bac_GotoSt _other) { return !this->operator==(_other); }


};
struct _1dcd77e98_FallSt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd77e98_FallSt(void) = default;

	inline bool operator==(_1dcd77e98_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1dcd77e98_FallSt _other) { return !this->operator==(_other); }


};
struct _1dcd785a3_AssignLeft {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd785a3_AssignLeft(void) = default;

	inline bool operator==(_1dcd785a3_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd785a3_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1dcd78ae2_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1db7061a7_Token> _field_setter = jule::Ptr<_1db7061a7_Token>();
	jule::Slice<jule::Ptr<_1dcd785a3_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1dcd785a3_AssignLeft>>();
	jule::Ptr<_1dcd6e38a_Expr> _field_right = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd78ae2_AssignSt(void) = default;

	inline bool operator==(_1dcd78ae2_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1dcd78ae2_AssignSt _other) { return !this->operator==(_other); }


};
struct _1dcd79a7c_Stmt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_data = jule::Any();
	

	_1dcd79a7c_Stmt(void) = default;

	inline bool operator==(_1dcd79a7c_Stmt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dcd79a7c_Stmt _other) { return !this->operator==(_other); }


};
struct _1dcd7a187_ScopeTree {
	jule::Ptr<_1dcd7a187_ScopeTree> _field_parent = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1dcd79a7c_Stmt> _field_stmts = jule::Slice<_1dcd79a7c_Stmt>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd7a187_ScopeTree(void) = default;

	inline bool operator==(_1dcd7a187_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1dcd7a187_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd7abc1_is_self(_1dcd7a85d_ParamDecl*);
inline jule::Bool _1dcd7ae35_is_ref(_1dcd7a85d_ParamDecl*);
struct _1dcd7a85d_ParamDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1dcd7a85d_ParamDecl(void) = default;

	inline bool operator==(_1dcd7a85d_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dcd7a85d_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd7bed0_is_anon(_1dcd7bb7d_FnDecl*);
struct _1dcd7bb7d_FnDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>();
	jule::Ptr<_1dcd6ce7c_RetTypeDecl> _field_result = jule::Ptr<_1dcd6ce7c_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>>();
	

	_1dcd7bb7d_FnDecl(void) = default;

	inline bool operator==(_1dcd7bb7d_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1dcd7bb7d_FnDecl _other) { return !this->operator==(_other); }


};
struct _1dcd7cb5c_VarDecl {
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd7cb5c_VarDecl(void) = default;

	inline bool operator==(_1dcd7cb5c_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd7cb5c_VarDecl _other) { return !this->operator==(_other); }


};
struct _1dcd7d014_RetSt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd7d014_RetSt(void) = default;

	inline bool operator==(_1dcd7d014_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd7d014_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd7d9c6_is_inf(_1dcd7d674_Iter*);
struct _1dcd7d674_Iter {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	

	_1dcd7d674_Iter(void) = default;

	inline bool operator==(_1dcd7d674_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dcd7d674_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd7e29b_is_while_next(_1dcd7de49_WhileKind*);
struct _1dcd7de49_WhileKind {
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1db7061a7_Token> _field_next_token = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd7de49_WhileKind(void) = default;

	inline bool operator==(_1dcd7de49_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1dcd7de49_WhileKind _other) { return !this->operator==(_other); }


};
struct _1dcd7e7da_RangeKind {
	jule::Ptr<_1db7061a7_Token> _field_in_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd7cb5c_VarDecl> _field_key_a = jule::Ptr<_1dcd7cb5c_VarDecl>();
	jule::Ptr<_1dcd7cb5c_VarDecl> _field_key_b = jule::Ptr<_1dcd7cb5c_VarDecl>();
	

	_1dcd7e7da_RangeKind(void) = default;

	inline bool operator==(_1dcd7e7da_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1dcd7e7da_RangeKind _other) { return !this->operator==(_other); }


};
struct _1dcd7eb92_BreakSt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_label = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd7eb92_BreakSt(void) = default;

	inline bool operator==(_1dcd7eb92_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1dcd7eb92_BreakSt _other) { return !this->operator==(_other); }


};
struct _1dcd80049_ContSt {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_label = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd80049_ContSt(void) = default;

	inline bool operator==(_1dcd80049_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1dcd80049_ContSt _other) { return !this->operator==(_other); }


};
struct _1dcd804bc_If {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	

	_1dcd804bc_If(void) = default;

	inline bool operator==(_1dcd804bc_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dcd804bc_If _other) { return !this->operator==(_other); }


};
struct _1dcd80874_Else {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	

	_1dcd80874_Else(void) = default;

	inline bool operator==(_1dcd80874_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dcd80874_Else _other) { return !this->operator==(_other); }


};
struct _1dcd80ce7_Conditional {
	jule::Ptr<_1dcd804bc_If> _field_head = jule::Ptr<_1dcd804bc_If>();
	jule::Slice<jule::Ptr<_1dcd804bc_If>> _field_tail = jule::Slice<jule::Ptr<_1dcd804bc_If>>();
	jule::Ptr<_1dcd80874_Else> _field_default = jule::Ptr<_1dcd80874_Else>();
	

	_1dcd80ce7_Conditional(void) = default;

	inline bool operator==(_1dcd80ce7_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dcd80ce7_Conditional _other) { return !this->operator==(_other); }


};
struct _1dcd814bd_TypeAliasDecl {
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd814bd_TypeAliasDecl(void) = default;

	inline bool operator==(_1dcd814bd_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dcd814bd_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1dcd81941_Case {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	

	_1dcd81941_Case(void) = default;

	inline bool operator==(_1dcd81941_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dcd81941_Case _other) { return !this->operator==(_other); }


};
struct _1dcd82117_MatchCase {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Slice<jule::Ptr<_1dcd81941_Case>> _field_cases = jule::Slice<jule::Ptr<_1dcd81941_Case>>();
	jule::Ptr<_1dcd80874_Else> _field_default = jule::Ptr<_1dcd80874_Else>();
	

	_1dcd82117_MatchCase(void) = default;

	inline bool operator==(_1dcd82117_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dcd82117_MatchCase _other) { return !this->operator==(_other); }


};
struct _1dcd828a9_UseDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_selected = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1dcd828a9_UseDecl(void) = default;

	inline bool operator==(_1dcd828a9_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1dcd828a9_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd8317e_auto_expr(_1dcd82d2c_EnumItemDecl*);
struct _1dcd82d2c_EnumItemDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd82d2c_EnumItemDecl(void) = default;

	inline bool operator==(_1dcd82d2c_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dcd82d2c_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd83dd8_default_typed(_1dcd83855_EnumDecl*);
struct _1dcd83855_EnumDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd83855_EnumDecl(void) = default;

	inline bool operator==(_1dcd83855_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1dcd83855_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1dcd8435b_TypeEnumItemDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1dcd8435b_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1dcd8435b_TypeEnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dcd8435b_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1dcd84559_TypeEnumDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	

	_1dcd84559_TypeEnumDecl(void) = default;

	inline bool operator==(_1dcd84559_TypeEnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1dcd84559_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1dcd84aa9_FieldDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_kind = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd6e38a_Expr> _field_default = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd84aa9_FieldDecl(void) = default;

	inline bool operator==(_1dcd84aa9_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dcd84aa9_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1dcd85417_StructDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>();
	

	_1dcd85417_StructDecl(void) = default;

	inline bool operator==(_1dcd85417_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1dcd85417_StructDecl _other) { return !this->operator==(_other); }


};
struct _1dcd85a22_TraitDecl {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>>();
	

	_1dcd85a22_TraitDecl(void) = default;

	inline bool operator==(_1dcd85a22_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1dcd85a22_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dcd86490_is_trait_impl(_1dcd8612c_Impl*);
inline jule::Bool _1dcd86704_is_struct_impl(_1dcd8612c_Impl*);
struct _1dcd8612c_Impl {
	jule::Ptr<_1db7061a7_Token> _field_end = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_base = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_dest = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>>();
	jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>>();
	

	_1dcd8612c_Impl(void) = default;

	inline bool operator==(_1dcd8612c_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1dcd8612c_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dcdbd1a8_Const> static__1dce2808c_new_i64(jule::I64);
inline jule::Ptr<_1dcdbd1a8_Const> static__1dce281be_new_u64(jule::U64);
inline jule::Ptr<_1dcdbd1a8_Const> static__1dce28356_new_bool(jule::Bool);
inline jule::Ptr<_1dcdbd1a8_Const> static__1dce285ed_new_str(jule::Str);
inline jule::Ptr<_1dcdbd1a8_Const> static__1dce28895_new_f64(jule::F64);
inline jule::Ptr<_1dcdbd1a8_Const> static__1dce28a93_new_nil(void);
inline jule::I64 _1dce2918c_read_i64(_1dcdbd1a8_Const*);
inline jule::U64 _1dce29401_read_u64(_1dcdbd1a8_Const*);
inline jule::Bool _1dce29665_read_bool(_1dcdbd1a8_Const*);
inline jule::Str _1dce298c9_read_str(_1dcdbd1a8_Const*);
inline jule::F64 _1dce29b3d_read_f64(_1dcdbd1a8_Const*);
inline jule::I64 _1dce29da2_as_i64(_1dcdbd1a8_Const*);
inline jule::U64 _1dce2a116_as_u64(_1dcdbd1a8_Const*);
inline jule::F64 _1dce2a37a_as_f64(_1dcdbd1a8_Const*);
inline void _1dce2a600_set_i64(_1dcdbd1a8_Const*, jule::I64);
inline void _1dce2a875_set_u64(_1dcdbd1a8_Const*, jule::U64);
inline void _1dce2aaea_set_bool(_1dcdbd1a8_Const*, jule::Bool);
inline void _1dce2ad70_set_str(_1dcdbd1a8_Const*, jule::Str);
inline void _1dce2b0e5_set_f64(_1dcdbd1a8_Const*, jule::F64);
inline void _1dce2b2c1_set_nil(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2b535_is_i64(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2b799_is_u64(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2ba0d_is_bool(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2bc72_is_str(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2bed6_is_f64(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2c24a_is_nil(_1dcdbd1a8_Const*);
inline jule::Bool _1dce2c558_are_same_types(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2c866_and(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2cb74_or(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2ce82_eq(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2d290_lt(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2d59d_lt_eq(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2d8ab_gt(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2dbb9_gt_eq(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2dec7_add(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2e2d5_sub(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2e5e3_mul(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2e901_div(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce2ec0e_mod(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce3001c_bitwise_and(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce3032a_bitwise_or(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce30638_xor(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce30946_lshift(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
inline jule::Bool _1dce30c54_rshift(_1dcdbd1a8_Const*, _1dcdbd1a8_Const);
struct _1dcdbd1a8_Const {
	jule::Any _field_data = jule::Any();
	

	_1dcdbd1a8_Const(void) = default;

	inline jule::Bool operator==(_1dcdbd1a8_Const _other) { return _1dce2ce82_eq(this, _other); }

	inline bool operator!=(_1dcdbd1a8_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1dcdbd1a8_Const _other) { return _1dce2d8ab_gt(this, _other); }

	inline jule::Bool operator>=(_1dcdbd1a8_Const _other) { return _1dce2dbb9_gt_eq(this, _other); }

	inline jule::Bool operator<(_1dcdbd1a8_Const _other) { return _1dce2d290_lt(this, _other); }

	inline jule::Bool operator<=(_1dcdbd1a8_Const _other) { return _1dce2d59d_lt_eq(this, _other); }


};
struct _1c2c24e09_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1c2c24e09_FloatInfo(void) = default;

	inline bool operator==(_1c2c24e09_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1c2c24e09_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1c2c25ab9_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1c2c25ab9_DecimalSlice(void) = default;

	inline bool operator==(_1c2c25ab9_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1c2c25ab9_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1c2c373d3_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1c2c373d3_LeftCheat(void) = default;

	inline bool operator==(_1c2c373d3_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1c2c373d3_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2c2ecb0_set(_1c2c37dea_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1c2c300bd_float_bits(_1c2c37dea_Decimal*, _1c2c24e09_FloatInfo&);
inline void _1c2c382c4_assign(_1c2c37dea_Decimal*, jule::U64);
inline void _1c2c38549_shift(_1c2c37dea_Decimal*, jule::I64);
inline void _1c2c387be_round_down(_1c2c37dea_Decimal*, jule::I64);
inline void _1c2c38a44_round_up(_1c2c37dea_Decimal*, jule::I64);
inline void _1c2c38cb9_round(_1c2c37dea_Decimal*, jule::I64);
inline jule::U64 _1c2c3902d_rounded_integer(_1c2c37dea_Decimal*);
struct _1c2c37dea_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1c2c37dea_Decimal(void) = default;

	inline bool operator==(_1c2c37dea_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1c2c37dea_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dcd62c0d_FieldIns> _1dcd3b8a7_instance(jule::Ptr<_1dcd4ca61_Field>);
struct _1dcd4ca61_Field {
	jule::Ptr<_1dcd5a596_Struct> _field_owner = jule::Ptr<_1dcd5a596_Struct>();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	jule::Ptr<_1dcd6e38a_Expr> _field_default = jule::Ptr<_1dcd6e38a_Expr>();
	

	_1dcd4ca61_Field(void) = default;

	inline bool operator==(_1dcd4ca61_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dcd4ca61_Field _other) { return !this->operator==(_other); }


};
struct _1dcd5bec1_Operators {
	jule::Ptr<_1dce3b644_FnIns> _field_eq = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_gt = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_gt_eq = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_lt = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_lt_eq = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_shl = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_shr = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_add = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_sub = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_div = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_mul = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_mod = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_and = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_or = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_xor = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_neg = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_pos = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_not = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_add_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_sub_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_div_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_mul_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_mod_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_shl_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_shr_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_or_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_and_assign = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3b644_FnIns> _field_bit_xor_assign = jule::Ptr<_1dce3b644_FnIns>();
	

	_1dcd5bec1_Operators(void) = default;

	inline bool operator==(_1dcd5bec1_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1dcd5bec1_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dcd868e1_StructIns> _1dcd4299b_instance(jule::Ptr<_1dcd5a596_Struct>);
inline jule::Ptr<_1dcd868e1_StructIns> _1dcd46c14_append_instance(_1dcd5a596_Struct*, jule::Ptr<_1dcd868e1_StructIns>&);
inline jule::Ptr<_1dce38993_Fn> _1dcd499b4_find_method(_1dcd5a596_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d266ae_Var> _1dcd4a9c6_find_static(_1dcd5a596_Struct*, jule::Str);
inline jule::Ptr<_1dcd4ca61_Field> _1dcd49e15_find_field(_1dcd5a596_Struct*, jule::Str);
inline jule::Bool _1dcd4c1e2_is_implements(_1dcd5a596_Struct*, jule::Ptr<_1c2c3d54e_Trait>);
inline jule::Bool _1dcd4b5ed_is_derives(_1dcd5a596_Struct*, jule::Str);
inline jule::Bool _1dcd5039e_is_uses(_1dcd5a596_Struct*, jule::Ptr<_1dcd5a596_Struct>);
inline jule::Bool _1dcd50a64_has_ref_accessible(_1dcd5a596_Struct*);
struct _1dcd5a596_Struct {
	jule::Ptr<_1c2d099a0_Sema> _field_sema = jule::Ptr<_1c2d099a0_Sema>();
	jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _field_depends = jule::Slice<jule::Ptr<_1dcd5a596_Struct>>();
	jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _field_uses = jule::Slice<jule::Ptr<_1dcd5a596_Struct>>();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dcd4ca61_Field>> _field_fields = jule::Slice<jule::Ptr<_1dcd4ca61_Field>>();
	jule::Slice<jule::Ptr<_1dce38993_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dce38993_Fn>>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_statics = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c2c3d54e_Trait>> _field_implements = jule::Slice<jule::Ptr<_1c2c3d54e_Trait>>();
	jule::Slice<jule::Ptr<_1dcd868e1_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1dcd868e1_StructIns>>();
	

	_1dcd5a596_Struct(void) = default;

	inline bool operator==(_1dcd5a596_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1dcd5a596_Struct _other) { return !this->operator==(_other); }


};
struct _1dcd62c0d_FieldIns {
	jule::Ptr<_1dcd4ca61_Field> _field_decl = jule::Ptr<_1dcd4ca61_Field>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2d6d9e2_Data> _field_default = jule::Ptr<_1c2d6d9e2_Data>();
	

	_1dcd62c0d_FieldIns(void) = default;

	inline bool operator==(_1dcd62c0d_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dcd62c0d_FieldIns _other) { return !this->operator==(_other); }


};
struct _1dce31529_OperandExprModel {
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1dce31529_OperandExprModel(void) = default;

	inline bool operator==(_1dce31529_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1dce31529_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1dce31716_BinopExprModel {
	jule::Ptr<_1dce31529_OperandExprModel> _field_left = jule::Ptr<_1dce31529_OperandExprModel>();
	jule::Ptr<_1dce31529_OperandExprModel> _field_right = jule::Ptr<_1dce31529_OperandExprModel>();
	jule::Ptr<_1db7061a7_Token> _field_op = jule::Ptr<_1db7061a7_Token>();
	

	_1dce31716_BinopExprModel(void) = default;

	inline bool operator==(_1dce31716_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1dce31716_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1dce31903_UnaryExprModel {
	jule::Ptr<_1c2d6d9e2_Data> _field_expr = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1db7061a7_Token> _field_op = jule::Ptr<_1db7061a7_Token>();
	

	_1dce31903_UnaryExprModel(void) = default;

	inline bool operator==(_1dce31903_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1dce31903_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1dce31ae0_StructArgExprModel {
	jule::Ptr<_1dcd62c0d_FieldIns> _field_field = jule::Ptr<_1dcd62c0d_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1dce31ae0_StructArgExprModel(void) = default;

	inline bool operator==(_1dce31ae0_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce31ae0_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1dce31ccc_StructLitExprModel {
	jule::Ptr<_1dcd868e1_StructIns> _field_strct = jule::Ptr<_1dcd868e1_StructIns>();
	jule::Slice<jule::Ptr<_1dce31ae0_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1dce31ae0_StructArgExprModel>>();
	

	_1dce31ccc_StructLitExprModel(void) = default;

	inline bool operator==(_1dce31ccc_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1dce31ccc_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1dce31eb9_AllocStructLitExprModel {
	jule::Ptr<_1dce31ccc_StructLitExprModel> _field_lit = jule::Ptr<_1dce31ccc_StructLitExprModel>();
	

	_1dce31eb9_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1dce31eb9_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1dce31eb9_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1dce321a6_CastingExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_expr_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1dce321a6_CastingExprModel(void) = default;

	inline bool operator==(_1dce321a6_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1dce321a6_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1dce32393_FnCallExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dce3b644_FnIns> _field_func = jule::Ptr<_1dce3b644_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1c2cd2d1e_Scope> _field_except = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1dce32393_FnCallExprModel(void) = default;

	inline bool operator==(_1dce32393_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1dce32393_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce32580_SliceExprModel {
	jule::Ptr<_1c2d9e825_TypeKind> _field_elem_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1dce32580_SliceExprModel(void) = default;

	inline bool operator==(_1dce32580_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1dce32580_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1dce3276c_IndexingExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1c2d6d9e2_Data> _field_expr = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1c2d6d9e2_Data> _field_index = jule::Ptr<_1c2d6d9e2_Data>();
	

	_1dce3276c_IndexingExprModel(void) = default;

	inline bool operator==(_1dce3276c_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1dce3276c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1dce32959_AnonFnExprModel {
	jule::Ptr<_1dce3b644_FnIns> _field_func = jule::Ptr<_1dce3b644_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1dce32959_AnonFnExprModel(void) = default;

	inline bool operator==(_1dce32959_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1dce32959_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1dce32b46_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1dce32b46_KeyValPairExprModel(void) = default;

	inline bool operator==(_1dce32b46_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1dce32b46_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1dce32d33_MapExprModel {
	jule::Ptr<_1c2d9e825_TypeKind> _field_key_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_val_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Slice<jule::Ptr<_1dce32b46_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1dce32b46_KeyValPairExprModel>>();
	

	_1dce32d33_MapExprModel(void) = default;

	inline bool operator==(_1dce32d33_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1dce32d33_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1dce33020_SlicingExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1dce33020_SlicingExprModel(void) = default;

	inline bool operator==(_1dce33020_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1dce33020_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1dce3320c_TraitSubIdentExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1dce38993_Fn> _field_method = jule::Ptr<_1dce38993_Fn>();
	jule::Ptr<_1c2c3d54e_Trait> _field_trt = jule::Ptr<_1c2c3d54e_Trait>();
	

	_1dce3320c_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1dce3320c_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1dce3320c_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dce3362a_StructSubIdentExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1c2d6d9e2_Data> _field_expr = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_expr_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1dce3b644_FnIns> _field_method = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dcd62c0d_FieldIns> _field_field = jule::Ptr<_1dcd62c0d_FieldIns>();
	

	_1dce3362a_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1dce3362a_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1dce3362a_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dce33817_StructStaticIdentExprModel {
	jule::Ptr<_1dcd868e1_StructIns> _field_structure = jule::Ptr<_1dcd868e1_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1dce3b644_FnIns> _field_method = jule::Ptr<_1dce3b644_FnIns>();
	

	_1dce33817_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1dce33817_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1dce33817_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dce33a04_ArrayExprModel {
	jule::Ptr<_1c2daa688_Arr> _field_kind = jule::Ptr<_1c2daa688_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1dce33a04_ArrayExprModel(void) = default;

	inline bool operator==(_1dce33a04_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1dce33a04_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1dce33be1_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1dce33be1_CommonIdentExprModel(void) = default;

	inline bool operator==(_1dce33be1_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dce33be1_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dce33dcd_CommonSubIdentExprModel {
	jule::Ptr<_1c2d9e825_TypeKind> _field_expr_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1dce33dcd_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1dce33dcd_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dce33dcd_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dce340ba_TupleExprModel {
	jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _field_datas = jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>();
	

	_1dce340ba_TupleExprModel(void) = default;

	inline bool operator==(_1dce340ba_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1dce340ba_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1dce342a7_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1dce342a7_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1dce342a7_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1dce342a7_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce34494_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1dce34494_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1dce34494_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1dce34494_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce34681_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1dce34681_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1dce34681_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce34681_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce3486d_BuiltinNewCallExprModel {
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1dce3486d_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1dce3486d_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1dce3486d_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce34a5a_BuiltinPanicCallExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1dce34a5a_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1dce34a5a_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce34a5a_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce34c47_BuiltinAssertCallExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1dce34c47_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1dce34c47_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1dce34c47_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce34e34_BuiltinMakeCallExprModel {
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1dce34e34_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1dce34e34_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1dce34e34_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce35121_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1dce35121_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1dce35121_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1dce35121_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce3530d_BuiltinCopyCallExprModel {
	jule::Ptr<_1c2d6d9e2_Data> _field_dest = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1c2d6d9e2_Data> _field_src = jule::Ptr<_1c2d6d9e2_Data>();
	

	_1dce3530d_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1dce3530d_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1dce3530d_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce354ea_BuiltinErrorCallExprModel {
	jule::Ptr<_1dce3b644_FnIns> _field_func = jule::Ptr<_1dce3b644_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1dce354ea_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1dce354ea_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1dce354ea_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dce333e9_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1dce333e9_SizeofExprModel(void) = default;

	inline bool operator==(_1dce333e9_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce333e9_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1dce35b5a_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1dce35b5a_AlignofExprModel(void) = default;

	inline bool operator==(_1dce35b5a_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce35b5a_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1dce35d47_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1dce35d47_RuneExprModel(void) = default;

	inline bool operator==(_1dce35d47_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1dce35d47_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1dce36034_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1dce36034_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1dce36034_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce36034_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1dce36221_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1dce36221_BackendEmitExprModel(void) = default;

	inline bool operator==(_1dce36221_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dce36221_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1dce3640d_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1dce3640d_FreeExprModel(void) = default;

	inline bool operator==(_1dce3640d_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dce3640d_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1dce36991_RetType {
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_idents = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	

	_1dce36991_RetType(void) = default;

	inline bool operator==(_1dce36991_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1dce36991_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dce3a775_ParamIns> _1dce3751e_instance(jule::Ptr<_1dce37156_Param>);
inline jule::Bool _1dce37783_is_self(_1dce37156_Param*);
inline jule::Bool _1dce379e7_is_ref(_1dce37156_Param*);
struct _1dce37156_Param {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1dce37156_Param(void) = default;

	inline bool operator==(_1dce37156_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dce37156_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dce38e05_is_void(_1dce38993_Fn*);
inline jule::Bool _1dce39169_is_method(_1dce38993_Fn*);
inline jule::Bool _1dce393cd_is_entry_point(_1dce38993_Fn*);
inline jule::Bool _1dce39642_is_init(_1dce38993_Fn*);
inline jule::Bool _1dce398a6_is_anon(_1dce38993_Fn*);
inline jule::Bool _1dce39b1a_any_var(_1dce38993_Fn*);
inline jule::Ptr<_1dce3b644_FnIns> _1dce39d7e_instance_force(jule::Ptr<_1dce38993_Fn>);
inline jule::Ptr<_1dce3b644_FnIns> _1dce3a0e3_instance(jule::Ptr<_1dce38993_Fn>);
inline jule::Ptr<_1dce3b644_FnIns> _1dce3a3bd_append_instance(_1dce38993_Fn*, jule::Ptr<_1dce3b644_FnIns>&);
struct _1dce38993_Fn {
	jule::Ptr<_1c2d099a0_Sema> _field_sema = jule::Ptr<_1c2d099a0_Sema>();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>();
	jule::Ptr<_1dce36991_RetType> _field_result = jule::Ptr<_1dce36991_RetType>();
	jule::Slice<jule::Ptr<_1dce37156_Param>> _field_params = jule::Slice<jule::Ptr<_1dce37156_Param>>();
	jule::Ptr<_1dcd5a596_Struct> _field_owner = jule::Ptr<_1dcd5a596_Struct>();
	jule::Slice<jule::Ptr<_1dce3b644_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1dce3b644_FnIns>>();
	

	_1dce38993_Fn(void) = default;

	inline bool operator==(_1dce38993_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1dce38993_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1dce3ab4e_to_str(_1dce3a775_ParamIns*);
struct _1dce3a775_ParamIns {
	jule::Ptr<_1dce37156_Param> _field_decl = jule::Ptr<_1dce37156_Param>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1dce3a775_ParamIns(void) = default;

	inline bool operator==(_1dce3a775_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dce3a775_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1dce3b974_to_str(_1dce3b644_FnIns*);
inline jule::Bool _1dce3bc82_equals(jule::Ptr<_1dce3b644_FnIns>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1dce3c1e4_equals_fn(jule::Ptr<_1dce3b644_FnIns>, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Bool _1dce3c502_equals_trait(jule::Ptr<_1dce3b644_FnIns>, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _1dce3c766_types(_1dce3b644_FnIns*);
inline jule::Bool _1dce3c9ca_is_builtin(_1dce3b644_FnIns*);
inline jule::Bool _1dce3cc3e_is_anon(_1dce3b644_FnIns*);
inline jule::Bool _1dce3d04c_same(_1dce3b644_FnIns*, jule::Ptr<_1dce3b644_FnIns>);
inline jule::Str _1dce3d35a_get_kind_str(_1dce3b644_FnIns*, jule::Bool);
struct _1dce3b644_FnIns {
	jule::Ptr<_1dcd868e1_StructIns> _field_owner = jule::Ptr<_1dcd868e1_StructIns>();
	jule::Ptr<_1dce38993_Fn> _field_decl = jule::Ptr<_1dce38993_Fn>();
	jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>>();
	jule::Slice<jule::Ptr<_1dce3a775_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_result = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Ptr<_1dce3e548_ReferenceStack> _field_refers = jule::Ptr<_1dce3e548_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1dce3b644_FnIns(void) = default;

	inline bool operator==(_1dce3b644_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1dce3b644_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dce3e548_ReferenceStack> static__1dce3e834_new(void);
inline jule::I64 _1dce3ebb9_len(_1dce3e548_ReferenceStack*);
inline jule::Any _1dce3eec7_at(_1dce3e548_ReferenceStack*, jule::I64);
inline void _1dce4024c_push(_1dce3e548_ReferenceStack*, jule::Any);
inline jule::Bool _1ab3a557e_exist(_1dce3e548_ReferenceStack*, jule::Ptr<_1dce3b644_FnIns>);
inline jule::Bool _1ab3b9d79_exist(_1dce3e548_ReferenceStack*, jule::Ptr<_1c2d266ae_Var>);
inline jule::Bool _1ab45e836_exist(_1dce3e548_ReferenceStack*, jule::Ptr<_1dcd868e1_StructIns>);
inline jule::Bool _1ab6db376_exist(_1dce3e548_ReferenceStack*, jule::Ptr<_1c2c3d54e_Trait>);
struct _1dce3e548_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1dce3e548_ReferenceStack(void) = default;

	inline bool operator==(_1dce3e548_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1dce3e548_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1dce40912_Pass {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_text = jule::Str();
	

	_1dce40912_Pass(void) = default;

	inline bool operator==(_1dce40912_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1dce40912_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dce44dab_SymbolBuilder> _1dce45362_get_root(jule::Ptr<_1dce44dab_SymbolBuilder>);
inline void _1dce4572a_push_err(_1dce44dab_SymbolBuilder*, jule::Ptr<_1db7061a7_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1dce45ae3_push_err_text(_1dce44dab_SymbolBuilder*, jule::Ptr<_1db7061a7_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1dce45e12_push_suggestion(_1dce44dab_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dce462db_check_cpp_use_decl_path(_1dce44dab_SymbolBuilder*, jule::Ptr<_1dcd828a9_UseDecl>&, jule::Str);
inline jule::Ptr<_1c2d01854_ImportInfo> _1dce465e9_build_cpp_header_import(_1dce44dab_SymbolBuilder*, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Ptr<_1c2d01854_ImportInfo> _1dce46918_build_std_import(_1dce44dab_SymbolBuilder*, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Ptr<_1c2d01854_ImportInfo> _1dce46c26_build_ident_import(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Ptr<_1c2d01854_ImportInfo> _1dce47034_build_import(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Bool _1dce47364_check_duplicate_use_decl(_1dce44dab_SymbolBuilder*, jule::Ptr<_1c2d01854_ImportInfo>&);
inline void _1dce47694_impl_import_selections(_1dce44dab_SymbolBuilder*, jule::Ptr<_1c2d01854_ImportInfo>&, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Str _1dce479a2_get_as_link_path(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Str);
inline void _1dce47d6a_push_cycle_error(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1dce44dab_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1dce48233_push_cross_cycle_error(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1dce44dab_SymbolBuilder>&, jule::Ptr<_1c2d01854_ImportInfo>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1dce485da_check_import_cycles(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1c2d01854_ImportInfo>, jule::Ptr<_1dcd828a9_UseDecl>&);
inline void _1dce489c5_check_package_accessibility(_1dce44dab_SymbolBuilder*, jule::Ptr<_1dcd828a9_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1dce48d8d_import_package(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1c2d01854_ImportInfo>&, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Ptr<_1c2d01854_ImportInfo> _1dce4919b_import_use_decl(jule::Ptr<_1dce44dab_SymbolBuilder>, jule::Ptr<_1dcd828a9_UseDecl>&);
inline void _1dce49377_import_use_decls(jule::Ptr<_1dce44dab_SymbolBuilder>);
inline void _1dce495ec_append_node(_1dce44dab_SymbolBuilder*, _1dcd36275_Node&);
inline void _1dce497c8_append_nodes(_1dce44dab_SymbolBuilder*);
inline void _1dce49a4d_push_directive_pass(_1dce44dab_SymbolBuilder*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1dce49c29_append_top_directives(_1dce44dab_SymbolBuilder*);
inline void _1dce49e05_build(jule::Ptr<_1dce44dab_SymbolBuilder>);
struct _1dce44dab_SymbolBuilder {
	jule::Ptr<_1dce44dab_SymbolBuilder> _field_owner = jule::Ptr<_1dce44dab_SymbolBuilder>();
	jule::Trait<_1c2cee05a_Importer> _field_importer = jule::Trait<_1c2cee05a_Importer>();
	jule::Slice<_207b80eb7_Log> _field_errors = jule::Slice<_207b80eb7_Log>();
	jule::Ptr<_1dcd355c6_Ast> _field_ast = jule::Ptr<_1dcd355c6_Ast>();
	jule::Ptr<_1c2d68c84_SymbolTable> _field_table = jule::Ptr<_1c2d68c84_SymbolTable>();
	

	_1dce44dab_SymbolBuilder(void) = default;

	inline bool operator==(_1dce44dab_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1dce44dab_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c3d917_to_str(_1c2c3d54e_Trait*);
inline jule::Bool _1c2c3dc25_equals(jule::Ptr<_1c2c3d54e_Trait>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1c2c3e088_is_builtin(_1c2c3d54e_Trait*);
inline jule::Ptr<_1dce38993_Fn> _1c2c3e396_find_method(_1c2c3d54e_Trait*, jule::Str);
struct _1c2c3d54e_Trait {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1dce38993_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dce38993_Fn>>();
	jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1dcd5a596_Struct>>();
	

	_1c2c3d54e_Trait(void) = default;

	inline bool operator==(_1c2c3d54e_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1c2c3d54e_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2c40100_auto_expr(_1c2c3ec15_EnumItem*);
struct _1c2c3ec15_EnumItem {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2d6ea6a_Value> _field_value = jule::Ptr<_1c2d6ea6a_Value>();
	

	_1c2c3ec15_EnumItem(void) = default;

	inline bool operator==(_1c2c3ec15_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1c2c3ec15_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c40a6d_to_str(_1c2c4070a_Enum*);
inline jule::Bool _1c2c40d7b_equals(jule::Ptr<_1c2c4070a_Enum>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Ptr<_1c2c3ec15_EnumItem> _1c2c412bb_find_item(_1c2c4070a_Enum*, jule::Str);
struct _1c2c4070a_Enum {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>>();
	

	_1c2c4070a_Enum(void) = default;

	inline bool operator==(_1c2c4070a_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1c2c4070a_Enum _other) { return !this->operator==(_other); }


};
struct _1c2c4173e_TypeEnumItem {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	

	_1c2c4173e_TypeEnumItem(void) = default;

	inline bool operator==(_1c2c4173e_TypeEnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2c4173e_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2c42135_to_str(_1c2c41d05_TypeEnum*);
inline jule::Bool _1c2c42443_equals(jule::Ptr<_1c2c41d05_TypeEnum>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Ptr<_1c2c4173e_TypeEnumItem> _1c2c4283e_find_item(_1c2c41d05_TypeEnum*, jule::Str);
struct _1c2c41d05_TypeEnum {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>> _field_items = jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>>();
	

	_1c2c41d05_TypeEnum(void) = default;

	inline bool operator==(_1c2c41d05_TypeEnum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1c2c41d05_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1c2d099a0_Sema>&,jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&)> _1c2c6a36c_ready_fn(jule::Ptr<_1c2c59e50_ConstraintChecker>);
inline jule::Bool _1c2c82ac1_ready_fi(jule::Ptr<_1c2c59e50_ConstraintChecker>);
inline jule::Bool _1c2c9cb85_ready_si(jule::Ptr<_1c2c59e50_ConstraintChecker>);
inline jule::Bool _1c2c9e9cd_ready(jule::Ptr<_1c2c59e50_ConstraintChecker>);
inline jule::Bool _1c2ca0bbb_check(jule::Ptr<_1c2c59e50_ConstraintChecker>);
struct _1c2c59e50_ConstraintChecker {
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _field_generics_d = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>>();
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _field_generics_a = jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>();
	jule::Ptr<_1dce3b644_FnIns> _field_fi = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dcd868e1_StructIns> _field_si = jule::Ptr<_1dcd868e1_StructIns>();
	jule::Ptr<_1db7061a7_Token> _field_et = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1c2c59e50_ConstraintChecker(void) = default;

	inline bool operator==(_1c2c59e50_ConstraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_generics_d == _other._field_generics_d &&
			this->_field_generics == _other._field_generics &&
			this->_field_generics_a == _other._field_generics_a &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1c2c59e50_ConstraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2ca41ec_is_trait_impl(_1c2cc44d6_Impl*);
inline jule::Bool _1c2ca494a_is_struct_impl(_1c2cc44d6_Impl*);
struct _1c2cc44d6_Impl {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_base = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1dcd69d69_TypeDecl> _field_dest = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Slice<jule::Ptr<_1dce38993_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dce38993_Fn>>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_statics = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	

	_1c2cc44d6_Impl(void) = default;

	inline bool operator==(_1c2cc44d6_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1c2cc44d6_Impl _other) { return !this->operator==(_other); }


};
struct _1c2cd2d1e_Scope {
	jule::Ptr<_1c2cd2d1e_Scope> _field_parent = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1c2cd2d1e_Scope(void) = default;

	inline bool operator==(_1c2cd2d1e_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1c2cd2d1e_Scope _other) { return !this->operator==(_other); }


};
struct _1c2cd321a_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	

	_1c2cd321a_If(void) = default;

	inline bool operator==(_1c2cd321a_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2cd321a_If _other) { return !this->operator==(_other); }


};
struct _1c2cd3506_Else {
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	

	_1c2cd3506_Else(void) = default;

	inline bool operator==(_1c2cd3506_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2cd3506_Else _other) { return !this->operator==(_other); }


};
struct _1c2cd3902_Conditional {
	jule::Slice<jule::Ptr<_1c2cd321a_If>> _field_elifs = jule::Slice<jule::Ptr<_1c2cd321a_If>>();
	jule::Ptr<_1c2cd3506_Else> _field_default = jule::Ptr<_1c2cd3506_Else>();
	

	_1c2cd3902_Conditional(void) = default;

	inline bool operator==(_1c2cd3902_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1c2cd3902_Conditional _other) { return !this->operator==(_other); }


};
struct _1c2cd3bdd_InfIter {
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	

	_1c2cd3bdd_InfIter(void) = default;

	inline bool operator==(_1c2cd3bdd_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2cd3bdd_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2cd4507_is_while_next(_1c2cd4161_WhileIter*);
struct _1c2cd4161_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	

	_1c2cd4161_WhileIter(void) = default;

	inline bool operator==(_1c2cd4161_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2cd4161_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c2cd4a46_RangeIter {
	jule::Ptr<_1c2d6d9e2_Data> _field_expr = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Ptr<_1c2d266ae_Var> _field_key_a = jule::Ptr<_1c2d266ae_Var>();
	jule::Ptr<_1c2d266ae_Var> _field_key_b = jule::Ptr<_1c2d266ae_Var>();
	

	_1c2cd4a46_RangeIter(void) = default;

	inline bool operator==(_1c2cd4a46_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1c2cd4a46_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c2cd4e42_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_1c2cd4e42_ContSt(void) = default;

	inline bool operator==(_1c2cd4e42_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1c2cd4e42_ContSt _other) { return !this->operator==(_other); }


};
struct _1c2cd52e9_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_1c2cd52e9_BreakSt(void) = default;

	inline bool operator==(_1c2cd52e9_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1c2cd52e9_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c2cd55d5_Label {
	jule::Str _field_ident = jule::Str();
	

	_1c2cd55d5_Label(void) = default;

	inline bool operator==(_1c2cd55d5_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c2cd55d5_Label _other) { return !this->operator==(_other); }


};
struct _1c2cd58c1_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1c2cd58c1_GotoSt(void) = default;

	inline bool operator==(_1c2cd58c1_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c2cd58c1_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c2cd5c78_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1c2cd5c78_Postfix(void) = default;

	inline bool operator==(_1c2cd5c78_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c2cd5c78_Postfix _other) { return !this->operator==(_other); }


};
struct _1c2cd61eb_Assign {
	jule::Ptr<_1dce31529_OperandExprModel> _field_l = jule::Ptr<_1dce31529_OperandExprModel>();
	jule::Ptr<_1dce31529_OperandExprModel> _field_r = jule::Ptr<_1dce31529_OperandExprModel>();
	jule::Ptr<_1db7061a7_Token> _field_op = jule::Ptr<_1db7061a7_Token>();
	

	_1c2cd61eb_Assign(void) = default;

	inline bool operator==(_1c2cd61eb_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c2cd61eb_Assign _other) { return !this->operator==(_other); }


};
struct _1c2cd65a3_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1c2cd65a3_MultiAssign(void) = default;

	inline bool operator==(_1c2cd65a3_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1c2cd65a3_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2cd70ed_is_generic_type_match(_1c2cd6ae2_Match*);
struct _1c2cd6ae2_Match {
	jule::Ptr<_1c2d6d9e2_Data> _field_expr = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1c2cd763c_Case>> _field_cases = jule::Slice<jule::Ptr<_1c2cd763c_Case>>();
	jule::Ptr<_1c2cd763c_Case> _field_default = jule::Ptr<_1c2cd763c_Case>();
	

	_1c2cd6ae2_Match(void) = default;

	inline bool operator==(_1c2cd6ae2_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1c2cd6ae2_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2cd7906_is_default(_1c2cd763c_Case*);
struct _1c2cd763c_Case {
	jule::Ptr<_1c2cd6ae2_Match> _field_owner = jule::Ptr<_1c2cd6ae2_Match>();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _field_exprs = jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>();
	jule::Ptr<_1c2cd763c_Case> _field_next = jule::Ptr<_1c2cd763c_Case>();
	

	_1c2cd763c_Case(void) = default;

	inline bool operator==(_1c2cd763c_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1c2cd763c_Case _other) { return !this->operator==(_other); }


};
struct _1c2cd7be2_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_1c2cd7be2_FallSt(void) = default;

	inline bool operator==(_1c2cd7be2_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1c2cd7be2_FallSt _other) { return !this->operator==(_other); }


};
struct _1c2cd8165_RetSt {
	jule::Ptr<_1dce3b644_FnIns> _field_func = jule::Ptr<_1dce3b644_FnIns>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1c2cd8165_RetSt(void) = default;

	inline bool operator==(_1c2cd8165_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c2cd8165_RetSt _other) { return !this->operator==(_other); }


};
struct _1c2cd8770_ScopeLabel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1c2cd55d5_Label> _field_label = jule::Ptr<_1c2cd55d5_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1c2cd9a07_ScopeChecker> _field_scope = jule::Ptr<_1c2cd9a07_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1c2cd8770_ScopeLabel(void) = default;

	inline bool operator==(_1c2cd8770_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c2cd8770_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1c2cd8be3_ScopeGoto {
	jule::Ptr<_1dcd77bac_GotoSt> _field_gt = jule::Ptr<_1dcd77bac_GotoSt>();
	jule::Ptr<_1c2cd9a07_ScopeChecker> _field_scope = jule::Ptr<_1c2cd9a07_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1c2cd8be3_ScopeGoto(void) = default;

	inline bool operator==(_1c2cd8be3_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c2cd8be3_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2cd9e58_find_package(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2cda266_select_package(_1c2cd9a07_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>);
inline jule::Ptr<_1c2d266ae_Var> _1c2cda61d_find_var(_1c2cd9a07_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2cda9c5_find_type_alias(_1c2cd9a07_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5a596_Struct> _1c2cdad7c_find_struct(_1c2cd9a07_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce38993_Fn> _1c2cdb234_find_fn(_1c2cd9a07_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2cdb542_find_trait(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2c4070a_Enum> _1c2cdb850_find_enum(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2cdbb5d_find_type_enum(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Bool _1c2cdbe8d_is_unsafe(jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Bool _1c2cdc202_is_root(_1c2cd9a07_ScopeChecker*);
inline void _1c2cdc3cd_stop(_1c2cd9a07_ScopeChecker*);
inline jule::Bool _1c2cdc642_stopped(_1c2cd9a07_ScopeChecker*);
inline jule::Bool _1c2cdc8a6_is_deferred(jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cdcb1a_get_root(jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cdcd7e_get_hard_root(jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Ptr<_1c2cd55d5_Label> _1c2cdd18c_find_label(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Ptr<_1c2cd8770_ScopeLabel> _1c2cdd49a_find_label_scope(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Str);
inline jule::Ptr<_1c2cd8770_ScopeLabel> _1c2cdd7a8_find_label_all(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Bool _1c2cddb60_is_duplicated_ident(_1c2cd9a07_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _1c2cdddd5_check_var_decl(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7cb5c_VarDecl>);
inline void _1c2cde15a_check_type_alias_decl(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd814bd_TypeAliasDecl>);
inline jule::Ptr<_1c2cd2d1e_Scope> _1c2cde3be_get_child(_1c2cd9a07_ScopeChecker*);
inline void _1c2cde787_check_child_ssc(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7a187_ScopeTree>&, jule::Ptr<_1c2cd2d1e_Scope>&, jule::Ptr<_1c2cd9a07_ScopeChecker>&);
inline jule::Ptr<_1c2cd2d1e_Scope> _1c2cdeb3e_check_child_sc(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7a187_ScopeTree>&, jule::Ptr<_1c2cd9a07_ScopeChecker>&);
inline jule::Ptr<_1c2cd2d1e_Scope> _1c2cdee4c_check_child(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7a187_ScopeTree>&);
inline void _1c2ce01c2_check_anon_scope(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7a187_ScopeTree>);
inline void _1c2ce04e1_process_error_call(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>&, jule::Ptr<_1db7061a7_Token>);
inline void _1c2ce0766_check_expr(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd6e38a_Expr>);
inline void _1c2ce09db_check_co_expr(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd70e80_CoExpr>);
inline jule::Ptr<_1c2cd321a_If> _1c2ce0ce9_check_if(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd804bc_If>);
inline jule::Ptr<_1c2cd3506_Else> _1c2ce1107_check_else(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd80874_Else>);
inline void _1c2ce137c_check_conditional(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd80ce7_Conditional>);
inline void _1c2ce17de_check_iter_scope_ssc(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Uintptr, jule::Ptr<_1dcd7a187_ScopeTree>, jule::Ptr<_1c2cd2d1e_Scope>&, jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Ptr<_1c2cd2d1e_Scope> _1c2ce1c40_check_iter_scope_sc(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Uintptr, jule::Ptr<_1dcd7a187_ScopeTree>, jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Ptr<_1c2cd2d1e_Scope> _1c2ce20e7_check_iter_scope(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Uintptr, jule::Ptr<_1dcd7a187_ScopeTree>&);
inline void _1c2ce236c_check_inf_iter(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7d674_Iter>&);
inline void _1c2ce25e2_check_while_iter(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7d674_Iter>&);
inline void _1c2ce2867_check_range_iter(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7d674_Iter>&);
inline void _1c2ce2adc_check_iter(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7d674_Iter>);
inline jule::Bool _1c2ce2dea_check_valid_cont_label(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Uintptr);
inline jule::Bool _1c2ce322a_check_valid_break_label(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_1c2cd4e42_ContSt> _1c2ce3549_check_cont_valid_scope(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd80049_ContSt>);
inline void _1c2ce37be_check_cont(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd80049_ContSt>);
inline void _1c2ce3a44_check_label(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd77805_LabelSt>);
inline void _1c2ce3cb9_push_goto(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd77bac_GotoSt>);
inline void _1c2ce403e_check_postfix(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd78ae2_AssignSt>);
inline jule::Bool _1c2ce434c_is_new_assign_ident(_1c2cd9a07_ScopeChecker*, jule::Str);
inline jule::Bool _1c2ce47c0_check_structure_assign_op(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1dcd78ae2_AssignSt>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2ce4a56_check_single_assign(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd78ae2_AssignSt>&);
inline void _1c2ce5095___process_end_part_of_multi_assign(_1c2cd9a07_ScopeChecker*, jule::Ptr<_1c2cd65a3_MultiAssign>, jule::Ptr<_1dcd78ae2_AssignSt>, jule::Ptr<_1dcd785a3_AssignLeft>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1c2d6d9e2_Data>);
inline void _1c2ce531a_check_ret_multi_assign(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd78ae2_AssignSt>&);
inline void _1c2ce5590_check_multi_assign(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd78ae2_AssignSt>&);
inline void _1c2ce5815_check_assign_st(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd78ae2_AssignSt>);
inline jule::Ptr<_1c2cd2d1e_Scope> _1c2ce5bbc_check_case_scope(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1c2cd763c_Case>&, jule::Ptr<_1dcd7a187_ScopeTree>&);
inline jule::Ptr<_1c2cd763c_Case> _1c2ce61b7_check_case(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1c2cd6ae2_Match>, jule::I64, jule::Ptr<_1dcd81941_Case>, jule::Ptr<_1c2d6d9e2_Data>);
inline void _1c2ce6580_check_cases(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd82117_MatchCase>&, jule::Ptr<_1c2cd6ae2_Match>, jule::Ptr<_1c2d6d9e2_Data>);
inline jule::Ptr<_1c2cd763c_Case> _1c2ce6937_check_default(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1c2cd6ae2_Match>, jule::Ptr<_1dcd80874_Else>);
inline void _1c2ce6bac_check_comptime_panic(_1c2cd9a07_ScopeChecker*, jule::Ptr<_1c2cd2d1e_Scope>&);
inline void _1c2ce6ecb_push_type_match(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1c2cd6ae2_Match>, jule::Ptr<_1dcd82117_MatchCase>&);
inline void _1c2ce7251_check_type_match(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd82117_MatchCase>&);
inline void _1c2ce74c6_check_common_match(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd82117_MatchCase>&);
inline void _1c2ce774b_check_match(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd82117_MatchCase>);
inline void _1c2ce79c1_check_fall(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd77e98_FallSt>);
inline jule::Ptr<_1c2cd52e9_BreakSt> _1c2ce7cce_check_break_with_label(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7eb92_BreakSt>);
inline jule::Ptr<_1c2cd52e9_BreakSt> _1c2ce80dc_check_plain_break(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7eb92_BreakSt>);
inline void _1c2ce8362_check_break(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7eb92_BreakSt>);
inline void _1c2ce85d7_check_ret(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7d014_RetSt>);
inline void _1c2ce885c_check_use_expr(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd6ec2b_UseExpr>);
inline void _1c2ce8ad2_check_node(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Any&);
inline void _1c2ce8cad_check_result(jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline void _1c2ce8e89_check_tree(jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline void _1c2ce92a8_check_goto(_1c2cd9a07_ScopeChecker*, jule::Ptr<_1c2cd8be3_ScopeGoto>&, jule::Ptr<_1c2cd8770_ScopeLabel>&);
inline void _1c2ce9484_check_gotos(_1c2cd9a07_ScopeChecker*);
inline void _1c2ce9660_check_labels(_1c2cd9a07_ScopeChecker*);
inline void _1c2ce983b_check_vars(_1c2cd9a07_ScopeChecker*);
inline void _1c2ce9a17_check_aliases(_1c2cd9a07_ScopeChecker*);
inline void _1c2ce9d36_check(jule::Ptr<_1c2cd9a07_ScopeChecker>, jule::Ptr<_1dcd7a187_ScopeTree>&, jule::Ptr<_1c2cd2d1e_Scope>&);
inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cea09a_new_child_checker(jule::Ptr<_1c2cd9a07_ScopeChecker>);
struct _1c2cd9a07_ScopeChecker {
	jule::Ptr<_1db7061a7_Token> _field_called_from = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Ptr<_1dce3b644_FnIns> _field_owner = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1c2cd9a07_ScopeChecker> _field_parent = jule::Ptr<_1c2cd9a07_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1c2d68c84_SymbolTable> _field_table = jule::Ptr<_1c2d68c84_SymbolTable>();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_tree = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Ptr<_1dce3b644_FnIns> _field_result = jule::Ptr<_1dce3b644_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2cd8770_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c2cd8770_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2cd8be3_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c2cd8be3_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1c2cd9a07_ScopeChecker(void) = default;

	inline bool operator==(_1c2cd9a07_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c2cd9a07_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1c2ceb08a_check_cdef(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2ceb310_check_typedef(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2ceb585_check_derive(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2ceb80a_check_namespace(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2ceba80_check_deprecated(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2cebd05_check_test(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2cec07a_check_directive(_1c2ceab4a_DirectiveChecker*, jule::Ptr<_1dcd36671_Directive>&);
inline void _1c2cec256_check(_1c2ceab4a_DirectiveChecker*);
struct _1c2ceab4a_DirectiveChecker {
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1dcd36671_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1dcd36671_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1c2ceab4a_DirectiveChecker(void) = default;

	inline bool operator==(_1c2ceab4a_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c2ceab4a_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d01d71_find_package(_1c2d01854_ImportInfo*, jule::Str);
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d0217e_select_package(_1c2d01854_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>);
inline jule::Ptr<_1c2d266ae_Var> _1c2d02536_find_var(_1c2d01854_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d028dd_find_type_alias(_1c2d01854_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5a596_Struct> _1c2d02c95_find_struct(_1c2d01854_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce38993_Fn> _1c2d0314c_find_fn(_1c2d01854_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2d0345a_find_trait(_1c2d01854_ImportInfo*, jule::Str);
inline jule::Ptr<_1c2c4070a_Enum> _1c2d03768_find_enum(_1c2d01854_ImportInfo*, jule::Str);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d03a76_find_type_enum(_1c2d01854_ImportInfo*, jule::Str);
inline jule::Bool _1c2d03e1c_is_lookupable(_1c2d01854_ImportInfo*, jule::Str);
inline jule::Bool _1c2d0422a_exist_ident(_1c2d01854_ImportInfo*, jule::Str);
inline jule::Bool _1c2d044b1_is_accessible_via_selection(_1c2d01854_ImportInfo*);
struct _1c2d01854_ImportInfo {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_selected = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Ptr<_1c2d047ad_Package> _field_package = jule::Ptr<_1c2d047ad_Package>();
	jule::I64 _field_mod_id = jule::I64();
	

	_1c2d01854_ImportInfo(void) = default;

	inline bool operator==(_1c2d01854_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1c2d01854_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d04c86_find_package(_1c2d047ad_Package*, jule::Str);
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d05094_select_package(_1c2d047ad_Package*, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>);
inline jule::Ptr<_1c2d266ae_Var> _1c2d0544b_find_var(_1c2d047ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d05803_find_type_alias(_1c2d047ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5a596_Struct> _1c2d05baa_find_struct(_1c2d047ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce38993_Fn> _1c2d06062_find_fn(_1c2d047ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2d06370_find_trait(_1c2d047ad_Package*, jule::Str);
inline jule::Ptr<_1c2c4070a_Enum> _1c2d0667d_find_enum(_1c2d047ad_Package*, jule::Str);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d0698b_find_type_enum(_1c2d047ad_Package*, jule::Str);
struct _1c2d047ad_Package {
	jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>();
	

	_1c2d047ad_Package(void) = default;

	inline bool operator==(_1c2d047ad_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1c2d047ad_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d09ebc_find_package(_1c2d099a0_Sema*, jule::Str);
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d0a2ca_select_package(_1c2d099a0_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>);
inline jule::Ptr<_1c2d266ae_Var> _1c2d0a682_find_var(_1c2d099a0_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d0aa39_find_type_alias(_1c2d099a0_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5a596_Struct> _1c2d0ade1_find_struct(_1c2d099a0_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce38993_Fn> _1c2d0b298_find_fn(_1c2d099a0_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2d0b5a6_find_trait(_1c2d099a0_Sema*, jule::Str);
inline jule::Ptr<_1c2c4070a_Enum> _1c2d0b8b4_find_enum(_1c2d099a0_Sema*, jule::Str);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d0bbc2_find_type_enum(_1c2d099a0_Sema*, jule::Str);
inline jule::Bool _1c2d0c024_is_flag(_1c2d099a0_Sema*, jule::I64);
inline void _1c2d0c299_set_current_file(_1c2d099a0_Sema*, jule::Ptr<_1c2d68c84_SymbolTable>);
inline void _1c2d0c662_push_err(_1c2d099a0_Sema*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2d0c981_push_suggestion(_1c2d099a0_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2d0cd38_is_accessible_define(_1c2d099a0_Sema*, jule::Bool, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2d0d289_is_duplicated_ident(_1c2d099a0_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1c2d0d5a8_check_directives(jule::Ptr<_1c2d099a0_Sema>, jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Any);
inline jule::Bool _1c2d0da09_check_generic_quantity(_1c2d099a0_Sema*, jule::I64, jule::I64, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2d0ddd3_is_duplicated_import_selection(_1c2d099a0_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1c2d0e29b_get_import_def(_1c2d099a0_Sema*, jule::Str, jule::Ptr<_1c2d01854_ImportInfo>&);
inline jule::Bool _1c2d0e5cb_check_import_selections(_1c2d099a0_Sema*, jule::Ptr<_1c2d01854_ImportInfo>&);
inline jule::Bool _1c2d0e91c_is_use_alias_duplication(_1c2d099a0_Sema*, jule::Ptr<_1c2d01854_ImportInfo>&);
inline jule::Bool _1c2d0ec3b_check_import(_1c2d099a0_Sema*, jule::Ptr<_1c2d01854_ImportInfo>&);
inline void _1c2d0ee17_check_imports(_1c2d099a0_Sema*);
inline void _1c2d100e3_impl_file_impls(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d102be_impl_impls(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d1049a_check_enums(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d10995_build_type_with_refers(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd69d69_TypeDecl>&, jule::Trait<_1c2dba3bd_Lookup>, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>, jule::Ptr<_1c2dac03b_Referencer>);
inline jule::Bool _1c2d10e90_check_type_with_refers(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2da397d_TypeSymbol>&, jule::Trait<_1c2dba3bd_Lookup>, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>, jule::Ptr<_1c2dac03b_Referencer>);
inline jule::Ptr<_1c2c59e50_ConstraintChecker> _1c2d11204_constraint_checker(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Bool _1c2d115ab_check_type(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2da397d_TypeSymbol>&, jule::Trait<_1c2dba3bd_Lookup>);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d11a2e_build_type_with_generics(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd69d69_TypeDecl>&, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>, jule::Ptr<_1dce3e548_ReferenceStack>);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d11d4d_build_type(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd69d69_TypeDecl>&);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d1215b_select_type(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd69d69_TypeDecl>&);
inline jule::Ptr<_1c2d70560_Eval> _1c2d125ac_evalpd(jule::Ptr<_1c2d099a0_Sema>, jule::Trait<_1c2dba3bd_Lookup>, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d266ae_Var>);
inline jule::Ptr<_1c2d70560_Eval> _1c2d12964_evalp(jule::Ptr<_1c2d099a0_Sema>, jule::Trait<_1c2dba3bd_Lookup>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Ptr<_1c2d70560_Eval> _1c2d12c72_eval(jule::Ptr<_1c2d099a0_Sema>, jule::Trait<_1c2dba3bd_Lookup>);
inline jule::Bool _1c2d1326c_check_assign_type(jule::Ptr<_1c2d099a0_Sema>, jule::Bool, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2d136e0_check_type_compatibility(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d13aca_build_non_generic_type_kind(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd69d69_TypeDecl>&, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>&);
inline void _1c2d13d83_build_fn_non_generic_type_kinds(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Ptr<_1dce3b644_FnIns> _1c2d141c4_get_trait_check_fn_kind(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce38993_Fn>&);
inline jule::Bool _1c2d14636_check_constraints_fn(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3b644_FnIns>&, jule::Ptr<_1db7061a7_Token>&, jule::Ptr<_1dce3b644_FnIns>);
inline jule::Bool _1c2d14aa9_check_constraints_struct(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1db7061a7_Token>&, jule::Ptr<_1dcd868e1_StructIns>);
inline jule::Bool _1c2d14e72_fn_environment(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3b644_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1c2d099a0_Sema>&,jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&)>);
inline void _1c2d151e7_check_fn_param_kind(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3a775_ParamIns>&);
inline jule::Bool _1c2d15505_reload_fn_ins_types(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3b644_FnIns>);
inline jule::Bool _1c2d15989_check_ref_validity_for_init_expr(jule::Ptr<_1c2d099a0_Sema>, jule::Bool, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1c2d16083_check_validity_for_init_expr(jule::Ptr<_1c2d099a0_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1c2d1643a_check_type_alias_decl_kind(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d9db32_TypeAlias>&, jule::Trait<_1c2dba3bd_Lookup>);
inline void _1c2d1676a_check_type_alias_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d9db32_TypeAlias>&, jule::Trait<_1c2dba3bd_Lookup>);
inline void _1c2d16a12_check_type_alias_decl_dup(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d9db32_TypeAlias>&);
inline jule::Bool _1c2d16c87_check_type_alias_decls(jule::Ptr<_1c2d099a0_Sema>);
inline void _1ab0b833b_check_enum_items_dup(_1c2d099a0_Sema*, jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>>);
inline void _1ab0c3b60_check_enum_items_dup(_1c2d099a0_Sema*, jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>>);
inline void _1c2d17282_check_enum_items_str(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2c4070a_Enum>&);
inline void _1c2d17507_check_enum_items_int(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2c4070a_Enum>&);
inline void _1c2d1777c_check_enum_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2c4070a_Enum>&);
inline void _1c2d17a02_check_type_enum_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2c41d05_TypeEnum>&);
inline jule::Bool _1c2d17c66_check_enum_decls(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Bool _1c2d17eca_check_type_enum_decls(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Bool _1c2d182d8_check_decl_generics(_1c2d099a0_Sema*, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>&);
inline jule::Bool _1c2d18618_check_fn_decl_params_dup(_1c2d099a0_Sema*, jule::Ptr<_1dce38993_Fn>&);
inline jule::Bool _1c2d18959_check_fn_decl_result_dup(_1c2d099a0_Sema*, jule::Ptr<_1dce38993_Fn>&);
inline void _1c2d18c12_check_fn_decl_prototype(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce38993_Fn>&);
inline void _1c2d18eba_check_trait_decl_method(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce38993_Fn>&);
inline void _1c2d19273_check_trait_decl_methods(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2c3d54e_Trait>&);
inline void _1c2d19509_check_trait_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2c3d54e_Trait>&);
inline jule::Bool _1c2d1976d_check_trait_decls(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Bool _1c2d19b47_check_trait_impl_methods(_1c2d099a0_Sema*, jule::Ptr<_1c2c3d54e_Trait>&, jule::Ptr<_1c2cc44d6_Impl>&);
inline jule::Bool _1c2d1a010_impl_to_struct(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&, jule::Ptr<_1c2cc44d6_Impl>&);
inline void _1c2d1a285_impl_trait(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2cc44d6_Impl>&);
inline void _1c2d1a50a_impl_struct(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2cc44d6_Impl>&);
inline void _1c2d1a780_impl_impl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2cc44d6_Impl>&);
inline void _1c2d1aa9e_check_var_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d266ae_Var>&, jule::Trait<_1c2dba3bd_Lookup>);
inline void _1c2d1ad24_check_global_var_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d266ae_Var>&);
inline jule::Bool _1c2d1b088_check_global_decls(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Bool _1c2d1b462_check_struct_trait_impl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&, jule::Ptr<_1c2c3d54e_Trait>&);
inline jule::Bool _1c2d1b781_check_struct_impls(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Bool _1c2d1ba8e_check_struct_fields(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1c2d1bd14_check_struct_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Bool _1c2d1c078_check_struct_decls(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d1c2ed_check_fn_decl(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce38993_Fn>&);
inline jule::Bool _1c2d1c562_check_fn_decls(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d1c92a_push_cycle_error(_1c2d099a0_Sema*, jule::Ptr<_1dcd5a596_Struct>&, jule::Ptr<_1dcd5a596_Struct>&, jule::Str&);
inline jule::Bool _1c2d1cd7b_check_cross_cycle(_1c2d099a0_Sema*, jule::Ptr<_1dcd5a596_Struct>&, jule::Ptr<_1dcd5a596_Struct>&, jule::Str&);
inline jule::Bool _1c2d1d310_check_struct_derive_illegal_cycles(_1c2d099a0_Sema*, jule::Str, jule::Ptr<_1dcd5a596_Struct>&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d1d640_check_struct_ins_derive_clone(_1c2d099a0_Sema*, jule::Ptr<_1dcd868e1_StructIns>);
inline void _1c2d1d82c_check_package_decls(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d1db6d_check_data_for_type_inference(_1c2d099a0_Sema*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>&);
inline void _1c2d1de04_check_var(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d266ae_Var>&);
inline void _1c2d1e223_check_type_var(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1c2d266ae_Var>&, jule::Trait<_1c2dba3bd_Lookup>);
inline void _1c2d1e3ee_check_global_types(jule::Ptr<_1c2d099a0_Sema>);
inline jule::Ptr<_1dce3b644_FnIns> _1c2d1e7a6_ready_to_check_fn(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1dce38993_Fn>&);
inline void _1c2d1eac5_check_type_method(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1dce38993_Fn>&);
inline jule::Ptr<_1dce3b644_FnIns> _1c2d20026_check_struct_ins_op(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1dce38993_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>);
inline jule::Bool _1c2d203cd_check_struct_env(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2d20785_precheck_struct_ins(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d20a0a_check_struct_ins(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1c2d20c80_check_type_struct(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1c2d20e5b_check_struct_types(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d21203_check_struct_ins_operators(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd868e1_StructIns>);
inline void _1c2d21489_precheck_struct_type(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1c2d21665_precheck_struct_types(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d218da_check_rets(_1c2d099a0_Sema*, jule::Ptr<_1dce3b644_FnIns>&);
inline void _1c2d21c09_check_fn_ins_sc(_1c2d099a0_Sema*, jule::Ptr<_1dce3b644_FnIns>&, jule::Ptr<_1c2cd9a07_ScopeChecker>&);
inline void _1c2d22028_check_fn_ins_caller(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3b644_FnIns>&, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d2229d_check_fn_ins(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce3b644_FnIns>&);
inline void _1c2d22523_check_type_fn(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce38993_Fn>&);
inline void _1c2d22798_check_test_fn(_1c2d099a0_Sema*, jule::Ptr<_1dce3b644_FnIns>&);
inline void _1c2d22a1d_precheck_type_fn(jule::Ptr<_1c2d099a0_Sema>, jule::Ptr<_1dce38993_Fn>&);
inline void _1c2d22be9_precheck_fn_types(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d22dc5_check_fn_types(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d230a1_check_package_types(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d2327c_set_file_sema_fields(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d23458_set_sema_fields(jule::Ptr<_1c2d099a0_Sema>);
inline void _1c2d236cd_check(jule::Ptr<_1c2d099a0_Sema>, jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&);
struct _1c2d099a0_Sema {
	jule::Slice<_207b80eb7_Log> _field_errors = jule::Slice<_207b80eb7_Log>();
	jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>();
	jule::Ptr<_1c2d68c84_SymbolTable> _field_file = jule::Ptr<_1c2d68c84_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1c2d099a0_Sema(void) = default;

	inline bool operator==(_1c2d099a0_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1c2d099a0_Sema _other) { return !this->operator==(_other); }


};
inline _1c2d23a85_MissingRetChecker static__1c2d23e4d_new(void);
inline jule::Bool _1c2d24228_check_conditional(_1c2d23a85_MissingRetChecker*, jule::Ptr<_1c2cd3902_Conditional>);
inline jule::Bool _1c2d24536_check_match(_1c2d23a85_MissingRetChecker*, jule::Ptr<_1c2cd6ae2_Match>);
inline jule::Bool _1c2d24844_check_inf_iter(_1c2d23a85_MissingRetChecker*, jule::Ptr<_1c2cd3bdd_InfIter>);
inline jule::Bool _1c2d24b52_check_scope(_1c2d23a85_MissingRetChecker*, jule::Ptr<_1c2cd2d1e_Scope>);
inline jule::Bool _1c2d24e60_check(_1c2d23a85_MissingRetChecker*, jule::Ptr<_1c2cd2d1e_Scope>);
struct _1c2d23a85_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1c2d23a85_MissingRetChecker(void) = default;

	inline bool operator==(_1c2d23a85_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1c2d23a85_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1c2d25746_IterRelation {
	jule::Ptr<_1c2d266ae_Var> _field_range = jule::Ptr<_1c2d266ae_Var>();
	

	_1c2d25746_IterRelation(void) = default;

	inline bool operator==(_1c2d25746_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1c2d25746_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2d26a66_is_initialized(_1c2d266ae_Var*);
inline jule::Bool _1c2d26cca_is_type_inferred(_1c2d266ae_Var*);
struct _1c2d266ae_Var {
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	jule::Ptr<_1c2d6ea6a_Value> _field_value = jule::Ptr<_1c2d6ea6a_Value>();
	jule::Ptr<_1dce3e548_ReferenceStack> _field_refers = jule::Ptr<_1dce3e548_ReferenceStack>();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Ptr<_1c2d25746_IterRelation> _field_iter_relation = jule::Ptr<_1c2d25746_IterRelation>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_depends = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	

	_1c2d266ae_Var(void) = default;

	inline bool operator==(_1c2d266ae_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1c2d266ae_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1c2d27858_dispose(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d27b00_to_str(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d27e41_logical(jule::Ptr<_1dce38993_Fn>&, jule::Str);
inline jule::Bool static__1c2d281d8_eq(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d28480_gt(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d28727_gt_eq(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d289be_lt(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d28c66_lt_eq(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d290a7_result(jule::Ptr<_1dce38993_Fn>&, jule::Str);
inline jule::Bool static__1c2d2934e_shl(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d295e6_shr(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2988d_add(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d29b35_sub(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d29dcc_div(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2a174_mul(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2a41b_mod(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2a6b3_bit_and(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2a95a_bit_or(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2ac02_bit_xor(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2b043_unary(jule::Ptr<_1dce38993_Fn>&, jule::Str);
inline jule::Bool static__1c2d2b2da_neg(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2b582_pos(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2b829_bit_not(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2bb6a_assign(jule::Ptr<_1dce38993_Fn>&, jule::Str);
inline jule::Bool static__1c2d2be12_add_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2c1a9_sub_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2c451_div_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2c6e8_mul_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2c990_mod_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2cc37_shl_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2cece_shr_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2d276_bit_or_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2d51d_bit_and_assign(jule::Ptr<_1dce38993_Fn>);
inline jule::Bool static__1c2d2d7b5_bit_xor_assign(jule::Ptr<_1dce38993_Fn>);
struct _1c2d271d7_FuncPattern {
	

	_1c2d271d7_FuncPattern(void) = default;

	inline bool operator==(_1c2d271d7_FuncPattern _other) { return true; }

	inline bool operator!=(_1c2d271d7_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1c2d57d94_push_err(_1c2d57877_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2d58108_check_trait(_1c2d57877_TypeCompatibilityChecker*);
inline jule::Bool _1c2d5836c_check_ptr(_1c2d57877_TypeCompatibilityChecker*);
inline jule::Bool _1c2d585d1_check_prim(_1c2d57877_TypeCompatibilityChecker*);
inline jule::Bool _1c2d58988___type_enum(_1c2d57877_TypeCompatibilityChecker*, jule::Ptr<_1c2c41d05_TypeEnum>&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d58bec_check_type_enum(_1c2d57877_TypeCompatibilityChecker*);
inline jule::Bool _1c2d58e61_check(_1c2d57877_TypeCompatibilityChecker*);
struct _1c2d57877_TypeCompatibilityChecker {
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_dest = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_src = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	

	_1c2d57877_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1c2d57877_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1c2d57877_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1c2d59912_push_err(_1c2d594a0_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2d59b76_check_validity(_1c2d594a0_AssignTypeChecker*);
inline jule::Bool _1c2d59dda_check_const(_1c2d594a0_AssignTypeChecker*);
inline jule::Bool _1c2d5a14e_is_prim(_1c2d594a0_AssignTypeChecker*);
inline jule::Bool _1c2d5a3b3_check_compatibility(_1c2d594a0_AssignTypeChecker*);
inline jule::Bool _1c2d5a627_check(_1c2d594a0_AssignTypeChecker*);
struct _1c2d594a0_AssignTypeChecker {
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_dest = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2d6d9e2_Data> _field_d = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	

	_1c2d594a0_AssignTypeChecker(void) = default;

	inline bool operator==(_1c2d594a0_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1c2d594a0_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab25eb42_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1ab25e27e_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1ab25e6be_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1ab267551_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5b804_annotate_constraint_map(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5bb45_annotate_constraint_tup(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5be64_annotate_constraint_fn(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5c294_annotate_constraint_ident(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5c5b3_annotate_constraint(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline void _1c2d5c8d2_push_generic(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&, jule::I64);
inline jule::Bool _1c2d5cbe0_annotate_prim(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5ceed_annotate_arr(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5d30b_annotate_slc(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5d6b3_check_map_key(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5d9c1_annotate_map(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5dcce_annotate_fn(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5e0dc_annotate_ptr(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5e3ea_annotate_sptr(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5e708_annotate_struct(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5ea16_annotate_any(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d5ed24_annotate_kind(_1c2d5adb9_DynamicTypeAnnotation*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2d60088_annotate(_1c2d5adb9_DynamicTypeAnnotation*);
struct _1c2d5adb9_DynamicTypeAnnotation {
	jule::Ptr<_1c2d70560_Eval> _field_e = jule::Ptr<_1c2d70560_Eval>();
	jule::Ptr<_1dce3b644_FnIns> _field_f = jule::Ptr<_1dce3b644_FnIns>();
	jule::Ptr<_1dce3a775_ParamIns> _field_p = jule::Ptr<_1dce3a775_ParamIns>();
	jule::Ptr<_1c2d6d9e2_Data> _field_a = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1c2d9e825_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1dcd69d69_TypeDecl> _field_c = jule::Ptr<_1dcd69d69_TypeDecl>();
	

	_1c2d5adb9_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1c2d5adb9_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1c2d5adb9_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1c2d60cae_push_err_token(_1c2d6075e_FnCallArgChecker*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2d610cd_push_err(_1c2d6075e_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1dce3a775_ParamIns>> _1c2d61342_get_params(_1c2d6075e_FnCallArgChecker*);
inline jule::Bool _1c2d61650_check_counts(_1c2d6075e_FnCallArgChecker*, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>&);
inline jule::Bool _1c2d61aa1_check_arg(_1c2d6075e_FnCallArgChecker*, jule::Ptr<_1dce3a775_ParamIns>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Bool _1c2d61e58_push(_1c2d6075e_FnCallArgChecker*, jule::Ptr<_1dce3a775_ParamIns>&, jule::Ptr<_1dcd6e38a_Expr>);
inline jule::Bool _1c2d62310_push_variadic(_1c2d6075e_FnCallArgChecker*, jule::Ptr<_1dce3a775_ParamIns>&, jule::I64);
inline jule::Bool _1c2d6261d_check_args(_1c2d6075e_FnCallArgChecker*, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>&);
inline jule::Bool _1c2d628a4_check_dynamic_type_annotation(_1c2d6075e_FnCallArgChecker*);
inline jule::Bool _1c2d62b29_check(_1c2d6075e_FnCallArgChecker*);
struct _1c2d6075e_FnCallArgChecker {
	jule::Ptr<_1c2d70560_Eval> _field_e = jule::Ptr<_1c2d70560_Eval>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_args = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dce3b644_FnIns> _field_f = jule::Ptr<_1dce3b644_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1c2d6075e_FnCallArgChecker(void) = default;

	inline bool operator==(_1c2d6075e_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1c2d6075e_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1c2d63674_push_err(_1c2d63168_StructLitChecker*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2d63993_push_suggestion(_1c2d63168_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c2d63d5b_push_match(_1c2d63168_StructLitChecker*, jule::Ptr<_1dcd62c0d_FieldIns>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>&);
inline void _1c2d6417a_check_pair(_1c2d63168_StructLitChecker*, jule::Ptr<_1dcd740d7_FieldExprPair>&, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>&);
inline jule::Bool _1c2d64488_ready_exprs(_1c2d63168_StructLitChecker*, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>&);
inline void _1c2d6470d_check(_1c2d63168_StructLitChecker*, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>&);
struct _1c2d63168_StructLitChecker {
	jule::Ptr<_1c2d70560_Eval> _field_e = jule::Ptr<_1c2d70560_Eval>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	jule::Ptr<_1dcd868e1_StructIns> _field_s = jule::Ptr<_1dcd868e1_StructIns>();
	jule::Slice<jule::Ptr<_1dce31ae0_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1dce31ae0_StructArgExprModel>>();
	

	_1c2d63168_StructLitChecker(void) = default;

	inline bool operator==(_1c2d63168_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1c2d63168_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2d266ae_Var> _1c2d651e2_build_var(_1c2d64c4c_RangeChecker*, jule::Ptr<_1dcd7cb5c_VarDecl>&);
inline void _1c2d653bd_set_size_key(_1c2d64c4c_RangeChecker*);
inline void _1c2d657a8_check_range_expr_validity(_1c2d64c4c_RangeChecker*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d266ae_Var>&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline void _1c2d65995_check_slice(_1c2d64c4c_RangeChecker*);
inline void _1c2d65b71_check_array(_1c2d64c4c_RangeChecker*);
inline void _1c2d65d4c_check_map_key_a(_1c2d64c4c_RangeChecker*);
inline void _1c2d66028_check_map_key_b(_1c2d64c4c_RangeChecker*);
inline void _1c2d66204_check_map(_1c2d64c4c_RangeChecker*);
inline void _1c2d663d0_check_str(_1c2d64c4c_RangeChecker*);
inline jule::Bool _1c2d66644_check(_1c2d64c4c_RangeChecker*);
struct _1c2d64c4c_RangeChecker {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _field_sc = jule::Ptr<_1c2cd9a07_ScopeChecker>();
	jule::Ptr<_1dcd7e7da_RangeKind> _field_rang = jule::Ptr<_1dcd7e7da_RangeKind>();
	jule::Ptr<_1c2cd4a46_RangeIter> _field_kind = jule::Ptr<_1c2cd4a46_RangeIter>();
	jule::Ptr<_1c2d6d9e2_Data> _field_d = jule::Ptr<_1c2d6d9e2_Data>();
	

	_1c2d64c4c_RangeChecker(void) = default;

	inline bool operator==(_1c2d64c4c_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c2d64c4c_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1c2d6738c_prepare_types(_1c2d66dd6_RetTypeChecker*);
inline void _1c2d67612_prepare_exprs(_1c2d66dd6_RetTypeChecker*, jule::Ptr<_1dcd6e38a_Expr>&);
inline void _1c2d677dd_ret_vars(_1c2d66dd6_RetTypeChecker*);
inline void _1c2d679b9_check_exprs(_1c2d66dd6_RetTypeChecker*);
inline jule::Bool _1c2d67cc7_check(_1c2d66dd6_RetTypeChecker*, jule::Ptr<_1dcd6e38a_Expr>&);
struct _1c2d66dd6_RetTypeChecker {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _field_sc = jule::Ptr<_1c2cd9a07_ScopeChecker>();
	jule::Ptr<_1dce3b644_FnIns> _field_f = jule::Ptr<_1dce3b644_FnIns>();
	jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>();
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_model = jule::Any();
	

	_1c2d66dd6_RetTypeChecker(void) = default;

	inline bool operator==(_1c2d66dd6_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c2d66dd6_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d692a1_find_package(_1c2d68c84_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d695ae_select_package(_1c2d68c84_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>);
inline jule::Ptr<_1c2d266ae_Var> _1c2d69966_find_var(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d69d1d_find_type_alias(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5a596_Struct> _1c2d6a1c5_find_struct(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce38993_Fn> _1c2d6a57c_find_fn(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2d6a88a_find_trait(_1c2d68c84_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2c4070a_Enum> _1c2d6ab98_find_enum(_1c2d68c84_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d6aea6_find_type_enum(_1c2d68c84_SymbolTable*, jule::Str);
inline jule::Ptr<_1c2d266ae_Var> _1c2d6b528___find_var(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d6b979___find_type_alias(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1c2d6bd31_def_by_ident(_1c2d68c84_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1c2d6c282_is_duplicated_ident(_1c2d68c84_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1c2d68c84_SymbolTable {
	jule::Ptr<_1db70b542_File> _field_file = jule::Ptr<_1db70b542_File>();
	jule::Slice<_1dce40912_Pass> _field_passes = jule::Slice<_1dce40912_Pass>();
	jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>();
	jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _field_structs = jule::Slice<jule::Ptr<_1dcd5a596_Struct>>();
	jule::Slice<jule::Ptr<_1dce38993_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1dce38993_Fn>>();
	jule::Slice<jule::Ptr<_1c2c3d54e_Trait>> _field_traits = jule::Slice<jule::Ptr<_1c2c3d54e_Trait>>();
	jule::Slice<jule::Ptr<_1c2c4070a_Enum>> _field_enums = jule::Slice<jule::Ptr<_1c2c4070a_Enum>>();
	jule::Slice<jule::Ptr<_1c2c41d05_TypeEnum>> _field_type_enums = jule::Slice<jule::Ptr<_1c2c41d05_TypeEnum>>();
	jule::Slice<jule::Ptr<_1c2cc44d6_Impl>> _field_impls = jule::Slice<jule::Ptr<_1c2cc44d6_Impl>>();
	

	_1c2d68c84_SymbolTable(void) = default;

	inline bool operator==(_1c2d68c84_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_type_enums == _other._field_type_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1c2d68c84_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2d6ddcc_is_nil(_1c2d6d9e2_Data*);
inline jule::Bool _1c2d6e141_is_void(_1c2d6d9e2_Data*);
inline jule::Bool _1c2d6e3a5_is_const(_1c2d6d9e2_Data*);
inline jule::Bool _1c2d6e6b3_good_operand(_1c2d6d9e2_Data*, jule::Ptr<_1c2d6d9e2_Data>&);
struct _1c2d6d9e2_Data {
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1dcdbd1a8_Const> _field_constant = jule::Ptr<_1dcdbd1a8_Const>();
	

	_1c2d6d9e2_Data(void) = default;

	inline bool operator==(_1c2d6d9e2_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1c2d6d9e2_Data _other) { return !this->operator==(_other); }


};
struct _1c2d6ea6a_Value {
	jule::Ptr<_1dcd6e38a_Expr> _field_expr = jule::Ptr<_1dcd6e38a_Expr>();
	jule::Ptr<_1c2d6d9e2_Data> _field_data = jule::Ptr<_1c2d6d9e2_Data>();
	

	_1c2d6ea6a_Value(void) = default;

	inline bool operator==(_1c2d6ea6a_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c2d6ea6a_Value _other) { return !this->operator==(_other); }


};
inline void _1c2d70a6b_push_err(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2d70d8a_push_suggestion(_1c2d70560_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c2d71066_allow_builtin(_1c2d70560_Eval*);
inline void _1c2d71242_disallow_builtin(_1c2d70560_Eval*);
inline jule::Bool _1c2d714a6_is_unsafe(_1c2d70560_Eval*);
inline jule::Bool _1c2d7171a_is_global(_1c2d70560_Eval*);
inline jule::Bool _1c2d719e5_apply_numeric_prefix(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d71c59_lit_nil(_1c2d70560_Eval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72067_lit_str(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72375_lit_bool(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72683_lit_rune(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72991_lit_float(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72c9e_lit_int(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d730ac_lit_num(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d733ba_eval_lit(_1c2d70560_Eval*, jule::Ptr<_1dcd703be_LitExpr>);
inline jule::Any _1c2d736c8_find_builtins(_1c2d70560_Eval*, jule::Str);
inline jule::Any _1c2d73a80_get_def(_1c2d70560_Eval*, jule::Str, jule::Bool);
inline void _1ab3a2c52_push_reference(_1c2d70560_Eval*, jule::Ptr<_1dce3b644_FnIns>&);
inline void _1ab3b77c2_push_reference(_1c2d70560_Eval*, jule::Ptr<_1c2d266ae_Var>&);
inline void _1ab45c03c_push_reference(_1c2d70560_Eval*, jule::Ptr<_1dcd868e1_StructIns>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d74113___eval_enum(_1c2d70560_Eval*, jule::Ptr<_1c2c4070a_Enum>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d744ba_eval_enum(_1c2d70560_Eval*, jule::Ptr<_1c2c4070a_Enum>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d747c8___eval_type_enum(_1c2d70560_Eval*, jule::Ptr<_1c2c41d05_TypeEnum>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d74b80_eval_type_enum(_1c2d70560_Eval*, jule::Ptr<_1c2c41d05_TypeEnum>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d74e8d___eval_struct(_1c2d70560_Eval*, jule::Ptr<_1dcd868e1_StructIns>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d75345_eval_struct(_1c2d70560_Eval*, jule::Ptr<_1dcd868e1_StructIns>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d75653_eval_fn_ins(_1c2d70560_Eval*, jule::Ptr<_1dce3b644_FnIns>);
inline void _1c2d75972_check_deprecated(_1c2d70560_Eval*, jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d75d29_eval_fn(_1c2d70560_Eval*, jule::Ptr<_1dce38993_Fn>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d76214_push_illegal_cycle_error(_1c2d70560_Eval*, jule::Ptr<_1c2d266ae_Var>&, jule::Ptr<_1c2d266ae_Var>&, jule::Str&);
inline jule::Bool _1c2d765cc_check_cross_cycle(_1c2d70560_Eval*, jule::Ptr<_1c2d266ae_Var>&, jule::Str&);
inline jule::Bool _1c2d76984_check_illegal_cycles(_1c2d70560_Eval*, jule::Ptr<_1c2d266ae_Var>&, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d76d3b_eval_var(_1c2d70560_Eval*, jule::Ptr<_1c2d266ae_Var>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d771e3_eval_type_alias(_1c2d70560_Eval*, jule::Ptr<_1c2d9db32_TypeAlias>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d7759a_eval_def(_1c2d70560_Eval*, jule::Any, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d778a8_eval_ident(_1c2d70560_Eval*, jule::Ptr<_1dcd71403_IdentExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d77bb6_eval_unary(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd71b0c_UnaryExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d77ec4_eval_variadic(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd71eb4_VariadicExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d782d2_eval_unsafe(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd70ac8_UnsafeExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d785e0_eval_arr(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd75c43_SliceExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d78a41_eval_exp_slc(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd75c43_SliceExpr>, jule::Ptr<_1c2d9e825_TypeKind>, jule::Any);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d7dbab_eval_slice_expr(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd75c43_SliceExpr>);
inline void _1c2d7deec_check_integer_indexing_by_data(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d7e3c6_indexing_ptr(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline void _1c2d7e78e_indexing_arr(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline void _1c2d7eb57_indexing_slc(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline void _1c2d80020_indexing_map(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline void _1c2d803d8_indexing_str(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline void _1c2d807a1_to_indexing(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline jule::Bool _1c2d80c35_push_generics_from_expr_sub_ident(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd72b96_SubIdentExpr>&, jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>&, jule::Ptr<_1dcd6e38a_Expr>&);
inline jule::Bool _1c2d81142_push_generics_from_data(jule::Ptr<_1c2d70560_Eval>, jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>&, jule::Ptr<_1dcd6e38a_Expr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d81450_eval_ident_decl_from_indexing(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline jule::Bool _1c2d818b2_check_generic_fn(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dce3b644_FnIns>&, jule::Ptr<_1db7061a7_Token>&, jule::Any&);
inline void _1c2d81c03_eval_fn_generic_from_indexing(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd765d4_IndexingExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d82022_eval_indexing(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd765d4_IndexingExpr>);
inline std::tuple<jule::Ptr<_1c2d6d9e2_Data>,jule::Ptr<_1c2d6d9e2_Data>> _1c2d82330_eval_slicing_exprs(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd76bde_SlicingExpr>&);
inline void _1c2d825a5_slicing_arr(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d8296d_slicing_str(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d82dd0_check_slicing(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dcd76bde_SlicingExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d831dd_eval_slicing(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd76bde_SlicingExpr>);
inline void _1c2d835a6_cast_ptr(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d8396e_cast_struct(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d83d37_cast_ref(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d84200_cast_slc(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d8451e_cast_str(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d848d7_cast_int(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d84ca0_cast_num(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d85168_cast_prim(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d85487_cast_constant(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d85850_cast_type_enum(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d85cc3_eval_cast_by_type_n_data(_1c2d70560_Eval*, jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86235_eval_cast_t(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1dcd6e38a_Expr>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86543_eval_cast(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd7236b_CastExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86851_eval_ns_selection(_1c2d70560_Eval*, jule::Ptr<_1dcd72723_NsSelectionExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86cc4_eval_struct_lit_explicit(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd868e1_StructIns>, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d870e3_eval_struct_lit(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd74835_StructLit>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d87401_eval_type(_1c2d70560_Eval*, jule::Ptr<_1dcd69d69_TypeDecl>);
inline void _1c2d87720_call_type_fn(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d87a3e_call_builtin_fn(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d87d80_check_fn_of_concurrent_call(_1c2d70560_Eval*, jule::Ptr<_1dce3b644_FnIns>&, jule::Ptr<_1db7061a7_Token>);
inline void _1c2d8827b_process_exceptional_handler(_1c2d70560_Eval*, jule::Ptr<_1dce3b644_FnIns>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d885ab_call_fn(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d888b9_eval_fn_call(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd73658_FnCallExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d88c71_eval_enum_static(_1c2d70560_Eval*, jule::Ptr<_1c2c4070a_Enum>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d89128_eval_type_enum_static(_1c2d70560_Eval*, jule::Ptr<_1c2c41d05_TypeEnum>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d894d0_eval_struct_static(_1c2d70560_Eval*, jule::Ptr<_1dcd868e1_StructIns>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d89931_eval_trait_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1c2c3d54e_Trait>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d89e2b_eval_struct_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1dcd868e1_StructIns>, jule::Ptr<_1dcd72b96_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8a2d3_eval_slice_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8a68a_eval_array_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8aa42_eval_map_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8ade9_eval_str_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8b207_eval_int_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8b515_eval_uint_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8b823_eval_i8_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8bb31_eval_i16_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8be3e_eval_i32_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8c24c_eval_i64_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8c55a_eval_u8_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8c868_eval_u16_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8cb76_eval_u32_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8ce84_eval_u64_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8d292_eval_f32_type_tatic(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8d5a0_eval_f64_type_static(_1c2d70560_Eval*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8d957_eval_prim_static(_1c2d70560_Eval*, jule::Str, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8dd0e_eval_type_static(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1dcd72b96_SubIdentExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8e1b6_eval_obj_sub_ident(_1c2d70560_Eval*, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1dcd72b96_SubIdentExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8e4c4_eval_sub_ident(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd72b96_SubIdentExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8e7d2_eval_tuple(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd70017_TupleExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8eb89_eval_map(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1c2da9a94_Map>, jule::Ptr<_1dcd74ca8_BraceLit>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8ee97_eval_brace_lit(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd74ca8_BraceLit>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d902a5_eval_anon_fn(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd7bb7d_FnDecl>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d905b3_eval_binop(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd73119_BinopExpr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d908c1_eval_expr_kind(jule::Ptr<_1c2d70560_Eval>, jule::Any);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d90bce_eval(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd6e38a_Expr>);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d90edc_eval_expr(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1dcd6e38a_Expr>);
struct _1c2d70560_Eval {
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Trait<_1c2dba3bd_Lookup> _field_lookup = jule::Trait<_1c2dba3bd_Lookup>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_prefix = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1c2d266ae_Var> _field_owner = jule::Ptr<_1c2d266ae_Var>();
	jule::Ptr<_1dcd62c0d_FieldIns> _field_field = jule::Ptr<_1dcd62c0d_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1c2d70560_Eval(void) = default;

	inline bool operator==(_1c2d70560_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c2d70560_Eval _other) { return !this->operator==(_other); }


};
inline _1c2d91460_UnaryEval static__1c2d91916_new(jule::Ptr<_1c2d70560_Eval>);
inline void _1c2d91ae2_minus(_1c2d91460_UnaryEval*);
inline void _1c2d91cbd_plus(_1c2d91460_UnaryEval*);
inline void _1c2d91e99_caret(_1c2d91460_UnaryEval*);
inline void _1c2d92175_excl(_1c2d91460_UnaryEval*);
inline void _1c2d92351_star(_1c2d91460_UnaryEval*);
inline void _1c2d9252c_amper(_1c2d91460_UnaryEval*);
inline void _1c2d92708_type_decl(_1c2d91460_UnaryEval*);
inline void _1c2d928d4_eval_data(_1c2d91460_UnaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d92bae_eval(_1c2d91460_UnaryEval*, jule::Ptr<_1dcd71b0c_UnaryExpr>);
struct _1c2d91460_UnaryEval {
	jule::Ptr<_1c2d70560_Eval> _field_e = jule::Ptr<_1c2d70560_Eval>();
	jule::Ptr<_1c2d6d9e2_Data> _field_d = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1dcd71b0c_UnaryExpr> _field_u = jule::Ptr<_1dcd71b0c_UnaryExpr>();
	

	_1c2d91460_UnaryEval(void) = default;

	inline bool operator==(_1c2d91460_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c2d91460_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1c2d931ed_BinaryEval static__1c2d937b4_new_plain(jule::Ptr<_1c2d70560_Eval>);
inline _1c2d931ed_BinaryEval static__1c2d93b05_new(jule::Ptr<_1c2d70560_Eval>, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2d93d8b_check_type_compatibility(_1c2d931ed_BinaryEval*);
inline jule::Bool _1c2d94144_check_struct_common_operator_compatibility(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d943db_eval_nil(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d94650_eval_enum(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d948b4_eval_type_enum(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d94b28_eval_sptr(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d94d8c_eval_ptr(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95101_eval_arr(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95365_eval_slc(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d955c9_eval_fn(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9583d_eval_struct(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95aa2_eval_trait(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95d16_eval_any(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9607a_eval_bool(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d962de_eval_str(_1c2d931ed_BinaryEval*);
inline void _1c2d964ba_set_type_to_greater(_1c2d931ed_BinaryEval*);
inline void _1c2d9670c_check_mod_data(_1c2d931ed_BinaryEval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d968d8_mod(_1c2d931ed_BinaryEval*);
inline jule::Bool _1c2d96cb2_numbers_are_compatibile(_1c2d931ed_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d97037_eval_float(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9729b_eval_int(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d97510_eval_prim(_1c2d931ed_BinaryEval*);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d97774_eval_op(_1c2d931ed_BinaryEval*);
inline void _1c2d979e9_eval_const(_1c2d931ed_BinaryEval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d97c6e_check_data(_1c2d931ed_BinaryEval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d97e4a_check_datas(_1c2d931ed_BinaryEval*);
inline void _1c2d981c0_set_model(_1c2d931ed_BinaryEval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d98445_post_eval(_1c2d931ed_BinaryEval*, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d987ec_solve_explicit(_1c2d931ed_BinaryEval*, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d98b0a_eval(_1c2d931ed_BinaryEval*, jule::Ptr<_1dcd73119_BinopExpr>&);
struct _1c2d931ed_BinaryEval {
	jule::Ptr<_1c2d70560_Eval> _field_e = jule::Ptr<_1c2d70560_Eval>();
	jule::Ptr<_1c2d6d9e2_Data> _field_l = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1c2d6d9e2_Data> _field_r = jule::Ptr<_1c2d6d9e2_Data>();
	jule::Ptr<_1db7061a7_Token> _field_op = jule::Ptr<_1db7061a7_Token>();
	

	_1c2d931ed_BinaryEval(void) = default;

	inline bool operator==(_1c2d931ed_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c2d931ed_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1c2d9d0e8_InsGeneric {
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _field_constraint = jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>();
	

	_1c2d9d0e8_InsGeneric(void) = default;

	inline bool operator==(_1c2d9d0e8_InsGeneric _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_constraint == _other._field_constraint;
	}

	inline bool operator!=(_1c2d9d0e8_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1c2d9db32_TypeAlias {
	jule::Ptr<_1dcd7a187_ScopeTree> _field_scope = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1c2da397d_TypeSymbol> _field_kind = jule::Ptr<_1c2da397d_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>();
	

	_1c2d9db32_TypeAlias(void) = default;

	inline bool operator==(_1c2d9db32_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1c2d9db32_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2d9ec21_to_str(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da002e_equals(jule::Ptr<_1c2d9e825_TypeKind>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1c2da04d5_cpp_linked(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da0749_is_nil(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da09ad_void(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da0c22_mutable(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da0e86_nil_compatible(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da11ea_performs_rc(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da145e_supports_cloning(_1c2d9e825_TypeKind*);
inline jule::Bool _1c2da16c3_variadicable(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2da42ec_Prim> _1c2da1937_prim(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2da7a81_Sptr> _1c2da1b9b_sptr(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2dab0e5_Ptr> _1c2da1e10_ptr(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2c4070a_Enum> _1c2da2174_enm(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2da23d8_tenm(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2daa688_Arr> _1c2da264c_arr(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2da84dd_Slc> _1c2da28b1_slc(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1dce3b644_FnIns> _1c2da2b25_fnc(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1dcd868e1_StructIns> _1c2da2d89_strct(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2da30ed_trt(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2da9a94_Map> _1c2da3362_map(_1c2d9e825_TypeKind*);
inline jule::Ptr<_1c2da906b_Tuple> _1c2da35c6_tup(_1c2d9e825_TypeKind*);
struct _1c2d9e825_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1c2d9e3e6_Kind> _field_kind = jule::Trait<_1c2d9e3e6_Kind>();
	

	_1c2d9e825_TypeKind(void) = default;

	inline bool operator==(_1c2d9e825_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2d9e825_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2da3d35_checked(_1c2da397d_TypeSymbol*);
inline void _1c2da4011_remove_kind(_1c2da397d_TypeSymbol*);
struct _1c2da397d_TypeSymbol {
	jule::Ptr<_1dcd69d69_TypeDecl> _field_decl = jule::Ptr<_1dcd69d69_TypeDecl>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_kind = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1c2da397d_TypeSymbol(void) = default;

	inline bool operator==(_1c2da397d_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2da397d_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2da4660_to_str(_1c2da42ec_Prim*);
inline jule::Bool _1c2da496d_equals(jule::Ptr<_1c2da42ec_Prim>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1c2da4de1_is_constraint(_1c2da42ec_Prim*);
inline jule::Bool _1c2da5155_is_i8(_1c2da42ec_Prim*);
inline jule::Bool _1c2da53b9_is_i16(_1c2da42ec_Prim*);
inline jule::Bool _1c2da562d_is_i32(_1c2da42ec_Prim*);
inline jule::Bool _1c2da5892_is_i64(_1c2da42ec_Prim*);
inline jule::Bool _1c2da5b06_is_u8(_1c2da42ec_Prim*);
inline jule::Bool _1c2da5d6a_is_u16(_1c2da42ec_Prim*);
inline jule::Bool _1c2da60ce_is_u32(_1c2da42ec_Prim*);
inline jule::Bool _1c2da6343_is_u64(_1c2da42ec_Prim*);
inline jule::Bool _1c2da65a7_is_f32(_1c2da42ec_Prim*);
inline jule::Bool _1c2da681b_is_f64(_1c2da42ec_Prim*);
inline jule::Bool _1c2da6a80_is_int(_1c2da42ec_Prim*);
inline jule::Bool _1c2da6ce4_is_uint(_1c2da42ec_Prim*);
inline jule::Bool _1c2da7058_is_uintptr(_1c2da42ec_Prim*);
inline jule::Bool _1c2da72bc_is_bool(_1c2da42ec_Prim*);
inline jule::Bool _1c2da7531_is_str(_1c2da42ec_Prim*);
inline jule::Bool _1c2da7795_is_any(_1c2da42ec_Prim*);
struct _1c2da42ec_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1c2da42ec_Prim(void) = default;

	inline bool operator==(_1c2da42ec_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c2da42ec_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2da7de4_to_str(_1c2da7a81_Sptr*);
inline jule::Bool _1c2da8202_equals(jule::Ptr<_1c2da7a81_Sptr>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1c2da7a81_Sptr {
	jule::Ptr<_1c2d9e825_TypeKind> _field_elem = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1c2da7a81_Sptr(void) = default;

	inline bool operator==(_1c2da7a81_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2da7a81_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2da89e9_to_str(_1c2da84dd_Slc*);
inline jule::Bool _1c2da8d07_equals(jule::Ptr<_1c2da84dd_Slc>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1c2da84dd_Slc {
	jule::Ptr<_1c2d9e825_TypeKind> _field_elem = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1c2da84dd_Slc(void) = default;

	inline bool operator==(_1c2da84dd_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2da84dd_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2da93ce_to_str(_1c2da906b_Tuple*);
inline jule::Bool _1c2da96dc_equals(jule::Ptr<_1c2da906b_Tuple>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1c2da906b_Tuple {
	jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>();
	

	_1c2da906b_Tuple(void) = default;

	inline bool operator==(_1c2da906b_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1c2da906b_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2da9e07_to_str(_1c2da9a94_Map*);
inline jule::Bool _1c2daa215_equals(jule::Ptr<_1c2da9a94_Map>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1c2da9a94_Map {
	jule::Ptr<_1c2d9e825_TypeKind> _field_key = jule::Ptr<_1c2d9e825_TypeKind>();
	jule::Ptr<_1c2d9e825_TypeKind> _field_val = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1c2da9a94_Map(void) = default;

	inline bool operator==(_1c2da9a94_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1c2da9a94_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2daa9eb_to_str(_1c2daa688_Arr*);
inline jule::Bool _1c2daad09_equals(jule::Ptr<_1c2daa688_Arr>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1c2daa688_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1c2d9e825_TypeKind> _field_elem = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1c2daa688_Arr(void) = default;

	inline bool operator==(_1c2daa688_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2daa688_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c2dab458_to_str(_1c2dab0e5_Ptr*);
inline jule::Bool _1c2dab766_equals(jule::Ptr<_1c2dab0e5_Ptr>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1c2dabab8_is_unsafe(_1c2dab0e5_Ptr*);
struct _1c2dab0e5_Ptr {
	jule::Ptr<_1c2d9e825_TypeKind> _field_elem = jule::Ptr<_1c2d9e825_TypeKind>();
	

	_1c2dab0e5_Ptr(void) = default;

	inline bool operator==(_1c2dab0e5_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1c2dab0e5_Ptr _other) { return !this->operator==(_other); }


};
struct _1c2dac03b_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1c2dac03b_Referencer(void) = default;

	inline bool operator==(_1c2dac03b_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c2dac03b_Referencer _other) { return !this->operator==(_other); }


};
inline void _1c2dad48d_push_err(_1c2dacc84_TypeChecker*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c2dad669_allow_builtin(_1c2dacc84_TypeChecker*);
inline void _1c2dad845_disallow_builtin(_1c2dacc84_TypeChecker*);
inline jule::Ptr<_1c2da42ec_Prim> _1c2dadb53_build_prim(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&);
inline void _1ab6d66b2_push_reference(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1ab6d975e_push_reference(_1c2dacc84_TypeChecker*, jule::Ptr<_1c2c3d54e_Trait>&);
inline void _1c2dae14d_push_reference_by_kind(_1c2dacc84_TypeChecker*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline void _1c2dae516_push_cycle_error(_1c2dacc84_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1c2dae8bd_check_cross_cycle(_1c2dacc84_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1c2daec75_check_illegal_cycles(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1c2d9e3e6_Kind> _1c2db012c_from_type_alias(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Ptr<_1c2d9db32_TypeAlias>&);
inline jule::Ptr<_1c2c4070a_Enum> _1c2db04d4_from_enum(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Ptr<_1c2c4070a_Enum>&);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2db088b_from_type_enum(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Ptr<_1c2c41d05_TypeEnum>&);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2db0c43_from_trait(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Ptr<_1c2c3d54e_Trait>&);
inline jule::Bool _1c2db10ea_check_struct_ins(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd868e1_StructIns>&, jule::Ptr<_1db7061a7_Token>&);
inline void _1c2db1392_append_used_struct_reference(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Ptr<_1dcd868e1_StructIns> _1c2db175a_build_struct_instance(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Ptr<_1dcd868e1_StructIns> _1c2db1b12_from_struct(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&, jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Trait<_1c2d9e3e6_Kind> _1c2db1e20_get_def(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>&);
inline jule::Trait<_1c2d9e3e6_Kind> _1c2db222d_build_ident(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6a430_IdentTypeDecl>);
inline jule::Trait<_1c2d9e3e6_Kind> _1c2db253b_build_sub_ident(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>);
inline jule::Ptr<_1c2da7a81_Sptr> _1c2db2849_build_sptr_from_type(_1c2dacc84_TypeChecker*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Ptr<_1c2da7a81_Sptr> _1c2db2b57_build_sptr(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6b222_SptrTypeDecl>);
inline jule::Ptr<_1c2dab0e5_Ptr> _1c2db2e65_build_ptr_from_type(_1c2dacc84_TypeChecker*, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Ptr<_1c2dab0e5_Ptr> _1c2db3273_build_ptr(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6bbe5_PtrTypeDecl>);
inline jule::Ptr<_1c2da84dd_Slc> _1c2db3581_build_slc(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6b61d_SlcTypeDecl>);
inline jule::Ptr<_1c2daa688_Arr> _1c2db388e_build_arr(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6c377_ArrTypeDecl>);
inline jule::Ptr<_1c2da9a94_Map> _1c2db3b9c_build_map(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6cac5_MapTypeDecl>);
inline jule::Ptr<_1c2da906b_Tuple> _1c2db3eaa_build_tuple(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6b909_TupleTypeDecl>);
inline jule::Bool _1c2db42b8_check_fn_types(_1c2dacc84_TypeChecker*, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Ptr<_1dce3b644_FnIns> _1c2db45c6_build_fn(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd7bb7d_FnDecl>);
inline jule::Trait<_1c2d9e3e6_Kind> _1c2db48d4_build_by_namespace(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd6ae36_NamespaceTypeDecl>);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2db4be2_build(_1c2dacc84_TypeChecker*, jule::Any&);
inline jule::Ptr<_1c2d9e825_TypeKind> _1c2db5000_check_decl(_1c2dacc84_TypeChecker*, jule::Ptr<_1dcd69d69_TypeDecl>&);
inline void _1c2db5275_check(_1c2dacc84_TypeChecker*, jule::Ptr<_1c2da397d_TypeSymbol>&);
struct _1c2dacc84_TypeChecker {
	jule::Ptr<_1c2d099a0_Sema> _field_s = jule::Ptr<_1c2d099a0_Sema>();
	jule::Trait<_1c2dba3bd_Lookup> _field_lookup = jule::Trait<_1c2dba3bd_Lookup>();
	jule::Ptr<_1c2dac03b_Referencer> _field_referencer = jule::Ptr<_1c2dac03b_Referencer>();
	jule::Ptr<_1dce3e548_ReferenceStack> _field_refers = jule::Ptr<_1dce3e548_ReferenceStack>();
	jule::Ptr<_1db7061a7_Token> _field_error_token = jule::Ptr<_1db7061a7_Token>();
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1c2d9db32_TypeAlias> _field_owner_alias = jule::Ptr<_1c2d9db32_TypeAlias>();
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1c2dacc84_TypeChecker(void) = default;

	inline bool operator==(_1c2dacc84_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1c2dacc84_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1c2db58d5___ident_type_decl(jule::Str&, jule::Ptr<_1dcd6a430_IdentTypeDecl>);
inline jule::Bool static__1c2db5c26_exist(jule::Str&, jule::Any&);
struct _1c2db5495_IdentTypeLookup {
	

	_1c2db5495_IdentTypeLookup(void) = default;

	inline bool operator==(_1c2db5495_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1c2db5495_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c437d286_FileInfo {
	jule::Ptr<_1dcd355c6_Ast> _field_ast = jule::Ptr<_1dcd355c6_Ast>();
	jule::Slice<_207b80eb7_Log> _field_errors = jule::Slice<_207b80eb7_Log>();
	

	_1c437d286_FileInfo(void) = default;

	inline bool operator==(_1c437d286_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1c437d286_FileInfo _other) { return !this->operator==(_other); }


};
struct _1c43c6a1b_stmt {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_tokens = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1c43c6a1b_stmt(void) = default;

	inline bool operator==(_1c43c6a1b_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1c43c6a1b_stmt _other) { return !this->operator==(_other); }


};
inline void _1c43c79c8_stop(_1c43c7346_ScopeParser*);
inline jule::Bool _1c43c7c3c_stopped(_1c43c7346_ScopeParser*);
inline jule::Bool _1c43c7ea1_finished(_1c43c7346_ScopeParser*);
inline jule::Bool _1c43c8215_is_last_st(_1c43c7346_ScopeParser*);
inline void _1c43c8534_push_err(_1c43c7346_ScopeParser*, jule::Ptr<_1db7061a7_Token>, jule::Str);
inline void _1c43c8853_push_suggestion(_1c43c7346_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c43c8ac8_insert_as_next(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1c43c6a1b_stmt> _1c43c8d3c_next(_1c43c7346_ScopeParser*);
inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43c91e4_build_scope(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43c9502_build_var_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd7d014_RetSt> _1c43c9810_build_ret_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7d674_Iter> _1c43c9b1d_build_while_next_iter(_1c43c7346_ScopeParser*, jule::Ptr<_1c43c6a1b_stmt>&);
inline jule::Ptr<_1dcd7de49_WhileKind> _1c43c9e2b_build_while_iter_kind(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43ca25b_get_range_kind_keys_tokens(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43ca57a_build_range_kind_key(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>> _1c43ca888_build_range_kind_keys(_1c43c7346_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>&);
inline void _1c43cabc9_setup_range_kind_keys_plain(_1c43c7346_ScopeParser*, jule::Ptr<_1dcd7e7da_RangeKind>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43cb02b_setup_range_kind_keys_explicit(_1c43c7346_ScopeParser*, jule::Ptr<_1dcd7e7da_RangeKind>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43cb35b_setup_range_kind_keys(_1c43c7346_ScopeParser*, jule::Ptr<_1dcd7e7da_RangeKind>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd7e7da_RangeKind> _1c43cb7ac_build_range_iter_kind(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Any _1c43cbb64_build_common_iter_kind(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Ptr<_1dcd7d674_Iter> _1c43cbe72_build_common_iter(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7d674_Iter> _1c43cc280_build_iter_st(_1c43c7346_ScopeParser*, jule::Ptr<_1c43c6a1b_stmt>&);
inline jule::Ptr<_1dcd7eb92_BreakSt> _1c43cc58d_build_break_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd80049_ContSt> _1c43cc89b_build_cont_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd804bc_If> _1c43ccba9_build_if(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd80874_Else> _1c43cceb7_build_else(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd80ce7_Conditional> _1c43cd2c5_build_if_else_chain(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd70e80_CoExpr> _1c43cd5d3_build_co_call_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd77bac_GotoSt> _1c43cd8e1_build_goto_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd77e98_FallSt> _1c43cdbee_build_fall_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd814bd_TypeAliasDecl> _1c43ce00c_build_type_alias_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43ce46e_push_case_expr(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Ptr<_1db7061a7_Token>, jule::Bool, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>&);
inline jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _1c43ce826_build_case_exprs(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Bool);
inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43ceb34_build_case_scope(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline std::tuple<jule::Ptr<_1dcd81941_Case>,jule::Bool> _1c43ceedb_build_case(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1dcd81941_Case>>,jule::Ptr<_1dcd80874_Else>> _1c43d0393_build_cases(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Bool);
inline jule::Ptr<_1dcd82117_MatchCase> _1c43d06a1_build_match_case(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43d09ae_build_scope_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd77805_LabelSt> _1c43d0cbc_build_label_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1c43d10ca_build_id_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1c43dea56_AssignInfo> _1c43d13d8_build_assign_info(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd785a3_AssignLeft> _1c43d16e6_build_assign_l(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1dcd785a3_AssignLeft>> _1c43d1a04_build_assign_ls(_1c43c7346_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>&);
inline std::tuple<jule::Ptr<_1dcd78ae2_AssignSt>,jule::Bool> _1c43d1d12_build_plain_assign(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline std::tuple<jule::Ptr<_1dcd78ae2_AssignSt>,jule::Bool> _1c43d2120_build_decl_assign(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline std::tuple<jule::Ptr<_1dcd78ae2_AssignSt>,jule::Bool> _1c43d242d_build_assign_st(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd6ec2b_UseExpr> _1c43d273b_build_use_expr(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43d2a49_build_st(_1c43c7346_ScopeParser*, jule::Ptr<_1c43c6a1b_stmt>&);
inline void _1c43d2d68_build(_1c43c7346_ScopeParser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1dcd7a187_ScopeTree>&);
struct _1c43c7346_ScopeParser {
	jule::Ptr<_1c43e30cb_Parser> _field_p = jule::Ptr<_1c43e30cb_Parser>();
	jule::Ptr<_1dcd7a187_ScopeTree> _field_s = jule::Ptr<_1dcd7a187_ScopeTree>();
	jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1c43c6a1b_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1c43c7346_ScopeParser(void) = default;

	inline bool operator==(_1c43c7346_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c43c7346_ScopeParser _other) { return !this->operator==(_other); }


};
inline void _1c43d4ee1_push_err(_1c43d46d8_ExprBuilder*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c43d5310_push_suggestion(_1c43d46d8_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1dcd70017_TupleExpr> _1c43d561d_build_tuple(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>&);
inline jule::Ptr<_1dcd703be_LitExpr> _1c43d592b_build_lit(_1c43d46d8_ExprBuilder*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c43d5c39_build_primitive_type(_1c43d46d8_ExprBuilder*, jule::Ptr<_1db7061a7_Token>&);
inline jule::Any _1c43d6047_build_single(_1c43d46d8_ExprBuilder*, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1dcd71403_IdentExpr> _1c43d6355_build_cpp_linked_ident(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd71b0c_UnaryExpr> _1c43d6663_build_unary(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd72b96_SubIdentExpr> _1c43d6971_build_obj_sub_ident(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd72723_NsSelectionExpr> _1c43d6c7e_build_ns_sub_ident(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c43d708c_build_type(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43d739a_build_sub_ident(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd71eb4_VariadicExpr> _1c43d76a8_build_variadic(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Any _1c43d79b6_build_op_right(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd6e676_RangeExpr> _1c43d7ce6_build_between_parentheses(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7236b_CastExpr> _1c43d8115_try_build_cast(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43d84cd_push_arg(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Ptr<_1db7061a7_Token>);
inline jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _1c43d87db_build_args(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _1c43d8ae9_build_call_generics(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd73658_FnCallExpr> _1c43d904a_build_fn_call(_1c43d46d8_ExprBuilder*, jule::Ptr<_1db7061a7_Token>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43d937a_build_parentheses_range(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd70ac8_UnsafeExpr> _1c43d9699_build_unsafe_expr(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43d99a7_build_anon_fn(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43d9cb5_build_unsafe(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43da17d_push_range_lit_part(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Ptr<_1db7061a7_Token>, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43da4ad_get_brace_range_lit_expr_parts(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd740d7_FieldExprPair> _1c43da7cc_build_field_expr_pair(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd6e38a_Expr> _1c43daada_build_struct_lit_expr(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _1c43dade8_build_struct_lit_exprs(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd74835_StructLit> _1c43db228_build_typed_struct_literal(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd6e38a_Expr> _1c43db547_build_brace_lit_part(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd74ca8_BraceLit> _1c43db855_build_brace_lit(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43dbb63_build_brace_range(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43dbe71_get_enumerable_parts(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd75c43_SliceExpr> _1c43dc27e_build_slice(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd765d4_IndexingExpr> _1c43dc6d0_build_indexing(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Ptr<_1db7061a7_Token>);
inline jule::Ptr<_1dcd76bde_SlicingExpr> _1c43dcc74_build_slicing(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1db7061a7_Token>&, jule::Ptr<_1db7061a7_Token>);
inline jule::Any _1c43dd082_build_bracket_range(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Any _1c43dd390_build_data(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd73119_BinopExpr> _1c43dd747_build_binop(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64);
inline jule::Any _1c43dda55_build(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43ddd63_build_kind(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd6e38a_Expr> _1c43de171_build_from_tokens(_1c43d46d8_ExprBuilder*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
struct _1c43d46d8_ExprBuilder {
	jule::Ptr<_1c43e30cb_Parser> _field_p = jule::Ptr<_1c43e30cb_Parser>();
	

	_1c43d46d8_ExprBuilder(void) = default;

	inline bool operator==(_1c43d46d8_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1c43d46d8_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1c43dea56_AssignInfo {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_l = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_r = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Ptr<_1db7061a7_Token> _field_setter = jule::Ptr<_1db7061a7_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1c43dea56_AssignInfo(void) = default;

	inline bool operator==(_1c43dea56_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1c43dea56_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1c43e340b_stop(_1c43e30cb_Parser*);
inline jule::Bool _1c43e3670_stopped(_1c43e30cb_Parser*);
inline void _1c43e3a38_push_err(_1c43e30cb_Parser*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c43e3d57_push_suggestion(_1c43e30cb_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1dcd6e38a_Expr> _1c43e4165_build_expr(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd36671_Directive> _1c43e4473_build_directive(_1c43e30cb_Parser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43e46e8_push_directive(_1c43e30cb_Parser*, jule::Ptr<_1dcd36671_Directive>);
inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43e4aa0_build_scope(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1db7061a7_Token>);
inline std::tuple<jule::Ptr<_1dcd69d69_TypeDecl>,jule::Bool> _1c43e5001___build_type(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1dcd69d69_TypeDecl>,jule::Bool> _1c43e5452_build_type(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1dcd814bd_TypeAliasDecl> _1c43e5760_build_type_alias_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43e5aa1_build_var_type_and_expr(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1dcd7cb5c_VarDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43e5d59_build_var_common(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1dcd7cb5c_VarDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43e6222_build_var_begin(_1c43e30cb_Parser*, jule::Ptr<_1dcd7cb5c_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43e6530_build_var(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7744d_GenericDecl> _1c43e683d_build_generic(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _1c43e6be5_build_generics(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Ptr<_1db7061a7_Token>&);
inline jule::Ptr<_1dcd7a85d_ParamDecl> _1c43e7003_build_self_param(_1c43e30cb_Parser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43e73bb_param_type_begin(_1c43e30cb_Parser*, jule::Ptr<_1dcd7a85d_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43e76da_build_param_type(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1dcd7a85d_ParamDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43e7a09_build_param_body(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1dcd7a85d_ParamDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7a85d_ParamDecl> _1c43e7d17_build_param(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43e808c_check_params(_1c43e30cb_Parser*, jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>> _1c43e8444_build_params(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1dcd6ce7c_RetTypeDecl>,jule::Bool> _1c43e87eb_build_multi_ret_type(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1dcd6ce7c_RetTypeDecl>,jule::Bool> _1c43e8ba3_build_ret_type(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64&);
inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43e9104_build_fn_prototype(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43e9555_build_fn(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1db7061a7_Token>> _1c43e9863_get_use_decl_selectors(_1c43e30cb_Parser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43e9b82_build_cpp_use_decl(_1c43e30cb_Parser*, jule::Ptr<_1dcd828a9_UseDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43e9ea1_build_std_use_decl(_1c43e30cb_Parser*, jule::Ptr<_1dcd828a9_UseDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43ea2c0_build_ident_use_decl(_1c43e30cb_Parser*, jule::Ptr<_1dcd828a9_UseDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c43ea5de_parse_use_decl(_1c43e30cb_Parser*, jule::Ptr<_1dcd828a9_UseDecl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd828a9_UseDecl> _1c43ea996_build_use_decl(_1c43e30cb_Parser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>, jule::Bool);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c43ead70_build_type_enum_item_kind(jule::Ptr<_1c43e30cb_Parser>, jule::I64&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>> _1c43eb18e_build_type_enum_items(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd84559_TypeEnumDecl> _1c43eb49c_build_type_enum_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd6e38a_Expr> _1c43eb854_build_enum_item_expr(jule::Ptr<_1c43e30cb_Parser>, jule::I64&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>> _1c43ebb62_build_enum_items(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd83855_EnumDecl> _1c43ebe70_build_enum_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Any _1c43ec27d_build_node_enum_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd84aa9_FieldDecl> _1c43ec58b_build_field(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>> _1c43ec8bb_build_struct_decl_fields(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd85417_StructDecl> _1c43ecbda_build_struct_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c43ece60_check_method_receiver(_1c43e30cb_Parser*, jule::Ptr<_1dcd7bb7d_FnDecl>&);
inline jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>> _1c43ed26d_build_trait_methods(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd85a22_TraitDecl> _1c43ed57b_build_trait_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43ed889_build_cpp_link_fn(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43edb97_build_cpp_link_var(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd85417_StructDecl> _1c43edea5_build_cpp_link_struct(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd814bd_TypeAliasDecl> _1c43ee2d5_build_cpp_link_type_alias(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd828a9_UseDecl> _1c43ee604_build_cpp_link_use(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Any _1c43ee912_build_cpp_link(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43eec20_get_method(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c440003e_parse_impl_body(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1dcd8612c_Impl>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd8612c_Impl> _1c440034c_build_impl(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Any _1c440065a_build_node_data(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c4400979_apply_fn_meta(_1c43e30cb_Parser*, jule::Ptr<_1dcd7bb7d_FnDecl>&, jule::Bool);
inline void _1c4400c98_apply_meta(_1c43e30cb_Parser*, _1dcd36275_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _1c44010c8_build_general_scope_node_data(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline void _1c440135e_push_use_decl(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1dcd828a9_UseDecl>&);
inline jule::Bool _1c440166c_push_meta_nodes(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline _1dcd36275_Node _1c440197a_parse_node(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c4401c00_append_node(jule::Ptr<_1c43e30cb_Parser>, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c4402162_remove_range(_1c43e30cb_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::I64>&);
inline void _1c440254c_push_wrong_order_close_err(_1c43e30cb_Parser*, jule::Ptr<_1db7061a7_Token>&, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::I64>&);
inline void _1c44029c0_push_range_close(_1c43e30cb_Parser*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Slice<jule::I64>&);
inline void _1c4402c45_check_ranges(_1c43e30cb_Parser*, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline void _1c4402eba_parse(jule::Ptr<_1c43e30cb_Parser>, jule::Ptr<_1db70b542_File>&);
struct _1c43e30cb_Parser {
	jule::Ptr<_1dcd355c6_Ast> _field_ast = jule::Ptr<_1dcd355c6_Ast>();
	jule::Slice<jule::Ptr<_1dcd36671_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dcd36671_Directive>>();
	jule::Slice<_207b80eb7_Log> _field_errors = jule::Slice<_207b80eb7_Log>();
	

	_1c43e30cb_Parser(void) = default;

	inline bool operator==(_1c43e30cb_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1c43e30cb_Parser _other) { return !this->operator==(_other); }


};
inline void _1c4404a49_push_err(_1c44044a5_TypeBuilder*, jule::Ptr<_1db7061a7_Token>, jule::Str);
inline void _1c4404d68_push_suggestion(_1c44044a5_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44050cc_build_prim(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4405341_build_namespace(_1c44044a5_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _1c44055a5_build_generics(_1c44044a5_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c4405819_ident_generics(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4405a7d_build_ident(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4405ce2_build_cpp_link(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406056_build_fn(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44062ba_build_ptr(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c440652e_build_sptr(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406793_build_op(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406a07_build_slc(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406c6b_build_arr(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4407123_build_map(_1c44044a5_TypeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4407387_build_enumerable(_1c44044a5_TypeBuilder*);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44075eb_step(_1c44044a5_TypeBuilder*);
inline std::tuple<jule::Ptr<_1dcd69d69_TypeDecl>,jule::Bool> _1c4407860_build(_1c44044a5_TypeBuilder*);
struct _1c44044a5_TypeBuilder {
	jule::Ptr<_1c43e30cb_Parser> _field_p = jule::Ptr<_1c43e30cb_Parser>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _field_tokens = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1c44044a5_TypeBuilder(void) = default;

	inline bool operator==(_1c44044a5_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1c44044a5_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1c3b4d1a5_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1c3b4d1a5_CompileInfo(void) = default;

	inline bool operator==(_1c3b4d1a5_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1c3b4d1a5_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1c3b4ea58_push_err(_1c3b4e508_DirectiveEval*, jule::Ptr<_1db7061a7_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c3b4ee10_split_operans(_1c3b4e508_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Bool _1c3b5021d_eval_directive_ident(_1c3b4e508_DirectiveEval*, jule::Str);
inline jule::Bool _1c3b5052b_eval_directive_part(_1c3b4e508_DirectiveEval*, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Bool _1c3b50790_eval(_1c3b4e508_DirectiveEval*);
struct _1c3b4e508_DirectiveEval {
	jule::Slice<_207b80eb7_Log> _field_logs = jule::Slice<_207b80eb7_Log>();
	jule::Ptr<_1dcd36671_Directive> _field_d = jule::Ptr<_1dcd36671_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c3b4e508_DirectiveEval(void) = default;

	inline bool operator==(_1c3b4e508_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c3b4e508_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c4378d75_JuleImporter> static__1c41a807d_new(_1c3b4d1a5_CompileInfo);
inline jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>> _1c41b8225_all_packages(_1c4378d75_JuleImporter*);
inline void _1c41c36b4_set_mod_path(_1c4378d75_JuleImporter*, jule::Str);
inline jule::Str _1c41d4351_get_mod_path(_1c4378d75_JuleImporter*);
inline jule::Str _1c41d9d18_mod_by_id(_1c4378d75_JuleImporter*, jule::I64);
inline jule::Ptr<_1c2d01854_ImportInfo> _1c41eea75_get_import(_1c4378d75_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1dcd355c6_Ast>>,jule::Slice<_207b80eb7_Log>> _1c420ee1a_import_package(_1c4378d75_JuleImporter*, jule::Str, jule::Bool);
inline void _1c4234c86_imported(_1c4378d75_JuleImporter*, jule::Ptr<_1c2d01854_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_207b80eb7_Log>> _1c424e212_is_pass_build_directives(_1c4378d75_JuleImporter*, jule::Ptr<_1dcd355c6_Ast>&);
struct _1c4378d75_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c4378d75_JuleImporter(void) = default;

	inline bool operator==(_1c4378d75_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c4378d75_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1c4407a4c_OrderedDefines {
	jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _field_structs = jule::Slice<jule::Ptr<_1dcd5a596_Struct>>();
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_globals = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	

	_1c4407a4c_OrderedDefines(void) = default;

	inline bool operator==(_1c4407a4c_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1c4407a4c_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1abc98e83_is_common_ordered(jule::Slice<jule::Ptr<_1dcd5a596_Struct>>&, jule::Ptr<_1dcd5a596_Struct>);
inline jule::Bool _1abca2343_is_common_ordered(jule::Slice<jule::Ptr<_1c2d266ae_Var>>&, jule::Ptr<_1c2d266ae_Var>);
inline void _1abc94ec3_order_common(jule::Slice<jule::Ptr<_1dcd5a596_Struct>>&);
inline void _1abc9580e_order_common(jule::Slice<jule::Ptr<_1c2d266ae_Var>>&);
inline void static__1c4377b32_order_structures(jule::Slice<jule::Ptr<_1dcd5a596_Struct>>&);
inline void static__1c437e2ed_order_vars(jule::Slice<jule::Ptr<_1c2d266ae_Var>>&);
struct _1c4407c39_DefineOrderer {
	

	_1c4407c39_DefineOrderer(void) = default;

	inline bool operator==(_1c4407c39_DefineOrderer _other) { return true; }

	inline bool operator!=(_1c4407c39_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1a944ca8a_LiveTable {
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _field_vars = jule::Slice<jule::Ptr<_1c2d266ae_Var>>();
	jule::Slice<jule::Ptr<_1dce3b644_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1dce3b644_FnIns>>();
	jule::Slice<jule::Ptr<_1dcd868e1_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1dcd868e1_StructIns>>();
	jule::Slice<jule::Ptr<_1c2c3d54e_Trait>> _field_traits = jule::Slice<jule::Ptr<_1c2c3d54e_Trait>>();
	

	_1a944ca8a_LiveTable(void) = default;

	inline bool operator==(_1a944ca8a_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1a944ca8a_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1a947eb99_optimize_child(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd2d1e_Scope>&);
inline void _1a947ee41_optimize_body_child_exceptional(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd2d1e_Scope>&);
inline void _1a94801c7_optimize_body_child(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd2d1e_Scope>&);
inline void _1a948044c_optimize_expr_model(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Any&);
inline void _1a9480628_eliminate_followed(_1a947e6c1_ScopeDeadCode*);
inline void _1a948089d_push_goto(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd58c1_GotoSt>);
inline void _1a9480b23_push_label(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd55d5_Label>);
inline void _1a9480d98_optimize_range_iter(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd4a46_RangeIter>);
inline void _1a948111d_optimize_while_iter(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd4161_WhileIter>);
inline void _1a9481393_optimize_inf_iter(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd3bdd_InfIter>);
inline void _1a9481618_optimize_conditional(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd3902_Conditional>);
inline void _1a948188d_optimize_match(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd6ae2_Match>);
inline void _1a9481b13_optimize_assign(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd61eb_Assign>);
inline void _1a9481d88_optimize_multi_assign(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Ptr<_1c2cd65a3_MultiAssign>);
inline void _1a948210d_optimize_stmt(jule::Ptr<_1a947e6c1_ScopeDeadCode>, jule::Any);
inline void _1a94822d9_optimize_stmts(jule::Ptr<_1a947e6c1_ScopeDeadCode>);
struct _1a947e6c1_ScopeDeadCode {
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _field_parent = jule::Ptr<_1a947e6c1_ScopeDeadCode>();
	jule::Ptr<_1c2cd2d1e_Scope> _field_s = jule::Ptr<_1c2cd2d1e_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2cd55d5_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c2cd55d5_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c2cd58c1_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c2cd58c1_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1a947e6c1_ScopeDeadCode(void) = default;

	inline bool operator==(_1a947e6c1_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a947e6c1_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a948365e_ExprDeadCode static__1a9483c58_new(jule::Ptr<_1a947e6c1_ScopeDeadCode>&);
inline void _1a9483ecd_binary(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce31716_BinopExprModel>);
inline void _1a9484253_unary(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce31903_UnaryExprModel>);
inline void _1a94844c8_structure_lit(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce31ccc_StructLitExprModel>);
inline void _1a948474d_alloc_structure(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce31eb9_AllocStructLitExprModel>);
inline void _1a94849c3_casting(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce321a6_CastingExprModel>);
inline void _1a9484c48_args(_1a948365e_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1a9484ebd_func_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce32393_FnCallExprModel>);
inline void _1a9485243_slice(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce32580_SliceExprModel>);
inline void _1a94854b8_array(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce33a04_ArrayExprModel>);
inline void _1a948573d_indexing(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce3276c_IndexingExprModel>);
inline void _1a94859b3_anon_func(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce32959_AnonFnExprModel>);
inline void _1a9485c38_map(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce32d33_MapExprModel>);
inline void _1a9485ead_slicing(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce33020_SlicingExprModel>);
inline void _1a9486233_trait_sub(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce3320c_TraitSubIdentExprModel>);
inline void _1a94864a8_structure_sub(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce3362a_StructSubIdentExprModel>);
inline void _1a948672d_common_sub(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>);
inline void _1a94869a3_tuple(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce340ba_TupleExprModel>);
inline void _1a9486c28_new_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>);
inline void _1a9486e9d_out_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>);
inline void _1a9487223_outln_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>);
inline void _1a9487498_panic_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>);
inline void _1a948771d_assert_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>);
inline void _1a9487993_error_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>);
inline void _1a9487c18_make_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>);
inline void _1a9487e8d_append_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>);
inline void _1a9488213_clone_call(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>);
inline void _1a9488488_sizeof(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce333e9_SizeofExprModel>);
inline void _1a948870d_alignof(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce35b5a_AlignofExprModel>);
inline void _1a9488983_integrated_to_str(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce36034_IntegratedToStrExprModel>);
inline void _1a9488c08_free(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce3640d_FreeExprModel>);
inline void _1a9488e7d_backend_emit(_1a948365e_ExprDeadCode*, jule::Ptr<_1dce36221_BackendEmitExprModel>);
inline void _1a9489203_optimize(_1a948365e_ExprDeadCode*, jule::Any&);
struct _1a948365e_ExprDeadCode {
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _field_s = jule::Ptr<_1a947e6c1_ScopeDeadCode>();
	

	_1a948365e_ExprDeadCode(void) = default;

	inline bool operator==(_1a948365e_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a948365e_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c2e60b17_UnsafeBinopExprModel {
	jule::Ptr<_1dce31716_BinopExprModel> _field_node = jule::Ptr<_1dce31716_BinopExprModel>();
	

	_1c2e60b17_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1c2e60b17_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1c2e60b17_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c2e60e36_UnsafeIndexingExprModel {
	jule::Ptr<_1dce3276c_IndexingExprModel> _field_node = jule::Ptr<_1dce3276c_IndexingExprModel>();
	

	_1c2e60e36_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1c2e60e36_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1c2e60e36_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c2e612ee_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1dce32580_SliceExprModel> _field_elems = jule::Ptr<_1dce32580_SliceExprModel>();
	

	_1c2e612ee_PushToSliceExprModel(void) = default;

	inline bool operator==(_1c2e612ee_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1c2e612ee_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c2e618b5_MutSlicingExprModel {
	jule::Ptr<_1db7061a7_Token> _field_token = jule::Ptr<_1db7061a7_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1c2e618b5_MutSlicingExprModel(void) = default;

	inline bool operator==(_1c2e618b5_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1c2e618b5_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c2e61c5b_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1c2e61c5b_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1c2e61c5b_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1c2e61c5b_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c2e62dd3_ScopeOptimizer> static__1c2e63433_new(jule::Ptr<_1c2cd2d1e_Scope>);
inline void _1c2e636a8_set_current_stmt(_1c2e62dd3_ScopeOptimizer*, jule::Any);
inline void _1c2e6392d_optimize_data(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2d6d9e2_Data>);
inline void _1c2e63ba3_optimize_var(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2d266ae_Var>);
inline void _1c2e63e28_optimize_conditional(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd3902_Conditional>);
inline void _1c2e64313_build_default_constat_true_case(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd763c_Case>, jule::I64&, jule::Ptr<_1c2cd6ae2_Match>&);
inline void _1c2e64522_optimize_match(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd6ae2_Match>);
inline void _1c2e64797_optimize_range_iter(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd4a46_RangeIter>);
inline void _1c2e64a1c_optimize_while_iter(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd4161_WhileIter>);
inline jule::Bool _1c2e64d2a_substr(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd61eb_Assign>);
inline jule::Bool _1c2e65138_str_insert(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd61eb_Assign>);
inline jule::Bool _1c2e65446_str_assign(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd61eb_Assign>);
inline void _1c2e656bb_optimize_assign(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd61eb_Assign>);
inline void _1c2e65941_optimize_multi_assign(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd65a3_MultiAssign>);
inline void _1c2e65bb6_optimize_ret(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd8165_RetSt>);
inline void _1c2e65e3b_optimize_stmt(_1c2e62dd3_ScopeOptimizer*, jule::Any);
inline void _1c2e661b1_optimize_child(_1c2e62dd3_ScopeOptimizer*, jule::Ptr<_1c2cd2d1e_Scope>);
inline void _1c2e6638c_optimize(_1c2e62dd3_ScopeOptimizer*);
struct _1c2e62dd3_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1c2cd2d1e_Scope> _field_scope = jule::Ptr<_1c2cd2d1e_Scope>();
	

	_1c2e62dd3_ScopeOptimizer(void) = default;

	inline bool operator==(_1c2e62dd3_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c2e62dd3_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1c2e689dd_optimize(jule::Any&);
inline jule::Bool _1c2e68ceb_str_cond(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce31716_BinopExprModel>);
inline void _1c2e69071_binary(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce31716_BinopExprModel>);
inline void _1c2e692e6_unary(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce31903_UnaryExprModel>);
inline void _1c2e6956b_structure_lit(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce31ccc_StructLitExprModel>);
inline void _1c2e697e1_alloc_structure(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce31eb9_AllocStructLitExprModel>);
inline void _1c2e69a66_casting(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce321a6_CastingExprModel>);
inline void _1c2e69cdb_args(_1c2e68515_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1c2e6a061_scope(_1c2e68515_ExprOptimizer*, jule::Ptr<_1c2cd2d1e_Scope>&);
inline void _1c2e6a2d6_func_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce32393_FnCallExprModel>);
inline void _1c2e6a55b_slice(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce32580_SliceExprModel>);
inline void _1c2e6a7d1_array(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce33a04_ArrayExprModel>);
inline void _1c2e6aa56_indexing(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce3276c_IndexingExprModel>);
inline void _1c2e6accb_anon_func(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce32959_AnonFnExprModel>);
inline void _1c2e6b051_map(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce32d33_MapExprModel>);
inline void _1c2e6b2c6_slicing(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce33020_SlicingExprModel>);
inline void _1c2e6b54b_trait_sub(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce3320c_TraitSubIdentExprModel>);
inline void _1c2e6b7c1_structure_sub(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce3362a_StructSubIdentExprModel>);
inline void _1c2e6ba46_common_sub(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>);
inline void _1c2e6bcbb_tuple(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce340ba_TupleExprModel>);
inline void _1c2e6c041_new_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>);
inline void _1c2e6c2b6_out_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>);
inline void _1c2e6c53b_outln_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>);
inline void _1c2e6c7b1_panic_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>);
inline void _1c2e6ca36_assert_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>);
inline void _1c2e6ccab_error_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>);
inline void _1c2e6d031_make_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>);
inline void _1c2e6d2a6_append_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>);
inline void _1c2e6d52b_clone_call(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>);
inline void _1c2e6d7a1_sizeof(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce333e9_SizeofExprModel>);
inline void _1c2e6da26_alignof(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce35b5a_AlignofExprModel>);
inline void _1c2e6dc9b_integrated_to_str(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce36034_IntegratedToStrExprModel>);
inline void _1c2e6e021_free(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce3640d_FreeExprModel>);
inline void _1c2e6e296_backend_emit(_1c2e68515_ExprOptimizer*, jule::Ptr<_1dce36221_BackendEmitExprModel>);
inline void _1c2e6e472_do(_1c2e68515_ExprOptimizer*);
struct _1c2e68515_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1c2e68515_ExprOptimizer(void) = default;

	inline bool operator==(_1c2e68515_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c2e68515_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9457e80_Optimizer> static__1c4427b8d_new(jule::Ptr<_1c41b3132_IR>&);
inline void _1a93bb5ca_optimize_global(_1a9457e80_Optimizer*, jule::Ptr<_1c2d266ae_Var>&);
inline void _1a93ea263_optimize_function(_1a9457e80_Optimizer*, jule::Ptr<_1dce38993_Fn>&);
inline void _1a93ee5a8_optimize_struct(_1a9457e80_Optimizer*, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1a9403205_optimize_globals(_1a9457e80_Optimizer*, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a940955d_optimize_functions(_1a9457e80_Optimizer*, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a94126ba_optimize_structs(_1a9457e80_Optimizer*, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a941ccbe_optimize_package(_1a9457e80_Optimizer*, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a9422400_optimize(_1a9457e80_Optimizer*);
struct _1a9457e80_Optimizer {
	jule::Ptr<_1c41b3132_IR> _field_ir = jule::Ptr<_1c41b3132_IR>();
	

	_1a9457e80_Optimizer(void) = default;

	inline bool operator==(_1a9457e80_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a9457e80_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a949bcb5_reset(void);
inline void static__1a949d080_print(jule::Str, jule::Str);
struct _1a949cd93_AnsiEscape {
	

	_1a949cd93_AnsiEscape(void) = default;

	inline bool operator==(_1a949cd93_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a949cd93_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a949e735_log_flat(_207b80eb7_Log&);
inline void static__1a949e944_log_error(_207b80eb7_Log&);
inline void static__1a949eb53_log(_207b80eb7_Log&);
inline void static__1a949ed62_print_logs(jule::Slice<_207b80eb7_Log>&);
struct _1a949e47c_Logger {
	

	_1a949e47c_Logger(void) = default;

	inline bool operator==(_1a949e47c_Logger _other) { return true; }

	inline bool operator!=(_1a949e47c_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a9a72665_unix(_1a9a722ad_AbsTime*);
struct _1a9a722ad_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1a9a722ad_AbsTime(void) = default;

	inline bool operator==(_1a9a722ad_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1a9a722ad_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a9a72951_Time static__1a9a72ce7_unix(jule::U64);
inline _1a9a72951_Time static__1a9a72ee5_now(void);
inline jule::U64 _1a9a73446_unix(_1a9a72951_Time*);
inline jule::U64 _1a9a736aa_day(_1a9a72951_Time*);
inline jule::U64 _1a9a7391e_month(_1a9a72951_Time*);
inline jule::U64 _1a9a73b83_year(_1a9a72951_Time*);
inline jule::U64 _1a9a73de7_second(_1a9a72951_Time*);
inline jule::U64 _1a9a7415b_minute(_1a9a72951_Time*);
inline jule::U64 _1a9a743c0_hour(_1a9a72951_Time*);
inline _1a9a722ad_AbsTime _1a9a74634_abs(_1a9a72951_Time*);
struct _1a9a72951_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1a9a72951_Time(void) = default;

	inline bool operator==(_1a9a72951_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a9a72951_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a99eb4e0_ScopeCoder> static__1a99ebb0b_new(jule::Ptr<_1a9a7814e_ObjectCoder>&);
inline void _1a99ebd81_range_index_iter(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd4a46_RangeIter>&);
inline void _1a99ec106_range_hashmap_iter(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd4a46_RangeIter>&);
inline void _1a99ec37b_if_case(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd321a_If>);
inline void _1a99ec601_conditional(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd3902_Conditional>);
inline void _1a99ec876_inf_iter(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd3bdd_InfIter>);
inline void _1a99ecaeb_while_iter(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd4161_WhileIter>);
inline void _1a99ecd71_range_iter(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd4a46_RangeIter>);
inline void _1a99ed0e6_cont(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd4e42_ContSt>);
inline void _1a99ed36b_label(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd55d5_Label>);
inline void _1a99ed5e1_goto_st(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd58c1_GotoSt>);
inline void _1a99ed866_postfix(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd5c78_Postfix>);
inline void _1a99edadb_assign(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd61eb_Assign>);
inline void _1a99edd61_multi_assign(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd65a3_MultiAssign>);
inline jule::Fn<void(void)> _1a99ee16e_match_expr(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd6ae2_Match>);
inline void _1a99ee48d_case(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd6ae2_Match>, jule::Ptr<_1c2cd763c_Case>);
inline void _1a99ee713_match_st(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd6ae2_Match>);
inline void _1a99ee988_fall_st(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd7be2_FallSt>);
inline void _1a99eec0d_break_st(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd52e9_BreakSt>);
inline void _1a99eee83_ret_with_vars(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd8165_RetSt>);
inline void _1a9a00208_ret_tuple(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd8165_RetSt>);
inline void _1a9a0047d_ret_with_exprs(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd8165_RetSt>);
inline void _1a9a00703_ret_st(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd8165_RetSt>);
inline void _1a9a00bed_var(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2d266ae_Var>);
inline void _1a9a00e73_st(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Any);
inline void _1a9a011e8_scope_stmts(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd2d1e_Scope>&);
inline void _1a9a0146d_scope(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1c2cd2d1e_Scope>);
inline void _1a9a016e3_func_scope(jule::Ptr<_1a99eb4e0_ScopeCoder>, jule::Ptr<_1dce3b644_FnIns>);
struct _1a99eb4e0_ScopeCoder {
	jule::Ptr<_1a9a7814e_ObjectCoder> _field_oc = jule::Ptr<_1a9a7814e_ObjectCoder>();
	

	_1a99eb4e0_ScopeCoder(void) = default;

	inline bool operator==(_1a99eb4e0_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a99eb4e0_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9a04064_ExprCoder> static__1a9a04460_new(jule::Ptr<_1a9a7814e_ObjectCoder>&);
inline void _1a9a046d5_string(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dcdbd1a8_Const>&);
inline void _1a9a0495a_boolean(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dcdbd1a8_Const>&);
inline void _1a9a04b36_nil_lit(jule::Ptr<_1a9a04064_ExprCoder>);
inline jule::Bool _1a9a04e44_ftoa_special_cases(jule::Ptr<_1a9a04064_ExprCoder>, jule::F64&);
inline void _1a9a051b9_float32(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dcdbd1a8_Const>&);
inline void _1a9a0543e_float64(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dcdbd1a8_Const>&);
inline void _1a9a0575d_constant(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dcdbd1a8_Const>, jule::Bool);
inline void _1a9a05b26_div_by_zero_binary(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1db7061a7_Token>&, jule::Ptr<_1dce31529_OperandExprModel>&, jule::Ptr<_1dce31529_OperandExprModel>&);
inline void _1a9a05d9b_unsafe_binary(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce31716_BinopExprModel>);
inline void _1a9a06121_binary(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce31716_BinopExprModel>);
inline void _1a9a06396_var(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2d266ae_Var>);
inline void _1a9a0661b_structure_ins(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dcd868e1_StructIns>);
inline void _1a9a06891_unary(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce31903_UnaryExprModel>);
inline void _1a9a06b16_structure_lit(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce31ccc_StructLitExprModel>);
inline void _1a9a06d8b_alloc_structure(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce31eb9_AllocStructLitExprModel>);
inline void _1a9a07111_casting(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce321a6_CastingExprModel>);
inline void _1a9a07386_args(jule::Ptr<_1a9a04064_ExprCoder>, jule::Slice<jule::Any>);
inline void _1a9a0760b_model_for_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Any);
inline void _1a9a07881_push_call_inf(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32393_FnCallExprModel>&);
inline jule::Bool _1a9a07b8e_is_wrapped(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32393_FnCallExprModel>&);
inline void _1a9a07e14_pure_func_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32393_FnCallExprModel>&);
inline void _1a9a08189_func_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32393_FnCallExprModel>);
inline void _1a9a0840e_slice(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32580_SliceExprModel>);
inline void _1a9a08684_indexing(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3276c_IndexingExprModel>);
inline void _1a9a08909_unsafe_indexing(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2e60e36_UnsafeIndexingExprModel>);
inline void _1a9a08b7e_anon_func(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32959_AnonFnExprModel>);
inline void _1a9a08e04_map(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce32d33_MapExprModel>);
inline void _1a9a09179_slicing(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce33020_SlicingExprModel>);
inline void _1a9a093ee_trait_sub(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3320c_TraitSubIdentExprModel>);
inline void _1a9a09674_structure_sub(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3362a_StructSubIdentExprModel>);
inline void _1a9a098e9_common_ident(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce33be1_CommonIdentExprModel>);
inline void _1a9a09b6e_common_sub(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>);
inline void _1a9a09de4_array(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce33a04_ArrayExprModel>);
inline void _1a9a0a169_func_ins_common(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3b644_FnIns>);
inline void _1a9a0a3de_func_ins(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3b644_FnIns>);
inline void _1a9a0a664_tuple(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce340ba_TupleExprModel>);
inline void _1a9a0a8d9_new_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>);
inline void _1a9a0ab5e_out_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>);
inline void _1a9a0add4_outln_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>);
inline void _1a9a0b159_panic_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>);
inline void _1a9a0b3ce_assert_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>);
inline void _1a9a0b654_error_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>);
inline void _1a9a0b8c9_copy_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3530d_BuiltinCopyCallExprModel>);
inline void _1a9a0bb4e_make_call_slice(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>&);
inline void _1a9a0bdc4_make_call_str(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>&);
inline void _1a9a0c149_make_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>);
inline void _1a9a0c3be_push_to_slice(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2e612ee_PushToSliceExprModel>);
inline void _1a9a0c644_append_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>);
inline void _1a9a0c8b9_clone_call(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>);
inline void _1a9a0cb3e_sizeof(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce333e9_SizeofExprModel>);
inline void _1a9a0cdb4_alignof(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce35b5a_AlignofExprModel>);
inline jule::Str _1a9a0d1c2_rune_lit(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce35d47_RuneExprModel>);
inline void _1a9a0d447_structure_static(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce33817_StructStaticIdentExprModel>);
inline void _1a9a0d6bc_integrated_to_str(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce36034_IntegratedToStrExprModel>);
inline void _1a9a0d942_backend_emit(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce36221_BackendEmitExprModel>);
inline void _1a9a0dbb7_free(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1dce3640d_FreeExprModel>);
inline void _1a9a0de3c_mut_slicing(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2e618b5_MutSlicingExprModel>);
inline void _1a9a0e1b2_str_insert_begin(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2e61c5b_StrInsertBeginExprModel>);
inline void _1a9a0e437_model(jule::Ptr<_1a9a04064_ExprCoder>, jule::Any);
inline void _1a9a0e6ac_expr(jule::Ptr<_1a9a04064_ExprCoder>, jule::Any);
inline void _1a9a0e932_val(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2d6ea6a_Value>);
inline void _1a9a0eba7_init_expr(jule::Ptr<_1a9a04064_ExprCoder>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1a9a04064_ExprCoder {
	jule::Ptr<_1a9a7814e_ObjectCoder> _field_oc = jule::Ptr<_1a9a7814e_ObjectCoder>();
	

	_1a9a04064_ExprCoder(void) = default;

	inline bool operator==(_1a9a04064_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9a04064_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a9a1221a_clone_func_decl(jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Str static__1a9a124b2_clone_func_def(jule::Ptr<_1dcd5a596_Struct>&);
struct _1a9a11e62_DeriveCoder {
	

	_1a9a11e62_DeriveCoder(void) = default;

	inline bool operator==(_1a9a11e62_DeriveCoder _other) { return true; }

	inline bool operator!=(_1a9a11e62_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9a13392_TestCoder> static__1a9a13815_new(jule::Ptr<_1a9a7814e_ObjectCoder>&);
inline jule::Ptr<_1c2d01854_ImportInfo> _1a9a13a79_find_testing_package(jule::Ptr<_1a9a13392_TestCoder>);
inline void _1a9a13cee_append_test(jule::Ptr<_1a9a13392_TestCoder>, jule::Ptr<_1dce3b644_FnIns>);
inline void _1a9a14074_append_package_tests(jule::Ptr<_1a9a13392_TestCoder>, jule::Ptr<_1c2d047ad_Package>&);
inline jule::Bool _1a9a142d8_ready_testing_package(jule::Ptr<_1a9a13392_TestCoder>);
inline void _1a9a144b4_call_tm_reset(jule::Ptr<_1a9a13392_TestCoder>);
inline void _1a9a14690_call_tm_failed(jule::Ptr<_1a9a13392_TestCoder>);
inline void _1a9a1486b_call_tm_skipped(jule::Ptr<_1a9a13392_TestCoder>);
inline void _1a9a14a47_serialize(jule::Ptr<_1a9a13392_TestCoder>);
struct _1a9a13392_TestCoder {
	jule::Ptr<_1dcd868e1_StructIns> _field_t = jule::Ptr<_1dcd868e1_StructIns>();
	jule::Ptr<_1dce38993_Fn> _field_tm_reset = jule::Ptr<_1dce38993_Fn>();
	jule::Ptr<_1dce38993_Fn> _field_tm_failed = jule::Ptr<_1dce38993_Fn>();
	jule::Ptr<_1dce38993_Fn> _field_tm_skipped = jule::Ptr<_1dce38993_Fn>();
	jule::Ptr<_1a9a7814e_ObjectCoder> _field_oc = jule::Ptr<_1a9a7814e_ObjectCoder>();
	

	_1a9a13392_TestCoder(void) = default;

	inline bool operator==(_1a9a13392_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9a13392_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a9a15eee_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__1a9a163d9_to_local(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1a9a16681_func(jule::Ptr<_1dce38993_Fn>&);
inline jule::Str static__1a9a16928_func_ins(jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Str static__1a9a16bc0_trait_decl(jule::Ptr<_1c2c3d54e_Trait>);
inline jule::Str static__1a9a16e67_param(jule::Ptr<_1dce37156_Param>&);
inline jule::Str static__1a9a1720e_structure(jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Str static__1a9a174a6_structure_ins(jule::Ptr<_1dcd868e1_StructIns>&);
inline jule::Str static__1a9a1774d_field(jule::Ptr<_1dcd4ca61_Field>&);
inline jule::Str static__1a9a179e5_var(jule::Ptr<_1c2d266ae_Var>);
inline jule::Str static__1a9a17c8c_iter_begin(jule::Uintptr);
inline jule::Str static__1a9a18034_iter_end(jule::Uintptr);
inline jule::Str static__1a9a182cb_iter_next(jule::Uintptr);
inline jule::Str static__1a9a18573_label(jule::Str&);
inline jule::Str static__1a9a1881a_match_end(jule::Uintptr);
inline jule::Str static__1a9a18ab2_case_begin(jule::Uintptr);
struct _1a9a159e3_IdentCoder {
	

	_1a9a159e3_IdentCoder(void) = default;

	inline bool operator==(_1a9a159e3_IdentCoder _other) { return true; }

	inline bool operator!=(_1a9a159e3_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1a9a77c75_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1a9a77c75_SerializationInfo(void) = default;

	inline bool operator==(_1a9a77c75_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1a9a77c75_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a9a77e62_TraitHash {
	jule::Ptr<_1c2c3d54e_Trait> _field_t = jule::Ptr<_1c2c3d54e_Trait>();
	jule::Ptr<_1dcd868e1_StructIns> _field_s = jule::Ptr<_1dcd868e1_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1a9a77e62_TraitHash(void) = default;

	inline bool operator==(_1a9a77e62_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a9a77e62_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9a7de8a_to_str(_1a9a7dbc1_CustomType*);
inline jule::Bool _1a9a7e298_equals(jule::Ptr<_1a9a7dbc1_CustomType>, jule::Ptr<_1c2d9e825_TypeKind>);
struct _1a9a7dbc1_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1a9a7dbc1_CustomType(void) = default;

	inline bool operator==(_1a9a7dbc1_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9a7dbc1_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a9a7e9e6_to_type(jule::Str);
inline jule::Str static__1a9a7ec8d_prim(jule::Ptr<_1c2da42ec_Prim>);
inline jule::Str static__1a9a80035_tuple(jule::Ptr<_1c2da906b_Tuple>);
inline jule::Str static__1a9a85139_as_sptr(jule::Str);
inline jule::Str static__1a9a853d1_as_ptr(jule::Str);
inline jule::Str static__1a9a85678_sptr(jule::Ptr<_1c2da7a81_Sptr>);
inline jule::Str static__1a9a85920_ptr(jule::Ptr<_1c2dab0e5_Ptr>);
inline jule::Str static__1a9a85bb7_enum_decl(jule::Ptr<_1c2c4070a_Enum>);
inline jule::Str static__1a9a85e5e_type_enum_decl(jule::Ptr<_1c2c41d05_TypeEnum>);
inline jule::Str static__1a9a86206_as_slice(jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Str static__1a9a8649d_slice(jule::Ptr<_1c2da84dd_Slc>);
inline jule::Str static__1a9a86745_map(jule::Ptr<_1c2da9a94_Map>);
inline jule::Str static__1a9a869dc_trait_ident(jule::Str);
inline jule::Str static__1a9a86c84_trait_decl(jule::Ptr<_1c2c3d54e_Trait>);
inline jule::Str static__1a9a8702b_structure(jule::Ptr<_1dcd5a596_Struct>);
inline jule::Str static__1a9a872c3_structure_ins(jule::Ptr<_1dcd868e1_StructIns>);
inline jule::Str static__1a9a8756a_array(jule::Ptr<_1c2daa688_Arr>);
inline jule::Str static__1a9a87aa9_param_ins(jule::Ptr<_1dce3a775_ParamIns>&);
inline jule::Str static__1a9a880e8_func_ins_result(jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Str static__1a9a88390_anon_func(jule::Ptr<_1dce3b644_FnIns>);
inline jule::Str static__1a9a88637_func(jule::Ptr<_1dce3b644_FnIns>);
inline jule::Str static__1a9a888ce_kind(jule::Ptr<_1c2d9e825_TypeKind>);
struct _1a9a7e4b8_TypeCoder {
	

	_1a9a7e4b8_TypeCoder(void) = default;

	inline bool operator==(_1a9a7e4b8_TypeCoder _other) { return true; }

	inline bool operator!=(_1a9a7e4b8_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac0d63ad_name(_1ac2e0694_Flag*);
inline jule::Str _1ac0d64e0_what(_1ac2e0694_Flag*);
inline void _1ac2e0a7e_reset(_1ac2e0694_Flag*);
inline jule::I32 _1ac2e0bb1_short(_1ac2e0694_Flag*);
struct _1ac2e0694_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1ac2e0694_Flag(void) = default;

	inline bool operator==(_1ac2e0694_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1ac2e0694_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1ac2e3da1_name(_1ac2e4357_Flag*);
inline jule::Str _1ac2e4621_what(_1ac2e4357_Flag*);
inline void _1ac2e4753_reset(_1ac2e4357_Flag*);
inline jule::I32 _1ac2e4885_short(_1ac2e4357_Flag*);
struct _1ac2e4357_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1ac2e4357_Flag(void) = default;

	inline bool operator==(_1ac2e4357_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1ac2e4357_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1ac2e7888_name(_1ac2e7d3e_Flag*);
inline jule::Str _1ac2e8108_what(_1ac2e7d3e_Flag*);
inline void _1ac2e823a_reset(_1ac2e7d3e_Flag*);
inline jule::I32 _1ac2e836c_short(_1ac2e7d3e_Flag*);
struct _1ac2e7d3e_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1ac2e7d3e_Flag(void) = default;

	inline bool operator==(_1ac2e7d3e_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1ac2e7d3e_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1ac2eb3b4_name(_1ac2eb86a_Flag*);
inline jule::Str _1ac2ebb34_what(_1ac2eb86a_Flag*);
inline void _1ac2ebc66_reset(_1ac2eb86a_Flag*);
inline jule::I32 _1ac2ebd98_short(_1ac2eb86a_Flag*);
struct _1ac2eb86a_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1ac2eb86a_Flag(void) = default;

	inline bool operator==(_1ac2eb86a_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1ac2eb86a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1ac2eed9b_name(_1ac300352_Flag*);
inline jule::Str _1ac30061b_what(_1ac300352_Flag*);
inline void _1ac30074d_reset(_1ac300352_Flag*);
inline jule::I32 _1ac300880_short(_1ac300352_Flag*);
struct _1ac300352_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1ac300352_Flag(void) = default;

	inline bool operator==(_1ac300352_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1ac300352_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9ab9b1e_FlagSet> static__1a9ab9e0a_new(void);
inline jule::Trait<_1a96a4dd0_CommonFlag> _1a9aba38e_find_flag(_1a9ab9b1e_FlagSet*, jule::Str);
inline jule::Trait<_1a96a4dd0_CommonFlag> _1a9aba69c_find_flag_short(_1a9ab9b1e_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a96a4dd0_CommonFlag>> _1a9aba911_flags(_1a9ab9b1e_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a9abac1e_parse(_1a9ab9b1e_FlagSet*, jule::Slice<jule::Str>);
inline void _1a9abadea_reset(_1a9ab9b1e_FlagSet*);
inline jule::Ptr<_1ac300352_Flag> _1ac37654e_add_flag_common(_1a9ab9b1e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1ac2eb86a_Flag> _1ac38016d_add_flag_common(_1a9ab9b1e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1ac374519_add_var(_1a9ab9b1e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1ac37d149_add_var(_1a9ab9b1e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a9ab9b1e_FlagSet {
	jule::Slice<jule::Trait<_1a96a4dd0_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1a96a4dd0_CommonFlag>>();
	

	_1a9ab9b1e_FlagSet(void) = default;

	inline bool operator==(_1a9ab9b1e_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1a9ab9b1e_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1c41b3132_IR>,jule::Slice<_207b80eb7_Log>> static__1c427e64e_build(jule::Str, jule::I64);
inline void _1c42a7985_append_structs(_1c41b3132_IR*, jule::Ptr<_1c2d047ad_Package>&, jule::Slice<jule::Ptr<_1dcd5a596_Struct>>&);
inline jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _1c42ac4a1_get_all_structures(_1c41b3132_IR*);
inline void _1c42b95bd_append_globals(_1c41b3132_IR*, jule::Ptr<_1c2d047ad_Package>&, jule::Slice<jule::Ptr<_1c2d266ae_Var>>&);
inline jule::Slice<jule::Ptr<_1c2d266ae_Var>> _1c42bd506_get_all_globals(_1c41b3132_IR*);
inline void _1c42d550c_order(_1c41b3132_IR*);
struct _1c41b3132_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1c2d047ad_Package> _field_main = jule::Ptr<_1c2d047ad_Package>();
	jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>>();
	_1c4407a4c_OrderedDefines _field_ordered = _1c4407a4c_OrderedDefines();
	

	_1c41b3132_IR(void) = default;

	inline bool operator==(_1c41b3132_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1c41b3132_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1dcd5c279_to_str(_1dcd868e1_StructIns*);
inline jule::Bool _1dcd5d3e0_equals(jule::Ptr<_1dcd868e1_StructIns>, jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1dcd60744_same(_1dcd868e1_StructIns*, jule::Ptr<_1dcd868e1_StructIns>);
inline jule::Ptr<_1dce38993_Fn> _1dcd61a64_find_method(_1dcd868e1_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd62c0d_FieldIns> _1dcd6457d_find_field(_1dcd868e1_StructIns*, jule::Str);
struct _1dcd868e1_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1dcd5a596_Struct> _field_decl = jule::Ptr<_1dcd5a596_Struct>();
	jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>>();
	jule::Slice<jule::Ptr<_1dcd62c0d_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1dcd62c0d_FieldIns>>();
	jule::Slice<jule::Ptr<_1dce38993_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dce38993_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1dce3e548_ReferenceStack> _field_refers = jule::Ptr<_1dce3e548_ReferenceStack>();
	_1dcd5bec1_Operators _field_operators = _1dcd5bec1_Operators();
	

	_1dcd868e1_StructIns(void) = default;

	inline bool operator==(_1dcd868e1_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1dcd868e1_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a944cd54_ObjectDeadCode> static__1a944d31b_new(jule::Ptr<_1c41b3132_IR>&);
inline jule::Bool _1abccc868_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2c3d54e_Trait>&);
inline jule::Bool _1abcd363d_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Bool _1abcd97ba_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1dcd868e1_StructIns>&);
inline jule::Bool _1abce16d4_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2d266ae_Var>&);
inline void _1abccce0c_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2c3d54e_Trait>);
inline void _1abcd6c6d_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1dce3b644_FnIns>);
inline void _1abcd9d4d_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1dcd868e1_StructIns>);
inline void _1abce50bc_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2d266ae_Var>);
inline void _1a947b46a_set_references_as_live(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1dce3e548_ReferenceStack>&);
inline void _1a947b6e0_inits(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a947b965_collect_live_package(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a947bb41_collect_live(jule::Ptr<_1a944cd54_ObjectDeadCode>);
inline void _1a947bdb6_remove_dead_globals(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c2d266ae_Var>>&);
inline void _1a947c13b_remove_dead_fns(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dce38993_Fn>>&);
inline void _1a947c3b1_remove_dead_structs(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dcd5a596_Struct>>&);
inline void _1a947c636_remove_dead_traits(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c2c3d54e_Trait>>&);
inline void _1a947c8ab_remove_deads_file(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2d68c84_SymbolTable>&);
inline void _1a947cb31_remove_deads_package(jule::Ptr<_1a944cd54_ObjectDeadCode>, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a947cd0c_remove_deads(jule::Ptr<_1a944cd54_ObjectDeadCode>);
inline void _1a947ced8_elimanate(jule::Ptr<_1a944cd54_ObjectDeadCode>);
struct _1a944cd54_ObjectDeadCode {
	_1a944ca8a_LiveTable _field_live = _1a944ca8a_LiveTable();
	jule::Ptr<_1c41b3132_IR> _field_ir = jule::Ptr<_1c41b3132_IR>();
	

	_1a944cd54_ObjectDeadCode(void) = default;

	inline bool operator==(_1a944cd54_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a944cd54_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9a7814e_ObjectCoder> static__1a9a5b176_new(jule::Ptr<_1c41b3132_IR>&, _1a9a77c75_SerializationInfo);
inline void _1a9a5b4a6_write(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Str);
inline void _1a9a5bc48_add_indent(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a5cc38_done_indent(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a5d486_indent(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline jule::I64 _1a9a4c80a_find_type_offset(_1a9a7814e_ObjectCoder*, jule::Ptr<_1c2c3d54e_Trait>, jule::Ptr<_1c2d9e825_TypeKind>);
inline void _1a9a5e872_loc_info(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1db7061a7_Token>&);
inline void _1a9a3dea0_head(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a5c496_links(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a427cd_prepare_structures(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a4961a_iter_packages(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>);
inline void _1a9a49b9d_build_trait_map(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a4aa6c_trait_decls(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a4b232_structure_plain_decl(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1a9a4b8e7_structure_plain_decls(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a4c0ac_field_decl(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd62c0d_FieldIns>&);
inline void _1a9a43b97_structure_destructor(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a786e3_structure_derive_defs_decls(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a78825_structure_operator_eq(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Str&, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a78957_structure_operator_not_eq(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Str&, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a78a89_structure_operator(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Str&, jule::Ptr<_1dce3b644_FnIns>&, jule::Str);
inline void _1a9a78bbb_structure_operators(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a78ced_structure_ins_decl(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a78e30_structure_decl(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1a9a79062_structure_decls(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a79194_params_decls(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>&);
inline void _1a9a792c6_func_head(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dce3b644_FnIns>&, jule::Bool);
inline void _1a9a79408_func_decl(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dce38993_Fn>&, jule::Bool);
inline void _1a9a7953a_func_decls(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7966c_trait_data_types(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7979e_param_ins(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dce3a775_ParamIns>&);
inline void _1a9a799be_params_ins(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>&);
inline void _1a9a79cdd_var_init_expr(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1c2d266ae_Var>&, jule::Fn<void(void)>);
inline void _1a9a7a063_var(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1c2d266ae_Var>);
inline void _1a9a7a2d8_func(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dce38993_Fn>&);
inline void _1a9a7a4b4_trait_wrappers(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7a690_trait_datas(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7a86b_globals(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7aa47_decls(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7acbc_structure_methods(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a7b042_structure_derive_defs(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a7b2b7_structure_ostream(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a7b53c_structure_ins(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd868e1_StructIns>&);
inline void _1a9a7b7b2_structure(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1dcd5a596_Struct>&);
inline void _1a9a7b98d_structures(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7bb69_funcs(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7bdde_push_init(jule::Ptr<_1a9a7814e_ObjectCoder>, jule::Ptr<_1c2d047ad_Package>&);
inline void _1a9a7c0ba_init_caller(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7c296_end(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7c472_serialize_head(jule::Ptr<_1a9a7814e_ObjectCoder>);
inline void _1a9a7c64d_serialize(jule::Ptr<_1a9a7814e_ObjectCoder>);
struct _1a9a7814e_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1c41b3132_IR> _field_ir = jule::Ptr<_1c41b3132_IR>();
	_1a9a77c75_SerializationInfo _field_info = _1a9a77c75_SerializationInfo();
	jule::Slice<jule::Ptr<_1a9a77e62_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1a9a77e62_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1a9a04064_ExprCoder> _field_ec = jule::Ptr<_1a9a04064_ExprCoder>();
	jule::Ptr<_1a99eb4e0_ScopeCoder> _field_sc = jule::Ptr<_1a99eb4e0_ScopeCoder>();
	

	_1a9a7814e_ObjectCoder(void) = default;

	inline bool operator==(_1a9a7814e_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1a9a7814e_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1ac3144ba_parse_integer(_1a9abc2e7_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1ac31c35d_parse_integer(_1a9abc2e7_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1a9abcade_get_data(_1a9abc2e7_ArgParser*);
inline jule::VoidExceptional _1a9abcd31_process_flag(_1a9abc2e7_ArgParser*, jule::Trait<_1a96a4dd0_CommonFlag>&);
inline jule::VoidExceptional _1a9abd0a6_single_dash(_1a9abc2e7_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1a9abd32b_double_dash(_1a9abc2e7_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1a9abd507_try_arg(_1a9abc2e7_ArgParser*);
inline jule::VoidExceptional _1a9abd6d3_parse(_1a9abc2e7_ArgParser*);
struct _1a9abc2e7_ArgParser {
	_1a9ab9b1e_FlagSet _field_set = _1a9ab9b1e_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1a9abc2e7_ArgParser(void) = default;

	inline bool operator==(_1a9abc2e7_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a9abc2e7_ArgParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _205d1a5b5_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _205d1a85c_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _205d1ae23_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _205d1b231_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _205d05d42_utf16_from_str(jule::Str);
inline jule::Str _205d0697a_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _205d06aac_u16_ptr_to_str(jule::U16*);
inline jule::I64 _205065228_get_last_errno(void);
inline jule::Uintptr _205d1c84d_get_std_handle(jule::Uintptr);
inline jule::I64 _205d1cc9e_wstat(jule::U16*, struct stat*);
inline jule::I64 _205d1d189__wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _205d1d387_get_last_error(void);
inline jule::U32 _205d1d6c8_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _205d1dc17_delete_file(jule::U16*);
inline jule::Bool _205d1deae_create_directory(jule::U16*);
inline jule::Bool _205d1e256_remove_directory(jule::U16*);
inline _WDIR* _205d1e4ed__wopendir(jule::U16*);
inline struct _wdirent* _205d1e795__wreaddir(_WDIR*);
inline jule::I64 _205d1ea3c__wclosedir(_WDIR*);
inline jule::U32 _205d20213_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _205d20554_get_console_mode(jule::Uintptr, jule::I64&);
inline jule::Bool _205d20895_set_console_mode(jule::Uintptr, jule::I64);
inline jule::Bool _205d20dc3_write_console(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _205d21401_read_console(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _205d23788_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _205d23b73_read(jule::I64, void*, jule::U64);
inline jule::I64 _205d23ee7_close(jule::I64);
inline jule::I64 _205d243d2_write(jule::I64, void*, jule::U64);
inline void _205d245e1_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _205e02801_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _205e02db7_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _205e03406_rune_len(jule::I32);
inline jule::I64 _205e03824_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _205e03b65_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _205e03ea6_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _205e044e5_rune_count_str(jule::Str);
inline jule::Bool _205e0478c_rune_start(jule::U8);
inline jule::I64 _205ea1ce0_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _205ea2c7a_args(void);
inline jule::Exceptional<jule::Str> _205ea31ed_working_dir(void);
inline jule::Exceptional<jule::Str> _205ea3ab1___getwd(void);
inline jule::Slice<jule::U8> _20603b033_stobs(jule::Str&);
inline jule::Bool _207a8eb95_is_letter(jule::I32);
inline jule::Bool _207b120be_is16(jule::Slice<_207b1050c_Range16>, jule::U16);
inline jule::Bool _207b12410_is32(jule::Slice<_207b10980_Range32>, jule::U32);
inline jule::Bool _207b12ba2_is_excluding_latin(jule::Ptr<_207b10e03_RangeTable>, jule::I32);
inline jule::Str _207a6542e_repeat(jule::Str, jule::I64);
inline jule::Bool _207a6d7cd__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _207a6eee9_has_prefix(jule::Str, jule::Str);
inline jule::Bool _207a81659__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _207a89c39_has_suffix(jule::Str, jule::Str);
inline jule::I64 _20794497e_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _207a65e68_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _207b13323_find_last(jule::Str, jule::Str);
inline jule::I64 _207b1392d__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _207b13dc3_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _207b1439b_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _207b14610_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _207b14742_contains(jule::Str, jule::Str);
inline jule::Bool _207b14ad8_contains_any(jule::Str, jule::Str);
inline jule::I64 _207b14c1a_count(jule::Str, jule::Str);
inline jule::Str _207b14d4c_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _207b13b92__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _207b15798_trim_left(jule::Str, jule::Str);
inline void _207b158ca__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _207b15b3e_trim(jule::Str, jule::Str);
inline jule::Bool _205e7a8bd_is_path_sep(jule::U8);
inline jule::Bool _205e7aa00_is_slash(jule::U8);
inline jule::U8 _205e7abba_to_upper(jule::U8);
inline jule::I64 _205e7b281_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _205e7b528_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _205e7b7c0_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _205e7bb44___abs(jule::Str);
inline jule::Str _205e7bddb___join(jule::Slice<jule::Str>);
inline jule::Str _207b16436_clean(jule::Str);
inline jule::Str _207b1669a_from_slash(jule::Str);
inline jule::Str _207b167cc_join(jule::Slice<jule::Str>);
inline jule::Str _207b1690e_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _207b16a41_abs(jule::Str);
inline jule::Str _207b16b73_base(jule::Str);
inline jule::Str _207b16ca5_dir(jule::Str);
inline jule::Str _207b16dd7_volume_name(jule::Str);
inline jule::I64 _20512ab18_get_last_fs_error(void);
inline jule::Bool _205dc554e_is_console_handle(jule::Uintptr);
inline jule::I64 _207bc0424_get_last_process_error(void);
inline jule::Slice<wchar_t*> _207bd009e_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _207bd0346_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _207bd0698_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _207bd0a83_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _207bd17a9_exit(jule::I64);
inline jule::Str _207bd19a7_executable(void);
inline jule::Bool _207b74461_is_std_header_path(jule::Str);
inline jule::Bool _207b74593_is_valid_header_ext(jule::Str);
inline jule::Bool _207b747e6_is_valid_cpp_ext(jule::Str);
inline jule::Str _207b81407_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _207b816e3_arg_to_str(jule::Any);
inline jule::I64 _207b8198a_find_next_fmt(jule::Str);
inline jule::Str _207b81d20_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _207b82ddc_is_top_directive(jule::Str);
inline jule::Bool _207b849b0_is_windows(jule::Str);
inline jule::Bool _207b84c9b_is_darwin(jule::Str);
inline jule::Bool _207b85043_is_linux(jule::Str);
inline jule::Bool _207b85362_is_i386(jule::Str);
inline jule::Bool _207b85609_is_amd64(jule::Str);
inline jule::Bool _207b858a1_is_arm64(jule::Str);
inline jule::Bool _207b85b48_is_unix(jule::Str);
inline jule::Bool _207b85ebc_is_32bit(jule::Str);
inline jule::Bool _207b86264_is_64bit(jule::Str);
inline void _207b93628_init(void);
inline jule::Bool _1db7068b1_is_unary_op(jule::Str);
inline jule::Bool _1db706b9c_is_bin_op(jule::Str);
inline jule::Bool _1db707263_is_str(jule::Str);
inline jule::Bool _1db70750a_is_raw_str(jule::Str);
inline jule::Bool _1db7077a2_is_rune(jule::Str);
inline jule::Bool _1db707dbd_is_bool(jule::Str);
inline jule::Bool _1db708165_is_float(jule::Str);
inline jule::Bool _1db70840c_is_num(jule::Str);
inline jule::Bool _1db70894b_is_ignore_ident(jule::Str);
inline jule::Bool _1db708be3_is_anon_ident(jule::Str);
inline jule::Bool _1db709232_is_space(jule::I32);
inline jule::Bool _1db709683_is_letter(jule::I32);
inline jule::Bool _1db709bc2_is_decimal(jule::U8);
inline jule::Bool _1db709e69_is_binary(jule::U8);
inline jule::Bool _1db70a211_is_octal(jule::U8);
inline jule::Bool _1db70a4a8_is_hex(jule::U8);
inline jule::Bool _1db70a750_is_assign(jule::U64);
inline jule::Bool _1db70a9e7_is_postfix_op(jule::Str);
inline jule::Bool _1db70ac8e_is_assign_op(jule::Str);
inline jule::Ptr<_1db70b542_File> _1db70ca71_new_file_set(jule::Str);
inline _207b80eb7_Log _1db70e39c_make_err(jule::I64, jule::I64, jule::Ptr<_1db70b542_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1db70e732_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1db70ea73_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db70ee08_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db710249_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db71058a_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db7108cb_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db710d2c_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db7110c4_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1db71136b_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1db7116ac_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _1db7119ed_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _1db711d3e_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1db712180_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1db7124c1_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db712922_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1db712bb9_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1db71300a_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1db7132c4_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1db71348e_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1db713747_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1db7139de_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_207b80eb7_Log> _1db7184d8_lex(jule::Ptr<_1db70b542_File>, jule::I64);
inline void _1dce310b7_lshift_unsig(_1dcdbd1a8_Const&, _1dcdbd1a8_Const&);
inline void _1dce313b4_rshift_unsig(_1dcdbd1a8_Const&, _1dcdbd1a8_Const&);
inline jule::I64 _1dd9b098c_leading_zeros64(jule::U64);
inline jule::I64 _1dd9b19e3_trailing_zeros(jule::U64);
inline jule::I64 _1dd9b23d9_trailing_zeros32(jule::U32);
inline jule::I64 _1dd9b2681_trailing_zeros64(jule::U64);
inline jule::I64 _1dd9b7e06_len32(jule::U32);
inline jule::I64 _1dd9b819d_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1dd9b8d5d_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1dd9ba4e1_mul64(jule::U64, jule::U64);
inline jule::U32 _1dd8da90b_f32_bits(jule::F32);
inline jule::F32 _1dd8dabe7_f32_from_bits(jule::U32);
inline jule::U64 _1dd8dae8e_f64_bits(jule::F64);
inline jule::F64 _1dd8db2ad_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1dd8dd8ba_frexp(jule::F64);
inline jule::F64 _1dd94c4b7_nan(void);
inline jule::Bool _1dd94d3ec_is_nan(jule::F64);
inline jule::F64 _1dd94ed8d_inf(jule::I64);
inline jule::Bool _1dd955701_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1dd956d0c_normalize(jule::F64);
inline jule::F64 _1dd966ec6_log(jule::F64);
inline jule::F64 _1dd96d94a_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1dd9c3d8a_modf(jule::F64);
inline jule::F64 _1dd9c464e_log2(jule::F64);
inline jule::Str _1c2c26108_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1c2c2667a_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1c2c26ceb_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1c2c24e09_FloatInfo&);
inline jule::Slice<jule::U8> _1c2c2744a_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1c2c25ab9_DecimalSlice, jule::I64, jule::U8);
inline void _1c2c27846_round_shortest(_1c2c37dea_Decimal&, jule::U64, jule::I64, _1c2c24e09_FloatInfo&);
inline jule::Slice<jule::U8> _1c2c27d74_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1c2c25ab9_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1c2c28308_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1c2c25ab9_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1c2c28913_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1c2c24e09_FloatInfo&);
inline jule::Slice<jule::U8> _1c2c29084_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1c2c24e09_FloatInfo&);
inline jule::I64 _1c2c293c5_min(jule::I64, jule::I64);
inline jule::I64 _1c2c29716_max(jule::I64, jule::I64);
inline jule::U8 _1c2c2a3b5_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1c2c2a7e4___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1c2c2abce_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1c2c2b141_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1c2c2bc57_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1c2c2c153_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1c2c2e023_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1c2c2e320_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1c2c2e5b7_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1c2c31124_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1c2c3150e_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1c2c31ad6_atof_hex(jule::Str, _1c2c24e09_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1c2c31e8d_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2c32235_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2c32576_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1c2c328b7_parse_float(jule::Str, jule::I64);
inline void _1c2c33137_ryu_ftoa_fixed32(_1c2c25ab9_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1c2c33577_ryu_ftoa_fixed64(_1c2c25ab9_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1c2c33da2_format_decimal(_1c2c25ab9_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1c2c34325_ryu_ftoa_shortest(_1c2c25ab9_DecimalSlice&, jule::U64, jule::I64, _1c2c24e09_FloatInfo&);
inline jule::I64 _1c2c345bc_mul_by_log2_log10(jule::I64);
inline jule::I64 _1c2c34864_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1c2c34c4e_compute_bounds(jule::U64, jule::I64, _1c2c24e09_FloatInfo&);
inline void _1c2c352e3_ryu_digits(_1c2c25ab9_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1c2c358cb_ryu_digits32(_1c2c25ab9_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1c2c35cb6_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1c2c361a1_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1c2c364e2_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1c2c36789_divmod1e9(jule::U64);
inline void _1c2c395d3_trim(_1c2c37dea_Decimal&);
inline void _1c2c3988b_right_shift(_1c2c37dea_Decimal&, jule::U64);
inline jule::Bool _1c2c39ced_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1c2c3a073_left_shift(_1c2c37dea_Decimal&, jule::U64);
inline jule::Bool _1c2c3a3b4_should_round_up(_1c2c37dea_Decimal&, jule::I64);
inline jule::Str _1c2c3bb46_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1c2c3becb_fmt_int(jule::I64, jule::I64);
inline jule::Str _1c2c3c273_itoa(jule::I64);
inline jule::Str _1c2c3c592_small(jule::I64);
inline jule::Bool _1c2c3c839_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1c2c3cd67_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1c2cc53e9_real_kind_of(jule::Str);
inline jule::I64 _1c2cc5691_bitsize_of(jule::Str);
inline jule::Str _1c2cc59b0_int_from_bits(jule::I64);
inline jule::Str _1c2cc5c57_uint_from_bits(jule::I64);
inline jule::Str _1c2cc5eee_float_from_bits(jule::I64);
inline jule::Bool _1c2cc6a9e_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1c2cc6d46_bitsize_of_float(jule::F64);
inline jule::I64 _1c2cc70dd_bitsize_of_int(jule::I64);
inline jule::I64 _1c2cc7385_bitsize_of_uint(jule::U64);
inline void _1c2cc74ea_update_target(void);
inline void _1c2cc7660_init(void);
inline jule::F64 _1c2ccb91c_min(jule::Str);
inline jule::F64 _1c2ccbc08_max(jule::Str);
inline jule::Bool _1c2ccc07c_is_i8_compatible(jule::Str);
inline jule::Bool _1c2ccc368_is_i16_compatible(jule::Str);
inline jule::Bool _1c2ccc610_is_i32_compatible(jule::Str);
inline jule::Bool _1c2ccc92e_is_i64_compatible(jule::Str);
inline jule::Bool _1c2cccbc6_is_u8_compatible(jule::Str);
inline jule::Bool _1c2ccce6d_is_u16_compatible(jule::Str);
inline jule::Bool _1c2ccd215_is_u32_compatible(jule::Str);
inline jule::Bool _1c2ccd589_is_u64_compatible(jule::Str);
inline jule::Bool _1c2ccd831_is_f32_compatible(jule::Str);
inline jule::Bool _1c2ccdac8_is_f64_compatible(jule::Str);
inline jule::Bool _1c2ccde19_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1c2cce1b1_is_i16_greater(jule::Str);
inline jule::Bool _1c2cce458_is_i32_greater(jule::Str);
inline jule::Bool _1c2cce700_is_i64_greater(jule::Str);
inline jule::Bool _1c2cce997_is_u16_greater(jule::Str);
inline jule::Bool _1c2ccede8_is_u32_greater(jule::Str);
inline jule::Bool _1c2cd0190_is_u64_greater(jule::Str);
inline jule::Bool _1c2cd0437_is_f32_greater(jule::Str);
inline jule::Bool _1c2cd06ce_is_f64_greater(jule::Str);
inline jule::Bool _1c2cd0a20_is_greater(jule::Str, jule::Str);
inline jule::Bool _1c2cd1a54_is_sig_int(jule::Str);
inline jule::Bool _1c2cd1d40_is_unsig_int(jule::Str);
inline jule::Bool _1c2cd20d7_is_int(jule::Str);
inline jule::Bool _1c2cd2406_is_float(jule::Str);
inline jule::Bool _1c2cd269d_is_num(jule::Str);
inline jule::Bool _1c2cd2945_is_sig_num(jule::Str);
inline jule::Bool _1c2d3e8c5_is_ascii(jule::I32);
inline jule::I32 _1c2d3ea07_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1c2d56821_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1c2d56ac9_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1c2d56d71_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1c2d5717e_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1c2d574c0_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1c2e32710_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1c2e32ec4_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1c2e18a26_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1c2e1830b_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1c2e1bad4_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1c2e2963b_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c2e51685_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dce3d778_parameter_uses_generics(jule::Ptr<_1dce37156_Param>&, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>&);
inline jule::Ptr<_1c2da397d_TypeSymbol> _1dce40c64_build_type(jule::Ptr<_1dcd69d69_TypeDecl>);
inline jule::Ptr<_1c2d6ea6a_Value> _1dce41050_build_expr(jule::Ptr<_1dcd6e38a_Expr>);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1dce412e7_build_type_alias(jule::Ptr<_1dcd814bd_TypeAliasDecl>);
inline jule::Ptr<_1dcd4ca61_Field> _1dce41616_build_field(jule::Ptr<_1dcd84aa9_FieldDecl>);
inline jule::Slice<jule::Ptr<_1dcd4ca61_Field>> _1dce418ad_build_fields(jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>>&);
inline jule::Ptr<_1dcd5a596_Struct> _1dce41b55_build_struct(jule::Ptr<_1dcd85417_StructDecl>);
inline jule::Ptr<_1dce37156_Param> _1dce41dec_build_param(jule::Ptr<_1dcd7a85d_ParamDecl>);
inline jule::Slice<jule::Ptr<_1dce37156_Param>> _1dce42271_build_params(jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>>&);
inline jule::Ptr<_1dce36991_RetType> _1dce42518_build_ret_type(jule::Ptr<_1dcd6ce7c_RetTypeDecl>);
inline jule::Ptr<_1dce38993_Fn> _1dce427b0_build_fn(jule::Ptr<_1dcd7bb7d_FnDecl>);
inline jule::Slice<jule::Ptr<_1dce38993_Fn>> _1dce42a57_build_methods(jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>>&);
inline jule::Ptr<_1c2c3d54e_Trait> _1dce42cee_build_trait(jule::Ptr<_1dcd85a22_TraitDecl>);
inline jule::Ptr<_1c2c3ec15_EnumItem> _1dce43096_build_enum_item(jule::Ptr<_1dcd82d2c_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>> _1dce4333d_build_enum_items(jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>>&);
inline jule::Ptr<_1c2c4070a_Enum> _1dce435d5_build_enum(jule::Ptr<_1dcd83855_EnumDecl>);
inline jule::Ptr<_1c2c4173e_TypeEnumItem> _1dce43a36_build_type_enum_item(jule::Ptr<_1dcd8435b_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>> _1dce43ccd_build_type_enum_items(jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>>&);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1dce44075_build_type_enum(jule::Ptr<_1dcd84559_TypeEnumDecl>);
inline jule::Ptr<_1c2d266ae_Var> _1dce4431c_build_var(jule::Ptr<_1dcd7cb5c_VarDecl>);
inline jule::Slice<jule::Ptr<_1c2d266ae_Var>> _1dce445b4_build_vars(jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>>);
inline jule::Ptr<_1c2cc44d6_Impl> _1dce4485b_build_impl(jule::Ptr<_1dcd8612c_Impl>);
inline jule::Bool _1c2ca1419_match_constraint(jule::Str&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2ca300e_is_builtin_constraint(jule::Str&);
inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cac2d2_new_scope_checker_base(jule::Ptr<_1c2d099a0_Sema>&, jule::Ptr<_1dce3b644_FnIns>);
inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cacd60_new_scope_checker(jule::Ptr<_1c2d099a0_Sema>&, jule::Ptr<_1dce3b644_FnIns>);
inline jule::Ptr<_1c2cd8770_ScopeLabel> _1c2cadc1d_find_label_parent(jule::Str, jule::Ptr<_1c2cd9a07_ScopeChecker>);
inline jule::Bool _1c2ca2d66_model_is_goto_scope(jule::Any, jule::Ptr<_1c2cd2d1e_Scope>&);
inline jule::Bool _1c2caebdb_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1c2cd2d1e_Scope>&);
inline jule::I64 _1c2cb0a99_count_match_type(jule::Ptr<_1c2cd6ae2_Match>&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _1c2cbdac9_get_datas_from_tuple_data(jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Slice<jule::Any> _1c2cc1a22_get_expr_models(jule::Any&);
inline jule::Bool _1c2cc255b_check_mut(jule::Ptr<_1c2d099a0_Sema>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2cc30d9_check_assign(jule::Ptr<_1c2d099a0_Sema>&, jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d6d9e2_Data>, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c2cbd755_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1c2c6e3a4_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1c2caba95_stmt_is_def(jule::Any&);
inline jule::Ptr<_1c2d266ae_Var> _1c2cee3e0_find_var_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2cee841_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5a596_Struct> _1c2ceec3c_find_struct_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1dce38993_Fn> _1c2d0019e_find_fn_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2d004ac_find_trait_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1c2c4070a_Enum> _1c2d007ed_find_enum_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d00b61_find_type_enum_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Str);
inline jule::Bool _1c2d06d87_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1c2d07ae1_is_valid_model_for_ref(jule::Any&);
inline _207b80eb7_Log _1c2d08086_compiler_err(jule::Ptr<_1db7061a7_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2d083c7_imp_is_lookupable(jule::Ptr<_1c2d01854_ImportInfo>&, jule::Str);
inline void _1c2d086c4_append_ret_vars(jule::Slice<jule::Ptr<_1c2d266ae_Var>>&, jule::Ptr<_1dce3b644_FnIns>&);
inline void _1c2d0897c_append_param_vars(jule::Slice<jule::Ptr<_1c2d266ae_Var>>&, jule::Ptr<_1dce3b644_FnIns>&);
inline void _1c2d08c57_append_generic_type_aliases(jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Ptr<_1c2d68c84_SymbolTable> _1c2d090a9_find_file(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>&, jule::Ptr<_1db70b542_File>&);
inline void _1c2d0951b_push_suggestion(_207b80eb7_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c2d47cb8_trait_has_reference_receiver(jule::Ptr<_1c2c3d54e_Trait>&);
inline jule::Bool _1c2d3ece3_float_assignable(jule::Str, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1c2d3ee25_sig_assignable(jule::Str, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1c2d56513_unsig_assignable(jule::Str, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1c2d56645_int_assignable(jule::Str, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1dcd36671_Directive> _1c2d99006_find_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Str);
inline jule::Any _1c2d9938b_find_builtins_import(jule::Str, jule::Ptr<_1c2d01854_ImportInfo>);
inline void _1c2d9959a_fit_bitsize(jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d99897_make_struct_lit_alloc(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1dce31ccc_StructLitExprModel>&);
inline jule::Ptr<_1c2d266ae_Var> _1c2d99bd8_build_error_var(jule::Ptr<_1c2cd2d1e_Scope>&, jule::Ptr<_1dcd73658_FnCallExpr>&);
inline jule::Any _1c2d9a029_find_builtins_sema(jule::Str, jule::Ptr<_1c2d099a0_Sema>);
inline jule::Bool _1c2d9a2c1_is_ok_for_shifting(jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1c2d9a678_is_instanced_struct(jule::Ptr<_1dcd868e1_StructIns>);
inline jule::Bool _1c2d9a953_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d9ab84_apply_cast_kind_model(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline void _1c2d9ae3c_apply_cast_kind(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9b13a_build_void_data(void);
inline jule::Str _1c2d9b404_check_data_for_integer_indexing(jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d9b6e0_apply_cast_model_by_enum(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2c4070a_Enum>);
inline void _1c2d9b9a9_cast_const_by_type(jule::Str&, jule::Ptr<_1c2d6d9e2_Data>&);
inline void _1c2d9beb5_update_model_to_generic_ins(jule::Any&, jule::Ptr<_1dce3b644_FnIns>&);
inline jule::Bool _1c2d9c229_push_sub_ident_from_expr(jule::Any, jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>&);
inline jule::Bool _1c2db6122_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>&);
inline jule::Bool _1c2db64a7_has_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Str);
inline jule::Bool _1c2db674e_can_get_ptr(jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1c2db6a6d_is_valid_for_sptr_type(jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2db6d15_is_valid_for_ref(jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Bool _1c2db70ce_is_builtin_str_convertable(jule::Ptr<_1c2d9e825_TypeKind>&);
inline jule::Str _1c2db7376_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1c2da42ec_Prim> _1c2db773e_build_prim_type(jule::Str);
inline jule::Ptr<_1dcd5a596_Struct> _1c2db79d6_get_struct_from_kind(jule::Ptr<_1c2d9e825_TypeKind>);
inline jule::Bool _1c2db7c7d_is_prim(jule::Str);
inline void _1c2db8036_apply_implicit_cast(jule::Ptr<_1c2d9e825_TypeKind>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline std::tuple<jule::Ptr<_1c2d68c84_SymbolTable>,jule::Slice<_207b80eb7_Log>> _1c2dbae29_build_symbols(jule::Ptr<_1dcd355c6_Ast>&, jule::Trait<_1c2cee05a_Importer>&, jule::Ptr<_1dce44dab_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1c2d047ad_Package>,jule::Slice<_207b80eb7_Log>> _1c2dbb358___analyze_package(jule::Slice<jule::Ptr<_1dcd355c6_Ast>>&, jule::Trait<_1c2cee05a_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1c2d047ad_Package>,jule::Slice<_207b80eb7_Log>> _1c2dbb743_analyze_package(jule::Slice<jule::Ptr<_1dcd355c6_Ast>>, jule::Trait<_1c2cee05a_Importer>, jule::I64);
inline jule::Ptr<_1dce3b644_FnIns> _1c2dc57d5_find_builtin_fn(jule::Str);
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2dc76d8_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1c2c3d54e_Trait> _1c2dc82bb_find_builtin_trait(jule::Str);
inline jule::Any _1c2dc8cd3_find_builtin_def(jule::Str);
inline jule::Any _1c2e02b31_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1c2e50497_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1c2e4e540_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1c2e29042_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e33975_builtin_caller_common_plain(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4ee58_builtin_caller_common(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e29be1_builtin_caller_common_mut(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4b938_builtin_caller_error(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4e331_builtin_caller_out(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2dc660a_builtin_caller_outln(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e17d33_builtin_caller_new(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e31d4c_builtin_caller_panic(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e2a010_builtin_caller_make(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4b0db_builtin_caller_append(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2dc3e21_caller_copy_slice(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e3e046_caller_copy_str(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e2899d_builtin_caller_copy(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2de0547_builtin_caller_clone(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e0b71c_builtin_caller_assert(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5db04_builtin_caller_std_mem_size_of(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5de12_builtin_caller_std_mem_align_of(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5e330_builtin_caller_std_mem_free(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5e75e_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5eb7c_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e600bc_builtin_caller_std_debug_out(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Ptr<_1c2d6d9e2_Data> _1c2e604a7_builtin_caller_std_debug_outln(jule::Ptr<_1c2d70560_Eval>&, jule::Ptr<_1dcd73658_FnCallExpr>&, jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1c3b5e2e8_find_module_file(jule::Slice<jule::Ptr<_205146a35_DirEntry>>&);
inline jule::Str _1c3b5e42a_find_module_file_deep(jule::Str);
inline jule::Slice<_207b80eb7_Log> _1c3b5e6b1_check_module_file(jule::Str);
inline jule::Ptr<_1c437d286_FileInfo> _1c43c4981_parse_file(jule::Ptr<_1db70b542_File>);
inline std::tuple<jule::Ptr<_1dcd355c6_Ast>,jule::Slice<_207b80eb7_Log>> _1c43c4eae_parse_fileset(jule::Ptr<_1db70b542_File>);
inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43c58b6_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1c43c5bc4_is_st(jule::Ptr<_1db7061a7_Token>, jule::Ptr<_1db7061a7_Token>);
inline jule::Bool _1c43c6037_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1c43c63cd_next_st_pos(jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::Bool> _1c43c671e_skip_st(jule::I64&, jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _1c43c6db2_split_stmts(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Slice<jule::Ptr<_1db7061a7_Token>> _1c43d37e7_get_block_expr(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43d3b49_split_delim(jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::U64);
inline jule::I64 _1c43d3de1_find_lowest_prec_op(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd71403_IdentExpr> _1c43d4210_build_ident_expr(jule::Ptr<_1db7061a7_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::I64> _1c43d44a7_get_range_expr_tokens(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Bool _1c43dedec_check_assign_tokens(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline _207b80eb7_Log _1c43e0cdd_make_err(jule::I64, jule::I64, jule::Ptr<_1db70b542_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1db7061a7_Token>> _1c43e1283_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43e152a_range_last(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>,jule::Slice<_207b80eb7_Log>> _1c43e198c_parts_kind(jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>,jule::Slice<_207b80eb7_Log>> _1c43e1d77_parts(jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1c43e2141_get_close_kind_of_brace(jule::Str);
inline _207b80eb7_Log _1c43e2509_compiler_err(jule::Ptr<_1db7061a7_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1c43e296b_push_suggestion(_207b80eb7_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c43e2c13_tokstoa(jule::Slice<jule::Ptr<_1db7061a7_Token>>&);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44038e4_build_void_type(void);
inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4403b58_build_prim_type(jule::Ptr<_1db7061a7_Token>);
inline jule::I64 _1c4403e99_map_colon(jule::Slice<jule::Ptr<_1db7061a7_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1c3b38c0c_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1c3b33c29_check_arch(jule::Str);
inline jule::Bool _1c3b33d5b_is_pass_file_annotation(jule::Str);
inline void _1c3b4d4b3_set_os_vars(jule::Slice<jule::Str>&);
inline void _1c3b4d716_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1c3b4d9be_init_vars(jule::Slice<jule::Str>&, _1c3b4d1a5_CompileInfo&);
inline jule::Slice<jule::U8> _1c4196720_read_buff(jule::Str);
inline _207b80eb7_Log _1c41a0949_flat_compiler_err(jule::Str);
inline void _1c42d92d0_push_passes(jule::Ptr<_1c2d047ad_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1c4309773_get_all_unique_passes(jule::Ptr<_1c2d047ad_Package>&, jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>>);
inline _1c3b4d1a5_CompileInfo _1c4315592_build_compile_info(void);
inline void _1a947d2a2_eliminate_defines(jule::Ptr<_1c41b3132_IR>&);
inline jule::Ptr<_1dcd36671_Directive> _1a947d637_find_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Str);
inline jule::Bool _1a947d978_has_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Str);
inline void _1a94825c5_eliminate_dead_code_of_scope(jule::Ptr<_1c2cd2d1e_Scope>);
inline void _1a948285b_eliminate_scope_functions(jule::Slice<jule::Ptr<_1dce38993_Fn>>&);
inline void _1a9482aae_eliminate_functions_scope_package(jule::Ptr<_1c2d047ad_Package>&);
inline void _1a9482d67_eliminate_scope_package(jule::Ptr<_1c2d047ad_Package>&);
inline void _1a9483054_eliminate_scopes(jule::Ptr<_1c41b3132_IR>&);
inline jule::Bool _1c2e66788_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1c2e66aa7_is_constant_valid_conditional_case(jule::Ptr<_1c2cd321a_If>&);
inline jule::Bool _1c2e66d82_is_unreachable_expr(jule::Any&);
inline jule::Bool _1c2e67190_is_constant_valid_match_case(jule::Ptr<_1c2cd763c_Case>&);
inline jule::Bool _1c2e67437_is_unreachable_conditional_case(jule::Ptr<_1c2cd321a_If>&);
inline jule::Bool _1c2e67712_is_unreachable_match_case(jule::Ptr<_1c2cd763c_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1c2e6e890_check_for_bit_shift_opt(jule::Ptr<_1dce31529_OperandExprModel>&, jule::Ptr<_1dce31529_OperandExprModel>&);
inline void _1c2e71b28_push_opt_level(jule::I64);
inline void _1a9423b2c_detect_enabled(void);
inline void _1a94a07d0_throw(jule::Str);
inline jule::U64 _1a9a77439_unix(void);
inline jule::U64 _1a9a7777a_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1a9a77b10_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1a9a01a45_is_copy_optimizable(jule::Ptr<_1c2d6d9e2_Data>&);
inline jule::Bool _1a9a01dec_is_iter_copy_optimizable(jule::Ptr<_1c2d6d9e2_Data>&, jule::Ptr<_1c2d266ae_Var>&);
inline jule::Str _1a9a10009_decompose_common_esq(jule::U8);
inline jule::Str _1a9a102e5_sbtoa(jule::U8);
inline jule::Str _1a9a1058c_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1a9a108ab_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1a9a10bb9_ftoa(jule::F64, jule::I64);
inline jule::Str _1a9a10e61_itoa(jule::I64);
inline jule::Str _1a9a11208_utoa(jule::U64);
inline jule::Bool _1a9a115b0_is_forwarded(jule::Ptr<_1c2cd2d1e_Scope>&);
inline jule::Bool _1a9a11879_is_builtin_call_has_debuginf(jule::Ptr<_1dce32393_FnCallExprModel>&);
inline void _1a9a7c9b1_iter_files(jule::Ptr<_1c2d047ad_Package>&, jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>);
inline void _1a9a7cc14_prepare_structure(jule::Ptr<_1dcd5a596_Struct>&);
inline jule::Str _1a9a7ceab_concat_all_parts(jule::Slice<jule::Ptr<_1db7061a7_Token>>);
inline jule::Ptr<_1dcd36671_Directive> _1a9a8b23e_find_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Str);
inline jule::Bool _1a9a8b5c4_has_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>&, jule::Str);
inline void _207b4c9de_print_error_message(jule::Str);
inline void _207b63043_help(jule::Slice<jule::Str>&);
inline void _207b64907_version(jule::Slice<jule::Str>&);
inline void _207b65155_tool_distos(void);
inline void _207b658a3_tool_distarch(void);
inline void _207b66101_tool(jule::Slice<jule::Str>&);
inline void _207b6684e_julenv(jule::Slice<jule::Str>&);
inline void _207b4d8e1_mod(jule::Slice<jule::Str>&);
inline jule::Bool _207b7332d_process_command(jule::Slice<jule::Str>&);
inline void _207b6ba1e_show_info(void);
void entry_point(void);
inline void _207b54a29_enable_vtp(void);
inline void _207b67388_init(void);
inline void _1a952ebd3_init(void);
inline jule::Ptr<_205d30ac5_File> _1a98c350a_open_output(jule::Str&);
inline void _1a9a90210_clear_objects(void);
inline void _1a9a91cb1_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1a9a9ce98_is_cpp_source_file(jule::Str);
inline void _1a9a8d571_push_comp_cmd_clang(jule::Str&);
inline void _1a9a8b816_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1a982d1ce_gen_compile_cmd(jule::Str, jule::Ptr<_1c41b3132_IR>&);
inline jule::Str _1a98c286c_get_compile_path(void);
inline void _1a96a21a7_apply_target_independent_optimizations(jule::Ptr<_1c41b3132_IR>&);
inline void _1a98c57a4_check_compiler_flag(void);
inline void _1a9a98c52_check_target_arch(jule::Str);
inline void _1a9abd903_check_target_os(jule::Str);
inline void _1a9abda35_check_target_flag(jule::Str&);
inline void _1a9abdb67_check_opt_flag(jule::Str&);
inline void _1a9abdeca_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1a9abe10c_check_flags(jule::Slice<jule::Str>&);
inline void _1a9abe23e_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1c41b3132_IR> _1a9abe371_build_ir(jule::Slice<jule::Str>&);
inline void _1a9abe4a3_compile_command(jule::Slice<jule::Str>&);


struct _1c2cee05a_ImporterMptrData {
	void(*_1c2cece7c_set_mod_path)(jule::Trait<_1c2cee05a_Importer>, jule::Str);
	jule::Str(*_1c2ced1be_get_mod_path)(jule::Trait<_1c2cee05a_Importer>);
	jule::Str(*_1c2ced4cc_mod_by_id)(jule::Trait<_1c2cee05a_Importer>, jule::I64);
	jule::Ptr<_1c2d01854_ImportInfo>(*_1c2ced7da_get_import)(jule::Trait<_1c2cee05a_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1dcd355c6_Ast>>,jule::Slice<_207b80eb7_Log>>(*_1c2cedb92_import_package)(jule::Trait<_1c2cee05a_Importer>, jule::Str, jule::Bool);
	void(*_1c2cede17_imported)(jule::Trait<_1c2cee05a_Importer>, jule::Ptr<_1c2d01854_ImportInfo>);
};

struct _1c2d9e3e6_KindMptrData {
	jule::Str(*_1c2d9de95_to_str)(jule::Trait<_1c2d9e3e6_Kind>);
	jule::Bool(*_1c2d9e2a3_equals)(jule::Trait<_1c2d9e3e6_Kind>, jule::Ptr<_1c2d9e825_TypeKind>);
};

struct _1c2dba3bd_LookupMptrData {
	jule::Ptr<_1c2d01854_ImportInfo>(*_1c2db8575_find_package)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str);
	jule::Ptr<_1c2d01854_ImportInfo>(*_1c2db8883_select_package)(jule::Trait<_1c2dba3bd_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>);
	jule::Ptr<_1c2d266ae_Var>(*_1c2db8c3a_find_var)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c2d9db32_TypeAlias>(*_1c2db90e2_find_type_alias)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dcd5a596_Struct>(*_1c2db9499_find_struct)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dce38993_Fn>(*_1c2db9851_find_fn)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c2c3d54e_Trait>(*_1c2db9b5e_find_trait)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str);
	jule::Ptr<_1c2c4070a_Enum>(*_1c2db9e6c_find_enum)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str);
	jule::Ptr<_1c2c41d05_TypeEnum>(*_1c2dba27a_find_type_enum)(jule::Trait<_1c2dba3bd_Lookup>, jule::Str);
};

struct _1a96a4dd0_CommonFlagMptrData {
	jule::Str(*_1a96a4c9d_name)(jule::Trait<_1a96a4dd0_CommonFlag>);
	jule::I32(*_1a9a9bbcd_short)(jule::Trait<_1a96a4dd0_CommonFlag>);
	jule::Str(*_1a9ab818e_what)(jule::Trait<_1a96a4dd0_CommonFlag>);
	void(*_1a9ab82c1_reset)(jule::Trait<_1a96a4dd0_CommonFlag>);
};



inline void _1c2cece7c_set_mod_path_0(jule::Trait<_1c2cee05a_Importer> _self_, jule::Str _1735_path) {
	_1c41c36b4_set_mod_path(_self_.safe_ptr<_1c4378d75_JuleImporter>(), _1735_path);
}
inline jule::Str _1c2ced1be_get_mod_path_0(jule::Trait<_1c2cee05a_Importer> _self_) {
	return _1c41d4351_get_mod_path(_self_.safe_ptr<_1c4378d75_JuleImporter>());
}
inline jule::Str _1c2ced4cc_mod_by_id_0(jule::Trait<_1c2cee05a_Importer> _self_, jule::I64 _2528_id) {
	return _1c41d9d18_mod_by_id(_self_.safe_ptr<_1c4378d75_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2ced7da_get_import_0(jule::Trait<_1c2cee05a_Importer> _self_, jule::Str _3133_path) {
	return _1c41eea75_get_import(_self_.safe_ptr<_1c4378d75_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1dcd355c6_Ast>>,jule::Slice<_207b80eb7_Log>> _1c2cedb92_import_package_0(jule::Trait<_1c2cee05a_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1c420ee1a_import_package(_self_.safe_ptr<_1c4378d75_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1c2cede17_imported_0(jule::Trait<_1c2cee05a_Importer> _self_, jule::Ptr<_1c2d01854_ImportInfo> _4135__0) {
	_1c4234c86_imported(_self_.safe_ptr<_1c4378d75_JuleImporter>(), _4135__0);
}
inline jule::Str _1c2d9de95_to_str_0(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1dcd5c279_to_str(_self_.safe_ptr<_1dcd868e1_StructIns>());
}
inline jule::Bool _1c2d9e2a3_equals_0(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1dcd5d3e0_equals(_self_.data.as<_1dcd868e1_StructIns>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_1(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1dce3b974_to_str(_self_.safe_ptr<_1dce3b644_FnIns>());
}
inline jule::Bool _1c2d9e2a3_equals_1(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1dce3bc82_equals(_self_.data.as<_1dce3b644_FnIns>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_2(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2c3d917_to_str(_self_.safe_ptr<_1c2c3d54e_Trait>());
}
inline jule::Bool _1c2d9e2a3_equals_2(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2c3dc25_equals(_self_.data.as<_1c2c3d54e_Trait>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_3(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2c40a6d_to_str(_self_.safe_ptr<_1c2c4070a_Enum>());
}
inline jule::Bool _1c2d9e2a3_equals_3(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2c40d7b_equals(_self_.data.as<_1c2c4070a_Enum>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_4(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2c42135_to_str(_self_.safe_ptr<_1c2c41d05_TypeEnum>());
}
inline jule::Bool _1c2d9e2a3_equals_4(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2c42443_equals(_self_.data.as<_1c2c41d05_TypeEnum>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_5(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2d9ec21_to_str(_self_.safe_ptr<_1c2d9e825_TypeKind>());
}
inline jule::Bool _1c2d9e2a3_equals_5(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2da002e_equals(_self_.data.as<_1c2d9e825_TypeKind>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_6(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2da4660_to_str(_self_.safe_ptr<_1c2da42ec_Prim>());
}
inline jule::Bool _1c2d9e2a3_equals_6(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2da496d_equals(_self_.data.as<_1c2da42ec_Prim>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_7(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2da7de4_to_str(_self_.safe_ptr<_1c2da7a81_Sptr>());
}
inline jule::Bool _1c2d9e2a3_equals_7(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2da8202_equals(_self_.data.as<_1c2da7a81_Sptr>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_8(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2da89e9_to_str(_self_.safe_ptr<_1c2da84dd_Slc>());
}
inline jule::Bool _1c2d9e2a3_equals_8(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2da8d07_equals(_self_.data.as<_1c2da84dd_Slc>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_9(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2da93ce_to_str(_self_.safe_ptr<_1c2da906b_Tuple>());
}
inline jule::Bool _1c2d9e2a3_equals_9(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2da96dc_equals(_self_.data.as<_1c2da906b_Tuple>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_10(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2da9e07_to_str(_self_.safe_ptr<_1c2da9a94_Map>());
}
inline jule::Bool _1c2d9e2a3_equals_10(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2daa215_equals(_self_.data.as<_1c2da9a94_Map>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_11(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2daa9eb_to_str(_self_.safe_ptr<_1c2daa688_Arr>());
}
inline jule::Bool _1c2d9e2a3_equals_11(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2daad09_equals(_self_.data.as<_1c2daa688_Arr>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_12(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1c2dab458_to_str(_self_.safe_ptr<_1c2dab0e5_Ptr>());
}
inline jule::Bool _1c2d9e2a3_equals_12(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1c2dab766_equals(_self_.data.as<_1c2dab0e5_Ptr>(), _5626_other);
}
inline jule::Str _1c2d9de95_to_str_13(jule::Trait<_1c2d9e3e6_Kind> _self_) {
	return _1a9a7de8a_to_str(_self_.safe_ptr<_1a9a7dbc1_CustomType>());
}
inline jule::Bool _1c2d9e2a3_equals_13(jule::Trait<_1c2d9e3e6_Kind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _5626_other) {
	return _1a9a7e298_equals(_self_.data.as<_1a9a7dbc1_CustomType>(), _5626_other);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8575_find_package_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _935_ident) {
	return _1c2cd9e58_find_package(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8883_select_package_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _1337_selector) {
	return _1c2cda266_select_package(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1c2d266ae_Var> _1c2db8c3a_find_var_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2cda61d_find_var(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2db90e2_find_type_alias_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2cda9c5_find_type_alias(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1dcd5a596_Struct> _1c2db9499_find_struct_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2cdad7c_find_struct(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1dce38993_Fn> _1c2db9851_find_fn_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2cdb234_find_fn(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2c3d54e_Trait> _1c2db9b5e_find_trait_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2cdb542_find_trait(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1c2c4070a_Enum> _1c2db9e6c_find_enum_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2cdb850_find_enum(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2dba27a_find_type_enum_0(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _4137_ident) {
	return _1c2cdbb5d_find_type_enum(_self_.safe_ptr<_1c2cd9a07_ScopeChecker>(), _4137_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8575_find_package_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _935_ident) {
	return _1c2d01d71_find_package(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8883_select_package_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _1337_selector) {
	return _1c2d0217e_select_package(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1c2d266ae_Var> _1c2db8c3a_find_var_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2d02536_find_var(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2db90e2_find_type_alias_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2d028dd_find_type_alias(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1dcd5a596_Struct> _1c2db9499_find_struct_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2d02c95_find_struct(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1dce38993_Fn> _1c2db9851_find_fn_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2d0314c_find_fn(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2c3d54e_Trait> _1c2db9b5e_find_trait_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2d0345a_find_trait(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1c2c4070a_Enum> _1c2db9e6c_find_enum_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2d03768_find_enum(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2dba27a_find_type_enum_1(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _4137_ident) {
	return _1c2d03a76_find_type_enum(_self_.safe_ptr<_1c2d01854_ImportInfo>(), _4137_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8575_find_package_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _935_ident) {
	return _1c2d04c86_find_package(_self_.safe_ptr<_1c2d047ad_Package>(), _935_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8883_select_package_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _1337_selector) {
	return _1c2d05094_select_package(_self_.safe_ptr<_1c2d047ad_Package>(), _1337_selector);
}
inline jule::Ptr<_1c2d266ae_Var> _1c2db8c3a_find_var_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2d0544b_find_var(_self_.safe_ptr<_1c2d047ad_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2db90e2_find_type_alias_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2d05803_find_type_alias(_self_.safe_ptr<_1c2d047ad_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1dcd5a596_Struct> _1c2db9499_find_struct_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2d05baa_find_struct(_self_.safe_ptr<_1c2d047ad_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1dce38993_Fn> _1c2db9851_find_fn_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2d06062_find_fn(_self_.safe_ptr<_1c2d047ad_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2c3d54e_Trait> _1c2db9b5e_find_trait_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2d06370_find_trait(_self_.safe_ptr<_1c2d047ad_Package>(), _3333_ident);
}
inline jule::Ptr<_1c2c4070a_Enum> _1c2db9e6c_find_enum_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2d0667d_find_enum(_self_.safe_ptr<_1c2d047ad_Package>(), _3732_ident);
}
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2dba27a_find_type_enum_2(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _4137_ident) {
	return _1c2d0698b_find_type_enum(_self_.safe_ptr<_1c2d047ad_Package>(), _4137_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8575_find_package_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _935_ident) {
	return _1c2d09ebc_find_package(_self_.safe_ptr<_1c2d099a0_Sema>(), _935_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8883_select_package_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _1337_selector) {
	return _1c2d0a2ca_select_package(_self_.safe_ptr<_1c2d099a0_Sema>(), _1337_selector);
}
inline jule::Ptr<_1c2d266ae_Var> _1c2db8c3a_find_var_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2d0a682_find_var(_self_.safe_ptr<_1c2d099a0_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2db90e2_find_type_alias_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2d0aa39_find_type_alias(_self_.safe_ptr<_1c2d099a0_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1dcd5a596_Struct> _1c2db9499_find_struct_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2d0ade1_find_struct(_self_.safe_ptr<_1c2d099a0_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1dce38993_Fn> _1c2db9851_find_fn_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2d0b298_find_fn(_self_.safe_ptr<_1c2d099a0_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2c3d54e_Trait> _1c2db9b5e_find_trait_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2d0b5a6_find_trait(_self_.safe_ptr<_1c2d099a0_Sema>(), _3333_ident);
}
inline jule::Ptr<_1c2c4070a_Enum> _1c2db9e6c_find_enum_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2d0b8b4_find_enum(_self_.safe_ptr<_1c2d099a0_Sema>(), _3732_ident);
}
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2dba27a_find_type_enum_3(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _4137_ident) {
	return _1c2d0bbc2_find_type_enum(_self_.safe_ptr<_1c2d099a0_Sema>(), _4137_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8575_find_package_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _935_ident) {
	return _1c2d692a1_find_package(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1c2d01854_ImportInfo> _1c2db8883_select_package_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _1337_selector) {
	return _1c2d695ae_select_package(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1c2d266ae_Var> _1c2db8c3a_find_var_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1c2d69966_find_var(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2db90e2_find_type_alias_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1c2d69d1d_find_type_alias(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1dcd5a596_Struct> _1c2db9499_find_struct_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1c2d6a1c5_find_struct(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1dce38993_Fn> _1c2db9851_find_fn_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1c2d6a57c_find_fn(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1c2c3d54e_Trait> _1c2db9b5e_find_trait_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3333_ident) {
	return _1c2d6a88a_find_trait(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1c2c4070a_Enum> _1c2db9e6c_find_enum_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _3732_ident) {
	return _1c2d6ab98_find_enum(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _3732_ident);
}
inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2dba27a_find_type_enum_4(jule::Trait<_1c2dba3bd_Lookup> _self_, jule::Str _4137_ident) {
	return _1c2d6aea6_find_type_enum(_self_.safe_ptr<_1c2d68c84_SymbolTable>(), _4137_ident);
}
inline jule::Str _1a96a4c9d_name_0(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac0d63ad_name(_self_.safe_ptr<_1ac2e0694_Flag>());
}
inline jule::I32 _1a9a9bbcd_short_0(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e0bb1_short(_self_.safe_ptr<_1ac2e0694_Flag>());
}
inline jule::Str _1a9ab818e_what_0(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac0d64e0_what(_self_.safe_ptr<_1ac2e0694_Flag>());
}
inline void _1a9ab82c1_reset_0(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	_1ac2e0a7e_reset(_self_.safe_ptr<_1ac2e0694_Flag>());
}
inline jule::Str _1a96a4c9d_name_1(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e3da1_name(_self_.safe_ptr<_1ac2e4357_Flag>());
}
inline jule::I32 _1a9a9bbcd_short_1(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e4885_short(_self_.safe_ptr<_1ac2e4357_Flag>());
}
inline jule::Str _1a9ab818e_what_1(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e4621_what(_self_.safe_ptr<_1ac2e4357_Flag>());
}
inline void _1a9ab82c1_reset_1(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	_1ac2e4753_reset(_self_.safe_ptr<_1ac2e4357_Flag>());
}
inline jule::Str _1a96a4c9d_name_2(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e7888_name(_self_.safe_ptr<_1ac2e7d3e_Flag>());
}
inline jule::I32 _1a9a9bbcd_short_2(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e836c_short(_self_.safe_ptr<_1ac2e7d3e_Flag>());
}
inline jule::Str _1a9ab818e_what_2(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2e8108_what(_self_.safe_ptr<_1ac2e7d3e_Flag>());
}
inline void _1a9ab82c1_reset_2(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	_1ac2e823a_reset(_self_.safe_ptr<_1ac2e7d3e_Flag>());
}
inline jule::Str _1a96a4c9d_name_3(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2eb3b4_name(_self_.safe_ptr<_1ac2eb86a_Flag>());
}
inline jule::I32 _1a9a9bbcd_short_3(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2ebd98_short(_self_.safe_ptr<_1ac2eb86a_Flag>());
}
inline jule::Str _1a9ab818e_what_3(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2ebb34_what(_self_.safe_ptr<_1ac2eb86a_Flag>());
}
inline void _1a9ab82c1_reset_3(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	_1ac2ebc66_reset(_self_.safe_ptr<_1ac2eb86a_Flag>());
}
inline jule::Str _1a96a4c9d_name_4(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac2eed9b_name(_self_.safe_ptr<_1ac300352_Flag>());
}
inline jule::I32 _1a9a9bbcd_short_4(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac300880_short(_self_.safe_ptr<_1ac300352_Flag>());
}
inline jule::Str _1a9ab818e_what_4(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	return _1ac30061b_what(_self_.safe_ptr<_1ac300352_Flag>());
}
inline void _1a9ab82c1_reset_4(jule::Trait<_1a96a4dd0_CommonFlag> _self_) {
	_1ac30074d_reset(_self_.safe_ptr<_1ac300352_Flag>());
}


static _1c2cee05a_ImporterMptrData _1c2cee05a_Importer_mptr_data[] = {
	{
		._1c2cece7c_set_mod_path=_1c2cece7c_set_mod_path_0,
		._1c2ced1be_get_mod_path=_1c2ced1be_get_mod_path_0,
		._1c2ced4cc_mod_by_id=_1c2ced4cc_mod_by_id_0,
		._1c2ced7da_get_import=_1c2ced7da_get_import_0,
		._1c2cedb92_import_package=_1c2cedb92_import_package_0,
		._1c2cede17_imported=_1c2cede17_imported_0,
	},
};
static _1c2d9e3e6_KindMptrData _1c2d9e3e6_Kind_mptr_data[] = {
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_0,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_0,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_1,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_1,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_2,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_2,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_3,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_3,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_4,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_4,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_5,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_5,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_6,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_6,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_7,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_7,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_8,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_8,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_9,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_9,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_10,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_10,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_11,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_11,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_12,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_12,
	},
	{
		._1c2d9de95_to_str=_1c2d9de95_to_str_13,
		._1c2d9e2a3_equals=_1c2d9e2a3_equals_13,
	},
};
static _1c2dba3bd_LookupMptrData _1c2dba3bd_Lookup_mptr_data[] = {
	{
		._1c2db8575_find_package=_1c2db8575_find_package_0,
		._1c2db8883_select_package=_1c2db8883_select_package_0,
		._1c2db8c3a_find_var=_1c2db8c3a_find_var_0,
		._1c2db90e2_find_type_alias=_1c2db90e2_find_type_alias_0,
		._1c2db9499_find_struct=_1c2db9499_find_struct_0,
		._1c2db9851_find_fn=_1c2db9851_find_fn_0,
		._1c2db9b5e_find_trait=_1c2db9b5e_find_trait_0,
		._1c2db9e6c_find_enum=_1c2db9e6c_find_enum_0,
		._1c2dba27a_find_type_enum=_1c2dba27a_find_type_enum_0,
	},
	{
		._1c2db8575_find_package=_1c2db8575_find_package_1,
		._1c2db8883_select_package=_1c2db8883_select_package_1,
		._1c2db8c3a_find_var=_1c2db8c3a_find_var_1,
		._1c2db90e2_find_type_alias=_1c2db90e2_find_type_alias_1,
		._1c2db9499_find_struct=_1c2db9499_find_struct_1,
		._1c2db9851_find_fn=_1c2db9851_find_fn_1,
		._1c2db9b5e_find_trait=_1c2db9b5e_find_trait_1,
		._1c2db9e6c_find_enum=_1c2db9e6c_find_enum_1,
		._1c2dba27a_find_type_enum=_1c2dba27a_find_type_enum_1,
	},
	{
		._1c2db8575_find_package=_1c2db8575_find_package_2,
		._1c2db8883_select_package=_1c2db8883_select_package_2,
		._1c2db8c3a_find_var=_1c2db8c3a_find_var_2,
		._1c2db90e2_find_type_alias=_1c2db90e2_find_type_alias_2,
		._1c2db9499_find_struct=_1c2db9499_find_struct_2,
		._1c2db9851_find_fn=_1c2db9851_find_fn_2,
		._1c2db9b5e_find_trait=_1c2db9b5e_find_trait_2,
		._1c2db9e6c_find_enum=_1c2db9e6c_find_enum_2,
		._1c2dba27a_find_type_enum=_1c2dba27a_find_type_enum_2,
	},
	{
		._1c2db8575_find_package=_1c2db8575_find_package_3,
		._1c2db8883_select_package=_1c2db8883_select_package_3,
		._1c2db8c3a_find_var=_1c2db8c3a_find_var_3,
		._1c2db90e2_find_type_alias=_1c2db90e2_find_type_alias_3,
		._1c2db9499_find_struct=_1c2db9499_find_struct_3,
		._1c2db9851_find_fn=_1c2db9851_find_fn_3,
		._1c2db9b5e_find_trait=_1c2db9b5e_find_trait_3,
		._1c2db9e6c_find_enum=_1c2db9e6c_find_enum_3,
		._1c2dba27a_find_type_enum=_1c2dba27a_find_type_enum_3,
	},
	{
		._1c2db8575_find_package=_1c2db8575_find_package_4,
		._1c2db8883_select_package=_1c2db8883_select_package_4,
		._1c2db8c3a_find_var=_1c2db8c3a_find_var_4,
		._1c2db90e2_find_type_alias=_1c2db90e2_find_type_alias_4,
		._1c2db9499_find_struct=_1c2db9499_find_struct_4,
		._1c2db9851_find_fn=_1c2db9851_find_fn_4,
		._1c2db9b5e_find_trait=_1c2db9b5e_find_trait_4,
		._1c2db9e6c_find_enum=_1c2db9e6c_find_enum_4,
		._1c2dba27a_find_type_enum=_1c2dba27a_find_type_enum_4,
	},
};
static _1a96a4dd0_CommonFlagMptrData _1a96a4dd0_CommonFlag_mptr_data[] = {
	{
		._1a96a4c9d_name=_1a96a4c9d_name_0,
		._1a9a9bbcd_short=_1a9a9bbcd_short_0,
		._1a9ab818e_what=_1a9ab818e_what_0,
		._1a9ab82c1_reset=_1a9ab82c1_reset_0,
	},
	{
		._1a96a4c9d_name=_1a96a4c9d_name_1,
		._1a9a9bbcd_short=_1a9a9bbcd_short_1,
		._1a9ab818e_what=_1a9ab818e_what_1,
		._1a9ab82c1_reset=_1a9ab82c1_reset_1,
	},
	{
		._1a96a4c9d_name=_1a96a4c9d_name_2,
		._1a9a9bbcd_short=_1a9a9bbcd_short_2,
		._1a9ab818e_what=_1a9ab818e_what_2,
		._1a9ab82c1_reset=_1a9ab82c1_reset_2,
	},
	{
		._1a96a4c9d_name=_1a96a4c9d_name_3,
		._1a9a9bbcd_short=_1a9a9bbcd_short_3,
		._1a9ab818e_what=_1a9ab818e_what_3,
		._1a9ab82c1_reset=_1a9ab82c1_reset_3,
	},
	{
		._1a96a4c9d_name=_1a96a4c9d_name_4,
		._1a9a9bbcd_short=_1a9a9bbcd_short_4,
		._1a9ab818e_what=_1a9ab818e_what_4,
		._1a9ab82c1_reset=_1a9ab82c1_reset_4,
	},
};


jule::Str _1a9a8ca04_OUT_DIR = jule::Str("dist", 4);
jule::Str _1a9a92476_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1a9a93e6c_OUT = jule::Str();
jule::Str _204e247ad_COMPILER = jule::Str();
jule::Str _204ed0292_COMPILER_PATH = jule::Str();
jule::Str _204ed0506_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _204ed076a_SHADOWING = false;
jule::Bool _204ed0a45_TRANSPILATION = false;
jule::Bool _204ed0d53_TEST = false;
jule::Bool _204ed1161_RC = true;
jule::Bool _204ed157e_SAFETY = true;
jule::Bool _204ed188c_PRODUCTION = false;
jule::Ptr<_207b10e03_RangeTable> _207a91dea__L = jule::new_ptr<_207b10e03_RangeTable>(_207b10e03_RangeTable{._field_r16=jule::Slice<_207b1050c_Range16>::make({_207b1050c_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_207b1050c_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_207b1050c_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_207b1050c_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_207b1050c_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_207b1050c_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_207b1050c_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_207b1050c_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_207b1050c_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_207b1050c_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_207b1050c_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_207b1050c_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_207b1050c_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_207b1050c_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_207b1050c_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_207b1050c_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_207b1050c_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_207b1050c_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_207b1050c_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_207b1050c_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_207b1050c_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_207b1050c_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_207b1050c_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_207b1050c_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_207b1050c_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_207b1050c_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_207b1050c_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_207b1050c_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_207b1050c_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_207b1050c_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_207b1050c_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_207b1050c_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_207b1050c_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_207b1050c_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_207b1050c_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_207b1050c_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_207b1050c_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_207b1050c_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_207b1050c_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_207b1050c_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_207b1050c_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_207b1050c_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_207b1050c_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_207b1050c_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_207b1050c_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_207b1050c_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_207b1050c_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_207b1050c_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_207b1050c_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_207b1050c_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_207b1050c_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_207b1050c_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_207b1050c_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_207b1050c_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_207b1050c_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_207b10980_Range32>::make({_207b10980_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_207b10980_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_207b10980_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_207b10980_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_207b10980_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_207b10980_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_207b10980_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_207b10980_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_207b10980_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_207b10980_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_207b10980_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_207b10980_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_207b10980_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_207b10980_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_207b10980_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_207b10980_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_207b10980_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_207b10980_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_207b10980_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_207b10980_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_207b10980_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_207b10980_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_207b10980_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_207b10980_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_207b10980_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_207b10980_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_207b10980_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _207b17a0e_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _207b72d44_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _207b74373_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _207b843c7_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _207b8475c_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _207ba3825_PATH_STDLIB = jule::Str();
jule::Str _207ba4480_PATH_EXEC = jule::Str();
jule::Str _207ba53b5_PATH_WD = jule::Str();
jule::Str _207bbe005_PATH_API = jule::Str();
jule::Array<jule::I32,5> _1db656aec_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1db656d61_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1db6571a2_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1db6ea81c_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1db6eab5d_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1db70d599_KindPair,47> _1db70da2d_KEYWORDS = jule::Array<_1db70d599_KindPair,47>({_1db70d599_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1db70d599_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1db70d599_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1db70d599_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1db70d599_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1db70d599_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1db70d599_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1db70d599_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1db70d599_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1db70d599_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1db70d599_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1db70d599_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1db70d599_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1db70d599_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1db70d599_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_1db70d599_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_1db70d599_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1db70d599_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_1db70d599_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_1db70d599_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_1db70d599_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1db70d599_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_1db70d599_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_1db70d599_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_1db70d599_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_1db70d599_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_1db70d599_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_1db70d599_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_1db70d599_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_1db70d599_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_1db70d599_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_1db70d599_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1db70d599_KindPair,39> _1db70ddb3_BASIC_OPS = jule::Array<_1db70d599_KindPair,39>({_1db70d599_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_1db70d599_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1db70d599_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1db70d599_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1db70d599_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1db70d599_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1db70d599_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1dd9b1141_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1dd9b1790_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1c2c24e09_FloatInfo _1c2c25327_F32_INFO = _1c2c24e09_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1c2c24e09_FloatInfo _1c2c25679_F64_INFO = _1c2c24e09_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1c2c2cbae_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1c2c2e95d_POWTAB = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1c2c3050d_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1c2c30893_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1c2c3390c_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1c2c373d3_LeftCheat> _1c2c37867_LEFTCHEATS = jule::Slice<_1c2c373d3_LeftCheat>::make({_1c2c373d3_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1c2c373d3_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1c2c373d3_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1c2c373d3_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1c2c373d3_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1c2c373d3_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1c2c373d3_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1c2c373d3_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1c2c373d3_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1c2c373d3_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1c2c373d3_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1c2c373d3_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1c2c373d3_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1c2c373d3_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1c2c373d3_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1c2c373d3_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1c2c373d3_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1c2c373d3_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1c2c373d3_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1c2c373d3_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1c2c373d3_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1c2c373d3_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1c2c373d3_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1c2c373d3_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1c2c373d3_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1c2c373d3_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1c2c373d3_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1c2c373d3_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1c2c373d3_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1c2c373d3_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1c2c373d3_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1c2c373d3_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1c2c373d3_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1c2c373d3_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1c2c373d3_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1c2c373d3_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1c2c373d3_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1c2c373d3_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1c2c373d3_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1c2c373d3_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1c2c373d3_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1c2c373d3_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1c2c373d3_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1c2c373d3_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1c2c373d3_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1c2c373d3_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1c2c373d3_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1c2c373d3_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1c2c373d3_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1c2c373d3_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1c2c373d3_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1c2c373d3_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1c2c373d3_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1c2c373d3_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1c2c373d3_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1c2c373d3_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1c2c373d3_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1c2c373d3_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1c2c373d3_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1c2c373d3_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1c2c373d3_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1c2cbc0d3_BIT_SIZE = 0LL;
jule::Str _1c2cc496a_SYS_INT = jule::Str();
jule::Str _1c2cc4c23_SYS_UINT = jule::Str();
jule::Slice<jule::Str> _1c2c5a7e1_BUILTIN_CONSTRAINTS = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1c2e70154_COPY = false;
jule::Bool _1c2e704a6_DEADCODE = false;
jule::Bool _1c2e707b4_APPEND = false;
jule::Bool _1c2e70b16_MATH = false;
jule::Bool _1c2e70e24_ACCESS = false;
jule::Bool _1c2e71232_INLINE = false;
jule::Bool _1c2e71540_PTR = false;
jule::Bool _1c2e7195d_COND = false;
jule::Bool _1c4427495_expr_enabled = false;
jule::Bool _1c44285ea_scope_enabled = false;
jule::Array<jule::U64,12> _1a9a71851_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Array<_205e01c1d_accept_range,16> _205e02081_ACCEPT_RANGES = jule::Array<_205e01c1d_accept_range,16>({_205e01c1d_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_205e01c1d_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_205e01c1d_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_205e01c1d_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_205e01c1d_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _207b56b19_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_207b10e03_RangeTable> _207a99b17_LETTER = _207a91dea__L;
jule::Uintptr _205d06dba_STDIN = _205d1c84d_get_std_handle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Str _207bbe7db_OS = jule::Str("windows", 7);
jule::Str _207ba2c31_ARCH = jule::Str("arm64", 5);
jule::Uintptr _205d0a907_STDOUT = _205d1c84d_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _205d0532a_STDERR = _205d1c84d_get_std_handle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _205e0169b_FIRST = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _207b091e8__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _205e01c1d_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _207b1050c_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _207b10980_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _207b10e03_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _207b16090_index(_207b15da3_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _207b161c2_append(_207b15da3_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _207b16304_string(_207b15da3_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _207b15da3_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205146a35_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_205146a35_DirEntry>>> static__207b17019_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_205146a35_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_205146a35_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _205d05d42_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _205d1e4ed__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_205146a35_DirEntry>>>(_20512ab18_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _205d1e795__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1c4130a61;
			};
			jule::Str _2617_name = _205d06aac_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_205d30e8d_Status> _2721_stat = ({
				auto except = static__207b1758b_of(_207b167cc_join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_205146a35_DirEntry>>>(except.error);
				} jule::Ptr<_205d30e8d_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_205146a35_DirEntry>(_205146a35_DirEntry{._field_name=_2617_name, ._field_stat=_2721_stat}));;
		}
	_iter_next_1c4130a61:;
	}
	_iter_end_1c4130a61:;;
	_205d1ea3c__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_205146a35_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__207b1714b_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _205d05d42_utf16_from_str(_4026_path);;
	if ((!(_205d1deae_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_20512ab18_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__207b1727d_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _205d05d42_utf16_from_str(_5426_path);;
	if ((!(_205d1e256_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_20512ab18_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _20514876d_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_205d30ac5_File> static__20512d214_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_205d30ac5_File>(_205d30ac5_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_205d30ac5_File>> static__20512d9b7_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_205d30ac5_File>>(jule::Any(),({
		auto except = static__205d8906d_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_205d30ac5_File>>(except.error);
		} jule::Ptr<_205d30ac5_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20512e545_read(jule::Str _6724_path) {
	jule::Ptr<_205d30e8d_Status> _6813_s = ({
		auto except = static__207b1758b_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_205d30e8d_Status>();});
	});;
	if ((!(_20513542a_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_205d30ac5_File> _7817_f = ({
		auto except = static__205d8906d_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_205d30ac5_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _2051320d6_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _205dbcc94_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__205130029_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_205d30ac5_File> _9217_f = ({
		auto except = static__205d8906d_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_205d30ac5_File>();});
	});;
	({
		auto except = _205db4a7c_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2051320d6_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20513158b_seek(_205d30ac5_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _205d23788_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_20512ab18_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _2051320d6_close(_205d30ac5_File* _self_) {
	if ((_205d23ee7_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_20512ab18_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_205d30ac5_File>> static__205d8906d_open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _205d05d42_utf16_from_str(_2124_path);;
	jule::I64 _2313_handle = _205d1d189__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_205d30ac5_File>>(_20512ab18_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_205d30ac5_File>>(jule::Any(),static__20512d214_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__205d8a316_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _205d05d42_utf16_from_str(_3426_path);;
	if ((!(_205d1dc17_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_20512ab18_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _205db4a7c_write(_205d30ac5_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_205dc554e_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _205d05d42_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _205d20dc3_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_20512ab18_get_last_fs_error());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_205d243d2_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20512ab18_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _205dbcc94_read(_205d30ac5_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	if (_205dc554e_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _205d21401_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_20512ab18_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _205d1ae23_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1c4149c78:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I64 _9721_size = _205e03406_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1c4149c78;
					};
					_205e03824_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1c4149c78:;
				++it;
				goto _iter_begin_1c4149c78;
			}
			_iter_end_1c4149c78:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I64>(_205d23b73_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20512ab18_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _205d30ac5_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _205134160_is_dir(_205d30e8d_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _20513542a_is_reg(_205d30e8d_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_205d30e8d_Status>> static__207b1758b_of(jule::Str _1222_path) {
	if (_1222_path.empty()) {
		return jule::Exceptional<jule::Ptr<_205d30e8d_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16_path = _205d05d42_utf16_from_str(_1222_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _205d1cc9e_wstat((&(_1613_utf16_path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_205d30e8d_Status>>(jule::Any(),jule::new_ptr<_205d30e8d_Status>(_205d30e8d_Status{._field_mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_205d30e8d_Status>>(_20512ab18_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _205d30e8d_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_207bc0ba5_Cmd> static__207bc10d4_new(jule::Str _2023_path) {
	return jule::new_ptr<_207bc0ba5_Cmd>(_207bc0ba5_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _207bc1348_spawn(_207bc0ba5_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _207bd0e7e___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _207bd0e7e___spawn(_207bc0ba5_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_207bd0698_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_207bd0a83_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_207bc0424_get_last_process_error());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_207bc0424_get_last_process_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _207bc0ba5_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _207b80eb7_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1db70655e_prec(_1db7061a7_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1aa1a4a77:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aa1a4add:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1aa1a447d:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aa1a44e4:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1aa1a455a:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1aa1a423b:;
			{
				return 0LLU;
			}
		}
		_match_end_1aa1a41d6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1db7061a7_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1db70b94e_is_ok(_1db70b542_File* _self_) {
	({
		auto except = static__207b1758b_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_205d30e8d_Status>();});
	});
	return true;
}



inline void _1db70bbc4_fill(_1db70b542_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1db70be38_dir(_1db70b542_File* _self_) {
	return _207b16ca5_dir((*_self_)._field_path);
}



inline jule::Str _1db70c19c_name(_1db70b542_File* _self_) {
	return _207b16b73_base((*_self_)._field_path);
}



inline jule::Uintptr _1db70c411_addr(_1db70b542_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1db70c71e_get_row(_1db70b542_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1aa1a9708;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1aa1a9708:;
	}
	_iter_end_1aa1a9708:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1db70b542_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1db70d599_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1db71476a_push_err(_1db7141c6_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1db70e39c_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _1db714a89_push_err_tok(_1db7141c6_Lex* _self_, jule::Ptr<_1db7061a7_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1db70e39c_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _1db714c65_lex(_1db7141c6_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1db716c67_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_1db7061a7_Token> _47321_token = _1db7180dc_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1aa1e1454:;
	}
	_iter_end_1aa1e1454:;;
}



inline jule::Str _1db715073_id(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _205e02801_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_1db709683_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _205e02801_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1db709bc2_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1db709683_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1aa1e4677:;
	}
	_iter_end_1aa1e4677:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1db7152d7_resume(_1db7141c6_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_1db709232_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aa1e933b:;
						{
							_1db716c67_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aa1e93a2:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aa1e725c:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1aa1e8d96:;
				};
				goto _iter_next_1aa1e7515;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1aa1e825d;
					};
				}
			_iter_next_1aa1e825d:;
			}
			_iter_end_1aa1e825d:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1aa1e7515:;
	}
	_iter_end_1aa1e7515:;;
	return nullptr;
}



inline void _1db71555c_lex_line_comment(_1db7141c6_Lex* _self_, jule::Ptr<_1db7061a7_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1aa1ebc89;
			};
		}
	_iter_next_1aa1ebc89:;
	}
	_iter_end_1aa1ebc89:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _1db7157d2_lex_range_comment(_1db7141c6_Lex* _self_, jule::Ptr<_1db7061a7_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1aa200144;
			};
			if ((_55517_r == '\n')) {
				_1db716c67_new_line(&(*_self_));
				goto _iter_next_1aa200144;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aa200144:;
	}
	_iter_end_1aa200144:;;
	_1db71476a_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1db715ae0_num(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_1db712bb9_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1db712922_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1db71136b_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1db7110c4_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _1db715ded_escape_seq(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aa20a21a:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aa209e1d:;
			{
				_60217_seq=_1db7132c4_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aa209e84:;
			{
				_60217_seq=_1db71348e_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aa209eea:;
			{
				_60217_seq=_1db713747_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1aa20969d:;
			{
				_60217_seq=_1db7139de_byte_escape(_60130_txt);
			}
		}
		_match_end_1aa209cca:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1db71476a_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _1db7162a5_get_rune(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _1db715ded_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _205e02801_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1db7165b3_lex_rune(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1aa212145;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_1db71476a_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1db716c67_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _1db7162a5_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_205e044e5_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1aa212145;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1aa212145:;
	}
	_iter_end_1aa212145:;;
	if ((_64417_n == 0LL)) {
		_1db71476a_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1db71476a_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _1db716827_lex_str(_1db7141c6_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1aa21817e;
			};
			if ((_68917_ch == '\n')) {
				_1db716c67_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1db71476a_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _1db7162a5_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_205e044e5_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1aa21817e;
			};
		}
	_iter_next_1aa21817e:;
	}
	_iter_end_1aa21817e:;;
	return _68117_s;
}



inline jule::Bool _1db716a8b_is_first_token_of_line(_1db7141c6_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1db716c67_new_line(_1db7141c6_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1db717262_is_op(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_1db7061a7_Token>& _72267_t) {
	if ((!(_1db70e732_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _1db717619_lex_basic_ops(_1db7141c6_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_1db7061a7_Token>& _73350_tok) {
	{
		auto &expr = _1db70ddb3_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1aa21e76d:;
		if (it != expr.end()) {
			_1db70d599_KindPair &_73416_pair = *it;
			{
				if (_1db717262_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1aa21e76d:;
			++it;
			goto _iter_begin_1aa21e76d;
		}
		_iter_end_1aa21e76d:;
	};
	return false;
}



inline jule::Bool _1db7179c1_lex_id(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_1db7061a7_Token>& _74344_t) {
	jule::Str _74413_lex = _1db715073_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1db717d78_lex_num(_1db7141c6_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_1db7061a7_Token>& _75445_t) {
	jule::Str _75513_lex = _1db715ae0_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1db7061a7_Token> _1db7180dc_token(_1db7141c6_Lex* _self_) {
	jule::Ptr<_1db7061a7_Token> _76717_t = jule::new_ptr<_1db7061a7_Token>(_1db7061a7_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _1db7152d7_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1db717d78_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aa225ac6:;
			{
				goto _match_end_1aa224630;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1aa225b3c:;
			{
				_76717_t.get()._field_kind=_1db7165b3_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1aa226742:;
			{
				_76717_t.get()._field_kind=_1db716827_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_1db70e732_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1aa2267a8:;
			{
				_1db71555c_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1db70e732_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1aa22681e:;
			{
				_1db7157d2_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1db717262_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1db717262_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1db717262_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1db717262_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1db717262_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1db717262_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _1db717619_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aa225048:;
			{
				goto _match_end_1aa224630;
			}
		}
		else if (_1db7179c1_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aa2250ae:;
			{
				{
					auto &expr = _1db70da2d_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1aa22c23c:;
					if (it != expr.end()) {
						_1db70d599_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1aa22c23c;
							};
						}
						_iter_next_1aa22c23c:;
						++it;
						goto _iter_begin_1aa22c23c;
					}
					_iter_end_1aa22c23c:;
				};
			}
		}
		else {
			_case_begin_1aa224ed2:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _205e02801_decode_rune(_77213_txt);
				_1db71476a_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1aa224630:;
	};
	(*_self_)._field_column+=_205e044e5_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1db7141c6_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd355c6_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd36275_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd36671_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd69d69_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd6a793_is_prim(_1dcd6a430_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6a430_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6aa7e_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6ae36_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6b222_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6b61d_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6b909_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd6c047_is_unsafe(_1dcd6bbe5_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6bbe5_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd6c751_auto_sized(_1dcd6c377_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6c377_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6cac5_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6ce7c_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6e38a_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6e676_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6ec2b_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd70017_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd70721_is_nil(_1dcd703be_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd703be_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd70ac8_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd70e80_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd71755_is_self(_1dcd71403_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd71403_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd71b0c_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd71eb4_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7236b_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd72723_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd72b96_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd73119_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd739bb_unhandled(_1dcd73658_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1dcd73c30_ignored(_1dcd73658_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd73658_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd74439_is_targeted(_1dcd740d7_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd740d7_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd74835_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd75429_is_empty(_1dcd74ca8_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd74ca8_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd757c0_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd76095_is_empty(_1dcd75c43_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd75c43_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd765d4_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd76bde_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd76eca_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "mask:" << _Src._field_mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7744d_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "constraint:" << _Src._field_constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd77805_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd77bac_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd77e98_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd785a3_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd78ae2_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd79a7c_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7a187_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd7abc1_is_self(_1dcd7a85d_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1dcd7ae35_is_ref(_1dcd7a85d_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7a85d_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd7bed0_is_anon(_1dcd7bb7d_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7bb7d_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7cb5c_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7d014_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd7d9c6_is_inf(_1dcd7d674_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7d674_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd7e29b_is_while_next(_1dcd7de49_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7de49_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7e7da_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7eb92_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd80049_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd804bc_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd80874_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd80ce7_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd814bd_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd81941_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd82117_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd828a9_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd8317e_auto_expr(_1dcd82d2c_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd82d2c_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd83dd8_default_typed(_1dcd83855_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd83855_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd8435b_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd84559_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd84aa9_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd85417_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd85a22_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd86490_is_trait_impl(_1dcd8612c_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1dcd86704_is_struct_impl(_1dcd8612c_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd8612c_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdbd1a8_Const> static__1dce2808c_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1dcdbd1a8_Const>(_1dcdbd1a8_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1dcdbd1a8_Const> static__1dce281be_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1dcdbd1a8_Const>(_1dcdbd1a8_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1dcdbd1a8_Const> static__1dce28356_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1dcdbd1a8_Const>(_1dcdbd1a8_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1dcdbd1a8_Const> static__1dce285ed_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1dcdbd1a8_Const>(_1dcdbd1a8_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1dcdbd1a8_Const> static__1dce28895_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1dcdbd1a8_Const>(_1dcdbd1a8_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1dcdbd1a8_Const> static__1dce28a93_new_nil(void) {
	return jule::new_ptr<_1dcdbd1a8_Const>(_1dcdbd1a8_Const{._field_data=nullptr});
}



inline jule::I64 _1dce2918c_read_i64(_1dcdbd1a8_Const* _self_) {
	if ((!(_1dce2b535_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1dce29401_read_u64(_1dcdbd1a8_Const* _self_) {
	if ((!(_1dce2b799_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1dce29665_read_bool(_1dcdbd1a8_Const* _self_) {
	if ((!(_1dce2ba0d_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1dce298c9_read_str(_1dcdbd1a8_Const* _self_) {
	if ((!(_1dce2bc72_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1dce29b3d_read_f64(_1dcdbd1a8_Const* _self_) {
	if ((!(_1dce2bed6_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1dce29da2_as_i64(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa2935a0:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa293616:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa292e73:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1aa292d96:;
			{
				return 0LL;
			}
		}
		_match_end_1aa29268c:;
	};
}



inline jule::U64 _1dce2a116_as_u64(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa29454b:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa2950da:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa295151:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1aa2936e3:;
			{
				return 0LLU;
			}
		}
		_match_end_1aa29368d:;
	};
}



inline jule::F64 _1dce2a37a_as_f64(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa296086:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa296b25:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa296b8b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1aa294b89:;
			{
				return 0LL;
			}
		}
		_match_end_1aa294b34:;
	};
}



inline void _1dce2a600_set_i64(_1dcdbd1a8_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1dce2a875_set_u64(_1dcdbd1a8_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1dce2aaea_set_bool(_1dcdbd1a8_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1dce2ad70_set_str(_1dcdbd1a8_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1dce2b0e5_set_f64(_1dcdbd1a8_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1dce2b2c1_set_nil(_1dcdbd1a8_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1dce2b535_is_i64(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa29a8c6:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa29a7e9:;
			{
				return false;
			}
		}
		_match_end_1aa29a794:;
	};
}



inline jule::Bool _1dce2b799_is_u64(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa29b498:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa29b179:;
			{
				return false;
			}
		}
		_match_end_1aa29ad8d:;
	};
}



inline jule::Bool _1dce2ba0d_is_bool(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1aa29bec1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa29bba2:;
			{
				return false;
			}
		}
		_match_end_1aa29b894:;
	};
}



inline jule::Bool _1dce2bc72_is_str(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aa29c9e9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa29c6ca:;
			{
				return false;
			}
		}
		_match_end_1aa29c3bc:;
	};
}



inline jule::Bool _1dce2bed6_is_f64(_1dcdbd1a8_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa29d522:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa29d203:;
			{
				return false;
			}
		}
		_match_end_1aa29cde5:;
	};
}



inline jule::Bool _1dce2c24a_is_nil(_1dcdbd1a8_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1dce2c558_are_same_types(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _21033_x) {
	{
		
		if ((_1dce2b535_is_i64(&(*_self_)) == _1dce2b535_is_i64(&_21033_x))) {
			_case_begin_1aa29edb4:;
			{
				return true;
			}
		}
		else if ((_1dce2b799_is_u64(&(*_self_)) == _1dce2b799_is_u64(&_21033_x))) {
			_case_begin_1aa29e655:;
			{
				return true;
			}
		}
		else if ((_1dce2bed6_is_f64(&(*_self_)) == _1dce2bed6_is_f64(&_21033_x))) {
			_case_begin_1aa29e6cc:;
			{
				return true;
			}
		}
		else if ((_1dce2ba0d_is_bool(&(*_self_)) == _1dce2ba0d_is_bool(&_21033_x))) {
			_case_begin_1aa29e754:;
			{
				return true;
			}
		}
		else if ((_1dce2bc72_is_str(&(*_self_)) == _1dce2bc72_is_str(&_21033_x))) {
			_case_begin_1aa29e7cb:;
			{
				return true;
			}
		}
		else if ((_1dce2c24a_is_nil(&(*_self_)) == _1dce2c24a_is_nil(&_21033_x))) {
			_case_begin_1aa29ea73:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa29e5cd:;
			{
				return false;
			}
		}
		_match_end_1aa29e501:;
	};
}



inline jule::Bool _1dce2c866_and(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _23522_x) {
	{
		
		if ((_1dce2ba0d_is_bool(&(*_self_)) && _1dce2ba0d_is_bool(&_23522_x))) {
			_case_begin_1aa2a3307:;
			{
				return (_1dce29665_read_bool(&(*_self_)) && _1dce29665_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1aa2a2911:;
			{
				return false;
			}
		}
		_match_end_1aa2a2834:;
	};
}



inline jule::Bool _1dce2cb74_or(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _24621_x) {
	{
		
		if ((_1dce2ba0d_is_bool(&(*_self_)) && _1dce2ba0d_is_bool(&_24621_x))) {
			_case_begin_1aa2a4704:;
			{
				return (_1dce29665_read_bool(&(*_self_)) || _1dce29665_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1aa2a366a:;
			{
				return false;
			}
		}
		_match_end_1aa2a358d:;
	};
}



inline jule::Bool _1dce2ce82_eq(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _25721_x) {
	{
		
		if (_1dce2c24a_is_nil(&(*_self_))) {
			_case_begin_1aa2a5b78:;
			{
				return _1dce2c24a_is_nil(&_25721_x);
			}
		}
		else if (_1dce2ba0d_is_bool(&(*_self_))) {
			_case_begin_1aa2a544c:;
			{
				return (_1dce2ba0d_is_bool(&_25721_x) && (_1dce29665_read_bool(&(*_self_)) == _1dce29665_read_bool(&_25721_x)));
			}
		}
		else if (_1dce2bc72_is_str(&(*_self_))) {
			_case_begin_1aa2a54b3:;
			{
				return (_1dce2bc72_is_str(&_25721_x) && (_1dce298c9_read_str(&(*_self_)) == _1dce298c9_read_str(&_25721_x)));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2a553a:;
			{
				return (_1dce2918c_read_i64(&(*_self_)) == _1dce29da2_as_i64(&_25721_x));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2a55b2:;
			{
				return (_1dce29401_read_u64(&(*_self_)) == _1dce2a116_as_u64(&_25721_x));
			}
		}
		else if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2a5859:;
			{
				return (_1dce29b3d_read_f64(&(*_self_)) == _1dce2a37a_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1aa2a4a89:;
			{
				return false;
			}
		}
		_match_end_1aa2a49ac:;
	};
}



inline jule::Bool _1dce2d290_lt(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _28421_x) {
	{
		
		if (_1dce2bc72_is_str(&(*_self_))) {
			_case_begin_1aa2a9d03:;
			{
				return (_1dce2bc72_is_str(&_28421_x) && (_1dce298c9_read_str(&(*_self_)) < _1dce298c9_read_str(&_28421_x)));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2a96a4:;
			{
				return (_1dce2918c_read_i64(&(*_self_)) < _1dce29da2_as_i64(&_28421_x));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2a971a:;
			{
				return (_1dce29401_read_u64(&(*_self_)) < _1dce2a116_as_u64(&_28421_x));
			}
		}
		else if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2a9781:;
			{
				return (_1dce29b3d_read_f64(&(*_self_)) < _1dce2a37a_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1aa2a5ea8:;
			{
				return false;
			}
		}
		_match_end_1aa2a9154:;
	};
}



inline jule::Bool _1dce2d59d_lt_eq(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _30724_x) {
	{
		
		if (_1dce2bc72_is_str(&(*_self_))) {
			_case_begin_1aa2acd8e:;
			{
				return (_1dce2bc72_is_str(&_30724_x) && (_1dce298c9_read_str(&(*_self_)) <= _1dce298c9_read_str(&_30724_x)));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2ac740:;
			{
				return (_1dce2918c_read_i64(&(*_self_)) <= _1dce29da2_as_i64(&_30724_x));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2ac7a6:;
			{
				return (_1dce29401_read_u64(&(*_self_)) <= _1dce2a116_as_u64(&_30724_x));
			}
		}
		else if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2ac81c:;
			{
				return (_1dce29b3d_read_f64(&(*_self_)) <= _1dce2a37a_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1aa2aa012:;
			{
				return false;
			}
		}
		_match_end_1aa2abe59:;
	};
}



inline jule::Bool _1dce2d8ab_gt(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _33021_x) {
	{
		
		if (_1dce2bc72_is_str(&(*_self_))) {
			_case_begin_1aa2b0e2a:;
			{
				return (_1dce2bc72_is_str(&_33021_x) && (_1dce298c9_read_str(&(*_self_)) > _1dce298c9_read_str(&_33021_x)));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2b07cb:;
			{
				return (_1dce2918c_read_i64(&(*_self_)) > _1dce29da2_as_i64(&_33021_x));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2b0842:;
			{
				return (_1dce29401_read_u64(&(*_self_)) > _1dce2a116_as_u64(&_33021_x));
			}
		}
		else if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2b08a8:;
			{
				return (_1dce29b3d_read_f64(&(*_self_)) > _1dce2a37a_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1aa2ad09d:;
			{
				return false;
			}
		}
		_match_end_1aa2aeee5:;
	};
}



inline jule::Bool _1dce2dbb9_gt_eq(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _35324_x) {
	{
		
		if (_1dce2bc72_is_str(&(*_self_))) {
			_case_begin_1aa2b3eb6:;
			{
				return (_1dce2bc72_is_str(&_35324_x) && (_1dce298c9_read_str(&(*_self_)) >= _1dce298c9_read_str(&_35324_x)));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2b3867:;
			{
				return (_1dce2918c_read_i64(&(*_self_)) >= _1dce29da2_as_i64(&_35324_x));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2b38cd:;
			{
				return (_1dce29401_read_u64(&(*_self_)) >= _1dce2a116_as_u64(&_35324_x));
			}
		}
		else if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2b3944:;
			{
				return (_1dce29b3d_read_f64(&(*_self_)) >= _1dce2a37a_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1aa2b1139:;
			{
				return false;
			}
		}
		_match_end_1aa2b3081:;
	};
}



inline jule::Bool _1dce2dec7_add(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _37426_x) {
	{
		
		if (_1dce2bc72_is_str(&(*_self_))) {
			_case_begin_1aa2b7052:;
			{
				if ((!(_1dce2bc72_is_str(&_37426_x)))) {
					return false;
				};
				_1dce2ad70_set_str(&(*_self_), (_1dce298c9_read_str(&(*_self_)) + _1dce298c9_read_str(&_37426_x)));
			}
		}
		else if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2b6903:;
			{
				_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce29b3d_read_f64(&(*_self_)) + _1dce2a37a_as_f64(&_37426_x))));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2b6969:;
			{
				if (_1dce2bed6_is_f64(&_37426_x)) {
					_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce2a37a_as_f64(&(*_self_)) + _1dce29b3d_read_f64(&_37426_x))));
				} else {
					_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_1dce2918c_read_i64(&(*_self_)) + _1dce29da2_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2b69d0:;
			{
				if (_1dce2bed6_is_f64(&_37426_x)) {
					_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce2a37a_as_f64(&(*_self_)) + _1dce29b3d_read_f64(&_37426_x))));
				} else {
					_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>((_1dce29401_read_u64(&(*_self_)) + _1dce2a116_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1aa2b41c5:;
			{
				return false;
			}
		}
		_match_end_1aa2b611c:;
	};
	return true;
}



inline jule::Bool _1dce2e2d5_sub(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _40326_x) {
	{
		
		if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2bc82c:;
			{
				_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce29b3d_read_f64(&(*_self_)) - _1dce2a37a_as_f64(&_40326_x))));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2bc0e0:;
			{
				if (_1dce2bed6_is_f64(&_40326_x)) {
					_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce2a37a_as_f64(&(*_self_)) - _1dce29b3d_read_f64(&_40326_x))));
				} else {
					_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_1dce2918c_read_i64(&(*_self_)) - _1dce29da2_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2bc156:;
			{
				if (_1dce2bed6_is_f64(&_40326_x)) {
					_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce2a37a_as_f64(&(*_self_)) - _1dce29b3d_read_f64(&_40326_x))));
				} else {
					_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>((_1dce29401_read_u64(&(*_self_)) - _1dce2a116_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1aa2bc079:;
			{
				return false;
			}
		}
		_match_end_1aa2bb73d:;
	};
	return true;
}



inline jule::Bool _1dce2e5e3_mul(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _42726_x) {
	{
		
		if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2c20a1:;
			{
				_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce29b3d_read_f64(&(*_self_)) * _1dce2a37a_as_f64(&_42726_x))));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2c1864:;
			{
				if (_1dce2bed6_is_f64(&_42726_x)) {
					_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce2a37a_as_f64(&(*_self_)) * _1dce29b3d_read_f64(&_42726_x))));
				} else {
					_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_1dce2918c_read_i64(&(*_self_)) * _1dce29da2_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2c18ca:;
			{
				if (_1dce2bed6_is_f64(&_42726_x)) {
					_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>((_1dce2a37a_as_f64(&(*_self_)) * _1dce29b3d_read_f64(&_42726_x))));
				} else {
					_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>((_1dce29401_read_u64(&(*_self_)) * _1dce2a116_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1aa2c17ed:;
			{
				return false;
			}
		}
		_match_end_1aa2c0d2a:;
	};
	return true;
}



inline jule::Bool _1dce2e901_div(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _45526_x) {
	{
		
		if (_1dce2bed6_is_f64(&(*_self_))) {
			_case_begin_1aa2c6825:;
			{
				jule::F64 _45817_l = _1dce2a37a_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1dce29b3d_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2c60d8:;
			{
				jule::F64 _46417_l = _1dce2a37a_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1dce2a37a_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2c614e:;
			{
				jule::F64 _47017_l = _1dce2a37a_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1dce2b0e5_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1dce2a37a_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1aa2c6072:;
			{
				return false;
			}
		}
		_match_end_1aa2c559e:;
	};
	return true;
}



inline jule::Bool _1dce2ec0e_mod(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _48426_x) {
	{
		
		if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2cb0cc:;
			{
				jule::I64 _48717_l = _1dce29da2_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1dce2918c_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2ca8a1:;
			{
				jule::U64 _49317_l = _1dce2a116_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1dce29401_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1aa2ca83a:;
			{
				return false;
			}
		}
		_match_end_1aa2ca75d:;
	};
	return true;
}



inline jule::Bool _1dce3001c_bitwise_and(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _50634_x) {
	{
		
		if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2ce432:;
			{
				_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_1dce2918c_read_i64(&(*_self_)) & _1dce29da2_as_i64(&_50634_x))));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2cdc06:;
			{
				_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>((_1dce29401_read_u64(&(*_self_)) & _1dce2a116_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1aa2cdb90:;
			{
				return false;
			}
		}
		_match_end_1aa2cdab3:;
	};
	return true;
}



inline jule::Bool _1dce3032a_bitwise_or(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _52033_x) {
	{
		
		if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2d15bb:;
			{
				_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_1dce2918c_read_i64(&(*_self_)) | _1dce29da2_as_i64(&_52033_x))));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2d0d90:;
			{
				_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>((_1dce29401_read_u64(&(*_self_)) | _1dce2a116_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1aa2d0d29:;
			{
				return false;
			}
		}
		_match_end_1aa2d0c4c:;
	};
	return true;
}



inline jule::Bool _1dce30638_xor(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _53426_x) {
	{
		
		if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2d3755:;
			{
				_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_1dce2918c_read_i64(&(*_self_)) ^ _1dce29da2_as_i64(&_53426_x))));
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2d3029:;
			{
				_1dce2a875_set_u64(&(*_self_), static_cast<jule::U64>((_1dce29401_read_u64(&(*_self_)) ^ _1dce2a116_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1aa2d2eb3:;
			{
				return false;
			}
		}
		_match_end_1aa2d2dd6:;
	};
	return true;
}



inline jule::Bool _1dce30946_lshift(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _54829_x) {
	{
		
		if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2d58de:;
			{
				jule::I64 _55117_l = _1dce29da2_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1dce2a116_as_u64(&_54829_x);;
					_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1dce310b7_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2d51b3:;
			{
				_1dce310b7_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1aa2d514c:;
			{
				return false;
			}
		}
		_match_end_1aa2d5070:;
	};
	return true;
}



inline jule::Bool _1dce30c54_rshift(_1dcdbd1a8_Const* _self_, _1dcdbd1a8_Const _56829_x) {
	{
		
		if (_1dce2b535_is_i64(&(*_self_))) {
			_case_begin_1aa2d8408:;
			{
				jule::I64 _57117_l = _1dce29da2_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1dce2a116_as_u64(&_56829_x);;
					_1dce2a600_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1dce313b4_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1dce2b799_is_u64(&(*_self_))) {
			_case_begin_1aa2d7bcc:;
			{
				_1dce313b4_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1aa2d7b66:;
			{
				return false;
			}
		}
		_match_end_1aa2d7a89:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdbd1a8_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c24e09_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c25ab9_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c373d3_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2c2ecb0_set(_1c2c37dea_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1aa9672e5:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1aa96735b:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1aa96714c:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1aa9695e4:;
					{
						goto _iter_next_1aa968d30;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1aa96966b:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1aa968d30;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1aa9696e3:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1aa968d30;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1aa968d30;
					}
				}
				_match_end_1aa9694b2:;
			};
			goto _iter_end_1aa968d30;
		}
	_iter_next_1aa968d30:;
	}
	_iter_end_1aa968d30:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1c2c2a3b5_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1aa972135;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1aa972135:;
		}
		_iter_end_1aa972135:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1c2c300bd_float_bits(_1c2c37dea_Decimal* _self_, _1c2c24e09_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1c2c2e95d_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1c2c2e95d_POWTAB[(*_self_)._field_dp];
			};
			_1c2c38549_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1aa978b42:;
	}
	_iter_end_1aa978b42:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1c2c2e95d_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1c2c2e95d_POWTAB[(-((*_self_)._field_dp))];
			};
			_1c2c38549_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1aa97934b:;
	}
	_iter_end_1aa97934b:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1c2c38549_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1c2c38549_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1c2c3902d_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1c2c382c4_assign(_1c2c37dea_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1aa98748b:;
	}
	_iter_end_1aa98748b:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1aa988976:;
	}
	_iter_end_1aa988976:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1c2c395d3_trim((*_self_));
}



inline void _1c2c38549_shift(_1c2c37dea_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1aa98a0e8:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1aa98a170:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1c2c3a073_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1aa98a79c:;
				}
				_iter_end_1aa98a79c:;;
				_1c2c3a073_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1aa98a1e7:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1c2c3988b_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1aa98b87a:;
				}
				_iter_end_1aa98b87a:;;
				_1c2c3988b_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1aa989eb6:;
	};
}



inline void _1c2c387be_round_down(_1c2c37dea_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1c2c395d3_trim((*_self_));
}



inline void _1c2c38a44_round_up(_1c2c37dea_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1aa98eb25:;
	}
	_iter_end_1aa98eb25:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1c2c38cb9_round(_1c2c37dea_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1c2c3a3b4_should_round_up((*_self_),_29124_nd)) {
		_1c2c38a44_round_up(&(*_self_), _29124_nd);
	} else {
		_1c2c387be_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1c2c3902d_rounded_integer(_1c2c37dea_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1aa99295d:;
	}
	_iter_end_1aa99295d:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1aa9954ee:;
	}
	_iter_end_1aa9954ee:;;
	if (_1c2c3a3b4_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c37dea_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcd62c0d_FieldIns> _1dcd3b8a7_instance(jule::Ptr<_1dcd4ca61_Field> _self_) {
	return jule::new_ptr<_1dcd62c0d_FieldIns>(_1dcd62c0d_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4ca61_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5bec1_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcd868e1_StructIns> _1dcd4299b_instance(jule::Ptr<_1dcd5a596_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1dcd868e1_StructIns> _9917_ins = jule::new_ptr<_1dcd868e1_StructIns>(_1dcd868e1_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1dcd62c0d_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1dce3e834_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aac75988:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd4ca61_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1dcd3b8a7_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1c2da0c22_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1aac75988:;
			++it;
			goto _iter_begin_1aac75988;
		}
		_iter_end_1aac75988:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1dce38993_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1aac78bde:;
			if (it != expr.end()) {
				jule::Ptr<_1dce38993_Fn> _11625_f = *it;
				{
					jule::Ptr<_1dce38993_Fn> _11725_fins = jule::new_ptr<_1dce38993_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1aac78bde:;
				++it;
				goto _iter_begin_1aac78bde;
			}
			_iter_end_1aac78bde:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1dcd868e1_StructIns> _1dcd46c14_append_instance(_1dcd5a596_Struct* _self_, jule::Ptr<_1dcd868e1_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1aac7b186:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _13421_ains = *it;
			{
				if (_1dcd60744_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1aac7b186:;
			++it;
			goto _iter_begin_1aac7b186;
		}
		_iter_end_1aac7b186:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1dce38993_Fn> _1dcd499b4_find_method(_1dcd5a596_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1aac7c6d7:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1aac7c6d7:;
			++it;
			goto _iter_begin_1aac7c6d7;
		}
		_iter_end_1aac7c6d7:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2d266ae_Var> _1dcd4a9c6_find_static(_1dcd5a596_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1aac7d919:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1aac7d919:;
			++it;
			goto _iter_begin_1aac7d919;
		}
		_iter_end_1aac7d919:;
	};
	return nullptr;
}



inline jule::Ptr<_1dcd4ca61_Field> _1dcd49e15_find_field(_1dcd5a596_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1aac7e8a4:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd4ca61_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1aac7e8a4:;
			++it;
			goto _iter_begin_1aac7e8a4;
		}
		_iter_end_1aac7e8a4:;
	};
	return nullptr;
}



inline jule::Bool _1dcd4c1e2_is_implements(_1dcd5a596_Struct* _self_, jule::Ptr<_1c2c3d54e_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1aac7ed7c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1aac7ed7c:;
			++it;
			goto _iter_begin_1aac7ed7c;
		}
		_iter_end_1aac7ed7c:;
	};
	return false;
}



inline jule::Bool _1dcd4b5ed_is_derives(_1dcd5a596_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1aac80d8e:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1aac80d8e:;
			++it;
			goto _iter_begin_1aac80d8e;
		}
		_iter_end_1aac80d8e:;
	};
	return false;
}



inline jule::Bool _1dcd5039e_is_uses(_1dcd5a596_Struct* _self_, jule::Ptr<_1dcd5a596_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1aac83644:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1aac83de7:;
				}
				_iter_end_1aac83de7:;;
			}
			_iter_next_1aac83644:;
			++it;
			goto _iter_begin_1aac83644;
		}
		_iter_end_1aac83644:;
	};
	return false;
}



inline jule::Bool _1dcd50a64_has_ref_accessible(_1dcd5a596_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1aac840e5:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1dce379e7_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1aac840e5:;
			++it;
			goto _iter_begin_1aac840e5;
		}
		_iter_end_1aac840e5:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5a596_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd62c0d_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce31529_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce31716_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce31903_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce31ae0_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce31ccc_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce31eb9_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce321a6_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce32393_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce32580_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3276c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce32959_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce32b46_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce32d33_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce33020_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3320c_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3362a_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce33817_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce33a04_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce33be1_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce33dcd_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce340ba_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce342a7_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce34494_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce34681_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3486d_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce34a5a_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce34c47_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce34e34_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce35121_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3530d_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce354ea_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce333e9_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce35b5a_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce35d47_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce36034_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce36221_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3640d_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce36991_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dce3a775_ParamIns> _1dce3751e_instance(jule::Ptr<_1dce37156_Param> _self_) {
	return jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1dce37783_is_self(_1dce37156_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1dce379e7_is_ref(_1dce37156_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1dce37156_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dce38e05_is_void(_1dce38993_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1dce39169_is_method(_1dce38993_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1dce393cd_is_entry_point(_1dce38993_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1dce39642_is_init(_1dce38993_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1dce398a6_is_anon(_1dce38993_Fn* _self_) {
	return _1db708be3_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1dce39b1a_any_var(_1dce38993_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1dce3b644_FnIns> _1dce39d7e_instance_force(jule::Ptr<_1dce38993_Fn> _self_) {
	jule::Ptr<_1dce3b644_FnIns> _10017_ins = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1c2cd2d1e_Scope>(), ._field_refers=static__1dce3e834_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aac97977:;
		if (it != expr.end()) {
			jule::Ptr<_1dce37156_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1dce3751e_instance(_10721_p));;
			}
			_iter_next_1aac97977:;
			++it;
			goto _iter_begin_1aac97977;
		}
		_iter_end_1aac97977:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1dce3b644_FnIns> _1dce3a0e3_instance(jule::Ptr<_1dce38993_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1dce39d7e_instance_force(_self_);
}



inline jule::Ptr<_1dce3b644_FnIns> _1dce3a3bd_append_instance(_1dce38993_Fn* _self_, jule::Ptr<_1dce3b644_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1aac9ba25:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3b644_FnIns> _14421_ains = *it;
			{
				if (_1dce3d04c_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1aac9ba25:;
			++it;
			goto _iter_begin_1aac9ba25;
		}
		_iter_end_1aac9ba25:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce38993_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dce3ab4e_to_str(_1dce3a775_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1dce37783_is_self((*_self_)._field_decl.ptr())) {
		if (_1dce379e7_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1c2d9ec21_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3a775_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dce3b974_to_str(_1dce3b644_FnIns* _self_) {
	;
	return _1dce3d35a_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1dce3bc82_equals(jule::Ptr<_1dce3b644_FnIns> _self_, jule::Ptr<_1c2d9e825_TypeKind> _21726_other) {
	jule::Ptr<_1dce3b644_FnIns> _21813_f = _1c2da2b25_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1dce3c1e4_equals_fn(_self_, _21813_f);
}



inline jule::Bool _1dce3c1e4_equals_fn(jule::Ptr<_1dce3b644_FnIns> _self_, jule::Ptr<_1dce3b644_FnIns>& _22830_f) {
	if ((_self_.get()._field_decl.get()._field_exceptional != _22830_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _22830_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_1dce38e05_is_void(_self_.get()._field_decl.ptr()) != _1dce38e05_is_void(_22830_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1dce3a775_ParamIns>,jule::Ptr<_1dce3a775_ParamIns>)> _24113_check_params = jule::Fn<jule::Bool(jule::Ptr<_1dce3a775_ParamIns>,jule::Ptr<_1dce3a775_ParamIns>)>([=](jule::Ptr<_1dce3a775_ParamIns> _24131_p1, jule::Ptr<_1dce3a775_ParamIns> _24146_p2) mutable -> jule::Bool {
		if ((_24131_p1.get()._field_decl.get()._field_mutable != _24146_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1dce37783_is_self(_24131_p1.get()._field_decl.ptr())) {
			if ((!(_1dce37783_is_self(_24146_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1dce379e7_is_ref(_24131_p1.get()._field_decl.ptr()) != _1dce379e7_is_ref(_24146_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24131_p1.get()._field_decl.get()._field_reference != _24146_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24131_p1.get()._field_decl.get()._field_variadic != _24146_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1c2da002e_equals(_24131_p1.get()._field_kind, _24146_p2.get()._field_kind);
	});;
	if ((_22830_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	jule::I64 _27317_i = 0LL;;
	for (; (_27317_i < _self_.get()._field_params.len()); (_27317_i)++) {
		{
			if ((!(_24113_check_params(_self_.get()._field_params[_27317_i],_22830_f.get()._field_params[_27317_i])))) {
				return false;
			};
		}
	_iter_next_1aacaa3c4:;
	}
	_iter_end_1aacaa3c4:;;
	if ((!(_1dce38e05_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1c2da002e_equals(_self_.get()._field_result, _22830_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1dce3c502_equals_trait(jule::Ptr<_1dce3b644_FnIns> _self_, jule::Ptr<_1dce3b644_FnIns>& _29029_other) {
	if ((!(_1dce3c1e4_equals_fn(_self_, _29029_other)))) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_generics.len() != _29029_other.get()._field_decl.get()._field_generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _1dce3c766_types(_1dce3b644_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1aacada15:;
			{
				return nullptr;
			}
		}
		else if ((_1c2da35c6_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1aacada7b:;
			{
				return jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1aacad99e:;
			{
				return _1c2da35c6_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1aacad8c2:;
	};
}



inline jule::Bool _1dce3c9ca_is_builtin(_1dce3b644_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1dce3cc3e_is_anon(_1dce3b644_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1dce398a6_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1dce3d04c_same(_1dce3b644_FnIns* _self_, jule::Ptr<_1dce3b644_FnIns> _32723_f) {
	if ((((*_self_)._field_decl != _32723_f.get()._field_decl) || (_32723_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1aacb23dc:;
		if (it != expr.end()) {
			jule::I64 _33213_i = it - expr.begin();
			jule::Ptr<_1c2d9d0e8_InsGeneric> &_33216_g = *it;
			{
				if ((!(_1c2da002e_equals(_33216_g.get()._field_kind, _32723_f.get()._field_generics[_33213_i].get()._field_kind)))) {
					return false;
				};
			}
			_iter_next_1aacb23dc:;
			++it;
			_33213_i++;
			goto _iter_begin_1aacb23dc;
		}
		_iter_end_1aacb23dc:;
	};
	return true;
}



inline jule::Str _1dce3d35a_get_kind_str(_1dce3b644_FnIns* _self_, jule::Bool _34331_ident) {
	jule::Str _34417_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34417_s+=jule::Str("unsafe ", 7);
	};
	_34417_s+=jule::Str("fn", 2);
	if ((_34331_ident && ((*_self_)._field_decl != nullptr))) {
		_34417_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	_34417_s+=jule::Str("(", 1);
	jule::I64 _35713_n = (*_self_)._field_params.len();;
	if ((_35713_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1aacb637a:;
			if (it != expr.end()) {
				jule::Ptr<_1dce3a775_ParamIns> &_35920_p = *it;
				{
					_34417_s+=_1dce3ab4e_to_str(_35920_p.ptr());
					_34417_s+=jule::Str(",", 1);
				}
				_iter_next_1aacb637a:;
				++it;
				goto _iter_begin_1aacb637a;
			}
			_iter_end_1aacb637a:;
		};
		(_34417_s).mut_slice(0LL,(_34417_s.len() - 1LL));;
	};
	_34417_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34417_s+=jule::Str("!", 1);
	};
	if ((!(_1dce38e05_is_void((*_self_)._field_decl.ptr())))) {
		_34417_s+=jule::Str(":", 1);
		_34417_s+=_1c2d9ec21_to_str((*_self_)._field_result.ptr());
	};
	return _34417_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3b644_FnIns _Src) {
	_Stream << _1dce3b974_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1dce3e548_ReferenceStack> static__1dce3e834_new(void) {
	return jule::new_ptr<_1dce3e548_ReferenceStack>(_1dce3e548_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1dce3ebb9_len(_1dce3e548_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1dce3eec7_at(_1dce3e548_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1dce4024c_push(_1dce3e548_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1ab3a557e_exist(_1dce3e548_ReferenceStack* _self_, jule::Ptr<_1dce3b644_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab3a686b:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ab3a686b:;
			++it;
			goto _iter_begin_1ab3a686b;
		}
		_iter_end_1ab3a686b:;
	};
	return false;
}

inline jule::Bool _1ab3b9d79_exist(_1dce3e548_ReferenceStack* _self_, jule::Ptr<_1c2d266ae_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab3bb122:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ab3bb122:;
			++it;
			goto _iter_begin_1ab3bb122;
		}
		_iter_end_1ab3bb122:;
	};
	return false;
}

inline jule::Bool _1ab45e836_exist(_1dce3e548_ReferenceStack* _self_, jule::Ptr<_1dcd868e1_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab460b23:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ab460b23:;
			++it;
			goto _iter_begin_1ab460b23;
		}
		_iter_end_1ab460b23:;
	};
	return false;
}

inline jule::Bool _1ab6db376_exist(_1dce3e548_ReferenceStack* _self_, jule::Ptr<_1c2c3d54e_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab6dc61e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ab6dc61e:;
			++it;
			goto _iter_begin_1ab6dc61e;
		}
		_iter_end_1ab6dc61e:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3e548_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce40912_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dce44dab_SymbolBuilder> _1dce45362_get_root(jule::Ptr<_1dce44dab_SymbolBuilder> _self_) {
	jule::Ptr<_1dce44dab_SymbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1aacce838:;
	}
	_iter_end_1aacce838:;;
	return _31617_root;
}



inline void _1dce4572a_push_err(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1db7061a7_Token>& _32328_token, jule::Str _32343_fmt, jule::Slice<jule::Any> _32356_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c2d08086_compiler_err(_32328_token,true,_32343_fmt,jule::Any(_32356_args)));;
}



inline void _1dce45ae3_push_err_text(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1db7061a7_Token>& _32733_token, jule::Str _32748_fmt, jule::Slice<jule::Any> _32761_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c2d08086_compiler_err(_32733_token,false,_32748_fmt,jule::Any(_32761_args)));;
}



inline void _1dce45e12_push_suggestion(_1dce44dab_SymbolBuilder* _self_, jule::Str _33234_fmt, jule::Slice<jule::Any> _33247_args) {
	{
		_1c2d0951b_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33234_fmt,jule::Any(_33247_args));
	};
}



inline jule::Bool _1dce462db_check_cpp_use_decl_path(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _33643_decl, jule::Str _33659_path) {
	jule::Bool _33672_ok = jule::Bool();
	jule::Str _33713_ext = _207b1690e_ext(_33659_path);;
	if (((!(_207b74593_is_valid_header_ext(_33713_ext))) && (!(_207b747e6_is_valid_cpp_ext(_33713_ext))))) {
		_1dce4572a_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33672_ok = false;
		return _33672_ok;
	};
	jule::Ptr<_205d30e8d_Status> _34413_info = ({
		auto except = static__207b1758b_of(_33659_path);
		(except.ok()) ? (except.result) : ({{
			_1dce4572a_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
			_33672_ok = false;
			return _33672_ok;
		} jule::Ptr<_205d30e8d_Status>();});
	});;
	if (_205134160_is_dir(_34413_info.ptr())) {
		_1dce4572a_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
		_33672_ok = false;
		return _33672_ok;
	};
	_33672_ok = true;
	return _33672_ok;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1dce465e9_build_cpp_header_import(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl.get()._field_link_path;;
	if ((!(_207b74461_is_std_header_path(_35647_decl.get()._field_link_path)))) {
		_35717_path=_207b167cc_join(jule::Slice<jule::Str>::make({_1db70be38_dir(_35647_decl.get()._field_token.get()._field_file.ptr()),_35647_decl.get()._field_link_path}));
		jule::Bool _36121_ok = _1dce462db_check_cpp_use_decl_path(&(*_self_), _35647_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _207b16a41_abs(_35717_path);
		if ((!(_36121_ok))) {
			_1dce4572a_push_err(&(*_self_), _35647_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35647_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1c2d01854_ImportInfo>(_1c2d01854_ImportInfo{._field_token=_35647_decl.get()._field_token, ._field_path=_35717_path, ._field_link_path=_35647_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1dce46918_build_std_import(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _38440_decl) {
	jule::Str _38517_path = _38440_decl.get()._field_link_path.slice(5LL);;
	_38517_path=_207b14d4c_replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_207b167cc_join(jule::Slice<jule::Str>::make({_207ba3825_PATH_STDLIB,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _207b16a41_abs(_38517_path);
	if ((!(_38820_ok))) {
		_1dce4572a_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_205d30e8d_Status> _39513_info = ({
		auto except = static__207b1758b_of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1dce4572a_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_205d30e8d_Status>();});
	});;
	if ((!(_205134160_is_dir(_39513_info.ptr())))) {
		_1dce4572a_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_207b13323_find_last(_38440_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38440_decl.get()._field_link_path.slice(_40513_i);;
	return jule::new_ptr<_1c2d01854_ImportInfo>(_1c2d01854_ImportInfo{._field_token=_38440_decl.get()._field_token, ._field_path=_38517_path, ._field_link_path=_38440_decl.get()._field_link_path, ._field_ident=_40613_ident, ._field_alias=_38440_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_38440_decl.get()._field_full, ._field_package=jule::new_ptr<_1c2d047ad_Package>(_1c2d047ad_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1dce46c26_build_ident_import(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1dcd828a9_UseDecl>& _42343_decl) {
	jule::Str _42413_mod_path = _1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2ced1be_get_mod_path(_self_.get()._field_importer);;
	if ((_42413_mod_path.len() == 0LL)) {
		_1dce4572a_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1dce45e12_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42343_decl.get()._field_link_path;;
	_43117_path=_207b14d4c_replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_207b167cc_join(jule::Slice<jule::Str>::make({_42413_mod_path,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _207b16a41_abs(_43117_path);
	if ((!(_43520_ok))) {
		_1dce4572a_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_205d30e8d_Status> _44213_info = ({
		auto except = static__207b1758b_of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1dce4572a_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_205d30e8d_Status>();});
	});;
	if ((!(_205134160_is_dir(_44213_info.ptr())))) {
		_1dce4572a_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_207b13323_find_last(_42343_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42343_decl.get()._field_link_path.slice(_45213_i);;
	return jule::new_ptr<_1c2d01854_ImportInfo>(_1c2d01854_ImportInfo{._field_token=_42343_decl.get()._field_token, ._field_path=_43117_path, ._field_link_path=_42343_decl.get()._field_link_path, ._field_ident=_45313_ident, ._field_alias=_42343_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_42343_decl.get()._field_full, ._field_package=jule::new_ptr<_1c2d047ad_Package>(_1c2d047ad_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1dce47034_build_import(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1dcd828a9_UseDecl>& _47037_decl) {
	{
		
		if (_47037_decl.get()._field_cpp_linked) {
			_case_begin_1aace8269:;
			{
				return _1dce465e9_build_cpp_header_import(_self_.ptr(), _47037_decl);
			}
		}
		else if (_47037_decl.get()._field_std) {
			_case_begin_1aace84cd:;
			{
				return _1dce46918_build_std_import(_self_.ptr(), _47037_decl);
			}
		}
		else {
			_case_begin_1aace79e9:;
			{
				return _1dce46c26_build_ident_import(_self_, _47037_decl);
			}
		}
		_match_end_1aace791c:;
	};
}



inline jule::Bool _1dce47364_check_duplicate_use_decl(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1c2d01854_ImportInfo>& _48144_pkg) {
	jule::Bool _48164_ok = jule::Bool();
	jule::Ptr<_1c2d01854_ImportInfo> _48313_lpkg = _1c2d695ae_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>([=](jule::Ptr<_1c2d01854_ImportInfo> _48349_spkg) mutable -> jule::Bool {
		return (_48144_pkg.get()._field_path == _48349_spkg.get()._field_path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48164_ok = true;
		return _48164_ok;
	};
	_1dce4572a_push_err(&(*_self_), _48144_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48144_pkg.get()._field_link_path)}));
	_1dce45e12_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48164_ok = false;
	return _48164_ok;
}



inline void _1dce47694_impl_import_selections(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1c2d01854_ImportInfo>& _49546_imp, jule::Ptr<_1dcd828a9_UseDecl>& _49569_decl) {
	_49546_imp.get()._field_selected=_49569_decl.get()._field_selected;
	{
		auto &expr = _49546_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1aacebed7:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> _49716_item = *it;
			{
				{
					auto &expr = _49546_imp.get()._field_selected;
					auto it = expr.begin();
					_iter_begin_1aaceca65:;
					if (it != expr.end()) {
						jule::Ptr<_1db7061a7_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1aaceca65;
							} else if ((_49716_item.get()._field_kind == _49820_citem.get()._field_kind)) {
								_1dce4572a_push_err(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_kind)}));
								_1dce45e12_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1aaceca65;
							};
						}
						_iter_next_1aaceca65:;
						++it;
						goto _iter_begin_1aaceca65;
					}
					_iter_end_1aaceca65:;
				};
			}
			_iter_next_1aacebed7:;
			++it;
			goto _iter_begin_1aacebed7;
		}
		_iter_end_1aacebed7:;
	};
}



inline jule::Str _1dce479a2_get_as_link_path(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Str _51040_path) {
	if (_207a6eee9_has_prefix(_51040_path,_207ba3825_PATH_STDLIB)) {
		(_51040_path).mut_slice(_207ba3825_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _207b14d4c_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _207b16a41_abs(_1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2ced1be_get_mod_path(_self_.get()._field_importer));
	(_51040_path).mut_slice(_51614_root.len());;
	if ((_51040_path[0LL] == 92LLU)) {
		(_51040_path).mut_slice(1LL);;
	};
	return _207b14d4c_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1dce47d6a_push_cycle_error(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1dce44dab_SymbolBuilder>& _52437_sb, jule::Str _52457_path, jule::Str& _52473_message) {
	;
	jule::Str _52713_refers_to = _207b81407_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1dce479a2_get_as_link_path(_self_, _1db70be38_dir(_52437_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1dce479a2_get_as_link_path(_self_, _52457_path))}));;
	(_52473_message).buffer.insert(0, (((_207a6542e_repeat(jule::Str(" ", 1),4LL) + _52713_refers_to) + jule::Str("\n", 1))));;
}



inline void _1dce48233_push_cross_cycle_error(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1dce44dab_SymbolBuilder>& _53443_target, jule::Ptr<_1c2d01854_ImportInfo>& _53468_imp, jule::Ptr<_1db7061a7_Token>& _53487_error_token) {
	jule::Str _53517_message = jule::Str();;
	_1dce47d6a_push_cycle_error(_self_, _self_,_53468_imp.get()._field_path,_53517_message);
	jule::Ptr<_1dce44dab_SymbolBuilder> _53917_owner = _self_.get()._field_owner;;
	jule::Ptr<_1dce44dab_SymbolBuilder> _54017_old = _self_;;
	while ((_53917_owner.get()._field_owner != nullptr)) {
		{
			_1dce47d6a_push_cycle_error(_self_, _54017_old.get()._field_owner,_1db70be38_dir(_54017_old.get()._field_table.get()._field_file.ptr()),_53517_message);
			if ((_53917_owner.get()._field_owner == _53443_target)) {
				_1dce47d6a_push_cycle_error(_self_, _53443_target,_1db70be38_dir(_53917_owner.get()._field_table.get()._field_file.ptr()),_53517_message);
				goto _iter_end_1aad045b6;
			};
			_54017_old=_53917_owner;
			_53917_owner=_53917_owner.get()._field_owner;
		}
	_iter_next_1aad045b6:;
	}
	_iter_end_1aad045b6:;;
	_1dce4572a_push_err(_self_.ptr(), _53487_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53517_message)}));
}



inline jule::Bool _1dce485da_check_import_cycles(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1c2d01854_ImportInfo> _55739_imp, jule::Ptr<_1dcd828a9_UseDecl>& _55758_decl) {
	if ((_55739_imp.get()._field_path == _1db70be38_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1dce4572a_push_err(_self_.ptr(), _55758_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1dce479a2_get_as_link_path(_self_, _55739_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1db70be38_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1dce48233_push_cross_cycle_error(_self_, _self_.get()._field_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1dce44dab_SymbolBuilder> _57217_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1db70be38_dir(_57217_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1dce48233_push_cross_cycle_error(_self_, _57217_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	if ((_57217_owner.get()._field_owner != nullptr)) {
		_57217_owner=_57217_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1dce489c5_check_package_accessibility(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _59347_decl, jule::Str& _59364_mod, jule::Str& _59375_path) {
	if (((_1c2cee05a_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1c2ced1be_get_mod_path((*_self_)._field_importer) != _59364_mod) && _207b14742_contains(_59375_path,jule::Str("internal", 8)))) {
		_1dce4572a_push_err(&(*_self_), _59347_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1dce48d8d_import_package(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1c2d01854_ImportInfo>& _59939_imp, jule::Ptr<_1dcd828a9_UseDecl>& _59962_decl) {
	jule::Bool _59980_ok = jule::Bool();
	if (_59939_imp.get()._field_cpp_linked) {
		_59980_ok = true;
		return _59980_ok;
	};
	jule::Ptr<_1c2d01854_ImportInfo> _60417_port = _1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2ced7da_get_import(_self_.get()._field_importer, _59939_imp.get()._field_path);;
	if ((_60417_port != nullptr)) {
		_59939_imp.get()._field_package=_60417_port.get()._field_package;
		_59939_imp.get()._field_duplicate=true;
		jule::Str _60917_old_mod = _1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2ced1be_get_mod_path(_self_.get()._field_importer);;
		_1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2cece7c_set_mod_path(_self_.get()._field_importer, _1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2ced4cc_mod_by_id(_self_.get()._field_importer, _59939_imp.get()._field_mod_id));
		_1dce489c5_check_package_accessibility(_self_.ptr(), _59962_decl,_60917_old_mod,_60417_port.get()._field_path);
		_1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2cece7c_set_mod_path(_self_.get()._field_importer, _60917_old_mod);
	} else {
		if ((!(_1dce485da_check_import_cycles(_self_, _59939_imp,_59962_decl)))) {
			_59980_ok = false;
			return _59980_ok;
		};
		jule::Str _61817_old_mod = _1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2ced1be_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2cece7c_set_mod_path(_self_.get()._field_importer, _61817_old_mod);
		});;
		if (_59939_imp.get()._field_std) {
			_1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2cece7c_set_mod_path(_self_.get()._field_importer, _207ba3825_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1dcd355c6_Ast>> _62322_asts;;
		jule::Slice<_207b80eb7_Log> _62332_errors;;
		std::tie(_62322_asts,_62332_errors) = _1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2cedb92_import_package(_self_.get()._field_importer, _59939_imp.get()._field_path,(!(_59939_imp.get()._field_std)));
		if ((_62332_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
			_59980_ok = false;
			return _59980_ok;
		};
		_1dce489c5_check_package_accessibility(_self_.ptr(), _59962_decl,_61817_old_mod,_59939_imp.get()._field_path);
		{
			auto &expr = _62322_asts;
			auto it = expr.begin();
			_iter_begin_1aad14e78:;
			if (it != expr.end()) {
				jule::Ptr<_1dcd355c6_Ast> _63125_ast = *it;
				{
					jule::Ptr<_1c2d68c84_SymbolTable> _63225_table = nullptr;;
					std::tie(_63225_table,_62332_errors) = _1c2dbae29_build_symbols(_63125_ast,_self_.get()._field_importer,_self_);
					if ((_62332_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
						_1dce45ae3_push_err_text(_self_.ptr(), _59939_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59939_imp.get()._field_link_path)}));
						_59980_ok = false;
						return _59980_ok;
					};
					_59939_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_59939_imp.get()._field_package.get()._field_files,1);_59939_imp.get()._field_package.get()._field_files.__push(_63225_table);;
				}
				_iter_next_1aad14e78:;
				++it;
				goto _iter_begin_1aad14e78;
			}
			_iter_end_1aad14e78:;
		};
	};
	_1dce47694_impl_import_selections(_self_.ptr(), _59939_imp,_59962_decl);
	_59980_ok = true;
	return _59980_ok;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1dce4919b_import_use_decl(jule::Ptr<_1dce44dab_SymbolBuilder> _self_, jule::Ptr<_1dcd828a9_UseDecl>& _65140_decl) {
	jule::Ptr<_1c2d01854_ImportInfo> _65217_imp = _1dce47034_build_import(_self_, _65140_decl);;
	if ((_65217_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65817_ok = _1dce47364_check_duplicate_use_decl(_self_.ptr(), _65217_imp);;
	if ((!(_65817_ok))) {
		return nullptr;
	};
	_65817_ok=_1dce48d8d_import_package(_self_, _65217_imp,_65140_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_65217_imp);;
	if (_65817_ok) {
		_1c2cee05a_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c2cede17_imported(_self_.get()._field_importer, _65217_imp);
		return _65217_imp;
	};
	return nullptr;
}



inline void _1dce49377_import_use_decls(jule::Ptr<_1dce44dab_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1aad1aa0b:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd828a9_UseDecl> _67321_decl = *it;
			{
				_1dce4919b_import_use_decl(_self_, _67321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1aad1aa0b;
				};
			}
			_iter_next_1aad1aa0b:;
			++it;
			goto _iter_begin_1aad1aa0b;
		}
		_iter_end_1aad1aa0b:;
	};
}



inline void _1dce495ec_append_node(_1dce44dab_SymbolBuilder* _self_, _1dcd36275_Node& _68335_node) {
	{
		auto &_match_expr{ _68335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd8612c_Impl>>()) {
			_case_begin_1aad1c4be:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1dce4485b_build_impl(_68335_node._field_data.operator jule::Ptr<_1dcd8612c_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd814bd_TypeAliasDecl>>()) {
			_case_begin_1aad1b1c1:;
			{
				jule::Ptr<_1c2d9db32_TypeAlias> _68821_ta = _1dce412e7_build_type_alias(_68335_node._field_data.operator jule::Ptr<_1dcd814bd_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_68821_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd85417_StructDecl>>()) {
			_case_begin_1aad1c0c3:;
			{
				jule::Ptr<_1dcd5a596_Struct> _69121_srct = _1dce41b55_build_struct(_68335_node._field_data.operator jule::Ptr<_1dcd85417_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_69121_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7bb7d_FnDecl>>()) {
			_case_begin_1aad1c139:;
			{
				jule::Ptr<_1dce38993_Fn> _69421_f = _1dce427b0_build_fn(_68335_node._field_data.operator jule::Ptr<_1dcd7bb7d_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_69421_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd85a22_TraitDecl>>()) {
			_case_begin_1aad1c931:;
			{
				jule::Ptr<_1c2c3d54e_Trait> _69721_t = _1dce42cee_build_trait(_68335_node._field_data.operator jule::Ptr<_1dcd85a22_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_69721_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7cb5c_VarDecl>>()) {
			_case_begin_1aad1c997:;
			{
				jule::Ptr<_1c2d266ae_Var> _70021_v = _1dce4431c_build_var(_68335_node._field_data.operator jule::Ptr<_1dcd7cb5c_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_70021_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd83855_EnumDecl>>()) {
			_case_begin_1aad1ca0d:;
			{
				jule::Ptr<_1c2c4070a_Enum> _70321_e = _1dce435d5_build_enum(_68335_node._field_data.operator jule::Ptr<_1dcd83855_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_70321_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd84559_TypeEnumDecl>>()) {
			_case_begin_1aad1ca74:;
			{
				jule::Ptr<_1c2c41d05_TypeEnum> _70621_e = _1dce44075_build_type_enum(_68335_node._field_data.operator jule::Ptr<_1dcd84559_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_type_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_type_enums,1);(*_self_)._field_table.get()._field_type_enums.__push(_70621_e);;
			}
		}
		else {
			_case_begin_1aad1be80:;
			{
				_1dce4572a_push_err(&(*_self_), _68335_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aad1b27b:;
	};
}



inline void _1dce497c8_append_nodes(_1dce44dab_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1aad26363:;
		if (it != expr.end()) {
			_1dcd36275_Node _71421_node = *it;
			{
				_1dce495ec_append_node(&(*_self_), _71421_node);
			}
			_iter_next_1aad26363:;
			++it;
			goto _iter_begin_1aad26363;
		}
		_iter_end_1aad26363:;
	};
}



inline void _1dce49a4d_push_directive_pass(_1dce44dab_SymbolBuilder* _self_, jule::Ptr<_1dcd36671_Directive>& _71943_d) {
	if ((_71943_d.get()._field_args.len() == 0LL)) {
		_1dce4572a_push_err(&(*_self_), _71943_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71943_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1db7061a7_Token> _72417_arg = _71943_d.get()._field_args[1LL];;
		_1dce4572a_push_err(&(*_self_), _72417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1db7061a7_Token> _72813_arg = _71943_d.get()._field_args[0LL];;
	if ((_72813_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1dce4572a_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72813_arg.get()._field_kind[0LL] != '\"')) {
		_1dce4572a_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1dce40912_Pass{._field_token=_71943_d.get()._field_tag, ._field_text=_72813_arg.get()._field_kind.slice(1LL,(_72813_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1dce49c29_append_top_directives(_1dce44dab_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1aad292ab:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _74621_d = *it;
			{
				{
					auto &_match_expr{ _74621_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1aad2c26a:;
						{
							_1dce49a4d_push_directive_pass(&(*_self_), _74621_d);
						}
					}
					_match_end_1aad2c1b0:;
				};
			}
			_iter_next_1aad292ab:;
			++it;
			goto _iter_begin_1aad292ab;
		}
		_iter_end_1aad292ab:;
	};
}



inline void _1dce49e05_build(jule::Ptr<_1dce44dab_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1c2d68c84_SymbolTable>(_1c2d68c84_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1dce49c29_append_top_directives(_self_.ptr());
	_1dce49377_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1dce497c8_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dce44dab_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2c3d917_to_str(_1c2c3d54e_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1c2c3dc25_equals(jule::Ptr<_1c2c3d54e_Trait> _self_, jule::Ptr<_1c2d9e825_TypeKind> _2626_other) {
	jule::Ptr<_1c2c3d54e_Trait> _2713_trt = _1c2da30ed_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1c2c3e088_is_builtin(_1c2c3d54e_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1dce38993_Fn> _1c2c3e396_find_method(_1c2c3d54e_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1aad3112b:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1aad3112b:;
			++it;
			goto _iter_begin_1aad3112b;
		}
		_iter_end_1aad3112b:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c3d54e_Trait _Src) {
	_Stream << _1c2c3d917_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1c2c40100_auto_expr(_1c2c3ec15_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c3ec15_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2c40a6d_to_str(_1c2c4070a_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1c2c40d7b_equals(jule::Ptr<_1c2c4070a_Enum> _self_, jule::Ptr<_1c2d9e825_TypeKind> _3826_other) {
	jule::Ptr<_1c2c4070a_Enum> _3913_enm = _1c2da2174_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1c2c3ec15_EnumItem> _1c2c412bb_find_item(_1c2c4070a_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1aad338c0:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3ec15_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1aad338c0:;
			++it;
			goto _iter_begin_1aad338c0;
		}
		_iter_end_1aad338c0:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c4070a_Enum _Src) {
	_Stream << _1c2c40a6d_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c4173e_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2c42135_to_str(_1c2c41d05_TypeEnum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1c2c42443_equals(jule::Ptr<_1c2c41d05_TypeEnum> _self_, jule::Ptr<_1c2d9e825_TypeKind> _8026_other) {
	jule::Ptr<_1c2c41d05_TypeEnum> _8113_tenm = _1c2da23d8_tenm(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1c2c4173e_TypeEnumItem> _1c2c4283e_find_item(_1c2c41d05_TypeEnum* _self_, jule::Str _8932_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1aad35b03:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4173e_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_ident == _8932_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1aad35b03:;
			++it;
			goto _iter_begin_1aad35b03;
		}
		_iter_end_1aad35b03:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c41d05_TypeEnum _Src) {
	_Stream << _1c2c42135_to_str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1c2d099a0_Sema>&,jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&)> _1c2c6a36c_ready_fn(jule::Ptr<_1c2c59e50_ConstraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1c2d099a0_Sema>&,jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&)>([=](jule::Ptr<_1c2d099a0_Sema>& _5621_sema, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>& _5639_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_generics_d;
			auto it = expr.begin();
			_iter_begin_1aad4388b:;
			if (it != expr.end()) {
				jule::I64 _5718_i = it - expr.begin();
				jule::Ptr<_1dcd7744d_GenericDecl> _5725_g = *it;
				{
					jule::Ptr<_1c2d9d0e8_InsGeneric> _5825_generic = _self_.get()._field_generics[_5718_i];;
					if (((_5725_g.get()._field_constraint == nullptr) || (_5725_g.get()._field_constraint.get()._field_mask.len() == 0LL))) {
						goto _iter_next_1aad4388b;
					};
					_5825_generic.get()._field_constraint=jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>::alloc(0LL,_5725_g.get()._field_constraint.get()._field_mask.len());
					{
						auto &expr = _5725_g.get()._field_constraint.get()._field_mask;
						auto it = expr.begin();
						_iter_begin_1aad45ddd:;
						if (it != expr.end()) {
							jule::Ptr<_1dcd69d69_TypeDecl> _6329_mask = *it;
							{
								jule::I64 _6425_n = _5621_sema.get()._field_errors.len();;
								jule::Ptr<_1c2d9e825_TypeKind> _6529_kind = _1c2d10995_build_type_with_refers(_5621_sema, _6329_mask,jule::Trait<_1c2dba3bd_Lookup>(_5621_sema, 3),_5639_generics,nullptr);;
								if ((_6529_kind == nullptr)) {
									{
										auto &_match_expr{ _6329_mask.get()._field_kind };
										
										if (_match_expr.type_is<jule::Ptr<_1dcd6a430_IdentTypeDecl>>()) {
											_case_begin_1aad47c7a:;
											{
												jule::Ptr<_1dcd6a430_IdentTypeDecl> _6937_itd = _6329_mask.get()._field_kind.operator jule::Ptr<_1dcd6a430_IdentTypeDecl>();;
												if (((_6937_itd.get()._field_generics.len() == 0LL) && _1c2ca300e_is_builtin_constraint(_6937_itd.get()._field_ident))) {
													_6529_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(_6937_itd.get()._field_ident), 6)});
													_5621_sema.get()._field_errors=_5621_sema.get()._field_errors.slice(0LL,_6425_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1aad47c25:;
									};
									return false;
								};
								_julec_label_success:;
								_5825_generic.get()._field_constraint = jule::alloc_for_append(_5825_generic.get()._field_constraint,1);_5825_generic.get()._field_constraint.__push(_6529_kind);;
							}
							_iter_next_1aad45ddd:;
							++it;
							goto _iter_begin_1aad45ddd;
						}
						_iter_end_1aad45ddd:;
					};
				}
				_iter_next_1aad4388b:;
				++it;
				_5718_i++;
				goto _iter_begin_1aad4388b;
			}
			_iter_end_1aad4388b:;
		};
		return true;
	});
}



inline jule::Bool _1c2c82ac1_ready_fi(jule::Ptr<_1c2c59e50_ConstraintChecker> _self_) {
	_self_.get()._field_generics_d=_self_.get()._field_fi.get()._field_decl.get()._field_generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_generics;
	return ((!(_self_.get()._field_uniq)) || _1c2d14e72_fn_environment(_self_.get()._field_s, _self_.get()._field_fi,_1c2c6a36c_ready_fn(_self_)));
}



inline jule::Bool _1c2c9cb85_ready_si(jule::Ptr<_1c2c59e50_ConstraintChecker> _self_) {
	_self_.get()._field_generics_d=_self_.get()._field_si.get()._field_decl.get()._field_generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_generics;
	return ((!(_self_.get()._field_uniq)) || _1c2c6a36c_ready_fn(_self_)(_self_.get()._field_s,_self_.get()._field_generics_a));
}



inline jule::Bool _1c2c9e9cd_ready(jule::Ptr<_1c2c59e50_ConstraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1c2c82ac1_ready_fi(_self_);
	};
	return _1c2c9cb85_ready_si(_self_);
}



inline jule::Bool _1c2ca0bbb_check(jule::Ptr<_1c2c59e50_ConstraintChecker> _self_) {
	if ((!(_1c2c9e9cd_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aad4ec71:;
		if (it != expr.end()) {
			jule::I64 _11214_i = it - expr.begin();
			jule::Ptr<_1c2d9d0e8_InsGeneric> _11221_g = *it;
			{
				if ((_11221_g.get()._field_constraint == nullptr)) {
					goto _iter_next_1aad4ec71;
				};
				{
					auto &expr = _11221_g.get()._field_constraint;
					auto it = expr.begin();
					_iter_begin_1aad50942:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d9e825_TypeKind> _11625_c2 = *it;
						{
							jule::Ptr<_1c2da42ec_Prim> _11725_prim = _1c2da1937_prim(_11625_c2.ptr());;
							if (((_11725_prim != nullptr) && _1c2da4de1_is_constraint(_11725_prim.ptr()))) {
								if (_1c2ca1419_match_constraint(_11725_prim.get()._field_kind,_11221_g.get()._field_kind)) {
									goto _iter_next_1aad4ec71;
								};
								goto _iter_next_1aad50942;
							};
							if (_1c2da002e_equals(_11625_c2, _11221_g.get()._field_kind)) {
								goto _iter_next_1aad4ec71;
							};
						}
						_iter_next_1aad50942:;
						++it;
						goto _iter_begin_1aad50942;
					}
					_iter_end_1aad50942:;
				};
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_11221_g.get()._field_kind.ptr())),jule::Any(_self_.get()._field_generics_d[_11214_i].get()._field_ident)}));
				return false;
			}
			_iter_next_1aad4ec71:;
			++it;
			_11214_i++;
			goto _iter_begin_1aad4ec71;
		}
		_iter_end_1aad4ec71:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c59e50_ConstraintChecker _Src) {
	_Stream << "ConstraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "generics_d:" << _Src._field_generics_d << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "generics_a:" << _Src._field_generics_a << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2ca41ec_is_trait_impl(_1c2cc44d6_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1c2ca494a_is_struct_impl(_1c2cc44d6_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cc44d6_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd2d1e_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd321a_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd3506_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd3902_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd3bdd_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2cd4507_is_while_next(_1c2cd4161_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd4161_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd4a46_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd4e42_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd52e9_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd55d5_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd58c1_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd5c78_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd61eb_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd65a3_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2cd70ed_is_generic_type_match(_1c2cd6ae2_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd6ae2_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2cd7906_is_default(_1c2cd763c_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd763c_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd7be2_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd8165_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd8770_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd8be3_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2cd9e58_find_package(_1c2cd9a07_ScopeChecker* _self_, jule::Str _45635_ident) {
	return _1c2d09ebc_find_package((*_self_)._field_s.ptr(), _45635_ident);
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2cda266_select_package(_1c2cd9a07_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _46637_selector) {
	return _1c2d0a2ca_select_package((*_self_)._field_s.ptr(), _46637_selector);
}



inline jule::Ptr<_1c2d266ae_Var> _1c2cda61d_find_var(_1c2cd9a07_ScopeChecker* _self_, jule::Str _47731_ident, jule::Bool _47743_cpp_linked) {
	;
	jule::Ptr<_1c2d266ae_Var> _48017_v = _1c2d6b528___find_var((*_self_)._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1c2cd9a07_ScopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1c2d6b528___find_var(_48517_parent.get()._field_table.ptr(), _47731_ident,_47743_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1aad81984:;
	}
	_iter_end_1aad81984:;;
	return _1c2d0a682_find_var((*_self_)._field_s.ptr(), _47731_ident,_47743_cpp_linked);
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2cda9c5_find_type_alias(_1c2cd9a07_ScopeChecker* _self_, jule::Str _50438_ident, jule::Bool _50450_cpp_linked) {
	;
	jule::Ptr<_1c2d9db32_TypeAlias> _50717_ta = _1c2d6b979___find_type_alias((*_self_)._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1c2cd9a07_ScopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1c2d6b979___find_type_alias(_51217_parent.get()._field_table.ptr(), _50438_ident,_50450_cpp_linked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1aad84822:;
	}
	_iter_end_1aad84822:;;
	return _1c2d0aa39_find_type_alias((*_self_)._field_s.ptr(), _50438_ident,_50450_cpp_linked);
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2cdad7c_find_struct(_1c2cd9a07_ScopeChecker* _self_, jule::Str _52934_ident, jule::Bool _52946_cpp_linked) {
	return _1c2d0ade1_find_struct((*_self_)._field_s.ptr(), _52934_ident,_52946_cpp_linked);
}



inline jule::Ptr<_1dce38993_Fn> _1c2cdb234_find_fn(_1c2cd9a07_ScopeChecker* _self_, jule::Str _53830_ident, jule::Bool _53842_cpp_linked) {
	return _1c2d0b298_find_fn((*_self_)._field_s.ptr(), _53830_ident,_53842_cpp_linked);
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2cdb542_find_trait(_1c2cd9a07_ScopeChecker* _self_, jule::Str _54733_ident) {
	return _1c2d0b5a6_find_trait((*_self_)._field_s.ptr(), _54733_ident);
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2cdb850_find_enum(_1c2cd9a07_ScopeChecker* _self_, jule::Str _55632_ident) {
	return _1c2d0b8b4_find_enum((*_self_)._field_s.ptr(), _55632_ident);
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2cdbb5d_find_type_enum(_1c2cd9a07_ScopeChecker* _self_, jule::Str _56537_ident) {
	return _1c2d0bbc2_find_type_enum((*_self_)._field_s.ptr(), _56537_ident);
}



inline jule::Bool _1c2cdbe8d_is_unsafe(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1c2cdc202_is_root(_1c2cd9a07_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1c2cdc3cd_stop(_1c2cd9a07_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1c2cdc642_stopped(_1c2cd9a07_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1c2cdc8a6_is_deferred(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cdcb1a_get_root(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1aad8dd9d:;
	}
	_iter_end_1aad8dd9d:;;
	return _62417_root;
}



inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cdcd7e_get_hard_root(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1aad90168:;
	}
	_iter_end_1aad90168:;;
	return _63417_root;
}



inline jule::Ptr<_1c2cd55d5_Label> _1c2cdd18c_find_label(_1c2cd9a07_ScopeChecker* _self_, jule::Str _64429_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aad90e27:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1c2cd55d5_Label>>()) {
						_case_begin_1aad91730:;
						{
							jule::Ptr<_1c2cd55d5_Label> _64825_label = _64521_st.operator jule::Ptr<_1c2cd55d5_Label>();;
							if ((_64825_label.get()._field_ident == _64429_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1aad91631:;
				};
			}
			_iter_next_1aad90e27:;
			++it;
			goto _iter_begin_1aad90e27;
		}
		_iter_end_1aad90e27:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2cd8770_ScopeLabel> _1c2cdd49a_find_label_scope(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Str _66036_ident) {
	jule::Ptr<_1c2cd8770_ScopeLabel> _66117_label = _1c2cdd7a8_find_label_all(_self_.ptr(), _66036_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1c2cd8770_ScopeLabel> _1c2cdd7a8_find_label_all(_1c2cd9a07_ScopeChecker* _self_, jule::Str _67233_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aad93aea:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd8770_ScopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_ident == _67233_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1aad93aea:;
			++it;
			goto _iter_begin_1aad93aea;
		}
		_iter_end_1aad93aea:;
	};
	return nullptr;
}



inline jule::Bool _1c2cddb60_is_duplicated_ident(_1c2cd9a07_ScopeChecker* _self_, jule::Uintptr _68438_itself, jule::Str _68455_ident) {
	jule::Ptr<_1c2d266ae_Var> _68513_v = _1c2cda61d_find_var(&(*_self_), _68455_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68438_itself))) {
		if ((_68513_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_scope == (*_self_)._field_scope) || (!(_1c2d0c024_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1c2d9db32_TypeAlias> _69313_ta = _1c2cda9c5_find_type_alias(&(*_self_), _68455_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68438_itself))) {
		if ((_69313_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1c2d0c024_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1c2cdddd5_check_var_decl(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7cb5c_VarDecl> _70438_decl) {
	jule::Ptr<_1c2d266ae_Var> _70517_v = _1dce4431c_build_var(_70438_decl);;
	_70517_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1c2cddb60_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _70517_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1c2cdc3cd_stop(_self_.ptr());
		return;;
	};
	_1c2d1aa9e_check_var_decl(_self_.get()._field_s, _70517_v,jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));
	if (((!(_1c2d26cca_is_type_inferred(_70517_v.ptr()))) && ((_70517_v.get()._field_kind == nullptr) || (_70517_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1c2d1e223_check_type_var(_self_.get()._field_s, _70517_v,jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));
}



inline void _1c2cde15a_check_type_alias_decl(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd814bd_TypeAliasDecl> _72845_decl) {
	jule::Ptr<_1c2d9db32_TypeAlias> _72917_ta = _1dce412e7_build_type_alias(_72845_decl);;
	if (_1c2cddb60_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _72917_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1c2cdc3cd_stop(_self_.ptr());
		return;;
	};
	_1c2d1676a_check_type_alias_decl(_self_.get()._field_s, _72917_ta,jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1c2cdc3cd_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1c2cd2d1e_Scope> _1c2cde3be_get_child(_1c2cd9a07_ScopeChecker* _self_) {
	return jule::new_ptr<_1c2cd2d1e_Scope>(_1c2cd2d1e_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1c2cde787_check_child_ssc(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7a187_ScopeTree>& _75240_tree, jule::Ptr<_1c2cd2d1e_Scope>& _75263_s, jule::Ptr<_1c2cd9a07_ScopeChecker>& _75279_ssc) {
	_75279_ssc.get()._field_parent=_self_;
	_1c2ce9d36_check(_75279_ssc, _75240_tree,_75263_s);
}



inline jule::Ptr<_1c2cd2d1e_Scope> _1c2cdeb3e_check_child_sc(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7a187_ScopeTree>& _75739_tree, jule::Ptr<_1c2cd9a07_ScopeChecker>& _75762_ssc) {
	jule::Ptr<_1c2cd2d1e_Scope> _75817_s = _1c2cde3be_get_child(_self_.ptr());;
	_1c2cde787_check_child_ssc(_self_, _75739_tree,_75817_s,_75762_ssc);
	return _75817_s;
}



inline jule::Ptr<_1c2cd2d1e_Scope> _1c2cdee4c_check_child(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7a187_ScopeTree>& _76336_tree) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _76417_ssc = _1c2cea09a_new_child_checker(_self_);;
	return _1c2cdeb3e_check_child_sc(_self_, _76336_tree,_76417_ssc);
}



inline void _1c2ce01c2_check_anon_scope(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7a187_ScopeTree> _76840_tree) {
	jule::Ptr<_1c2cd2d1e_Scope> _76917_s = _1c2cdee4c_check_child(_self_, _76840_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1c2ce04e1_process_error_call(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>& _77343_m, jule::Ptr<_1db7061a7_Token> _77374_err) {
	if (_1c2cdc8a6_is_deferred(_self_)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2cd9a07_ScopeChecker> _77817_root = _1c2cdcb1a_get_root(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _77374_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77343_m.get()._field_func=_77817_root.get()._field_owner;
}



inline void _1c2ce0766_check_expr(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd6e38a_Expr> _78634_expr) {
	jule::Ptr<_1c2d70560_Eval> _78717_eval = _1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1c2d6d9e2_Data> _78917_d = _1c2d90edc_eval_expr(_78717_eval, _78634_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aadaa271:;
			{
				jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_model.operator jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>();;
				_1c2ce04e1_process_error_call(_self_, _79621_m,_78634_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36221_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce3530d_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce3640d_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1aadaa46e:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1aadaa12d:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _78634_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aadaa0c8:;
	};
}



inline void _1c2ce09db_check_co_expr(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd70e80_CoExpr> _81537_expr) {
	jule::Ptr<_1c2d70560_Eval> _81617_eval = _1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1c2d6d9e2_Data> _81817_d = _1c2d90edc_eval_expr(_81617_eval, _81537_expr.get()._field_expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1aadb0551:;
			{
				jule::Ptr<_1dce32393_FnCallExprModel> _82521_model = _81817_d.get()._field_model.operator jule::Ptr<_1dce32393_FnCallExprModel>();;
				if (_82521_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_is_co=true;
				_1c2d87d80_check_fn_of_concurrent_call(_81617_eval.ptr(), _82521_model.get()._field_func,_81537_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1aadb03ec:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _81537_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aadb0397:;
	};
}



inline jule::Ptr<_1c2cd321a_If> _1c2ce0ce9_check_if(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd804bc_If> _83932_i) {
	jule::Ptr<_1c2cd2d1e_Scope> _84017_s = _1c2cdee4c_check_child(_self_, _83932_i.get()._field_scope);;
	jule::Ptr<_1c2d6d9e2_Data> _84217_d = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _83932_i.get()._field_expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2da42ec_Prim> _84717_prim = _1c2da1937_prim(_84217_d.get()._field_kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1c2da72bc_is_bool(_84717_prim.ptr()))))) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _83932_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c2cd321a_If>(_1c2cd321a_If{._field_expr=_84217_d.get()._field_model, ._field_scope=_84017_s});
}



inline jule::Ptr<_1c2cd3506_Else> _1c2ce1107_check_else(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd80874_Else> _85934_e) {
	return jule::new_ptr<_1c2cd3506_Else>(_1c2cd3506_Else{._field_scope=_1c2cdee4c_check_child(_self_, _85934_e.get()._field_scope)});
}



inline void _1c2ce137c_check_conditional(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd80ce7_Conditional> _86541_conditional) {
	jule::Ptr<_1c2cd3902_Conditional> _86617_c = jule::new_ptr<_1c2cd3902_Conditional>(_1c2cd3902_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_elifs=jule::Slice<jule::Ptr<_1c2cd321a_If>>::alloc(0LL,(_86541_conditional.get()._field_tail.len() + 1LL));
	_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1c2ce0ce9_check_if(_self_, _86541_conditional.get()._field_head));;
	{
		auto &expr = _86541_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1aadb8779:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd804bc_If> _87221_elif = *it;
			{
				_86617_c.get()._field_elifs = jule::alloc_for_append(_86617_c.get()._field_elifs,1);_86617_c.get()._field_elifs.__push(_1c2ce0ce9_check_if(_self_, _87221_elif));;
			}
			_iter_next_1aadb8779:;
			++it;
			goto _iter_begin_1aadb8779;
		}
		_iter_end_1aadb8779:;
	};
	if ((_86541_conditional.get()._field_default != nullptr)) {
		_86617_c.get()._field_default=_1c2ce1107_check_else(_self_, _86541_conditional.get()._field_default);
	};
}



inline void _1c2ce17de_check_iter_scope_ssc(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Uintptr _88140_it, jule::Ptr<_1dcd7a187_ScopeTree> _88157_tree, jule::Ptr<_1c2cd2d1e_Scope>& _88180_s, jule::Ptr<_1c2cd9a07_ScopeChecker> _88195_ssc) {
	_88195_ssc.get()._field_it=_88140_it;
	_1c2cde787_check_child_ssc(_self_, _88157_tree,_88180_s,_88195_ssc);
}



inline jule::Ptr<_1c2cd2d1e_Scope> _1c2ce1c40_check_iter_scope_sc(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Uintptr _88639_it, jule::Ptr<_1dcd7a187_ScopeTree> _88656_tree, jule::Ptr<_1c2cd9a07_ScopeChecker> _88678_ssc) {
	jule::Ptr<_1c2cd2d1e_Scope> _88717_scope = _1c2cde3be_get_child(_self_.ptr());;
	_1c2ce17de_check_iter_scope_ssc(_self_, _88639_it,_88656_tree,_88717_scope,_88678_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1c2cd2d1e_Scope> _1c2ce20e7_check_iter_scope(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Uintptr _89236_it, jule::Ptr<_1dcd7a187_ScopeTree>& _89254_tree) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _89317_ssc = _1c2cea09a_new_child_checker(_self_);;
	return _1c2ce1c40_check_iter_scope_sc(_self_, _89236_it,_89254_tree,_89317_ssc);
}



inline void _1c2ce236c_check_inf_iter(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7d674_Iter>& _89739_it) {
	jule::Ptr<_1c2cd3bdd_InfIter> _89817_kind = jule::new_ptr<_1c2cd3bdd_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_scope=_1c2ce20e7_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89739_it.get()._field_scope);
}



inline void _1c2ce25e2_check_while_iter(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7d674_Iter>& _90341_it) {
	jule::Ptr<_1dcd7de49_WhileKind> _90417_wh = _90341_it.get()._field_kind.operator jule::Ptr<_1dcd7de49_WhileKind>();;
	if (((_90417_wh.get()._field_expr == nullptr) && (_90417_wh.get()._field_next == nullptr))) {
		_1c2ce236c_check_inf_iter(_self_, _90341_it);
		return;;
	};
	jule::Ptr<_1c2cd4161_WhileIter> _91017_kind = jule::new_ptr<_1c2cd4161_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_scope=_1c2ce20e7_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90341_it.get()._field_scope);
	if ((_90417_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1c2d6d9e2_Data> _91521_d = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _90417_wh.get()._field_expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c2da42ec_Prim> _92017_prim = _1c2da1937_prim(_91521_d.get()._field_kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c2da72bc_is_bool(_92017_prim.ptr())))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _90341_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_expr=_91521_d.get()._field_model;
	};
	if (_1dcd7e29b_is_while_next(_90417_wh.ptr())) {
		if ((!(_1c2cbd755_is_valid_ast_st_for_next_st(_90417_wh.get()._field_next)))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1c2ce8ad2_check_node(_self_, _90417_wh.get()._field_next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_94017_n);
			if ((!(_1c2c6e3a4_is_valid_st_for_next_st(_94325_st)))) {
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _90417_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_next=_94325_st;
		};
	};
}



inline void _1c2ce2867_check_range_iter(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7d674_Iter>& _95441_it) {
	jule::Ptr<_1dcd7e7da_RangeKind> _95517_rang = _95441_it.get()._field_kind.operator jule::Ptr<_1dcd7e7da_RangeKind>();;
	jule::Ptr<_1c2d6d9e2_Data> _95717_d = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _95517_rang.get()._field_expr);;
	if ((_95717_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2cd4a46_RangeIter> _96217_kind = jule::new_ptr<_1c2cd4a46_RangeIter>(_1c2cd4a46_RangeIter{._field_expr=_95717_d, });;
	_1c2d64c4c_RangeChecker _96617_rc = _1c2d64c4c_RangeChecker{._field_sc=_self_, ._field_rang=_95517_rang, ._field_kind=_96217_kind, ._field_d=_95717_d};;
	jule::Bool _97213_ok = _1c2d66644_check(&_96617_rc);;
	if ((!(_97213_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_96217_kind));;
	jule::Ptr<_1c2cd9a07_ScopeChecker> _97917_ssc = _1c2cea09a_new_child_checker(_self_);;
	jule::Ptr<_1c2cd2d1e_Scope> _98017_scope = _1c2cde3be_get_child(_self_.ptr());;
	if ((_96217_kind.get()._field_key_a != nullptr)) {
		if (((!(_1c2d0c024_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c2cddb60_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_a.get()._field_ident))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_a.get()._field_ident)}));
			_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_a.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_a);;
	};
	if ((_96217_kind.get()._field_key_b != nullptr)) {
		if (((!(_1c2d0c024_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c2cddb60_is_duplicated_ident(_self_.ptr(), 0LLU,_96217_kind.get()._field_key_b.get()._field_ident))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _96217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96217_kind.get()._field_key_b.get()._field_ident)}));
			_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96217_kind.get()._field_key_b.get()._field_scope=_98017_scope;
		_97917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_97917_ssc.get()._field_table.get()._field_vars,1);_97917_ssc.get()._field_table.get()._field_vars.__push(_96217_kind.get()._field_key_b);;
	};
	_1c2ce17de_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96217_kind)),_95441_it.get()._field_scope,_98017_scope,_97917_ssc);
	_96217_kind.get()._field_scope=_98017_scope;
}



inline void _1c2ce2adc_check_iter(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7d674_Iter> _100434_it) {
	if (_1dcd7d9c6_is_inf(_100434_it.ptr())) {
		_1c2ce236c_check_inf_iter(_self_, _100434_it);
		return;;
	};
	{
		auto &_match_expr{ _100434_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd7de49_WhileKind>>()) {
			_case_begin_1aadd6511:;
			{
				_1c2ce25e2_check_while_iter(_self_, _100434_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7e7da_RangeKind>>()) {
			_case_begin_1aadd5972:;
			{
				_1c2ce2867_check_range_iter(_self_, _100434_it);
			}
		}
		else {
			_case_begin_1aadd5840:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1aadd5ea0:;
	};
}



inline jule::Bool _1c2ce2dea_check_valid_cont_label(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Uintptr _102042_it) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _102117_scope = _self_;;
	_julec_label_iter:;
	if ((_102117_scope.get()._field_it == _102042_it)) {
		return true;
	};
	if ((_102117_scope.get()._field_parent != nullptr)) {
		_102117_scope=_102117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1c2ce322a_check_valid_break_label(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Uintptr _103643_ptr) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _103717_scope = _self_;;
	_julec_label_iter:;
	if ((_103717_scope.get()._field_it == _103643_ptr)) {
		return true;
	};
	if ((_103717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104517_mtch = static_cast<jule::Uintptr>(((_1c2cd763c_Case*)(_103717_scope.get()._field_cse))->_field_owner);;
		if ((_104517_mtch == _103643_ptr)) {
			return true;
		};
	};
	if ((_103717_scope.get()._field_parent != nullptr)) {
		_103717_scope=_103717_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1c2cd4e42_ContSt> _1c2ce3549_check_cont_valid_scope(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd80049_ContSt> _105942_c) {
	if (_1c2cdc8a6_is_deferred(_self_)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105942_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1c2cd4e42_ContSt>();
	};
	jule::Ptr<_1c2cd9a07_ScopeChecker> _106917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106917_scope.get()._field_it == 0LLU) && (_106917_scope.get()._field_parent != nullptr)) && (_106917_scope.get()._field_owner == nullptr))) {
			_case_begin_1aadddae0:;
			{
				_106917_scope=_106917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106917_scope.get()._field_it != 0LLU)) {
			_case_begin_1aadddb67:;
			{
				return jule::new_ptr<_1c2cd4e42_ContSt>(_1c2cd4e42_ContSt{._field_it=_106917_scope.get()._field_it});
			}
		}
		_match_end_1aaddda68:;
	};
	_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _105942_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c2ce37be_check_cont(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd80049_ContSt> _108330_c) {
	jule::Ptr<_1c2cd4e42_ContSt> _108417_cont = _1c2ce3549_check_cont_valid_scope(_self_, _108330_c);;
	if ((_108417_cont == nullptr)) {
		return;;
	};
	if ((_108330_c.get()._field_label != nullptr)) {
		jule::Ptr<_1c2cd8770_ScopeLabel> _109021_label = _1c2cadc1d_find_label_parent(_108330_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_109021_label == nullptr)) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_109021_label.get()._field_used=true;
		if (((_109021_label.get()._field_pos + 1LL) >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _110317_i = (_109021_label.get()._field_pos + 1LL);;
		if ((_110317_i >= _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110725_st = _109021_label.get()._field_scope.get()._field_scope.get()._field_stmts[_110317_i];;
			{
				auto &_match_expr{ _110725_st };
				
				if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
					_case_begin_1aade44db:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1c2cd3bdd_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c2cd4a46_RangeIter>>()) {
					_case_begin_1aade7577:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1c2cd4a46_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c2cd4161_WhileIter>>()) {
					_case_begin_1aade75dd:;
					{
						_108417_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110725_st.operator jule::Ptr<_1c2cd4161_WhileIter>()));
					}
				}
				else {
					_case_begin_1aade7423:;
					{
						_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1aade7346:;
			};
		};
	};
	if ((_108417_cont.get()._field_it != 0LLU)) {
		if ((!(_1c2ce2dea_check_valid_cont_label(_self_, _108417_cont.get()._field_it)))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _108330_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108330_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_108417_cont));;
}



inline void _1c2ce3a44_check_label(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd77805_LabelSt> _113035_l) {
	if ((_1c2cdd18c_find_label(_self_.ptr(), _113035_l.get()._field_ident) != nullptr)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _113035_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_113035_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1c2cd55d5_Label> _113617_label = jule::new_ptr<_1c2cd55d5_Label>(_1c2cd55d5_Label{._field_ident=_113035_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_113617_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c2cd8770_ScopeLabel>>::make({jule::new_ptr<_1c2cd8770_ScopeLabel>(_1c2cd8770_ScopeLabel{._field_token=_113035_l.get()._field_token, ._field_label=_113617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1c2ce3cb9_push_goto(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd77bac_GotoSt> _114933_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c2cd58c1_GotoSt>(_1c2cd58c1_GotoSt{._field_ident=_114933_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c2cd8be3_ScopeGoto>>::make({jule::new_ptr<_1c2cd8be3_ScopeGoto>(_1c2cd8be3_ScopeGoto{._field_gt=_114933_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1c2ce403e_check_postfix(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd78ae2_AssignSt> _116137_a) {
	if ((_116137_a.get()._field_left.len() > 1LL)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd6e38a_Expr> _116717_expr = _116137_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1c2d6d9e2_Data> _116817_d = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _116717_expr);;
	if ((_116817_d == nullptr)) {
		return;;
	};
	_1c2cc30d9_check_assign(_self_.get()._field_s,_116817_d,nullptr,_116137_a.get()._field_setter);
	if ((_1c2da1e10_ptr(_116817_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2dab0e5_Ptr> _117621_ptr = _1c2da1e10_ptr(_116817_d.get()._field_kind.ptr());;
		if (_1c2dabab8_is_unsafe(_117621_ptr.ptr())) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1c2d9ec21_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1c2da1937_prim(_116817_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2cd269d_is_num(_1c2da1937_prim(_116817_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _116137_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116137_a.get()._field_setter.get()._field_kind),jule::Any(_1c2d9ec21_to_str(_116817_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c2cd5c78_Postfix>(_1c2cd5c78_Postfix{._field_expr=_116817_d.get()._field_model, ._field_op=_116137_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1c2ce434c_is_new_assign_ident(_1c2cd9a07_ScopeChecker* _self_, jule::Str _119438_ident) {
	if ((_1db70894b_is_ignore_ident(_119438_ident) || _119438_ident.empty())) {
		return false;
	};
	return (_1c2d6bd31_def_by_ident((*_self_)._field_table.ptr(), _119438_ident,false) == nullptr);
}



inline jule::Bool _1c2ce47c0_check_structure_assign_op(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd868e1_StructIns>& _120250_s, jule::Ptr<_1dcd78ae2_AssignSt>& _120270_a, jule::Ptr<_1c2d6d9e2_Data>& _120289_r) {
	jule::Ptr<_1dce3b644_FnIns> _120517_overload = nullptr;;
	{
		auto &_match_expr{ _120270_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1aae09ec4:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1aae0a03a:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1aae0ae4d:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1aae0aeb4:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1aae0b02a:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1aae0b091:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1aae0b107:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1aae0b1c3:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1aae0b239:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1aae0b2a0:;
			{
				_120517_overload=_120250_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1aae09d92:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1dcd5c279_to_str(_120250_s.ptr()))}));
				return false;
			}
		}
		_match_end_1aae09cd7:;
	};
	if ((_120517_overload == nullptr)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _120270_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120270_a.get()._field_setter.get()._field_kind),jule::Any(_1dcd5c279_to_str(_120250_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1dce3a775_ParamIns> _123717_p = _120517_overload.get()._field_params[1LL];;
	return _1c2d1326c_check_assign_type(_self_.get()._field_s, _123717_p.get()._field_decl.get()._field_reference,_123717_p.get()._field_kind,_120289_r,_120270_a.get()._field_setter);
}



inline void _1c2ce4a56_check_single_assign(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd78ae2_AssignSt>& _124144_a) {
	jule::Ptr<_1c2d6d9e2_Data> _124217_l = nullptr;;
	if ((!(_1db70894b_is_ignore_ident(_124144_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1dcd6e38a_Expr> _124521_expr = _124144_a.get()._field_left[0LL].get()._field_expr;;
		_124217_l=_1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _124521_expr);
		if ((_124217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c2d70560_Eval> _125217_eval = nullptr;;
	if ((_124217_l != nullptr)) {
		_125217_eval=_1c2d12964_evalp(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0),_124217_l.get()._field_kind);
	} else {
		_125217_eval=_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));
	};
	_125217_eval.get()._field_unsafety=_1c2cdbe8d_is_unsafe(_self_);
	jule::Ptr<_1c2d6d9e2_Data> _125917_r = _1c2d90edc_eval_expr(_125217_eval, _124144_a.get()._field_right);;
	if ((_125917_r == nullptr)) {
		return;;
	};
	if ((_124217_l == nullptr)) {
		if (_1c2da09ad_void(_125917_r.get()._field_kind.ptr())) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_125917_r));;
		return;;
	};
	if ((!(_1c2cc30d9_check_assign(_self_.get()._field_s,_124217_l,_125917_r,_124144_a.get()._field_setter)))) {
		return;;
	};
	if ((_1c2da35c6_tup(_125917_r.get()._field_kind.ptr()) != nullptr)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _124144_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dce31529_OperandExprModel> _128117_lm = jule::new_ptr<_1dce31529_OperandExprModel>(_1dce31529_OperandExprModel{._field_kind=_124217_l.get()._field_kind, ._field_model=_124217_l.get()._field_model});;
	jule::Ptr<_1dce31529_OperandExprModel> _128517_rm = jule::new_ptr<_1dce31529_OperandExprModel>(_1dce31529_OperandExprModel{._field_kind=_125917_r.get()._field_kind, ._field_model=_125917_r.get()._field_model});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c2cd61eb_Assign>(_1c2cd61eb_Assign{._field_l=_128117_lm, ._field_r=_128517_rm, ._field_op=_124144_a.get()._field_setter})));;
	if ((_124144_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1dcd868e1_StructIns> _129221_strct = _1c2da2d89_strct(_124217_l.get()._field_kind.ptr());;
		if ((_129221_strct != nullptr)) {
			_1c2ce47c0_check_structure_assign_op(_self_, _129221_strct,_124144_a,_125917_r);
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind=_124144_a.get()._field_setter.get()._field_kind.slice(0LL,(_124144_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1c2d931ed_BinaryEval _129921_solver = static__1c2d93b05_new(_125217_eval,_124144_a.get()._field_setter);;
		_125917_r=_1c2d987ec_solve_explicit(&_129921_solver, _124217_l,_125917_r);
		if ((_125917_r == nullptr)) {
			return;;
		};
		_124144_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1c2d594a0_AssignTypeChecker _130817_checker = _1c2d594a0_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124217_l.get()._field_kind, ._field_d=_125917_r, ._field_error_token=_124144_a.get()._field_setter};;
	if (_1c2d5a627_check(&_130817_checker)) {
		_128517_rm.get()._field_model=_125917_r.get()._field_model;
		_128117_lm.get()._field_model=_124217_l.get()._field_model;
	};
}



inline void _1c2ce5095___process_end_part_of_multi_assign(_1c2cd9a07_ScopeChecker* _self_, jule::Ptr<_1c2cd65a3_MultiAssign> _132057_st, jule::Ptr<_1dcd78ae2_AssignSt> _132113_a, jule::Ptr<_1dcd785a3_AssignLeft> _132131_lexpr, jule::Ptr<_1c2d6d9e2_Data> _132155_l, jule::Ptr<_1c2d6d9e2_Data> _132169_r) {
	if (_1db70894b_is_ignore_ident(_132131_lexpr.get()._field_ident)) {
		if (_1c2da09ad_void(_132169_r.get()._field_kind.ptr())) {
			_1c2d0c662_push_err((*_self_)._field_s.ptr(), _132113_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_132113_a.get()._field_declarative && _1c2ce434c_is_new_assign_ident(&(*_self_), _132131_lexpr.get()._field_ident))) {
		if (_1c2cddb60_is_duplicated_ident(&(*_self_), 0LLU,_132131_lexpr.get()._field_ident)) {
			_1c2d0c662_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
			_1c2d0c981_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1c2cdc3cd_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1c2d266ae_Var> _133921_v = jule::new_ptr<_1c2d266ae_Var>(_1c2d266ae_Var{._field_scope=(*_self_)._field_scope, ._field_token=_132131_lexpr.get()._field_token, ._field_ident=_132131_lexpr.get()._field_ident, ._field_mutable=_132131_lexpr.get()._field_mutable, ._field_reference=_132131_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_expr=_132113_a.get()._field_right, ._field_data=_132169_r}), });;
		_1c2d1de04_check_var((*_self_)._field_s, _133921_v);
		_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(static_cast<jule::Any>(_133921_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_133921_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_133921_v));;
		return;;
	};
	if ((_132131_lexpr.get()._field_mutable || _132131_lexpr.get()._field_reference)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _132131_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132131_lexpr.get()._field_ident)}));
		_1c2d0c981_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1c2cc30d9_check_assign((*_self_)._field_s,_132155_l,_132169_r,_132113_a.get()._field_setter)))) {
		return;;
	};
	;
	_1c2d16083_check_validity_for_init_expr((*_self_)._field_s, _132155_l.get()._field_mutable,false,_132155_l.get()._field_kind,_132169_r,_132113_a.get()._field_setter);
	_1c2d594a0_AssignTypeChecker _137417_checker = _1c2d594a0_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_132155_l.get()._field_kind, ._field_d=_132169_r, ._field_error_token=_132113_a.get()._field_setter};;
	_1c2d5a627_check(&_137417_checker);
	_132057_st.get()._field_l = jule::alloc_for_append(_132057_st.get()._field_l,1);_132057_st.get()._field_l.__push(_132155_l.get()._field_model);;
}



inline void _1c2ce531a_check_ret_multi_assign(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd78ae2_AssignSt>& _138547_a) {
	jule::Ptr<_1c2d6d9e2_Data> _138617_rd = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _138547_a.get()._field_right);;
	if ((_138617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _139117_r = _1c2cbdac9_get_datas_from_tuple_data(_138617_rd);;
	{
		
		if ((_138547_a.get()._field_left.len() > _139117_r.len())) {
			_case_begin_1aae2ada2:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138547_a.get()._field_left.len() < _139117_r.len())) {
			_case_begin_1aae2ae29:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _138547_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aae2ace7:;
	};
	jule::Ptr<_1c2cd65a3_MultiAssign> _140217_st = jule::new_ptr<_1c2cd65a3_MultiAssign>(_1c2cd65a3_MultiAssign{._field_r=_138617_rd.get()._field_model});;
	if ((_1c2da35c6_tup(_138617_rd.get()._field_kind.ptr()) == nullptr)) {
		_140217_st.get()._field_r=static_cast<jule::Any>(jule::new_ptr<_1dce340ba_TupleExprModel>(_1dce340ba_TupleExprModel{._field_datas=_139117_r}));
	};
	{
		auto &expr = _138547_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1aae2daec:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			{
				jule::Ptr<_1dcd785a3_AssignLeft> _141121_lexpr = _138547_a.get()._field_left[_141013_i];;
				jule::Ptr<_1c2d6d9e2_Data> _141221_l = nullptr;;
				if (((!(_1db70894b_is_ignore_ident(_141121_lexpr.get()._field_ident))) && ((!(_138547_a.get()._field_declarative)) || (!(_1c2ce434c_is_new_assign_ident(_self_.ptr(), _141121_lexpr.get()._field_ident)))))) {
					_141221_l=_1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _141121_lexpr.get()._field_expr);
					if ((_141221_l == nullptr)) {
						goto _iter_next_1aae2daec;
					};
				};
				_1c2ce5095___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_138547_a,_141121_lexpr,_141221_l,_139117_r[_141013_i]);
			}
			_iter_next_1aae2daec:;
			++it;
			_141013_i++;
			goto _iter_begin_1aae2daec;
		}
		_iter_end_1aae2daec:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_140217_st));;
}



inline void _1c2ce5590_check_multi_assign(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd78ae2_AssignSt>& _142843_a) {
	{
		auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd73658_FnCallExpr>>()) {
			_case_begin_1aae32b12:;
			{
				_1c2ce531a_check_ret_multi_assign(_self_, _142843_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd70ac8_UnsafeExpr>>()) {
			_case_begin_1aae32b89:;
			{
				{
					auto &_match_expr{ _142843_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1dcd70ac8_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd73658_FnCallExpr>>()) {
						_case_begin_1aae33e65:;
						{
							_1c2ce531a_check_ret_multi_assign(_self_, _142843_a);
							return;;
						}
					}
					_match_end_1aae33ddd:;
				};
			}
		}
		_match_end_1aae32408:;
	};
	jule::Slice<jule::Any> _144117_right = _1c2cc1a22_get_expr_models(_142843_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_142843_a.get()._field_left.len() > _144117_right.len())) {
			_case_begin_1aae34c8a:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142843_a.get()._field_left.len() < _144117_right.len())) {
			_case_begin_1aae34d12:;
			{
				_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _142843_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aae34b47:;
	};
	jule::Ptr<_1dce340ba_TupleExprModel> _145217_right_tuple = jule::new_ptr<_1dce340ba_TupleExprModel>();;
	jule::Ptr<_1c2cd65a3_MultiAssign> _145417_st = jule::new_ptr<_1c2cd65a3_MultiAssign>(_1c2cd65a3_MultiAssign{._field_r=static_cast<jule::Any>(_145217_right_tuple)});;
	{
		auto &expr = _142843_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1aae375d9:;
		if (it != expr.end()) {
			jule::I64 _145813_i = it - expr.begin();
			{
				jule::Ptr<_1dcd785a3_AssignLeft> _145921_lexpr = _142843_a.get()._field_left[_145813_i];;
				jule::Ptr<_1c2d6d9e2_Data> _146021_l = nullptr;;
				if (((!(_1db70894b_is_ignore_ident(_145921_lexpr.get()._field_ident))) && ((!(_142843_a.get()._field_declarative)) || (!(_1c2ce434c_is_new_assign_ident(_self_.ptr(), _145921_lexpr.get()._field_ident)))))) {
					_146021_l=_1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _145921_lexpr.get()._field_expr);
					if ((_146021_l == nullptr)) {
						goto _iter_next_1aae375d9;
					};
				};
				jule::Ptr<_1dcd6e38a_Expr> _147021_expr = jule::new_ptr<_1dcd6e38a_Expr>(_1dcd6e38a_Expr{._field_token=_142843_a.get()._field_right.get()._field_token, ._field_kind=_144117_right[_145813_i]});;
				jule::Ptr<_1c2d70560_Eval> _147421_eval = nullptr;;
				if ((_146021_l != nullptr)) {
					_147421_eval=_1c2d12964_evalp(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0),_146021_l.get()._field_kind);
				} else {
					_147421_eval=_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));
				};
				jule::Ptr<_1c2d6d9e2_Data> _148021_r = _1c2d90edc_eval_expr(_147421_eval, _147021_expr);;
				if ((_148021_r == nullptr)) {
					goto _iter_next_1aae375d9;
				};
				_145217_right_tuple.get()._field_datas = jule::alloc_for_append(_145217_right_tuple.get()._field_datas,1);_145217_right_tuple.get()._field_datas.__push(_148021_r);;
				_1c2ce5095___process_end_part_of_multi_assign(_self_.ptr(), _145417_st,_142843_a,_145921_lexpr,_146021_l,_148021_r);
			}
			_iter_next_1aae375d9:;
			++it;
			_145813_i++;
			goto _iter_begin_1aae375d9;
		}
		_iter_end_1aae375d9:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_145417_st));;
}



inline void _1c2ce5815_check_assign_st(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd78ae2_AssignSt> _149339_a) {
	{
		
		if (_1db70a9e7_is_postfix_op(_149339_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1aae3e1e5:;
			{
				_1c2ce403e_check_postfix(_self_, _149339_a);
			}
		}
		else if (((_149339_a.get()._field_left.len() == 1LL) && (!(_149339_a.get()._field_declarative)))) {
			_case_begin_1aae3ddb5:;
			{
				_1c2ce4a56_check_single_assign(_self_, _149339_a);
			}
		}
		else {
			_case_begin_1aae3dd4e:;
			{
				_1c2ce5590_check_multi_assign(_self_, _149339_a);
			}
		}
		_match_end_1aae3d7dd:;
	};
}



inline jule::Ptr<_1c2cd2d1e_Scope> _1c2ce5bbc_check_case_scope(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1c2cd763c_Case>& _150437_c, jule::Ptr<_1dcd7a187_ScopeTree>& _150452_tree) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _150517_ssc = _1c2cea09a_new_child_checker(_self_);;
	_150517_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150437_c));
	return _1c2cdeb3e_check_child_sc(_self_, _150452_tree,_150517_ssc);
}



inline jule::Ptr<_1c2cd763c_Case> _1c2ce61b7_check_case(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1c2cd6ae2_Match> _151034_m, jule::I64 _151045_i, jule::Ptr<_1dcd81941_Case> _151057_c, jule::Ptr<_1c2d6d9e2_Data> _151076_expr) {
	jule::Ptr<_1c2cd763c_Case> _151117__case = _151034_m.get()._field_cases[_151045_i];;
	_151117__case.get()._field_exprs=jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>::alloc(0LL,_151057_c.get()._field_exprs.len());
	jule::Bool _151317_generic_matched = false;;
	jule::Ptr<_1c2d70560_Eval> _151417_eval = _1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0));;
	{
		auto &expr = _151057_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aae44195:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd6e38a_Expr> _151521_e = *it;
			{
				jule::Ptr<_1c2d6d9e2_Data> _151621_d = _1c2d908c1_eval_expr_kind(_151417_eval, _151521_e.get()._field_kind);;
				if ((_151621_d == nullptr)) {
					goto _iter_next_1aae44195;
				};
				if (_151034_m.get()._field_type_match) {
					_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
					if ((_1c2cb0a99_count_match_type(_151034_m,_151621_d.get()._field_kind) > 1LL)) {
						_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_151621_d.get()._field_kind.ptr()))}));
					};
					if (_151076_expr.get()._field_kind.get()._field_generic) {
						_151317_generic_matched=(_151317_generic_matched || _1c2da002e_equals(_151076_expr.get()._field_kind, _151621_d.get()._field_kind));
					} else {
						if ((_1c2da23d8_tenm(_151076_expr.get()._field_kind.ptr()) != nullptr)) {
							_1c2d136e0_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
						} else {
							jule::Ptr<_1c2c3d54e_Trait> _153129_trt = _1c2da30ed_trt(_151076_expr.get()._field_kind.ptr());;
							if ((_153129_trt != nullptr)) {
								_1c2d136e0_check_type_compatibility(_self_.get()._field_s, _151076_expr.get()._field_kind,_151621_d.get()._field_kind,_151521_e.get()._field_token);
							};
						};
					};
					goto _iter_next_1aae44195;
				};
				if (_151621_d.get()._field_decl) {
					_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _151521_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1aae44195;
				};
				_151117__case.get()._field_exprs = jule::alloc_for_append(_151117__case.get()._field_exprs,1);_151117__case.get()._field_exprs.__push(_151621_d);;
				_1c2d594a0_AssignTypeChecker _154921_checker = _1c2d594a0_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_151076_expr.get()._field_kind, ._field_d=_151621_d, ._field_error_token=_151521_e.get()._field_token};;
				_1c2d5a627_check(&_154921_checker);
			}
			_iter_next_1aae44195:;
			++it;
			goto _iter_begin_1aae44195;
		}
		_iter_end_1aae44195:;
	};
	if ((((!(_151034_m.get()._field_type_match)) || (!(_151076_expr.get()._field_kind.get()._field_generic))) || _151317_generic_matched)) {
		_151117__case.get()._field_scope=_1c2ce5bbc_check_case_scope(_self_, _151117__case,_151057_c.get()._field_scope);
	};
	return _151117__case;
}



inline void _1c2ce6580_check_cases(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd82117_MatchCase>& _156336_m, jule::Ptr<_1c2cd6ae2_Match> _156355_rm, jule::Ptr<_1c2d6d9e2_Data> _156371_expr) {
	_156355_rm.get()._field_cases=jule::Slice<jule::Ptr<_1c2cd763c_Case>>::alloc(0LL,_156336_m.get()._field_cases.len());
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aae4c841:;
		if (it != expr.end()) {
			jule::I64 _156513_i = it - expr.begin();
			{
				jule::Ptr<_1c2cd763c_Case> _156621__case = jule::new_ptr<_1c2cd763c_Case>(_1c2cd763c_Case{._field_owner=_156355_rm, });;
				if ((_156513_i > 0LL)) {
					_156355_rm.get()._field_cases[(_156513_i - 1LL)].get()._field_next=_156621__case;
				};
				_156355_rm.get()._field_cases = jule::alloc_for_append(_156355_rm.get()._field_cases,1);_156355_rm.get()._field_cases.__push(_156621__case);;
			}
			_iter_next_1aae4c841:;
			++it;
			_156513_i++;
			goto _iter_begin_1aae4c841;
		}
		_iter_end_1aae4c841:;
	};
	if (((_156355_rm.get()._field_default != nullptr) && (_156336_m.get()._field_cases.len() > 0LL))) {
		_156355_rm.get()._field_cases[(_156355_rm.get()._field_cases.len() - 1LL)].get()._field_next=_156355_rm.get()._field_default;
	};
	{
		auto &expr = _156336_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aae50db6:;
		if (it != expr.end()) {
			jule::I64 _157914_i = it - expr.begin();
			jule::Ptr<_1dcd81941_Case> _157921_c = *it;
			{
				_1c2ce61b7_check_case(_self_, _156355_rm,_157914_i,_157921_c,_156371_expr);
			}
			_iter_next_1aae50db6:;
			++it;
			_157914_i++;
			goto _iter_begin_1aae50db6;
		}
		_iter_end_1aae50db6:;
	};
}



inline jule::Ptr<_1c2cd763c_Case> _1c2ce6937_check_default(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1c2cd6ae2_Match> _158437_m, jule::Ptr<_1dcd80874_Else> _158452_d) {
	jule::Ptr<_1c2cd763c_Case> _158517_def = jule::new_ptr<_1c2cd763c_Case>(_1c2cd763c_Case{._field_owner=_158437_m, });;
	_158517_def.get()._field_scope=_1c2ce5bbc_check_case_scope(_self_, _158517_def,_158452_d.get()._field_scope);
	return _158517_def;
}



inline void _1c2ce6bac_check_comptime_panic(_1c2cd9a07_ScopeChecker* _self_, jule::Ptr<_1c2cd2d1e_Scope>& _159240_s) {
	if ((_159240_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159713_stmt = _159240_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _159713_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1aae541c7:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _160017_d = _159713_stmt.operator jule::Ptr<_1c2d6d9e2_Data>();;
				{
					auto &_match_expr{ _160017_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>()) {
						_case_begin_1aae5500d:;
						{
							jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel> _160321_m = _160017_d.get()._field_model.operator jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160321_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
									_case_begin_1aae55eed:;
									{
										jule::Ptr<_1dcdbd1a8_Const> _160625_c = _160321_m.get()._field_expr.operator jule::Ptr<_1dcdbd1a8_Const>();;
										if (_1dce2bc72_is_str(_160625_c.ptr())) {
											_1c2d0c662_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1dce298c9_read_str(_160625_c.ptr()))}));
										};
									}
								}
								_match_end_1aae55e54:;
							};
						}
					}
					_match_end_1aae54dba:;
				};
			}
		}
		_match_end_1aae54172:;
	};
}



inline void _1c2ce6ecb_push_type_match(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1c2cd6ae2_Match> _161539_tm, jule::Ptr<_1dcd82117_MatchCase>& _161556_m) {
	if (_161539_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _161539_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1aae554b4:;
			if (it != expr.end()) {
				jule::Ptr<_1c2cd763c_Case> _161925_c = *it;
				{
					if ((_161925_c.get()._field_scope != nullptr)) {
						_1c2ce6bac_check_comptime_panic(_self_.ptr(), _161925_c.get()._field_scope);
						_161539_tm.get()._field_default=_161925_c;
						_161539_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1aae554b4:;
				++it;
				goto _iter_begin_1aae554b4;
			}
			_iter_end_1aae554b4:;
		};
		if ((_161556_m.get()._field_default != nullptr)) {
			_161539_tm.get()._field_cases=nullptr;
			_161539_tm.get()._field_default=_1c2ce6937_check_default(_self_, _161539_tm,_161556_m.get()._field_default);
			if ((_161539_tm.get()._field_default != nullptr)) {
				_1c2ce6bac_check_comptime_panic(_self_.ptr(), _161539_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_161539_tm));;
}



inline void _1c2ce7251_check_type_match(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd82117_MatchCase>& _163941_m) {
	jule::Ptr<_1c2d6d9e2_Data> _164017_d = _1c2d90bce_eval(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _163941_m.get()._field_expr);;
	if ((_164017_d == nullptr)) {
		return;;
	};
	if (((!(_164017_d.get()._field_kind.get()._field_generic)) && (!(((((_1c2da1937_prim(_164017_d.get()._field_kind.ptr()) != nullptr) && _1c2da7795_is_any(_1c2da1937_prim(_164017_d.get()._field_kind.ptr()).ptr())) || (_1c2da30ed_trt(_164017_d.get()._field_kind.ptr()) != nullptr)) || (_1c2da23d8_tenm(_164017_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _163941_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2cd6ae2_Match> _165117_tm = jule::new_ptr<_1c2cd6ae2_Match>(_1c2cd6ae2_Match{._field_expr=_164017_d, ._field_type_match=true, });;
	if (((!(_165117_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_163941_m.get()._field_default != nullptr))) {
		_165117_tm.get()._field_default=_1c2ce6937_check_default(_self_, _165117_tm,_163941_m.get()._field_default);
	};
	_1c2ce6580_check_cases(_self_, _163941_m,_165117_tm,_164017_d);
	_1c2ce6ecb_push_type_match(_self_, _165117_tm,_163941_m);
}



inline void _1c2ce74c6_check_common_match(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd82117_MatchCase>& _166443_m) {
	jule::Ptr<_1c2d6d9e2_Data> _166517_d = nullptr;;
	if ((_166443_m.get()._field_expr == nullptr)) {
		_166517_d=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_constant=static__1dce28356_new_bool(true)});
		_166517_d.get()._field_model=static_cast<jule::Any>(_166517_d.get()._field_constant);
	} else {
		_166517_d=_1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _166443_m.get()._field_expr);
		if ((_166517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c2cd6ae2_Match> _167917_mc = jule::new_ptr<_1c2cd6ae2_Match>(_1c2cd6ae2_Match{._field_expr=_166517_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_167917_mc));;
	if ((_166443_m.get()._field_default != nullptr)) {
		_167917_mc.get()._field_default=_1c2ce6937_check_default(_self_, _167917_mc,_166443_m.get()._field_default);
	};
	_1c2ce6580_check_cases(_self_, _166443_m,_167917_mc,_166517_d);
}



inline void _1c2ce774b_check_match(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd82117_MatchCase> _169135_m) {
	if (_169135_m.get()._field_type_match) {
		_1c2ce7251_check_type_match(_self_, _169135_m);
		return;;
	};
	_1c2ce74c6_check_common_match(_self_, _169135_m);
}



inline void _1c2ce79c1_check_fall(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd77e98_FallSt> _169930_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1c2cdc8a6_is_deferred(_self_))) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1c2cd763c_Case* _170717__case = ((_1c2cd763c_Case*)(_self_.get()._field_cse));;
	if ((_170717__case->_field_next == nullptr)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _169930_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c2cd7be2_FallSt>(_1c2cd7be2_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170717__case->_field_next))})));;
}



inline jule::Ptr<_1c2cd52e9_BreakSt> _1c2ce7cce_check_break_with_label(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7eb92_BreakSt> _171942_b) {
	jule::Ptr<_1c2cd52e9_BreakSt> _172017_brk = _1c2ce80dc_check_plain_break(_self_, _171942_b);;
	if ((_172017_brk == nullptr)) {
		return nullptr;
	};
	_172017_brk.get()._field_it=0LLU;
	_172017_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1c2cd8770_ScopeLabel> _173017_label = _1c2cadc1d_find_label_parent(_171942_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_173017_label == nullptr)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_173017_label.get()._field_used=true;
	if (((_173017_label.get()._field_pos + 1LL) >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _174313_i = (_173017_label.get()._field_pos + 1LL);;
	if ((_174313_i >= _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _174721_st = _173017_label.get()._field_scope.get()._field_scope.get()._field_stmts[_174313_i];;
		{
			auto &_match_expr{ _174721_st };
			
			if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
				_case_begin_1aae6e115:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1c2cd3bdd_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2cd4a46_RangeIter>>()) {
				_case_begin_1aae72668:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1c2cd4a46_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2cd4161_WhileIter>>()) {
				_case_begin_1aae726ce:;
				{
					_172017_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1c2cd4161_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c2cd6ae2_Match>>()) {
				_case_begin_1aae72745:;
				{
					_172017_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174721_st.operator jule::Ptr<_1c2cd6ae2_Match>()));
				}
			}
			else {
				_case_begin_1aae72514:;
				{
					_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1aae72437:;
		};
	};
	if ((_172017_brk.get()._field_it != 0LLU)) {
		if ((!(_1c2ce322a_check_valid_break_label(_self_, _172017_brk.get()._field_it)))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_172017_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1c2ce322a_check_valid_break_label(_self_, _172017_brk.get()._field_mtch)))) {
			_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _171942_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171942_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _172017_brk;
}



inline jule::Ptr<_1c2cd52e9_BreakSt> _1c2ce80dc_check_plain_break(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7eb92_BreakSt> _177737_b) {
	if (_1c2cdc8a6_is_deferred(_self_)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2cd9a07_ScopeChecker> _178317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178317_scope.get()._field_it == 0LLU) && (_178317_scope.get()._field_cse == 0LLU)) && (_178317_scope.get()._field_parent != nullptr)) && (_178317_scope.get()._field_owner == nullptr))) {
			_case_begin_1aae789e3:;
			{
				_178317_scope=_178317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178317_scope.get()._field_it != 0LLU)) {
			_case_begin_1aae78a6a:;
			{
				return jule::new_ptr<_1c2cd52e9_BreakSt>(_1c2cd52e9_BreakSt{._field_it=_178317_scope.get()._field_it, });
			}
		}
		else if ((_178317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1aae78ae2:;
			{
				return jule::new_ptr<_1c2cd52e9_BreakSt>(_1c2cd52e9_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1c2cd763c_Case*)(_178317_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1aae78927:;
	};
	_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _177737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c2ce8362_check_break(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7eb92_BreakSt> _179931_b) {
	if ((_179931_b.get()._field_label != nullptr)) {
		jule::Ptr<_1c2cd52e9_BreakSt> _180121_brk = _1c2ce7cce_check_break_with_label(_self_, _179931_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180121_brk));;
		return;;
	};
	jule::Ptr<_1c2cd52e9_BreakSt> _180617_brk = _1c2ce80dc_check_plain_break(_self_, _179931_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_180617_brk));;
}



inline void _1c2ce85d7_check_ret(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7d014_RetSt> _181033_r) {
	if (_1c2cdc8a6_is_deferred(_self_)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _181033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2cd8165_RetSt> _181517_rt = jule::new_ptr<_1c2cd8165_RetSt>(_1c2cd8165_RetSt{._field_func=_1c2cdcb1a_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_181517_rt));;
	jule::Ptr<_1c2d66dd6_RetTypeChecker> _182017_rtc = jule::new_ptr<_1c2d66dd6_RetTypeChecker>(_1c2d66dd6_RetTypeChecker{._field_sc=_self_, ._field_f=_181517_rt.get()._field_func, ._field_error_token=_181033_r.get()._field_token, });;
	jule::Bool _182513_ok = _1c2d67cc7_check(_182017_rtc.ptr(), _181033_r.get()._field_expr);;
	if ((!(_182513_ok))) {
		return;;
	};
	if (((_181033_r.get()._field_expr == nullptr) && (_182017_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181517_rt.get()._field_vars=_182017_rtc.get()._field_vars;
	if ((_181033_r.get()._field_expr != nullptr)) {
		_181517_rt.get()._field_expr=_182017_rtc.get()._field_model;
	};
}



inline void _1c2ce885c_check_use_expr(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd6ec2b_UseExpr> _184134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1c2cdc8a6_is_deferred(_self_)) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _184134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1c2ce8ad2_check_node(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Any& _185735_node) {
	{
		auto &_match_expr{ _185735_node };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd7a187_ScopeTree>>()) {
			_case_begin_1aae87073:;
			{
				_1c2ce01c2_check_anon_scope(_self_, _185735_node.operator jule::Ptr<_1dcd7a187_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7cb5c_VarDecl>>()) {
			_case_begin_1aae86a67:;
			{
				_1c2cdddd5_check_var_decl(_self_, _185735_node.operator jule::Ptr<_1dcd7cb5c_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd814bd_TypeAliasDecl>>()) {
			_case_begin_1aae86e74:;
			{
				_1c2cde15a_check_type_alias_decl(_self_, _185735_node.operator jule::Ptr<_1dcd814bd_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6e38a_Expr>>()) {
			_case_begin_1aae872b5:;
			{
				_1c2ce0766_check_expr(_self_, _185735_node.operator jule::Ptr<_1dcd6e38a_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd70e80_CoExpr>>()) {
			_case_begin_1aae8746e:;
			{
				_1c2ce09db_check_co_expr(_self_, _185735_node.operator jule::Ptr<_1dcd70e80_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd80ce7_Conditional>>()) {
			_case_begin_1aae874d5:;
			{
				_1c2ce137c_check_conditional(_self_, _185735_node.operator jule::Ptr<_1dcd80ce7_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7d674_Iter>>()) {
			_case_begin_1aae8754b:;
			{
				_1c2ce2adc_check_iter(_self_, _185735_node.operator jule::Ptr<_1dcd7d674_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd80049_ContSt>>()) {
			_case_begin_1aae875b2:;
			{
				_1c2ce37be_check_cont(_self_, _185735_node.operator jule::Ptr<_1dcd80049_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd77805_LabelSt>>()) {
			_case_begin_1aae87628:;
			{
				_1c2ce3a44_check_label(_self_, _185735_node.operator jule::Ptr<_1dcd77805_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd77bac_GotoSt>>()) {
			_case_begin_1aae8768e:;
			{
				_1c2ce3cb9_push_goto(_self_, _185735_node.operator jule::Ptr<_1dcd77bac_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd78ae2_AssignSt>>()) {
			_case_begin_1aae87705:;
			{
				_1c2ce5815_check_assign_st(_self_, _185735_node.operator jule::Ptr<_1dcd78ae2_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd82117_MatchCase>>()) {
			_case_begin_1aae8776b:;
			{
				_1c2ce774b_check_match(_self_, _185735_node.operator jule::Ptr<_1dcd82117_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd77e98_FallSt>>()) {
			_case_begin_1aae877d2:;
			{
				_1c2ce79c1_check_fall(_self_, _185735_node.operator jule::Ptr<_1dcd77e98_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7eb92_BreakSt>>()) {
			_case_begin_1aae87848:;
			{
				_1c2ce8362_check_break(_self_, _185735_node.operator jule::Ptr<_1dcd7eb92_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7d014_RetSt>>()) {
			_case_begin_1aae878ae:;
			{
				_1c2ce85d7_check_ret(_self_, _185735_node.operator jule::Ptr<_1dcd7d014_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6ec2b_UseExpr>>()) {
			_case_begin_1aae87925:;
			{
				_1c2ce885c_check_use_expr(_self_, _185735_node.operator jule::Ptr<_1dcd6ec2b_UseExpr>());
			}
		}
		else {
			_case_begin_1aae86bdd:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1aae86b11:;
	};
}



inline void _1c2ce8cad_check_result(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	_1dcd79a7c_Stmt _189717_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189717_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6ec2b_UseExpr>>()) {
			_case_begin_1aae91852:;
			{
				jule::Ptr<_1dcd6ec2b_UseExpr> _190021_ue = _189717_stmt._field_data.operator jule::Ptr<_1dcd6ec2b_UseExpr>();;
				jule::Ptr<_1c2d6d9e2_Data> _190121_d = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _190021_ue.get()._field_expr);;
				if ((_190121_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_190121_d));;
				jule::Ptr<_1c2d66dd6_RetTypeChecker> _190621_rtc = jule::new_ptr<_1c2d66dd6_RetTypeChecker>(_1c2d66dd6_RetTypeChecker{._field_sc=_self_, ._field_types=_1dce3c766_types(_self_.get()._field_result.ptr()), ._field_error_token=_190021_ue.get()._field_expr.get()._field_token, });;
				_1c2d67cc7_check(_190621_rtc.ptr(), _190021_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6e38a_Expr>>()) {
			_case_begin_1aae918b8:;
			{
				jule::Ptr<_1dcd6e38a_Expr> _191321_expr = _189717_stmt._field_data.operator jule::Ptr<_1dcd6e38a_Expr>();;
				jule::Ptr<_1c2d6d9e2_Data> _191421_d = _1c2d90edc_eval_expr(_1c2d12c72_eval(_self_.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>(_self_, 0)), _191321_expr);;
				if ((_191421_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
						_case_begin_1aae960a4:;
						{
							jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel> _192025_m = _191421_d.get()._field_model.operator jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>();;
							_1c2ce04e1_process_error_call(_self_, _192025_m,_191321_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(static_cast<jule::Any>(_191421_d));;
						}
					}
					else {
						_case_begin_1aae95e61:;
						{
							return;;
						}
					}
					_match_end_1aae95e0b:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd77bac_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1dcd7eb92_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1dcd80049_ContSt>>() || _match_expr.type_is<jule::Ptr<_1dcd7d014_RetSt>>()) {
			_case_begin_1aae91016:;
			{
				_1c2ce8ad2_check_node(_self_, _189717_stmt._field_data);
			}
		}
		else {
			_case_begin_1aae90ea0:;
			{
				_1c2ce8ad2_check_node(_self_, _189717_stmt._field_data);
				return;;
			}
		}
		_match_end_1aae90d29:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1c2ce8e89_check_tree(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194217_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194217_n)--;
	};
	for (; (_self_.get()._field_i < _194217_n); (_self_.get()._field_i)++) {
		{
			_1dcd79a7c_Stmt _195021_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1c2ce8ad2_check_node(_self_, _195021_stmt._field_data);
			if (_1c2cdc642_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1aae994e7:;
	}
	_iter_end_1aae994e7:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1c2ce8cad_check_result(_self_);
	};
}



inline void _1c2ce92a8_check_goto(_1c2cd9a07_ScopeChecker* _self_, jule::Ptr<_1c2cd8be3_ScopeGoto>& _196134_gt, jule::Ptr<_1c2cd8770_ScopeLabel>& _196155_label) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _196217_gtsc = _196134_gt.get()._field_scope;;
	while (((_196217_gtsc.get()._field_child_index - 1LL) > _196155_label.get()._field_scope.get()._field_child_index)) {
		{
			_196217_gtsc=_196217_gtsc.get()._field_parent;
		}
	_iter_next_1aae9c5d8:;
	}
	_iter_end_1aae9c5d8:;;
	jule::I64 _196717_n = 0LL;;
	if ((_196217_gtsc.get()._field_scope == _196155_label.get()._field_scope.get()._field_scope)) {
		if ((_196134_gt.get()._field_pos > _196155_label.get()._field_pos)) {
			return;;
		};
		_196717_n=_196134_gt.get()._field_pos;
	};
	jule::I64 _198017_i = (_196155_label.get()._field_pos - 1LL);;
	if ((_196717_n == 0LL)) {
		{
			auto &expr = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1aae9ebd4:;
			if (it != expr.end()) {
				jule::I64 _198317_j = it - expr.begin();
				jule::Any _198320_stmt = *it;
				{
					if (_1c2caebdb_stmt_is_goto_scope(_198320_stmt,_196217_gtsc.get()._field_scope)) {
						_196717_n=_198317_j;
						goto _iter_end_1aae9ebd4;
					};
				}
				_iter_next_1aae9ebd4:;
				++it;
				_198317_j++;
				goto _iter_begin_1aae9ebd4;
			}
			_iter_end_1aae9ebd4:;
		};
	};
	for (; (_198017_i >= _196717_n); (_198017_i)--) {
		{
			jule::Any _199321_stmt = _196155_label.get()._field_scope.get()._field_scope.get()._field_stmts[_198017_i];;
			if (_1c2caba95_stmt_is_def(_199321_stmt)) {
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _196134_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_196134_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1aae9e750:;
	}
	_iter_end_1aae9e750:;;
}



inline void _1c2ce9484_check_gotos(_1c2cd9a07_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1aaea1b3c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd8be3_ScopeGoto> _200221_gt = *it;
			{
				jule::Ptr<_1c2cd8770_ScopeLabel> _200321_label = _1c2cdd7a8_find_label_all(&(*_self_), _200221_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_200321_label == nullptr)) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _200221_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200221_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1aaea1b3c;
				};
				_200321_label.get()._field_used=true;
				_1c2ce92a8_check_goto(&(*_self_), _200221_gt,_200321_label);
			}
			_iter_next_1aaea1b3c:;
			++it;
			goto _iter_begin_1aaea1b3c;
		}
		_iter_end_1aaea1b3c:;
	};
}



inline void _1c2ce9660_check_labels(_1c2cd9a07_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aaea50d5:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd8770_ScopeLabel> _201516_l = *it;
			{
				if ((!(_201516_l.get()._field_used))) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _201516_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201516_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1aaea50d5:;
			++it;
			goto _iter_begin_1aaea50d5;
		}
		_iter_end_1aaea50d5:;
	};
}



inline void _1c2ce983b_check_vars(_1c2cd9a07_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aaea54c0:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _202316_v = *it;
			{
				if (((((!(_202316_v.get()._field_used)) && (!(_1db70894b_is_ignore_ident(_202316_v.get()._field_ident)))) && (!(_1db708be3_is_anon_ident(_202316_v.get()._field_ident)))) && (_202316_v.get()._field_ident != jule::Str("self", 4)))) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _202316_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202316_v.get()._field_ident)}));
				};
			}
			_iter_next_1aaea54c0:;
			++it;
			goto _iter_begin_1aaea54c0;
		}
		_iter_end_1aaea54c0:;
	};
}



inline void _1c2ce9a17_check_aliases(_1c2cd9a07_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1aaea724c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9db32_TypeAlias> _203116_a = *it;
			{
				if ((((!(_203116_a.get()._field_used)) && (!(_1db70894b_is_ignore_ident(_203116_a.get()._field_ident)))) && (!(_1db708be3_is_anon_ident(_203116_a.get()._field_ident))))) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _203116_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_203116_a.get()._field_ident)}));
				};
			}
			_iter_next_1aaea724c:;
			++it;
			goto _iter_begin_1aaea724c;
		}
		_iter_end_1aaea724c:;
	};
}



inline void _1c2ce9d36_check(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_, jule::Ptr<_1dcd7a187_ScopeTree>& _203930_tree, jule::Ptr<_1c2cd2d1e_Scope>& _203953_s) {
	_203953_s.get()._field_deferred=_203930_tree.get()._field_deferred;
	_203953_s.get()._field_unsafety=_203930_tree.get()._field_unsafety;
	jule::I64 _204313_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203930_tree;
	_self_.get()._field_scope=_203953_s;
	_1c2ce8e89_check_tree(_self_);
	if ((_204313_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1c2ce983b_check_vars(_self_.ptr());
		_1c2ce9a17_check_aliases(_self_.ptr());
		if (_1c2cdc202_is_root(_self_.ptr())) {
			_1c2ce9484_check_gotos(_self_.ptr());
			_1c2ce9660_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cea09a_new_child_checker(jule::Ptr<_1c2cd9a07_ScopeChecker> _self_) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _206317_base = _1c2cac2d2_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_206317_base.get()._field_parent=_self_;
	_206317_base.get()._field_labels=_self_.get()._field_labels;
	_206317_base.get()._field_gotos=_self_.get()._field_gotos;
	_206317_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _206317_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2cd9a07_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c2ceb08a_check_cdef(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dce38993_Fn>>()) {
			_case_begin_1aaeaea3a:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1dce38993_Fn>().get()._field_cpp_linked) {
					goto _match_end_1aaeaec7c;
				};
				goto _case_begin_1aaeaecd2;
			}
		}
		else {
			_case_begin_1aaeaecd2:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aaeaec7c:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c2ceb310_check_typedef(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1aaeb2b1a:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1dcd5a596_Struct>().get()._field_cpp_linked) {
					goto _match_end_1aaeb24cc;
				};
				goto _case_begin_1aaeb2532;
			}
		}
		else {
			_case_begin_1aaeb2532:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aaeb24cc:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c2ceb585_check_derive(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1aaeb4a2e:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1dcd5a596_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1aaeb4c4e;
				};
				goto _case_begin_1aaeb4ca4;
			}
		}
		else {
			_case_begin_1aaeb4ca4:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aaeb4c4e:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1aaeb8736:;
		}
		else {
			_case_begin_1aaeb4dd6:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1aaeb82e6:;
	};
}



inline void _1c2ceb80a_check_namespace(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1aaeba1e9:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1dcd5a596_Struct>().get()._field_cpp_linked))) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce38993_Fn>>()) {
			_case_begin_1aaeb979d:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1dce38993_Fn>().get()._field_cpp_linked))) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1aaeb9c43:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1c2d266ae_Var>().get()._field_cpp_linked))) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1aaeb9b11:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aaeb9aab:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1db7061a7_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1aaec3345:;
			{
				if ((_1c2d99006_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1dcd36671_Directive> _11625_typedef = jule::new_ptr<_1dcd36671_Directive>(_1dcd36671_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1dcd36671_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1aaec1222:;
	};
}



inline void _1c2ceba80_check_deprecated(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1aaec40b0:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1dcd5a596_Struct>().get()._field_cpp_linked) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce38993_Fn>>()) {
			_case_begin_1aaec55cd:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1dce38993_Fn>().get()._field_cpp_linked) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1aaec5644:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c2d266ae_Var>().get()._field_cpp_linked) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1aaec4ed4:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aaec38a6:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1db7061a7_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1c2cebd05_check_test(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dce38993_Fn>>()) {
			_case_begin_1aaeccdaa:;
			{
				jule::Ptr<_1dce38993_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1dce38993_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1dce39642_is_init(_16717_f.ptr())))) && (!(_1dce393cd_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1aaecd8c2;
				};
				if (_1dce39169_is_method(_16717_f.ptr())) {
					_1c2d0c662_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1aaecd8c2;
				};
				goto _case_begin_1aaecd927;
			}
		}
		else {
			_case_begin_1aaecd927:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aaecd8c2:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1c2d0c662_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c2cec07a_check_directive(_1c2ceab4a_DirectiveChecker* _self_, jule::Ptr<_1dcd36671_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1aaed802a:;
			{
				_1c2ceb08a_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1aaed7700:;
			{
				_1c2ceb310_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1aaed7766:;
			{
				_1c2ceb585_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1aaed77cc:;
			{
				_1c2ceb80a_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1aaed7843:;
			{
				_1c2ceba80_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1aaed848c:;
			{
				_1c2cebd05_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1aaed8503:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1aaed7689:;
			{
				_1c2d0c662_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aaed75ce:;
	};
}



inline void _1c2cec256_check(_1c2ceab4a_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1aaedaabb:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _20821_d = *it;
			{
				_1c2cec07a_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1aaedaabb:;
			++it;
			goto _iter_begin_1aaedaabb;
		}
		_iter_end_1aaedaabb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2ceab4a_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d01d71_find_package(_1c2d01854_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d0217e_select_package(_1c2d01854_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d02536_find_var(_1c2d01854_ImportInfo* _self_, jule::Str _18131_ident, jule::Bool _18143_cpp_linked) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _18131_ident)))) {
		return nullptr;
	};
	return _1c2cee3e0_find_var_in_package((*_self_)._field_package.get()._field_files,_18131_ident,false);
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d028dd_find_type_alias(_1c2d01854_ImportInfo* _self_, jule::Str _19338_ident, jule::Bool _19350_cpp_linked) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _19338_ident)))) {
		return nullptr;
	};
	return _1c2cee841_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_19338_ident,false);
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2d02c95_find_struct(_1c2d01854_ImportInfo* _self_, jule::Str _20534_ident, jule::Bool _20546_cpp_linked) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _20534_ident)))) {
		return nullptr;
	};
	return _1c2ceec3c_find_struct_in_package((*_self_)._field_package.get()._field_files,_20534_ident,false);
}



inline jule::Ptr<_1dce38993_Fn> _1c2d0314c_find_fn(_1c2d01854_ImportInfo* _self_, jule::Str _21730_ident, jule::Bool _21742_cpp_linked) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _21730_ident)))) {
		return nullptr;
	};
	return _1c2d0019e_find_fn_in_package((*_self_)._field_package.get()._field_files,_21730_ident,false);
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2d0345a_find_trait(_1c2d01854_ImportInfo* _self_, jule::Str _22833_ident) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _22833_ident)))) {
		return nullptr;
	};
	return _1c2d004ac_find_trait_in_package((*_self_)._field_package.get()._field_files,_22833_ident);
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2d03768_find_enum(_1c2d01854_ImportInfo* _self_, jule::Str _23932_ident) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _23932_ident)))) {
		return nullptr;
	};
	return _1c2d007ed_find_enum_in_package((*_self_)._field_package.get()._field_files,_23932_ident);
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d03a76_find_type_enum(_1c2d01854_ImportInfo* _self_, jule::Str _25037_ident) {
	if ((!(_1c2d03e1c_is_lookupable(&(*_self_), _25037_ident)))) {
		return nullptr;
	};
	return _1c2d00b61_find_type_enum_in_package((*_self_)._field_package.get()._field_files,_25037_ident);
}



inline jule::Bool _1c2d03e1c_is_lookupable(_1c2d01854_ImportInfo* _self_, jule::Str _25928_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1c2d0422a_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1c2d0422a_exist_ident(&(*_self_), _25928_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1c2d0422a_exist_ident(_1c2d01854_ImportInfo* _self_, jule::Str _27926_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1ab0008d3:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_kind == _27926_ident)) {
					return true;
				};
			}
			_iter_next_1ab0008d3:;
			++it;
			goto _iter_begin_1ab0008d3;
		}
		_iter_end_1ab0008d3:;
	};
	return false;
}



inline jule::Bool _1c2d044b1_is_accessible_via_selection(_1c2d01854_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1c2d0422a_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d01854_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d04c86_find_package(_1c2d047ad_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d05094_select_package(_1c2d047ad_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d0544b_find_var(_1c2d047ad_Package* _self_, jule::Str _30931_ident, jule::Bool _30943_cpp_linked) {
	return _1c2cee3e0_find_var_in_package((*_self_)._field_files,_30931_ident,_30943_cpp_linked);
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d05803_find_type_alias(_1c2d047ad_Package* _self_, jule::Str _31538_ident, jule::Bool _31550_cpp_linked) {
	return _1c2cee841_find_type_alias_in_package((*_self_)._field_files,_31538_ident,_31550_cpp_linked);
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2d05baa_find_struct(_1c2d047ad_Package* _self_, jule::Str _32134_ident, jule::Bool _32146_cpp_linked) {
	return _1c2ceec3c_find_struct_in_package((*_self_)._field_files,_32134_ident,_32146_cpp_linked);
}



inline jule::Ptr<_1dce38993_Fn> _1c2d06062_find_fn(_1c2d047ad_Package* _self_, jule::Str _32730_ident, jule::Bool _32742_cpp_linked) {
	return _1c2d0019e_find_fn_in_package((*_self_)._field_files,_32730_ident,_32742_cpp_linked);
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2d06370_find_trait(_1c2d047ad_Package* _self_, jule::Str _33333_ident) {
	return _1c2d004ac_find_trait_in_package((*_self_)._field_files,_33333_ident);
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2d0667d_find_enum(_1c2d047ad_Package* _self_, jule::Str _33932_ident) {
	return _1c2d007ed_find_enum_in_package((*_self_)._field_files,_33932_ident);
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d0698b_find_type_enum(_1c2d047ad_Package* _self_, jule::Str _34537_ident) {
	return _1c2d00b61_find_type_enum_in_package((*_self_)._field_files,_34537_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d047ad_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d09ebc_find_package(_1c2d099a0_Sema* _self_, jule::Str _22035_ident) {
	return _1c2d692a1_find_package((*_self_)._field_file.ptr(), _22035_ident);
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d0a2ca_select_package(_1c2d099a0_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _23037_selector) {
	return _1c2d695ae_select_package((*_self_)._field_file.ptr(), _23037_selector);
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d0a682_find_var(_1c2d099a0_Sema* _self_, jule::Str _24031_ident, jule::Bool _24043_cpp_linked) {
	jule::Ptr<_1c2d266ae_Var> _24217_v = _1c2cee3e0_find_var_in_package((*_self_)._field_files,_24031_ident,_24043_cpp_linked);;
	if ((_24217_v != nullptr)) {
		return _24217_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab02341c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _24821_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_24821_imp,_24031_ident)))) {
					goto _iter_next_1ab02341c;
				};
				_24217_v=_1c2d02536_find_var(_24821_imp.ptr(), _24031_ident,_24043_cpp_linked);
				if (((_24217_v != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _24217_v.get()._field_public,_24217_v.get()._field_token))) {
					return _24217_v;
				};
			}
			_iter_next_1ab02341c:;
			++it;
			goto _iter_begin_1ab02341c;
		}
		_iter_end_1ab02341c:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d0aa39_find_type_alias(_1c2d099a0_Sema* _self_, jule::Str _26738_ident, jule::Bool _26750_cpp_linked) {
	jule::Ptr<_1c2d9db32_TypeAlias> _26917_ta = _1c2cee841_find_type_alias_in_package((*_self_)._field_files,_26738_ident,_26750_cpp_linked);;
	if ((_26917_ta != nullptr)) {
		return _26917_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab025dae:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _27521_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_27521_imp,_26738_ident)))) {
					goto _iter_next_1ab025dae;
				};
				_26917_ta=_1c2d028dd_find_type_alias(_27521_imp.ptr(), _26738_ident,_26750_cpp_linked);
				if (((_26917_ta != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _26917_ta.get()._field_public,_26917_ta.get()._field_token))) {
					return _26917_ta;
				};
			}
			_iter_next_1ab025dae:;
			++it;
			goto _iter_begin_1ab025dae;
		}
		_iter_end_1ab025dae:;
	};
	return nullptr;
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2d0ade1_find_struct(_1c2d099a0_Sema* _self_, jule::Str _29434_ident, jule::Bool _29446_cpp_linked) {
	jule::Ptr<_1dcd5a596_Struct> _29617_s = _1c2ceec3c_find_struct_in_package((*_self_)._field_files,_29434_ident,_29446_cpp_linked);;
	if ((_29617_s != nullptr)) {
		return _29617_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab028873:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _30221_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_30221_imp,_29434_ident)))) {
					goto _iter_next_1ab028873;
				};
				_29617_s=_1c2d02c95_find_struct(_30221_imp.ptr(), _29434_ident,_29446_cpp_linked);
				if (((_29617_s != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _29617_s.get()._field_public,_29617_s.get()._field_token))) {
					return _29617_s;
				};
			}
			_iter_next_1ab028873:;
			++it;
			goto _iter_begin_1ab028873;
		}
		_iter_end_1ab028873:;
	};
	return nullptr;
}



inline jule::Ptr<_1dce38993_Fn> _1c2d0b298_find_fn(_1c2d099a0_Sema* _self_, jule::Str _32130_ident, jule::Bool _32142_cpp_linked) {
	jule::Ptr<_1dce38993_Fn> _32317_f = _1c2d0019e_find_fn_in_package((*_self_)._field_files,_32130_ident,_32142_cpp_linked);;
	if ((_32317_f != nullptr)) {
		return _32317_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab02b326:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _32921_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_32921_imp,_32130_ident)))) {
					goto _iter_next_1ab02b326;
				};
				_32317_f=_1c2d0314c_find_fn(_32921_imp.ptr(), _32130_ident,_32142_cpp_linked);
				if (((_32317_f != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _32317_f.get()._field_public,_32317_f.get()._field_token))) {
					return _32317_f;
				};
			}
			_iter_next_1ab02b326:;
			++it;
			goto _iter_begin_1ab02b326;
		}
		_iter_end_1ab02b326:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2d0b5a6_find_trait(_1c2d099a0_Sema* _self_, jule::Str _34833_ident) {
	jule::Ptr<_1c2c3d54e_Trait> _35017_t = _1c2d004ac_find_trait_in_package((*_self_)._field_files,_34833_ident);;
	if ((_35017_t != nullptr)) {
		return _35017_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab02d966:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _35621_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_35621_imp,_34833_ident)))) {
					goto _iter_next_1ab02d966;
				};
				_35017_t=_1c2d0345a_find_trait(_35621_imp.ptr(), _34833_ident);
				if (((_35017_t != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _35017_t.get()._field_public,_35017_t.get()._field_token))) {
					return _35017_t;
				};
			}
			_iter_next_1ab02d966:;
			++it;
			goto _iter_begin_1ab02d966;
		}
		_iter_end_1ab02d966:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2d0b8b4_find_enum(_1c2d099a0_Sema* _self_, jule::Str _37532_ident) {
	jule::Ptr<_1c2c4070a_Enum> _37717_e = _1c2d007ed_find_enum_in_package((*_self_)._field_files,_37532_ident);;
	if ((_37717_e != nullptr)) {
		return _37717_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab0311a5:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _38321_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_38321_imp,_37532_ident)))) {
					goto _iter_next_1ab0311a5;
				};
				_37717_e=_1c2d03768_find_enum(_38321_imp.ptr(), _37532_ident);
				if (((_37717_e != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _37717_e.get()._field_public,_37717_e.get()._field_token))) {
					return _37717_e;
				};
			}
			_iter_next_1ab0311a5:;
			++it;
			goto _iter_begin_1ab0311a5;
		}
		_iter_end_1ab0311a5:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d0bbc2_find_type_enum(_1c2d099a0_Sema* _self_, jule::Str _40237_ident) {
	jule::Ptr<_1c2c41d05_TypeEnum> _40417_e = _1c2d00b61_find_type_enum_in_package((*_self_)._field_files,_40237_ident);;
	if ((_40417_e != nullptr)) {
		return _40417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab033905:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _41021_imp = *it;
			{
				if ((!(_1c2d083c7_imp_is_lookupable(_41021_imp,_40237_ident)))) {
					goto _iter_next_1ab033905;
				};
				_40417_e=_1c2d03a76_find_type_enum(_41021_imp.ptr(), _40237_ident);
				if (((_40417_e != nullptr) && _1c2d0cd38_is_accessible_define(&(*_self_), _40417_e.get()._field_public,_40417_e.get()._field_token))) {
					return _40417_e;
				};
			}
			_iter_next_1ab033905:;
			++it;
			goto _iter_begin_1ab033905;
		}
		_iter_end_1ab033905:;
	};
	return nullptr;
}



inline jule::Bool _1c2d0c024_is_flag(_1c2d099a0_Sema* _self_, jule::I64 _42622_flags) {
	return (((*_self_)._field_flags & _42622_flags) == _42622_flags);
}



inline void _1c2d0c299_set_current_file(_1c2d099a0_Sema* _self_, jule::Ptr<_1c2d68c84_SymbolTable> _42839_f) {
	(*_self_)._field_file=_42839_f;
}



inline void _1c2d0c662_push_err(_1c2d099a0_Sema* _self_, jule::Ptr<_1db7061a7_Token> _43027_token, jule::Str _43042_fmt, jule::Slice<jule::Any> _43055_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c2d08086_compiler_err(_43027_token,true,_43042_fmt,jule::Any(_43055_args)));;
}



inline void _1c2d0c981_push_suggestion(_1c2d099a0_Sema* _self_, jule::Str _43534_fmt, jule::Slice<jule::Any> _43547_args) {
	{
		_1c2d0951b_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43534_fmt,jule::Any(_43547_args));
	};
}



inline jule::Bool _1c2d0cd38_is_accessible_define(_1c2d099a0_Sema* _self_, jule::Bool _44035_public, jule::Ptr<_1db7061a7_Token> _44049_token) {
	return ((_44035_public || (_44049_token.get()._field_file == nullptr)) || (_1db70be38_dir((*_self_)._field_file.get()._field_file.ptr()) == _1db70be38_dir(_44049_token.get()._field_file.ptr())));
}



inline jule::Bool _1c2d0d289_is_duplicated_ident(_1c2d099a0_Sema* _self_, jule::Uintptr _44734_itself, jule::Str _44751_ident, jule::Bool _44763_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1ab03a5aa:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> &_44816_f = *it;
			{
				if (_1c2d6c282_is_duplicated_ident(_44816_f.ptr(), _44734_itself,_44751_ident,_44763_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44816_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1ab03ae6d:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d01854_ImportInfo> &_45320_imp = *it;
						{
							{
								auto &expr = _45320_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1ab03bd09:;
								if (it != expr.end()) {
									jule::Ptr<_1db7061a7_Token> &_45424_selected = *it;
									{
										if ((_45424_selected.get()._field_kind == _44751_ident)) {
											return true;
										};
									}
									_iter_next_1ab03bd09:;
									++it;
									goto _iter_begin_1ab03bd09;
								}
								_iter_end_1ab03bd09:;
							};
						}
						_iter_next_1ab03ae6d:;
						++it;
						goto _iter_begin_1ab03ae6d;
					}
					_iter_end_1ab03ae6d:;
				};
			}
			_iter_next_1ab03a5aa:;
			++it;
			goto _iter_begin_1ab03a5aa;
		}
		_iter_end_1ab03a5aa:;
	};
	return false;
}



inline void _1c2d0d5a8_check_directives(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _46441_d, jule::Any _46467_o) {
	_1c2ceab4a_DirectiveChecker _46517_dc = _1c2ceab4a_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1dcd36671_Directive>>>)((&(_46441_d)))), ._field_o=jule::Any(_46467_o)};;
	_1c2cec256_check(&_46517_dc);
}



inline jule::Bool _1c2d0da09_check_generic_quantity(_1c2d099a0_Sema* _self_, jule::I64 _47341_required, jule::I64 _47356_given, jule::Ptr<_1db7061a7_Token> _47368_token) {
	jule::Bool _47385_ok = jule::Bool();
	{
		
		if (((_47341_required == 0LL) && (_47356_given > 0LL))) {
			_case_begin_1ab03ea43:;
			{
				_1c2d0c662_push_err(&(*_self_), _47368_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if (((_47341_required > 0LL) && (_47356_given == 0LL))) {
			_case_begin_1ab03eb20:;
			{
				_1c2d0c662_push_err(&(*_self_), _47368_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if ((_47341_required < _47356_given)) {
			_case_begin_1ab03eb86:;
			{
				_1c2d0c662_push_err(&(*_self_), _47368_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else if ((_47341_required > _47356_given)) {
			_case_begin_1ab03e867:;
			{
				_1c2d0c662_push_err(&(*_self_), _47368_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47385_ok = false;
				return _47385_ok;
			}
		}
		else {
			_case_begin_1ab03e3d3:;
			{
				_47385_ok = true;
				return _47385_ok;
			}
		}
		_match_end_1ab03e306:;
	};
}



inline jule::Bool _1c2d0ddd3_is_duplicated_import_selection(_1c2d099a0_Sema* _self_, jule::Uintptr _49245_itself, jule::Str _49262_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab042abd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> &_49316_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49316_imp) == _49245_itself)) {
					goto _iter_end_1ab042abd;
				};
				if (_1c2d0422a_exist_ident(_49316_imp.ptr(), _49262_ident)) {
					return true;
				};
			}
			_iter_next_1ab042abd:;
			++it;
			goto _iter_begin_1ab042abd;
		}
		_iter_end_1ab042abd:;
	};
	return false;
}



inline jule::Any _1c2d0e29b_get_import_def(_1c2d099a0_Sema* _self_, jule::Str _50729_ident, jule::Ptr<_1c2d01854_ImportInfo>& _50746_imp) {
	if ((_1c2e29042_find_package_builtin_def(_50746_imp.get()._field_link_path,_50729_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50746_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab04441b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _51221_f = *it;
			{
				;
				jule::Any _51421_def = _1c2d6bd31_def_by_ident(_51221_f.ptr(), _50729_ident,false);;
				if ((_51421_def != nullptr)) {
					return jule::Any(_51421_def);
				};
			}
			_iter_next_1ab04441b:;
			++it;
			goto _iter_begin_1ab04441b;
		}
		_iter_end_1ab04441b:;
	};
	return nullptr;
}



inline jule::Bool _1c2d0e5cb_check_import_selections(_1c2d099a0_Sema* _self_, jule::Ptr<_1c2d01854_ImportInfo>& _52347_imp) {
	jule::Bool _52367_ok = jule::Bool();
	_52367_ok=true;
	{
		auto &expr = _52347_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1ab04697e:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> _52516_ident = *it;
			{
				if ((_52516_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1ab04697e;
				};
				if (_1c2d0ddd3_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_52347_imp)),_52516_ident.get()._field_kind)) {
					_1c2d0c662_push_err(&(*_self_), _52516_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
					_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_52367_ok=false;
					goto _iter_next_1ab04697e;
				};
				jule::Any _53721_def = _1c2d0e29b_get_import_def(&(*_self_), _52516_ident.get()._field_kind,_52347_imp);;
				{
					auto &_match_expr{ _53721_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1ab048a19:;
						{
							goto _iter_next_1ab04697e;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
						_case_begin_1ab049487:;
						{
							jule::Ptr<_1c2d266ae_Var> _54325_v = _53721_def.operator jule::Ptr<_1c2d266ae_Var>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _54325_v.get()._field_public,_54325_v.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
						_case_begin_1ab0494ed:;
						{
							jule::Ptr<_1c2d9db32_TypeAlias> _54825_ta = _53721_def.operator jule::Ptr<_1c2d9db32_TypeAlias>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _54825_ta.get()._field_public,_54825_ta.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
						_case_begin_1ab049564:;
						{
							jule::Ptr<_1dcd5a596_Struct> _55325_strct = _53721_def.operator jule::Ptr<_1dcd5a596_Struct>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _55325_strct.get()._field_public,_55325_strct.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2c3d54e_Trait>>()) {
						_case_begin_1ab04a0e2:;
						{
							jule::Ptr<_1c2c3d54e_Trait> _55825_t = _53721_def.operator jule::Ptr<_1c2c3d54e_Trait>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _55825_t.get()._field_public,_55825_t.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2c4070a_Enum>>()) {
						_case_begin_1ab04a158:;
						{
							jule::Ptr<_1c2c4070a_Enum> _56325_e = _53721_def.operator jule::Ptr<_1c2c4070a_Enum>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _56325_e.get()._field_public,_56325_e.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2c41d05_TypeEnum>>()) {
						_case_begin_1ab04a1be:;
						{
							jule::Ptr<_1c2c41d05_TypeEnum> _56825_e = _53721_def.operator jule::Ptr<_1c2c41d05_TypeEnum>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _56825_e.get()._field_public,_56825_e.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1dce38993_Fn>>()) {
						_case_begin_1ab04a235:;
						{
							jule::Ptr<_1dce38993_Fn> _57325_f = _53721_def.operator jule::Ptr<_1dce38993_Fn>();;
							if (_1c2d0cd38_is_accessible_define(&(*_self_), _57325_f.get()._field_public,_57325_f.get()._field_token)) {
								goto _iter_next_1ab04697e;
							};
						}
					}
					else {
						_case_begin_1ab049223:;
						{
							_1c2d0c662_push_err(&(*_self_), _52516_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
							_52367_ok=false;
							goto _iter_next_1ab04697e;
						}
					}
					_match_end_1ab047199:;
				};
				_1c2d0c662_push_err(&(*_self_), _52516_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52516_ident.get()._field_kind)}));
				_1c2d0c981_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_52367_ok=false;
			}
			_iter_next_1ab04697e:;
			++it;
			goto _iter_begin_1ab04697e;
		}
		_iter_end_1ab04697e:;
	};
	return _52367_ok;
}



inline jule::Bool _1c2d0e91c_is_use_alias_duplication(_1c2d099a0_Sema* _self_, jule::Ptr<_1c2d01854_ImportInfo>& _59044_imp) {
	if ((_59044_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab052e74:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _59521_imp2 = *it;
			{
				if ((_59521_imp2 == _59044_imp)) {
					goto _iter_end_1ab052e74;
				};
				if ((_59521_imp2.get()._field_alias == _59044_imp.get()._field_alias)) {
					return true;
				};
				if (((_59521_imp2.get()._field_ident == _59521_imp2.get()._field_link_path) && (_59521_imp2.get()._field_ident == _59044_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1ab052e74:;
			++it;
			goto _iter_begin_1ab052e74;
		}
		_iter_end_1ab052e74:;
	};
	return false;
}



inline jule::Bool _1c2d0ec3b_check_import(_1c2d099a0_Sema* _self_, jule::Ptr<_1c2d01854_ImportInfo>& _61136_imp) {
	if ((_61136_imp.get()._field_cpp_linked || (_61136_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1c2d0e91c_is_use_alias_duplication(&(*_self_), _61136_imp)) {
		_1c2d0c662_push_err(&(*_self_), _61136_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_61136_imp.get()._field_alias)}));
		_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_61136_imp.get()._field_duplicate))) {
		jule::Ptr<_1c2d099a0_Sema> _62221_sema = jule::new_ptr<_1c2d099a0_Sema>(_1c2d099a0_Sema{._field_flags=(*_self_)._field_flags});;
		_1c2d236cd_check(_62221_sema, _61136_imp.get()._field_package.get()._field_files);
		if ((_62221_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_62221_sema.get()._field_errors);
			_62221_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1c2d0e5cb_check_import_selections(&(*_self_), _61136_imp);
}



inline void _1c2d0ee17_check_imports(_1c2d099a0_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1ab0581ee:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _63621_file = *it;
			{
				_1c2d0c299_set_current_file(&(*_self_), _63621_file);
				{
					auto &expr = _63621_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1ab05972d:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d01854_ImportInfo> _63925_imp = *it;
						{
							jule::Bool _64021_ok = _1c2d0ec3b_check_import(&(*_self_), _63925_imp);;
							if ((!(_64021_ok))) {
								_1c2d0c662_push_err(&(*_self_), _63925_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63925_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1ab05972d:;
						++it;
						goto _iter_begin_1ab05972d;
					}
					_iter_end_1ab05972d:;
				};
			}
			_iter_next_1ab0581ee:;
			++it;
			goto _iter_begin_1ab0581ee;
		}
		_iter_end_1ab0581ee:;
	};
}



inline void _1c2d100e3_impl_file_impls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1ab059e48:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cc44d6_Impl> _65221_imp = *it;
			{
				_1c2d1a780_impl_impl(_self_, _65221_imp);
			}
			_iter_next_1ab059e48:;
			++it;
			goto _iter_begin_1ab059e48;
		}
		_iter_end_1ab059e48:;
	};
}



inline void _1c2d102be_impl_impls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab05b620:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _65821_file = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _65821_file);
				_1c2d100e3_impl_file_impls(_self_);
			}
			_iter_next_1ab05b620:;
			++it;
			goto _iter_begin_1ab05b620;
		}
		_iter_end_1ab05b620:;
	};
}



inline void _1c2d1049a_check_enums(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab05cba4:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _66521_file = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _66521_file);
				_1c2d17c66_check_enum_decls(_self_);
			}
			_iter_next_1ab05cba4:;
			++it;
			goto _iter_begin_1ab05cba4;
		}
		_iter_end_1ab05cba4:;
	};
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d10995_build_type_with_refers(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd69d69_TypeDecl>& _67247_t, jule::Trait<_1c2dba3bd_Lookup> _67270_l, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _67313_generics, jule::Ptr<_1c2dac03b_Referencer> _67341_referencer) {
	_1c2dacc84_TypeChecker _67417_tc = _1c2dacc84_TypeChecker{._field_s=_self_, ._field_lookup=_67270_l, ._field_referencer=_67341_referencer, ._field_use_generics=_67313_generics, };;
	{
		auto &_match_expr{ _67270_l };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab05e876:;
			{
				jule::Ptr<_1c2cd9a07_ScopeChecker> _68221_hard = _1c2cdcd7e_get_hard_root(_67270_l.operator jule::Ptr<_1c2cd9a07_ScopeChecker>());;
				_67417_tc._field_refers=_68221_hard.get()._field_owner.get()._field_refers;
			}
		}
		_match_end_1ab05e5ce:;
	};
	if (((_67341_referencer != nullptr) && (_67341_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _67341_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
				_case_begin_1ab05ed2c:;
				{
					_67417_tc._field_owner_alias=_67341_referencer.get()._field_owner.operator jule::Ptr<_1c2d9db32_TypeAlias>();
				}
			}
			_match_end_1ab05ecc7:;
		};
	};
	return _1c2db5000_check_decl(&_67417_tc, _67247_t);
}



inline jule::Bool _1c2d10e90_check_type_with_refers(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2da397d_TypeSymbol>& _69947_t, jule::Trait<_1c2dba3bd_Lookup> _69967_l, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _70013_generics, jule::Ptr<_1c2dac03b_Referencer> _70041_referencer) {
	jule::Bool _70068_ok = jule::Bool();
	if (_1c2da3d35_checked(_69947_t.ptr())) {
		_70068_ok = true;
		return _70068_ok;
	};
	_69947_t.get()._field_kind=_1c2d10995_build_type_with_refers(_self_, _69947_t.get()._field_decl,_69967_l,_70013_generics,_70041_referencer);
	_70068_ok = _1c2da3d35_checked(_69947_t.ptr());
	return _70068_ok;
}



inline jule::Ptr<_1c2c59e50_ConstraintChecker> _1c2d11204_constraint_checker(jule::Ptr<_1c2d099a0_Sema> _self_) {
	return jule::new_ptr<_1c2c59e50_ConstraintChecker>(_1c2c59e50_ConstraintChecker{._field_s=_self_, });
}



inline jule::Bool _1c2d115ab_check_type(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2da397d_TypeSymbol>& _71435_t, jule::Trait<_1c2dba3bd_Lookup> _71455_l) {
	return _1c2d10e90_check_type_with_refers(_self_, _71435_t,_71455_l,nullptr,nullptr);
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d11a2e_build_type_with_generics(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd69d69_TypeDecl>& _72049_t, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _72113_generics, jule::Ptr<_1dce3e548_ReferenceStack> _72141_refers) {
	jule::Ptr<_1c2dacc84_TypeChecker> _72217_tc = jule::new_ptr<_1c2dacc84_TypeChecker>(_1c2dacc84_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_self_, 3), ._field_refers=_72141_refers, ._field_use_generics=_72113_generics, });;
	return _1c2db5000_check_decl(_72217_tc.ptr(), _72049_t);
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d11d4d_build_type(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd69d69_TypeDecl>& _73235_t) {
	return _1c2d11a2e_build_type_with_generics(_self_, _73235_t,nullptr,nullptr);
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d1215b_select_type(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd69d69_TypeDecl>& _73736_t) {
	jule::Ptr<_1c2dacc84_TypeChecker> _73817_tc = jule::new_ptr<_1c2dacc84_TypeChecker>(_1c2dacc84_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c2db5000_check_decl(_73817_tc.ptr(), _73736_t);
}



inline jule::Ptr<_1c2d70560_Eval> _1c2d125ac_evalpd(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Trait<_1c2dba3bd_Lookup> _74830_l, jule::Ptr<_1c2d9e825_TypeKind> _74845_p, jule::Ptr<_1c2d266ae_Var> _74863_owner) {
	jule::Ptr<_1c2d70560_Eval> _74917_e = jule::new_ptr<_1c2d70560_Eval>(_1c2d70560_Eval{._field_s=_self_, ._field_lookup=_74830_l, ._field_owner=_74863_owner, });;
	{
		auto &_match_expr{ _74830_l };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab068473:;
			{
				_74917_e.get()._field_unsafety=_1c2cdbe8d_is_unsafe(_74830_l.operator jule::Ptr<_1c2cd9a07_ScopeChecker>());
			}
		}
		_match_end_1ab06840c:;
	};
	_74917_e.get()._field_prefix=_74845_p;
	return _74917_e;
}



inline jule::Ptr<_1c2d70560_Eval> _1c2d12964_evalp(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Trait<_1c2dba3bd_Lookup> _76629_l, jule::Ptr<_1c2d9e825_TypeKind> _76644_p) {
	return _1c2d125ac_evalpd(_self_, _76629_l,_76644_p,nullptr);
}



inline jule::Ptr<_1c2d70560_Eval> _1c2d12c72_eval(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Trait<_1c2dba3bd_Lookup> _77128_l) {
	return _1c2d12964_evalp(_self_, _77128_l,nullptr);
}



inline jule::Bool _1c2d1326c_check_assign_type(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Bool _77537_dest_is_ref, jule::Ptr<_1c2d9e825_TypeKind>& _77561_dest, jule::Ptr<_1c2d6d9e2_Data>& _77614_d, jule::Ptr<_1db7061a7_Token> _77628_error_token) {
	if (_77614_d.get()._field_decl) {
		_1c2d0c662_push_err(_self_.ptr(), _77628_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77537_dest_is_ref) {
		if ((!(_1c2da002e_equals(_77561_dest, _77614_d.get()._field_kind)))) {
			_1c2d0c662_push_err(_self_.ptr(), _77628_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_77561_dest.ptr())),jule::Any(_1c2d9ec21_to_str(_77614_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1c2d594a0_AssignTypeChecker> _78721_atc = jule::new_ptr<_1c2d594a0_AssignTypeChecker>(_1c2d594a0_AssignTypeChecker{._field_s=_self_, ._field_dest=_77561_dest, ._field_d=_77614_d, ._field_error_token=_77628_error_token});;
		jule::Bool _79317_ok = _1c2d5a627_check(_78721_atc.ptr());;
		if ((!(_79317_ok))) {
			return false;
		};
	};
	if (((!(_1c2d6e3a5_is_const(_77614_d.ptr()))) || (_1c2da1937_prim(_77561_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _80317_kind = _1c2da1937_prim(_77561_dest.ptr()).get()._field_kind;;
	{
		
		if (_1c2cd1a54_is_sig_int(_80317_kind)) {
			_case_begin_1ab06ed5e:;
			{
				_1dce2a600_set_i64(_77614_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_77614_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2cd1d40_is_unsig_int(_80317_kind)) {
			_case_begin_1ab06edd6:;
			{
				_1dce2a875_set_u64(_77614_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_77614_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2cd2406_is_float(_80317_kind)) {
			_case_begin_1ab06ee5d:;
			{
				_1dce2b0e5_set_f64(_77614_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1dce2a37a_as_f64(_77614_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1ab06ec93:;
	};
	return true;
}



inline jule::Bool _1c2d136e0_check_type_compatibility(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d9e825_TypeKind>& _81749_dest, jule::Ptr<_1c2d9e825_TypeKind>& _81814_src, jule::Ptr<_1db7061a7_Token>& _81835_error_token) {
	if ((_81814_src == nullptr)) {
		_1c2d0c662_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_81749_dest.ptr())),jule::Any(_1c2d9ec21_to_str(_81814_src.ptr()))}));
		return false;
	};
	if ((_1c2da35c6_tup(_81814_src.ptr()) != nullptr)) {
		_1c2d0c662_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_81749_dest.ptr())),jule::Any(_1c2d9ec21_to_str(_81814_src.ptr()))}));
		return false;
	};
	_1c2d57877_TypeCompatibilityChecker _83217_tcc = _1c2d57877_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_81749_dest, ._field_src=_81814_src, ._field_error_token=_81835_error_token};;
	if (_1c2d58e61_check(&_83217_tcc)) {
		return true;
	};
	_1c2d0c662_push_err(_self_.ptr(), _81835_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_81749_dest.ptr())),jule::Any(_1c2d9ec21_to_str(_81814_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2d13aca_build_non_generic_type_kind(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd69d69_TypeDecl>& _85352_ast, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>& _85414_generics) {
	jule::Ptr<_1c2dacc84_TypeChecker> _85517_tc = jule::new_ptr<_1c2dacc84_TypeChecker>(_1c2dacc84_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_self_, 3), ._field_ignore_generics=_85414_generics, });;
	return _1c2db5000_check_decl(_85517_tc.ptr(), _85352_ast);
}



inline void _1c2d13d83_build_fn_non_generic_type_kinds(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3b644_FnIns>& _86356_f) {
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _86417_generics = nullptr;;
	if (_1dce39169_is_method(_86356_f.get()._field_decl.ptr())) {
		_86417_generics=jule::append(_86356_f.get()._field_decl.get()._field_generics,_86356_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_86417_generics=_86356_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _86356_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab07875d:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3a775_ParamIns> _87121_p = *it;
			{
				if ((!(_1dce37783_is_self(_87121_p.get()._field_decl.ptr())))) {
					_87121_p.get()._field_kind=_1c2d13aca_build_non_generic_type_kind(_self_, _87121_p.get()._field_decl.get()._field_kind.get()._field_decl,_86417_generics);
				};
			}
			_iter_next_1ab07875d:;
			++it;
			goto _iter_begin_1ab07875d;
		}
		_iter_end_1ab07875d:;
	};
	if ((!(_1dce38e05_is_void(_86356_f.get()._field_decl.ptr())))) {
		_86356_f.get()._field_result=_1c2d13aca_build_non_generic_type_kind(_self_, _86356_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86417_generics);
	};
}



inline jule::Ptr<_1dce3b644_FnIns> _1c2d141c4_get_trait_check_fn_kind(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce38993_Fn>& _88148_f) {
	if ((_88148_f.get()._field_instances.len() == 1LL)) {
		return _88148_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1dce3b644_FnIns> _88517_ins = _1dce39d7e_instance_force(_88148_f);;
	jule::Ptr<_1c2dacc84_TypeChecker> _88717_tc = jule::new_ptr<_1c2dacc84_TypeChecker>(_1c2dacc84_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_self_, 3), });;
	{
		auto &expr = _88517_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab07c322:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3a775_ParamIns> _89121_p = *it;
			{
				if ((!(_1dce37783_is_self(_89121_p.get()._field_decl.ptr())))) {
					_89121_p.get()._field_kind=_1c2db5000_check_decl(_88717_tc.ptr(), _89121_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1ab07c322:;
			++it;
			goto _iter_begin_1ab07c322;
		}
		_iter_end_1ab07c322:;
	};
	if ((!(_1dce38e05_is_void(_88148_f.ptr())))) {
		_88517_ins.get()._field_result=_1c2db5000_check_decl(_88717_tc.ptr(), _88148_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _88517_ins;
}



inline jule::Bool _1c2d14636_check_constraints_fn(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3b644_FnIns>& _90345_f, jule::Ptr<_1db7061a7_Token>& _90361_et, jule::Ptr<_1dce3b644_FnIns> _90377_exist) {
	jule::Ptr<_1c2c59e50_ConstraintChecker> _90417_cc = _1c2d11204_constraint_checker(_self_);;
	_90417_cc.get()._field_et=_90361_et;
	_90417_cc.get()._field_fi=_90345_f;
	if ((_90377_exist != nullptr)) {
		{
			auto &expr = _90377_exist.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab080655:;
			if (it != expr.end()) {
				jule::I64 _90818_i = it - expr.begin();
				jule::Ptr<_1c2d9d0e8_InsGeneric> _90825_g = *it;
				{
					_90345_f.get()._field_generics[_90818_i].get()._field_constraint=_90825_g.get()._field_constraint;
				}
				_iter_next_1ab080655:;
				++it;
				_90818_i++;
				goto _iter_begin_1ab080655;
			}
			_iter_end_1ab080655:;
		};
	} else {
		_90417_cc.get()._field_uniq=true;
	};
	return _1c2ca0bbb_check(_90417_cc);
}



inline jule::Bool _1c2d14aa9_check_constraints_struct(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _91749_s, jule::Ptr<_1db7061a7_Token>& _91769_et, jule::Ptr<_1dcd868e1_StructIns> _91785_exist) {
	jule::Ptr<_1c2c59e50_ConstraintChecker> _91817_cc = _1c2d11204_constraint_checker(_self_);;
	_91817_cc.get()._field_et=_91769_et;
	_91817_cc.get()._field_si=_91749_s;
	if ((_91785_exist != nullptr)) {
		{
			auto &expr = _91785_exist.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab0831e6:;
			if (it != expr.end()) {
				jule::I64 _92218_i = it - expr.begin();
				jule::Ptr<_1c2d9d0e8_InsGeneric> _92225_g = *it;
				{
					_91749_s.get()._field_generics[_92218_i].get()._field_constraint=_92225_g.get()._field_constraint;
				}
				_iter_next_1ab0831e6:;
				++it;
				_92218_i++;
				goto _iter_begin_1ab0831e6;
			}
			_iter_end_1ab0831e6:;
		};
	} else {
		_91817_cc.get()._field_uniq=true;
	};
	return _1c2ca0bbb_check(_91817_cc);
}



inline jule::Bool _1c2d14e72_fn_environment(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3b644_FnIns>& _93439_f, jule::Fn<jule::Bool(jule::Ptr<_1c2d099a0_Sema>&,jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&)> _93450_algo) {
	jule::Ptr<_1c2d099a0_Sema> _93517_sema = _93439_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1c2d68c84_SymbolTable> _93617_old = _93439_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c2d0c299_set_current_file(_93439_f.get()._field_decl.get()._field_sema.ptr(), _93617_old);
	});;
	jule::Ptr<_1c2d68c84_SymbolTable> _93817_file = _1c2d090a9_find_file(_93439_f.get()._field_decl.get()._field_sema.get()._field_files,_93439_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_93817_file != nullptr)) {
		_1c2d0c299_set_current_file(_93439_f.get()._field_decl.get()._field_sema.ptr(), _93817_file);
	};
	jule::I64 _94317_size = _93439_f.get()._field_generics.len();;
	if (((_93439_f.get()._field_decl != nullptr) && (_93439_f.get()._field_decl.get()._field_owner != nullptr))) {
		_94317_size+=_93439_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _94817_generics = jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>::alloc(0LL,_94317_size);;
	_1c2d08c57_append_generic_type_aliases(_94817_generics,_93439_f);
	jule::Bool _95113_ok = _93450_algo(_93517_sema,_94817_generics);;
	if ((_93517_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_93517_sema.get()._field_errors);
		_93517_sema.get()._field_errors=nullptr;
	};
	return _95113_ok;
}



inline void _1c2d151e7_check_fn_param_kind(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3a775_ParamIns>& _96144_p) {
	_96144_p.get()._field_kind.get()._field_variadic=_96144_p.get()._field_decl.get()._field_variadic;
	if ((_96144_p.get()._field_decl.get()._field_reference && (!(_1c2db6d15_is_valid_for_ref(_96144_p.get()._field_kind))))) {
		_1c2d0c662_push_err(_self_.ptr(), _96144_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_96144_p.get()._field_kind.ptr()))}));
	};
}



inline jule::Bool _1c2d15505_reload_fn_ins_types(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3b644_FnIns> _96843_f) {
	if ((_1dce3c9ca_is_builtin(_96843_f.ptr()) || _1dce3cc3e_is_anon(_96843_f.ptr()))) {
		return true;
	};
	return _1c2d14e72_fn_environment(_self_, _96843_f,jule::Fn<jule::Bool(jule::Ptr<_1c2d099a0_Sema>&,jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>&)>([=](jule::Ptr<_1c2d099a0_Sema>& _97244_sema, jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>& _97262_generics) mutable -> jule::Bool {
		jule::Bool _97321_ok = true;;
		{
			auto &expr = _96843_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1ab08e675:;
			if (it != expr.end()) {
				jule::Ptr<_1dce3a775_ParamIns> _97425_p = *it;
				{
					if (_1dce37783_is_self(_97425_p.get()._field_decl.ptr())) {
						if (_1dce379e7_is_ref(_97425_p.get()._field_decl.ptr())) {
							_97425_p.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da7a81_Sptr>(_1c2da7a81_Sptr{._field_elem=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_96843_f.get()._field_owner, 0)})}), 7)});
						} else {
							_97425_p.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_96843_f.get()._field_owner, 0)});
						};
					} else {
						_97425_p.get()._field_kind=_1c2d11a2e_build_type_with_generics(_97244_sema, _97425_p.get()._field_decl.get()._field_kind.get()._field_decl,_97262_generics,_96843_f.get()._field_refers);
						if ((_97425_p.get()._field_kind != nullptr)) {
							_1c2d151e7_check_fn_param_kind(_self_, _97425_p);
						} else {
							_97321_ok=false;
						};
					};
				}
				_iter_next_1ab08e675:;
				++it;
				goto _iter_begin_1ab08e675;
			}
			_iter_end_1ab08e675:;
		};
		if ((!(_1dce38e05_is_void(_96843_f.get()._field_decl.ptr())))) {
			_96843_f.get()._field_result=_1c2d11a2e_build_type_with_generics(_97244_sema, _96843_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_97262_generics,_96843_f.get()._field_refers);
			_97321_ok=((_96843_f.get()._field_result != nullptr) && _97321_ok);
		};
		return _97321_ok;
	}));
}



inline jule::Bool _1c2d15989_check_ref_validity_for_init_expr(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Bool _100452_left_mut, jule::Ptr<_1c2d6d9e2_Data>& _100473_d, jule::Ptr<_1db7061a7_Token>& _100488_error_token) {
	{
		auto &_match_expr{ _100473_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1ab094bb9:;
			{
				goto _match_end_1ab094218;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3320c_TraitSubIdentExprModel>>()) {
			_case_begin_1ab094c30:;
			{
				jule::Ptr<_1dce3320c_TraitSubIdentExprModel> _100921_model = _100473_d.get()._field_model.operator jule::Ptr<_1dce3320c_TraitSubIdentExprModel>();;
				if ((!(_1c2d07ae1_is_valid_model_for_ref(_100921_model.get()._field_expr)))) {
					_1c2d0c662_push_err(_self_.ptr(), _100488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100921_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1ab094d0c:;
			{
				jule::Ptr<_1dce3362a_StructSubIdentExprModel> _101521_model = _100473_d.get()._field_model.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>();;
				if ((!(_1c2d07ae1_is_valid_model_for_ref(_101521_model.get()._field_expr.get()._field_model)))) {
					_1c2d0c662_push_err(_self_.ptr(), _100488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_101521_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33be1_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>>()) {
			_case_begin_1ab094d73:;
			{
				_1c2d0c662_push_err(_self_.ptr(), _100488_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31903_UnaryExprModel>>()) {
			_case_begin_1ab09435b:;
			{
				jule::Ptr<_1dce31903_UnaryExprModel> _102521_unary = _100473_d.get()._field_model.operator jule::Ptr<_1dce31903_UnaryExprModel>();;
				if ((_102521_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1c2d07ae1_is_valid_model_for_ref(_100473_d.get()._field_model)))) {
						_1c2d0c662_push_err(_self_.ptr(), _100488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1ab094218;
				};
				goto _case_begin_1ab09426d;
			}
		}
		else {
			_case_begin_1ab09426d:;
			{
				_1c2d0c662_push_err(_self_.ptr(), _100488_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1ab094218:;
	};
	if ((_100452_left_mut && (!(_100473_d.get()._field_mutable)))) {
		_1c2d0c662_push_err(_self_.ptr(), _100488_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1c2d16083_check_validity_for_init_expr(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Bool _104648_left_mut, jule::Bool _104664_left_ref, jule::Ptr<_1c2d9e825_TypeKind>& _104710_left_kind, jule::Ptr<_1c2d6d9e2_Data>& _104737_d, jule::Ptr<_1db7061a7_Token>& _104752_error_token) {
	if (((_104648_left_mut && (!(_104737_d.get()._field_mutable))) && _1c2da0c22_mutable(_104737_d.get()._field_kind.ptr()))) {
		_1c2d0c662_push_err(_self_.ptr(), _104752_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_104737_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_104664_left_ref) {
		if ((!(_1c2d15989_check_ref_validity_for_init_expr(_self_, _104648_left_mut,_104737_d,_104752_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1c2d594a0_AssignTypeChecker> _105817_atc = jule::new_ptr<_1c2d594a0_AssignTypeChecker>(_1c2d594a0_AssignTypeChecker{._field_s=_self_, ._field_d=_104737_d, ._field_error_token=_104752_error_token});;
	return _1c2d59b76_check_validity(_105817_atc.ptr());
}



inline jule::Bool _1c2d1643a_check_type_alias_decl_kind(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d9db32_TypeAlias>& _106651_ta, jule::Trait<_1c2dba3bd_Lookup> _106671_l) {
	jule::Bool _106684_ok = jule::Bool();
	jule::Ptr<_1c2d68c84_SymbolTable> _106717_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c2d0c299_set_current_file(_self_.ptr(), _106717_old);
	});;
	if ((_106651_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1c2d68c84_SymbolTable> _107221_file = _1c2d090a9_find_file(_self_.get()._field_files,_106651_ta.get()._field_token.get()._field_file);;
		if ((_107221_file != nullptr)) {
			_1c2d0c299_set_current_file(_self_.ptr(), _107221_file);
		};
	};
	_106684_ok=_1c2d10e90_check_type_with_refers(_self_, _106651_ta.get()._field_kind,_106671_l,nullptr,jule::new_ptr<_1c2dac03b_Referencer>(_1c2dac03b_Referencer{._field_ident=_106651_ta.get()._field_ident, ._field_owner=jule::Any(_106651_ta), ._field_refs=(&(_106651_ta.get()._field_refers))}));
	if (((_106684_ok && (_1c2da264c_arr(_106651_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1c2da264c_arr(_106651_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1c2d0c662_push_err(_self_.ptr(), _106651_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106684_ok=false;
	};
	return _106684_ok;
}



inline void _1c2d1676a_check_type_alias_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d9db32_TypeAlias>& _108946_ta, jule::Trait<_1c2dba3bd_Lookup> _108966_l) {
	if (_1db70894b_is_ignore_ident(_108946_ta.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _108946_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c2d1643a_check_type_alias_decl_kind(_self_, _108946_ta,_108966_l);
}



inline void _1c2d16a12_check_type_alias_decl_dup(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d9db32_TypeAlias>& _109750_ta) {
	if (_1db70894b_is_ignore_ident(_109750_ta.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _109750_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_109750_ta)),_109750_ta.get()._field_ident,_109750_ta.get()._field_cpp_linked)) {
		_1c2d0c662_push_err(_self_.ptr(), _109750_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109750_ta.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c2d1643a_check_type_alias_decl_kind(_self_, _109750_ta,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));
}



inline jule::Bool _1c2d16c87_check_type_alias_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _110944_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ab0a6e2e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9db32_TypeAlias> _111021_ta = *it;
			{
				_1c2d16a12_check_type_alias_decl_dup(_self_, _111021_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_110944_ok = false;
					return _110944_ok;
				};
			}
			_iter_next_1ab0a6e2e:;
			++it;
			goto _iter_begin_1ab0a6e2e;
		}
		_iter_end_1ab0a6e2e:;
	};
	_110944_ok = true;
	return _110944_ok;
}



inline void _1ab0b833b_check_enum_items_dup(_1c2d099a0_Sema* _self_, jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>> _112142_items) {
	{
		auto &expr = _112142_items;
		auto it = expr.begin();
		_iter_begin_1ab0b9617:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3ec15_EnumItem> &_112216_item = *it;
			{
				if (_112216_item.get()._field_ident.empty()) {
					goto _iter_next_1ab0b9617;
				} else if (_1db70894b_is_ignore_ident(_112216_item.get()._field_ident)) {
					_1c2d0c662_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _112142_items;
						auto it = expr.begin();
						_iter_begin_1ab0ba34e:;
						if (it != expr.end()) {
							jule::Ptr<_1c2c3ec15_EnumItem> &_112824_citem = *it;
							{
								if ((_112216_item == _112824_citem)) {
									goto _iter_end_1ab0ba34e;
								} else if ((_112216_item.get()._field_ident == _112824_citem.get()._field_ident)) {
									_1c2d0c662_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112216_item.get()._field_ident)}));
									_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1ab0ba34e;
								};
							}
							_iter_next_1ab0ba34e:;
							++it;
							goto _iter_begin_1ab0ba34e;
						}
						_iter_end_1ab0ba34e:;
					};
				};
			}
			_iter_next_1ab0b9617:;
			++it;
			goto _iter_begin_1ab0b9617;
		}
		_iter_end_1ab0b9617:;
	};
}

inline void _1ab0c3b60_check_enum_items_dup(_1c2d099a0_Sema* _self_, jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>> _112142_items) {
	{
		auto &expr = _112142_items;
		auto it = expr.begin();
		_iter_begin_1ab0c4e3b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4173e_TypeEnumItem> &_112216_item = *it;
			{
				if (_112216_item.get()._field_ident.empty()) {
					goto _iter_next_1ab0c4e3b;
				} else if (_1db70894b_is_ignore_ident(_112216_item.get()._field_ident)) {
					_1c2d0c662_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _112142_items;
						auto it = expr.begin();
						_iter_begin_1ab0c5b73:;
						if (it != expr.end()) {
							jule::Ptr<_1c2c4173e_TypeEnumItem> &_112824_citem = *it;
							{
								if ((_112216_item == _112824_citem)) {
									goto _iter_end_1ab0c5b73;
								} else if ((_112216_item.get()._field_ident == _112824_citem.get()._field_ident)) {
									_1c2d0c662_push_err(&(*_self_), _112216_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_112216_item.get()._field_ident)}));
									_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1ab0c5b73;
								};
							}
							_iter_next_1ab0c5b73:;
							++it;
							goto _iter_begin_1ab0c5b73;
						}
						_iter_end_1ab0c5b73:;
					};
				};
			}
			_iter_next_1ab0c4e3b:;
			++it;
			goto _iter_begin_1ab0c4e3b;
		}
		_iter_end_1ab0c4e3b:;
	};
}



inline void _1c2d17282_check_enum_items_str(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2c4070a_Enum>& _114145_e) {
	jule::Ptr<_1c2d70560_Eval> _114217_eval = _1c2d12c72_eval(_self_, jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));;
	{
		auto &expr = _114145_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ab0a8cdd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3ec15_EnumItem> _114321_item = *it;
			{
				if (_1c2c40100_auto_expr(_114321_item.ptr())) {
					_114321_item.get()._field_value=jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_data=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_constant=static__1dce285ed_new_str(_114321_item.get()._field_ident)})});
					_114321_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_114321_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1c2d6d9e2_Data> _115225_d = _1c2d90edc_eval_expr(_114217_eval, _114321_item.get()._field_value.get()._field_expr);;
					if ((_115225_d == nullptr)) {
						goto _iter_next_1ab0a8cdd;
					};
					if ((!(_1c2d6e3a5_is_const(_115225_d.ptr())))) {
						_1c2d0c662_push_err(_self_.ptr(), _114321_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1c2d1326c_check_assign_type(_self_, false,_114145_e.get()._field_kind.get()._field_kind,_115225_d,_114321_item.get()._field_token);
					_114321_item.get()._field_value.get()._field_data=_115225_d;
				};
			}
			_iter_next_1ab0a8cdd:;
			++it;
			goto _iter_begin_1ab0a8cdd;
		}
		_iter_end_1ab0a8cdd:;
	};
}



inline void _1c2d17507_check_enum_items_int(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2c4070a_Enum>& _116745_e) {
	jule::Ptr<_1c2da42ec_Prim> _116813_prim = _1c2da1937_prim(_116745_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _116917_max = static_cast<jule::U64>(_1c2ccbc08_max(_1c2da4660_to_str(_116813_prim.ptr())));;
	jule::Ptr<_1c2d70560_Eval> _117017_eval = _1c2d12c72_eval(_self_, jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));;
	{
		auto &expr = _116745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ab0ae255:;
		if (it != expr.end()) {
			jule::I64 _117114_i = it - expr.begin();
			jule::Ptr<_1c2c3ec15_EnumItem> _117121_item = *it;
			{
				if ((_116917_max == 0LLU)) {
					_1c2d0c662_push_err(_self_.ptr(), _117121_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_116917_max)--;
				};
				if (_1c2c40100_auto_expr(_117121_item.ptr())) {
					_117121_item.get()._field_value=jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_data=jule::new_ptr<_1c2d6d9e2_Data>()});
					{
						
						if (_1c2cd1a54_is_sig_int(_1c2da4660_to_str(_116813_prim.ptr()))) {
							_case_begin_1ab0b17da:;
							{
								_117121_item.get()._field_value.get()._field_data.get()._field_constant=static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_116917_max - (_116917_max - static_cast<jule::U64>(_117114_i))))));
							}
						}
						else {
							_case_begin_1ab0b1444:;
							{
								_117121_item.get()._field_value.get()._field_data.get()._field_constant=static__1dce281be_new_u64(static_cast<jule::U64>((_116917_max - (_116917_max - static_cast<jule::U64>(_117114_i)))));
							}
						}
						_match_end_1ab0b13cd:;
					};
					_117121_item.get()._field_value.get()._field_data.get()._field_model=static_cast<jule::Any>(_117121_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1c2d6d9e2_Data> _118925_d = _1c2d90edc_eval_expr(_117017_eval, _117121_item.get()._field_value.get()._field_expr);;
					if ((_118925_d == nullptr)) {
						goto _iter_next_1ab0ae255;
					};
					if ((!(_1c2d6e3a5_is_const(_118925_d.ptr())))) {
						_1c2d0c662_push_err(_self_.ptr(), _117121_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1c2d1326c_check_assign_type(_self_, false,_116745_e.get()._field_kind.get()._field_kind,_118925_d,_117121_item.get()._field_token);
					_117121_item.get()._field_value.get()._field_data=_118925_d;
				};
			}
			_iter_next_1ab0ae255:;
			++it;
			_117114_i++;
			goto _iter_begin_1ab0ae255;
		}
		_iter_end_1ab0ae255:;
	};
}



inline void _1c2d1777c_check_enum_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2c4070a_Enum>& _120440_e) {
	if (_1db70894b_is_ignore_ident(_120440_e.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_120440_e)),_120440_e.get()._field_ident,false)) {
		_1c2d0c662_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_120440_e.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_120440_e.get()._field_items.len() == 0LL)) {
		_1c2d0c662_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_120440_e.get()._field_ident)}));
	};
	_1ab0b833b_check_enum_items_dup(_self_.ptr(), _120440_e.get()._field_items);
	if ((_120440_e.get()._field_kind != nullptr)) {
		if ((!(_1c2d115ab_check_type(_self_, _120440_e.get()._field_kind,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_120440_e.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1c2da42ec_Prim> _123117_t = _1c2da1937_prim(_120440_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_123117_t == nullptr)) {
		_1c2d0c662_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c2da7531_is_str(_123117_t.ptr())) {
			_case_begin_1ab0bea6d:;
			{
				_1c2d17282_check_enum_items_str(_self_, _120440_e);
			}
		}
		else if (_1c2cd20d7_is_int(_1c2da4660_to_str(_123117_t.ptr()))) {
			_case_begin_1ab0be7b5:;
			{
				_1c2d17507_check_enum_items_int(_self_, _120440_e);
			}
		}
		else {
			_case_begin_1ab0bdc6a:;
			{
				_1c2d0c662_push_err(_self_.ptr(), _120440_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab0bdab1:;
	};
}



inline void _1c2d17a02_check_type_enum_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2c41d05_TypeEnum>& _124845_e) {
	if (_1db70894b_is_ignore_ident(_124845_e.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _124845_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_124845_e)),_124845_e.get()._field_ident,false)) {
		_1c2d0c662_push_err(_self_.ptr(), _124845_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_124845_e.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_124845_e.get()._field_items.len() == 0LL)) {
		_1c2d0c662_push_err(_self_.ptr(), _124845_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_124845_e.get()._field_ident)}));
		return;;
	};
	_1ab0c3b60_check_enum_items_dup(_self_.ptr(), _124845_e.get()._field_items);
	{
		auto &expr = _124845_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ab0c4600:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4173e_TypeEnumItem> _126221_item = *it;
			{
				if ((_126221_item.get()._field_kind == nullptr)) {
					_1c2d0c662_push_err(_self_.ptr(), _126221_item.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1ab0c4600;
				};
				jule::Bool _126717_ok = _1c2d115ab_check_type(_self_, _126221_item.get()._field_kind,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));;
				if ((!(_126717_ok))) {
					goto _iter_next_1ab0c4600;
				};
				jule::Ptr<_1c2da42ec_Prim> _127117_p = _1c2da1937_prim(_126221_item.get()._field_kind.get()._field_kind.ptr());;
				if (((_127117_p != nullptr) && _1c2da7795_is_any(_127117_p.ptr()))) {
					_1c2d0c662_push_err(_self_.ptr(), _126221_item.get()._field_token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab0c4600:;
			++it;
			goto _iter_begin_1ab0c4600;
		}
		_iter_end_1ab0c4600:;
	};
	if ((_124845_e.get()._field_items.len() == 1LL)) {
		jule::Ptr<_1c2c4173e_TypeEnumItem> _127721_item = _124845_e.get()._field_items[0LL];;
		_1c2d9e825_TypeKind _127817_tk = _1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_124845_e, 4)};;
		if (((_127721_item.get()._field_kind.get()._field_kind != nullptr) && _1c2da002e_equals(_127721_item.get()._field_kind.get()._field_kind, ((jule::Ptr<_1c2d9e825_TypeKind>)((&(_127817_tk))))))) {
			_1c2d0c662_push_err(_self_.ptr(), _127721_item.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1c2c42135_to_str(_124845_e.ptr()))}));
		};
	};
}



inline jule::Bool _1c2d17c66_check_enum_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _128838_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1ab0cd450:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4070a_Enum> _128921_e = *it;
			{
				_1c2d1777c_check_enum_decl(_self_, _128921_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128838_ok = false;
					return _128838_ok;
				};
			}
			_iter_next_1ab0cd450:;
			++it;
			goto _iter_begin_1ab0cd450;
		}
		_iter_end_1ab0cd450:;
	};
	_128838_ok = true;
	return _128838_ok;
}



inline jule::Bool _1c2d17eca_check_type_enum_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _130143_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ab0ceb38:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c41d05_TypeEnum> _130221_e = *it;
			{
				_1c2d17a02_check_type_enum_decl(_self_, _130221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_130143_ok = false;
					return _130143_ok;
				};
			}
			_iter_next_1ab0ceb38:;
			++it;
			goto _iter_begin_1ab0ceb38;
		}
		_iter_end_1ab0ceb38:;
	};
	_130143_ok = true;
	return _130143_ok;
}



inline jule::Bool _1c2d182d8_check_decl_generics(_1c2d099a0_Sema* _self_, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>& _131339_generics) {
	jule::Bool _131372_ok = jule::Bool();
	_131372_ok=true;
	{
		auto &expr = _131339_generics;
		auto it = expr.begin();
		_iter_begin_1ab0d1475:;
		if (it != expr.end()) {
			jule::I64 _131513_i = it - expr.begin();
			jule::Ptr<_1dcd7744d_GenericDecl> &_131516_g = *it;
			{
				if (_1db70894b_is_ignore_ident(_131516_g.get()._field_ident)) {
					_1c2d0c662_push_err(&(*_self_), _131516_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_131372_ok=false;
					goto _iter_next_1ab0d1475;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _131339_generics;
					auto it = expr.begin();
					_iter_begin_1ab0d2520:;
					if (it != expr.end()) {
						jule::I64 _132417_j = it - expr.begin();
						jule::Ptr<_1dcd7744d_GenericDecl> &_132420_ct = *it;
						{
							{
								
								if ((_132417_j >= _131513_i)) {
									_case_begin_1ab0d3d6d:;
									{
										goto _iter_end_1ab0d2520;
									}
								}
								else if ((_131516_g.get()._field_ident == _132420_ct.get()._field_ident)) {
									_case_begin_1ab0d3de5:;
									{
										_1c2d0c662_push_err(&(*_self_), _131516_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131516_g.get()._field_ident)}));
										_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_131372_ok=false;
										goto _iter_end_1ab0d2520;
									}
								}
								_match_end_1ab0d3c4c:;
							};
						}
						_iter_next_1ab0d2520:;
						++it;
						_132417_j++;
						goto _iter_begin_1ab0d2520;
					}
					_iter_end_1ab0d2520:;
				};
			}
			_iter_next_1ab0d1475:;
			++it;
			_131513_i++;
			goto _iter_begin_1ab0d1475;
		}
		_iter_end_1ab0d1475:;
	};
	return _131372_ok;
}



inline jule::Bool _1c2d18618_check_fn_decl_params_dup(_1c2d099a0_Sema* _self_, jule::Ptr<_1dce38993_Fn>& _134044_f) {
	jule::Bool _134054_ok = jule::Bool();
	_134054_ok=true;
	_julec_label_check:;
	{
		auto &expr = _134044_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab0d626b:;
		if (it != expr.end()) {
			jule::I64 _134313_i = it - expr.begin();
			jule::Ptr<_1dce37156_Param> &_134316_p = *it;
			{
				{
					auto &expr = _134044_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ab0d6ed6:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd7744d_GenericDecl> &_134520_g = *it;
						{
							if ((_134316_p.get()._field_ident == _134520_g.get()._field_ident)) {
								_134054_ok=false;
								_1c2d0c662_push_err(&(*_self_), _134316_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134316_p.get()._field_ident)}));
								_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1ab0d626b;
							};
						}
						_iter_next_1ab0d6ed6:;
						++it;
						goto _iter_begin_1ab0d6ed6;
					}
					_iter_end_1ab0d6ed6:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _134044_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ab0d746a:;
					if (it != expr.end()) {
						jule::I64 _135517_j = it - expr.begin();
						jule::Ptr<_1dce37156_Param> &_135520_jp = *it;
						{
							{
								
								if ((_135517_j >= _134313_i)) {
									_case_begin_1ab0d9769:;
									{
										goto _iter_end_1ab0d746a;
									}
								}
								else if ((_1db708be3_is_anon_ident(_134316_p.get()._field_ident) || _1db708be3_is_anon_ident(_135520_jp.get()._field_ident))) {
									_case_begin_1ab0d97e1:;
									{
										goto _iter_end_1ab0d746a;
									}
								}
								else if ((_134316_p.get()._field_ident == _135520_jp.get()._field_ident)) {
									_case_begin_1ab0d9868:;
									{
										_134054_ok=false;
										_1c2d0c662_push_err(&(*_self_), _134316_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134316_p.get()._field_ident)}));
										_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1ab0d626b;
									}
								}
								_match_end_1ab0d9637:;
							};
						}
						_iter_next_1ab0d746a:;
						++it;
						_135517_j++;
						goto _iter_begin_1ab0d746a;
					}
					_iter_end_1ab0d746a:;
				};
			}
			_iter_next_1ab0d626b:;
			++it;
			_134313_i++;
			goto _iter_begin_1ab0d626b;
		}
		_iter_end_1ab0d626b:;
	};
	return _134054_ok;
}



inline jule::Bool _1c2d18959_check_fn_decl_result_dup(_1c2d099a0_Sema* _self_, jule::Ptr<_1dce38993_Fn>& _137444_f) {
	jule::Bool _137454_ok = jule::Bool();
	_137454_ok=true;
	if (_1dce38e05_is_void(_137444_f.ptr())) {
		return _137454_ok;
	};
	{
		auto &expr = _137444_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ab0dc43c:;
		if (it != expr.end()) {
			jule::I64 _138113_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> &_138116_v = *it;
			{
				if ((_1db70894b_is_ignore_ident(_138116_v.get()._field_kind) || _1db708be3_is_anon_ident(_138116_v.get()._field_kind))) {
					goto _iter_next_1ab0dc43c;
				};
				{
					auto &expr = _137444_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ab0ddb7a:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd7744d_GenericDecl> &_138620_g = *it;
						{
							if ((_138116_v.get()._field_kind == _138620_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ab0ddb7a:;
						++it;
						goto _iter_begin_1ab0ddb7a;
					}
					_iter_end_1ab0ddb7a:;
				};
				{
					auto &expr = _137444_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ab0dee12:;
					if (it != expr.end()) {
						jule::Ptr<_1dce37156_Param> &_139220_p = *it;
						{
							if ((_138116_v.get()._field_kind == _139220_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ab0dee12:;
						++it;
						goto _iter_begin_1ab0dee12;
					}
					_iter_end_1ab0dee12:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _137444_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1ab0e11aa:;
					if (it != expr.end()) {
						jule::I64 _140017_j = it - expr.begin();
						jule::Ptr<_1db7061a7_Token> &_140020_jv = *it;
						{
							{
								
								if ((_140017_j >= _138113_i)) {
									_case_begin_1ab0e1e47:;
									{
										goto _iter_end_1ab0e11aa;
									}
								}
								else if ((_140020_jv.get()._field_kind == _138116_v.get()._field_kind)) {
									_case_begin_1ab0e1ebe:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1ab0e1d26:;
							};
						}
						_iter_next_1ab0e11aa:;
						++it;
						_140017_j++;
						goto _iter_begin_1ab0e11aa;
					}
					_iter_end_1ab0e11aa:;
				};
				goto _iter_next_1ab0dc43c;
				_julec_label_exist:;
				_1c2d0c662_push_err(&(*_self_), _138116_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_138116_v.get()._field_kind)}));
				_1c2d0c981_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_137454_ok=false;
			}
			_iter_next_1ab0dc43c:;
			++it;
			_138113_i++;
			goto _iter_begin_1ab0dc43c;
		}
		_iter_end_1ab0dc43c:;
	};
	return _137454_ok;
}



inline void _1c2d18c12_check_fn_decl_prototype(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce38993_Fn>& _142148_f) {
	if ((_142148_f.get()._field_exceptional && _142148_f.get()._field_cpp_linked)) {
		_1c2d0c662_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_142148_f.get()._field_exceptional) {
		if (_1dce393cd_is_entry_point(_142148_f.ptr())) {
			_1c2d0c662_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1dce39642_is_init(_142148_f.ptr())) {
			_1c2d0c662_push_err(_self_.ptr(), _142148_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c2d182d8_check_decl_generics(_self_.ptr(), _142148_f.get()._field_generics)))) {
			_case_begin_1ab0e52ad:;
		}
		else if ((!(_1c2d18618_check_fn_decl_params_dup(_self_.ptr(), _142148_f)))) {
			_case_begin_1ab0e6644:;
		}
		else if ((!(_1c2d18959_check_fn_decl_result_dup(_self_.ptr(), _142148_f)))) {
			_case_begin_1ab0e66aa:;
		}
		_match_end_1ab0e5104:;
	};
}



inline void _1c2d18eba_check_trait_decl_method(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce38993_Fn>& _144248_f) {
	if (_1db70894b_is_ignore_ident(_144248_f.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _144248_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_144248_f.get()._field_sema=_self_;
	_1c2d18c12_check_fn_decl_prototype(_self_, _144248_f);
	jule::Ptr<_1dce3b644_FnIns> _144917_ins = _1dce3a0e3_instance(_144248_f);;
	_1c2d15505_reload_fn_ins_types(_self_, _144917_ins);
	_144917_ins.get()._field_reloaded=true;
	_1dce3a3bd_append_instance(_144248_f.ptr(), _144917_ins);
}



inline void _1c2d19273_check_trait_decl_methods(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2c3d54e_Trait>& _145549_t) {
	{
		auto &expr = _145549_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab0e9c1e:;
		if (it != expr.end()) {
			jule::I64 _145614_i = it - expr.begin();
			jule::Ptr<_1dce38993_Fn> _145621_f = *it;
			{
				_1c2d18eba_check_trait_decl_method(_self_, _145621_f);
				_145549_t.get()._field_mutable=(_145549_t.get()._field_mutable || _145621_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _145549_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ab0eb968:;
					if (it != expr.end()) {
						jule::I64 _146717_j = it - expr.begin();
						jule::Ptr<_1dce38993_Fn> _146720_jf = *it;
						{
							{
								
								if ((_146717_j >= _145614_i)) {
									_case_begin_1ab0ecb01:;
									{
										goto _iter_end_1ab0eb968;
									}
								}
								else if ((_145621_f.get()._field_ident == _146720_jf.get()._field_ident)) {
									_case_begin_1ab0ecb78:;
									{
										_1c2d0c662_push_err(_self_.ptr(), _145621_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_145621_f.get()._field_ident)}));
										_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1ab0eb968;
									}
								}
								_match_end_1ab0ec9d0:;
							};
						}
						_iter_next_1ab0eb968:;
						++it;
						_146717_j++;
						goto _iter_begin_1ab0eb968;
					}
					_iter_end_1ab0eb968:;
				};
			}
			_iter_next_1ab0e9c1e:;
			++it;
			_145614_i++;
			goto _iter_begin_1ab0e9c1e;
		}
		_iter_end_1ab0e9c1e:;
	};
}



inline void _1c2d19509_check_trait_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2c3d54e_Trait>& _148641_t) {
	if (_1db70894b_is_ignore_ident(_148641_t.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _148641_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_148641_t)),_148641_t.get()._field_ident,false)) {
		_1c2d0c662_push_err(_self_.ptr(), _148641_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148641_t.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c2d19273_check_trait_decl_methods(_self_, _148641_t);
}



inline jule::Bool _1c2d1976d_check_trait_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _149839_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1ab101b27:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> _149921_t = *it;
			{
				_1c2d19509_check_trait_decl(_self_, _149921_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_149839_ok = false;
					return _149839_ok;
				};
			}
			_iter_next_1ab101b27:;
			++it;
			goto _iter_begin_1ab101b27;
		}
		_iter_end_1ab101b27:;
	};
	_149839_ok = true;
	return _149839_ok;
}



inline jule::Bool _1c2d19b47_check_trait_impl_methods(_1c2d099a0_Sema* _self_, jule::Ptr<_1c2c3d54e_Trait>& _151048_base, jule::Ptr<_1c2cc44d6_Impl>& _151063_ipl) {
	jule::Bool _151077_ok = jule::Bool();
	_151077_ok=true;
	{
		auto &expr = _151063_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab1038a4:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> &_151216_f = *it;
			{
				if ((_1c2c3e396_find_method(_151048_base.ptr(), _151216_f.get()._field_ident) == nullptr)) {
					_1c2d0c662_push_err(&(*_self_), _151216_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_151048_base.get()._field_ident),jule::Any(_151216_f.get()._field_ident)}));
					_151077_ok=false;
				};
			}
			_iter_next_1ab1038a4:;
			++it;
			goto _iter_begin_1ab1038a4;
		}
		_iter_end_1ab1038a4:;
	};
	return _151077_ok;
}



inline jule::Bool _1c2d1a010_impl_to_struct(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _152139_dest, jule::Ptr<_1c2cc44d6_Impl>& _152159_ipl) {
	jule::Bool _152173_ok = jule::Bool();
	_152173_ok=true;
	{
		auto &expr = _152159_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab105be7:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _152521_f = *it;
			{
				if (((_1dcd499b4_find_method(_152139_dest.ptr(), _152521_f.get()._field_ident,_152521_f.get()._field_statically) != nullptr) || (_1dcd49e15_find_field(_152139_dest.ptr(), _152521_f.get()._field_ident) != nullptr))) {
					_1c2d0c662_push_err(_self_.ptr(), _152521_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_152139_dest.get()._field_ident),jule::Any(_152521_f.get()._field_ident)}));
					_152173_ok=false;
					goto _iter_next_1ab105be7;
				};
				if (((_152139_dest.get()._field_generics.len() > 0LL) && (_152521_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _152521_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1ab1082e3:;
						if (it != expr.end()) {
							jule::Ptr<_1dcd7744d_GenericDecl> _153324_fg = *it;
							{
								{
									auto &expr = _152139_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1ab108b2e:;
									if (it != expr.end()) {
										jule::Ptr<_1dcd7744d_GenericDecl> _153428_dg = *it;
										{
											if ((_153324_fg.get()._field_ident == _153428_dg.get()._field_ident)) {
												_1c2d0c662_push_err(_self_.ptr(), _153324_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_152173_ok=false;
											};
										}
										_iter_next_1ab108b2e:;
										++it;
										goto _iter_begin_1ab108b2e;
									}
									_iter_end_1ab108b2e:;
								};
							}
							_iter_next_1ab1082e3:;
							++it;
							goto _iter_begin_1ab1082e3;
						}
						_iter_end_1ab1082e3:;
					};
				};
				_1c2d0d5a8_check_directives(_self_, _152521_f.get()._field_directives,jule::Any(_152521_f));
				_152521_f.get()._field_sema=_self_;
				_152521_f.get()._field_owner=_152139_dest;
				_152139_dest.get()._field_methods = jule::alloc_for_append(_152139_dest.get()._field_methods,1);_152139_dest.get()._field_methods.__push(_152521_f);;
			}
			_iter_next_1ab105be7:;
			++it;
			goto _iter_begin_1ab105be7;
		}
		_iter_end_1ab105be7:;
	};
	{
		auto &expr = _152159_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1ab10aa21:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _155021_v = *it;
			{
				;
				if (((_1dcd499b4_find_method(_152139_dest.ptr(), _155021_v.get()._field_ident,true) != nullptr) || (_1dcd4a9c6_find_static(_152139_dest.ptr(), _155021_v.get()._field_ident) != nullptr))) {
					_1c2d0c662_push_err(_self_.ptr(), _155021_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_152139_dest.get()._field_ident),jule::Any(_155021_v.get()._field_ident)}));
					_152173_ok=false;
					goto _iter_next_1ab10aa21;
				};
				_1c2d1aa9e_check_var_decl(_self_, _155021_v,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));
				_1c2d1e223_check_type_var(_self_, _155021_v,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));
				_152139_dest.get()._field_statics = jule::alloc_for_append(_152139_dest.get()._field_statics,1);_152139_dest.get()._field_statics.__push(_155021_v);;
			}
			_iter_next_1ab10aa21:;
			++it;
			goto _iter_begin_1ab10aa21;
		}
		_iter_end_1ab10aa21:;
	};
	return _152173_ok;
}



inline void _1c2d1a285_impl_trait(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2cc44d6_Impl>& _156635_decl) {
	jule::Ptr<_1c2d9e825_TypeKind> _156717_base_t = _1c2d1215b_select_type(_self_, _156635_decl.get()._field_base);;
	if ((_156717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2c3d54e_Trait> _157117_base = _1c2da30ed_trt(_156717_base_t.ptr());;
	if ((_157117_base == nullptr)) {
		_1c2d0c662_push_err(_self_.ptr(), _156635_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_156717_base_t.ptr()))}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _157817_dest_t = _1c2d1215b_select_type(_self_, _156635_decl.get()._field_dest);;
	if ((_157817_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1dcd868e1_StructIns> _158217_dest_s = _1c2da2d89_strct(_157817_dest_t.ptr());;
	if ((_158217_dest_s == nullptr)) {
		_1c2d0c662_push_err(_self_.ptr(), _156635_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_157817_dest_t.ptr()))}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd5a596_Struct> _158917_dest = _158217_dest_s.get()._field_decl;;
	if ((_1db70be38_dir(_158917_dest.get()._field_token.get()._field_file.ptr()) != _1db70be38_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1c2d0c662_push_err(_self_.ptr(), _156635_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_157117_base.get()._field_implemented = jule::alloc_for_append(_157117_base.get()._field_implemented,1);_157117_base.get()._field_implemented.__push(_158917_dest);;
	_158917_dest.get()._field_implements = jule::alloc_for_append(_158917_dest.get()._field_implements,1);_158917_dest.get()._field_implements.__push(_157117_base);;
	if ((_156635_decl.get()._field_statics.len() > 0LL)) {
		_1c2d0c662_push_err(_self_.ptr(), _156635_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c2d19b47_check_trait_impl_methods(_self_.ptr(), _157117_base,_156635_decl)))) {
			_case_begin_1ab116455:;
			{
				return;;
			}
		}
		else if ((!(_1c2d1a010_impl_to_struct(_self_, _158917_dest,_156635_decl)))) {
			_case_begin_1ab1164bb:;
			{
				return;;
			}
		}
		_match_end_1ab11560d:;
	};
}



inline void _1c2d1a50a_impl_struct(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2cc44d6_Impl>& _161136_decl) {
	jule::Ptr<_1c2d9e825_TypeKind> _161217_dest_t = _1c2d1215b_select_type(_self_, _161136_decl.get()._field_dest);;
	if ((_161217_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1dcd868e1_StructIns> _161617_dest_s = _1c2da2d89_strct(_161217_dest_t.ptr());;
	if ((_161617_dest_s == nullptr)) {
		_1c2d0c662_push_err(_self_.ptr(), _161136_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_161217_dest_t.ptr()))}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd5a596_Struct> _162317_dest = _161617_dest_s.get()._field_decl;;
	if ((_1db70be38_dir(_162317_dest.get()._field_token.get()._field_file.ptr()) != _1db70be38_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1c2d0c662_push_err(_self_.ptr(), _161136_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c2d1a010_impl_to_struct(_self_, _162317_dest,_161136_decl)))) {
			_case_begin_1ab11b04d:;
			{
				return;;
			}
		}
		_match_end_1ab1198ed:;
	};
}



inline void _1c2d1a780_impl_impl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2cc44d6_Impl>& _163634_decl) {
	{
		
		if (_1c2ca41ec_is_trait_impl(_163634_decl.ptr())) {
			_case_begin_1ab11bb42:;
			{
				_1c2d1a285_impl_trait(_self_, _163634_decl);
			}
		}
		else if (_1c2ca494a_is_struct_impl(_163634_decl.ptr())) {
			_case_begin_1ab11bbb9:;
			{
				_1c2d1a50a_impl_struct(_self_, _163634_decl);
			}
		}
		_match_end_1ab11ba21:;
	};
}



inline void _1c2d1aa9e_check_var_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d266ae_Var>& _164739_decl, jule::Trait<_1c2dba3bd_Lookup> _164755_l) {
	if (_1db70894b_is_ignore_ident(_164739_decl.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1c2d26cca_is_type_inferred(_164739_decl.ptr())) {
		if ((!(_1c2d26a66_is_initialized(_164739_decl.ptr())))) {
			_1c2d0c662_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1c2d115ab_check_type(_self_, _164739_decl.get()._field_kind,_164755_l);
	};
	if ((_164739_decl.get()._field_constant && _164739_decl.get()._field_reference)) {
		_1c2d0c662_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1c2d26a66_is_initialized(_164739_decl.ptr())))) {
		if (_164739_decl.get()._field_constant) {
			_1c2d0c662_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_164739_decl.get()._field_statically) {
			_1c2d0c662_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_164739_decl.get()._field_reference) {
			_1c2d0c662_push_err(_self_.ptr(), _164739_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1c2d1ad24_check_global_var_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d266ae_Var>& _167946_decl) {
	if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167946_decl)),_167946_decl.get()._field_ident,_167946_decl.get()._field_cpp_linked)) {
		_1c2d0c662_push_err(_self_.ptr(), _167946_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_167946_decl.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_167946_decl.get()._field_cpp_linked && _167946_decl.get()._field_constant)) {
		_1c2d0c662_push_err(_self_.ptr(), _167946_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_167946_decl.get()._field_cpp_linked)) && (!(_167946_decl.get()._field_constant))) && (!(_167946_decl.get()._field_statically)))) {
		_1c2d0c662_push_err(_self_.ptr(), _167946_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1c2d0d5a8_check_directives(_self_, _167946_decl.get()._field_directives,jule::Any(_167946_decl));
	_1c2d1aa9e_check_var_decl(_self_, _167946_decl,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));
}



inline jule::Bool _1c2d1b088_check_global_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _169840_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab126652:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _169921_decl = *it;
			{
				_1c2d1ad24_check_global_var_decl(_self_, _169921_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_169840_ok = false;
					return _169840_ok;
				};
			}
			_iter_next_1ab126652:;
			++it;
			goto _iter_begin_1ab126652;
		}
		_iter_end_1ab126652:;
	};
	_169840_ok = true;
	return _169840_ok;
}



inline jule::Bool _1c2d1b462_check_struct_trait_impl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _171048_strct, jule::Ptr<_1c2c3d54e_Trait>& _171069_trt) {
	jule::Bool _171084_ok = jule::Bool();
	{
		auto &expr = _171069_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab12817b:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _171121_tf = *it;
			{
				jule::Bool _171221_exist = false;;
				jule::Ptr<_1dce38993_Fn> _171321_sf = _1dcd499b4_find_method(_171048_strct.ptr(), _171121_tf.get()._field_ident,_171121_tf.get()._field_statically);;
				jule::Ptr<_1dce3b644_FnIns> _171417_tf_k = _1c2d141c4_get_trait_check_fn_kind(_self_, _171121_tf);;
				if ((_171321_sf != nullptr)) {
					jule::Ptr<_1dce3b644_FnIns> _171625_sf_k = _1c2d141c4_get_trait_check_fn_kind(_self_, _171321_sf);;
					_171221_exist=(((_171417_tf_k.get()._field_decl.get()._field_public == _171625_sf_k.get()._field_decl.get()._field_public) && (_171417_tf_k.get()._field_decl.get()._field_ident == _171625_sf_k.get()._field_decl.get()._field_ident)) && _1dce3c502_equals_trait(_171417_tf_k, _171625_sf_k));
				};
				if (_171221_exist) {
					jule::Ptr<_1dcd36671_Directive> _172221_d = _1c2d99006_find_directive(_171321_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_172221_d != nullptr)) {
						_1c2d0c662_push_err(_self_.ptr(), _172221_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_171084_ok=false;
				} else {
					;
					jule::Str _172925_s = _1dce3d35a_get_kind_str(_171417_tf_k.ptr(), true);;
					if (_171121_tf.get()._field_public) {
						(_172925_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1c2d0c662_push_err(_self_.ptr(), _171048_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_171069_trt.get()._field_ident),jule::Any(_172925_s)}));
					_171084_ok=false;
				};
			}
			_iter_next_1ab12817b:;
			++it;
			goto _iter_begin_1ab12817b;
		}
		_iter_end_1ab12817b:;
	};
	return _171084_ok;
}



inline jule::Bool _1c2d1b781_check_struct_impls(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _174043_s) {
	jule::Bool _174057_ok = jule::Bool();
	_174057_ok=true;
	{
		auto &expr = _174043_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1ab12eced:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> _174221_trt = *it;
			{
				_174057_ok=(_1c2d1b462_check_struct_trait_impl(_self_, _174043_s,_174221_trt) && _174057_ok);
			}
			_iter_next_1ab12eced:;
			++it;
			goto _iter_begin_1ab12eced;
		}
		_iter_end_1ab12eced:;
	};
	return _174057_ok;
}



inline jule::Bool _1c2d1ba8e_check_struct_fields(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _174844_st) {
	jule::Bool _174859_ok = jule::Bool();
	_174859_ok=true;
	{
		auto &expr = _174844_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab13123e:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd4ca61_Field> _175021_f = *it;
			{
				_175021_f.get()._field_owner=_174844_st;
				{
					auto &expr = _174844_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1ab131d33:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd4ca61_Field> _175220_cf = *it;
						{
							if ((_175021_f == _175220_cf)) {
								goto _iter_end_1ab131d33;
							} else if ((_175021_f.get()._field_ident == _175220_cf.get()._field_ident)) {
								_1c2d0c662_push_err(_self_.ptr(), _175021_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_175021_f.get()._field_ident)}));
								_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_174859_ok=false;
							};
						}
						_iter_next_1ab131d33:;
						++it;
						goto _iter_begin_1ab131d33;
					}
					_iter_end_1ab131d33:;
				};
			}
			_iter_next_1ab13123e:;
			++it;
			goto _iter_begin_1ab13123e;
		}
		_iter_end_1ab13123e:;
	};
	return _174859_ok;
}



inline void _1c2d1bd14_check_struct_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _176542_s) {
	if (_1db70894b_is_ignore_ident(_176542_s.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _176542_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_176542_s)),_176542_s.get()._field_ident,_176542_s.get()._field_cpp_linked)) {
		_1c2d0c662_push_err(_self_.ptr(), _176542_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_176542_s.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c2d0d5a8_check_directives(_self_, _176542_s.get()._field_directives,jule::Any(_176542_s));
	{
		
		if ((!(_1c2d182d8_check_decl_generics(_self_.ptr(), _176542_s.get()._field_generics)))) {
			_case_begin_1ab135c6b:;
		}
		else if ((!(_1c2d1ba8e_check_struct_fields(_self_, _176542_s)))) {
			_case_begin_1ab135cd2:;
		}
		else if ((!(_1c2d1b781_check_struct_impls(_self_, _176542_s)))) {
			_case_begin_1ab135d48:;
		}
		_match_end_1ab135b28:;
	};
}



inline jule::Bool _1c2d1c078_check_struct_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _178340_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab137135:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _178421_s = *it;
			{
				_1c2d1bd14_check_struct_decl(_self_, _178421_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_178340_ok = false;
					return _178340_ok;
				};
			}
			_iter_next_1ab137135:;
			++it;
			goto _iter_begin_1ab137135;
		}
		_iter_end_1ab137135:;
	};
	_178340_ok = true;
	return _178340_ok;
}



inline void _1c2d1c2ed_check_fn_decl(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce38993_Fn>& _179638_f) {
	if (_1db70894b_is_ignore_ident(_179638_f.get()._field_ident)) {
		_1c2d0c662_push_err(_self_.ptr(), _179638_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c2d0d5a8_check_directives(_self_, _179638_f.get()._field_directives,jule::Any(_179638_f));
	_179638_f.get()._field_sema=_self_;
	_1c2d18c12_check_fn_decl_prototype(_self_, _179638_f);
	if (_1c2d0d289_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_179638_f)),_179638_f.get()._field_ident,_179638_f.get()._field_cpp_linked)) {
		if ((_179638_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1dce38993_Fn> _180821_init = _1c2d0b298_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_180821_init != nullptr)) {
				return;;
			};
		};
		_1c2d0c662_push_err(_self_.ptr(), _179638_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_179638_f.get()._field_ident)}));
		_1c2d0c981_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c2d1c562_check_fn_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	jule::Bool _181936_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab1421b7:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _182021_f = *it;
			{
				_1c2d1c2ed_check_fn_decl(_self_, _182021_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_181936_ok = false;
					return _181936_ok;
				};
			}
			_iter_next_1ab1421b7:;
			++it;
			goto _iter_begin_1ab1421b7;
		}
		_iter_end_1ab1421b7:;
	};
	_181936_ok = true;
	return _181936_ok;
}



inline void _1c2d1c92a_push_cycle_error(_1c2d099a0_Sema* _self_, jule::Ptr<_1dcd5a596_Struct>& _183132_st1, jule::Ptr<_1dcd5a596_Struct>& _183147_st2, jule::Str& _183166_message) {
	;
	jule::Str _183413_refers_to = _207b81407_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_183132_st1.get()._field_ident),jule::Any(_183147_st2.get()._field_ident)}));;
	(_183166_message).buffer.insert(0, (((_207a6542e_repeat(jule::Str(" ", 1),4LL) + _183413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c2d1cd7b_check_cross_cycle(_1c2d099a0_Sema* _self_, jule::Ptr<_1dcd5a596_Struct>& _183833_st1, jule::Ptr<_1dcd5a596_Struct>& _183848_st2, jule::Str& _183867_message) {
	{
		auto &expr = _183848_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1ab14575e:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> &_183916_u = *it;
			{
				if ((_183916_u == _183833_st1)) {
					_1c2d1c92a_push_cycle_error(&(*_self_), _183848_st2,_183916_u,_183867_message);
					return false;
				};
				if ((!(_1c2d1cd7b_check_cross_cycle(&(*_self_), _183833_st1,_183916_u,_183867_message)))) {
					_1c2d1c92a_push_cycle_error(&(*_self_), _183848_st2,_183916_u,_183867_message);
					return false;
				};
			}
			_iter_next_1ab14575e:;
			++it;
			goto _iter_begin_1ab14575e;
		}
		_iter_end_1ab14575e:;
	};
	return true;
}



inline jule::Bool _1c2d1d310_check_struct_derive_illegal_cycles(_1c2d099a0_Sema* _self_, jule::Str _185453_derive, jule::Ptr<_1dcd5a596_Struct>& _185467_st1, jule::Ptr<_1c2d9e825_TypeKind>& _185486_k) {
	jule::Bool _1854102_ok = jule::Bool();
	jule::Ptr<_1dcd5a596_Struct> _185517_st2 = _1c2db79d6_get_struct_from_kind(_185486_k);;
	if ((_185517_st2 == nullptr)) {
		_1854102_ok = true;
		return _1854102_ok;
	};
	if ((_185467_st1 == _185517_st2)) {
		_1c2d0c662_push_err(&(*_self_), _185467_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_185453_derive),jule::Any(_185467_st1.get()._field_ident)}));
		_1854102_ok = false;
		return _1854102_ok;
	};
	jule::Str _186717_message = jule::Str();;
	if ((!(_1c2d1cd7b_check_cross_cycle(&(*_self_), _185467_st1,_185517_st2,_186717_message)))) {
		jule::Str _187021_err_msg = _186717_message;;
		_186717_message=jule::Str();
		_1c2d1c92a_push_cycle_error(&(*_self_), _185467_st1,_185517_st2,_186717_message);
		_187021_err_msg=(_187021_err_msg + _186717_message);
		_1c2d0c662_push_err(&(*_self_), _185467_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_185453_derive),jule::Any(_187021_err_msg)}));
		_1854102_ok = false;
		return _1854102_ok;
	};
	_1854102_ok = true;
	return _1854102_ok;
}



inline jule::Bool _1c2d1d640_check_struct_ins_derive_clone(_1c2d099a0_Sema* _self_, jule::Ptr<_1dcd868e1_StructIns> _188152_st) {
	jule::Bool _188170_ok = jule::Bool();
	if ((!(_1dcd4b5ed_is_derives(_188152_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_188170_ok = true;
		return _188170_ok;
	};
	{
		auto &expr = _188152_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab14bea2:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd62c0d_FieldIns> _188621_f = *it;
			{
				if ((_188621_f.get()._field_kind == nullptr)) {
					goto _iter_next_1ab14bea2;
				};
				if ((!(_1c2da145e_supports_cloning(_188621_f.get()._field_kind.ptr())))) {
					_1c2d0c662_push_err(&(*_self_), _188152_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_188621_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_188170_ok = false;
					return _188170_ok;
				};
				if ((!(_1c2d1d310_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_188152_st.get()._field_decl,_188621_f.get()._field_kind)))) {
					_188170_ok = false;
					return _188170_ok;
				};
			}
			_iter_next_1ab14bea2:;
			++it;
			goto _iter_begin_1ab14bea2;
		}
		_iter_end_1ab14bea2:;
	};
	_188170_ok = true;
	return _188170_ok;
}



inline void _1c2d1d82c_check_package_decls(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab14c59b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _190721_f = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _190721_f);
				if ((!(_1c2d17eca_check_type_enum_decls(_self_)))) {
					return;;
				};
				if ((!(_1c2d16c87_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab14c59b:;
			++it;
			goto _iter_begin_1ab14c59b;
		}
		_iter_end_1ab14c59b:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab14eb31:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _191721_f = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _191721_f);
				if ((!(_1c2d1976d_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab14eb31:;
			++it;
			goto _iter_begin_1ab14eb31;
		}
		_iter_end_1ab14eb31:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab150c53:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _192421_f = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _192421_f);
				if ((!(_1c2d1b088_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ab150c53:;
			++it;
			goto _iter_begin_1ab150c53;
		}
		_iter_end_1ab150c53:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab151270:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _193121_f = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _193121_f);
				{
					
					if ((!(_1c2d1c562_check_fn_decls(_self_)))) {
						_case_begin_1ab1534a3:;
					}
					else if ((!(_1c2d1c078_check_struct_decls(_self_)))) {
						_case_begin_1ab153519:;
					}
					else {
						_case_begin_1ab15343c:;
						{
							goto _iter_next_1ab151270;
						}
					}
					_match_end_1ab1533c6:;
				};
				return;;
			}
			_iter_next_1ab151270:;
			++it;
			goto _iter_begin_1ab151270;
		}
		_iter_end_1ab151270:;
	};
}



inline void _1c2d1db6d_check_data_for_type_inference(_1c2d099a0_Sema* _self_, jule::Ptr<_1c2d6d9e2_Data>& _194349_d, jule::Ptr<_1db7061a7_Token>& _194360_err_token) {
	{
		
		if (_1c2d6ddcc_is_nil(_194349_d.ptr())) {
			_case_begin_1ab1544c6:;
			{
				_1c2d0c662_push_err(&(*_self_), _194360_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1c2d6e141_is_void(_194349_d.ptr())) {
			_case_begin_1ab15454d:;
			{
				_1c2d0c662_push_err(&(*_self_), _194360_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194349_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ab1545c5:;
			{
				_1c2d0c662_push_err(&(*_self_), _194360_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab154394:;
	};
}



inline void _1c2d1de04_check_var(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d266ae_Var>& _195434_v) {
	if (_195434_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1c2d26cca_is_type_inferred(_195434_v.ptr())) {
		_195434_v.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_195434_v.get()._field_value.get()._field_data.get()._field_kind});
		_1c2d1db6d_check_data_for_type_inference(_self_.ptr(), _195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token);
		_1c2d16083_check_validity_for_init_expr(_self_, _195434_v.get()._field_mutable,_195434_v.get()._field_reference,_195434_v.get()._field_kind.get()._field_kind,_195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1c2daa688_Arr> _197121_arr = _1c2da264c_arr(_195434_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_197121_arr != nullptr)) {
			if (_197121_arr.get()._field_auto) {
				jule::Ptr<_1c2daa688_Arr> _197425_data_arr = _1c2da264c_arr(_195434_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_197425_data_arr != nullptr)) {
					_197121_arr.get()._field_n=_197425_data_arr.get()._field_n;
				};
			};
		};
		if (_1c2d1326c_check_assign_type(_self_, _195434_v.get()._field_reference,_195434_v.get()._field_kind.get()._field_kind,_195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token)) {
			_1c2d16083_check_validity_for_init_expr(_self_, _195434_v.get()._field_mutable,_195434_v.get()._field_reference,_195434_v.get()._field_kind.get()._field_kind,_195434_v.get()._field_value.get()._field_data,_195434_v.get()._field_value.get()._field_expr.get()._field_token);
		};
	};
	if ((_195434_v.get()._field_reference && (!(_1c2db6d15_is_valid_for_ref(_195434_v.get()._field_kind.get()._field_kind))))) {
		_1c2d0c662_push_err(_self_.ptr(), _195434_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_195434_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	if (_195434_v.get()._field_constant) {
		if ((!(_1c2d6e3a5_is_const(_195434_v.get()._field_value.get()._field_data.ptr())))) {
			_1c2d0c662_push_err(_self_.ptr(), _195434_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_195434_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1c2da35c6_tup(_195434_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_195434_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1c2d1e223_check_type_var(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1c2d266ae_Var>& _200939_decl, jule::Trait<_1c2dba3bd_Lookup> _200955_l) {
	if ((_200939_decl.get()._field_cpp_linked || (!(_1c2d26a66_is_initialized(_200939_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c2d70560_Eval> _201417_eval = nullptr;;
	if ((_200939_decl.get()._field_kind != nullptr)) {
		_201417_eval=_1c2d125ac_evalpd(_self_, _200955_l,_200939_decl.get()._field_kind.get()._field_kind,_200939_decl);
	} else {
		_201417_eval=_1c2d125ac_evalpd(_self_, _200955_l,nullptr,_200939_decl);
	};
	_201417_eval.get()._field_immutable=(!(_200939_decl.get()._field_mutable));
	_200939_decl.get()._field_value.get()._field_data=_1c2d90edc_eval_expr(_201417_eval, _200939_decl.get()._field_value.get()._field_expr);
	if ((_200939_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1c2d1de04_check_var(_self_, _200939_decl);
}



inline void _1c2d1e3ee_check_global_types(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab1635a1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _203121_decl = *it;
			{
				if (((_1c2d26a66_is_initialized(_203121_decl.ptr()) && (_203121_decl.get()._field_value.get()._field_data == nullptr)) || (_1c2d26cca_is_type_inferred(_203121_decl.ptr()) && (_203121_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1c2d1e223_check_type_var(_self_, _203121_decl,jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));
				};
			}
			_iter_next_1ab1635a1:;
			++it;
			goto _iter_begin_1ab1635a1;
		}
		_iter_end_1ab1635a1:;
	};
}



inline jule::Ptr<_1dce3b644_FnIns> _1c2d1e7a6_ready_to_check_fn(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _204242_s, jule::Ptr<_1dce38993_Fn>& _204262_f) {
	jule::Ptr<_1dce3b644_FnIns> _204317_ins = _1dce3a0e3_instance(_204262_f);;
	if ((_204262_f.get()._field_instances.len() != 0LL)) {
		return _204317_ins;
	};
	_204317_ins.get()._field_owner=_204242_s;
	_1dce3a3bd_append_instance(_204262_f.ptr(), _204317_ins);
	_204317_ins.get()._field_reloaded=true;
	if (_1c2d15505_reload_fn_ins_types(_self_, _204317_ins)) {
		return _204317_ins;
	};
	return nullptr;
}



inline void _1c2d1eac5_check_type_method(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _205642_s, jule::Ptr<_1dce38993_Fn>& _205662_f) {
	if ((_205662_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1dce3b644_FnIns> _206117_ins = _205662_f.get()._field_instances[0LL];;
	if ((_206117_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		return;;
	};
	_1c2d2229d_check_fn_ins(_self_, _206117_ins);
}



inline jule::Ptr<_1dce3b644_FnIns> _1c2d20026_check_struct_ins_op(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _206944_s, jule::Ptr<_1dce38993_Fn>& _206964_f, jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)> _206972_p) {
	if ((((_206964_f == nullptr) || (_206964_f.get()._field_generics.len() > 0LL)) || (!(_206972_p(_206964_f))))) {
		return nullptr;
	};
	return _206964_f.get()._field_instances[0LL];
}



inline jule::Bool _1c2d203cd_check_struct_env(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _207941_s, jule::Ptr<_1db7061a7_Token> _207960_error_token) {
	jule::Bool _207983_ok = jule::Bool();
	_1c2dacc84_TypeChecker _208017_tc = _1c2dacc84_TypeChecker{._field_s=_207941_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_207941_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1c2dac03b_Referencer>(_1c2dac03b_Referencer{._field_ident=_207941_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_207941_s.get()._field_decl), }), ._field_refers=_207941_s.get()._field_refers, };;
	if ((_207941_s.get()._field_generics.len() > 0LL)) {
		_208017_tc._field_use_generics=jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>::alloc(0LL,_207941_s.get()._field_generics.len());
		{
			auto &expr = _207941_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab16c698:;
			if (it != expr.end()) {
				jule::I64 _209218_i = it - expr.begin();
				jule::Ptr<_1c2d9d0e8_InsGeneric> _209225_g = *it;
				{
					_208017_tc._field_use_generics = jule::alloc_for_append(_208017_tc._field_use_generics,1);_208017_tc._field_use_generics.__push(jule::new_ptr<_1c2d9db32_TypeAlias>(_1c2d9db32_TypeAlias{._field_ident=_207941_s.get()._field_decl.get()._field_generics[_209218_i].get()._field_ident, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_209225_g.get()._field_kind}), }));;
				}
				_iter_next_1ab16c698:;
				++it;
				_209218_i++;
				goto _iter_begin_1ab16c698;
			}
			_iter_end_1ab16c698:;
		};
	};
	jule::Ptr<_1c2d68c84_SymbolTable> _210017_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c2d0c299_set_current_file(_self_.ptr(), _210017_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _207941_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1c2d68c84_SymbolTable> _210421_file = _1c2d090a9_find_file(_self_.get()._field_files,_207941_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_210421_file != nullptr)) {
			_1c2d0c299_set_current_file(_self_.ptr(), _210421_file);
		};
	};
	if ((_207941_s.get()._field_generics.len() > 0LL)) {
		jule::Ptr<_1c2c59e50_ConstraintChecker> _211121_cc = _1c2d11204_constraint_checker(_self_);;
		_211121_cc.get()._field_et=_207960_error_token;
		_211121_cc.get()._field_si=_207941_s;
		_211121_cc.get()._field_generics_a=_208017_tc._field_use_generics;
		_211121_cc.get()._field_uniq=true;
		if ((!(_1c2ca0bbb_check(_211121_cc)))) {
			return _207983_ok;
		};
	};
	jule::Ptr<_1c2d70560_Eval> _212117_eval = _1c2d12c72_eval(_self_, jule::Trait<_1c2dba3bd_Lookup>(_self_, 3));;
	_207983_ok=true;
	{
		auto &expr = _207941_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab1736c1:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd62c0d_FieldIns> _212321_f = *it;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _212421_kind = _1c2db5000_check_decl(&_208017_tc, _212321_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_207983_ok=((_212421_kind != nullptr) && _207983_ok);
				if ((_212421_kind == nullptr)) {
					if (((_self_ != _207941_s.get()._field_decl.get()._field_sema) && (_207941_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_207941_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_207941_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1ab1736c1;
				};
				_212321_f.get()._field_kind=_212421_kind;
				_207941_s.get()._field_mutable=(_207941_s.get()._field_mutable || ((!(_212321_f.get()._field_decl.get()._field_mutable)) && _1c2da0c22_mutable(_212321_f.get()._field_kind.ptr())));
				_1c2d1d640_check_struct_ins_derive_clone(_self_.ptr(), _207941_s);
				if ((_212321_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1ab1736c1;
				};
				_212117_eval.get()._field_prefix=_212321_f.get()._field_kind;
				_212117_eval.get()._field_field=_212321_f;
				_212321_f.get()._field_default=_1c2d90edc_eval_expr(_212117_eval, _212321_f.get()._field_decl.get()._field_default);
				if ((_212321_f.get()._field_default == nullptr)) {
					goto _iter_next_1ab1736c1;
				};
				;
				_1c2d1326c_check_assign_type(_self_, false,_212321_f.get()._field_kind,_212321_f.get()._field_default,_212321_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1ab1736c1:;
			++it;
			goto _iter_begin_1ab1736c1;
		}
		_iter_end_1ab1736c1:;
	};
	return _207983_ok;
}



inline jule::Bool _1c2d20785_precheck_struct_ins(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _215744_s, jule::Ptr<_1db7061a7_Token> _215763_error_token) {
	jule::Bool _215786_ok = jule::Bool();
	_215786_ok=_1c2d203cd_check_struct_env(_self_, _215744_s,_215763_error_token);
	if ((!(_215786_ok))) {
		_215786_ok = false;
		return _215786_ok;
	};
	{
		auto &expr = _215744_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab17a145:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _216221_f = *it;
			{
				if ((_216221_f.get()._field_generics.len() == 0LL)) {
					if ((_1c2d1e7a6_ready_to_check_fn(_self_, _215744_s,_216221_f) == nullptr)) {
						_215786_ok = false;
						return _215786_ok;
					};
				};
			}
			_iter_next_1ab17a145:;
			++it;
			goto _iter_begin_1ab17a145;
		}
		_iter_end_1ab17a145:;
	};
	_215786_ok = true;
	return _215786_ok;
}



inline void _1c2d20a0a_check_struct_ins(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns>& _217241_s) {
	{
		auto &expr = _217241_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab17bbe6:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _217321_f = *it;
			{
				_1c2d1eac5_check_type_method(_self_, _217241_s,_217321_f);
			}
			_iter_next_1ab17bbe6:;
			++it;
			goto _iter_begin_1ab17bbe6;
		}
		_iter_end_1ab17bbe6:;
	};
}



inline void _1c2d20c80_check_type_struct(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _217842_s) {
	if (_217842_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_217842_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _217842_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab17d203:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _219121_ins = *it;
			{
				_1c2d20a0a_check_struct_ins(_self_, _219121_ins);
			}
			_iter_next_1ab17d203:;
			++it;
			goto _iter_begin_1ab17d203;
		}
		_iter_end_1ab17d203:;
	};
}



inline void _1c2d20e5b_check_struct_types(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab17dd19:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _219721_s = *it;
			{
				_1c2d20c80_check_type_struct(_self_, _219721_s);
			}
			_iter_next_1ab17dd19:;
			++it;
			goto _iter_begin_1ab17dd19;
		}
		_iter_end_1ab17dd19:;
	};
}



inline void _1c2d21203_check_struct_ins_operators(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd868e1_StructIns> _220250_s) {
	{
		auto &expr = _220250_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab18016c:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _220321_m = *it;
			{
				{
					auto &_match_expr{ _220321_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1ab180de8:;
						{
							_220250_s.get()._field_operators._field_eq=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _220668_f) mutable -> jule::Bool {
								return static__1c2d281d8_eq(_220668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1ab180e5e:;
						{
							_220250_s.get()._field_operators._field_gt=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _220868_f) mutable -> jule::Bool {
								return static__1c2d28480_gt(_220868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1ab180ed6:;
						{
							_220250_s.get()._field_operators._field_gt_eq=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _221071_f) mutable -> jule::Bool {
								return static__1c2d28727_gt_eq(_221071_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1ab18105d:;
						{
							_220250_s.get()._field_operators._field_lt=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _221268_f) mutable -> jule::Bool {
								return static__1c2d289be_lt(_221268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1ab1810d5:;
						{
							_220250_s.get()._field_operators._field_lt_eq=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _221471_f) mutable -> jule::Bool {
								return static__1c2d28c66_lt_eq(_221471_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1ab18115c:;
						{
							_220250_s.get()._field_operators._field_shl=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _221669_f) mutable -> jule::Bool {
								return static__1c2d2934e_shl(_221669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1ab1811d4:;
						{
							_220250_s.get()._field_operators._field_shr=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _221869_f) mutable -> jule::Bool {
								return static__1c2d295e6_shr(_221869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1ab18125b:;
						{
							_220250_s.get()._field_operators._field_add=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _222069_f) mutable -> jule::Bool {
								return static__1c2d2988d_add(_222069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1ab1812d3:;
						{
							_220250_s.get()._field_operators._field_sub=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _222269_f) mutable -> jule::Bool {
								return static__1c2d29b35_sub(_222269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1ab18135a:;
						{
							_220250_s.get()._field_operators._field_div=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _222469_f) mutable -> jule::Bool {
								return static__1c2d29dcc_div(_222469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1ab1813d2:;
						{
							_220250_s.get()._field_operators._field_mul=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _222669_f) mutable -> jule::Bool {
								return static__1c2d2a174_mul(_222669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1ab181459:;
						{
							_220250_s.get()._field_operators._field_mod=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _222869_f) mutable -> jule::Bool {
								return static__1c2d2a41b_mod(_222869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1ab1814d1:;
						{
							_220250_s.get()._field_operators._field_bit_and=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _223073_f) mutable -> jule::Bool {
								return static__1c2d2a6b3_bit_and(_223073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1ab181558:;
						{
							_220250_s.get()._field_operators._field_bit_or=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _223272_f) mutable -> jule::Bool {
								return static__1c2d2a95a_bit_or(_223272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1ab1815d0:;
						{
							_220250_s.get()._field_operators._field_bit_xor=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _223473_f) mutable -> jule::Bool {
								return static__1c2d2ac02_bit_xor(_223473_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1ab181657:;
						{
							_220250_s.get()._field_operators._field_neg=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _223669_f) mutable -> jule::Bool {
								return static__1c2d2b2da_neg(_223669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1ab1816ce:;
						{
							_220250_s.get()._field_operators._field_pos=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _223869_f) mutable -> jule::Bool {
								return static__1c2d2b582_pos(_223869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1ab181756:;
						{
							_220250_s.get()._field_operators._field_bit_not=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _224073_f) mutable -> jule::Bool {
								return static__1c2d2b829_bit_not(_224073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1ab1817cd:;
						{
							_220250_s.get()._field_operators._field_add_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _224276_f) mutable -> jule::Bool {
								return static__1c2d2be12_add_assign(_224276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1ab181855:;
						{
							_220250_s.get()._field_operators._field_sub_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _224476_f) mutable -> jule::Bool {
								return static__1c2d2c1a9_sub_assign(_224476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1ab1818cc:;
						{
							_220250_s.get()._field_operators._field_div_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _224676_f) mutable -> jule::Bool {
								return static__1c2d2c451_div_assign(_224676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1ab181954:;
						{
							_220250_s.get()._field_operators._field_mul_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _224876_f) mutable -> jule::Bool {
								return static__1c2d2c6e8_mul_assign(_224876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1ab1819cb:;
						{
							_220250_s.get()._field_operators._field_mod_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _225076_f) mutable -> jule::Bool {
								return static__1c2d2c990_mod_assign(_225076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1ab181a53:;
						{
							_220250_s.get()._field_operators._field_shl_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _225276_f) mutable -> jule::Bool {
								return static__1c2d2cc37_shl_assign(_225276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1ab181aca:;
						{
							_220250_s.get()._field_operators._field_shr_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _225476_f) mutable -> jule::Bool {
								return static__1c2d2cece_shr_assign(_225476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1ab181b52:;
						{
							_220250_s.get()._field_operators._field_bit_or_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _225679_f) mutable -> jule::Bool {
								return static__1c2d2d276_bit_or_assign(_225679_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1ab181bc9:;
						{
							_220250_s.get()._field_operators._field_bit_and_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _225880_f) mutable -> jule::Bool {
								return static__1c2d2d51d_bit_and_assign(_225880_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1ab181c51:;
						{
							_220250_s.get()._field_operators._field_bit_xor_assign=_1c2d20026_check_struct_ins_op(_self_, _220250_s,_220321_m,jule::Fn<jule::Bool(jule::Ptr<_1dce38993_Fn>)>([=](jule::Ptr<_1dce38993_Fn> _226080_f) mutable -> jule::Bool {
								return static__1c2d2d7b5_bit_xor_assign(_226080_f);
							}));
						}
					}
					_match_end_1ab1809ca:;
				};
			}
			_iter_next_1ab18016c:;
			++it;
			goto _iter_begin_1ab18016c;
		}
		_iter_end_1ab18016c:;
	};
}



inline void _1c2d21489_precheck_struct_type(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dcd5a596_Struct>& _226545_s) {
	if (_226545_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_226545_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_226545_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1dcd868e1_StructIns> _227621_ins = _1dcd4299b_instance(_226545_s);;
		_227621_ins.get()._field_checked=true;
		_1dcd46c14_append_instance(_226545_s.ptr(), _227621_ins);
		_1c2d20785_precheck_struct_ins(_self_, _227621_ins,nullptr);
	};
	_1c2d21203_check_struct_ins_operators(_self_, _226545_s.get()._field_instances[0LL]);
}



inline void _1c2d21665_precheck_struct_types(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab1abcc0:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _228621_s = *it;
			{
				_1c2d21489_precheck_struct_type(_self_, _228621_s);
			}
			_iter_next_1ab1abcc0:;
			++it;
			goto _iter_begin_1ab1abcc0;
		}
		_iter_end_1ab1abcc0:;
	};
}



inline void _1c2d218da_check_rets(_1c2d099a0_Sema* _self_, jule::Ptr<_1dce3b644_FnIns>& _229134_f) {
	if (_1dce38e05_is_void(_229134_f.get()._field_decl.ptr())) {
		return;;
	};
	_1c2d23a85_MissingRetChecker _229513_mrc = static__1c2d23e4d_new();;
	jule::Bool _229613_ok = _1c2d24e60_check(&_229513_mrc, _229134_f.get()._field_scope);;
	if ((!(_229613_ok))) {
		_1c2d0c662_push_err(&(*_self_), _229134_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1c2d21c09_check_fn_ins_sc(_1c2d099a0_Sema* _self_, jule::Ptr<_1dce3b644_FnIns>& _230239_f, jule::Ptr<_1c2cd9a07_ScopeChecker>& _230255_sc) {
	_1c2d086c4_append_ret_vars(_230255_sc.get()._field_table.get()._field_vars,_230239_f);
	_1c2d0897c_append_param_vars(_230255_sc.get()._field_table.get()._field_vars,_230239_f);
	_1c2d08c57_append_generic_type_aliases(_230255_sc.get()._field_table.get()._field_type_aliases,_230239_f);
	_1c2ce9d36_check(_230255_sc, _230239_f.get()._field_decl.get()._field_scope,_230239_f.get()._field_scope);
	if ((!(_1c2cdc642_stopped(_230255_sc.ptr())))) {
		_1c2d218da_check_rets(&(*_self_), _230239_f);
	};
}



inline void _1c2d22028_check_fn_ins_caller(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3b644_FnIns>& _231544_f, jule::Ptr<_1db7061a7_Token> _231559_caller) {
	if (_231544_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1c2d68c84_SymbolTable> _232017_old = _231544_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c2d0c299_set_current_file(_231544_f.get()._field_decl.get()._field_sema.ptr(), _232017_old);
	});;
	jule::Ptr<_1c2d68c84_SymbolTable> _232217_file = _1c2d090a9_find_file(_231544_f.get()._field_decl.get()._field_sema.get()._field_files,_231544_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_232217_file != nullptr)) {
		_1c2d0c299_set_current_file(_231544_f.get()._field_decl.get()._field_sema.ptr(), _232217_file);
	};
	jule::Ptr<_1c2cd9a07_ScopeChecker> _232717_sc = _1c2cacd60_new_scope_checker(_231544_f.get()._field_decl.get()._field_sema,_231544_f);;
	_232717_sc.get()._field_called_from=_231559_caller;
	_1c2d21c09_check_fn_ins_sc(_self_.ptr(), _231544_f,_232717_sc);
	if ((_231544_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_231544_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_231544_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1c2d2229d_check_fn_ins(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce3b644_FnIns>& _233737_f) {
	_1c2d22028_check_fn_ins_caller(_self_, _233737_f,nullptr);
}



inline void _1c2d22523_check_type_fn(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce38993_Fn>& _234138_f) {
	if (_234138_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_234138_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _234138_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab1b73e6:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3b644_FnIns> _235121_ins = *it;
			{
				_1c2d2229d_check_fn_ins(_self_, _235121_ins);
			}
			_iter_next_1ab1b73e6:;
			++it;
			goto _iter_begin_1ab1b73e6;
		}
		_iter_end_1ab1b73e6:;
	};
}



inline void _1c2d22798_check_test_fn(_1c2d099a0_Sema* _self_, jule::Ptr<_1dce3b644_FnIns>& _235637_f) {
	if (_235637_f.get()._field_decl.get()._field_public) {
		_1c2d0c662_push_err(&(*_self_), _235637_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_235637_f.get()._field_params.len() != 1LL) || (_235637_f.get()._field_result != nullptr))) {
		_1c2d0c662_push_err(&(*_self_), _235637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2da7a81_Sptr> _236917_sptr = _1c2da1b9b_sptr(_235637_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_236917_sptr == nullptr)) {
		_1c2d0c662_push_err(&(*_self_), _235637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd868e1_StructIns> _237613_s = _1c2da2d89_strct(_236917_sptr.get()._field_elem.ptr());;
	if (((_237613_s == nullptr) || (!(_1c2d06d87_is_std_package(_237613_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1c2d0c662_push_err(&(*_self_), _235637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c2d0c981_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c2d22a1d_precheck_type_fn(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Ptr<_1dce38993_Fn>& _238441_f) {
	if (_238441_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_238441_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_238441_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1dce3b644_FnIns> _239521_ins = _1dce39d7e_instance_force(_238441_f);;
		_238441_f.get()._field_instances = jule::alloc_for_append(_238441_f.get()._field_instances,1);_238441_f.get()._field_instances.__push(_239521_ins);;
		_1c2d15505_reload_fn_ins_types(_self_, _239521_ins);
		_239521_ins.get()._field_reloaded=true;
		if (_1c2db64a7_has_directive(_238441_f.get()._field_directives,jule::Str("test", 4))) {
			_1c2d22798_check_test_fn(_self_.ptr(), _239521_ins);
		};
	};
}



inline void _1c2d22be9_precheck_fn_types(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1ab1c1ec2:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> _240821_decl = *it;
			{
				{
					auto &expr = _240821_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ab1c2885:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _240925_m = *it;
						{
							_1c2d22a1d_precheck_type_fn(_self_, _240925_m);
						}
						_iter_next_1ab1c2885:;
						++it;
						goto _iter_begin_1ab1c2885;
					}
					_iter_end_1ab1c2885:;
				};
			}
			_iter_next_1ab1c1ec2:;
			++it;
			goto _iter_begin_1ab1c1ec2;
		}
		_iter_end_1ab1c1ec2:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab1c2599:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _241321_decl = *it;
			{
				_1c2d22a1d_precheck_type_fn(_self_, _241321_decl);
			}
			_iter_next_1ab1c2599:;
			++it;
			goto _iter_begin_1ab1c2599;
		}
		_iter_end_1ab1c2599:;
	};
}



inline void _1c2d22dc5_check_fn_types(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab1c3c4e:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _242021_decl = *it;
			{
				_1c2d22523_check_type_fn(_self_, _242021_decl);
			}
			_iter_next_1ab1c3c4e:;
			++it;
			goto _iter_begin_1ab1c3c4e;
		}
		_iter_end_1ab1c3c4e:;
	};
}



inline void _1c2d230a1_check_package_types(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab1c4568:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _242821_f = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _242821_f);
				_1c2d1e3ee_check_global_types(_self_);
				_1c2d22be9_precheck_fn_types(_self_);
				_1c2d21665_precheck_struct_types(_self_);
			}
			_iter_next_1ab1c4568:;
			++it;
			goto _iter_begin_1ab1c4568;
		}
		_iter_end_1ab1c4568:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab1c63d3:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _243921_f = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _243921_f);
				_1c2d22dc5_check_fn_types(_self_);
				_1c2d20e5b_check_struct_types(_self_);
			}
			_iter_next_1ab1c63d3:;
			++it;
			goto _iter_begin_1ab1c63d3;
		}
		_iter_end_1ab1c63d3:;
	};
}



inline void _1c2d2327c_set_file_sema_fields(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab1c69bb:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _244721_f = *it;
			{
				_244721_f.get()._field_sema=_self_;
			}
			_iter_next_1ab1c69bb:;
			++it;
			goto _iter_begin_1ab1c69bb;
		}
		_iter_end_1ab1c69bb:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab1c7acc:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _245121_st = *it;
			{
				_245121_st.get()._field_sema=_self_;
			}
			_iter_next_1ab1c7acc:;
			++it;
			goto _iter_begin_1ab1c7acc;
		}
		_iter_end_1ab1c7acc:;
	};
}



inline void _1c2d23458_set_sema_fields(jule::Ptr<_1c2d099a0_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab1c85d3:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _245721_file = *it;
			{
				_1c2d0c299_set_current_file(_self_.ptr(), _245721_file);
				_1c2d2327c_set_file_sema_fields(_self_);
			}
			_iter_next_1ab1c85d3:;
			++it;
			goto _iter_begin_1ab1c85d3;
		}
		_iter_end_1ab1c85d3:;
	};
}



inline void _1c2d236cd_check(jule::Ptr<_1c2d099a0_Sema> _self_, jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _246330_files) {
	_self_.get()._field_files=_246330_files;
	_1c2d0ee17_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2d23458_set_sema_fields(_self_);
	_1c2d1049a_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2d102be_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2d1d82c_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c2d230a1_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d099a0_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1c2d23a85_MissingRetChecker static__1c2d23e4d_new(void) {
	return _1c2d23a85_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1c2d24228_check_conditional(_1c2d23a85_MissingRetChecker* _self_, jule::Ptr<_1c2cd3902_Conditional> _250636_c) {
	{
		auto &expr = _250636_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ab1cca38:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd321a_If> _250721_elif = *it;
			{
				if ((_250721_elif == nullptr)) {
					return false;
				};
				if ((!(_1c2d24b52_check_scope(&(*_self_), _250721_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1ab1cca38:;
			++it;
			goto _iter_begin_1ab1cca38;
		}
		_iter_end_1ab1cca38:;
	};
	return ((_250636_c.get()._field_default != nullptr) && _1c2d24b52_check_scope(&(*_self_), _250636_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1c2d24536_check_match(_1c2d23a85_MissingRetChecker* _self_, jule::Ptr<_1c2cd6ae2_Match> _251830_m) {
	{
		auto &expr = _251830_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ab1cee8b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd763c_Case> _251921_c = *it;
			{
				if ((_251921_c == nullptr)) {
					return false;
				};
				jule::I64 _252317_n = (*_self_)._field_breaked.len();;
				jule::Bool _252417_ok = _1c2d24b52_check_scope(&(*_self_), _251921_c.get()._field_scope);;
				{
					
					if ((_252317_n != (*_self_)._field_breaked.len())) {
						_case_begin_1ab1d1c07:;
						{
							return false;
						}
					}
					else if ((!(_252417_ok))) {
						_case_begin_1ab1d1c7e:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1ab1d1d06;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1ab1d1d06:;
						{
							(*_self_)._field_falled=false;
							if ((_251921_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1ab1cee8b;
						}
					}
					_match_end_1ab1d1b5d:;
				};
			}
			_iter_next_1ab1cee8b:;
			++it;
			goto _iter_begin_1ab1cee8b;
		}
		_iter_end_1ab1cee8b:;
	};
	return ((_251830_m.get()._field_default != nullptr) && _1c2d24b52_check_scope(&(*_self_), _251830_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1c2d24844_check_inf_iter(_1c2d23a85_MissingRetChecker* _self_, jule::Ptr<_1c2cd3bdd_InfIter> _254433_it) {
	jule::I64 _254513_n = (*_self_)._field_breaked.len();;
	if (_1c2d24b52_check_scope(&(*_self_), _254433_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_254513_n);
		return true;
	};
	if ((_254513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _255117_itaddr = static_cast<jule::Uintptr>(_254433_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_254513_n);
			auto it = expr.begin();
			_iter_begin_1ab1d5a74:;
			if (it != expr.end()) {
				jule::Uintptr _255220_addr = *it;
				{
					if ((_255117_itaddr == _255220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_254513_n);
						return false;
					};
				}
				_iter_next_1ab1d5a74:;
				++it;
				goto _iter_begin_1ab1d5a74;
			}
			_iter_end_1ab1d5a74:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_254513_n);
	};
	return true;
}



inline jule::Bool _1c2d24b52_check_scope(_1c2d23a85_MissingRetChecker* _self_, jule::Ptr<_1c2cd2d1e_Scope> _256330_s) {
	if ((_256330_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _256330_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ab1d7757:;
		if (it != expr.end()) {
			jule::Any _256721_st = *it;
			{
				{
					auto &_match_expr{ _256721_st };
					
					if (_match_expr.type_is<jule::Ptr<_1c2cd7be2_FallSt>>()) {
						_case_begin_1ab1d814d:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd52e9_BreakSt>>()) {
						_case_begin_1ab1d81e7:;
						{
							jule::Uintptr _257321_addr = _256721_st.operator jule::Ptr<_1c2cd52e9_BreakSt>().get()._field_it;;
							if ((_257321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_257321_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd4e42_ContSt>>()) {
						_case_begin_1ab1d825d:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
						_case_begin_1ab1d82c4:;
						{
							if (_1c2d24844_check_inf_iter(&(*_self_), _256721_st.operator jule::Ptr<_1c2cd3bdd_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd8165_RetSt>>()) {
						_case_begin_1ab1d833a:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd2d1e_Scope>>()) {
						_case_begin_1ab1d83a1:;
						{
							if (_1c2d24b52_check_scope(&(*_self_), _256721_st.operator jule::Ptr<_1c2cd2d1e_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
						_case_begin_1ab1d8428:;
						{
							{
								auto &_match_expr{ _256721_st.operator jule::Ptr<_1c2d6d9e2_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
									_case_begin_1ab1dc086:;
									{
										return true;
									}
								}
								_match_end_1ab1dbcde:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd3902_Conditional>>()) {
						_case_begin_1ab1d84a0:;
						{
							if (_1c2d24228_check_conditional(&(*_self_), _256721_st.operator jule::Ptr<_1c2cd3902_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2cd6ae2_Match>>()) {
						_case_begin_1ab1d8527:;
						{
							if (_1c2d24536_check_match(&(*_self_), _256721_st.operator jule::Ptr<_1c2cd6ae2_Match>())) {
								return true;
							};
						}
					}
					_match_end_1ab1d7ea5:;
				};
			}
			_iter_next_1ab1d7757:;
			++it;
			goto _iter_begin_1ab1d7757;
		}
		_iter_end_1ab1d7757:;
	};
	return false;
}



inline jule::Bool _1c2d24e60_check(_1c2d23a85_MissingRetChecker* _self_, jule::Ptr<_1c2cd2d1e_Scope> _260924_s) {
	return _1c2d24b52_check_scope(&(*_self_), _260924_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d23a85_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d25746_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2d26a66_is_initialized(_1c2d266ae_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1c2d26cca_is_type_inferred(_1c2d266ae_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d266ae_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c2d27858_dispose(jule::Ptr<_1dce38993_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1dce38e05_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1dce379e7_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1c2d27b00_to_str(jule::Ptr<_1dce38993_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1dce38e05_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1dce379e7_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1dce3b644_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1c2da42ec_Prim> _4113_prim = _1c2da1937_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1c2da7531_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1c2d27e41_logical(jule::Ptr<_1dce38993_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1dce38e05_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1dce379e7_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1dce3b644_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1c2da42ec_Prim> _6713_prim = _1c2da1937_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1c2da72bc_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1c2da2d89_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1c2d281d8_eq(jule::Ptr<_1dce38993_Fn> _7522_f) {
	return static__1c2d27e41_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1c2d28480_gt(jule::Ptr<_1dce38993_Fn> _8022_f) {
	return static__1c2d27e41_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1c2d28727_gt_eq(jule::Ptr<_1dce38993_Fn> _8525_f) {
	return static__1c2d27e41_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1c2d289be_lt(jule::Ptr<_1dce38993_Fn> _9022_f) {
	return static__1c2d27e41_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1c2d28c66_lt_eq(jule::Ptr<_1dce38993_Fn> _9525_f) {
	return static__1c2d27e41_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1c2d290a7_result(jule::Ptr<_1dce38993_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1dce38e05_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1dce379e7_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1dce3b644_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1c2da2d89_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1c2d2934e_shl(jule::Ptr<_1dce38993_Fn> _12223_f) {
	return static__1c2d290a7_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1c2d295e6_shr(jule::Ptr<_1dce38993_Fn> _12723_f) {
	return static__1c2d290a7_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1c2d2988d_add(jule::Ptr<_1dce38993_Fn> _13223_f) {
	return static__1c2d290a7_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1c2d29b35_sub(jule::Ptr<_1dce38993_Fn> _13723_f) {
	return static__1c2d290a7_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1c2d29dcc_div(jule::Ptr<_1dce38993_Fn> _14223_f) {
	return static__1c2d290a7_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1c2d2a174_mul(jule::Ptr<_1dce38993_Fn> _14723_f) {
	return static__1c2d290a7_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1c2d2a41b_mod(jule::Ptr<_1dce38993_Fn> _15223_f) {
	return static__1c2d290a7_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1c2d2a6b3_bit_and(jule::Ptr<_1dce38993_Fn> _15727_f) {
	return static__1c2d290a7_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1c2d2a95a_bit_or(jule::Ptr<_1dce38993_Fn> _16226_f) {
	return static__1c2d290a7_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1c2d2ac02_bit_xor(jule::Ptr<_1dce38993_Fn> _16727_f) {
	return static__1c2d290a7_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1c2d2b043_unary(jule::Ptr<_1dce38993_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1dce38e05_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1dce379e7_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1dce3b644_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1c2da2d89_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1c2d2b2da_neg(jule::Ptr<_1dce38993_Fn> _19223_f) {
	return static__1c2d2b043_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1c2d2b582_pos(jule::Ptr<_1dce38993_Fn> _19723_f) {
	return static__1c2d2b043_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1c2d2b829_bit_not(jule::Ptr<_1dce38993_Fn> _20227_f) {
	return static__1c2d2b043_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1c2d2bb6a_assign(jule::Ptr<_1dce38993_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1dce38e05_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1dce379e7_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1c2d2be12_add_assign(jule::Ptr<_1dce38993_Fn> _22730_f) {
	return static__1c2d2bb6a_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1c2d2c1a9_sub_assign(jule::Ptr<_1dce38993_Fn> _23230_f) {
	return static__1c2d2bb6a_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1c2d2c451_div_assign(jule::Ptr<_1dce38993_Fn> _23730_f) {
	return static__1c2d2bb6a_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1c2d2c6e8_mul_assign(jule::Ptr<_1dce38993_Fn> _24230_f) {
	return static__1c2d2bb6a_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1c2d2c990_mod_assign(jule::Ptr<_1dce38993_Fn> _24730_f) {
	return static__1c2d2bb6a_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1c2d2cc37_shl_assign(jule::Ptr<_1dce38993_Fn> _25230_f) {
	return static__1c2d2bb6a_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1c2d2cece_shr_assign(jule::Ptr<_1dce38993_Fn> _25730_f) {
	return static__1c2d2bb6a_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1c2d2d276_bit_or_assign(jule::Ptr<_1dce38993_Fn> _26233_f) {
	return static__1c2d2bb6a_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1c2d2d51d_bit_and_assign(jule::Ptr<_1dce38993_Fn> _26734_f) {
	return static__1c2d2bb6a_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1c2d2d7b5_bit_xor_assign(jule::Ptr<_1dce38993_Fn> _27234_f) {
	return static__1c2d2bb6a_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d271d7_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c2d57d94_push_err(_1c2d57877_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1c2d0c662_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1c2d58108_check_trait(_1c2d57877_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1c2da0749_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1c2c3d54e_Trait> _12513_trt = _1c2da30ed_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1c2da1b9b_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ab226b92:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1c2da1b9b_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1c2da2d89_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1ab226c80;
			}
		}
		else if ((_1c2da2d89_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ab226c80:;
			{
				jule::Ptr<_1dcd868e1_StructIns> _13617_s = _1c2da2d89_strct((*_self_)._field_src.ptr());;
				if ((!(_1dcd4c1e2_is_implements(_13617_s.get()._field_decl.ptr(), _12513_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12617_ref)) && _1c2d47cb8_trait_has_reference_receiver(_12513_trt))) {
					_1c2d57d94_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1c2da30ed_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ab226ce6:;
			{
				_12132_ok = (_12513_trt == _1c2da30ed_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1ab226532:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1ab2264cc:;
	};
}



inline jule::Bool _1c2d5836c_check_ptr(_1c2d57877_TypeCompatibilityChecker* _self_) {
	jule::Bool _15230_ok = jule::Bool();
	if (_1c2da0749_is_nil((*_self_)._field_src.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	jule::Ptr<_1c2dab0e5_Ptr> _15617_dest = _1c2da1e10_ptr((*_self_)._field_dest.ptr());;
	if (_1c2dabab8_is_unsafe(_15617_dest.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	_15230_ok = _1c2da002e_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15230_ok;
}



inline jule::Bool _1c2d585d1_check_prim(_1c2d57877_TypeCompatibilityChecker* _self_) {
	jule::Bool _16331_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1c2da42ec_Prim> _16517_prim = _1c2da1937_prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1c2da7795_is_any(_16517_prim.ptr()))) {
			_16331_ok = true;
			return _16331_ok;
		};
	};
	_16331_ok = _1c2da002e_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16331_ok;
}



inline jule::Bool _1c2d58988___type_enum(_1c2d57877_TypeCompatibilityChecker* _self_, jule::Ptr<_1c2c41d05_TypeEnum>& _17331_e, jule::Ptr<_1c2d9e825_TypeKind>& _17350_t2) {
	jule::Bool _17367_ok = jule::Bool();
	{
		auto &expr = _17331_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ab22e826:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4173e_TypeEnumItem> _17421_item = *it;
			{
				if (_1c2da002e_equals(_17421_item.get()._field_kind.get()._field_kind, _17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
				jule::Ptr<_1c2c41d05_TypeEnum> _17821_ke = _1c2da23d8_tenm(_17421_item.get()._field_kind.get()._field_kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1ab22e826;
				};
				if (_1c2d58988___type_enum(&(*_self_), _17821_ke,_17350_t2)) {
					_17367_ok = true;
					return _17367_ok;
				};
			}
			_iter_next_1ab22e826:;
			++it;
			goto _iter_begin_1ab22e826;
		}
		_iter_end_1ab22e826:;
	};
	_17367_ok = false;
	return _17367_ok;
}



inline jule::Bool _1c2d58bec_check_type_enum(_1c2d57877_TypeCompatibilityChecker* _self_) {
	jule::Bool _18936_ok = jule::Bool();
	if (_1c2da002e_equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18936_ok = true;
		return _18936_ok;
	};
	jule::Ptr<_1c2c41d05_TypeEnum> _19317_e = _1c2da23d8_tenm((*_self_)._field_dest.ptr());;
	_18936_ok = _1c2d58988___type_enum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18936_ok;
}



inline jule::Bool _1c2d58e61_check(_1c2d57877_TypeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1c2da1e10_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1c2d5836c_check_ptr(&(*_self_));
		return _19726_ok;
	};
	if (_1c2da0e86_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1c2da0749_is_nil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1c2da1937_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ab234c5a:;
			{
				_19726_ok = _1c2d585d1_check_prim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1c2da23d8_tenm((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ab234cc1:;
			{
				_19726_ok = _1c2d58bec_check_type_enum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1c2da30ed_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ab2350ac:;
			{
				_19726_ok = _1c2d58108_check_trait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1ab233de1:;
			{
				_19726_ok = _1c2da002e_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1ab233c9d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d57877_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1c2d59912_push_err(_1c2d594a0_AssignTypeChecker* _self_, jule::Str _22927_fmt, jule::Slice<jule::Any> _22940_args) {
	_1c2d0c662_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22927_fmt,jule::Any(_22940_args));
}



inline jule::Bool _1c2d59b76_check_validity(_1c2d594a0_AssignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1c2da2b25_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab2383bd:;
			{
				jule::Ptr<_1dce3b644_FnIns> _23717_f = _1c2da2b25_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1dce3c9ca_is_builtin(_23717_f.ptr())) {
						_case_begin_1ab239996:;
						{
							_1c2d59912_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1ab239a1d:;
						{
							_1c2d59912_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_decl.get()._field_statically)) && _1dce39169_is_method(_23717_f.get()._field_decl.ptr()))) {
						_case_begin_1ab239a95:;
						{
							_1c2d59912_push_err(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_23717_f.get()._field_generics.len() == 0LL))) {
						_case_begin_1ab239b1c:;
						{
							_1c2d59912_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1c2d0c981_push_suggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1ab2398b9:;
				};
			}
		}
		else if ((_1c2da35c6_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab238445:;
			{
				_1c2d59912_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1ab238313:;
	};
	return _23417_valid;
}



inline jule::Bool _1c2d59dda_check_const(_1c2d594a0_AssignTypeChecker* _self_) {
	if (((((!(_1c2d6e3a5_is_const((*_self_)._field_d.ptr()))) || (_1c2da1937_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1c2cd269d_is_num(_1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _27413_kind = _1c2da1937_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1c2cd2406_is_float(_27413_kind)) {
			_case_begin_1ab2422a6:;
			{
				if ((!(_1c2d3ece3_float_assignable(_27413_kind,(*_self_)._field_d)))) {
					_1c2d59912_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1c2cd20d7_is_int(_27413_kind)) {
			_case_begin_1ab241abe:;
			{
				if ((!(_1c2d56645_int_assignable(_27413_kind,(*_self_)._field_d)))) {
					_1c2d59912_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1ab241a58:;
			{
				return false;
			}
		}
		_match_end_1ab241a03:;
	};
	return true;
}



inline jule::Bool _1c2d5a14e_is_prim(_1c2d594a0_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1c2da04d5_cpp_linked((*_self_)._field_dest.ptr()) || _1c2da04d5_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1c2da1937_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1c2d5a3b3_check_compatibility(_1c2d594a0_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ab245d59:;
			{
				return false;
			}
		}
		else if ((!(_1c2d59b76_check_validity(&(*_self_))))) {
			_case_begin_1ab245dd1:;
			{
				return false;
			}
		}
		else if (_1c2d59dda_check_const(&(*_self_))) {
			_case_begin_1ab245e58:;
			{
				return true;
			}
		}
		else if ((_1c2da2174_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab245ed0:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1c2da2174_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1c2da2174_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1c2da1937_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1ab245c38;
				};
				if (_1c2ccde19_types_are_compatible(_1c2da1937_prim(_1c2da2174_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1c2da1937_prim(_31621_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1c2d5a14e_is_prim(&(*_self_))) {
			_case_begin_1ab246057:;
			{
				jule::Ptr<_1c2da42ec_Prim> _32617_dest = _1c2da1937_prim((*_self_)._field_dest.ptr());;
				if (_1c2da7795_is_any(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1c2da42ec_Prim> _33021_src = _1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1c2ccde19_types_are_compatible(_32617_dest.get()._field_kind,_33021_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1ab245c38:;
	};
	return _1c2d136e0_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1c2d5a627_check(_1c2d594a0_AssignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1c2d5a3b3_check_compatibility(&(*_self_));;
	if (_33913_ok) {
		_1c2db8036_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d594a0_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab25eb42_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _35851_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6c377_ArrTypeDecl>>()) {
			_case_begin_1ab26122b:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1ab2620a6:;
						{
							_36121_elem=_1c2da264c_arr(_35851_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1ab261eeb:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6c377_ArrTypeDecl>().get()._field_elem;
				return _1c2d5c5b3_annotate_constraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1ab261171:;
	};
	return false;
}

inline jule::Bool _1ab25e27e_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _35851_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6b61d_SlcTypeDecl>>()) {
			_case_begin_1ab26488e:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1ab2657b3:;
						{
							_36121_elem=_1c2da28b1_slc(_35851_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1ab26565e:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6b61d_SlcTypeDecl>().get()._field_elem;
				return _1c2d5c5b3_annotate_constraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1ab2647d4:;
	};
	return false;
}

inline jule::Bool _1ab25e6be_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _35851_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6bbe5_PtrTypeDecl>>()) {
			_case_begin_1ab268068:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1ab269003:;
						{
							_36121_elem=_1c2da1e10_ptr(_35851_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1ab268d38:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6bbe5_PtrTypeDecl>().get()._field_elem;
				return _1c2d5c5b3_annotate_constraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1ab267ead:;
	};
	return false;
}

inline jule::Bool _1ab267551_annotate_constraint_elem(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _35851_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6b222_SptrTypeDecl>>()) {
			_case_begin_1ab26b3ac:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1ab26c3ad:;
						{
							_36121_elem=_1c2da1b9b_sptr(_35851_k.ptr()).get()._field_elem;
						}
					}
					_match_end_1ab26c17c:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6b222_SptrTypeDecl>().get()._field_elem;
				return _1c2d5c5b3_annotate_constraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1ab26b302:;
	};
	return false;
}



inline jule::Bool _1c2d5b804_annotate_constraint_map(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _37847_k) {
	jule::Bool _37863_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6cac5_MapTypeDecl>>()) {
			_case_begin_1ab24d856:;
			{
				jule::Ptr<_1c2da9a94_Map> _38121_m = _1c2da3362_map(_37847_k.ptr());;
				jule::Ptr<_1dcd6cac5_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6cac5_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_key;
				if (_1c2d5c5b3_annotate_constraint(&(*_self_), _38121_m.get()._field_key)) {
					_37863_ok = true;
					return _37863_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_val;
				_37863_ok = _1c2d5c5b3_annotate_constraint(&(*_self_), _38121_m.get()._field_val);
				return _37863_ok;
			}
		}
		_match_end_1ab24d7ce:;
	};
	_37863_ok = false;
	return _37863_ok;
}



inline jule::Bool _1c2d5bb45_annotate_constraint_tup(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _39347_k) {
	jule::Bool _39363_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6b909_TupleTypeDecl>>()) {
			_case_begin_1ab251370:;
			{
				jule::Ptr<_1dcd6b909_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6b909_TupleTypeDecl>();;
				jule::Ptr<_1c2da906b_Tuple> _39721_tup2 = _1c2da35c6_tup(_39347_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1ab2527e4:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d9e825_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_types;
								auto it = expr.begin();
								_iter_begin_1ab253130:;
								if (it != expr.end()) {
									jule::Ptr<_1dcd69d69_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1c2d5c5b3_annotate_constraint(&(*_self_), _39825_t2)) {
											_39363_ok = true;
											return _39363_ok;
										};
									}
									_iter_next_1ab253130:;
									++it;
									goto _iter_begin_1ab253130;
								}
								_iter_end_1ab253130:;
							};
						}
						_iter_next_1ab2527e4:;
						++it;
						goto _iter_begin_1ab2527e4;
					}
					_iter_end_1ab2527e4:;
				};
			}
		}
		_match_end_1ab2512e8:;
	};
	_39363_ok = false;
	return _39363_ok;
}



inline jule::Bool _1c2d5be64_annotate_constraint_fn(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _41046_k) {
	jule::Bool _41062_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd7bb7d_FnDecl>>()) {
			_case_begin_1ab253592:;
			{
				jule::Ptr<_1dcd7bb7d_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd7bb7d_FnDecl>();;
				jule::Ptr<_1dce3b644_FnIns> _41421_f = _1c2da2b25_fnc(_41046_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ab25561b:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1dce3a775_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_params[_41518_i].get()._field_kind;
							if (_1c2d5c5b3_annotate_constraint(&(*_self_), _41525_fp.get()._field_kind)) {
								_41062_ok = true;
								return _41062_ok;
							};
						}
						_iter_next_1ab25561b:;
						++it;
						_41518_i++;
						goto _iter_begin_1ab25561b;
					}
					_iter_end_1ab25561b:;
				};
				if ((_41321_pf.get()._field_result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_result.get()._field_kind;
					if (_1c2d5c5b3_annotate_constraint(&(*_self_), _41421_f.get()._field_result)) {
						_41062_ok = true;
						return _41062_ok;
					};
				};
			}
		}
		_match_end_1ab253042:;
	};
	_41062_ok = false;
	return _41062_ok;
}



inline jule::Bool _1c2d5c294_annotate_constraint_ident(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _43149_k) {
	jule::Ptr<_1dcd6a430_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_kind.operator jule::Ptr<_1dcd6a430_IdentTypeDecl>();;
	jule::Ptr<_1dcd868e1_StructIns> _43317_s = _1c2da2d89_strct(_43149_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab258531:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1dcd7744d_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_ident == _43217_ident.get()._field_ident)) {
					jule::Ptr<_1c2d9d0e8_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1c2d5c8d2_push_generic(&(*_self_), _43149_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1ab258531;
				};
				jule::Ptr<_1dcd69d69_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ab25b48a:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd69d69_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_generics;
								auto it = expr.begin();
								_iter_begin_1ab25c205:;
								if (it != expr.end()) {
									jule::Ptr<_1c2d9d0e8_InsGeneric> _44929_sg = *it;
									{
										if (_1c2d5c5b3_annotate_constraint(&(*_self_), _44929_sg.get()._field_kind)) {
											return true;
										};
									}
									_iter_next_1ab25c205:;
									++it;
									goto _iter_begin_1ab25c205;
								}
								_iter_end_1ab25c205:;
							};
						}
						_iter_next_1ab25b48a:;
						++it;
						goto _iter_begin_1ab25b48a;
					}
					_iter_end_1ab25b48a:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1ab258531:;
			++it;
			_43413_i++;
			goto _iter_begin_1ab258531;
		}
		_iter_end_1ab258531:;
	};
	return false;
}



inline jule::Bool _1c2d5c5b3_annotate_constraint(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _46043_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6a430_IdentTypeDecl>>()) {
			_case_begin_1ab25b9a7:;
			{
				return _1c2d5c294_annotate_constraint_ident(&(*_self_), _46043_k);
			}
		}
		_match_end_1ab25c744:;
	};
	{
		
		if ((_1c2da264c_arr(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25d24a:;
			{
				return _1ab25eb42_annotate_constraint_elem(&(*_self_), _46043_k);
			}
		}
		else if ((_1c2da28b1_slc(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25d2b1:;
			{
				return _1ab25e27e_annotate_constraint_elem(&(*_self_), _46043_k);
			}
		}
		else if ((_1c2da1e10_ptr(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25d327:;
			{
				return _1ab25e6be_annotate_constraint_elem(&(*_self_), _46043_k);
			}
		}
		else if ((_1c2da1b9b_sptr(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25daec:;
			{
				return _1ab267551_annotate_constraint_elem(&(*_self_), _46043_k);
			}
		}
		else if ((_1c2da3362_map(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25db63:;
			{
				return _1c2d5b804_annotate_constraint_map(&(*_self_), _46043_k);
			}
		}
		else if ((_1c2da2b25_fnc(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25dbc9:;
			{
				return _1c2d5be64_annotate_constraint_fn(&(*_self_), _46043_k);
			}
		}
		else if ((_1c2da35c6_tup(_46043_k.ptr()) != nullptr)) {
			_case_begin_1ab25dc40:;
			{
				return _1c2d5bb45_annotate_constraint_tup(&(*_self_), _46043_k);
			}
		}
		else {
			_case_begin_1ab25da53:;
			{
				return false;
			}
		}
		_match_end_1ab25d9ed:;
	};
}



inline void _1c2d5c8d2_push_generic(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _48536_k, jule::I64 _48550_i) {
	(*_self_)._field_f.get()._field_generics[_48550_i]=jule::new_ptr<_1c2d9d0e8_InsGeneric>(_1c2d9d0e8_InsGeneric{._field_kind=_48536_k, });
	jule::Ptr<_1dcd7744d_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_decl.get()._field_generics[_48550_i];;
	if (((_48717_gd.get()._field_constraint == nullptr) || (_48717_gd.get()._field_constraint.get()._field_mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_constraint.get()._field_mask[0LL];
	_1c2d5c5b3_annotate_constraint(&(*_self_), _48536_k);
}



inline jule::Bool _1c2d5cbe0_annotate_prim(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _49544_k) {
	jule::Bool _49560_ok = jule::Bool();
	_49560_ok = _1c2d5ea16_annotate_any(&(*_self_), _49544_k);
	return _49560_ok;
}



inline jule::Bool _1c2d5ceed_annotate_arr(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _49943_k) {
	jule::Bool _49959_ok = jule::Bool();
	jule::Ptr<_1c2daa688_Arr> _50017_parr = _1c2da264c_arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49959_ok = false;
		return _49959_ok;
	};
	jule::Ptr<_1c2daa688_Arr> _50417_arr = _1c2da264c_arr(_49943_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_elem));
	_49959_ok = _1c2d5ed24_annotate_kind(&(*_self_), _50417_arr.get()._field_elem);
	return _49959_ok;
}



inline jule::Bool _1c2d5d30b_annotate_slc(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _50943_k) {
	jule::Bool _50959_ok = jule::Bool();
	jule::Ptr<_1c2da84dd_Slc> _51017_pslc = _1c2da28b1_slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50959_ok = false;
		return _50959_ok;
	};
	jule::Ptr<_1c2da84dd_Slc> _51417_slc = _1c2da28b1_slc(_50943_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_elem));
	_50959_ok = _1c2d5ed24_annotate_kind(&(*_self_), _51417_slc.get()._field_elem);
	return _50959_ok;
}



inline jule::Bool _1c2d5d6b3_check_map_key(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>* _51943_k, jule::Ptr<_1c2d9e825_TypeKind>& _51963_ck) {
	jule::Bool _51980_ok = jule::Bool();
	jule::Ptr<_1c2d9e825_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51943_k;
	_51980_ok=_1c2d5ed24_annotate_kind(&(*_self_), _51963_ck);
	(*_self_)._field_k=_52017_old;
	return _51980_ok;
}



inline jule::Bool _1c2d5d9c1_annotate_map(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _52743_k) {
	jule::Bool _52759_ok = jule::Bool();
	jule::Ptr<_1c2da9a94_Map> _52817_pmap = _1c2da3362_map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52759_ok = false;
		return _52759_ok;
	};
	jule::Ptr<_1c2da9a94_Map> _53217_m = _1c2da3362_map(_52743_k.ptr());;
	_52759_ok = (_1c2d5d6b3_check_map_key(&(*_self_), (&(_52817_pmap.get()._field_key)),_53217_m.get()._field_key) && _1c2d5d6b3_check_map_key(&(*_self_), (&(_52817_pmap.get()._field_val)),_53217_m.get()._field_val));
	return _52759_ok;
}



inline jule::Bool _1c2d5dcce_annotate_fn(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _53742_k) {
	jule::Bool _53758_ok = jule::Bool();
	jule::Ptr<_1dce3b644_FnIns> _53817_pf = _1c2da2b25_fnc((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53758_ok = false;
		return _53758_ok;
	};
	jule::Ptr<_1dce3b644_FnIns> _54217_f = _1c2da2b25_fnc(_53742_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_params.len() != _54217_f.get()._field_params.len())) {
			_case_begin_1ab27b2e0:;
			{
				_53758_ok = false;
				return _53758_ok;
			}
		}
		else if ((_1dce38e05_is_void(_53817_pf.get()._field_decl.ptr()) != _1dce38e05_is_void(_54217_f.get()._field_decl.ptr()))) {
			_case_begin_1ab27b367:;
			{
				_53758_ok = false;
				return _53758_ok;
			}
		}
		_match_end_1ab27b268:;
	};
	_53758_ok=true;
	jule::Ptr<_1c2d9e825_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab27cc4d:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1dce3a775_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_params[_55214_i].get()._field_kind));
				_53758_ok=(_1c2d5ed24_annotate_kind(&(*_self_), _55221_fp.get()._field_kind) && _53758_ok);
			}
			_iter_next_1ab27cc4d:;
			++it;
			_55214_i++;
			goto _iter_begin_1ab27cc4d;
		}
		_iter_end_1ab27cc4d:;
	};
	if ((!(_1dce38e05_is_void(_53817_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_result));
		_53758_ok=(_1c2d5ed24_annotate_kind(&(*_self_), _54217_f.get()._field_result) && _53758_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53758_ok;
}



inline jule::Bool _1c2d5e0dc_annotate_ptr(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _56643_k) {
	jule::Bool _56659_ok = jule::Bool();
	jule::Ptr<_1c2dab0e5_Ptr> _56717_pptr = _1c2da1e10_ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56659_ok = false;
		return _56659_ok;
	};
	jule::Ptr<_1c2dab0e5_Ptr> _57117_ptr = _1c2da1e10_ptr(_56643_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_elem));
	_56659_ok = _1c2d5ed24_annotate_kind(&(*_self_), _57117_ptr.get()._field_elem);
	return _56659_ok;
}



inline jule::Bool _1c2d5e3ea_annotate_sptr(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _57644_k) {
	jule::Bool _57660_ok = jule::Bool();
	jule::Ptr<_1c2da7a81_Sptr> _57717_ssptr = _1c2da1b9b_sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57660_ok = false;
		return _57660_ok;
	};
	jule::Ptr<_1c2da7a81_Sptr> _58117_sptr = _1c2da1b9b_sptr(_57644_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_elem));
	_57660_ok = _1c2d5ed24_annotate_kind(&(*_self_), _58117_sptr.get()._field_elem);
	return _57660_ok;
}



inline jule::Bool _1c2d5e708_annotate_struct(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _58646_k) {
	jule::Bool _58662_ok = jule::Bool();
	jule::Ptr<_1dcd868e1_StructIns> _58717_s = _1c2da2d89_strct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58662_ok = false;
		return _58662_ok;
	};
	jule::Ptr<_1dcd868e1_StructIns> _59117_s2 = _1c2da2d89_strct(_58646_k.ptr());;
	if ((_58717_s.get()._field_generics.len() != _59117_s2.get()._field_generics.len())) {
		_58662_ok = false;
		return _58662_ok;
	};
	{
		auto &expr = _58717_s.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab28666e:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1c2d9d0e8_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1c2d9d0e8_InsGeneric> _59621_g2 = _59117_s2.get()._field_generics[_59514_i];;
				if (_1c2da002e_equals(_59521_g.get()._field_kind, _59621_g2.get()._field_kind)) {
					goto _iter_next_1ab28666e;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_kind));
				if ((!(_1c2d5ed24_annotate_kind(&(*_self_), _59621_g2.get()._field_kind)))) {
					_58662_ok = false;
					return _58662_ok;
				};
			}
			_iter_next_1ab28666e:;
			++it;
			_59514_i++;
			goto _iter_begin_1ab28666e;
		}
		_iter_end_1ab28666e:;
	};
	_58662_ok = true;
	return _58662_ok;
}



inline jule::Bool _1c2d5ea16_annotate_any(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _60843_k) {
	jule::Bool _60859_ok = jule::Bool();
	jule::Str _60913_kind = _1c2d9ec21_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab2895c8:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1dcd7744d_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_ident)) {
					goto _iter_next_1ab2895c8;
				};
				jule::Ptr<_1c2d9d0e8_InsGeneric> _61517_t = (*_self_)._field_f.get()._field_generics[_61013_i];;
				{
					
					if ((_61517_t == nullptr) || (_61517_t.get()._field_kind == nullptr)) {
						_case_begin_1ab28b1ac:;
						{
							_1c2d5c8d2_push_generic(&(*_self_), _60843_k,_61013_i);
						}
					}
					else if ((!(_1c2da002e_equals(_61517_t.get()._field_kind, _60843_k)))) {
						_case_begin_1ab28b234:;
						{
							_60859_ok = false;
							return _60859_ok;
						}
					}
					_match_end_1ab28b069:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_60843_k.get()._field_kind;
				_60859_ok = true;
				return _60859_ok;
			}
			_iter_next_1ab2895c8:;
			++it;
			_61013_i++;
			goto _iter_begin_1ab2895c8;
		}
		_iter_end_1ab2895c8:;
	};
	_60859_ok = false;
	return _60859_ok;
}



inline jule::Bool _1c2d5ed24_annotate_kind(_1c2d5adb9_DynamicTypeAnnotation* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _63144_k) {
	jule::Bool _63160_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63160_ok;
	};
	{
		
		if (_1c2d5ea16_annotate_any(&(*_self_), _63144_k)) {
			_case_begin_1ab28e248:;
			{
				_63160_ok = true;
				return _63160_ok;
			}
		}
		else if ((_1c2da1937_prim(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28e2ae:;
			{
				_63160_ok = _1c2d5cbe0_annotate_prim(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da264c_arr(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28de5c:;
			{
				_63160_ok = _1c2d5ceed_annotate_arr(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da28b1_slc(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28dec3:;
			{
				_63160_ok = _1c2d5d30b_annotate_slc(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da3362_map(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28e039:;
			{
				_63160_ok = _1c2d5d9c1_annotate_map(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da2b25_fnc(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28da61:;
			{
				_63160_ok = _1c2d5dcce_annotate_fn(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da1e10_ptr(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28dac7:;
			{
				_63160_ok = _1c2d5e0dc_annotate_ptr(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da1b9b_sptr(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28db3d:;
			{
				_63160_ok = _1c2d5e3ea_annotate_sptr(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else if ((_1c2da2d89_strct(_63144_k.ptr()) != nullptr)) {
			_case_begin_1ab28dba4:;
			{
				_63160_ok = _1c2d5e708_annotate_struct(&(*_self_), _63144_k);
				return _63160_ok;
			}
		}
		else {
			_case_begin_1ab28d9ea:;
			{
				_63160_ok = false;
				return _63160_ok;
			}
		}
		_match_end_1ab28d995:;
	};
}



inline jule::Bool _1c2d60088_annotate(_1c2d5adb9_DynamicTypeAnnotation* _self_) {
	jule::Bool _65936_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_65936_ok = _1c2d5ed24_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _65936_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d5adb9_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1c2d60cae_push_err_token(_1c2d6075e_FnCallArgChecker* _self_, jule::Ptr<_1db7061a7_Token> _67533_token, jule::Str _67548_fmt, jule::Slice<jule::Any> _67561_args) {
	_1c2d0c662_push_err((*_self_)._field_e.get()._field_s.ptr(), _67533_token,_67548_fmt,jule::Any(_67561_args));
}



inline void _1c2d610cd_push_err(_1c2d6075e_FnCallArgChecker* _self_, jule::Str _67927_fmt, jule::Slice<jule::Any> _67940_args) {
	_1c2d60cae_push_err_token(&(*_self_), (*_self_)._field_error_token,_67927_fmt,jule::Any(_67940_args));
}



inline jule::Slice<jule::Ptr<_1dce3a775_ParamIns>> _1c2d61342_get_params(_1c2d6075e_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1dce37783_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1c2d61650_check_counts(_1c2d6075e_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>& _69232_params) {
	jule::Bool _69255_ok = jule::Bool();
	jule::I64 _69317_n = _69232_params.len();;
	if (((_69317_n > 0LL) && _1dce37783_is_self(_69232_params[0LL].get()._field_decl.ptr()))) {
		(_69317_n)--;
	};
	jule::I64 _69817_diff = (_69317_n - (*_self_)._field_args.len());;
	{
		
		if ((_69817_diff == 0LL)) {
			_case_begin_1ab2a0655:;
			{
				_69255_ok = true;
				return _69255_ok;
			}
		}
		else if (((_69317_n > 0LL) && _69232_params[(_69317_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1ab2a06bb:;
			{
				_69255_ok = true;
				return _69255_ok;
			}
		}
		else if (((_69817_diff < 0LL) || (_69817_diff > _69232_params.len()))) {
			_case_begin_1ab2a0732:;
			{
				_1c2d610cd_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69255_ok = false;
				return _69255_ok;
			}
		}
		_match_end_1ab2a05ab:;
	};
	jule::Str _70917_idents = jule::Str();;
	for (; (_69817_diff > 0LL); (_69817_diff)--) {
		{
			_70917_idents+=(jule::Str(", ", 2) + _69232_params[(_69317_n - _69817_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1ab2a27cd:;
	}
	_iter_end_1ab2a27cd:;;
	(_70917_idents).mut_slice(2LL);;
	_1c2d610cd_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70917_idents)}));
	_69255_ok = false;
	return _69255_ok;
}



inline jule::Bool _1c2d61aa1_check_arg(_1c2d6075e_FnCallArgChecker* _self_, jule::Ptr<_1dce3a775_ParamIns>& _71933_p, jule::Ptr<_1c2d6d9e2_Data>& _71952_arg, jule::Ptr<_1db7061a7_Token>& _71969_error_token) {
	jule::Bool _71992_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1dce3d778_parameter_uses_generics(_71933_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_71992_ok=(!(_71933_p.get()._field_decl.get()._field_variadic));
		if (_71992_ok) {
			_1c2d5adb9_DynamicTypeAnnotation _72325_dta = _1c2d5adb9_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71933_p, ._field_a=_71952_arg, ._field_error_token=_71969_error_token, };;
			_71992_ok=_1c2d60088_annotate(&_72325_dta);
		};
		if ((!(_71992_ok))) {
			_1c2d60cae_push_err_token(&(*_self_), _71969_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71992_ok = false;
			return _71992_ok;
		};
	};
	if (_1c2d16083_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _71933_p.get()._field_decl.get()._field_mutable,_71933_p.get()._field_decl.get()._field_reference,_71933_p.get()._field_kind,_71952_arg,_71969_error_token)) {
		_1c2d1326c_check_assign_type((*_self_)._field_e.get()._field_s, _71933_p.get()._field_decl.get()._field_reference,_71933_p.get()._field_kind,_71952_arg,_71969_error_token);
	};
	_71992_ok = true;
	return _71992_ok;
}



inline jule::Bool _1c2d61e58_push(_1c2d6075e_FnCallArgChecker* _self_, jule::Ptr<_1dce3a775_ParamIns>& _74628_p, jule::Ptr<_1dcd6e38a_Expr> _74646_arg) {
	jule::Bool _74660_ok = jule::Bool();
	jule::Ptr<_1c2d9e825_TypeKind> _74717_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74813_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1c2d6d9e2_Data> _74917_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74628_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_74628_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74628_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74917_d=_1c2d908c1_eval_expr_kind((*_self_)._field_e, _74646_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_74717_old;
	(*_self_)._field_e.get()._field_immutable=_74813_old_immut;
	if ((_74917_d == nullptr)) {
		_74660_ok = false;
		return _74660_ok;
	};
	_74660_ok=_1c2d61aa1_check_arg(&(*_self_), _74628_p,_74917_d,_74646_arg.get()._field_token);
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_74917_d.get()._field_model);;
	return _74660_ok;
}



inline jule::Bool _1c2d62310_push_variadic(_1c2d6075e_FnCallArgChecker* _self_, jule::Ptr<_1dce3a775_ParamIns>& _77137_p, jule::I64 _77155_i) {
	jule::Bool _77165_ok = jule::Bool();
	_77165_ok=true;
	jule::Bool _77317_variadiced = false;;
	jule::Bool _77413_more = ((_77155_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1dce32580_SliceExprModel> _77517_model = jule::new_ptr<_1dce32580_SliceExprModel>(_1dce32580_SliceExprModel{._field_elem_kind=_77137_p.get()._field_kind, });;
	jule::Ptr<_1c2d9e825_TypeKind> _77917_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78413_variadic = _77137_p.get()._field_kind.get()._field_variadic;;
	_77137_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_77137_p.get()._field_kind.get()._field_variadic=_78413_variadic;
	});;
	for (; (_77155_i < (*_self_)._field_args.len()); (_77155_i)++) {
		{
			jule::Ptr<_1dcd6e38a_Expr> _79121_arg = (*_self_)._field_args[_77155_i];;
			{
				auto &_match_expr{ _79121_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1dcd71eb4_VariadicExpr>>()) {
					_case_begin_1ab2b0e5c:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=_77137_p.get()._field_kind}), 8)});
					}
				}
				else {
					_case_begin_1ab2b1875:;
					{
						(*_self_)._field_e.get()._field_prefix=_77137_p.get()._field_kind;
					}
				}
				_match_end_1ab2b1820:;
			};
			jule::Ptr<_1c2d6d9e2_Data> _80421_d = _1c2d90bce_eval((*_self_)._field_e, _79121_arg);;
			if ((_80421_d == nullptr)) {
				_77165_ok=false;
				goto _iter_next_1ab2b0445;
			};
			if (_80421_d.get()._field_kind.get()._field_variadic) {
				_77317_variadiced=true;
				_77137_p.get()._field_kind.get()._field_variadic=true;
				_77165_ok=(_77165_ok && _1c2d61aa1_check_arg(&(*_self_), _77137_p,_80421_d,_79121_arg.get()._field_token));
				{
					auto &_match_expr{ _80421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1dce32580_SliceExprModel>>()) {
						_case_begin_1ab2b3a97:;
						{
							_77517_model=_80421_d.get()._field_model.operator jule::Ptr<_1dce32580_SliceExprModel>();
							_77517_model.get()._field_elem_kind=_77137_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1ab2b48de:;
						{
							_77517_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(_80421_d.get()._field_model);;
						}
					}
					_match_end_1ab2b467a:;
				};
				(_77155_i)++;
				goto _iter_end_1ab2b0445;
			};
			_77165_ok=(_77165_ok && _1c2d61aa1_check_arg(&(*_self_), _77137_p,_80421_d,_79121_arg.get()._field_token));
			_77517_model.get()._field_elems = jule::alloc_for_append(_77517_model.get()._field_elems,1);_77517_model.get()._field_elems.__push(_80421_d.get()._field_model);;
		}
	_iter_next_1ab2b0445:;
	}
	_iter_end_1ab2b0445:;;
	(*_self_)._field_e.get()._field_prefix=_77917_old;
	if ((_77317_variadiced && _77413_more)) {
		_1c2d60cae_push_err_token(&(*_self_), (*_self_)._field_args[_77155_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77517_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(static_cast<jule::Any>(_77517_model));;
	};
	return _77165_ok;
}



inline jule::Bool _1c2d6261d_check_args(_1c2d6075e_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>& _84734_params) {
	jule::Bool _84757_ok = jule::Bool();
	jule::Bool _84813_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84757_ok=true;
	jule::I64 _85217_i = 0LL;;
	if (((_84734_params.len() > 0LL) && _1dce37783_is_self(_84734_params[0LL].get()._field_decl.ptr()))) {
		(_85217_i)++;
	};
	_julec_label_iter:;
	while ((_85217_i < _84734_params.len())) {
		{
			jule::Ptr<_1dce3a775_ParamIns> _85921_p = _84734_params[_85217_i];;
			{
				
				if (_85921_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1ab2bb6a4:;
					{
						_84757_ok=(_1c2d62310_push_variadic(&(*_self_), _85921_p,_85217_i) && _84757_ok);
						goto _iter_end_1ab2b94d7;
					}
				}
				else if (((*_self_)._field_args.len() <= _85217_i)) {
					_case_begin_1ab2baede:;
					{
						_84757_ok=false;
						goto _iter_end_1ab2b94d7;
					}
				}
				else {
					_case_begin_1ab2bab37:;
					{
						_84757_ok=(_1c2d61e58_push(&(*_self_), _85921_p,(*_self_)._field_args[_85217_i]) && _84757_ok);
					}
				}
				_match_end_1ab2baac1:;
			};
			(_85217_i)++;
		}
	_iter_next_1ab2b94d7:;
	}
	_iter_end_1ab2b94d7:;;
	(*_self_)._field_e.get()._field_arg=_84813_arg;
	return _84757_ok;
}



inline jule::Bool _1c2d628a4_check_dynamic_type_annotation(_1c2d6075e_FnCallArgChecker* _self_) {
	jule::Bool _87850_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab2bd024:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9d0e8_InsGeneric> _87916_g = *it;
			{
				if ((_87916_g == nullptr)) {
					_1c2d610cd_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87850_ok = false;
					return _87850_ok;
				};
			}
			_iter_next_1ab2bd024:;
			++it;
			goto _iter_begin_1ab2bd024;
		}
		_iter_end_1ab2bd024:;
	};
	_87850_ok = true;
	return _87850_ok;
}



inline jule::Bool _1c2d62b29_check(_1c2d6075e_FnCallArgChecker* _self_) {
	jule::Bool _88826_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1dce3a775_ParamIns>> _88917_params = _1c2d61342_get_params(&(*_self_));;
	_88826_ok=_1c2d61650_check_counts(&(*_self_), _88917_params);
	if ((!(_88826_ok))) {
		_88826_ok = false;
		return _88826_ok;
	};
	_88826_ok=_1c2d6261d_check_args(&(*_self_), _88917_params);
	if ((_88826_ok && (*_self_)._field_dynamic_annotation)) {
		_88826_ok=_1c2d628a4_check_dynamic_type_annotation(&(*_self_));
	};
	return _88826_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d6075e_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1c2d63674_push_err(_1c2d63168_StructLitChecker* _self_, jule::Ptr<_1db7061a7_Token> _91227_token, jule::Str _91242_fmt, jule::Slice<jule::Any> _91255_args) {
	_1c2d70a6b_push_err((*_self_)._field_e.ptr(), _91227_token,_91242_fmt,jule::Any(_91255_args));
}



inline void _1c2d63993_push_suggestion(_1c2d63168_StructLitChecker* _self_, jule::Str _91734_fmt, jule::Slice<jule::Any> _91747_args) {
	_1c2d70d8a_push_suggestion((*_self_)._field_e.ptr(), _91734_fmt,jule::Any(_91747_args));
}



inline void _1c2d63d5b_push_match(_1c2d63168_StructLitChecker* _self_, jule::Ptr<_1dcd62c0d_FieldIns>& _92134_f, jule::Ptr<_1c2d6d9e2_Data>& _92153_d, jule::Ptr<_1db7061a7_Token>& _92168_error_token) {
	;
	if (_1c2d16083_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92134_f.get()._field_kind,_92153_d,_92168_error_token)) {
		_1c2d1326c_check_assign_type((*_self_)._field_e.get()._field_s, false,_92134_f.get()._field_kind,_92153_d,_92168_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1dce31ae0_StructArgExprModel>(_1dce31ae0_StructArgExprModel{._field_field=_92134_f, ._field_expr=_92153_d.get()._field_model}));;
}



inline void _1c2d6417a_check_pair(_1c2d63168_StructLitChecker* _self_, jule::Ptr<_1dcd740d7_FieldExprPair>& _93434_pair, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>& _93461_exprs) {
	jule::Ptr<_1dcd62c0d_FieldIns> _93617_f = _1dcd6457d_find_field((*_self_)._field_s.ptr(), _93434_pair.get()._field_field.get()._field_kind);;
	if ((_93617_f == nullptr)) {
		_1c2d63674_push_err(&(*_self_), _93434_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93434_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _93617_f.get()._field_decl.get()._field_public,_93617_f.get()._field_decl.get()._field_token)))) {
		_1c2d63674_push_err(&(*_self_), _93434_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93434_pair.get()._field_field.get()._field_kind)}));
		_1c2d63993_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93461_exprs;
		auto it = expr.begin();
		_iter_begin_1ab2c80c8:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd6e38a_Expr> _94821_expr = *it;
			{
				{
					auto &_match_expr{ _94821_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd740d7_FieldExprPair>>()) {
						_case_begin_1ab2c898b:;
						{
							jule::Ptr<_1dcd740d7_FieldExprPair> _95125_dpair = _94821_expr.get()._field_kind.operator jule::Ptr<_1dcd740d7_FieldExprPair>();;
							{
								
								if ((_93434_pair == _95125_dpair)) {
									_case_begin_1ab2c9959:;
									{
										goto _iter_end_1ab2c80c8;
									}
								}
								else if ((_93434_pair.get()._field_field.get()._field_kind == _95125_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1ab2c99d1:;
									{
										_1c2d63674_push_err(&(*_self_), _93434_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93434_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1ab2c80c8;
									}
								}
								_match_end_1ab2c989e:;
							};
						}
					}
					_match_end_1ab2c87d2:;
				};
			}
			_iter_next_1ab2c80c8:;
			++it;
			goto _iter_begin_1ab2c80c8;
		}
		_iter_end_1ab2c80c8:;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _96217_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96217_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93617_f.get()._field_kind;
	jule::Ptr<_1c2d6d9e2_Data> _96617_d = _1c2d908c1_eval_expr_kind((*_self_)._field_e, _93434_pair.get()._field_expr.get()._field_kind);;
	if ((_96617_d == nullptr)) {
		return;;
	};
	_1c2d63d5b_push_match(&(*_self_), _93617_f,_96617_d,_93434_pair.get()._field_field);
}



inline jule::Bool _1c2d64488_ready_exprs(_1c2d63168_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>& _97335_exprs) {
	jule::Bool _97417_ok = true;;
	{
		auto &expr = _97335_exprs;
		auto it = expr.begin();
		_iter_begin_1ab2cd496:;
		if (it != expr.end()) {
			jule::I64 _97514_i = it - expr.begin();
			jule::Ptr<_1dcd6e38a_Expr> _97521_expr = *it;
			{
				{
					auto &_match_expr{ _97521_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd757c0_KeyValPair>>()) {
						_case_begin_1ab2ce200:;
						{
							jule::Ptr<_1dcd757c0_KeyValPair> _97825_pair = _97521_expr.get()._field_kind.operator jule::Ptr<_1dcd757c0_KeyValPair>();;
							{
								auto &_match_expr{ _97825_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1dcd71403_IdentExpr>>()) {
									_case_begin_1ab2cea91:;
									{
										goto _match_end_1ab2d0025;
									}
								}
								else {
									_case_begin_1ab2d029a:;
									{
										_1c2d63674_push_err(&(*_self_), _97825_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97417_ok=false;
										goto _iter_next_1ab2cd496;
									}
								}
								_match_end_1ab2d0025:;
							};
							_97335_exprs[_97514_i].get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd740d7_FieldExprPair>(_1dcd740d7_FieldExprPair{._field_field=_97825_pair.get()._field_key.get()._field_token, ._field_expr=_97825_pair.get()._field_val}));
						}
					}
					_match_end_1ab2ce046:;
				};
			}
			_iter_next_1ab2cd496:;
			++it;
			_97514_i++;
			goto _iter_begin_1ab2cd496;
		}
		_iter_end_1ab2cd496:;
	};
	return _97417_ok;
}



inline void _1c2d6470d_check(_1c2d63168_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>& _99729_exprs) {
	if ((_99729_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1c2d64488_ready_exprs(&(*_self_), _99729_exprs)))) {
		return;;
	};
	jule::Bool _100617_paired = false;;
	{
		auto &expr = _99729_exprs;
		auto it = expr.begin();
		_iter_begin_1ab2cd331:;
		if (it != expr.end()) {
			jule::I64 _100714_i = it - expr.begin();
			jule::Ptr<_1dcd6e38a_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ _100721_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd740d7_FieldExprPair>>()) {
						_case_begin_1ab2d8649:;
						{
							jule::Ptr<_1dcd740d7_FieldExprPair> _101025_pair = _100721_expr.get()._field_kind.operator jule::Ptr<_1dcd740d7_FieldExprPair>();;
							if (((_100714_i > 0LL) && (!(_100617_paired)))) {
								_1c2d63674_push_err(&(*_self_), _101025_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100617_paired=true;
							_1c2d6417a_check_pair(&(*_self_), _101025_pair,_99729_exprs);
						}
					}
					else {
						_case_begin_1ab2d3534:;
						{
							if (_100617_paired) {
								_1c2d63674_push_err(&(*_self_), _100721_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100714_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1c2d63674_push_err(&(*_self_), _100721_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1ab2cd331;
							};
							jule::Ptr<_1dcd62c0d_FieldIns> _102525_field = (*_self_)._field_s.get()._field_fields[_100714_i];;
							if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _102525_field.get()._field_decl.get()._field_public,_102525_field.get()._field_decl.get()._field_token)))) {
								_1c2d63674_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1c2d63993_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c2d9e825_TypeKind> _103325_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103325_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102525_field.get()._field_kind;
							jule::Ptr<_1c2d6d9e2_Data> _103725_d = _1c2d908c1_eval_expr_kind((*_self_)._field_e, _100721_expr.get()._field_kind);;
							if ((_103725_d == nullptr)) {
								goto _iter_next_1ab2cd331;
							};
							_1c2d63d5b_push_match(&(*_self_), _102525_field,_103725_d,_100721_expr.get()._field_token);
						}
					}
					_match_end_1ab2d33ad:;
				};
			}
			_iter_next_1ab2cd331:;
			++it;
			_100714_i++;
			goto _iter_begin_1ab2cd331;
		}
		_iter_end_1ab2cd331:;
	};
	if ((!(_100617_paired))) {
		jule::I64 _104817_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _104921_diff = (_104817_n - _99729_exprs.len());;
		{
			
			if ((_104921_diff <= 0LL)) {
				_case_begin_1ab2db031:;
				{
					return;;
				}
			}
			_match_end_1ab2dadcc:;
		};
		jule::Str _105521_idents = jule::Str();;
		for (; (_104921_diff > 0LL); (_104921_diff)--) {
			{
				_105521_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_104817_n - _104921_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1ab2db97c:;
		}
		_iter_end_1ab2db97c:;;
		(_105521_idents).mut_slice(2LL);;
		_1c2d63674_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105521_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d63168_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d651e2_build_var(_1c2d64c4c_RangeChecker* _self_, jule::Ptr<_1dcd7cb5c_VarDecl>& _107429_decl) {
	jule::Ptr<_1c2d266ae_Var> _107517_v = _1dce4431c_build_var(_107429_decl);;
	return _107517_v;
}



inline void _1c2d653bd_set_size_key(_1c2d64c4c_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1db70894b_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1c2d651e2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1ab2e0673:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1c2d25746_IterRelation>(_1c2d25746_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1c2d266ae_Var>()});
			}
		}
		_match_end_1ab2e05b8:;
	};
}



inline void _1c2d657a8_check_range_expr_validity(_1c2d64c4c_RangeChecker* _self_, jule::Ptr<_1c2d6d9e2_Data>& _110549_d, jule::Ptr<_1c2d266ae_Var>& _110560_key, jule::Ptr<_1c2d9e825_TypeKind>& _110576_k) {
	jule::Bool _110617__mut = _110560_key.get()._field_mutable;;
	if ((_110617__mut && (!(_1c2da0c22_mutable(_110576_k.ptr()))))) {
		_110617__mut=false;
	};
	_1c2d16083_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _110617__mut,_110560_key.get()._field_reference,_110560_key.get()._field_kind.get()._field_kind,_110549_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1c2d65995_check_slice(_1c2d64c4c_RangeChecker* _self_) {
	_1c2d653bd_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1db70894b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2da84dd_Slc> _112417_slc = _1c2da28b1_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c2d651e2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_112417_slc.get()._field_elem});
	_1c2d657a8_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_112417_slc.get()._field_elem);
}



inline void _1c2d65b71_check_array(_1c2d64c4c_RangeChecker* _self_) {
	_1c2d653bd_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1db70894b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2daa688_Arr> _113717_arr = _1c2da264c_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c2d651e2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_113717_arr.get()._field_elem});
	_1c2d657a8_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_113717_arr.get()._field_elem);
}



inline void _1c2d65d4c_check_map_key_a(_1c2d64c4c_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1db70894b_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2da9a94_Map> _114917_m = _1c2da3362_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1c2d651e2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_114917_m.get()._field_key});
	jule::Ptr<_1c2d6d9e2_Data> _115317_d = jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d)));;
	_115317_d.get()._field_kind=_114917_m.get()._field_key;
	_1c2d657a8_check_range_expr_validity(&(*_self_), _115317_d,(*_self_)._field_kind.get()._field_key_a,_114917_m.get()._field_key);
}



inline void _1c2d66028_check_map_key_b(_1c2d64c4c_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1db70894b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1c2da9a94_Map> _116417_m = _1c2da3362_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1c2d651e2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_116417_m.get()._field_val});
	jule::Ptr<_1c2d6d9e2_Data> _116817_d = jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d)));;
	_116817_d.get()._field_kind=_116417_m.get()._field_val;
	_1c2d657a8_check_range_expr_validity(&(*_self_), _116817_d,(*_self_)._field_kind.get()._field_key_b,_116417_m.get()._field_val);
}



inline void _1c2d66204_check_map(_1c2d64c4c_RangeChecker* _self_) {
	_1c2d65d4c_check_map_key_a(&(*_self_));
	_1c2d66028_check_map_key_b(&(*_self_));
}



inline void _1c2d663d0_check_str(_1c2d64c4c_RangeChecker* _self_) {
	_1c2d653bd_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1db70894b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1c2d651e2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1c2d66644_check(_1c2d64c4c_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ab304236:;
		}
		else if ((_1c2da28b1_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab303532:;
			{
				_1c2d65995_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1c2da264c_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab303598:;
			{
				_1c2d65b71_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1c2da3362_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab30360e:;
			{
				_1c2d66204_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1ab3034bb:;
			{
				jule::Ptr<_1c2da42ec_Prim> _120717_prim = _1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_120717_prim != nullptr) && _1c2da7531_is_str(_120717_prim.ptr()))) {
					_1c2d663d0_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1ab3033de:;
	};
	_1c2d0c662_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d64c4c_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c2d6738c_prepare_types(_1c2d66dd6_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1dce3c766_types((*_self_)._field_f.ptr());
	};
}



inline void _1c2d67612_prepare_exprs(_1c2d66dd6_RetTypeChecker* _self_, jule::Ptr<_1dcd6e38a_Expr>& _123637_e) {
	if ((_123637_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123637_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd70017_TupleExpr>>()) {
			_case_begin_1ab309439:;
			{
				(*_self_)._field_exprs=_123637_e.get()._field_kind.operator jule::Ptr<_1dcd70017_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1ab3090a4:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123637_e);;
			}
		}
		_match_end_1ab308b64:;
	};
}



inline void _1c2d677dd_ret_vars(_1c2d66dd6_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1dce38e05_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1c2d266ae_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1c2cd9a07_ScopeChecker> _125417_root_scope = _1c2cdcb1a_get_root((*_self_)._field_sc);;
	jule::I64 _125617_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ab30c041:;
		if (it != expr.end()) {
			jule::I64 _125713_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _125716_ident = *it;
			{
				if (((!(_1db70894b_is_ignore_ident(_125716_ident.get()._field_kind))) && (!(_1db708be3_is_anon_ident(_125716_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_125417_root_scope.get()._field_table.get()._field_vars[_125617_j]);;
					(_125617_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1c2d266ae_Var>(_1c2d266ae_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=(*_self_)._field_types[_125713_i]}), }));;
				};
			}
			_iter_next_1ab30c041:;
			++it;
			_125713_i++;
			goto _iter_begin_1ab30c041;
		}
		_iter_end_1ab30c041:;
	};
	if ((_125617_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1c2d679b9_check_exprs(_1c2d66dd6_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _128017_datas = jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ab310cae:;
		if (it != expr.end()) {
			jule::I64 _128214_i = it - expr.begin();
			jule::Ptr<_1dcd6e38a_Expr> _128221_expr = *it;
			{
				if ((_128214_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1ab310cae;
				};
				jule::Ptr<_1c2d9e825_TypeKind> _128721_t = (*_self_)._field_types[_128214_i];;
				jule::Ptr<_1c2d6d9e2_Data> _128921_d = _1c2d90edc_eval_expr(_1c2d12964_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1c2dba3bd_Lookup>((*_self_)._field_sc, 0),_128721_t), _128221_expr);;
				if ((_128921_d == nullptr)) {
					goto _iter_next_1ab310cae;
				};
				_128017_datas = jule::alloc_for_append(_128017_datas,1);_128017_datas.__push(_128921_d);;
				if (((!(_128921_d.get()._field_mutable)) && _1c2da0c22_mutable(_128921_d.get()._field_kind.ptr()))) {
					_1c2d0c662_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1c2d594a0_AssignTypeChecker _130121_ac = _1c2d594a0_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_128721_t, ._field_d=_128921_d, ._field_error_token=(*_self_)._field_error_token};;
				_1c2d5a627_check(&_130121_ac);
			}
			_iter_next_1ab310cae:;
			++it;
			_128214_i++;
			goto _iter_begin_1ab310cae;
		}
		_iter_end_1ab310cae:;
	};
	if ((_128017_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce340ba_TupleExprModel>(_1dce340ba_TupleExprModel{._field_datas=_128017_datas}));
	} else if ((_128017_datas.len() == 1LL)) {
		(*_self_)._field_model=_128017_datas[0LL].get()._field_model;
	};
}



inline jule::Bool _1c2d67cc7_check(_1c2d66dd6_RetTypeChecker* _self_, jule::Ptr<_1dcd6e38a_Expr>& _132029_e) {
	_1c2d6738c_prepare_types(&(*_self_));
	_1c2d67612_prepare_exprs(&(*_self_), _132029_e);
	_1c2d677dd_ret_vars(&(*_self_));
	jule::I64 _132513_n = (*_self_)._field_exprs.len();;
	if (((_132513_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1dce39b1a_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1c2d0c662_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_132513_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1dce38e05_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1c2d0c662_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_132513_n > (*_self_)._field_types.len())) {
		_1c2d0c662_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_132513_n < (*_self_)._field_types.len())) {
		_1c2d0c662_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1c2d679b9_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d66dd6_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d692a1_find_package(_1c2d68c84_SymbolTable* _self_, jule::Str _2635_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab31c34d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_ident == _2635_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1ab31c34d:;
			++it;
			goto _iter_begin_1ab31c34d;
		}
		_iter_end_1ab31c34d:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c2d695ae_select_package(_1c2d68c84_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)> _3837_selector) {
	if ((_3837_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab31d2e9:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _4321_pkg = *it;
			{
				if (_3837_selector(_4321_pkg)) {
					return _4321_pkg;
				};
			}
			_iter_next_1ab31d2e9:;
			++it;
			goto _iter_begin_1ab31d2e9;
		}
		_iter_end_1ab31d2e9:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d69966_find_var(_1c2d68c84_SymbolTable* _self_, jule::Str _5331_ident, jule::Bool _5343_cpp_linked) {
	return _1c2d6b528___find_var(&(*_self_), _5331_ident,_5343_cpp_linked,false);
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d69d1d_find_type_alias(_1c2d68c84_SymbolTable* _self_, jule::Str _5938_ident, jule::Bool _5950_cpp_linked) {
	return _1c2d6b979___find_type_alias(&(*_self_), _5938_ident,_5950_cpp_linked,false);
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2d6a1c5_find_struct(_1c2d68c84_SymbolTable* _self_, jule::Str _6534_ident, jule::Bool _6546_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab320d24:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _6621_s = *it;
			{
				if (((_6621_s.get()._field_ident == _6534_ident) && (_6621_s.get()._field_cpp_linked == _6546_cpp_linked))) {
					return _6621_s;
				};
			}
			_iter_next_1ab320d24:;
			++it;
			goto _iter_begin_1ab320d24;
		}
		_iter_end_1ab320d24:;
	};
	return nullptr;
}



inline jule::Ptr<_1dce38993_Fn> _1c2d6a57c_find_fn(_1c2d68c84_SymbolTable* _self_, jule::Str _7630_ident, jule::Bool _7642_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab3222ba:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _7721_f = *it;
			{
				if (((_7721_f.get()._field_ident == _7630_ident) && (_7721_f.get()._field_cpp_linked == _7642_cpp_linked))) {
					return _7721_f;
				};
			}
			_iter_next_1ab3222ba:;
			++it;
			goto _iter_begin_1ab3222ba;
		}
		_iter_end_1ab3222ba:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2d6a88a_find_trait(_1c2d68c84_SymbolTable* _self_, jule::Str _8733_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ab323541:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> _8821_t = *it;
			{
				if ((_8821_t.get()._field_ident == _8733_ident)) {
					return _8821_t;
				};
			}
			_iter_next_1ab323541:;
			++it;
			goto _iter_begin_1ab323541;
		}
		_iter_end_1ab323541:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2d6ab98_find_enum(_1c2d68c84_SymbolTable* _self_, jule::Str _9832_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ab3244cb:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4070a_Enum> _9921_e = *it;
			{
				if ((_9921_e.get()._field_ident == _9832_ident)) {
					return _9921_e;
				};
			}
			_iter_next_1ab3244cb:;
			++it;
			goto _iter_begin_1ab3244cb;
		}
		_iter_end_1ab3244cb:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d6aea6_find_type_enum(_1c2d68c84_SymbolTable* _self_, jule::Str _10937_ident) {
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ab3249a4:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c41d05_TypeEnum> _11021_e = *it;
			{
				if ((_11021_e.get()._field_ident == _10937_ident)) {
					return _11021_e;
				};
			}
			_iter_next_1ab3249a4:;
			++it;
			goto _iter_begin_1ab3249a4;
		}
		_iter_end_1ab3249a4:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d6b528___find_var(_1c2d68c84_SymbolTable* _self_, jule::Str _12029_ident, jule::Bool _12041_cpp_linked, jule::Bool _12059_reverse) {
	if (_12059_reverse) {
		jule::I64 _12221_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_12221_i >= 0LL); (_12221_i)--) {
			{
				jule::Ptr<_1c2d266ae_Var> _12425_v = (*_self_)._field_vars[_12221_i];;
				if (((_12425_v.get()._field_ident == _12029_ident) && (_12425_v.get()._field_cpp_linked == _12041_cpp_linked))) {
					return _12425_v;
				};
			}
		_iter_next_1ab327501:;
		}
		_iter_end_1ab327501:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1ab326e5c:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d266ae_Var> _13025_v = *it;
				{
					if (((_13025_v.get()._field_ident == _12029_ident) && (_13025_v.get()._field_cpp_linked == _12041_cpp_linked))) {
						return _13025_v;
					};
				}
				_iter_next_1ab326e5c:;
				++it;
				goto _iter_begin_1ab326e5c;
			}
			_iter_end_1ab326e5c:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2d6b979___find_type_alias(_1c2d68c84_SymbolTable* _self_, jule::Str _13936_ident, jule::Bool _13948_cpp_linked, jule::Bool _13966_reverse) {
	if (_13966_reverse) {
		jule::I64 _14121_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_14121_i >= 0LL); (_14121_i)--) {
			{
				jule::Ptr<_1c2d9db32_TypeAlias> _14325_ta = (*_self_)._field_type_aliases[_14121_i];;
				if (((_14325_ta.get()._field_ident == _13936_ident) && (_14325_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
					return _14325_ta;
				};
			}
		_iter_next_1ab32a7ce:;
		}
		_iter_end_1ab32a7ce:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1ab32a23a:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d9db32_TypeAlias> _14925_ta = *it;
				{
					if (((_14925_ta.get()._field_ident == _13936_ident) && (_14925_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
						return _14925_ta;
					};
				}
				_iter_next_1ab32a23a:;
				++it;
				goto _iter_begin_1ab32a23a;
			}
			_iter_end_1ab32a23a:;
		};
	};
	return nullptr;
}



inline jule::Any _1c2d6bd31_def_by_ident(_1c2d68c84_SymbolTable* _self_, jule::Str _16031_ident, jule::Bool _16043_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab32c21a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _16121_v = *it;
			{
				if (((_16121_v.get()._field_ident == _16031_ident) && (_16121_v.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16121_v);
				};
			}
			_iter_next_1ab32c21a:;
			++it;
			goto _iter_begin_1ab32c21a;
		}
		_iter_end_1ab32c21a:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ab32da46:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9db32_TypeAlias> _16721_ta = *it;
			{
				if (((_16721_ta.get()._field_ident == _16031_ident) && (_16721_ta.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16721_ta);
				};
			}
			_iter_next_1ab32da46:;
			++it;
			goto _iter_begin_1ab32da46;
		}
		_iter_end_1ab32da46:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab32e838:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _17321_s = *it;
			{
				if (((_17321_s.get()._field_ident == _16031_ident) && (_17321_s.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17321_s);
				};
			}
			_iter_next_1ab32e838:;
			++it;
			goto _iter_begin_1ab32e838;
		}
		_iter_end_1ab32e838:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab3306b3:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _17921_f = *it;
			{
				if (((_17921_f.get()._field_ident == _16031_ident) && (_17921_f.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17921_f);
				};
			}
			_iter_next_1ab3306b3:;
			++it;
			goto _iter_begin_1ab3306b3;
		}
		_iter_end_1ab3306b3:;
	};
	if (_16043_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ab331a5a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> _18921_t = *it;
			{
				if ((_18921_t.get()._field_ident == _16031_ident)) {
					return jule::Any(_18921_t);
				};
			}
			_iter_next_1ab331a5a:;
			++it;
			goto _iter_begin_1ab331a5a;
		}
		_iter_end_1ab331a5a:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ab332495:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4070a_Enum> _19521_e = *it;
			{
				if ((_19521_e.get()._field_ident == _16031_ident)) {
					return jule::Any(_19521_e);
				};
			}
			_iter_next_1ab332495:;
			++it;
			goto _iter_begin_1ab332495;
		}
		_iter_end_1ab332495:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ab333221:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c41d05_TypeEnum> _20121_te = *it;
			{
				if ((_20121_te.get()._field_ident == _16031_ident)) {
					return jule::Any(_20121_te);
				};
			}
			_iter_next_1ab333221:;
			++it;
			goto _iter_begin_1ab333221;
		}
		_iter_end_1ab333221:;
	};
	return nullptr;
}



inline jule::Bool _1c2d6c282_is_duplicated_ident(_1c2d68c84_SymbolTable* _self_, jule::Uintptr _21334_itself, jule::Str _21351_ident, jule::Bool _21363_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab333870:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> &_21416_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_v) != _21334_itself) && (_21416_v.get()._field_ident == _21351_ident)) && (_21416_v.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ab333870:;
			++it;
			goto _iter_begin_1ab333870;
		}
		_iter_end_1ab333870:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ab3354ed:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9db32_TypeAlias> &_22016_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22016_ta) != _21334_itself) && (_22016_ta.get()._field_ident == _21351_ident)) && (_22016_ta.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ab3354ed:;
			++it;
			goto _iter_begin_1ab3354ed;
		}
		_iter_end_1ab3354ed:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab33519b:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> &_22616_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22616_s) != _21334_itself) && (_22616_s.get()._field_ident == _21351_ident)) && (_22616_s.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ab33519b:;
			++it;
			goto _iter_begin_1ab33519b;
		}
		_iter_end_1ab33519b:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ab336312:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> &_23216_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23216_f) != _21334_itself) && (_23216_f.get()._field_ident == _21351_ident)) && (_23216_f.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ab336312:;
			++it;
			goto _iter_begin_1ab336312;
		}
		_iter_end_1ab336312:;
	};
	if (_21363_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ab338e19:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c3d54e_Trait> &_24216_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24216_t) != _21334_itself) && (_24216_t.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1ab338e19:;
			++it;
			goto _iter_begin_1ab338e19;
		}
		_iter_end_1ab338e19:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ab339aa7:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4070a_Enum> &_24816_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24816_e) != _21334_itself) && (_24816_e.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1ab339aa7:;
			++it;
			goto _iter_begin_1ab339aa7;
		}
		_iter_end_1ab339aa7:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ab33aa86:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c41d05_TypeEnum> &_25416_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25416_te) != _21334_itself) && (_25416_te.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1ab33aa86:;
			++it;
			goto _iter_begin_1ab33aa86;
		}
		_iter_end_1ab33aa86:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d68c84_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "type_enums:" << _Src._field_type_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2d6ddcc_is_nil(_1c2d6d9e2_Data* _self_) {
	return _1c2da0749_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1c2d6e141_is_void(_1c2d6d9e2_Data* _self_) {
	return _1c2da09ad_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1c2d6e3a5_is_const(_1c2d6d9e2_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1c2d6e6b3_good_operand(_1c2d6d9e2_Data* _self_, jule::Ptr<_1c2d6d9e2_Data>& _9636_other) {
	if ((_1c2da23d8_tenm(_9636_other.get()._field_kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1c2da1937_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_1c2da7795_is_any(_1c2da1937_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_1c2da30ed_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_1c2da0749_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d6d9e2_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d6ea6a_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1c2d70a6b_push_err(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _12727_token, jule::Str _12742_fmt, jule::Slice<jule::Any> _12755_args) {
	_1c2d0c662_push_err((*_self_)._field_s.ptr(), _12727_token,_12742_fmt,jule::Any(_12755_args));
}



inline void _1c2d70d8a_push_suggestion(_1c2d70560_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1c2d0c981_push_suggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1c2d71066_allow_builtin(_1c2d70560_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1c2d71242_disallow_builtin(_1c2d70560_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1c2d714a6_is_unsafe(_1c2d70560_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1c2d7171a_is_global(_1c2d70560_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d099a0_Sema>>()) {
			_case_begin_1ab36a8a7:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab36a797:;
			{
				return false;
			}
		}
		_match_end_1ab36a3ac:;
	};
}



inline jule::Bool _1c2d719e5_apply_numeric_prefix(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _15944_d) {
	if (((((_15944_d == nullptr) || (!(_1c2d6e3a5_is_const(_15944_d.ptr())))) || (_1c2da1937_prim(_15944_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1c2da42ec_Prim> _16613_prim = _1c2da1937_prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1c2cd2406_is_float(_1c2da4660_to_str(_16613_prim.ptr()))) {
			_case_begin_1ab36d1b2:;
			{
				_15944_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>((*((*_self_)._field_prefix)));
				_1dce2b0e5_set_f64(_15944_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1dce2a37a_as_f64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2cd1a54_is_sig_int(_1c2da4660_to_str(_16613_prim.ptr()))) {
			_case_begin_1ab36d228:;
			{
				if ((!(_1c2d3ee25_sig_assignable(_1c2da4660_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>((*((*_self_)._field_prefix)));
				_1dce2a600_set_i64(_15944_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_15944_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2cd1d40_is_unsig_int(_1c2da4660_to_str(_16613_prim.ptr()))) {
			_case_begin_1ab36d28e:;
			{
				if ((!(_1c2d56513_unsig_assignable(_1c2da4660_to_str(_16613_prim.ptr()),_15944_d)))) {
					return false;
				};
				_15944_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>((*((*_self_)._field_prefix)));
				_1dce2a875_set_u64(_15944_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_15944_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1ab36ce70:;
	};
	return true;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d71c59_lit_nil(_1c2d70560_Eval* _self_) {
	jule::Ptr<_1dcdbd1a8_Const> _19517_constant = static__1dce28a93_new_nil();;
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_19517_constant), ._field_decl=false, ._field_constant=_19517_constant});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72067_lit_str(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr>& _20623_l) {
	jule::Str _20717_s = _20623_l.get()._field_value.slice(1LL,(_20623_l.get()._field_value.len() - 1LL));;
	if (_1db70750a_is_raw_str(_20623_l.get()._field_value)) {
		_20717_s=_1c2d56821_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	} else {
		_20717_s=_1c2d56ac9_to_str(static_cast<jule::Slice<jule::U8>>(_20717_s));
	};
	jule::Ptr<_1dcdbd1a8_Const> _21317_constant = static__1dce285ed_new_str(_20717_s);;
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("str", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_21317_constant), ._field_decl=false, ._field_constant=_21317_constant});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72375_lit_bool(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr>& _22724_l) {
	jule::Ptr<_1dcdbd1a8_Const> _22817_constant = static__1dce28356_new_bool((_22724_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_22817_constant), ._field_decl=false, ._field_constant=_22817_constant});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72683_lit_rune(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr>& _24124_l) {
	;
	;
	jule::Str _24513_lt = _24124_l.get()._field_value.slice(1LL,(_24124_l.get()._field_value.len() - 1LL));;
	jule::I32 _24613_r = _1c2d3ea07_to_rune(static_cast<jule::Slice<jule::U8>>(_24513_lt));;
	jule::Ptr<_1c2d6d9e2_Data> _24717_data = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24613_r)))});;
	jule::Bool _25513_is_ascii = _1c2d3e8c5_is_ascii(_24613_r);;
	if (_25513_is_ascii) {
		_24717_data.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u8", 2)), 6)});
	} else {
		_24717_data.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i32", 3)), 6)});
	};
	_24717_data.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce35d47_RuneExprModel>(_1dce35d47_RuneExprModel{._field_code=_24613_r}));
	_24717_data.get()._field_is_rune=true;
	return _24717_data;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72991_lit_float(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr>& _27125_l) {
	;
	jule::F64 _27413_f = ({
		auto except = _1c2c328b7_parse_float(_27125_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1dcdbd1a8_Const> _27517_constant = static__1dce28895_new_f64(_27413_f);;
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_27517_constant), ._field_decl=false, ._field_constant=_27517_constant});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d72c9e_lit_int(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr>& _28927_l) {
	;
	jule::Str _29217_lit = _28927_l.get()._field_value;;
	jule::I64 _29317_base = 0LL;;
	{
		
		if (_207a6eee9_has_prefix(_29217_lit,jule::Str("0x", 2))) {
			_case_begin_1ab37ed3e:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=16LL;
			}
		}
		else if (_207a6eee9_has_prefix(_29217_lit,jule::Str("0b", 2))) {
			_case_begin_1ab37ea20:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=2LL;
			}
		}
		else if (_207a6eee9_has_prefix(_29217_lit,jule::Str("0o", 2))) {
			_case_begin_1ab37ea86:;
			{
				(_29217_lit).mut_slice(2LL);;
				_29317_base=8LL;
			}
		}
		else if (((_29217_lit[0LL] == '0') && (_29217_lit.len() > 1LL))) {
			_case_begin_1ab37e712:;
			{
				(_29217_lit).mut_slice(1LL);;
				_29317_base=8LL;
			}
		}
		else {
			_case_begin_1ab37e69b:;
			{
				_29317_base=10LL;
			}
		}
		_match_end_1ab37e646:;
	};
	jule::Ptr<_1c2d6d9e2_Data> _31317_d = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31917_ok = true;;
	jule::I64 _32013_sig = ({
		auto except = _1c2c2b141_parse_int(_29217_lit,_29317_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31917_ok=false;
			0LL;
		});
	});;
	if (_31917_ok) {
		_31317_d.get()._field_constant=static__1dce2808c_new_i64(_32013_sig);
		_31317_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _33017_unsig = ({
			auto except = _1c2c2abce_parse_uint(_29217_lit,_29317_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1c2d70a6b_push_err(&(*_self_), _28927_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_31317_d.get()._field_constant=static__1dce281be_new_u64(_33017_unsig);
		_31317_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("uint", 4)), 6)});
	};
	_31317_d.get()._field_model=static_cast<jule::Any>(_31317_d.get()._field_constant);
	if ((!(_1c2d719e5_apply_numeric_prefix(&(*_self_), _31317_d)))) {
		_1c2d9959a_fit_bitsize(_31317_d);
	};
	return _31317_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d730ac_lit_num(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr>& _35127_l) {
	{
		
		if (_1db708165_is_float(_35127_l.get()._field_value)) {
			_case_begin_1ab387b8d:;
			{
				return _1c2d72991_lit_float(&(*_self_), _35127_l);
			}
		}
		else {
			_case_begin_1ab38741d:;
			{
				return _1c2d72c9e_lit_int(&(*_self_), _35127_l);
			}
		}
		_match_end_1ab387363:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d733ba_eval_lit(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd703be_LitExpr> _36027_lit) {
	{
		
		if (_1dcd70721_is_nil(_36027_lit.ptr())) {
			_case_begin_1ab388d6a:;
			{
				return _1c2d71c59_lit_nil(&(*_self_));
			}
		}
		else if (_1db707263_is_str(_36027_lit.get()._field_value)) {
			_case_begin_1ab38874e:;
			{
				return _1c2d72067_lit_str(&(*_self_), _36027_lit);
			}
		}
		else if (_1db707dbd_is_bool(_36027_lit.get()._field_value)) {
			_case_begin_1ab3887c6:;
			{
				return _1c2d72375_lit_bool(&(*_self_), _36027_lit);
			}
		}
		else if (_1db7077a2_is_rune(_36027_lit.get()._field_value)) {
			_case_begin_1ab38884d:;
			{
				return _1c2d72683_lit_rune(&(*_self_), _36027_lit);
			}
		}
		else if (_1db70840c_is_num(_36027_lit.get()._field_value)) {
			_case_begin_1ab388a6d:;
			{
				return _1c2d730ac_lit_num(&(*_self_), _36027_lit);
			}
		}
		else {
			_case_begin_1ab3881ee:;
			{
				return nullptr;
			}
		}
		_match_end_1ab388144:;
	};
}



inline jule::Any _1c2d736c8_find_builtins(_1c2d70560_Eval* _self_, jule::Str _37732_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d01854_ImportInfo>>()) {
			_case_begin_1ab389156:;
			{
				jule::Any _38021_def = _1c2d9938b_find_builtins_import(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c2d01854_ImportInfo>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d099a0_Sema>>()) {
			_case_begin_1ab3891bc:;
			{
				jule::Any _38521_def = _1c2d9a029_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c2d099a0_Sema>());;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab38b422:;
			{
				jule::Any _39021_def = _1c2d9a029_find_builtins_sema(_37732_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>().get()._field_s);;
				if ((_39021_def != nullptr)) {
					return jule::Any(_39021_def);
				};
			}
		}
		_match_end_1ab388ebe:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1c2dc8cd3_find_builtin_def(_37732_ident));
}



inline jule::Any _1c2d73a80_get_def(_1c2d70560_Eval* _self_, jule::Str _40126_ident, jule::Bool _40138_cpp_linked) {
	if ((!(_40138_cpp_linked))) {
		jule::Ptr<_1c2c4070a_Enum> _40321_enm = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db9e6c_find_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40321_enm != nullptr)) {
			return jule::Any(_40321_enm);
		};
		jule::Ptr<_1c2c41d05_TypeEnum> _40821_tenm = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2dba27a_find_type_enum((*_self_)._field_lookup, _40126_ident);;
		if ((_40821_tenm != nullptr)) {
			return jule::Any(_40821_tenm);
		};
	};
	jule::Ptr<_1c2d266ae_Var> _41417_v = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db8c3a_find_var((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41417_v != nullptr)) {
		return jule::Any(_41417_v);
	};
	jule::Ptr<_1dce38993_Fn> _41917_f = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db9851_find_fn((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_41917_f != nullptr)) {
		return jule::Any(_41917_f);
	};
	jule::Ptr<_1dcd5a596_Struct> _42417_s = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db9499_find_struct((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42417_s != nullptr)) {
		return jule::Any(_42417_s);
	};
	jule::Ptr<_1c2d9db32_TypeAlias> _42917_ta = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db90e2_find_type_alias((*_self_)._field_lookup, _40126_ident,_40138_cpp_linked);;
	if ((_42917_ta != nullptr)) {
		return jule::Any(_42917_ta);
	};
	return jule::Any(_1c2d736c8_find_builtins(&(*_self_), _40126_ident));
}



inline void _1ab3a2c52_push_reference(_1c2d70560_Eval* _self_, jule::Ptr<_1dce3b644_FnIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab3a4913:;
			{
				jule::Ptr<_1c2cd9a07_ScopeChecker> _44021_sc = _1c2cdcd7e_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>());;
				if ((!(_1ab3a557e_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1dce4024c_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1ab3a423c:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ab3a557e_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1dce4024c_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1ab3a41d7:;
	};
}

inline void _1ab3b77c2_push_reference(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d266ae_Var>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab3b920d:;
			{
				jule::Ptr<_1c2cd9a07_ScopeChecker> _44021_sc = _1c2cdcd7e_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>());;
				if ((!(_1ab3b9d79_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1dce4024c_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1ab3b8a37:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ab3b9d79_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1dce4024c_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1ab3b89d2:;
	};
}

inline void _1ab45c03c_push_reference(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd868e1_StructIns>& _43741_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab45dbba:;
			{
				jule::Ptr<_1c2cd9a07_ScopeChecker> _44021_sc = _1c2cdcd7e_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>());;
				if ((!(_1ab45e836_exist(_44021_sc.get()._field_owner.get()._field_refers.ptr(), _43741_ref)))) {
					_1dce4024c_push(_44021_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		else {
			_case_begin_1ab45d4e4:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ab45e836_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43741_ref))))) {
					_1dce4024c_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43741_ref));
				};
			}
		}
		_match_end_1ab45d48e:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d74113___eval_enum(_1c2d70560_Eval* _self_, jule::Ptr<_1c2c4070a_Enum> _45130_enm) {
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_45130_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d744ba_eval_enum(_1c2d70560_Eval* _self_, jule::Ptr<_1c2c4070a_Enum> _46332_enm, jule::Ptr<_1db7061a7_Token> _46344_error_token) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _46332_enm.get()._field_public,_46332_enm.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _46344_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_46332_enm.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1c2d74113___eval_enum(&(*_self_), _46332_enm);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d747c8___eval_type_enum(_1c2d70560_Eval* _self_, jule::Ptr<_1c2c41d05_TypeEnum> _47235_enm) {
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_47235_enm, 4)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d74b80_eval_type_enum(_1c2d70560_Eval* _self_, jule::Ptr<_1c2c41d05_TypeEnum> _48437_enm, jule::Ptr<_1db7061a7_Token> _48453_error_token) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _48437_enm.get()._field_public,_48437_enm.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _48453_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_48437_enm.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1c2d747c8___eval_type_enum(&(*_self_), _48437_enm);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d74e8d___eval_struct(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd868e1_StructIns> _49332_s) {
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_49332_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_49332_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d75345_eval_struct(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd868e1_StructIns> _50634_s, jule::Ptr<_1db7061a7_Token> _50649_error_token) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _50634_s.get()._field_decl.get()._field_public,_50634_s.get()._field_decl.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _50649_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50634_s.get()._field_decl.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2d75972_check_deprecated(&(*_self_), _50634_s.get()._field_decl.get()._field_directives,_50649_error_token);
	return _1c2d74e8d___eval_struct(&(*_self_), _50634_s);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d75653_eval_fn_ins(_1c2d70560_Eval* _self_, jule::Ptr<_1dce3b644_FnIns> _51630_f) {
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_51630_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(_51630_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1c2d75972_check_deprecated(_1c2d70560_Eval* _self_, jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _52940_directives, jule::Ptr<_1db7061a7_Token> _52971_tok) {
	if (_1c2d714a6_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1dcd36671_Directive> _53413_d = _1c2d99006_find_directive(_52940_directives,jule::Str("deprecated", 10));;
	if ((_53413_d != nullptr)) {
		if ((_53413_d.get()._field_args.len() == 0LL)) {
			_1c2d70a6b_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1c2d70a6b_push_err(&(*_self_), _52971_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_53413_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d75d29_eval_fn(_1c2d70560_Eval* _self_, jule::Ptr<_1dce38993_Fn> _54530_f, jule::Ptr<_1db7061a7_Token> _54538_error_token) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _54530_f.get()._field_public,_54530_f.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _54538_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_54530_f.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2d75972_check_deprecated(&(*_self_), _54530_f.get()._field_directives,_54538_error_token);
	jule::Ptr<_1dce3b644_FnIns> _55417_ins = _1dce3a0e3_instance(_54530_f);;
	_1ab3a2c52_push_reference(&(*_self_), _55417_ins);
	return _1c2d75653_eval_fn_ins(&(*_self_), _55417_ins);
}



inline void _1c2d76214_push_illegal_cycle_error(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d266ae_Var>& _55944_v1, jule::Ptr<_1c2d266ae_Var>& _55955_v2, jule::Str& _55970_message) {
	;
	jule::Str _56113_refers_to = _207b81407_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_55944_v1.get()._field_ident),jule::Any(_55955_v2.get()._field_ident)}));;
	(_55970_message).buffer.insert(0, (((_207a6542e_repeat(jule::Str(" ", 1),4LL) + _56113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c2d765cc_check_cross_cycle(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d266ae_Var>& _56537_v, jule::Str& _56551_message) {
	{
		auto &expr = _56537_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1ab3aa7d7:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> &_56616_d = *it;
			{
				if ((_56616_d == (*_self_)._field_owner)) {
					_1c2d76214_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
				if ((!(_1c2d765cc_check_cross_cycle(&(*_self_), _56616_d,_56551_message)))) {
					_1c2d76214_push_illegal_cycle_error(&(*_self_), _56537_v,_56616_d,_56551_message);
					return false;
				};
			}
			_iter_next_1ab3aa7d7:;
			++it;
			goto _iter_begin_1ab3aa7d7;
		}
		_iter_end_1ab3aa7d7:;
	};
	return true;
}



inline jule::Bool _1c2d76984_check_illegal_cycles(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d266ae_Var>& _58444_v, jule::Ptr<_1db7061a7_Token> _58453_decl_token) {
	jule::Bool _58475_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_58475_ok = true;
		return _58475_ok;
	};
	if (((*_self_)._field_owner == _58444_v)) {
		_1c2d70a6b_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_58475_ok = false;
		return _58475_ok;
	};
	jule::Str _59617_message = jule::Str();;
	if ((!(_1c2d765cc_check_cross_cycle(&(*_self_), _58444_v,_59617_message)))) {
		jule::Str _59921_err_msg = _59617_message;;
		_59617_message=jule::Str();
		_1c2d76214_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_58444_v,_59617_message);
		_59921_err_msg=(_59921_err_msg + _59617_message);
		_1c2d70a6b_push_err(&(*_self_), _58453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_59921_err_msg)}));
		_58475_ok = false;
		return _58475_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_58444_v);;
	_58475_ok = true;
	return _58475_ok;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d76d3b_eval_var(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d266ae_Var> _61131_v, jule::Ptr<_1db7061a7_Token> _61140_error_token) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _61131_v.get()._field_public,_61131_v.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _61140_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2d75972_check_deprecated(&(*_self_), _61131_v.get()._field_directives,_61140_error_token);
	_61131_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d099a0_Sema>>()) {
			_case_begin_1ab3b34b0:;
			{
				jule::Bool _62517_ok = _1c2d76984_check_illegal_cycles(&(*_self_), _61131_v,_61140_error_token);;
				if ((!(_62517_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab3b356a:;
			{
				if (((!(_61131_v.get()._field_reference)) || _1c2d714a6_is_unsafe(&(*_self_)))) {
					goto _match_end_1ab3b345a;
				};
				jule::Ptr<_1c2cd9a07_ScopeChecker> _63321_s = (*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>();;
				while (((_63321_s.get()._field_owner == nullptr) && (_63321_s.get()._field_parent != nullptr))) {
					{
						_63321_s=_63321_s.get()._field_parent;
					}
				_iter_next_1ab3b55d3:;
				}
				_iter_end_1ab3b55d3:;;
				if ((((_63321_s.get()._field_owner != nullptr) && _63321_s.get()._field_owner.get()._field_anon) && (_61131_v.get()._field_scope != _63321_s.get()._field_owner.get()._field_scope))) {
					_1c2d70a6b_push_err(&(*_self_), _61140_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_61131_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1ab3b345a:;
	};
	if ((_61131_v.get()._field_scope == nullptr)) {
		_1ab3b77c2_push_reference(&(*_self_), _61131_v);
	};
	if (((!(_61131_v.get()._field_cpp_linked)) && ((_61131_v.get()._field_value == nullptr) || (_61131_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_61131_v.get()._field_constant) {
			_1c2d1e223_check_type_var((*_self_)._field_s, _61131_v,jule::Trait<_1c2dba3bd_Lookup>((*_self_)._field_s, 3));
			if ((_61131_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_61131_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1c2d1e223_check_type_var((*_self_)._field_s, _61131_v,(*_self_)._field_lookup);
		if (((_61131_v.get()._field_kind == nullptr) || (_61131_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1c2d6d9e2_Data> _67617_d = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=_61131_v.get()._field_kind.get()._field_kind, ._field_mutable=_61131_v.get()._field_mutable, ._field_reference=_61131_v.get()._field_reference, ._field_lvalue=(!(_61131_v.get()._field_constant)), ._field_model=static_cast<jule::Any>(_61131_v), });;
	if ((((!(_61131_v.get()._field_cpp_linked)) && _1c2d26a66_is_initialized(_61131_v.ptr())) && (_61131_v.get()._field_value.get()._field_data != nullptr))) {
		_67617_d.get()._field_is_rune=_61131_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_61131_v.get()._field_constant && (_61131_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_67617_d.get()._field_constant=jule::new_ptr<_1dcdbd1a8_Const>((*(_61131_v.get()._field_value.get()._field_data.get()._field_constant)));
		_67617_d.get()._field_model=static_cast<jule::Any>(_67617_d.get()._field_constant);
	};
	if (_1c2d6e3a5_is_const(_67617_d.ptr())) {
		_1c2d719e5_apply_numeric_prefix(&(*_self_), _67617_d);
	};
	return _67617_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d771e3_eval_type_alias(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9db32_TypeAlias> _70038_ta, jule::Ptr<_1db7061a7_Token> _70054_error_token) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _70038_ta.get()._field_public,_70038_ta.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _70054_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_70038_ta.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70038_ta.get()._field_used=true;
	jule::Trait<_1c2d9e3e6_Kind> _70917_kind = _70038_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1c2d6d9e2_Data> _71017_d = nullptr;;
	{
		auto &_match_expr{ _70917_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd868e1_StructIns>>()) {
			_case_begin_1ab3c8629:;
			{
				_71017_d=_1c2d74e8d___eval_struct(&(*_self_), _70917_kind.operator jule::Ptr<_1dcd868e1_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c4070a_Enum>>()) {
			_case_begin_1ab3c8b79:;
			{
				_71017_d=_1c2d74113___eval_enum(&(*_self_), _70917_kind.operator jule::Ptr<_1c2c4070a_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c41d05_TypeEnum>>()) {
			_case_begin_1ab3c779e:;
			{
				_71017_d=_1c2d747c8___eval_type_enum(&(*_self_), _70917_kind.operator jule::Ptr<_1c2c41d05_TypeEnum>());
			}
		}
		else {
			_case_begin_1ab3c767d:;
			{
				_71017_d=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=_70038_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_70038_ta.get()._field_cpp_linked) {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_ident;
				} else {
					_71017_d.get()._field_kind.get()._field_cpp_ident=_70038_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_71017_d.get()._field_model=static_cast<jule::Any>(_71017_d.get()._field_kind);
			}
		}
		_match_end_1ab3c7628:;
	};
	_71017_d.get()._field_kind.get()._field_generic=_70038_ta.get()._field_generic;
	return _71017_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d7759a_eval_def(_1c2d70560_Eval* _self_, jule::Any _73631_def, jule::Ptr<_1db7061a7_Token> _73641_ident) {
	{
		auto &_match_expr{ _73631_def };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1ab3cb5d8:;
			{
				return _1c2d76d3b_eval_var(&(*_self_), _73631_def.operator jule::Ptr<_1c2d266ae_Var>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c4070a_Enum>>()) {
			_case_begin_1ab3cb64e:;
			{
				return _1c2d744ba_eval_enum(&(*_self_), _73631_def.operator jule::Ptr<_1c2c4070a_Enum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c41d05_TypeEnum>>()) {
			_case_begin_1ab3cb6b5:;
			{
				return _1c2d74b80_eval_type_enum(&(*_self_), _73631_def.operator jule::Ptr<_1c2c41d05_TypeEnum>(),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1ab3cb73c:;
			{
				return _1c2d75345_eval_struct(&(*_self_), _1dcd4299b_instance(_73631_def.operator jule::Ptr<_1dcd5a596_Struct>()),_73641_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce38993_Fn>>()) {
			_case_begin_1ab3cb7a3:;
			{
				jule::Ptr<_1dce38993_Fn> _74721_f = _73631_def.operator jule::Ptr<_1dce38993_Fn>();;
				if ((_74721_f.get()._field_ident != jule::Str("init", 4))) {
					return _1c2d75d29_eval_fn(&(*_self_), _74721_f,_73641_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3b644_FnIns>>()) {
			_case_begin_1ab3cb82a:;
			{
				return _1c2d75653_eval_fn_ins(&(*_self_), _73631_def.operator jule::Ptr<_1dce3b644_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
			_case_begin_1ab3cb8a2:;
			{
				return _1c2d771e3_eval_type_alias(&(*_self_), _73631_def.operator jule::Ptr<_1c2d9db32_TypeAlias>(),_73641_ident);
			}
		}
		_match_end_1ab3cb4ea:;
	};
	_1c2d70a6b_push_err(&(*_self_), _73641_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_73641_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d778a8_eval_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd71403_IdentExpr> _76029_ident) {
	jule::Any _76117_def = _1c2d73a80_get_def(&(*_self_), _76029_ident.get()._field_ident,_76029_ident.get()._field_cpp_linked);;
	return _1c2d7759a_eval_def(&(*_self_), jule::Any(_76117_def),_76029_ident.get()._field_token);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d77bb6_eval_unary(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd71b0c_UnaryExpr> _76534_u) {
	_1c2d91460_UnaryEval _76617_unary = static__1c2d91916_new(_self_);;
	return _1c2d92bae_eval(&_76617_unary, _76534_u);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d77ec4_eval_variadic(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd71eb4_VariadicExpr> _77037_v) {
	if ((_77037_v.get()._field_expr == nullptr)) {
		_1c2d70a6b_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _77617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77617_prefix;
	});;
	jule::Ptr<_1c2d6d9e2_Data> _78017_d = _1c2d908c1_eval_expr_kind(_self_, _77037_v.get()._field_expr.get()._field_kind);;
	if ((_78017_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2da16c3_variadicable(_78017_d.get()._field_kind.ptr())))) {
		_1c2d70a6b_push_err(_self_.ptr(), _77037_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_78017_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1c2da84dd_Slc> _79013_slc = _1c2da28b1_slc(_78017_d.get()._field_kind.ptr());;
	_78017_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_cpp_ident=_79013_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_79013_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_79013_slc.get()._field_elem.get()._field_kind});
	return _78017_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d782d2_eval_unsafe(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd70ac8_UnsafeExpr> _80035_u) {
	jule::Bool _80113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1c2d6d9e2_Data> _80417_d = _1c2d908c1_eval_expr_kind(_self_, _80035_u.get()._field_expr.get()._field_kind);;
	_self_.get()._field_unsafety=_80113_unsafety;
	return _80417_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d785e0_eval_arr(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd75c43_SliceExpr> _81132_s) {
	jule::Ptr<_1c2daa688_Arr> _81317_pt = _1c2da264c_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1c2daa688_Arr> _81517_arr = jule::new_ptr<_1c2daa688_Arr>(_1c2daa688_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_81317_pt.get()._field_elem});;
	jule::Bool _82117_filled = false;;
	if ((_81132_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _81132_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1dcd71eb4_VariadicExpr>>()) {
				_case_begin_1ab3dae77:;
				{
					if ((_81132_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1dcd71eb4_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1ab3dae22;
					};
					if (_81317_pt.get()._field_auto) {
						_1c2d70a6b_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_82117_filled=true;
					_81132_s.get()._field_exprs=_81132_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1ab3dae22:;
		};
	};
	_81517_arr.get()._field_n=static_cast<jule::I64>(_81132_s.get()._field_exprs.len());
	if ((!(_81317_pt.get()._field_auto))) {
		if ((_81517_arr.get()._field_n > _81317_pt.get()._field_n)) {
			_1c2d70a6b_push_err(_self_.ptr(), _81132_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_81517_arr.get()._field_n < _81317_pt.get()._field_n)) {
			_81517_arr.get()._field_n=_81317_pt.get()._field_n;
		};
	};
	jule::Ptr<_1dce33a04_ArrayExprModel> _85017_model = jule::new_ptr<_1dce33a04_ArrayExprModel>(_1dce33a04_ArrayExprModel{._field_kind=_81517_arr, });;
	if (_82117_filled) {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_85017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_81132_s.get()._field_exprs.len());
	};
	jule::Ptr<_1c2d9e825_TypeKind> _85917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_81517_arr.get()._field_elem;
	{
		auto &expr = _81132_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ab3e0c3a:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd6e38a_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1c2d6d9e2_Data> _86221_d = _1c2d908c1_eval_expr_kind(_self_, _86121_elem.get()._field_kind);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_1ab3e0c3a;
				};
				_1c2d1326c_check_assign_type(_self_.get()._field_s, false,_81517_arr.get()._field_elem,_86221_d,_81132_s.get()._field_token);
				_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(_86221_d.get()._field_model);;
			}
			_iter_next_1ab3e0c3a:;
			++it;
			goto _iter_begin_1ab3e0c3a;
		}
		_iter_end_1ab3e0c3a:;
	};
	_self_.get()._field_prefix=_85917_prefix;
	if (_82117_filled) {
		_85017_model.get()._field_elems = jule::alloc_for_append(_85017_model.get()._field_elems,1);_85017_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_81517_arr, 11)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_85017_model), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d78a41_eval_exp_slc(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd75c43_SliceExpr> _88636_s, jule::Ptr<_1c2d9e825_TypeKind> _88655_t, jule::Any _88673_first) {
	jule::Ptr<_1c2da84dd_Slc> _88717_slc = jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=_88655_t});;
	jule::Ptr<_1dce32580_SliceExprModel> _89117_model = jule::new_ptr<_1dce32580_SliceExprModel>(_1dce32580_SliceExprModel{._field_elem_kind=_88655_t, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_88636_s.get()._field_exprs.len())});;
	if ((_88673_first != nullptr)) {
		_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_88673_first);;
		_88636_s.get()._field_exprs=_88636_s.get()._field_exprs.slice(1LL);
	};
	jule::Ptr<_1c2d9e825_TypeKind> _90017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_88717_slc.get()._field_elem;
	{
		auto &expr = _88636_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ab3e64d2:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd6e38a_Expr> _90221_elem = *it;
			{
				jule::Ptr<_1c2d6d9e2_Data> _90321_d = _1c2d908c1_eval_expr_kind(_self_, _90221_elem.get()._field_kind);;
				if ((_90321_d == nullptr)) {
					goto _iter_next_1ab3e64d2;
				};
				_1c2d1326c_check_assign_type(_self_.get()._field_s, false,_88717_slc.get()._field_elem,_90321_d,_88636_s.get()._field_token);
				_89117_model.get()._field_elems = jule::alloc_for_append(_89117_model.get()._field_elems,1);_89117_model.get()._field_elems.__push(_90321_d.get()._field_model);;
			}
			_iter_next_1ab3e64d2:;
			++it;
			goto _iter_begin_1ab3e64d2;
		}
		_iter_end_1ab3e64d2:;
	};
	_self_.get()._field_prefix=_90017_prefix;
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_88717_slc, 8)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_89117_model), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d7dbab_eval_slice_expr(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd75c43_SliceExpr> _92139_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1c2da264c_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ab3e953a:;
				{
					return _1c2d785e0_eval_arr(_self_, _92139_s);
				}
			}
			else if ((_1c2da28b1_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ab3e95b2:;
				{
					jule::Ptr<_1c2da84dd_Slc> _92725_pt = _1c2da28b1_slc(_self_.get()._field_prefix.ptr());;
					return _1c2d78a41_eval_exp_slc(_self_, _92139_s,_92725_pt.get()._field_elem,nullptr);
				}
			}
			_match_end_1ab3e9419:;
		};
	};
	jule::Ptr<_1c2d9e825_TypeKind> _93217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_92139_s.get()._field_exprs.len() == 0LL)) {
		_1c2d70a6b_push_err(_self_.ptr(), _92139_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _94017_first_elem = _1c2d908c1_eval_expr_kind(_self_, _92139_s.get()._field_exprs[0LL].get()._field_kind);;
	if ((_94017_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _94517_d = _1c2d78a41_eval_exp_slc(_self_, _92139_s,_94017_first_elem.get()._field_kind,_94017_first_elem.get()._field_model);;
	_self_.get()._field_prefix=_93217_prefix;
	return _94517_d;
}



inline void _1c2d7deec_check_integer_indexing_by_data(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _95154_d, jule::Ptr<_1db7061a7_Token> _95164_token) {
	jule::Str _95213_err_key = _1c2d9b404_check_data_for_integer_indexing(_95154_d);;
	{
		auto &_match_expr{ _95213_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ab3ee82b:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1ab4004ca:;
			{
				_1c2d70a6b_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_95154_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1ab3eebd3:;
			{
				_1c2d70a6b_push_err(&(*_self_), _95164_token,_95213_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab3eeb06:;
	};
}



inline void _1c2d7e3c6_indexing_ptr(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _96336_d, jule::Ptr<_1c2d6d9e2_Data>& _96351_index, jule::Ptr<_1dcd765d4_IndexingExpr>& _96366_i) {
	_1c2d7deec_check_integer_indexing_by_data(&(*_self_), _96351_index,_96366_i.get()._field_token);
	jule::Ptr<_1c2dab0e5_Ptr> _96617_ptr = _1c2da1e10_ptr(_96336_d.get()._field_kind.ptr());;
	{
		
		if (_1c2dabab8_is_unsafe(_96617_ptr.ptr())) {
			_case_begin_1ab40749e:;
			{
				_1c2d70a6b_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c2d714a6_is_unsafe(&(*_self_))))) {
			_case_begin_1ab407515:;
			{
				_1c2d70a6b_push_err(&(*_self_), _96366_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab40734a:;
	};
	_96336_d.get()._field_kind=_96617_ptr.get()._field_elem;
}



inline void _1c2d7e78e_indexing_arr(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _97836_d, jule::Ptr<_1c2d6d9e2_Data>& _97851_index, jule::Ptr<_1dcd765d4_IndexingExpr>& _97866_i) {
	jule::Ptr<_1c2daa688_Arr> _97917_arr = _1c2da264c_arr(_97836_d.get()._field_kind.ptr());;
	_97836_d.get()._field_kind=_97917_arr.get()._field_elem;
	_1c2d7deec_check_integer_indexing_by_data(&(*_self_), _97851_index,_97866_i.get()._field_token);
	if ((_1c2d6e3a5_is_const(_97851_index.ptr()) && (_1dce2a37a_as_f64(_97851_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_97917_arr.get()._field_n)))) {
		_1c2d70a6b_push_err(&(*_self_), _97866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c2d7eb57_indexing_slc(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _98736_d, jule::Ptr<_1c2d6d9e2_Data>& _98751_index, jule::Ptr<_1dcd765d4_IndexingExpr>& _98766_i) {
	jule::Ptr<_1c2da84dd_Slc> _98817_slc = _1c2da28b1_slc(_98736_d.get()._field_kind.ptr());;
	_98736_d.get()._field_kind=_98817_slc.get()._field_elem;
	_1c2d7deec_check_integer_indexing_by_data(&(*_self_), _98751_index,_98766_i.get()._field_token);
	if ((!(_1c2d6e3a5_is_const(_98751_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _98736_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce32580_SliceExprModel>>()) {
			_case_begin_1ab40cbe1:;
			{
				jule::Ptr<_1dce32580_SliceExprModel> _99821_m = _98736_d.get()._field_model.operator jule::Ptr<_1dce32580_SliceExprModel>();;
				jule::F64 _99917_indx = _1dce2a37a_as_f64(_98751_index.get()._field_constant.ptr());;
				if ((_99917_indx >= static_cast<jule::F64>(_99821_m.get()._field_elems.len()))) {
					_1c2d70a6b_push_err(&(*_self_), _98766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_98736_d.get()._field_model=_99821_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_99917_indx))];
					_98736_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1ab40ce44:;
	};
}



inline void _1c2d80020_indexing_map(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _100936_d, jule::Ptr<_1c2d6d9e2_Data>& _100951_index, jule::Ptr<_1dcd765d4_IndexingExpr>& _100970_i) {
	if ((_100951_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2da9a94_Map> _101417_m = _1c2da3362_map(_100936_d.get()._field_kind.ptr());;
	_1c2d594a0_AssignTypeChecker _101517_atc = _1c2d594a0_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_101417_m.get()._field_key, ._field_d=_100951_index, ._field_error_token=_100970_i.get()._field_token};;
	_1c2d5a627_check(&_101517_atc);
	_100936_d.get()._field_kind=_101417_m.get()._field_val;
}



inline void _1c2d803d8_indexing_str(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _102636_d, jule::Ptr<_1c2d6d9e2_Data>& _102651_index, jule::Ptr<_1dcd765d4_IndexingExpr>& _102666_i) {
	;
	_102636_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u8", 2)), 6)});
	if ((_102651_index == nullptr)) {
		return;;
	};
	_1c2d7deec_check_integer_indexing_by_data(&(*_self_), _102651_index,_102666_i.get()._field_token);
	if ((!(_1c2d6e3a5_is_const(_102651_index.ptr())))) {
		_102636_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1c2d6e3a5_is_const(_102636_d.ptr())) {
		jule::Ptr<_1db7061a7_Token> _104217_error_token = _102666_i.get()._field_token;;
		jule::I64 _104317_j = _1dce29da2_as_i64(_102651_index.get()._field_constant.ptr());;
		jule::Str _104417_s = _1dce298c9_read_str(_102636_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_104317_j) >= _104417_s.len())) {
			_1c2d70a6b_push_err(&(*_self_), _104217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1dce2a875_set_u64(_102636_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_104417_s[_104317_j])));
		};
	};
}



inline void _1c2d807a1_to_indexing(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _105335_d, jule::Ptr<_1c2d6d9e2_Data>& _105350_index, jule::Ptr<_1dcd765d4_IndexingExpr>& _105369_i) {
	{
		
		if ((_1c2da1e10_ptr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab417d2d:;
			{
				_1c2d7e3c6_indexing_ptr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1c2da264c_arr(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab417da5:;
			{
				_1c2d7e78e_indexing_arr(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1c2da28b1_slc(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab417e2c:;
			{
				_1c2d7eb57_indexing_slc(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1c2da3362_map(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab417ea4:;
			{
				_1c2d80020_indexing_map(&(*_self_), _105335_d,_105350_index,_105369_i);
				return;;
			}
		}
		else if ((_1c2da1937_prim(_105335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab41802b:;
			{
				jule::Ptr<_1c2da42ec_Prim> _106817_prim = _1c2da1937_prim(_105335_d.get()._field_kind.ptr());;
				{
					
					if (_1c2da7531_is_str(_106817_prim.ptr())) {
						_case_begin_1ab41c10c:;
						{
							_1c2d803d8_indexing_str(&(*_self_), _105335_d,_105350_index,_105369_i);
							return;;
						}
					}
					_match_end_1ab41c063:;
				};
			}
		}
		_match_end_1ab417bc9:;
	};
	_1c2d70a6b_push_err(&(*_self_), _105369_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_105335_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1c2d80c35_push_generics_from_expr_sub_ident(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd72b96_SubIdentExpr>& _107858_sexpr, jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>& _107914_generics, jule::Ptr<_1dcd6e38a_Expr>& _107942_expr) {
	jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl> _108017_t = jule::new_ptr<_1dcd6aa7e_SubIdentTypeDecl>();;
	if ((!(_1c2d9c229_push_sub_ident_from_expr(static_cast<jule::Any>(_107858_sexpr),_108017_t)))) {
		_1c2d70a6b_push_err(_self_.ptr(), _107942_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_107914_generics = jule::alloc_for_append(_107914_generics,1);_107914_generics.__push(jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_kind=static_cast<jule::Any>(_108017_t)}));;
	return true;
}



inline jule::Bool _1c2d81142_push_generics_from_data(jule::Ptr<_1c2d70560_Eval> _self_, jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>& _108948_generics, jule::Ptr<_1dcd6e38a_Expr>& _108976_expr) {
	{
		auto &_match_expr{ _108976_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd71b0c_UnaryExpr>>()) {
			_case_begin_1ab42062c:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _109421_d = _1c2d77bb6_eval_unary(_self_, _108976_expr.get()._field_kind.operator jule::Ptr<_1dcd71b0c_UnaryExpr>());;
				if ((!(_109421_d.get()._field_decl))) {
					_1c2d70a6b_push_err(_self_.ptr(), _108976_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_108976_expr.get()._field_token, ._field_kind=(*(((jule::Any*)((&(_109421_d.get()._field_kind.get()._field_kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd69d69_TypeDecl>>()) {
			_case_begin_1ab420693:;
			{
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(_108976_expr.get()._field_kind.operator jule::Ptr<_1dcd69d69_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd72b96_SubIdentExpr>>()) {
			_case_begin_1ab420709:;
			{
				jule::Ptr<_1dcd72b96_SubIdentExpr> _110621_sexpr = _108976_expr.get()._field_kind.operator jule::Ptr<_1dcd72b96_SubIdentExpr>();;
				return _1c2d80c35_push_generics_from_expr_sub_ident(_self_, _110621_sexpr,_108948_generics,_108976_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd71403_IdentExpr>>()) {
			_case_begin_1ab421012:;
			{
				jule::Ptr<_1dcd71403_IdentExpr> _110921_ident = _108976_expr.get()._field_kind.operator jule::Ptr<_1dcd71403_IdentExpr>();;
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_110921_ident.get()._field_token, ._field_ident=_110921_ident.get()._field_ident, ._field_cpp_linked=_110921_ident.get()._field_cpp_linked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd70017_TupleExpr>>()) {
			_case_begin_1ab421078:;
			{
				{
					auto &expr = _108976_expr.get()._field_kind.operator jule::Ptr<_1dcd70017_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1ab425423:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd6e38a_Expr> _111825_texpr = *it;
						{
							if ((!(_1c2d81142_push_generics_from_data(_self_, _108948_generics,_111825_texpr)))) {
								return false;
							};
						}
						_iter_next_1ab425423:;
						++it;
						goto _iter_begin_1ab425423;
					}
					_iter_end_1ab425423:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd72723_NsSelectionExpr>>()) {
			_case_begin_1ab4210de:;
			{
				jule::Ptr<_1dcd72723_NsSelectionExpr> _112421_ns = _108976_expr.get()._field_kind.operator jule::Ptr<_1dcd72723_NsSelectionExpr>();;
				jule::Ptr<_1dcd6a430_IdentTypeDecl> _112521_decl = jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_112421_ns.get()._field_ident, ._field_ident=_112421_ns.get()._field_ident.get()._field_kind, });;
				_108948_generics = jule::alloc_for_append(_108948_generics,1);_108948_generics.__push(jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_112521_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6ae36_NamespaceTypeDecl>(_1dcd6ae36_NamespaceTypeDecl{._field_idents=_112421_ns.get()._field_ns, ._field_kind=jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_112521_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_112521_decl)})}))}));;
			}
		}
		else {
			_case_begin_1ab42050b:;
			{
				_1c2d70a6b_push_err(_self_.ptr(), _108976_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1ab420363:;
	};
	return true;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d81450_eval_ident_decl_from_indexing(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd765d4_IndexingExpr>& _114654_i) {
	jule::Ptr<_1dcd69d69_TypeDecl> _114717_tdecl = jule::new_ptr<_1dcd69d69_TypeDecl>();;
	jule::Ptr<_1dcd6a430_IdentTypeDecl> _114817_decl = nullptr;;
	{
		auto &_match_expr{ _114654_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd71403_IdentExpr>>()) {
			_case_begin_1ab429a76:;
			{
				jule::Ptr<_1dcd71403_IdentExpr> _115121_expr = _114654_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1dcd71403_IdentExpr>();;
				_114817_decl=jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_115121_expr.get()._field_token, ._field_ident=_115121_expr.get()._field_ident, ._field_cpp_linked=_115121_expr.get()._field_cpp_linked, });
				_114717_tdecl.get()._field_kind=static_cast<jule::Any>(_114817_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd72723_NsSelectionExpr>>()) {
			_case_begin_1ab429adc:;
			{
				jule::Ptr<_1dcd72723_NsSelectionExpr> _115921_expr = _114654_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1dcd72723_NsSelectionExpr>();;
				_114817_decl=jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_115921_expr.get()._field_ident, ._field_ident=_115921_expr.get()._field_ident.get()._field_kind, });
				_114717_tdecl.get()._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6ae36_NamespaceTypeDecl>(_1dcd6ae36_NamespaceTypeDecl{._field_idents=_115921_expr.get()._field_ns, ._field_kind=jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_114817_decl.get()._field_token, ._field_kind=static_cast<jule::Any>(_114817_decl)})}));
			}
		}
		else {
			_case_begin_1ab429a10:;
			{
				_1c2d70a6b_push_err(_self_.ptr(), _114654_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab4299aa:;
	};
	if ((!(_1c2d81142_push_generics_from_data(_self_, _114817_decl.get()._field_generics,_114654_i.get()._field_index)))) {
		return nullptr;
	};
	return _1c2d87401_eval_type(_self_.ptr(), _114717_tdecl);
}



inline jule::Bool _1c2d818b2_check_generic_fn(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dce3b644_FnIns>& _118341_f, jule::Ptr<_1db7061a7_Token>& _118357_et, jule::Any& _118374_model) {
	jule::Bool _118413_ok = _1c2d15505_reload_fn_ins_types(_self_.get()._field_s, _118341_f);;
	_118341_f.get()._field_reloaded=true;
	if ((!(_118413_ok))) {
		return false;
	};
	jule::Ptr<_1dce3b644_FnIns> _118917_exist_instance = _1dce3a3bd_append_instance(_118341_f.get()._field_decl.ptr(), _118341_f);;
	if ((!(_1c2d14636_check_constraints_fn(_self_.get()._field_s, _118341_f,_118357_et,_118917_exist_instance)))) {
		return false;
	};
	if ((_118917_exist_instance != nullptr)) {
		_118341_f=_118917_exist_instance;
		_1c2d9beb5_update_model_to_generic_ins(_118374_model,_118917_exist_instance);
	} else {
		_1c2d22028_check_fn_ins_caller(_self_.get()._field_s, _118341_f,_118357_et);
	};
	return true;
}



inline void _1c2d81c03_eval_fn_generic_from_indexing(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1c2d6d9e2_Data>& _120854_d, jule::Ptr<_1dcd765d4_IndexingExpr>& _120869_i) {
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _120917_generics = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_1c2d81142_push_generics_from_data(_self_, _120917_generics,_120869_i.get()._field_index)))) {
		_120854_d=nullptr;
		return;;
	};
	jule::Ptr<_1dce3b644_FnIns> _121517_f = _1c2da2b25_fnc(_120854_d.get()._field_kind.ptr());;
	jule::I64 _121617_generics_len = 0LL;;
	if ((_121517_f.get()._field_decl != nullptr)) {
		_121617_generics_len=static_cast<jule::I64>(_121517_f.get()._field_decl.get()._field_generics.len());
	};
	if ((!(_1c2d0da09_check_generic_quantity(_self_.get()._field_s.ptr(), _121617_generics_len,static_cast<jule::I64>(_120917_generics.len()),_120869_i.get()._field_expr.get()._field_token)))) {
		_120854_d=nullptr;
		return;;
	};
	_121517_f.get()._field_generics=jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>>::alloc(0LL,_121517_f.get()._field_decl.get()._field_generics.len());
	{
		auto &expr = _120917_generics;
		auto it = expr.begin();
		_iter_begin_1ab4359a5:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd69d69_TypeDecl> _122721_g = *it;
			{
				jule::Ptr<_1c2d6d9e2_Data> _122821_k = _1c2d87401_eval_type(_self_.ptr(), _122721_g);;
				if ((_122821_k == nullptr)) {
					_120854_d=nullptr;
					return;;
				};
				_121517_f.get()._field_generics = jule::alloc_for_append(_121517_f.get()._field_generics,1);_121517_f.get()._field_generics.__push(jule::new_ptr<_1c2d9d0e8_InsGeneric>(_1c2d9d0e8_InsGeneric{._field_kind=_122821_k.get()._field_kind, }));;
			}
			_iter_next_1ab4359a5:;
			++it;
			goto _iter_begin_1ab4359a5;
		}
		_iter_end_1ab4359a5:;
	};
	if (_1dce3c9ca_is_builtin(_121517_f.ptr())) {
		return;;
	};
	if (_1c2d818b2_check_generic_fn(_self_, _121517_f,_120869_i.get()._field_expr.get()._field_token,_120854_d.get()._field_model)) {
		_120854_d.get()._field_kind.get()._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_121517_f, 1);
	} else {
		_120854_d=nullptr;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d82022_eval_indexing(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd765d4_IndexingExpr> _124737_i) {
	jule::Ptr<_1c2d9e825_TypeKind> _124817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_124817_prefix;
	});;
	jule::Ptr<_1c2d6d9e2_Data> _125217_d = _1c2d908c1_eval_expr_kind(_self_, _124737_i.get()._field_expr.get()._field_kind);;
	if ((_125217_d == nullptr)) {
		return nullptr;
	};
	if (_125217_d.get()._field_decl) {
		return _1c2d81450_eval_ident_decl_from_indexing(_self_, _124737_i);
	};
	if ((_1c2da2b25_fnc(_125217_d.get()._field_kind.ptr()) != nullptr)) {
		_1c2d81c03_eval_fn_generic_from_indexing(_self_, _125217_d,_124737_i);
		return _125217_d;
	};
	_1c2d6d9e2_Data _126717_old_d = (*(_125217_d));;
	jule::Ptr<_1c2d6d9e2_Data> _126917_index = _1c2d908c1_eval_expr_kind(_self_, _124737_i.get()._field_index.get()._field_kind);;
	if ((_126917_index == nullptr)) {
		return nullptr;
	};
	_125217_d.get()._field_decl=false;
	_1c2d807a1_to_indexing(_self_.ptr(), _125217_d,_126917_index,_124737_i);
	if (_1c2d6e3a5_is_const(_125217_d.ptr())) {
		_125217_d.get()._field_decl=false;
		_125217_d.get()._field_model=static_cast<jule::Any>(_125217_d.get()._field_constant);
	} else if (_125217_d.get()._field_decl) {
		_125217_d.get()._field_decl=false;
	} else {
		_125217_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3276c_IndexingExprModel>(_1dce3276c_IndexingExprModel{._field_token=_124737_i.get()._field_token, ._field_expr=jule::new_ptr<_1c2d6d9e2_Data>(_126717_old_d), ._field_index=_126917_index}));
	};
	return _125217_d;
}



inline std::tuple<jule::Ptr<_1c2d6d9e2_Data>,jule::Ptr<_1c2d6d9e2_Data>> _1c2d82330_eval_slicing_exprs(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd76bde_SlicingExpr>& _130043_s) {
	jule::Ptr<_1c2d9e825_TypeKind> _130117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130117_prefix;
	});;
	jule::Ptr<_1c2d6d9e2_Data> _130517_l = nullptr;;
	jule::Ptr<_1c2d6d9e2_Data> _130617_r = nullptr;;
	if ((_130043_s.get()._field_start != nullptr)) {
		_130517_l=_1c2d908c1_eval_expr_kind(_self_, _130043_s.get()._field_start.get()._field_kind);
		if ((_130517_l != nullptr)) {
			_1c2d7deec_check_integer_indexing_by_data(_self_.ptr(), _130517_l,_130043_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_130517_l=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_constant=static__1dce2808c_new_i64(0LL)});
		_130517_l.get()._field_model=static_cast<jule::Any>(_130517_l.get()._field_constant);
	};
	if ((_130043_s.get()._field_to != nullptr)) {
		_130617_r=_1c2d908c1_eval_expr_kind(_self_, _130043_s.get()._field_to.get()._field_kind);
		if ((_130617_r != nullptr)) {
			_1c2d7deec_check_integer_indexing_by_data(_self_.ptr(), _130617_r,_130043_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_130517_l,_130617_r);
}



inline void _1c2d825a5_slicing_arr(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _133531_d) {
	jule::Ptr<_1c2d9e825_TypeKind> _133617_elem_type = _1c2da264c_arr(_133531_d.get()._field_kind.ptr()).get()._field_elem;;
	_133531_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=_133617_elem_type}), 8)});
	_133531_d.get()._field_lvalue=false;
	_133531_d.get()._field_mutable=(_133531_d.get()._field_mutable || (!(_1c2da0c22_mutable(_133617_elem_type.ptr()))));
}



inline void _1c2d8296d_slicing_str(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _135031_d, jule::Ptr<_1c2d6d9e2_Data>& _135042_l, jule::Ptr<_1c2d6d9e2_Data>& _135053_r) {
	_135031_d.get()._field_lvalue=false;
	_135031_d.get()._field_mutable=true;
	if ((!(_1c2d6e3a5_is_const(_135031_d.ptr())))) {
		return;;
	};
	if (((_135042_l == nullptr) || (_135053_r == nullptr))) {
		_135031_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1c2d6e3a5_is_const(_135042_l.ptr()) && _1c2d6e3a5_is_const(_135053_r.ptr()))) {
		jule::I64 _136317_left = _1dce29da2_as_i64(_135042_l.get()._field_constant.ptr());;
		if ((_136317_left < 0LL)) {
			return;;
		};
		jule::Str _136817_s = _1dce298c9_read_str(_135031_d.get()._field_constant.ptr());;
		jule::I64 _136921_right = 0LL;;
		if ((_135053_r == nullptr)) {
			_136921_right=static_cast<jule::I64>(static_cast<jule::I64>(_136817_s.len()));
		} else {
			_136921_right=static_cast<jule::I64>(_1dce29da2_as_i64(_135053_r.get()._field_constant.ptr()));
		};
		if ((_136317_left > _136921_right)) {
			return;;
		};
		_1dce2ad70_set_str(_135031_d.get()._field_constant.ptr(), _136817_s.slice(_136317_left,_136921_right));
		_135031_d.get()._field_decl=true;
	} else {
		_135031_d.get()._field_constant=nullptr;
	};
}



inline void _1c2d82dd0_check_slicing(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _138637_d, jule::Ptr<_1c2d6d9e2_Data>& _138648_l, jule::Ptr<_1c2d6d9e2_Data>& _138659_r, jule::Ptr<_1dcd76bde_SlicingExpr>& _138670_s) {
	{
		
		if ((_1c2da264c_arr(_138637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab44bd73:;
			{
				_1c2d825a5_slicing_arr(&(*_self_), _138637_d);
				return;;
			}
		}
		else if ((_1c2da28b1_slc(_138637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab44bdea:;
			{
				return;;
			}
		}
		else if ((_1c2da1937_prim(_138637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab44be72:;
			{
				jule::Ptr<_1c2da42ec_Prim> _139417_prim = _1c2da1937_prim(_138637_d.get()._field_kind.ptr());;
				{
					
					if (_1c2da7531_is_str(_139417_prim.ptr())) {
						_case_begin_1ab44e43b:;
						{
							_1c2d8296d_slicing_str(&(*_self_), _138637_d,_138648_l,_138659_r);
							return;;
						}
					}
					_match_end_1ab44e392:;
				};
			}
		}
		_match_end_1ab44bc41:;
	};
	_1c2d70a6b_push_err(&(*_self_), _138670_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_138637_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d831dd_eval_slicing(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd76bde_SlicingExpr> _140536_s) {
	jule::Ptr<_1c2d6d9e2_Data> _140617_d = _1c2d908c1_eval_expr_kind(_self_, _140536_s.get()._field_expr.get()._field_kind);;
	if ((_140617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _141118_l;;
	jule::Ptr<_1c2d6d9e2_Data> _141125_r;;
	std::tie(_141118_l,_141125_r) = _1c2d82330_eval_slicing_exprs(_self_, _140536_s);
	if ((_141118_l == nullptr)) {
		return _140617_d;
	};
	_140617_d.get()._field_decl=false;
	_1c2d82dd0_check_slicing(_self_.ptr(), _140617_d,_141118_l,_141125_r,_140536_s);
	if (_1c2d6e3a5_is_const(_140617_d.ptr())) {
		_140617_d.get()._field_decl=false;
		_140617_d.get()._field_model=static_cast<jule::Any>(_140617_d.get()._field_constant);
	} else if (_140617_d.get()._field_decl) {
		_140617_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1dce33020_SlicingExprModel> _142921_model = jule::new_ptr<_1dce33020_SlicingExprModel>(_1dce33020_SlicingExprModel{._field_token=_140536_s.get()._field_token, ._field_expr=_140617_d.get()._field_model, ._field_left=_141118_l.get()._field_model, });;
		if ((_141125_r != nullptr)) {
			_142921_model.get()._field_right=_141125_r.get()._field_model;
		};
		_140617_d.get()._field_model=static_cast<jule::Any>(_142921_model);
	};
	return _140617_d;
}



inline void _1c2d835a6_cast_ptr(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _144231_t, jule::Ptr<_1c2d6d9e2_Data> _144249_d, jule::Ptr<_1db7061a7_Token> _144259_error_token) {
	jule::Ptr<_1c2da7a81_Sptr> _144313_sptr = _1c2da1b9b_sptr(_144249_d.get()._field_kind.ptr());;
	if ((_144313_sptr != nullptr)) {
		if ((!(_1c2da002e_equals(_1c2da1e10_ptr(_144231_t.ptr()).get()._field_elem, _144313_sptr.get()._field_elem)))) {
			_1c2d70a6b_push_err(&(*_self_), _144259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_144249_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_144231_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1c2d714a6_is_unsafe(&(*_self_))))) {
		_1c2d70a6b_push_err(&(*_self_), _144259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c2da42ec_Prim> _145613_prim = _1c2da1937_prim(_144249_d.get()._field_kind.ptr());;
	if (((_1c2da1e10_ptr(_144249_d.get()._field_kind.ptr()) == nullptr) && ((_145613_prim == nullptr) || (!(_1c2cd20d7_is_int(_1c2da4660_to_str(_145613_prim.ptr()))))))) {
		_1c2d70a6b_push_err(&(*_self_), _144259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_144249_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_144231_t.ptr()))}));
	};
	_144249_d.get()._field_constant=nullptr;
}



inline void _1c2d8396e_cast_struct(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _146434_t, jule::Ptr<_1c2d6d9e2_Data> _146452_d, jule::Ptr<_1db7061a7_Token> _146462_error_token) {
	jule::Ptr<_1c2c3d54e_Trait> _146517_tr = _1c2da30ed_trt(_146452_d.get()._field_kind.ptr());;
	if ((_146517_tr == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _146462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_146452_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_146434_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1dcd868e1_StructIns> _147117_s = _1c2da2d89_strct(_146434_t.ptr());;
	_1ab45c03c_push_reference(&(*_self_), _147117_s);
	if ((!(_1dcd4c1e2_is_implements(_147117_s.get()._field_decl.ptr(), _146517_tr)))) {
		_1c2d70a6b_push_err(&(*_self_), _146462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_146452_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_146434_t.ptr()))}));
	};
}



inline void _1c2d83d37_cast_ref(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _147931_t, jule::Ptr<_1c2d6d9e2_Data> _147949_d, jule::Ptr<_1db7061a7_Token> _147959_error_token) {
	jule::Ptr<_1c2da7a81_Sptr> _148017_sptr = _1c2da1b9b_sptr(_147931_t.ptr());;
	jule::Ptr<_1c2dab0e5_Ptr> _148217_ptr = _1c2da1e10_ptr(_147949_d.get()._field_kind.ptr());;
	if (((_148217_ptr != nullptr) && _1c2da002e_equals(_148017_sptr.get()._field_elem, _148217_ptr.get()._field_elem))) {
		if ((!(_1c2d714a6_is_unsafe(&(*_self_))))) {
			_1c2d70a6b_push_err(&(*_self_), _147959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c2da2d89_strct(_148017_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1c2d8396e_cast_struct(&(*_self_), _148017_sptr.get()._field_elem,_147949_d,_147959_error_token);
		return;;
	};
	_1c2d70a6b_push_err(&(*_self_), _147959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_147949_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_147931_t.ptr()))}));
}



inline void _1c2d84200_cast_slc(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _150031_t, jule::Ptr<_1c2d6d9e2_Data> _150049_d, jule::Ptr<_1db7061a7_Token> _150059_error_token) {
	if ((_1c2da2174_enm(_150049_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1c2da1937_prim(_1c2da2174_enm(_150049_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1c2da7531_is_str(_1c2da1937_prim(_1c2da2174_enm(_150049_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1c2d70a6b_push_err(&(*_self_), _150059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_150049_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_150031_t.ptr()))}));
			return;;
		};
	} else if (((_1c2da1937_prim(_150049_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2da7531_is_str(_1c2da1937_prim(_150049_d.get()._field_kind.ptr()).ptr()))))) {
		_1c2d70a6b_push_err(&(*_self_), _150059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_150049_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_150031_t.ptr()))}));
		return;;
	};
	_150031_t=_1c2da28b1_slc(_150031_t.ptr()).get()._field_elem;
	jule::Ptr<_1c2da42ec_Prim> _151213_prim = _1c2da1937_prim(_150031_t.ptr());;
	if (((_151213_prim == nullptr) || ((!(_1c2da5b06_is_u8(_151213_prim.ptr()))) && (!(_1c2da562d_is_i32(_151213_prim.ptr())))))) {
		_1c2d70a6b_push_err(&(*_self_), _150059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_150049_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_150031_t.ptr()))}));
	};
}



inline void _1c2d8451e_cast_str(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _151831_d, jule::Ptr<_1db7061a7_Token> _151841_error_token) {
	if ((_1c2da2174_enm(_151831_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c4070a_Enum> _152021_e = _1c2da2174_enm(_151831_d.get()._field_kind.ptr());;
		if (((_1c2da1937_prim(_152021_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1c2da7531_is_str(_1c2da1937_prim(_152021_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1c2da1937_prim(_151831_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2da42ec_Prim> _152717_prim = _1c2da1937_prim(_151831_d.get()._field_kind.ptr());;
		if (((!(_1c2da5b06_is_u8(_152717_prim.ptr()))) && (!(_1c2da562d_is_i32(_152717_prim.ptr()))))) {
			_1c2d70a6b_push_err(&(*_self_), _151841_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2d9ec21_to_str(_151831_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1c2da28b1_slc(_151831_d.get()._field_kind.ptr()) == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _151841_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2d9ec21_to_str(_151831_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _153917_t = _1c2da28b1_slc(_151831_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1c2da42ec_Prim> _154013_prim = _1c2da1937_prim(_153917_t.ptr());;
	if (((_154013_prim == nullptr) || ((!(_1c2da5b06_is_u8(_154013_prim.ptr()))) && (!(_1c2da562d_is_i32(_154013_prim.ptr())))))) {
		_1c2d70a6b_push_err(&(*_self_), _151841_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2d9ec21_to_str(_151831_d.get()._field_kind.ptr()))}));
	};
}



inline void _1c2d848d7_cast_int(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _154631_t, jule::Ptr<_1c2d6d9e2_Data> _154649_d, jule::Ptr<_1db7061a7_Token> _154659_error_token) {
	if (_1c2d6e3a5_is_const(_154649_d.ptr())) {
		jule::Ptr<_1c2da42ec_Prim> _154817_prim = _1c2da1937_prim(_154631_t.ptr());;
		{
			
			if (_1c2cd1a54_is_sig_int(_154817_prim.get()._field_kind)) {
				_case_begin_1ab476c5a:;
				{
					_1dce2a600_set_i64(_154649_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_154649_d.get()._field_constant.ptr())));
				}
			}
			else if (_1c2cd1d40_is_unsig_int(_154817_prim.get()._field_kind)) {
				_case_begin_1ab476cd2:;
				{
					_1dce2a875_set_u64(_154649_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_154649_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ab476ba0:;
		};
	};
	if ((_1c2da2174_enm(_154649_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c4070a_Enum> _155817_e = _1c2da2174_enm(_154649_d.get()._field_kind.ptr());;
		if (_1c2cd269d_is_num(_1c2d9ec21_to_str(_155817_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1c2da1b9b_sptr(_154649_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2da42ec_Prim> _156517_prim = _1c2da1937_prim(_154631_t.ptr());;
		if ((!(_1c2da7058_is_uintptr(_156517_prim.ptr())))) {
			_1c2d70a6b_push_err(&(*_self_), _154659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_154649_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_154631_t.ptr()))}));
		};
		return;;
	};
	if ((_1c2da1e10_ptr(_154649_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2da42ec_Prim> _157217_prim = _1c2da1937_prim(_154631_t.ptr());;
		if (_1c2da7058_is_uintptr(_157217_prim.ptr())) {
		} else if ((!(_1c2d714a6_is_unsafe(&(*_self_))))) {
			_1c2d70a6b_push_err(&(*_self_), _154659_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1c2da562d_is_i32(_157217_prim.ptr()))) && (!(_1c2da5892_is_i64(_157217_prim.ptr())))) && (!(_1c2da5d6a_is_u16(_157217_prim.ptr())))) && (!(_1c2da60ce_is_u32(_157217_prim.ptr())))) && (!(_1c2da6343_is_u64(_157217_prim.ptr()))))) {
			_1c2d70a6b_push_err(&(*_self_), _154659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_154649_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_154631_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1c2da42ec_Prim> _158313_prim = _1c2da1937_prim(_154649_d.get()._field_kind.ptr());;
	if (((_158313_prim != nullptr) && _1c2cd269d_is_num(_1c2da4660_to_str(_158313_prim.ptr())))) {
		return;;
	};
	_1c2d70a6b_push_err(&(*_self_), _154659_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_154649_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_154631_t.ptr()))}));
}



inline void _1c2d84ca0_cast_num(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _159131_t, jule::Ptr<_1c2d6d9e2_Data> _159149_d, jule::Ptr<_1db7061a7_Token> _159159_error_token) {
	if (_1c2d6e3a5_is_const(_159149_d.ptr())) {
		jule::Ptr<_1c2da42ec_Prim> _159317_prim = _1c2da1937_prim(_159131_t.ptr());;
		{
			
			if (_1c2cd2406_is_float(_159317_prim.get()._field_kind)) {
				_case_begin_1ab4821c7:;
				{
					_1dce2b0e5_set_f64(_159149_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1dce2a37a_as_f64(_159149_d.get()._field_constant.ptr())));
				}
			}
			else if (_1c2cd1a54_is_sig_int(_159317_prim.get()._field_kind)) {
				_case_begin_1ab48224e:;
				{
					_1dce2a600_set_i64(_159149_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_159149_d.get()._field_constant.ptr())));
				}
			}
			else if (_1c2cd1d40_is_unsig_int(_159317_prim.get()._field_kind)) {
				_case_begin_1ab4822c6:;
				{
					_1dce2a875_set_u64(_159149_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_159149_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ab48210b:;
		};
	};
	if ((_1c2da2174_enm(_159149_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1c2c4070a_Enum> _160517_e = _1c2da2174_enm(_159149_d.get()._field_kind.ptr());;
		if (_1c2cd269d_is_num(_1c2d9ec21_to_str(_160517_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c2da42ec_Prim> _161113_prim = _1c2da1937_prim(_159149_d.get()._field_kind.ptr());;
	if (((_161113_prim != nullptr) && _1c2cd269d_is_num(_1c2da4660_to_str(_161113_prim.ptr())))) {
		return;;
	};
	_1c2d70a6b_push_err(&(*_self_), _159159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_159149_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_159131_t.ptr()))}));
}



inline void _1c2d85168_cast_prim(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _161932_t, jule::Ptr<_1c2d6d9e2_Data> _161950_d, jule::Ptr<_1db7061a7_Token> _161960_error_token) {
	jule::Ptr<_1c2da42ec_Prim> _162013_prim = _1c2da1937_prim(_161932_t.ptr());;
	{
		
		if (_1c2da7795_is_any(_162013_prim.ptr())) {
			_case_begin_1ab487bb1:;
		}
		else if (_1c2da7531_is_str(_162013_prim.ptr())) {
			_case_begin_1ab488233:;
			{
				_1c2d8451e_cast_str(&(*_self_), _161950_d,_161960_error_token);
			}
		}
		else if (_1c2cd20d7_is_int(_1c2da4660_to_str(_162013_prim.ptr()))) {
			_case_begin_1ab488299:;
			{
				_1c2d848d7_cast_int(&(*_self_), _161932_t,_161950_d,_161960_error_token);
			}
		}
		else if (_1c2cd269d_is_num(_1c2da4660_to_str(_162013_prim.ptr()))) {
			_case_begin_1ab488310:;
			{
				_1c2d84ca0_cast_num(&(*_self_), _161932_t,_161950_d,_161960_error_token);
			}
		}
		else {
			_case_begin_1ab4881bc:;
			{
				_1c2d70a6b_push_err(&(*_self_), _161960_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_161932_t.ptr()))}));
			}
		}
		_match_end_1ab488156:;
	};
}



inline void _1c2d85487_cast_constant(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _163537_t, jule::Ptr<_1c2d6d9e2_Data>& _163556_d) {
	if (((_163556_d == nullptr) || (!(_1c2d6e3a5_is_const(_163556_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c2da42ec_Prim> _163913_prim = _1c2da1937_prim(_163537_t.ptr());;
	_1c2d9b9a9_cast_const_by_type(_163913_prim.get()._field_kind,_163556_d);
	_163556_d.get()._field_model=static_cast<jule::Any>(_163556_d.get()._field_constant);
}



inline void _1c2d85850_cast_type_enum(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _164438_t, jule::Ptr<_1c2d6d9e2_Data>& _164457_d, jule::Ptr<_1db7061a7_Token>& _164472_error_token) {
	jule::I64 _164513_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1c2d136e0_check_type_compatibility((*_self_)._field_s, _164457_d.get()._field_kind,_164438_t,_164472_error_token)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_164513_n);
		_1c2d70a6b_push_err(&(*_self_), _164472_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_164457_d.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_164438_t.ptr()))}));
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d85cc3_eval_cast_by_type_n_data(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d9e825_TypeKind> _165247_t, jule::Ptr<_1c2d6d9e2_Data> _165265_d, jule::Ptr<_1db7061a7_Token> _165279_error_token) {
	if (((_165265_d != nullptr) && _165265_d.get()._field_decl)) {
		_1c2d70a6b_push_err(&(*_self_), _165279_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1c2da1937_prim(_165265_d.get()._field_kind.ptr()) != nullptr) && _1c2da7795_is_any(_1c2da1937_prim(_165265_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ab491978:;
			{
				if ((_1c2da2174_enm(_165247_t.ptr()) != nullptr)) {
					_1c2d70a6b_push_err(&(*_self_), _165279_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1c2da23d8_tenm(_165247_t.ptr()) != nullptr)) {
					_1c2d70a6b_push_err(&(*_self_), _165279_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1c2da23d8_tenm(_165265_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab490cda:;
			{
				_1c2d85850_cast_type_enum(&(*_self_), _165247_t,_165265_d,_165279_error_token);
			}
		}
		else if ((_1c2da1e10_ptr(_165247_t.ptr()) != nullptr)) {
			_case_begin_1ab490d51:;
			{
				_1c2d835a6_cast_ptr(&(*_self_), _165247_t,_165265_d,_165279_error_token);
			}
		}
		else if ((_1c2da1b9b_sptr(_165247_t.ptr()) != nullptr)) {
			_case_begin_1ab490db7:;
			{
				_1c2d83d37_cast_ref(&(*_self_), _165247_t,_165265_d,_165279_error_token);
			}
		}
		else if ((_1c2da28b1_slc(_165247_t.ptr()) != nullptr)) {
			_case_begin_1ab490e2d:;
			{
				_1c2d84200_cast_slc(&(*_self_), _165247_t,_165265_d,_165279_error_token);
			}
		}
		else if ((_1c2da2d89_strct(_165247_t.ptr()) != nullptr)) {
			_case_begin_1ab491acc:;
			{
				_1c2d8396e_cast_struct(&(*_self_), _165247_t,_165265_d,_165279_error_token);
			}
		}
		else if ((_1c2da1937_prim(_165247_t.ptr()) != nullptr)) {
			_case_begin_1ab491b43:;
			{
				_1c2d85168_cast_prim(&(*_self_), _165247_t,_165265_d,_165279_error_token);
				_1c2d85487_cast_constant(&(*_self_), _165247_t,_165265_d);
			}
		}
		else {
			_case_begin_1ab490c74:;
			{
				_1c2d70a6b_push_err(&(*_self_), _165279_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_165247_t.ptr()))}));
				_165265_d=nullptr;
			}
		}
		_match_end_1ab490c1e:;
	};
	if ((_165265_d == nullptr)) {
		return nullptr;
	};
	_165265_d.get()._field_mutable=(_165265_d.get()._field_mutable || ((!(_1c2da0c22_mutable(_165265_d.get()._field_kind.ptr()))) && _1c2da0c22_mutable(_165247_t.ptr())));
	_165265_d.get()._field_lvalue=false;
	_165265_d.get()._field_decl=false;
	if (((_1c2da2174_enm(_165265_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2da002e_equals(_1c2da2174_enm(_165265_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _165247_t))))) {
		_1c2d9ae3c_apply_cast_kind(_165265_d,_165247_t);
		_165265_d.get()._field_model.operator jule::Ptr<_1dce321a6_CastingExprModel>().get()._field_token=_165279_error_token;
	} else {
		_165265_d.get()._field_kind=_165247_t;
	};
	return _165265_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86235_eval_cast_t(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1c2d9e825_TypeKind>& _170536_t, jule::Ptr<_1dcd6e38a_Expr>& _170555_e, jule::Ptr<_1db7061a7_Token>& _170570_et) {
	jule::Ptr<_1c2d9e825_TypeKind> _170617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_170617_prefix;
	});;
	if ((_1c2da28b1_slc(_170536_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _170555_e.get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1dcd75c43_SliceExpr>>()) {
				_case_begin_1ab49be6c:;
				{
					_self_.get()._field_prefix=_170536_t;
				}
			}
			_match_end_1ab49c05a:;
		};
	};
	jule::Ptr<_1c2d6d9e2_Data> _171517_d = _1c2d908c1_eval_expr_kind(_self_, _170555_e.get()._field_kind);;
	if (((_171517_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _171517_d;
	};
	return _1c2d85cc3_eval_cast_by_type_n_data(_self_.ptr(), _170536_t,_171517_d,_170570_et);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86543_eval_cast(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd7236b_CastExpr> _172233_c) {
	jule::Ptr<_1c2da397d_TypeSymbol> _172317_t = _1dce40c64_build_type(_172233_c.get()._field_kind);;
	jule::Bool _172413_ok = _1c2d115ab_check_type(_self_.get()._field_s, _172317_t,_self_.get()._field_lookup);;
	if ((!(_172413_ok))) {
		return nullptr;
	};
	return _1c2d86235_eval_cast_t(_self_, _172317_t.get()._field_kind,_172233_c.get()._field_expr,_172233_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86851_eval_ns_selection(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd72723_NsSelectionExpr> _173136_s) {
	jule::Str _173213_path = _1c2db7376_build_link_path_by_tokens(_173136_s.get()._field_ns);;
	jule::Ptr<_1c2d01854_ImportInfo> _173317_imp = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db8883_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>([=](jule::Ptr<_1c2d01854_ImportInfo> _173353_imp) mutable -> jule::Bool {
		if (((_173136_s.get()._field_ns.len() == 1LL) && (_173353_imp.get()._field_alias == _173213_path))) {
			return true;
		};
		return ((_173353_imp.get()._field_link_path == _173213_path) && _1c2d044b1_is_accessible_via_selection(_173353_imp.ptr()));
	}));;
	if ((_173317_imp == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _173136_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_173213_path)}));
		return nullptr;
	};
	jule::Trait<_1c2dba3bd_Lookup> _174517_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_173317_imp, 1);
	;
	_1c2d71242_disallow_builtin(&(*_self_));
	jule::Any _175017_def = _1c2d73a80_get_def(&(*_self_), _173136_s.get()._field_ident.get()._field_kind,false);;
	_1c2d71066_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_174517_lookup;
	jule::Ptr<_1c2d6d9e2_Data> _175417_d = _1c2d7759a_eval_def(&(*_self_), jule::Any(_175017_def),_173136_s.get()._field_ident);;
	return _175417_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d86cc4_eval_struct_lit_explicit(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd868e1_StructIns> _175948_s, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _176013_exprs, jule::Ptr<_1db7061a7_Token> _176033_error_token) {
	jule::Bool _176113_ok = _1c2d0da09_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_175948_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_175948_s.get()._field_generics.len()),_176033_error_token);;
	if ((!(_176113_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _175948_s.get()._field_decl))) {
		_1c2d70a6b_push_err(_self_.ptr(), _176033_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_175948_s.get()._field_decl.get()._field_ident)}));
	};
	_1ab45c03c_push_reference(_self_.ptr(), _175948_s);
	_1c2d75972_check_deprecated(_self_.ptr(), _175948_s.get()._field_decl.get()._field_directives,_176033_error_token);
	_1c2d63168_StructLitChecker _177417_slc = _1c2d63168_StructLitChecker{._field_e=_self_, ._field_error_token=_176033_error_token, ._field_s=_175948_s, };;
	_1c2d6470d_check(&_177417_slc, _176013_exprs);
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_175948_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31ccc_StructLitExprModel>(_1dce31ccc_StructLitExprModel{._field_strct=_175948_s, ._field_args=_177417_slc._field_args})), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d870e3_eval_struct_lit(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd74835_StructLit> _179339_lit) {
	jule::Ptr<_1c2da397d_TypeSymbol> _179417_t = _1dce40c64_build_type(_179339_lit.get()._field_kind);;
	jule::Bool _179513_ok = _1c2d115ab_check_type(_self_.get()._field_s, _179417_t,_self_.get()._field_lookup);;
	if ((!(_179513_ok))) {
		return nullptr;
	};
	jule::Ptr<_1dcd868e1_StructIns> _180017_s = _1c2da2d89_strct(_179417_t.get()._field_kind.ptr());;
	if ((_180017_s == nullptr)) {
		if ((_1c2da1b9b_sptr(_179417_t.get()._field_kind.ptr()) != nullptr)) {
			_180017_s=_1c2da2d89_strct(_1c2da1b9b_sptr(_179417_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_180017_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1c2d70a6b_push_err(_self_.ptr(), _179339_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1c2d6d9e2_Data> _181317_d = _1c2d86cc4_eval_struct_lit_explicit(_self_, _180017_s,_179339_lit.get()._field_exprs,_179339_lit.get()._field_kind.get()._field_token);;
	if ((_1c2da1b9b_sptr(_179417_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1dce31ccc_StructLitExprModel> _181521_model = _181317_d.get()._field_model.operator jule::Ptr<_1dce31ccc_StructLitExprModel>();;
		_1c2d99897_make_struct_lit_alloc(_181317_d,_181521_model);
	};
	return _181317_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d87401_eval_type(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd69d69_TypeDecl> _182132_t) {
	jule::Ptr<_1c2da397d_TypeSymbol> _182217_tk = _1dce40c64_build_type(_182132_t);;
	jule::Bool _182313_ok = _1c2d115ab_check_type((*_self_)._field_s, _182217_tk,(*_self_)._field_lookup);;
	if ((!(_182313_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=_182217_tk.get()._field_kind, ._field_model=static_cast<jule::Any>(_182217_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1c2d87720_call_type_fn(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd73658_FnCallExpr>& _183437_fc, jule::Ptr<_1c2d6d9e2_Data>& _183459_d) {
	if ((_183437_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_self_.ptr(), _183437_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_183437_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_self_.ptr(), _183437_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_183437_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1dcd6e38a_Expr> _184221_arg = _183437_fc.get()._field_args[0LL];;
		_183459_d=_1c2d86235_eval_cast_t(_self_, _183459_d.get()._field_kind,_184221_arg,_184221_arg.get()._field_token);
		return;;
	};
	if ((_183459_d != nullptr)) {
		_183459_d.get()._field_decl=false;
	};
}



inline void _1c2d87a3e_call_builtin_fn(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd73658_FnCallExpr>& _185240_fc, jule::Ptr<_1c2d6d9e2_Data>& _185262_d) {
	_185262_d=_1c2da2b25_fnc(_185262_d.get()._field_kind.ptr()).get()._field_caller(_self_,_185240_fc,_185262_d);
	if ((_185262_d == nullptr)) {
		return;;
	};
	_185262_d.get()._field_mutable=true;
}



inline void _1c2d87d80_check_fn_of_concurrent_call(_1c2d70560_Eval* _self_, jule::Ptr<_1dce3b644_FnIns>& _186047_f, jule::Ptr<_1db7061a7_Token> _186058_error_token) {
	if (_1c2d714a6_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _186047_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab4b9dad:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3a775_ParamIns> &_186516_p = *it;
			{
				if (_186516_p.get()._field_decl.get()._field_reference) {
					_1c2d70a6b_push_err(&(*_self_), _186058_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ab4b9dad:;
			++it;
			goto _iter_begin_1ab4b9dad;
		}
		_iter_end_1ab4b9dad:;
	};
}



inline void _1c2d8827b_process_exceptional_handler(_1c2d70560_Eval* _self_, jule::Ptr<_1dce3b644_FnIns>& _187351_f, jule::Ptr<_1dcd73658_FnCallExpr>& _187367_fc, jule::Ptr<_1c2d6d9e2_Data>& _187389_d) {
	jule::Bool _187413_result_needed = ((!(_1dce38e05_is_void(_187351_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1c2cd9a07_ScopeChecker> _187517_csc = nullptr;;
	jule::Ptr<_1c2cd2d1e_Scope> _187617_ch = nullptr;;
	jule::Ptr<_1dce32393_FnCallExprModel> _187817_model = _187389_d.get()._field_model.operator jule::Ptr<_1dce32393_FnCallExprModel>();;
	jule::Ptr<_1c2cd9a07_ScopeChecker> _188217_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>();;
	_187517_csc=_1c2cea09a_new_child_checker(_188217_sc);
	if (_187413_result_needed) {
		_187517_csc.get()._field_result=_187351_f;
	};
	_187617_ch=_1c2cde3be_get_child(_188217_sc.ptr());
	_187367_fc.get()._field_exception.get()._field_parent=_188217_sc.get()._field_tree;
	_187517_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_187517_csc.get()._field_table.get()._field_vars,1);_187517_csc.get()._field_table.get()._field_vars.__push(_1c2d99bd8_build_error_var(_187617_ch,_187367_fc));;
	_1c2cde787_check_child_ssc(_188217_sc, _187367_fc.get()._field_exception,_187617_ch,_187517_csc);
	_187817_model.get()._field_assigned=_187413_result_needed;
	_187817_model.get()._field_except=_187617_ch;
	if ((_187413_result_needed && (_187517_csc.get()._field_result != nullptr))) {
		_1c2d70a6b_push_err(&(*_self_), _187367_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c2d885ab_call_fn(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd73658_FnCallExpr>& _190032_fc, jule::Ptr<_1c2d6d9e2_Data>& _190054_d) {
	jule::Ptr<_1dce3b644_FnIns> _190117_f = _1c2da2b25_fnc(_190054_d.get()._field_kind.ptr());;
	if ((_1c2d7171a_is_global(_self_.ptr()) && _190117_f.get()._field_decl.get()._field_exceptional)) {
		_1c2d70a6b_push_err(_self_.ptr(), _190032_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1c2d70d8a_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_190054_d=nullptr;
		return;;
	};
	if (_1dce3c9ca_is_builtin(_190117_f.ptr())) {
		_1c2d87a3e_call_builtin_fn(_self_, _190032_fc,_190054_d);
		return;;
	};
	if (((!(_1dce39169_is_method(_190117_f.get()._field_decl.ptr()))) && _1c2db64a7_has_directive(_190117_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1c2d70a6b_push_err(_self_.ptr(), _190032_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_190054_d=nullptr;
		return;;
	};
	if (((((!(_190054_d.get()._field_mutable)) && _1dce39169_is_method(_190117_f.get()._field_decl.ptr())) && (!(_190117_f.get()._field_decl.get()._field_statically))) && _190117_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1c2d70a6b_push_err(_self_.ptr(), _190032_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1c2d714a6_is_unsafe(_self_.ptr()))) && _190117_f.get()._field_decl.get()._field_unsafety)) {
		_1c2d70a6b_push_err(_self_.ptr(), _190032_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _192517_dynamic_annotation = (((_190117_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_190117_f.get()._field_generics.len() == 0LL)) && (_190117_f.get()._field_params.len() > 0LL));;
	if (_192517_dynamic_annotation) {
		_190117_f.get()._field_generics=jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>>::alloc(_190117_f.get()._field_decl.get()._field_generics.len());
	} else if ((_190117_f.get()._field_generics.len() != _190117_f.get()._field_decl.get()._field_generics.len())) {
		_1c2d0da09_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_190117_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_190117_f.get()._field_generics.len()),_190032_fc.get()._field_token);
		_190054_d=nullptr;
		return;;
	};
	jule::Ptr<_1c2d099a0_Sema> _193417_old = _self_.get()._field_s;;
	if ((_190117_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_190117_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_193417_old != _self_.get()._field_s)) {
			_193417_old.get()._field_errors=jule::append(_193417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_193417_old;
	});;
	if ((!(_192517_dynamic_annotation))) {
		if ((!(_190117_f.get()._field_reloaded))) {
			jule::Bool _194921_ok = _1c2d15505_reload_fn_ins_types(_self_.get()._field_s, _190117_f);;
			_190117_f.get()._field_reloaded=true;
			if ((!(_194921_ok))) {
				_190054_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1dce3b644_FnIns> _195621_exist_instance = _1dce3a3bd_append_instance(_190117_f.get()._field_decl.ptr(), _190117_f);;
		if ((_195621_exist_instance != nullptr)) {
			_190117_f=_195621_exist_instance;
		};
	} else {
		_1c2d13d83_build_fn_non_generic_type_kinds(_self_.get()._field_s, _190117_f);
	};
	_1c2d6075e_FnCallArgChecker _196417_fcac = _1c2d6075e_FnCallArgChecker{._field_e=_self_, ._field_args=_190032_fc.get()._field_args, ._field_error_token=_190032_fc.get()._field_token, ._field_f=_190117_f, ._field_dynamic_annotation=_192517_dynamic_annotation, };;
	jule::Bool _197117_ok = false;;
	if ((_190117_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_193417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_193417_old);
		_197117_ok=_1c2d62b29_check(&_196417_fcac);
		std::tie(_193417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_193417_old);
	} else {
		_197117_ok=_1c2d62b29_check(&_196417_fcac);
	};
	if (_192517_dynamic_annotation) {
		if ((!(_197117_ok))) {
			_190054_d=nullptr;
			return;;
		};
		if ((!(_1c2d818b2_check_generic_fn(_self_, _190117_f,_190032_fc.get()._field_token,_190054_d.get()._field_model)))) {
			_190054_d=nullptr;
			return;;
		};
	};
	jule::Any _199117_call_model = _190054_d.get()._field_model;;
	if (_1dce38e05_is_void(_190117_f.get()._field_decl.ptr())) {
		_190054_d=_1c2d9b13a_build_void_data();
	} else {
		_190054_d.get()._field_kind=_190117_f.get()._field_result;
		_190054_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1dce32393_FnCallExprModel> _200017_model = jule::new_ptr<_1dce32393_FnCallExprModel>(_1dce32393_FnCallExprModel{._field_token=_190032_fc.get()._field_token, ._field_func=_190117_f, ._field_expr=_199117_call_model, ._field_args=_196417_fcac._field_arg_models, });;
	_190054_d.get()._field_model=static_cast<jule::Any>(_200017_model);
	_190054_d.get()._field_mutable=true;
	if (_190117_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1dcd739bb_unhandled(_190032_fc.ptr())) {
				_case_begin_1ab4d5538:;
				{
					_1c2d70a6b_push_err(_self_.ptr(), _190032_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1c2d70d8a_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1dcd73c30_ignored(_190032_fc.ptr())) {
				_case_begin_1ab4c6eca:;
				{
					goto _match_end_1ab4d50b5;
				}
			}
			else {
				_case_begin_1ab4d5192:;
				{
					_1c2d8827b_process_exceptional_handler(_self_.ptr(), _190117_f,_190032_fc,_190054_d);
				}
			}
			_match_end_1ab4d50b5:;
		};
	} else if ((!(_1dcd739bb_unhandled(_190032_fc.ptr())))) {
		_1c2d70a6b_push_err(_self_.ptr(), _190032_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d888b9_eval_fn_call(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd73658_FnCallExpr> _202636_fc) {
	jule::Ptr<_1c2d9e825_TypeKind> _202717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_202717_prefix;
	});;
	{
		auto &_match_expr{ _202636_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd71403_IdentExpr>>()) {
			_case_begin_1ab4d7b67:;
			{
				if ((_202636_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1c2e4b938_builtin_caller_error(_self_,_202636_fc);
				};
			}
		}
		_match_end_1ab4d7b12:;
	};
	jule::Ptr<_1c2d6d9e2_Data> _204017_d = _1c2d908c1_eval_expr_kind(_self_, _202636_fc.get()._field_expr.get()._field_kind);;
	if ((_204017_d == nullptr)) {
		return nullptr;
	};
	if (_204017_d.get()._field_decl) {
		_1c2d87720_call_type_fn(_self_, _202636_fc,_204017_d);
		return _204017_d;
	};
	if ((_1c2da2b25_fnc(_204017_d.get()._field_kind.ptr()) == nullptr)) {
		_1c2d70a6b_push_err(_self_.ptr(), _202636_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c2d885ab_call_fn(_self_, _202636_fc,_204017_d);
	return _204017_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d88c71_eval_enum_static(_1c2d70560_Eval* _self_, jule::Ptr<_1c2c4070a_Enum> _205939_enm, jule::Ptr<_1db7061a7_Token> _205951_ident) {
	jule::Ptr<_1c2d6d9e2_Data> _206017_d = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_205939_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1c2c3ec15_EnumItem> _206917_item = _1c2c412bb_find_item(_205939_enm.ptr(), _205951_ident.get()._field_kind);;
	if ((_206917_item == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _205951_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_205939_enm.get()._field_ident),jule::Any(_205951_ident.get()._field_kind)}));
	} else {
		_206017_d.get()._field_constant=jule::new_ptr<_1dcdbd1a8_Const>((*(_206917_item.get()._field_value.get()._field_data.get()._field_constant)));
		_206017_d.get()._field_model=static_cast<jule::Any>(_206017_d.get()._field_constant);
		_1c2d9b6e0_apply_cast_model_by_enum(_206017_d,_205939_enm);
	};
	return _206017_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d89128_eval_type_enum_static(_1c2d70560_Eval* _self_, jule::Ptr<_1c2c41d05_TypeEnum> _208144_enm, jule::Ptr<_1db7061a7_Token> _208160_ident) {
	jule::Ptr<_1c2c4173e_TypeEnumItem> _208217_item = _1c2c4283e_find_item(_208144_enm.ptr(), _208160_ident.get()._field_kind);;
	if ((_208217_item == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _208160_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_208144_enm.get()._field_ident),jule::Any(_208160_ident.get()._field_kind)}));
		return nullptr;
	};
	{
		
		if ((_1c2da2174_enm(_208217_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab4e1863:;
			{
				return _1c2d74113___eval_enum(&(*_self_), _1c2da2174_enm(_208217_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1c2da23d8_tenm(_208217_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab4e1a61:;
			{
				return _1c2d747c8___eval_type_enum(&(*_self_), _1c2da23d8_tenm(_208217_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1c2da2d89_strct(_208217_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab4e0c80:;
			{
				return _1c2d74e8d___eval_struct(&(*_self_), _1c2da2d89_strct(_208217_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else {
			_case_begin_1ab4deed2:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _209521_d = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=_208217_item.get()._field_kind.get()._field_kind, ._field_decl=true, });;
				_209521_d.get()._field_model=static_cast<jule::Any>(_209521_d.get()._field_kind);
				return _209521_d;
			}
		}
		_match_end_1ab4dee7c:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d894d0_eval_struct_static(_1c2d70560_Eval* _self_, jule::Ptr<_1dcd868e1_StructIns> _210441_s, jule::Ptr<_1db7061a7_Token> _210456_ident) {
	jule::Ptr<_1c2d6d9e2_Data> _210517_d = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1dce38993_Fn> _211317_method = _1dcd61a64_find_method(_210441_s.ptr(), _210456_ident.get()._field_kind,true);;
	if ((_211317_method != nullptr)) {
		if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _211317_method.get()._field_public,_211317_method.get()._field_token)))) {
			_1c2d70a6b_push_err(&(*_self_), _210456_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_210456_ident.get()._field_kind)}));
			_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1dce3b644_FnIns> _212021_ins = _1dce3a0e3_instance(_211317_method);;
		_212021_ins.get()._field_owner=_210441_s;
		_1ab3a2c52_push_reference(&(*_self_), _212021_ins);
		_210517_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33817_StructStaticIdentExprModel>(_1dce33817_StructStaticIdentExprModel{._field_structure=_210441_s, ._field_expr=_210517_d.get()._field_model, ._field_method=_212021_ins}));
		_210517_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_212021_ins, 1)});
		return _210517_d;
	};
	jule::Ptr<_1c2d266ae_Var> _213417_sttc = _1dcd4a9c6_find_static(_210441_s.get()._field_decl.ptr(), _210456_ident.get()._field_kind);;
	if ((_213417_sttc != nullptr)) {
		return _1c2d76d3b_eval_var(&(*_self_), _213417_sttc,_210456_ident);
	};
	_1c2d70a6b_push_err(&(*_self_), _210456_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_210441_s.get()._field_decl.get()._field_ident),jule::Any(_210456_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d89931_eval_trait_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _214343_d, jule::Ptr<_1c2c3d54e_Trait> _214357_trt, jule::Ptr<_1db7061a7_Token> _214374_ident) {
	jule::Ptr<_1dce38993_Fn> _214417_f = _1c2c3e396_find_method(_214357_trt.ptr(), _214374_ident.get()._field_kind);;
	if ((_214417_f == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _214374_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214357_trt.get()._field_ident),jule::Any(_214374_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1dce3a0e3_instance(_214417_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3320c_TraitSubIdentExprModel>(_1dce3320c_TraitSubIdentExprModel{._field_token=_214374_ident, ._field_expr=_214343_d.get()._field_model, ._field_method=_214417_f, ._field_trt=_214357_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d89e2b_eval_struct_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _216644_d, jule::Ptr<_1dcd868e1_StructIns> _216658_s, jule::Ptr<_1dcd72b96_SubIdentExpr> _216677_si, jule::Bool _216696_ref) {
	jule::Ptr<_1dcd62c0d_FieldIns> _216717_f = _1dcd6457d_find_field(_216658_s.ptr(), _216677_si.get()._field_ident.get()._field_kind);;
	if ((_216717_f != nullptr)) {
		if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _216717_f.get()._field_decl.get()._field_public,_216717_f.get()._field_decl.get()._field_token)))) {
			_1c2d70a6b_push_err(&(*_self_), _216677_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_216717_f.get()._field_decl.get()._field_ident)}));
			_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1dce3362a_StructSubIdentExprModel> _217421_model = jule::new_ptr<_1dce3362a_StructSubIdentExprModel>(_1dce3362a_StructSubIdentExprModel{._field_token=_216677_si.get()._field_ident, ._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*(_216644_d))), ._field_expr_kind=_216644_d.get()._field_kind, ._field_field=_216717_f});;
		_216644_d.get()._field_model=static_cast<jule::Any>(_217421_model);
		_216644_d.get()._field_kind=_216717_f.get()._field_kind;
		_216644_d.get()._field_lvalue=true;
		if ((_216717_f.get()._field_decl.get()._field_mutable && (!(_216644_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
					_case_begin_1ab502d3b:;
					{
						jule::Ptr<_1c2cd9a07_ScopeChecker> _218825_scope = _1c2cdcb1a_get_root((*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>());;
						_216644_d.get()._field_mutable=((_218825_scope.get()._field_owner != nullptr) && (_218825_scope.get()._field_owner.get()._field_owner == _216658_s));
					}
				}
				_match_end_1ab502cd6:;
			};
		};
		return _216644_d;
	};
	;
	jule::Ptr<_1dce38993_Fn> _219717_m = _1dcd61a64_find_method(_216658_s.ptr(), _216677_si.get()._field_ident.get()._field_kind,false);;
	if ((_219717_m == nullptr)) {
		_1c2d70a6b_push_err(&(*_self_), _216677_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_216658_s.get()._field_decl.get()._field_ident),jule::Any(_216677_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _219717_m.get()._field_public,_219717_m.get()._field_token)))) {
		_1c2d70a6b_push_err(&(*_self_), _216677_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_219717_m.get()._field_ident)}));
		_1c2d70d8a_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1dce379e7_is_ref(_219717_m.get()._field_params[0LL].ptr()) && (!(_216696_ref)))) {
		_1c2d70a6b_push_err(&(*_self_), _216677_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1c2d75972_check_deprecated(&(*_self_), _219717_m.get()._field_directives,_216677_si.get()._field_ident);
	jule::Ptr<_1dce3b644_FnIns> _221317_ins = _1dce3a0e3_instance(_219717_m);;
	_221317_ins.get()._field_owner=_216658_s;
	_1ab3a2c52_push_reference(&(*_self_), _221317_ins);
	jule::Ptr<_1c2d6d9e2_Data> _221617_model = jule::new_ptr<_1c2d6d9e2_Data>((*(_216644_d)));;
	_216644_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3362a_StructSubIdentExprModel>(_1dce3362a_StructSubIdentExprModel{._field_token=_216677_si.get()._field_ident, ._field_expr=_221617_model, ._field_expr_kind=_216644_d.get()._field_kind, ._field_method=_221317_ins, }));
	_216644_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_221317_ins, 1)});
	return _216644_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8a2d3_eval_slice_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _222743_d, jule::Ptr<_1db7061a7_Token> _222757_ident) {
	{
		auto &_match_expr{ _222757_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ab50b8a0:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_222743_d.get()._field_kind, ._field_expr=_222743_d.get()._field_model, ._field_token=_222757_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ab50b916:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_222743_d.get()._field_kind, ._field_expr=_222743_d.get()._field_model, ._field_token=_222757_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ab50b97c:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_params=jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>::make({jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e29be1_builtin_caller_common_mut), }), 1)}), ._field_mutable=_222743_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_222743_d.get()._field_kind, ._field_expr=_222743_d.get()._field_model, ._field_token=_222757_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ab50b839:;
			{
				_1c2d70a6b_push_err(&(*_self_), _222757_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_222743_d.get()._field_kind.ptr())),jule::Any(_222757_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab50b5e7:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8a68a_eval_array_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _228643_d, jule::Ptr<_1db7061a7_Token> _228657_ident) {
	{
		auto &_match_expr{ _228657_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ab50cbae:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _228921_c = static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2da264c_arr(_228643_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(_228921_c), ._field_constant=_228921_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ab512ab5:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_params=jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>::make({jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e29be1_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228643_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_228643_d.get()._field_kind, ._field_expr=_228643_d.get()._field_model, ._field_token=_228657_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ab511a92:;
			{
				_1c2d70a6b_push_err(&(*_self_), _228657_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_228643_d.get()._field_kind.ptr())),jule::Any(_228657_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab5119d7:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8aa42_eval_map_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _233141_d, jule::Ptr<_1db7061a7_Token> _233155_ident) {
	jule::Ptr<_1c2da9a94_Map> _233217_map_kind = _1c2da3362_map(_233141_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _233155_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ab517922:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_233141_d.get()._field_kind, ._field_expr=_233141_d.get()._field_model, ._field_token=_233155_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1ab517988:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e29be1_builtin_caller_common_mut), }), 1)}), ._field_mutable=_233141_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_233141_d.get()._field_kind, ._field_expr=_233141_d.get()._field_model, ._field_token=_233155_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1ab517801:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_result=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=_233217_map_kind.get()._field_key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e29be1_builtin_caller_common_mut), }), 1)}), ._field_mutable=_233141_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_233141_d.get()._field_kind, ._field_expr=_233141_d.get()._field_model, ._field_token=_233155_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1ab517867:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_result=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=_233217_map_kind.get()._field_val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e29be1_builtin_caller_common_mut), }), 1)}), ._field_mutable=_233141_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_233141_d.get()._field_kind, ._field_expr=_233141_d.get()._field_model, ._field_token=_233155_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1ab516ab9:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_params=jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>::make({jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_233217_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e4ee58_builtin_caller_common), }), 1)}), ._field_mutable=_233141_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_233141_d.get()._field_kind, ._field_expr=_233141_d.get()._field_model, ._field_token=_233155_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1ab516b30:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_params=jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>::make({jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_233217_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e29be1_builtin_caller_common_mut), }), 1)}), ._field_mutable=_233141_d.get()._field_mutable, ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_233141_d.get()._field_kind, ._field_expr=_233141_d.get()._field_model, ._field_token=_233155_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1ab516a53:;
			{
				_1c2d70a6b_push_err(&(*_self_), _233155_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2da9e07_to_str(_233217_map_kind.ptr())),jule::Any(_233155_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab5169a9:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8ade9_eval_str_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _245441_d, jule::Ptr<_1db7061a7_Token> _245455_ident) {
	jule::Ptr<_1c2d9e825_TypeKind> _245517_str_kind = jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _245455_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ab5212bb:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _245821_sd = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1c2d6e3a5_is_const(_245441_d.ptr())) {
					_245821_sd.get()._field_constant=static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1dce298c9_read_str(_245441_d.get()._field_constant.ptr()).len())));
					_245821_sd.get()._field_model=static_cast<jule::Any>(_245821_sd.get()._field_constant);
				} else {
					_245821_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_245441_d.get()._field_kind, ._field_expr=_245441_d.get()._field_model, ._field_token=_245455_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _245821_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ab521332:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _247421_sd = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1c2d6e3a5_is_const(_245441_d.ptr())) {
					_247421_sd.get()._field_constant=static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1dce298c9_read_str(_245441_d.get()._field_constant.ptr()).cap())));
					_247421_sd.get()._field_model=static_cast<jule::Any>(_247421_sd.get()._field_constant);
				} else {
					_247421_sd.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_245441_d.get()._field_kind, ._field_expr=_245441_d.get()._field_model, ._field_token=_245455_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _247421_sd;
			}
		}
		else {
			_case_begin_1ab521255:;
			{
				_1c2d70a6b_push_err(&(*_self_), _245455_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_245517_str_kind.ptr())),jule::Any(_245455_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab5211ab:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8b207_eval_int_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _249539_ident) {
	;
	{
		auto &_match_expr{ _249539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab522ec1:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _250021_c = static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2ccbc08_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_250021_c), ._field_constant=_250021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab52823a:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _250721_c = static__1dce2808c_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2ccb91c_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=static_cast<jule::Any>(_250721_c), ._field_constant=_250721_c});
			}
		}
		else {
			_case_begin_1ab52748c:;
			{
				_1c2d70a6b_push_err(&(*_self_), _249539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_249539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab5272e4:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8b515_eval_uint_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _251940_ident) {
	;
	{
		auto &_match_expr{ _251940_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab52ab88:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _252421_c = static__1dce281be_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1c2ccbc08_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("uint", 4)), 6)}), ._field_model=static_cast<jule::Any>(_252421_c), ._field_constant=_252421_c});
			}
		}
		else {
			_case_begin_1ab52ae1e:;
			{
				_1c2d70a6b_push_err(&(*_self_), _251940_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_251940_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab52ad75:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8b823_eval_i8_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _253638_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab52dd9a:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _254321_c = static__1dce2808c_new_i64(127LL);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_254321_c), ._field_constant=_254321_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab52de11:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _255021_c = static__1dce2808c_new_i64(-128LL);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_255021_c), ._field_constant=_255021_c});
			}
		}
		else {
			_case_begin_1ab52dce0:;
			{
				_1c2d70a6b_push_err(&(*_self_), _253638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_253638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab52dc8a:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8bb31_eval_i16_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _256239_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _256239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab532a80:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _256921_c = static__1dce2808c_new_i64(32767LL);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_256921_c), ._field_constant=_256921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab532ae6:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _257621_c = static__1dce2808c_new_i64(-32768LL);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_257621_c), ._field_constant=_257621_c});
			}
		}
		else {
			_case_begin_1ab5329c5:;
			{
				_1c2d70a6b_push_err(&(*_self_), _256239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_256239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab532970:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8be3e_eval_i32_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _258839_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _258839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab536765:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _259521_c = static__1dce2808c_new_i64(2147483647LL);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_259521_c), ._field_constant=_259521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab5367cb:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _260221_c = static__1dce2808c_new_i64(-2147483648LL);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_260221_c), ._field_constant=_260221_c});
			}
		}
		else {
			_case_begin_1ab5366aa:;
			{
				_1c2d70a6b_push_err(&(*_self_), _258839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_258839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab536655:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8c24c_eval_i64_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _261439_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _261439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab53a44a:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _262121_c = static__1dce2808c_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_262121_c), ._field_constant=_262121_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab53a4b1:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _262821_c = static__1dce2808c_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_262821_c), ._field_constant=_262821_c});
			}
		}
		else {
			_case_begin_1ab53a390:;
			{
				_1c2d70a6b_push_err(&(*_self_), _261439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_261439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab53a33a:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8c55a_eval_u8_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _264038_ident) {
	;
	;
	{
		auto &_match_expr{ _264038_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab53dbac:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _264621_c = static__1dce281be_new_u64(255LLU);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u8", 2)), 6)}), ._field_model=static_cast<jule::Any>(_264621_c), ._field_constant=_264621_c});
			}
		}
		else {
			_case_begin_1ab53d1a6:;
			{
				_1c2d70a6b_push_err(&(*_self_), _264038_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_264038_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab53da58:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8c868_eval_u16_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _265839_ident) {
	;
	;
	{
		auto &_match_expr{ _265839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab541561:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _266421_c = static__1dce281be_new_u64(65535LLU);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u16", 3)), 6)}), ._field_model=static_cast<jule::Any>(_266421_c), ._field_constant=_266421_c});
			}
		}
		else {
			_case_begin_1ab540a5a:;
			{
				_1c2d70a6b_push_err(&(*_self_), _265839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_265839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab54140c:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8cb76_eval_u32_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _267639_ident) {
	;
	;
	{
		auto &_match_expr{ _267639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab543e15:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _268221_c = static__1dce281be_new_u64(4294967295LLU);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_268221_c), ._field_constant=_268221_c});
			}
		}
		else {
			_case_begin_1ab54340e:;
			{
				_1c2d70a6b_push_err(&(*_self_), _267639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_267639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab543cb1:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8ce84_eval_u64_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _269439_ident) {
	;
	;
	{
		auto &_match_expr{ _269439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab5467b9:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _270021_c = static__1dce281be_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_270021_c), ._field_constant=_270021_c});
			}
		}
		else {
			_case_begin_1ab545cb3:;
			{
				_1c2d70a6b_push_err(&(*_self_), _269439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_269439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab546665:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8d292_eval_f32_type_tatic(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _271238_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _271238_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab549943:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _272021_c = static__1dce28895_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272021_c), ._field_constant=_272021_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab5499a9:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _272721_c = static__1dce28895_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_272721_c), ._field_constant=_272721_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ab549a20:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _273421_c = static__1dce28895_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=static_cast<jule::Any>(_273421_c), ._field_constant=_273421_c});
			}
		}
		else {
			_case_begin_1ab549844:;
			{
				_1c2d70a6b_push_err(&(*_self_), _271238_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_271238_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab5497cd:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8d5a0_eval_f64_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1db7061a7_Token> _274639_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _274639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ab54e8b0:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _275421_c = static__1dce28895_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_275421_c), ._field_constant=_275421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ab54e926:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _276121_c = static__1dce28895_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_276121_c), ._field_constant=_276121_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ab54e98c:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _276821_c = static__1dce28895_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=static_cast<jule::Any>(_276821_c), ._field_constant=_276821_c});
			}
		}
		else {
			_case_begin_1ab54e7b1:;
			{
				_1c2d70a6b_push_err(&(*_self_), _274639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_274639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab54e74a:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8d957_eval_prim_static(_1c2d70560_Eval* _self_, jule::Str _278035_kind, jule::Ptr<_1db7061a7_Token> _278046_ident) {
	{
		auto &_match_expr{ _278035_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab5538d6:;
			{
				return _1c2d8b207_eval_int_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab55394c:;
			{
				return _1c2d8b515_eval_uint_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab5542dd:;
			{
				return _1c2d8b823_eval_i8_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab554354:;
			{
				return _1c2d8bb31_eval_i16_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab5543ba:;
			{
				return _1c2d8be3e_eval_i32_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab554431:;
			{
				return _1c2d8c24c_eval_i64_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab554497:;
			{
				return _1c2d8c55a_eval_u8_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab554552:;
			{
				return _1c2d8c868_eval_u16_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab5545b8:;
			{
				return _1c2d8cb76_eval_u32_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab55462e:;
			{
				return _1c2d8ce84_eval_u64_type_static(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab554695:;
			{
				return _1c2d8d292_eval_f32_type_tatic(&(*_self_), _278046_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab55470b:;
			{
				return _1c2d8d5a0_eval_f64_type_static(&(*_self_), _278046_ident);
			}
		}
		else {
			_case_begin_1ab552e13:;
			{
				_1c2d70a6b_push_err(&(*_self_), _278046_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_278035_kind),jule::Any(_278046_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab553771:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8dd0e_eval_type_static(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _281239_d, jule::Ptr<_1dcd72b96_SubIdentExpr> _281253_si) {
	{
		
		if ((_1c2da1937_prim(_281239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab558b83:;
			{
				return _1c2d8d957_eval_prim_static(&(*_self_), _1c2da4660_to_str(_1c2da1937_prim(_281239_d.get()._field_kind.ptr()).ptr()),_281253_si.get()._field_ident);
			}
		}
		else if ((_1c2da2174_enm(_281239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab558be9:;
			{
				return _1c2d88c71_eval_enum_static(&(*_self_), _1c2da2174_enm(_281239_d.get()._field_kind.ptr()),_281253_si.get()._field_ident);
			}
		}
		else if ((_1c2da23d8_tenm(_281239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab558c60:;
			{
				return _1c2d89128_eval_type_enum_static(&(*_self_), _1c2da23d8_tenm(_281239_d.get()._field_kind.ptr()),_281253_si.get()._field_ident);
			}
		}
		else if ((_1c2da2d89_strct(_281239_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab558cc6:;
			{
				return _1c2d894d0_eval_struct_static(&(*_self_), _1c2da2d89_strct(_281239_d.get()._field_kind.ptr()),_281253_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1ab558b1c:;
			{
				_1c2d70a6b_push_err(&(*_self_), _281253_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_281239_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab558a62:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8e1b6_eval_obj_sub_ident(_1c2d70560_Eval* _self_, jule::Ptr<_1c2d6d9e2_Data> _282841_d, jule::Ptr<_1dcd72b96_SubIdentExpr> _282855_si) {
	if (_1db70894b_is_ignore_ident(_282855_si.get()._field_ident.get()._field_kind)) {
		_1c2d70a6b_push_err(&(*_self_), _282855_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _283417_kind = _282841_d.get()._field_kind;;
	{
		
		if ((_1c2da1e10_ptr(_282841_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5646a5:;
			{
				jule::Ptr<_1c2dab0e5_Ptr> _283717_ptr = _1c2da1e10_ptr(_282841_d.get()._field_kind.ptr());;
				if (_1c2dabab8_is_unsafe(_283717_ptr.ptr())) {
					goto _match_end_1ab564551;
				};
				if (((!(_282855_si.get()._field_is_self)) && (!(_1c2d714a6_is_unsafe(&(*_self_)))))) {
					_1c2d70a6b_push_err(&(*_self_), _282855_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_283417_kind=_1c2da1e10_ptr(_282841_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1c2da1b9b_sptr(_282841_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab56471b:;
			{
				_283417_kind=_1c2da1b9b_sptr(_282841_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1ab564551:;
	};
	{
		
		if ((_1c2da30ed_trt(_282841_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab56718b:;
			{
				return _1c2d89931_eval_trait_sub_ident(&(*_self_), _282841_d,_1c2da30ed_trt(_282841_d.get()._field_kind.ptr()),_282855_si.get()._field_ident);
			}
		}
		else if ((_1c2da2d89_strct(_283417_kind.ptr()) != nullptr)) {
			_case_begin_1ab567213:;
			{
				jule::Ptr<_1dcd868e1_StructIns> _285317_s = _1c2da2d89_strct(_283417_kind.ptr());;
				if (_1c2d9a678_is_instanced_struct(_285317_s)) {
					jule::Bool _285525_used_reference_elem = (_1c2da1b9b_sptr(_282841_d.get()._field_kind.ptr()) != nullptr);;
					return _1c2d89e2b_eval_struct_sub_ident(&(*_self_), _282841_d,_1c2da2d89_strct(_283417_kind.ptr()),_282855_si,_285525_used_reference_elem);
				};
			}
		}
		else if ((_1c2da28b1_slc(_283417_kind.ptr()) != nullptr)) {
			_case_begin_1ab56728a:;
			{
				return _1c2d8a2d3_eval_slice_sub_ident(&(*_self_), _282841_d,_282855_si.get()._field_ident);
			}
		}
		else if ((_1c2da264c_arr(_283417_kind.ptr()) != nullptr)) {
			_case_begin_1ab567312:;
			{
				return _1c2d8a68a_eval_array_sub_ident(&(*_self_), _282841_d,_282855_si.get()._field_ident);
			}
		}
		else if ((_1c2da3362_map(_283417_kind.ptr()) != nullptr)) {
			_case_begin_1ab567873:;
			{
				return _1c2d8aa42_eval_map_sub_ident(&(*_self_), _282841_d,_282855_si.get()._field_ident);
			}
		}
		else if ((_1c2da1937_prim(_283417_kind.ptr()) != nullptr)) {
			_case_begin_1ab5678ea:;
			{
				jule::Ptr<_1c2da42ec_Prim> _286517_p = _1c2da1937_prim(_283417_kind.ptr());;
				{
					auto &_match_expr{ _286517_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1ab56d0e8:;
						{
							return _1c2d8ade9_eval_str_sub_ident(&(*_self_), _282841_d,_282855_si.get()._field_ident);
						}
					}
					_match_end_1ab56ce3e:;
				};
			}
		}
		_match_end_1ab56708c:;
	};
	_1c2d70a6b_push_err(&(*_self_), _282855_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_282841_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8e4c4_eval_sub_ident(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd72b96_SubIdentExpr> _287538_si) {
	jule::Ptr<_1c2d9e825_TypeKind> _287617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_287617_prefix;
	});;
	jule::Ptr<_1c2d6d9e2_Data> _288017_d = _1c2d908c1_eval_expr_kind(_self_, _287538_si.get()._field_expr.get()._field_kind);;
	if ((_288017_d == nullptr)) {
		return nullptr;
	};
	if (_288017_d.get()._field_decl) {
		return _1c2d8dd0e_eval_type_static(_self_.ptr(), _288017_d,_287538_si);
	};
	return _1c2d8e1b6_eval_obj_sub_ident(_self_.ptr(), _288017_d,_287538_si);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8e7d2_eval_tuple(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd70017_TupleExpr> _289234_tup) {
	jule::Ptr<_1c2da906b_Tuple> _289317_tup_t = jule::new_ptr<_1c2da906b_Tuple>(_1c2da906b_Tuple{});;
	_289317_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>::alloc(0LL,_289234_tup.get()._field_expr.len());
	jule::Ptr<_1dce340ba_TupleExprModel> _289617_model = jule::new_ptr<_1dce340ba_TupleExprModel>(_1dce340ba_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>::alloc(0LL,_289234_tup.get()._field_expr.len())});;
	jule::Bool _290017_ok = true;;
	{
		auto &expr = _289234_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1ab5732c9:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd6e38a_Expr> _290121_expr = *it;
			{
				jule::Ptr<_1c2d6d9e2_Data> _290221_d = _1c2d908c1_eval_expr_kind(_self_, _290121_expr.get()._field_kind);;
				if ((_290221_d == nullptr)) {
					_290017_ok=false;
					goto _iter_next_1ab5732c9;
				};
				_289317_tup_t.get()._field_types = jule::alloc_for_append(_289317_tup_t.get()._field_types,1);_289317_tup_t.get()._field_types.__push(_290221_d.get()._field_kind);;
				_289617_model.get()._field_datas = jule::alloc_for_append(_289617_model.get()._field_datas,1);_289617_model.get()._field_datas.__push(_290221_d);;
			}
			_iter_next_1ab5732c9:;
			++it;
			goto _iter_begin_1ab5732c9;
		}
		_iter_end_1ab5732c9:;
	};
	if ((!(_290017_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_289317_tup_t, 9)}), ._field_model=static_cast<jule::Any>(_289617_model), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8eb89_eval_map(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1c2da9a94_Map> _292132_m, jule::Ptr<_1dcd74ca8_BraceLit> _292145_lit) {
	jule::Ptr<_1dce32d33_MapExprModel> _292217_model = jule::new_ptr<_1dce32d33_MapExprModel>(_1dce32d33_MapExprModel{._field_key_kind=_292132_m.get()._field_key, ._field_val_kind=_292132_m.get()._field_val, });;
	{
		auto &expr = _292145_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ab576651:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd6e38a_Expr> _292721_expr = *it;
			{
				{
					auto &_match_expr{ _292721_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd757c0_KeyValPair>>()) {
						_case_begin_1ab57718a:;
						{
							goto _match_end_1ab576e6a;
						}
					}
					else {
						_case_begin_1ab5770e1:;
						{
							_1c2d70a6b_push_err(_self_.ptr(), _292145_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1ab576e6a:;
				};
				jule::Ptr<_1dcd757c0_KeyValPair> _293721_pair = _292721_expr.get()._field_kind.operator jule::Ptr<_1dcd757c0_KeyValPair>();;
				jule::Ptr<_1c2d6d9e2_Data> _293921_key = _1c2d908c1_eval_expr_kind(_self_, _293721_pair.get()._field_key.get()._field_kind);;
				if ((_293921_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1c2d6d9e2_Data> _294421_val = _1c2d908c1_eval_expr_kind(_self_, _293721_pair.get()._field_val.get()._field_kind);;
				if ((_294421_val == nullptr)) {
					return nullptr;
				};
				_1c2d1326c_check_assign_type(_self_.get()._field_s, false,_292132_m.get()._field_key,_293921_key,_293721_pair.get()._field_colon);
				_1c2d1326c_check_assign_type(_self_.get()._field_s, false,_292132_m.get()._field_val,_294421_val,_293721_pair.get()._field_colon);
				_292217_model.get()._field_entries = jule::alloc_for_append(_292217_model.get()._field_entries,1);_292217_model.get()._field_entries.__push(jule::new_ptr<_1dce32b46_KeyValPairExprModel>(_1dce32b46_KeyValPairExprModel{._field_key=_293921_key.get()._field_model, ._field_val=_294421_val.get()._field_model}));;
			}
			_iter_next_1ab576651:;
			++it;
			goto _iter_begin_1ab576651;
		}
		_iter_end_1ab576651:;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_292132_m, 10)}), ._field_mutable=true, ._field_model=static_cast<jule::Any>(_292217_model), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d8ee97_eval_brace_lit(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd74ca8_BraceLit> _296538_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ab57b953:;
			{
				_1c2d70a6b_push_err(_self_.ptr(), _296538_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1c2da3362_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab57b9b9:;
			{
				return _1c2d8eb89_eval_map(_self_, _1c2da3362_map(_self_.get()._field_prefix.ptr()),_296538_lit);
			}
		}
		else if ((_1c2da2d89_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab57ba30:;
			{
				return _1c2d86cc4_eval_struct_lit_explicit(_self_, _1c2da2d89_strct(_self_.get()._field_prefix.ptr()),_296538_lit.get()._field_exprs,_296538_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1ab57b898:;
			{
				_1c2d70a6b_push_err(_self_.ptr(), _296538_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab57b7bb:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d902a5_eval_anon_fn(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd7bb7d_FnDecl> _298036_decl) {
	_1c2dacc84_TypeChecker _298117_tc = _1c2dacc84_TypeChecker{._field_s=_self_.get()._field_s, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1dce3b644_FnIns> _298517_ins = _1c2db45c6_build_fn(&_298117_tc, _298036_decl);;
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
			_case_begin_1ab57d56a:;
			{
				jule::Ptr<_1c2cd9a07_ScopeChecker> _298821_sc = _self_.get()._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>();;
				jule::Ptr<_1c2cd9a07_ScopeChecker> _298921_scc = _1c2cea09a_new_child_checker(_298821_sc);;
				_298921_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c2cd8770_ScopeLabel>>>(nullptr);
				_298921_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c2cd8be3_ScopeGoto>>>(nullptr);
				_298921_scc.get()._field_owner=nullptr;
				_298921_scc.get()._field_child_index=0LL;
				_298921_scc.get()._field_it=0LLU;
				_298921_scc.get()._field_cse=0LLU;
				_298921_scc.get()._field_owner=_298517_ins;
				_1c2d21c09_check_fn_ins_sc(_self_.get()._field_s.ptr(), _298517_ins,_298921_scc);
			}
		}
		else {
			_case_begin_1ab580c21:;
			{
				_1c2d2229d_check_fn_ins(_self_.get()._field_s, _298517_ins);
			}
		}
		_match_end_1ab580b00:;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_298517_ins, 1)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce32959_AnonFnExprModel>(_1dce32959_AnonFnExprModel{._field_func=_298517_ins, ._field_global=_1c2d7171a_is_global(_self_.ptr())})), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d905b3_eval_binop(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd73119_BinopExpr> _301134_op) {
	_1c2d931ed_BinaryEval _301217_bs = static__1c2d937b4_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1c2da42ec_Prim> _301617_prim = _1c2da1937_prim(_self_.get()._field_prefix.ptr());;
		if (((_301617_prim == nullptr) || (!(_1c2cd269d_is_num(_1c2da4660_to_str(_301617_prim.ptr())))))) {
			jule::Ptr<_1c2d9e825_TypeKind> _301825_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_301825_prefix;
			});;
			return _1c2d98b0a_eval(&_301217_bs, _301134_op);
		};
	};
	return _1c2d98b0a_eval(&_301217_bs, _301134_op);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d908c1_eval_expr_kind(jule::Ptr<_1c2d70560_Eval> _self_, jule::Any _302838_kind) {
	{
		auto &_match_expr{ _302838_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6e676_RangeExpr>>()) {
			_case_begin_1ab587e9d:;
			{
				jule::Ptr<_1dcd6e676_RangeExpr> _303121_e = _302838_kind.operator jule::Ptr<_1dcd6e676_RangeExpr>();;
				return _1c2d908c1_eval_expr_kind(_self_, _303121_e.get()._field_expr.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd703be_LitExpr>>()) {
			_case_begin_1ab588124:;
			{
				return _1c2d733ba_eval_lit(_self_.ptr(), _302838_kind.operator jule::Ptr<_1dcd703be_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd71403_IdentExpr>>()) {
			_case_begin_1ab58818a:;
			{
				return _1c2d778a8_eval_ident(_self_.ptr(), _302838_kind.operator jule::Ptr<_1dcd71403_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd71b0c_UnaryExpr>>()) {
			_case_begin_1ab588201:;
			{
				return _1c2d77bb6_eval_unary(_self_, _302838_kind.operator jule::Ptr<_1dcd71b0c_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd71eb4_VariadicExpr>>()) {
			_case_begin_1ab588267:;
			{
				return _1c2d77ec4_eval_variadic(_self_, _302838_kind.operator jule::Ptr<_1dcd71eb4_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd70ac8_UnsafeExpr>>()) {
			_case_begin_1ab5882cd:;
			{
				return _1c2d782d2_eval_unsafe(_self_, _302838_kind.operator jule::Ptr<_1dcd70ac8_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd75c43_SliceExpr>>()) {
			_case_begin_1ab588355:;
			{
				return _1c2d7dbab_eval_slice_expr(_self_, _302838_kind.operator jule::Ptr<_1dcd75c43_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd765d4_IndexingExpr>>()) {
			_case_begin_1ab588410:;
			{
				return _1c2d82022_eval_indexing(_self_, _302838_kind.operator jule::Ptr<_1dcd765d4_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd76bde_SlicingExpr>>()) {
			_case_begin_1ab588476:;
			{
				return _1c2d831dd_eval_slicing(_self_, _302838_kind.operator jule::Ptr<_1dcd76bde_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7236b_CastExpr>>()) {
			_case_begin_1ab5884dc:;
			{
				return _1c2d86543_eval_cast(_self_, _302838_kind.operator jule::Ptr<_1dcd7236b_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd72723_NsSelectionExpr>>()) {
			_case_begin_1ab588553:;
			{
				return _1c2d86851_eval_ns_selection(_self_.ptr(), _302838_kind.operator jule::Ptr<_1dcd72723_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd74835_StructLit>>()) {
			_case_begin_1ab5885ca:;
			{
				return _1c2d870e3_eval_struct_lit(_self_, _302838_kind.operator jule::Ptr<_1dcd74835_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd69d69_TypeDecl>>()) {
			_case_begin_1ab588652:;
			{
				return _1c2d87401_eval_type(_self_.ptr(), _302838_kind.operator jule::Ptr<_1dcd69d69_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd73658_FnCallExpr>>()) {
			_case_begin_1ab5886c9:;
			{
				return _1c2d888b9_eval_fn_call(_self_, _302838_kind.operator jule::Ptr<_1dcd73658_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd72b96_SubIdentExpr>>()) {
			_case_begin_1ab588751:;
			{
				return _1c2d8e4c4_eval_sub_ident(_self_, _302838_kind.operator jule::Ptr<_1dcd72b96_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd70017_TupleExpr>>()) {
			_case_begin_1ab5887c8:;
			{
				return _1c2d8e7d2_eval_tuple(_self_, _302838_kind.operator jule::Ptr<_1dcd70017_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd74ca8_BraceLit>>()) {
			_case_begin_1ab588850:;
			{
				return _1c2d8ee97_eval_brace_lit(_self_, _302838_kind.operator jule::Ptr<_1dcd74ca8_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7bb7d_FnDecl>>()) {
			_case_begin_1ab5888c7:;
			{
				return _1c2d902a5_eval_anon_fn(_self_, _302838_kind.operator jule::Ptr<_1dcd7bb7d_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd73119_BinopExpr>>()) {
			_case_begin_1ab58894e:;
			{
				return _1c2d905b3_eval_binop(_self_, _302838_kind.operator jule::Ptr<_1dcd73119_BinopExpr>());
			}
		}
		else {
			_case_begin_1ab587bd4:;
			{
				return nullptr;
			}
		}
		_match_end_1ab587ae6:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d90bce_eval(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd6e38a_Expr> _307628_expr) {
	jule::Ptr<_1c2d6d9e2_Data> _307717_d = _1c2d908c1_eval_expr_kind(_self_, _307628_expr.get()._field_kind);;
	if (((_307717_d == nullptr) || (_307717_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1c2da2b25_fnc(_307717_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5936e5:;
			{
				jule::Ptr<_1dce3b644_FnIns> _308421_f = _1c2da2b25_fnc(_307717_d.get()._field_kind.ptr());;
				if (_1dce3c9ca_is_builtin(_308421_f.ptr())) {
					goto _match_end_1ab593591;
				};
				if ((_308421_f.get()._field_generics.len() != _308421_f.get()._field_decl.get()._field_generics.len())) {
					_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _307628_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_308421_f.get()._field_decl.get()._field_statically)) && _1dce39169_is_method(_308421_f.get()._field_decl.ptr()))) {
					_1c2d0c662_push_err(_self_.get()._field_s.ptr(), _307628_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ab593591:;
	};
	return _307717_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d90edc_eval_expr(jule::Ptr<_1c2d70560_Eval> _self_, jule::Ptr<_1dcd6e38a_Expr> _310233_expr) {
	jule::Ptr<_1c2d6d9e2_Data> _310317_d = _1c2d90bce_eval(_self_, _310233_expr);;
	{
		
		if ((_310317_d == nullptr)) {
			_case_begin_1ab597364:;
			{
				return nullptr;
			}
		}
		else if (_310317_d.get()._field_decl) {
			_case_begin_1ab5973db:;
			{
				_1c2d70a6b_push_err(_self_.ptr(), _310233_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1ab5972cb:;
			{
				return _310317_d;
			}
		}
		_match_end_1ab597265:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d70560_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c2d91460_UnaryEval static__1c2d91916_new(jule::Ptr<_1c2d70560_Eval> _312323_e) {
	return _1c2d91460_UnaryEval{._field_e=_312323_e, };
}



inline void _1c2d91ae2_minus(_1c2d91460_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ab598e9d:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5993dd:;
			{
				if ((!(_1c2cd269d_is_num(_1c2d9ec21_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c2da2d89_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab599454:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab598ae6:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab59873e:;
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1dce2bed6_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab59c622:;
				{
					_1dce2b0e5_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1dce29b3d_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1dce2b535_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab59c699:;
				{
					_1dce2a600_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1dce2918c_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1dce2b799_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab59c721:;
				{
					_1dce2a600_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1dce29da2_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ab59c4e0:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2d91cbd_plus(_1c2d91460_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ab5a1b98:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5a20d8:;
			{
				if ((!(_1c2cd269d_is_num(_1c2d9ec21_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c2da2d89_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5a214e:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab5a17e1:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab5a1714:;
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1dce2bed6_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab5a531c:;
				{
					_1dce2b0e5_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1dce29b3d_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1dce2b535_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab5a5394:;
				{
					_1dce2a600_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1dce2918c_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1dce2b799_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab5a541b:;
				{
					_1dce2a600_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1dce29da2_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ab5a51da:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2d91e99_caret(_1c2d91460_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ab5a9893:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5a9cd3:;
			{
				if ((!(_1c2cd20d7_is_int(_1c2d9ec21_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c2da2d89_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5a9d49:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab5a94db:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab5a940e:;
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1dce2b535_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab5ad006:;
				{
					_1dce2a600_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1dce2918c_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1dce2b799_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab5ad07d:;
				{
					_1dce2a875_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1dce29401_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ab5acdd5:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2d92175_excl(_1c2d91460_UnaryEval* _self_) {
	jule::Ptr<_1c2da42ec_Prim> _324213_t = _1c2da1937_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_324213_t == nullptr) || (!(_1c2da72bc_is_bool(_324213_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1dce2ba0d_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ab5b2923:;
				{
					_1dce2aaea_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1dce29665_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1ab5b2813:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1c2d92351_star(_1c2d91460_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1c2da1e10_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5b5816:;
			{
				if ((!(_1c2d714a6_is_unsafe((*_self_)._field_e.ptr())))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c2dab0e5_Ptr> _327421_t = _1c2da1e10_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1c2dabab8_is_unsafe(_327421_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_327421_t.get()._field_elem;
			}
		}
		else if ((_1c2da1b9b_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5b5c67:;
			{
				(*_self_)._field_d.get()._field_kind=_1c2da1b9b_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1ab5b5470:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab5b5409:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1c2d9252c_amper(_1c2d91460_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce31ccc_StructLitExprModel>>()) {
			_case_begin_1ab5b984d:;
			{
				jule::Ptr<_1dce31ccc_StructLitExprModel> _329421_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1dce31ccc_StructLitExprModel>();;
				_1c2d99897_make_struct_lit_alloc((*_self_)._field_d,_329421_lit);
			}
		}
		else {
			_case_begin_1ab5b9bb1:;
			{
				{
					
					if (_1c2db674e_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1ab5ba7e9:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2dab0e5_Ptr>(_1c2dab0e5_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 12)});
							(*_self_)._field_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1ab5ba255:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1ab5ba178:;
				};
			}
		}
		_match_end_1ab5b9b39:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1c2d92708_type_decl(_1c2d91460_UnaryEval* _self_) {
	_1c2dacc84_TypeChecker _331817_tc = _1c2dacc84_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab5bd940:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db2e65_build_ptr_from_type(&_331817_tc, (*_self_)._field_d.get()._field_kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab5c0db5:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db2849_build_sptr_from_type(&_331817_tc, (*_self_)._field_d.get()._field_kind), 7)});
			}
		}
		else {
			_case_begin_1ab5be6dd:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab5be688:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1c2d928d4_eval_data(_1c2d91460_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ab5be754:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _334021_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1c2d908c1_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
				(*_self_)._field_e.get()._field_prefix=_334021_prefix;
			}
		}
		else {
			_case_begin_1ab5c2da6:;
			{
				(*_self_)._field_d=_1c2d908c1_eval_expr_kind((*_self_)._field_e, (*_self_)._field_u.get()._field_expr.get()._field_kind);
			}
		}
		_match_end_1ab5c2ceb:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d92bae_eval(_1c2d91460_UnaryEval* _self_, jule::Ptr<_1dcd71b0c_UnaryExpr> _334927_u) {
	(*_self_)._field_u=_334927_u;
	_1c2d928d4_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1c2d92708_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _336013_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ab5c75a3:;
			{
				_1c2d91ae2_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab5c70ec:;
			{
				_1c2d91cbd_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab5c7163:;
			{
				_1c2d91e99_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ab5c71c9:;
			{
				_1c2d92175_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab5c7240:;
			{
				_1c2d92351_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab5c776d:;
			{
				_1c2d9252c_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1ab5c7086:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1ab5c7031:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ab5c95c7:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str(_336013_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1c2d6e3a5_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1ab5c7a8c:;
			{
				(*_self_)._field_d.get()._field_model=static_cast<jule::Any>((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1ab5c9561:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d91460_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c2d931ed_BinaryEval static__1c2d937b4_new_plain(jule::Ptr<_1c2d70560_Eval> _339829_e) {
	return _1c2d931ed_BinaryEval{._field_e=_339829_e, };
}



inline _1c2d931ed_BinaryEval static__1c2d93b05_new(jule::Ptr<_1c2d70560_Eval> _340423_e, jule::Ptr<_1db7061a7_Token> _340437_op) {
	return _1c2d931ed_BinaryEval{._field_e=_340423_e, ._field_op=_340437_op};
}



inline jule::Bool _1c2d93d8b_check_type_compatibility(_1c2d931ed_BinaryEval* _self_) {
	return _1c2d136e0_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1c2d94144_check_struct_common_operator_compatibility(_1c2d931ed_BinaryEval* _self_) {
	jule::Ptr<_1dce3b644_FnIns> _341817_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ab5ce05a:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab5ce0c1:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab5d00e4:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ab5d015a:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ab5d01c1:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab5d0237:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab5d029d:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab5d0314:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ab5d038b:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab5d0402:;
			{
				_341817_overload=_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1ab5cde28:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1ab5cdca2:;
	};
	if ((_341817_overload == nullptr)) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1dce3a775_ParamIns> _345017_p = _341817_overload.get()._field_params[1LL];;
	return _1c2d1326c_check_assign_type((*_self_)._field_e.get()._field_s, _345017_p.get()._field_decl.get()._field_reference,_345017_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d943db_eval_nil(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2da0e86_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1c2d9ec21_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab5d9395:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab5d932e:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1ab5d9296:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d94650_eval_enum(_1c2d931ed_BinaryEval* _self_) {
	jule::Ptr<_1c2c4070a_Enum> _347517_enm = _1c2da2174_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab5db540:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _347921_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1c2da2174_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_347921_rkind=_1c2da2174_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1c2d136e0_check_type_compatibility((*_self_)._field_e.get()._field_s, _347517_enm.get()._field_kind.get()._field_kind,_347921_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ab5db4b8:;
	};
	if (((_1c2da2174_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_347517_enm != _1c2da2174_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_347517_enm.get()._field_ident),jule::Any(_1c2d9ec21_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab5e09c8:;
			{
				if ((!(_1c2cd269d_is_num(_1c2d9ec21_to_str(_347517_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_347517_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ab5e0a3e:;
			{
				if (((_1c2da1937_prim(_347517_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1c2cd20d7_is_int(_1c2da4660_to_str(_1c2da1937_prim(_347517_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_347517_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ab5e0962:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_347517_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1ab5e0874:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d948b4_eval_type_enum(_1c2d931ed_BinaryEval* _self_) {
	jule::Ptr<_1c2c41d05_TypeEnum> _352617_enm = _1c2da23d8_tenm((*_self_)._field_l.get()._field_kind.ptr());;
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab5e68be:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab5e60c7:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2c42135_to_str(_352617_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab5e6748:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d94b28_eval_sptr(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab5e8959:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab5e88e3:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab5e7d10:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d94d8c_eval_ptr(_1c2d931ed_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab5ea8a1:;
			{
				if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1ab5ea917:;
			{
				if ((_1c2da1e10_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1c2dabab8_is_unsafe(_1c2da1e10_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1c2d9a953_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ab5ea054:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab5e9e99:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95101_eval_arr(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab6019d9:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab601973:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab5ec1bb:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95365_eval_slc(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab603c2d:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab603bb7:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab6030d4:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d955c9_eval_fn(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab605e72:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab605e0b:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab605328:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9583d_eval_struct(_1c2d931ed_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ab6075d3:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab607649:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ab6076c1:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab607db9:;
			{
				if ((_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab607e30:;
			{
				if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ab6074b2:;
	};
	if ((!(_1c2d94144_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95aa2_eval_trait(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab612368:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab612302:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab61216a:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d95d16_eval_any(_1c2d931ed_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab6142b0:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab613963:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1ab6138a8:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9607a_eval_bool(_1c2d931ed_BinaryEval* _self_) {
	if ((!(_1c2d93d8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1ab6160c5:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ab61605e:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1c2d9ec21_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ab61547b:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d962de_eval_str(_1c2d931ed_BinaryEval* _self_) {
	jule::Str _376817_rk = _1c2d9ec21_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_376817_rk != jule::Str("str", 3))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_376817_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab6192a4:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab61931a:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ab6181d7:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1ab618418:;
	};
}



inline void _1c2d964ba_set_type_to_greater(_1c2d931ed_BinaryEval* _self_) {
	if (_1c2d6e3a5_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1c2d6e3a5_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1c2cd0a20_is_greater(_1c2da1937_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1c2d9670c_check_mod_data(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _381138_d) {
	if ((!(_1c2d6e3a5_is_const(_381138_d.ptr())))) {
		if (((_1c2da1937_prim(_381138_d.get()._field_kind.ptr()) == nullptr) || (!(_1c2cd20d7_is_int(_1c2da1937_prim(_381138_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c2d3ee25_sig_assignable(jule::Str("i64", 3),_381138_d)) {
			_case_begin_1ab621124:;
			{
				_1dce2a600_set_i64(_381138_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_381138_d.get()._field_constant.ptr())));
			}
		}
		else if (_1c2d56513_unsig_assignable(jule::Str("u64", 3),_381138_d)) {
			_case_begin_1ab620d05:;
			{
				_1dce2a875_set_u64(_381138_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_381138_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1ab620c8e:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab61e62d:;
	};
}



inline void _1c2d968d8_mod(_1c2d931ed_BinaryEval* _self_) {
	_1c2d9670c_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1c2d9670c_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1c2d96cb2_numbers_are_compatibile(_1c2d931ed_BinaryEval* _self_, jule::Str& _383339_lk, jule::Str& _383349_rk) {
	if ((!(_1c2cd269d_is_num(_383349_rk)))) {
		return false;
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_383339_lk == jule::Str("f32", 3))) {
		if (_1c2d6e3a5_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_383349_rk == jule::Str("f32", 3));
	};
	if ((_383339_lk == jule::Str("f64", 3))) {
		if (_1c2d6e3a5_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_383349_rk == jule::Str("f64", 3));
	};
	if (_1c2d6e3a5_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_383339_lk == _383349_rk);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d97037_eval_float(_1c2d931ed_BinaryEval* _self_) {
	jule::Str _386313_lk = _1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _386413_rk = _1c2da1937_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1c2d96cb2_numbers_are_compatibile(&(*_self_), _386313_lk,_386413_rk)))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_386313_lk),jule::Any(_386413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab628978:;
			{
				if (((!(_1c2d6e3a5_is_const((*_self_)._field_l.ptr()))) || (!(_1c2d56645_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_386313_lk),jule::Any(_386413_rk)}));
					return nullptr;
				};
				if (((!(_1c2d6e3a5_is_const((*_self_)._field_r.ptr()))) || (!(_1c2d56645_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_386313_lk),jule::Any(_386413_rk)}));
					return nullptr;
				};
				_1dce2a600_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1dce2a875_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1c2d9a2c1_is_ok_for_shifting((*_self_)._field_r)))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1ab62889b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab62d395:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ab62d340:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1ab62dd35:;
			{
				_1c2d964ba_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab62dd9b:;
			{
				if ((!(_1c2cd20d7_is_int(_386413_rk)))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_386313_lk),jule::Any(_386413_rk)}));
					return nullptr;
				};
				_1c2d968d8_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1ab62e231:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab62e1cb:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9729b_eval_int(_1c2d931ed_BinaryEval* _self_) {
	jule::Str _392713_lk = _1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _392813_rk = _1c2da1937_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab62de12:;
			{
				if (((!(_1c2cd20d7_is_int(_392713_lk))) || (!(_1c2cd20d7_is_int(_392813_rk))))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_392713_lk),jule::Any(_392813_rk)}));
					return nullptr;
				};
				if ((!(_1c2d9a2c1_is_ok_for_shifting((*_self_)._field_r)))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1ab633532:;
	};
	if ((!(_1c2d96cb2_numbers_are_compatibile(&(*_self_), _392713_lk,_392813_rk)))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_392713_lk),jule::Any(_392813_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab6366ab:;
			{
				return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ab636656:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ab636e92:;
			{
				_1c2d964ba_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab637008:;
			{
				_1c2d968d8_mod(&(*_self_));
				_1c2d964ba_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ab63738d:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ab637338:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d97510_eval_prim(_1c2d931ed_BinaryEval* _self_) {
	jule::Ptr<_1c2da42ec_Prim> _398613_prim = _1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1c2da72bc_is_bool(_398613_prim.ptr())) {
			_case_begin_1ab63a6d2:;
			{
				return _1c2d9607a_eval_bool(&(*_self_));
			}
		}
		else if (_1c2da7531_is_str(_398613_prim.ptr())) {
			_case_begin_1ab63a759:;
			{
				return _1c2d962de_eval_str(&(*_self_));
			}
		}
		_match_end_1ab63a627:;
	};
	if ((_1c2da1937_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2da4660_to_str(_398613_prim.ptr())),jule::Any(_1c2d9ec21_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1c2cd2406_is_float(_398613_prim.get()._field_kind)) {
			_case_begin_1ab63d141:;
			{
				return _1c2d97037_eval_float(&(*_self_));
			}
		}
		else if (_1c2cd20d7_is_int(_398613_prim.get()._field_kind)) {
			_case_begin_1ab63c9ae:;
			{
				return _1c2d9729b_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1ab63c948:;
			{
				return nullptr;
			}
		}
		_match_end_1ab63c76c:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d97774_eval_op(_1c2d931ed_BinaryEval* _self_) {
	{
		
		if (_1c2da09ad_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1ab63d98d:;
			{
				_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1c2da1937_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1c2da7795_is_any(_1c2da1937_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ab63e692:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ab63e3ea;
			}
		}
		else if (((_1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1c2da7795_is_any(_1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ab63e3ea:;
			{
				return _1c2d95d16_eval_any(&(*_self_));
			}
		}
		else if ((_1c2da23d8_tenm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e461:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ab63e4c7;
			}
		}
		else if ((_1c2da23d8_tenm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e4c7:;
			{
				return _1c2d948b4_eval_type_enum(&(*_self_));
			}
		}
		else if (_1c2da0749_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1ab63e53d:;
			{
				return _1c2d943db_eval_nil(&(*_self_));
			}
		}
		else if ((_1c2da2174_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e5a4:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ab63e75d;
			}
		}
		else if ((_1c2da2174_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e75d:;
			{
				return _1c2d94650_eval_enum(&(*_self_));
			}
		}
		else if ((_1c2da1b9b_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e7c4:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ab63e83a;
			}
		}
		else if ((_1c2da1b9b_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e83a:;
			{
				return _1c2d94b28_eval_sptr(&(*_self_));
			}
		}
		else if ((_1c2da1e10_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e8b2:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ab63e939;
			}
		}
		else if ((_1c2da1e10_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e939:;
			{
				return _1c2d94d8c_eval_ptr(&(*_self_));
			}
		}
		else if ((_1c2da264c_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63e9b1:;
			{
				return _1c2d95101_eval_arr(&(*_self_));
			}
		}
		else if ((_1c2da28b1_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63ea38:;
			{
				return _1c2d95365_eval_slc(&(*_self_));
			}
		}
		else if ((_1c2da2b25_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63eab0:;
			{
				return _1c2d955c9_eval_fn(&(*_self_));
			}
		}
		else if ((_1c2da30ed_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63eb37:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ab63ebae;
			}
		}
		else if ((_1c2da30ed_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63ebae:;
			{
				return _1c2d95aa2_eval_trait(&(*_self_));
			}
		}
		else if ((_1c2da2d89_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63ec36:;
			{
				return _1c2d9583d_eval_struct(&(*_self_));
			}
		}
		else if ((_1c2da1937_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab63ecad:;
			{
				return _1c2d97510_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1ab63d3a5:;
			{
				return nullptr;
			}
		}
		_match_end_1ab63d262:;
	};
}



inline void _1c2d979e9_eval_const(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _406134_d) {
	{
		
		if ((_406134_d == nullptr)) {
			_case_begin_1ab64d8c1:;
			{
				return;;
			}
		}
		else if ((!(_1c2d6e3a5_is_const((*_self_)._field_l.ptr()))) || (!(_1c2d6e3a5_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1ab64e064:;
			{
				_406134_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1ab64d7a0:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ab650609:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab650670:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ab6506d6:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(_1dce2cb74_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ab65074c:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(_1dce2c866_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ab6507b3:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ab650829:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab650890:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab650906:;
			{
				_406134_d.get()._field_constant=static__1dce28356_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab65096c:;
			{
				_1dce2dec7_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ab6509d3:;
			{
				_1dce2e2d5_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab650a49:;
			{
				_1dce2e5e3_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ab650ab0:;
			{
				jule::Bool _409817_ok = _1dce2e901_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_409817_ok)) && (_1dce2a37a_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1c2da42ec_Prim> _410321_prim = _1c2da1937_prim(_406134_d.get()._field_kind.ptr());;
				{
					
					if (_1c2cd1a54_is_sig_int(_410321_prim.get()._field_kind)) {
						_case_begin_1ab65c193:;
						{
							_1dce2a600_set_i64(_406134_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_406134_d.get()._field_constant.ptr())));
						}
					}
					else if (_1c2cd1d40_is_unsig_int(_410321_prim.get()._field_kind)) {
						_case_begin_1ab65c21a:;
						{
							_1dce2a875_set_u64(_406134_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_406134_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1ab65c0d8:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab650b37:;
			{
				jule::Bool _411117_ok = _1dce2ec0e_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_411117_ok)) && (_1dce2a37a_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ab650bae:;
			{
				_1dce3032a_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab650c36:;
			{
				_1dce3001c_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab650cad:;
			{
				_1dce30638_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ab650d35:;
			{
				_1dce30946_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab650dac:;
			{
				_1dce30c54_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_406134_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1ab64ed78:;
	};
	_1c2d9b6e0_apply_cast_model_by_enum(_406134_d,_1c2da2174_enm(_406134_d.get()._field_kind.ptr()));
	jule::Ptr<_1c2da42ec_Prim> _413517_prim = _1c2da1937_prim(_406134_d.get()._field_kind.ptr());;
	if (((_413517_prim == nullptr) || (!(_1c2cd269d_is_num(_1c2da4660_to_str(_413517_prim.ptr())))))) {
		_406134_d.get()._field_model=static_cast<jule::Any>(_406134_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_406134_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_413517_prim=_1c2da1937_prim(_406134_d.get()._field_kind.ptr());
		};
	};
	_1c2d9959a_fit_bitsize(_406134_d);
	_1c2d9b9a9_cast_const_by_type(_413517_prim.get()._field_kind,_406134_d);
}



inline void _1c2d97c6e_check_data(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _415134_d) {
	jule::Ptr<_1dce3b644_FnIns> _415213_f = _1c2da2b25_fnc(_415134_d.get()._field_kind.ptr());;
	if ((((_415213_f != nullptr) && (_415213_f.get()._field_decl != nullptr)) && _1dce39169_is_method(_415213_f.get()._field_decl.ptr()))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1c2d97e4a_check_datas(_1c2d931ed_BinaryEval* _self_) {
	_1c2d97c6e_check_data(&(*_self_), (*_self_)._field_l);
	_1c2d97c6e_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1c2d981c0_set_model(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _416333_d) {
	if (_1c2d6e3a5_is_const(_416333_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1c2d6d9e2_Data> _417118_l = (*_self_)._field_l;;
	jule::Ptr<_1c2d6d9e2_Data> _417125_r = (*_self_)._field_r;;
	std::tie(_417118_l,_417125_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1c2d6e6b3_good_operand(_417118_l.ptr(), _417125_r)))) {
		std::tie(_417118_l,_417125_r) = std::make_tuple(_417125_r,_417118_l);
	};
	_416333_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31716_BinopExprModel>(_1dce31716_BinopExprModel{._field_left=jule::new_ptr<_1dce31529_OperandExprModel>(_1dce31529_OperandExprModel{._field_kind=_417118_l.get()._field_kind, ._field_model=_417118_l.get()._field_model}), ._field_right=jule::new_ptr<_1dce31529_OperandExprModel>(_1dce31529_OperandExprModel{._field_kind=_417125_r.get()._field_kind, ._field_model=_417125_r.get()._field_model}), ._field_op=(*_self_)._field_op}));
}



inline void _1c2d98445_post_eval(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _418933_d) {
	_418933_d.get()._field_lvalue=false;
	_1c2d981c0_set_model(&(*_self_), _418933_d);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d987ec_solve_explicit(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1c2d6d9e2_Data>& _419438_l, jule::Ptr<_1c2d6d9e2_Data>& _419453_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_419438_l,_419453_r);
	_1c2d97e4a_check_datas(&(*_self_));
	jule::Ptr<_1c2d6d9e2_Data> _419917_d = _1c2d97774_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_419438_l,_419453_r);
	_1c2d979e9_eval_const(&(*_self_), _419917_d);
	if ((_419917_d != nullptr)) {
		_419917_d.get()._field_mutable=true;
		_1c2d98445_post_eval(&(*_self_), _419917_d);
	};
	return _419917_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d98b0a_eval(_1c2d931ed_BinaryEval* _self_, jule::Ptr<_1dcd73119_BinopExpr>& _421428_op) {
	if ((_421428_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1c2d70a6b_push_err((*_self_)._field_e.ptr(), _421428_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1c2d70d8a_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _422117_l = _1c2d908c1_eval_expr_kind((*_self_)._field_e, _421428_op.get()._field_left.get()._field_kind);;
	if (((_422117_l == nullptr) || (_422117_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _422617_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_422117_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_422617_prefix;
	});;
	jule::Ptr<_1c2d6d9e2_Data> _422917_r = _1c2d908c1_eval_expr_kind((*_self_)._field_e, _421428_op.get()._field_right.get()._field_kind);;
	if (((_422917_r == nullptr) || (_422917_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_421428_op.get()._field_op;
	jule::Ptr<_1c2d6d9e2_Data> _423617_d = _1c2d987ec_solve_explicit(&(*_self_), _422117_l,_422917_r);;
	if ((((_423617_d != nullptr) && _422117_l.get()._field_is_rune) && _422917_r.get()._field_is_rune)) {
		_423617_d.get()._field_is_rune=true;
	};
	return _423617_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d931ed_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d9d0e8_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "constraint:" << _Src._field_constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d9db32_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2d9ec21_to_str(_1c2d9e825_TypeKind* _self_) {
	if (_1c2da0749_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1c2da04d5_cpp_linked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7417_kind+=_1c2d9e3e6_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1c2d9de95_to_str((*_self_)._field_kind);
	};
	return _7417_kind;
}



inline jule::Bool _1c2da002e_equals(jule::Ptr<_1c2d9e825_TypeKind> _self_, jule::Ptr<_1c2d9e825_TypeKind> _9026_other) {
	if (_1c2da0749_is_nil(_self_.ptr())) {
		return _1c2da0749_is_nil(_9026_other.ptr());
	};
	if (_1c2da04d5_cpp_linked(_self_.ptr())) {
		return (_1c2da04d5_cpp_linked(_9026_other.ptr()) && (_self_.get()._field_cpp_ident == _9026_other.get()._field_cpp_ident));
	};
	return _1c2d9e3e6_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1c2d9e2a3_equals(_self_.get()._field_kind, _9026_other);
}



inline jule::Bool _1c2da04d5_cpp_linked(_1c2d9e825_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1c2da0749_is_nil(_1c2d9e825_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1c2da09ad_void(_1c2d9e825_TypeKind* _self_) {
	jule::Ptr<_1c2da42ec_Prim> _11313_prim = _1c2da1937_prim(&(*_self_));;
	return ((_11313_prim != nullptr) && (_11313_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1c2da0c22_mutable(_1c2d9e825_TypeKind* _self_) {
	{
		_1c2d9e825_TypeKind* _12021__self = (&((*_self_)));;
		if ((_1c2da2d89_strct(_12021__self) != nullptr)) {
			return _1c2da2d89_strct(_12021__self).get()._field_mutable;
		};
		if ((_1c2da30ed_trt(_12021__self) != nullptr)) {
			return _1c2da30ed_trt(_12021__self).get()._field_mutable;
		};
		if ((_1c2da1937_prim(_12021__self) != nullptr)) {
			jule::Ptr<_1c2da42ec_Prim> _12921_p = _1c2da1937_prim(_12021__self);;
			return _1c2da7795_is_any(_12921_p.ptr());
		};
		if ((_1c2da264c_arr(_12021__self) != nullptr)) {
			return _1c2da0c22_mutable(_1c2da264c_arr(_12021__self).get()._field_elem.ptr());
		};
		return (((_1c2da28b1_slc(_12021__self) != nullptr) || (_1c2da1e10_ptr(_12021__self) != nullptr)) || (_1c2da1b9b_sptr(_12021__self) != nullptr));
	};
}



inline jule::Bool _1c2da0e86_nil_compatible(_1c2d9e825_TypeKind* _self_) {
	{
		_1c2d9e825_TypeKind* _14421__self = (&((*_self_)));;
		jule::Ptr<_1c2da42ec_Prim> _14617_prim = _1c2da1937_prim(_14421__self);;
		if (((_14617_prim != nullptr) && _1c2da7795_is_any(_14617_prim.ptr()))) {
			return true;
		};
		return (((((((_1c2da0749_is_nil(_14421__self) || (_1c2da2b25_fnc(_14421__self) != nullptr)) || (_1c2da1b9b_sptr(_14421__self) != nullptr)) || (_1c2da1e10_ptr(_14421__self) != nullptr)) || (_1c2da30ed_trt(_14421__self) != nullptr)) || (_1c2da28b1_slc(_14421__self) != nullptr)) || (_1c2da3362_map(_14421__self) != nullptr)) || (_1c2da23d8_tenm(_14421__self) != nullptr));
	};
}



inline jule::Bool _1c2da11ea_performs_rc(_1c2d9e825_TypeKind* _self_) {
	{
		_1c2d9e825_TypeKind* _16521__self = (&((*_self_)));;
		return (((_1c2da1b9b_sptr(_16521__self) != nullptr) || (_1c2da28b1_slc(_16521__self) != nullptr)) || (_1c2da30ed_trt(_16521__self) != nullptr));
	};
}



inline jule::Bool _1c2da145e_supports_cloning(_1c2d9e825_TypeKind* _self_) {
	{
		_1c2d9e825_TypeKind* _17321__self = (&((*_self_)));;
		{
			
			if ((_1c2da1937_prim(_17321__self) != nullptr)) {
				_case_begin_1ab69d019:;
				{
					return (!(_1c2da7795_is_any(_1c2da1937_prim(_17321__self).ptr())));
				}
			}
			else if ((_1c2da2174_enm(_17321__self) != nullptr)) {
				_case_begin_1ab69d080:;
				{
					return true;
				}
			}
			else if ((_1c2da2b25_fnc(_17321__self) != nullptr)) {
				_case_begin_1ab69d37c:;
				{
					return true;
				}
			}
			else if ((_1c2da1e10_ptr(_17321__self) != nullptr)) {
				_case_begin_1ab69d3e3:;
				{
					return true;
				}
			}
			else if ((_1c2da28b1_slc(_17321__self) != nullptr)) {
				_case_begin_1ab69d459:;
				{
					return _1c2da145e_supports_cloning(_1c2da28b1_slc(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c2da3362_map(_17321__self) != nullptr)) {
				_case_begin_1ab69d4c0:;
				{
					jule::Ptr<_1c2da9a94_Map> _18621_m = _1c2da3362_map(_17321__self);;
					return (_1c2da145e_supports_cloning(_18621_m.get()._field_key.ptr()) && _1c2da145e_supports_cloning(_18621_m.get()._field_val.ptr()));
				}
			}
			else if ((_1c2da264c_arr(_17321__self) != nullptr)) {
				_case_begin_1ab69d536:;
				{
					return _1c2da145e_supports_cloning(_1c2da264c_arr(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c2da1b9b_sptr(_17321__self) != nullptr)) {
				_case_begin_1ab69d59c:;
				{
					return _1c2da145e_supports_cloning(_1c2da1b9b_sptr(_17321__self).get()._field_elem.ptr());
				}
			}
			else if ((_1c2da2d89_strct(_17321__self) != nullptr)) {
				_case_begin_1ab69d624:;
				{
					jule::Ptr<_1dcd868e1_StructIns> _19325_s = _1c2da2d89_strct(_17321__self);;
					return (((_19325_s.get()._field_decl != nullptr) && (!(_19325_s.get()._field_decl.get()._field_cpp_linked))) && _1dcd4b5ed_is_derives(_19325_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1ab69cde8:;
				{
					return false;
				}
			}
			_match_end_1ab69cd82:;
		};
	};
}



inline jule::Bool _1c2da16c3_variadicable(_1c2d9e825_TypeKind* _self_) {
	{
		_1c2d9e825_TypeKind* _20621__self = (&((*_self_)));;
		return (_1c2da28b1_slc(_20621__self) != nullptr);
	};
}



inline jule::Ptr<_1c2da42ec_Prim> _1c2da1937_prim(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2da42ec_Prim>>()) {
			_case_begin_1ab6a5c47:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2da42ec_Prim>();
			}
		}
		else {
			_case_begin_1ab6a5609:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6a55a4:;
	};
}



inline jule::Ptr<_1c2da7a81_Sptr> _1c2da1b9b_sptr(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2da7a81_Sptr>>()) {
			_case_begin_1ab6a693a:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2da7a81_Sptr>();
			}
		}
		else {
			_case_begin_1ab6a6440:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6a63da:;
	};
}



inline jule::Ptr<_1c2dab0e5_Ptr> _1c2da1e10_ptr(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2dab0e5_Ptr>>()) {
			_case_begin_1ab6a7683:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2dab0e5_Ptr>();
			}
		}
		else {
			_case_begin_1ab6a7188:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6a7133:;
	};
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2da2174_enm(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c4070a_Enum>>()) {
			_case_begin_1ab6a83cb:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c4070a_Enum>();
			}
		}
		else {
			_case_begin_1ab6a7dd1:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6a7d7b:;
	};
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2da23d8_tenm(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c41d05_TypeEnum>>()) {
			_case_begin_1ab6a9124:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c41d05_TypeEnum>();
			}
		}
		else {
			_case_begin_1ab6a8b29:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6a8ac4:;
	};
}



inline jule::Ptr<_1c2daa688_Arr> _1c2da264c_arr(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2daa688_Arr>>()) {
			_case_begin_1ab6a9d6c:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2daa688_Arr>();
			}
		}
		else {
			_case_begin_1ab6a9872:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6a981c:;
	};
}



inline jule::Ptr<_1c2da84dd_Slc> _1c2da28b1_slc(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2da84dd_Slc>>()) {
			_case_begin_1ab6aaab5:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2da84dd_Slc>();
			}
		}
		else {
			_case_begin_1ab6aa5ba:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6aa565:;
	};
}



inline jule::Ptr<_1dce3b644_FnIns> _1c2da2b25_fnc(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dce3b644_FnIns>>()) {
			_case_begin_1ab6ab80d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1dce3b644_FnIns>();
			}
		}
		else {
			_case_begin_1ab6ab313:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6ab2ad:;
	};
}



inline jule::Ptr<_1dcd868e1_StructIns> _1c2da2d89_strct(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd868e1_StructIns>>()) {
			_case_begin_1ab6ac556:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1dcd868e1_StructIns>();
			}
		}
		else {
			_case_begin_1ab6ac05b:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6ac006:;
	};
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2da30ed_trt(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c3d54e_Trait>>()) {
			_case_begin_1ab6ad29e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2c3d54e_Trait>();
			}
		}
		else {
			_case_begin_1ab6acca4:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6acc4e:;
	};
}



inline jule::Ptr<_1c2da9a94_Map> _1c2da3362_map(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2da9a94_Map>>()) {
			_case_begin_1ab6adee7:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2da9a94_Map>();
			}
		}
		else {
			_case_begin_1ab6ad9ec:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6ad997:;
	};
}



inline jule::Ptr<_1c2da906b_Tuple> _1c2da35c6_tup(_1c2d9e825_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2da906b_Tuple>>()) {
			_case_begin_1ab6aec40:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1c2da906b_Tuple>();
			}
		}
		else {
			_case_begin_1ab6ae745:;
			{
				return nullptr;
			}
		}
		_match_end_1ab6ae6e0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2d9e825_TypeKind _Src) {
	_Stream << _1c2d9ec21_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1c2da3d35_checked(_1c2da397d_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1c2da4011_remove_kind(_1c2da397d_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2da397d_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c2da4660_to_str(_1c2da42ec_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1c2da496d_equals(jule::Ptr<_1c2da42ec_Prim> _self_, jule::Ptr<_1c2d9e825_TypeKind> _35926_other) {
	jule::Ptr<_1c2da42ec_Prim> _36013_prim = _1c2da1937_prim(_35926_other.ptr());;
	if ((_36013_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _36013_prim.get()._field_kind);
}



inline jule::Bool _1c2da4de1_is_constraint(_1c2da42ec_Prim* _self_) {
	return ((((!(_1c2da7531_is_str(&(*_self_)))) && (!(_1c2da7795_is_any(&(*_self_))))) && (!(_1c2da72bc_is_bool(&(*_self_))))) && (!(_1c2cd269d_is_num((*_self_)._field_kind))));
}



inline jule::Bool _1c2da5155_is_i8(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1c2da53b9_is_i16(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1c2da562d_is_i32(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1c2da5892_is_i64(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1c2da5b06_is_u8(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1c2da5d6a_is_u16(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1c2da60ce_is_u32(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1c2da6343_is_u64(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1c2da65a7_is_f32(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1c2da681b_is_f64(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1c2da6a80_is_int(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1c2da6ce4_is_uint(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1c2da7058_is_uintptr(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1c2da72bc_is_bool(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1c2da7531_is_str(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1c2da7795_is_any(_1c2da42ec_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2da42ec_Prim _Src) {
	_Stream << _1c2da4660_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2da7de4_to_str(_1c2da7a81_Sptr* _self_) {
	return (jule::Str("&", 1) + _1c2d9ec21_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c2da8202_equals(jule::Ptr<_1c2da7a81_Sptr> _self_, jule::Ptr<_1c2d9e825_TypeKind> _43626_other) {
	jule::Ptr<_1c2da7a81_Sptr> _43713_sptr = _1c2da1b9b_sptr(_43626_other.ptr());;
	if ((_43713_sptr == nullptr)) {
		return false;
	};
	return _1c2da002e_equals(_self_.get()._field_elem, _43713_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2da7a81_Sptr _Src) {
	_Stream << _1c2da7de4_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2da89e9_to_str(_1c2da84dd_Slc* _self_) {
	return (jule::Str("[]", 2) + _1c2d9ec21_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c2da8d07_equals(jule::Ptr<_1c2da84dd_Slc> _self_, jule::Ptr<_1c2d9e825_TypeKind> _45526_other) {
	jule::Ptr<_1c2da84dd_Slc> _45613_slc = _1c2da28b1_slc(_45526_other.ptr());;
	if ((_45613_slc == nullptr)) {
		return false;
	};
	return _1c2da002e_equals(_self_.get()._field_elem, _45613_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2da84dd_Slc _Src) {
	_Stream << _1c2da89e9_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2da93ce_to_str(_1c2da906b_Tuple* _self_) {
	jule::Str _47217_s = jule::Str("(", 1);;
	_47217_s+=_1c2d9ec21_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ab6c3704:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9e825_TypeKind> &_47416_t = *it;
			{
				_47217_s+=jule::Str(",", 1);
				_47217_s+=_1c2d9ec21_to_str(_47416_t.ptr());
			}
			_iter_next_1ab6c3704:;
			++it;
			goto _iter_begin_1ab6c3704;
		}
		_iter_end_1ab6c3704:;
	};
	_47217_s+=jule::Str(")", 1);
	return _47217_s;
}



inline jule::Bool _1c2da96dc_equals(jule::Ptr<_1c2da906b_Tuple> _self_, jule::Ptr<_1c2d9e825_TypeKind> _48326_other) {
	jule::Ptr<_1c2da906b_Tuple> _48413_tup = _1c2da35c6_tup(_48326_other.ptr());;
	if ((_48413_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _48413_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _49317_i = 0LL;;
	for (; (_49317_i < _self_.get()._field_types.len()); (_49317_i)++) {
		{
			if ((!(_1c2da002e_equals(_self_.get()._field_types[_49317_i], _48413_tup.get()._field_types[_49317_i])))) {
				return false;
			};
		}
	_iter_next_1ab6c6ce0:;
	}
	_iter_end_1ab6c6ce0:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2da906b_Tuple _Src) {
	_Stream << _1c2da93ce_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2da9e07_to_str(_1c2da9a94_Map* _self_) {
	jule::Str _51317_s = jule::Str("[", 1);;
	_51317_s+=_1c2d9ec21_to_str((*_self_)._field_key.ptr());
	_51317_s+=jule::Str(":", 1);
	_51317_s+=_1c2d9ec21_to_str((*_self_)._field_val.ptr());
	_51317_s+=jule::Str("]", 1);
	return _51317_s;
}



inline jule::Bool _1c2daa215_equals(jule::Ptr<_1c2da9a94_Map> _self_, jule::Ptr<_1c2d9e825_TypeKind> _52226_other) {
	jule::Ptr<_1c2da9a94_Map> _52313_map = _1c2da3362_map(_52226_other.ptr());;
	if ((_52313_map == nullptr)) {
		return false;
	};
	return (_1c2da002e_equals(_self_.get()._field_key, _52313_map.get()._field_key) && _1c2da002e_equals(_self_.get()._field_val, _52313_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2da9a94_Map _Src) {
	_Stream << _1c2da9e07_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2daa9eb_to_str(_1c2daa688_Arr* _self_) {
	jule::Str _54117_s = jule::Str("[", 1);;
	_54117_s+=_1c2c3c273_itoa((*_self_)._field_n);
	_54117_s+=jule::Str("]", 1);
	_54117_s+=_1c2d9ec21_to_str((*_self_)._field_elem.ptr());
	return _54117_s;
}



inline jule::Bool _1c2daad09_equals(jule::Ptr<_1c2daa688_Arr> _self_, jule::Ptr<_1c2d9e825_TypeKind> _54926_other) {
	jule::Ptr<_1c2daa688_Arr> _55013_arr = _1c2da264c_arr(_54926_other.ptr());;
	if ((_55013_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _55013_arr.get()._field_n) && _1c2da002e_equals(_self_.get()._field_elem, _55013_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1c2daa688_Arr _Src) {
	_Stream << _1c2daa9eb_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1c2dab458_to_str(_1c2dab0e5_Ptr* _self_) {
	if (_1c2dabab8_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1c2d9ec21_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1c2dab766_equals(jule::Ptr<_1c2dab0e5_Ptr> _self_, jule::Ptr<_1c2d9e825_TypeKind> _57326_other) {
	jule::Ptr<_1c2dab0e5_Ptr> _57413_ptr = _1c2da1e10_ptr(_57326_other.ptr());;
	if ((_57413_ptr == nullptr)) {
		return false;
	};
	return _1c2da002e_equals(_self_.get()._field_elem, _57413_ptr.get()._field_elem);
}



inline jule::Bool _1c2dabab8_is_unsafe(_1c2dab0e5_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2dab0e5_Ptr _Src) {
	_Stream << _1c2dab458_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2dac03b_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c2dad48d_push_err(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1db7061a7_Token> _65127_token, jule::Str _65142_fmt, jule::Slice<jule::Any> _65155_args) {
	_1c2d0c662_push_err((*_self_)._field_s.ptr(), _65127_token,_65142_fmt,jule::Any(_65155_args));
}



inline void _1c2dad669_allow_builtin(_1c2dacc84_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1c2dad845_disallow_builtin(_1c2dacc84_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1c2da42ec_Prim> _1c2dadb53_build_prim(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _66330_decl) {
	if ((!(_1c2db7c7d_is_prim(_66330_decl.get()._field_ident)))) {
		_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66330_decl.get()._field_generics.len() > 0LL)) {
		_1c2dad48d_push_err(&(*_self_), _66330_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66330_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1c2db773e_build_prim_type(_66330_decl.get()._field_ident);
}



inline void _1ab6d66b2_push_reference(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd868e1_StructIns>& _67741_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1ab45e836_exist((*_self_)._field_refers.ptr(), _67741_t)) {
		return;;
	};
	_1dce4024c_push((*_self_)._field_refers.ptr(), jule::Any(_67741_t));
}

inline void _1ab6d975e_push_reference(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1c2c3d54e_Trait>& _67741_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1ab6db376_exist((*_self_)._field_refers.ptr(), _67741_t)) {
		return;;
	};
	_1dce4024c_push((*_self_)._field_refers.ptr(), jule::Any(_67741_t));
}



inline void _1c2dae14d_push_reference_by_kind(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _68746_k) {
	{
		
		if ((_1c2da2d89_strct(_68746_k.ptr()) != nullptr)) {
			_case_begin_1ab6d531a:;
			{
				jule::Ptr<_1dcd868e1_StructIns> _69021_t = _1c2da2d89_strct(_68746_k.ptr());;
				_1ab6d66b2_push_reference(&(*_self_), _69021_t);
			}
		}
		else if ((_1c2da30ed_trt(_68746_k.ptr()) != nullptr)) {
			_case_begin_1ab6d5392:;
			{
				jule::Ptr<_1c2c3d54e_Trait> _69321_t = _1c2da30ed_trt(_68746_k.ptr());;
				_1ab6d975e_push_reference(&(*_self_), _69321_t);
			}
		}
		_match_end_1ab6d51e9:;
	};
}



inline void _1c2dae516_push_cycle_error(_1c2dacc84_TypeChecker* _self_, jule::Any _69831_def1, jule::Any _69842_def2, jule::Str& _69858_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70129_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70129_def };
			
			if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
				_case_begin_1ab6de731:;
				{
					return _70129_def.operator jule::Ptr<_1c2d9db32_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
				_case_begin_1ab6de797:;
				{
					return _70129_def.operator jule::Ptr<_1dcd5a596_Struct>().get()._field_ident;
				}
			}
			else {
				_case_begin_1ab6de599:;
				{
					return jule::Str();
				}
			}
			_match_end_1ab6de4bc:;
		};
	});;
	jule::Str _71213_def1_ident = _70113_get_ident(_69831_def1);;
	jule::Str _71313_def2_ident = _70113_get_ident(_69842_def2);;
	jule::Str _71413_refers_to = _207b81407_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71213_def1_ident),jule::Any(_71313_def2_ident)}));;
	(_69858_message).buffer.insert(0, (((_207a6542e_repeat(jule::Str(" ", 1),4LL) + _71413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c2dae8bd_check_cross_cycle(_1c2dacc84_TypeChecker* _self_, jule::Any _71832_decl, jule::Str& _71848_message) {
	{
		auto &_match_expr{ _71832_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
			_case_begin_1ab6e206e:;
			{
				jule::Ptr<_1c2d9db32_TypeAlias> _72117_ta = _71832_decl.operator jule::Ptr<_1c2d9db32_TypeAlias>();;
				{
					auto &expr = _72117_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1ab6e2d2d:;
					if (it != expr.end()) {
						jule::Any &_72220_d = *it;
						{
							{
								
								if ((_72220_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1ab6e37ac:;
									{
										_1c2dae516_push_cycle_error(&(*_self_), jule::Any(_72117_ta),jule::Any(_72220_d),_71848_message);
										return false;
									}
								}
								else if ((!(_1c2dae8bd_check_cross_cycle(&(*_self_), jule::Any(_72220_d),_71848_message)))) {
									_case_begin_1ab6e3834:;
									{
										_1c2dae516_push_cycle_error(&(*_self_), jule::Any(_72117_ta),jule::Any(_72220_d),_71848_message);
										return false;
									}
								}
								_match_end_1ab6e368b:;
							};
						}
						_iter_next_1ab6e2d2d:;
						++it;
						goto _iter_begin_1ab6e2d2d;
					}
					_iter_end_1ab6e2d2d:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1ab6e20d5:;
			{
				jule::Ptr<_1dcd5a596_Struct> _73317_s = _71832_decl.operator jule::Ptr<_1dcd5a596_Struct>();;
				{
					auto &expr = _73317_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1ab6e4a22:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd5a596_Struct> &_73420_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73420_d)) {
									_case_begin_1ab6e5d97:;
									{
										_1c2dae516_push_cycle_error(&(*_self_), jule::Any(_73317_s),jule::Any(_73420_d),_71848_message);
										return false;
									}
								}
								else if ((!(_1c2dae8bd_check_cross_cycle(&(*_self_), jule::Any(_73420_d),_71848_message)))) {
									_case_begin_1ab6e5e1e:;
									{
										_1c2dae516_push_cycle_error(&(*_self_), jule::Any(_73317_s),jule::Any(_73420_d),_71848_message);
										return false;
									}
								}
								_match_end_1ab6e5c76:;
							};
						}
						_iter_next_1ab6e4a22:;
						++it;
						goto _iter_begin_1ab6e4a22;
					}
					_iter_end_1ab6e4a22:;
				};
			}
		}
		_match_end_1ab6e1e81:;
	};
	return true;
}



inline jule::Bool _1c2daec75_check_illegal_cycles(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _75240_ident, jule::Any _75267_decl) {
	jule::Bool _75280_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75280_ok = true;
		return _75280_ok;
	};
	{
		auto &_match_expr{ _75267_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1ab6e6eca:;
			{
				if (((*_self_)._field_not_plain || _75267_decl.operator jule::Ptr<_1dcd5a596_Struct>().get()._field_cpp_linked)) {
					_75280_ok = true;
					return _75280_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
			_case_begin_1ab6e711d:;
			{
				if (_75267_decl.operator jule::Ptr<_1c2d9db32_TypeAlias>().get()._field_cpp_linked) {
					_75280_ok = true;
					return _75280_ok;
				};
			}
		}
		_match_end_1ab6e6e75:;
	};
	if ((_75267_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1c2dad48d_push_err(&(*_self_), _75240_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75280_ok = false;
		return _75280_ok;
	};
	jule::Str _77517_message = jule::Str();;
	if ((!(_1c2dae8bd_check_cross_cycle(&(*_self_), jule::Any(_75267_decl),_77517_message)))) {
		jule::Str _77821_err_msg = _77517_message;;
		_77517_message=jule::Str();
		_1c2dae516_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75267_decl),_77517_message);
		_77821_err_msg=(_77821_err_msg + _77517_message);
		_1c2dad48d_push_err(&(*_self_), _75240_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77821_err_msg)}));
		_75280_ok = false;
		return _75280_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d9db32_TypeAlias>>()) {
			_case_begin_1ab6ec321:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75267_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1ab6ec3dc:;
			{
				{
					auto &_match_expr{ _75267_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
						_case_begin_1ab6ecb3a:;
						{
							jule::Ptr<_1dcd5a596_Struct> _79425_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1dcd5a596_Struct>();;
							_79425_s.get()._field_depends = jule::alloc_for_append(_79425_s.get()._field_depends,1);_79425_s.get()._field_depends.__push(_75267_decl.operator jule::Ptr<_1dcd5a596_Struct>());;
						}
					}
					_match_end_1ab6eca4c:;
				};
			}
		}
		_match_end_1ab6ec2bb:;
	};
	_75280_ok = true;
	return _75280_ok;
}



inline jule::Trait<_1c2d9e3e6_Kind> _1c2db012c_from_type_alias(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _80235_decl, jule::Ptr<_1c2d9db32_TypeAlias>& _80262_ta) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _80262_ta.get()._field_public,_80262_ta.get()._field_token)))) {
		_1c2dad48d_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
		return nullptr;
	};
	_80262_ta.get()._field_used=true;
	if ((_80235_decl.get()._field_generics.len() > 0LL)) {
		_1c2dad48d_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ab7024ad:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d9db32_TypeAlias> _81920_bg = *it;
				{
					if (((_81920_bg == _80262_ta) || ((_80262_ta.get()._field_kind.get()._field_kind != nullptr) && _1c2da002e_equals(_80262_ta.get()._field_kind.get()._field_kind, _81920_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1ab7024ad;
					};
				}
				_iter_next_1ab7024ad:;
				++it;
				goto _iter_begin_1ab7024ad;
			}
			_iter_end_1ab7024ad:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ab7042d4:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d9db32_TypeAlias> _83020_bg = *it;
				{
					if ((_83020_bg == _80262_ta)) {
						_1c2dad48d_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _80262_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1ab704c74:;
						if (it != expr.end()) {
							jule::Ptr<_1c2d9db32_TypeAlias> _83524_dg = *it;
							{
								if ((_83020_bg == _83524_dg)) {
									_1c2dad48d_push_err(&(*_self_), _80235_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80235_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1ab704c74:;
							++it;
							goto _iter_begin_1ab704c74;
						}
						_iter_end_1ab704c74:;
					};
				}
				_iter_next_1ab7042d4:;
				++it;
				goto _iter_begin_1ab7042d4;
			}
			_iter_end_1ab7042d4:;
		};
	};
	jule::Bool _84417_ok = _1c2daec75_check_illegal_cycles(&(*_self_), _80235_decl,jule::Any(_80262_ta));;
	if ((!(_84417_ok))) {
		return nullptr;
	};
	_84417_ok=_1c2d1643a_check_type_alias_decl_kind((*_self_)._field_s, _80262_ta,(*_self_)._field_lookup);
	if ((!(_84417_ok))) {
		return nullptr;
	};
	if ((_80262_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_80262_ta);;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _86117_tk = jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_generic=_80262_ta.get()._field_generic, ._field_kind=_80262_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	_1c2dae14d_push_reference_by_kind(&(*_self_), _86117_tk);
	if (_80262_ta.get()._field_cpp_linked) {
		_86117_tk.get()._field_cpp_ident=_80262_ta.get()._field_ident;
	} else {
		_86117_tk.get()._field_cpp_ident=_80262_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1c2d9e3e6_Kind>(_86117_tk, 5);
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2db04d4_from_enum(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _87429_decl, jule::Ptr<_1c2c4070a_Enum>& _87456_e) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _87456_e.get()._field_public,_87456_e.get()._field_token)))) {
		_1c2dad48d_push_err(&(*_self_), _87429_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87429_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_87429_decl.get()._field_generics.len() > 0LL)) {
		_1c2dad48d_push_err(&(*_self_), _87429_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87429_decl.get()._field_ident)}));
		return nullptr;
	};
	return _87456_e;
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2db088b_from_type_enum(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _88634_decl, jule::Ptr<_1c2c41d05_TypeEnum>& _88661_e) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _88661_e.get()._field_public,_88661_e.get()._field_token)))) {
		_1c2dad48d_push_err(&(*_self_), _88634_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88634_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_88634_decl.get()._field_generics.len() > 0LL)) {
		_1c2dad48d_push_err(&(*_self_), _88634_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88634_decl.get()._field_ident)}));
		return nullptr;
	};
	return _88661_e;
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2db0c43_from_trait(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _89830_decl, jule::Ptr<_1c2c3d54e_Trait>& _89857_t) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _89857_t.get()._field_public,_89857_t.get()._field_token)))) {
		_1c2dad48d_push_err(&(*_self_), _89830_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89830_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_89830_decl.get()._field_generics.len() > 0LL)) {
		_1c2dad48d_push_err(&(*_self_), _89830_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89830_decl.get()._field_ident)}));
		return nullptr;
	};
	_1ab6d975e_push_reference(&(*_self_), _89857_t);
	return _89857_t;
}



inline jule::Bool _1c2db10ea_check_struct_ins(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd868e1_StructIns>& _91140_ins, jule::Ptr<_1db7061a7_Token>& _91162_error_token) {
	jule::Bool _91185_ok = jule::Bool();
	if (_91140_ins.get()._field_checked) {
		_91185_ok = true;
		return _91185_ok;
	};
	_91140_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91140_ins.get()._field_decl))) {
		_91185_ok = true;
		return _91185_ok;
	};
	if ((!(_1c2d20785_precheck_struct_ins((*_self_)._field_s, _91140_ins,_91162_error_token)))) {
		_91185_ok = false;
		return _91185_ok;
	};
	if ((_91140_ins.get()._field_generics.len() > 0LL)) {
		_1c2d21203_check_struct_ins_operators((*_self_)._field_s, _91140_ins);
		_1c2d20a0a_check_struct_ins((*_self_)._field_s, _91140_ins);
	};
	_91185_ok = true;
	return _91185_ok;
}



inline void _1c2db1392_append_used_struct_reference(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd5a596_Struct>& _93252_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd5a596_Struct>>()) {
			_case_begin_1ab7160d7:;
			{
				jule::Ptr<_1dcd5a596_Struct> _93921_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1dcd5a596_Struct>();;
				if ((!(_1dcd5039e_is_uses(_93921_ref_s.ptr(), _93252_s)))) {
					_93921_ref_s.get()._field_uses = jule::alloc_for_append(_93921_ref_s.get()._field_uses,1);_93921_ref_s.get()._field_uses.__push(_93252_s);;
				};
			}
		}
		_match_end_1ab715ceb:;
	};
}



inline jule::Ptr<_1dcd868e1_StructIns> _1c2db175a_build_struct_instance(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _94645_decl, jule::Ptr<_1dcd5a596_Struct>& _94672_s) {
	jule::Ptr<_1c2dac03b_Referencer> _94817_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>> _95017_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1c2cd9a07_ScopeChecker>>()) {
				_case_begin_1ab718cbb:;
				{
					jule::Ptr<_1c2cd9a07_ScopeChecker> _95725_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c2cd9a07_ScopeChecker>();;
					jule::Ptr<_1c2cd9a07_ScopeChecker> _95825_hard = _1c2cdcd7e_get_hard_root(_95725_sc);;
					if (((_95825_hard.get()._field_owner.get()._field_owner == nullptr) || (_95825_hard.get()._field_owner.get()._field_owner.get()._field_decl != _94672_s))) {
						goto _match_end_1ab718c66;
					};
					jule::I64 _96221_n = (_95825_hard.get()._field_owner.get()._field_generics.len() + _95825_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_95825_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_96221_n);
				}
			}
			_match_end_1ab718c66:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1dcd868e1_StructIns> _97217_ins = _1dcd4299b_instance(_94672_s);;
	_97217_ins.get()._field_generics=jule::Slice<jule::Ptr<_1c2d9d0e8_InsGeneric>>::alloc(0LL,_94645_decl.get()._field_generics.len());
	{
		auto &expr = _94645_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab71c9b2:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd69d69_TypeDecl> _97421_g = *it;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _97521_kind = _1c2db4be2_build(&(*_self_), _97421_g.get()._field_kind);;
				if ((_97521_kind == nullptr)) {
					return nullptr;
				};
				_97217_ins.get()._field_generics = jule::alloc_for_append(_97217_ins.get()._field_generics,1);_97217_ins.get()._field_generics.__push(jule::new_ptr<_1c2d9d0e8_InsGeneric>(_1c2d9d0e8_InsGeneric{._field_kind=_97521_kind, }));;
			}
			_iter_next_1ab71c9b2:;
			++it;
			goto _iter_begin_1ab71c9b2;
		}
		_iter_end_1ab71c9b2:;
	};
	(*_self_)._field_banned_generics=_95017_banned_generics;
	(*_self_)._field_referencer=_94817_referencer;
	return _97217_ins;
}



inline jule::Ptr<_1dcd868e1_StructIns> _1c2db1b12_from_struct(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _98935_decl, jule::Ptr<_1dcd5a596_Struct>& _98962_s) {
	if ((!(_1c2d0cd38_is_accessible_define((*_self_)._field_s.ptr(), _98962_s.get()._field_public,_98962_s.get()._field_token)))) {
		_1c2dad48d_push_err(&(*_self_), _98935_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_98935_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_98935_decl.get()._field_generics.len() > 0LL)) {
			_1c2dad48d_push_err(&(*_self_), _98935_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1dcd868e1_StructIns>(_1dcd868e1_StructIns{._field_decl=_98962_s, });
	};
	jule::Bool _100717_ok = ((*_self_)._field_not_plain || _1c2daec75_check_illegal_cycles(&(*_self_), _98935_decl,jule::Any(_98962_s)));;
	if ((!(_100717_ok))) {
		return nullptr;
	};
	_1c2db1392_append_used_struct_reference(&(*_self_), _98962_s);
	jule::Ptr<_1dcd868e1_StructIns> _101317_ins = _1c2db175a_build_struct_instance(&(*_self_), _98935_decl,_98962_s);;
	if ((_101317_ins == nullptr)) {
		return nullptr;
	};
	_100717_ok=_1c2d0da09_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101317_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_101317_ins.get()._field_generics.len()),_98935_decl.get()._field_token);
	if ((!(_100717_ok))) {
		return nullptr;
	};
	jule::Ptr<_1dcd868e1_StructIns> _102317_exist_instance = _1dcd46c14_append_instance(_98962_s.ptr(), _101317_ins);;
	if ((_102317_exist_instance != nullptr)) {
		if ((!(_1c2d14aa9_check_constraints_struct((*_self_)._field_s, _101317_ins,_98935_decl.get()._field_token,_102317_exist_instance)))) {
			return nullptr;
		};
		_1ab6d66b2_push_reference(&(*_self_), _102317_exist_instance);
		return _102317_exist_instance;
	};
	if ((!(_1c2db10ea_check_struct_ins(&(*_self_), _101317_ins,_98935_decl.get()._field_token)))) {
		return nullptr;
	};
	_1ab6d66b2_push_reference(&(*_self_), _101317_ins);
	return _101317_ins;
}



inline jule::Trait<_1c2d9e3e6_Kind> _1c2db1e20_get_def(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl>& _104731_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1ab727747:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd7744d_GenericDecl> _104816_g = *it;
			{
				if ((_104816_g.get()._field_ident == _104731_decl.get()._field_ident)) {
					return jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(_104816_g.get()._field_ident), 6);
				};
			}
			_iter_next_1ab727747:;
			++it;
			goto _iter_begin_1ab727747;
		}
		_iter_end_1ab727747:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1ab728072:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9db32_TypeAlias> _105421_g = *it;
			{
				if ((_105421_g.get()._field_ident == _104731_decl.get()._field_ident)) {
					if ((_104731_decl.get()._field_generics.len() > 0LL)) {
						_1c2dad48d_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_104731_decl.get()._field_ident)}));
						return nullptr;
					};
					jule::Ptr<_1dcd868e1_StructIns> _106025_st = _1c2da2d89_strct(_105421_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_106025_st != nullptr)) {
						jule::Bool _106225_ok = _1c2daec75_check_illegal_cycles(&(*_self_), _104731_decl,jule::Any(_106025_st.get()._field_decl));;
						if ((!(_106225_ok))) {
							return nullptr;
						};
					};
					return _105421_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1ab728072:;
			++it;
			goto _iter_begin_1ab728072;
		}
		_iter_end_1ab728072:;
	};
	if ((!(_104731_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1c2c4070a_Enum> _107221_e = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db9e6c_find_enum((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if ((_107221_e != nullptr)) {
			return jule::Trait<_1c2d9e3e6_Kind>(_1c2db04d4_from_enum(&(*_self_), _104731_decl,_107221_e), 3);
		};
		jule::Ptr<_1c2c41d05_TypeEnum> _107721_te = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2dba27a_find_type_enum((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if ((_107721_te != nullptr)) {
			return jule::Trait<_1c2d9e3e6_Kind>(_1c2db088b_from_type_enum(&(*_self_), _104731_decl,_107721_te), 4);
		};
		jule::Ptr<_1c2c3d54e_Trait> _108221_t = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db9b5e_find_trait((*_self_)._field_lookup, _104731_decl.get()._field_ident);;
		if (((_108221_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_108221_t=_1c2dc82bb_find_builtin_trait(_104731_decl.get()._field_ident);
		};
		if ((_108221_t != nullptr)) {
			return jule::Trait<_1c2d9e3e6_Kind>(_1c2db0c43_from_trait(&(*_self_), _104731_decl,_108221_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1c2dad48d_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd5a596_Struct> _109417_s = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db9499_find_struct((*_self_)._field_lookup, _104731_decl.get()._field_ident,_104731_decl.get()._field_cpp_linked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_1c2d9e3e6_Kind>(_1c2db1b12_from_struct(&(*_self_), _104731_decl,_109417_s), 0);
	};
	jule::Ptr<_1c2d9db32_TypeAlias> _109917_ta = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db90e2_find_type_alias((*_self_)._field_lookup, _104731_decl.get()._field_ident,_104731_decl.get()._field_cpp_linked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_109917_ta=_1c2dc76d8_find_builtin_type_alias(_104731_decl.get()._field_ident);
	};
	if ((_109917_ta != nullptr)) {
		return _1c2db012c_from_type_alias(&(*_self_), _104731_decl,_109917_ta);
	};
	_1c2dad48d_push_err(&(*_self_), _104731_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_104731_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1c2d9e3e6_Kind> _1c2db222d_build_ident(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6a430_IdentTypeDecl> _111134_decl) {
	{
		
		if (_1c2db7c7d_is_prim(_111134_decl.get()._field_ident)) {
			_case_begin_1ab734644:;
			{
				return jule::Trait<_1c2d9e3e6_Kind>(_1c2dadb53_build_prim(&(*_self_), _111134_decl), 6);
			}
		}
		else {
			_case_begin_1ab733dc4:;
			{
				return _1c2db1e20_get_def(&(*_self_), _111134_decl);
			}
		}
		_match_end_1ab733ce7:;
	};
}



inline jule::Trait<_1c2d9e3e6_Kind> _1c2db253b_build_sub_ident(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl> _112038_decl) {
	jule::Trait<_1c2d9e3e6_Kind> _112117_ident = _1c2db222d_build_ident(&(*_self_), _112038_decl.get()._field_idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c41d05_TypeEnum>>()) {
			_case_begin_1ab736129:;
			{
				goto _match_end_1ab73604c;
			}
		}
		else {
			_case_begin_1ab735d1b:;
			{
				_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab73604c:;
	};
	jule::Ptr<_1c2c41d05_TypeEnum> _113317_t = _112117_ident.operator jule::Ptr<_1c2c41d05_TypeEnum>();;
	jule::Slice<jule::Ptr<_1dcd6a430_IdentTypeDecl>> _113417_idents = _112038_decl.get()._field_idents.slice(1LL);;
	{
		auto &expr = _113417_idents;
		auto it = expr.begin();
		_iter_begin_1ab73745a:;
		if (it != expr.end()) {
			jule::I64 _113513_i = it - expr.begin();
			jule::Ptr<_1dcd6a430_IdentTypeDecl> _113516_id = *it;
			{
				jule::Ptr<_1c2c4173e_TypeEnumItem> _113621_item = _1c2c4283e_find_item(_113317_t.ptr(), _113516_id.get()._field_ident);;
				if ((_113621_item == nullptr)) {
					_1c2dad48d_push_err(&(*_self_), _113516_id.get()._field_token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113317_t.get()._field_ident),jule::Any(_113516_id.get()._field_ident)}));
					return nullptr;
				};
				if (((_113417_idents.len() - _113513_i) == 1LL)) {
					_1c2dae14d_push_reference_by_kind(&(*_self_), _113621_item.get()._field_kind.get()._field_kind);
					return jule::Trait<_1c2d9e3e6_Kind>(_113621_item.get()._field_kind.get()._field_kind, 5);
				};
				_113317_t=_1c2da23d8_tenm(_113621_item.get()._field_kind.get()._field_kind.ptr());
				if ((_113317_t == nullptr)) {
					_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1ab73745a:;
			++it;
			_113513_i++;
			goto _iter_begin_1ab73745a;
		}
		_iter_end_1ab73745a:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2da7a81_Sptr> _1c2db2849_build_sptr_from_type(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _115544_elem) {
	{
		
		if ((_115544_elem == nullptr)) {
			_case_begin_1ab737e1c:;
			{
				return nullptr;
			}
		}
		else if ((_1c2da2d89_strct(_115544_elem.ptr()) != nullptr)) {
			_case_begin_1ab737e94:;
			{
				jule::Ptr<_1dcd868e1_StructIns> _116117_s = _1c2da2d89_strct(_115544_elem.ptr());;
				if (((_116117_s.get()._field_decl != nullptr) && _116117_s.get()._field_decl.get()._field_cpp_linked)) {
					_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1c2da264c_arr(_115544_elem.ptr()) != nullptr) && _1c2da264c_arr(_115544_elem.ptr()).get()._field_auto)) {
			_case_begin_1ab73801b:;
			{
				_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab737cda:;
	};
	return jule::new_ptr<_1c2da7a81_Sptr>(_1c2da7a81_Sptr{._field_elem=_115544_elem});
}



inline jule::Ptr<_1c2da7a81_Sptr> _1c2db2b57_build_sptr(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6b222_SptrTypeDecl> _117533_decl) {
	jule::Bool _117613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_117613_not_plain;
	});;
	jule::Ptr<_1c2d9e825_TypeKind> _118017_elem = _1c2db5000_check_decl(&(*_self_), _117533_decl.get()._field_elem);;
	return _1c2db2849_build_sptr_from_type(&(*_self_), _118017_elem);
}



inline jule::Ptr<_1c2dab0e5_Ptr> _1c2db2e65_build_ptr_from_type(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1c2d9e825_TypeKind>& _118443_elem) {
	{
		
		if ((_118443_elem == nullptr)) {
			_case_begin_1ab741574:;
			{
				return nullptr;
			}
		}
		else if (((_1c2da264c_arr(_118443_elem.ptr()) != nullptr) && _1c2da264c_arr(_118443_elem.ptr()).get()._field_auto)) {
			_case_begin_1ab7415eb:;
			{
				_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1c2dab0e5_Ptr>();
			}
		}
		_match_end_1ab741453:;
	};
	return jule::new_ptr<_1c2dab0e5_Ptr>(_1c2dab0e5_Ptr{._field_elem=_118443_elem});
}



inline jule::Ptr<_1c2dab0e5_Ptr> _1c2db3273_build_ptr(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6bbe5_PtrTypeDecl> _119932_decl) {
	jule::Bool _120013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_120013_not_plain;
	});;
	jule::Ptr<_1c2d9e825_TypeKind> _120417_elem = nullptr;;
	if ((!(_1dcd6c047_is_unsafe(_119932_decl.ptr())))) {
		_120417_elem=_1c2db5000_check_decl(&(*_self_), _119932_decl.get()._field_elem);
		return _1c2db2e65_build_ptr_from_type(&(*_self_), _120417_elem);
	};
	return jule::new_ptr<_1c2dab0e5_Ptr>(_1c2dab0e5_Ptr{._field_elem=_120417_elem});
}



inline jule::Ptr<_1c2da84dd_Slc> _1c2db3581_build_slc(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6b61d_SlcTypeDecl> _121632_decl) {
	jule::Bool _121713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121713_not_plain;
	});;
	jule::Ptr<_1c2d9e825_TypeKind> _122117_elem = _1c2db5000_check_decl(&(*_self_), _121632_decl.get()._field_elem);;
	{
		
		if ((_122117_elem == nullptr)) {
			_case_begin_1ab746821:;
			{
				return nullptr;
			}
		}
		else if (((_1c2da264c_arr(_122117_elem.ptr()) != nullptr) && _1c2da264c_arr(_122117_elem.ptr()).get()._field_auto)) {
			_case_begin_1ab746898:;
			{
				_1c2dad48d_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab746766:;
	};
	return jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=_122117_elem});
}



inline jule::Ptr<_1c2daa688_Arr> _1c2db388e_build_arr(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6c377_ArrTypeDecl> _123732_decl) {
	jule::Bool _123813_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_123813_not_plain;
	});;
	jule::I64 _124217_n = 0LL;;
	if ((!(_1dcd6c751_auto_sized(_123732_decl.ptr())))) {
		jule::Ptr<_1c2d6d9e2_Data> _124521_size = _1c2d90edc_eval_expr(_1c2d12c72_eval((*_self_)._field_s, (*_self_)._field_lookup), _123732_decl.get()._field_size);;
		if ((_124521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1c2d6e3a5_is_const(_124521_size.ptr())))) {
			_1c2dad48d_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1c2da1937_prim(_124521_size.get()._field_kind.ptr()) == nullptr) || (!(_1c2cd20d7_is_int(_1c2da1937_prim(_124521_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1c2dad48d_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1dce29da2_as_i64(_124521_size.get()._field_constant.ptr())));
		if ((_124217_n < 0LL)) {
			_1c2dad48d_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1c2cbc0d3_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_124217_n) > _1c2ccbc08_max(jule::Str("int", 3))))) {
			_1c2dad48d_push_err(&(*_self_), _123732_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1c2d9e825_TypeKind> _126817_elem = _1c2db5000_check_decl(&(*_self_), _123732_decl.get()._field_elem);;
	{
		
		if ((_126817_elem == nullptr)) {
			_case_begin_1ab750341:;
			{
				return nullptr;
			}
		}
		else if (((_1c2da264c_arr(_126817_elem.ptr()) != nullptr) && _1c2da264c_arr(_126817_elem.ptr()).get()._field_auto)) {
			_case_begin_1ab7503a7:;
			{
				_1c2dad48d_push_err(&(*_self_), _123732_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab7500bb:;
	};
	return jule::new_ptr<_1c2daa688_Arr>(_1c2daa688_Arr{._field_auto=_1dcd6c751_auto_sized(_123732_decl.ptr()), ._field_n=_124217_n, ._field_elem=_126817_elem});
}



inline jule::Ptr<_1c2da9a94_Map> _1c2db3b9c_build_map(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6cac5_MapTypeDecl> _128632_decl) {
	jule::Bool _128713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128713_not_plain;
	});;
	jule::Ptr<_1c2d9e825_TypeKind> _129117_key = _1c2db5000_check_decl(&(*_self_), _128632_decl.get()._field_key);;
	if ((_129117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _129617_val = _1c2db5000_check_decl(&(*_self_), _128632_decl.get()._field_val);;
	if ((_129617_val == nullptr)) {
		return nullptr;
	};
	if ((_1c2da2174_enm(_129617_val.ptr()) != nullptr)) {
		_1c2dad48d_push_err(&(*_self_), _128632_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c2da9a94_Map>(_1c2da9a94_Map{._field_key=_129117_key, ._field_val=_129617_val});
}



inline jule::Ptr<_1c2da906b_Tuple> _1c2db3eaa_build_tuple(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6b909_TupleTypeDecl> _131034_decl) {
	jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _131117_types = jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>>::alloc(0LL,_131034_decl.get()._field_types.len());;
	{
		auto &expr = _131034_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1ab7559ea:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd69d69_TypeDecl> _131221_t = *it;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _131321_kind = _1c2db5000_check_decl(&(*_self_), _131221_t);;
				if ((_131321_kind == nullptr)) {
					return nullptr;
				};
				_131117_types = jule::alloc_for_append(_131117_types,1);_131117_types.__push(_131321_kind);;
			}
			_iter_next_1ab7559ea:;
			++it;
			goto _iter_begin_1ab7559ea;
		}
		_iter_end_1ab7559ea:;
	};
	return jule::new_ptr<_1c2da906b_Tuple>(_1c2da906b_Tuple{._field_types=_131117_types});
}



inline jule::Bool _1c2db42b8_check_fn_types(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dce3b644_FnIns>& _132338_f) {
	jule::Bool _132351_ok = jule::Bool();
	{
		auto &expr = _132338_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab7578ed:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3a775_ParamIns> _132421_p = *it;
			{
				_132421_p.get()._field_kind=_1c2db4be2_build(&(*_self_), _132421_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_132351_ok=(_132421_p.get()._field_kind != nullptr);
				if ((!(_132351_ok))) {
					_132351_ok = false;
					return _132351_ok;
				};
				_1c2d151e7_check_fn_param_kind((*_self_)._field_s, _132421_p);
			}
			_iter_next_1ab7578ed:;
			++it;
			goto _iter_begin_1ab7578ed;
		}
		_iter_end_1ab7578ed:;
	};
	if ((!(_1dce38e05_is_void(_132338_f.get()._field_decl.ptr())))) {
		_132338_f.get()._field_result=_1c2db4be2_build(&(*_self_), _132338_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_132351_ok = (_132338_f.get()._field_result != nullptr);
		return _132351_ok;
	};
	_132351_ok = true;
	return _132351_ok;
}



inline jule::Ptr<_1dce3b644_FnIns> _1c2db45c6_build_fn(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd7bb7d_FnDecl> _134131_decl) {
	if ((_134131_decl.get()._field_generics.len() > 0LL)) {
		_1c2dad48d_push_err(&(*_self_), _134131_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dce38993_Fn> _134717_f = _1dce427b0_build_fn(_134131_decl);;
	jule::I64 _134913_n = (*_self_)._field_s.get()._field_errors.len();;
	_1c2d1c2ed_check_fn_decl((*_self_)._field_s, _134717_f);
	if ((_134913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1dce3b644_FnIns> _135517_ins = _1dce39d7e_instance_force(_134717_f);;
	_135517_ins.get()._field_anon=true;
	jule::Bool _135813_ok = _1c2db42b8_check_fn_types(&(*_self_), _135517_ins);;
	if ((!(_135813_ok))) {
		return nullptr;
	};
	return _135517_ins;
}



inline jule::Trait<_1c2d9e3e6_Kind> _1c2db48d4_build_by_namespace(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd6ae36_NamespaceTypeDecl> _136641_decl) {
	jule::Str _136713_path = _1c2db7376_build_link_path_by_tokens(_136641_decl.get()._field_idents);;
	jule::Ptr<_1c2d01854_ImportInfo> _136817_imp = _1c2dba3bd_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c2db8883_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c2d01854_ImportInfo>)>([=](jule::Ptr<_1c2d01854_ImportInfo> _136853_imp) mutable -> jule::Bool {
		if (((_136641_decl.get()._field_idents.len() == 1LL) && (_136853_imp.get()._field_alias == _136713_path))) {
			return true;
		};
		return ((_136853_imp.get()._field_link_path == _136713_path) && _1c2d044b1_is_accessible_via_selection(_136853_imp.ptr()));
	}));;
	if (((_136817_imp == nullptr) || (!(_1c2d03e1c_is_lookupable(_136817_imp.ptr(), jule::Str("self", 4)))))) {
		_1c2dad48d_push_err(&(*_self_), _136641_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136713_path)}));
		return nullptr;
	};
	_1c2dad845_disallow_builtin(&(*_self_));
	jule::Trait<_1c2dba3bd_Lookup> _138117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1c2dba3bd_Lookup>(_136817_imp, 1);
	jule::Ptr<_1c2d9e825_TypeKind> _138317_kind = _1c2db5000_check_decl(&(*_self_), _136641_decl.get()._field_kind);;
	(*_self_)._field_lookup=_138117_lookup;
	_1c2dad669_allow_builtin(&(*_self_));
	return jule::Trait<_1c2d9e3e6_Kind>(_138317_kind, 5);
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2db4be2_build(_1c2dacc84_TypeChecker* _self_, jule::Any& _139029_decl_kind) {
	jule::Trait<_1c2d9e3e6_Kind> _139117_kind = nullptr;;
	{
		auto &_match_expr{ _139029_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6a430_IdentTypeDecl>>()) {
			_case_begin_1ab76629c:;
			{
				jule::Trait<_1c2d9e3e6_Kind> _139421_t = _1c2db222d_build_ident(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6a430_IdentTypeDecl>());;
				if ((_139421_t != nullptr)) {
					_139117_kind=_139421_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>>()) {
			_case_begin_1ab766b2c:;
			{
				jule::Trait<_1c2d9e3e6_Kind> _139921_t = _1c2db253b_build_sub_ident(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>());;
				if ((_139921_t != nullptr)) {
					_139117_kind=_139921_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6b222_SptrTypeDecl>>()) {
			_case_begin_1ab766b93:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2da7a81_Sptr> _140521_t = _1c2db2b57_build_sptr(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6b222_SptrTypeDecl>());;
				if ((_140521_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_140521_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6bbe5_PtrTypeDecl>>()) {
			_case_begin_1ab765488:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2dab0e5_Ptr> _141121_t = _1c2db3273_build_ptr(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6bbe5_PtrTypeDecl>());;
				if ((_141121_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_141121_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6b61d_SlcTypeDecl>>()) {
			_case_begin_1ab7654ee:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2da84dd_Slc> _141721_t = _1c2db3581_build_slc(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6b61d_SlcTypeDecl>());;
				if ((_141721_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_141721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6c377_ArrTypeDecl>>()) {
			_case_begin_1ab765565:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2daa688_Arr> _142321_t = _1c2db388e_build_arr(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6c377_ArrTypeDecl>());;
				if ((_142321_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_142321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6cac5_MapTypeDecl>>()) {
			_case_begin_1ab7655cb:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2da9a94_Map> _142921_t = _1c2db3b9c_build_map(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6cac5_MapTypeDecl>());;
				if ((_142921_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_142921_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6b909_TupleTypeDecl>>()) {
			_case_begin_1ab767336:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c2da906b_Tuple> _143521_t = _1c2db3eaa_build_tuple(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6b909_TupleTypeDecl>());;
				if ((_143521_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_143521_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7bb7d_FnDecl>>()) {
			_case_begin_1ab76739c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1dce3b644_FnIns> _144121_t = _1c2db45c6_build_fn(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd7bb7d_FnDecl>());;
				if ((_144121_t != nullptr)) {
					_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_144121_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6ae36_NamespaceTypeDecl>>()) {
			_case_begin_1ab767413:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1c2d9e3e6_Kind> _144721_t = _1c2db48d4_build_by_namespace(&(*_self_), _139029_decl_kind.operator jule::Ptr<_1dcd6ae36_NamespaceTypeDecl>());;
				if ((_144721_t != nullptr)) {
					_139117_kind=_144721_t;
				};
			}
		}
		else {
			_case_begin_1ab7652e0:;
			{
				jule::Any _145221_udecl_kind = (*(((jule::Any*)((&(_139029_decl_kind))))));;
				{
					auto &_match_expr{ _145221_udecl_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1c2da7a81_Sptr>>()) {
						_case_begin_1ab7661c0:;
						{
							_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_145221_udecl_kind.operator jule::Ptr<_1c2da7a81_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c2dab0e5_Ptr>>()) {
						_case_begin_1ab766236:;
						{
							_139117_kind=jule::Trait<_1c2d9e3e6_Kind>(_145221_udecl_kind.operator jule::Ptr<_1c2dab0e5_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1ab76606b:;
						{
							_1c2dad48d_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1ab765e7d:;
				};
			}
		}
		_match_end_1ab76528a:;
	};
	if ((_139117_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _139117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d9e825_TypeKind>>()) {
			_case_begin_1ab7742bb:;
			{
				return _139117_kind.operator jule::Ptr<_1c2d9e825_TypeKind>();
			}
		}
		else {
			_case_begin_1ab773b06:;
			{
				return jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=_139117_kind});
			}
		}
		_match_end_1ab76791e:;
	};
}



inline jule::Ptr<_1c2d9e825_TypeKind> _1c2db5000_check_decl(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1dcd69d69_TypeDecl>& _147634_decl) {
	jule::Ptr<_1db7061a7_Token> _147817_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_147634_decl.get()._field_token;
	jule::Ptr<_1c2d9e825_TypeKind> _148117_kind = _1c2db4be2_build(&(*_self_), _147634_decl.get()._field_kind);;
	(*_self_)._field_error_token=_147817_error_token;
	return _148117_kind;
}



inline void _1c2db5275_check(_1c2dacc84_TypeChecker* _self_, jule::Ptr<_1c2da397d_TypeSymbol>& _148729_t) {
	if ((_148729_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2d9e825_TypeKind> _149117_kind = _1c2db5000_check_decl(&(*_self_), _148729_t.get()._field_decl);;
	if ((_149117_kind == nullptr)) {
		_1c2da4011_remove_kind(_148729_t.ptr());
		return;;
	};
	_148729_t.get()._field_kind=_149117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2dacc84_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c2db58d5___ident_type_decl(jule::Str& _150334_ident, jule::Ptr<_1dcd6a430_IdentTypeDecl> _150346_t) {
	if ((_150346_t.get()._field_ident == _150334_ident)) {
		return true;
	};
	{
		auto &expr = _150346_t.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab777d08:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd69d69_TypeDecl> &_150716_g = *it;
			{
				if (static__1c2db5c26_exist(_150334_ident,_150716_g.get()._field_kind)) {
					return true;
				};
			}
			_iter_next_1ab777d08:;
			++it;
			goto _iter_begin_1ab777d08;
		}
		_iter_end_1ab777d08:;
	};
	return false;
}



inline jule::Bool static__1c2db5c26_exist(jule::Str& _151522_ident, jule::Any& _151535_k) {
	{
		auto &_match_expr{ _151535_k };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6a430_IdentTypeDecl>>()) {
			_case_begin_1ab778e08:;
			{
				return static__1c2db58d5___ident_type_decl(_151522_ident,_151535_k.operator jule::Ptr<_1dcd6a430_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>>()) {
			_case_begin_1ab778e6e:;
			{
				jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl> _152017_sit = _151535_k.operator jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>();;
				{
					auto &expr = _152017_sit.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1ab77a778:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd6a430_IdentTypeDecl> &_152120_id = *it;
						{
							if (static__1c2db58d5___ident_type_decl(_151522_ident,_152120_id)) {
								return true;
							};
						}
						_iter_next_1ab77a778:;
						++it;
						goto _iter_begin_1ab77a778;
					}
					_iter_end_1ab77a778:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6b222_SptrTypeDecl>>()) {
			_case_begin_1ab77915b:;
			{
				jule::Ptr<_1dcd6b222_SptrTypeDecl> _152817_sptr = _151535_k.operator jule::Ptr<_1dcd6b222_SptrTypeDecl>();;
				return static__1c2db5c26_exist(_151522_ident,_152817_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6bbe5_PtrTypeDecl>>()) {
			_case_begin_1ab7791c2:;
			{
				jule::Ptr<_1dcd6bbe5_PtrTypeDecl> _153117_ptr = _151535_k.operator jule::Ptr<_1dcd6bbe5_PtrTypeDecl>();;
				return static__1c2db5c26_exist(_151522_ident,_153117_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6b61d_SlcTypeDecl>>()) {
			_case_begin_1ab779238:;
			{
				jule::Ptr<_1dcd6b61d_SlcTypeDecl> _153417_slc = _151535_k.operator jule::Ptr<_1dcd6b61d_SlcTypeDecl>();;
				return static__1c2db5c26_exist(_151522_ident,_153417_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6c377_ArrTypeDecl>>()) {
			_case_begin_1ab77929e:;
			{
				jule::Ptr<_1dcd6c377_ArrTypeDecl> _153717_arr = _151535_k.operator jule::Ptr<_1dcd6c377_ArrTypeDecl>();;
				return static__1c2db5c26_exist(_151522_ident,_153717_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6cac5_MapTypeDecl>>()) {
			_case_begin_1ab779315:;
			{
				jule::Ptr<_1dcd6cac5_MapTypeDecl> _154017_map = _151535_k.operator jule::Ptr<_1dcd6cac5_MapTypeDecl>();;
				return (static__1c2db5c26_exist(_151522_ident,_154017_map.get()._field_key.get()._field_kind) || static__1c2db5c26_exist(_151522_ident,_154017_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7bb7d_FnDecl>>()) {
			_case_begin_1ab77937b:;
			{
				jule::Ptr<_1dcd7bb7d_FnDecl> _154417_f = _151535_k.operator jule::Ptr<_1dcd7bb7d_FnDecl>();;
				{
					auto &expr = _154417_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ab780b24:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd7a85d_ParamDecl> &_154520_p = *it;
						{
							if (_1dcd7abc1_is_self(_154520_p.ptr())) {
								goto _iter_next_1ab780b24;
							};
							if (static__1c2db5c26_exist(_151522_ident,_154520_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1ab780b24:;
						++it;
						goto _iter_begin_1ab780b24;
					}
					_iter_end_1ab780b24:;
				};
				if ((_154417_f.get()._field_result != nullptr)) {
					return static__1c2db5c26_exist(_151522_ident,_154417_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6b909_TupleTypeDecl>>()) {
			_case_begin_1ab779403:;
			{
				jule::Ptr<_1dcd6b909_TupleTypeDecl> _155817_tup = _151535_k.operator jule::Ptr<_1dcd6b909_TupleTypeDecl>();;
				{
					auto &expr = _155817_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1ab782ecd:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd69d69_TypeDecl> &_155920_t = *it;
						{
							if (static__1c2db5c26_exist(_151522_ident,_155920_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1ab782ecd:;
						++it;
						goto _iter_begin_1ab782ecd;
					}
					_iter_end_1ab782ecd:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6ae36_NamespaceTypeDecl>>()) {
			_case_begin_1ab77947a:;
			{
				jule::Ptr<_1dcd6ae36_NamespaceTypeDecl> _156617_ns = _151535_k.operator jule::Ptr<_1dcd6ae36_NamespaceTypeDecl>();;
				return static__1c2db5c26_exist(_151522_ident,_156617_ns.get()._field_kind.get()._field_kind);
			}
		}
		else {
			_case_begin_1ab778c3d:;
			{
				return false;
			}
		}
		_match_end_1ab778bd8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2db5495_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c437d286_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c43c6a1b_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c43c79c8_stop(_1c43c7346_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1c43c7c3c_stopped(_1c43c7346_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1c43c7ea1_finished(_1c43c7346_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1c43c8215_is_last_st(_1c43c7346_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1c43c8534_push_err(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1db7061a7_Token> _19227_token, jule::Str _19242_fmt) {
	_1c43e3a38_push_err((*_self_)._field_p.ptr(), _19227_token,_19242_fmt,jule::Slice<jule::Any>());
}



inline void _1c43c8853_push_suggestion(_1c43c7346_ScopeParser* _self_, jule::Str _19734_fmt, jule::Slice<jule::Any> _19747_args) {
	_1c43e3d57_push_suggestion((*_self_)._field_p.ptr(), _19734_fmt,jule::Any(_19747_args));
}



inline void _1c43c8ac8_insert_as_next(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _20138_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1c43c6a1b_stmt>(_1c43c6a1b_stmt{._field_tokens=_20138_tokens, });
}



inline jule::Ptr<_1c43c6a1b_stmt> _1c43c8d3c_next(_1c43c7346_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43c91e4_build_scope(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _21135_tokens, jule::Ptr<_1db7061a7_Token> _21157_end) {
	jule::Ptr<_1dcd7a187_ScopeTree> _21217_s = _1c43c58b6_new_scope();;
	_21217_s.get()._field_parent=(*_self_)._field_s;
	_21217_s.get()._field_end=_21157_end;
	_1c43c7346_ScopeParser _21517_ssp = _1c43c7346_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1c43d2d68_build(&_21517_ssp, _21135_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43c9502_build_var_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _22236_tokens) {
	jule::Ptr<_1dcd7cb5c_VarDecl> _22317_v = _1c43e6530_build_var((*_self_)._field_p, _22236_tokens);;
	_22317_v.get()._field_scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1dcd7d014_RetSt> _1c43c9810_build_ret_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _22835_tokens) {
	jule::Ptr<_1dcd7d014_RetSt> _22917_st = jule::new_ptr<_1dcd7d014_RetSt>(_1dcd7d014_RetSt{._field_token=_22835_tokens[0LL], });;
	if ((_22835_tokens.len() > 1LL)) {
		_22835_tokens=_22835_tokens.slice(1LL);
		_22917_st.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _22835_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1dcd7d674_Iter> _1c43c9b1d_build_while_next_iter(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1c43c6a1b_stmt>& _23945_s) {
	jule::Ptr<_1dcd7d674_Iter> _24017_it = jule::new_ptr<_1dcd7d674_Iter>(_1dcd7d674_Iter{._field_token=_23945_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _24317_tokens = _23945_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1dcd7de49_WhileKind> _24417_kind = jule::new_ptr<_1dcd7de49_WhileKind>(_1dcd7de49_WhileKind{});;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _24317_tokens);
	};
	if (_1c43c8215_is_last_st(&(*_self_))) {
		_1c43c8534_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1c43c8d3c_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _25617_st_tokens = _1c43d37e7_get_block_expr(_24317_tokens);;
	if ((_25617_st_tokens.len() > 0LL)) {
		jule::Ptr<_1c43c6a1b_stmt> _25821_stmt = jule::new_ptr<_1c43c6a1b_stmt>(_1c43c6a1b_stmt{._field_tokens=_25617_st_tokens, ._field_terminated=_23945_s.get()._field_terminated});;
		_24417_kind.get()._field_next_token=_25617_st_tokens[0LL];
		_24417_kind.get()._field_next=_1c43d2a49_build_st(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_st_tokens.len();;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _26717_block_tokens = _1c43e1283_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_block_tokens == nullptr)) {
		_1c43c79c8_stop(&(*_self_));
		_1c43c8534_push_err(&(*_self_), _24017_it.get()._field_token,jule::Str("body is not exist", 17));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1c43c8534_push_err(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_scope=_1c43c91e4_build_scope(&(*_self_), _26717_block_tokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1dcd7de49_WhileKind> _1c43c9e2b_build_while_iter_kind(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _28445_tokens) {
	return jule::new_ptr<_1dcd7de49_WhileKind>(_1dcd7de49_WhileKind{._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _28445_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43ca25b_get_range_kind_keys_tokens(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _29050_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _29118_vars;;
	jule::Slice<_207b80eb7_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1c43e1d77_parts(_29050_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43ca57a_build_range_kind_key(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _29644_tokens) {
	if ((_29644_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1dcd7cb5c_VarDecl> _30017_key = jule::new_ptr<_1dcd7cb5c_VarDecl>(_1dcd7cb5c_VarDecl{._field_token=_29644_tokens[0LL], });;
	if ((_30017_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_mutable=true;
		if ((_29644_tokens.len() == 1LL)) {
			_1c43c8534_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_token=_29644_tokens[1LL];
	} else if ((_29644_tokens.len() > 1LL)) {
		_1c43c8534_push_err(&(*_self_), _29644_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43c8534_push_err(&(*_self_), _30017_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_ident=_30017_key.get()._field_token.get()._field_kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>> _1c43ca888_build_range_kind_keys(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>& _32145_parts) {
	jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32145_parts;
		auto it = expr.begin();
		_iter_begin_1ab8e445d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1c43ca57a_build_range_kind_key(&(*_self_), _32321_tokens));;
			}
			_iter_next_1ab8e445d:;
			++it;
			goto _iter_begin_1ab8e445d;
		}
		_iter_end_1ab8e445d:;
	};
	return _32217_keys;
}



inline void _1c43cabc9_setup_range_kind_keys_plain(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1dcd7e7da_RangeKind>& _32951_rng, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _32973_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _33017_key_tokens = _1c43ca25b_get_range_kind_keys_tokens(&(*_self_), _32973_tokens);;
	if ((_33017_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_key_tokens.len() > 2LL)) {
		_1c43c8534_push_err(&(*_self_), _32951_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>> _33717_keys = _1c43ca888_build_range_kind_keys(&(*_self_), _33017_key_tokens);;
	_32951_rng.get()._field_key_a=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32951_rng.get()._field_key_b=_33717_keys[1LL];
	};
}



inline void _1c43cb02b_setup_range_kind_keys_explicit(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1dcd7e7da_RangeKind>& _34454_rng, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _34476_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _34617_rang = _1c43e1283_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34476_tokens);;
	if ((_34517_i < _34476_tokens.len())) {
		_1c43c8534_push_err(&(*_self_), _34454_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1c43cabc9_setup_range_kind_keys_plain(&(*_self_), _34454_rng,_34617_rang);
}



inline void _1c43cb35b_setup_range_kind_keys(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1dcd7e7da_RangeKind>& _35345_rng, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _35367_tokens) {
	if ((_35367_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35367_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1c43c8534_push_err(&(*_self_), _35367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1c43cb02b_setup_range_kind_keys_explicit(&(*_self_), _35345_rng,_35367_tokens);
		return;;
	};
	_1c43cabc9_setup_range_kind_keys_plain(&(*_self_), _35345_rng,_35367_tokens);
}



inline jule::Ptr<_1dcd7e7da_RangeKind> _1c43cb7ac_build_range_iter_kind(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _36545_var_tokens, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _36614_expr_tokens, jule::Ptr<_1db7061a7_Token>& _36642_in_token) {
	jule::Ptr<_1dcd7e7da_RangeKind> _36717_rng = jule::new_ptr<_1dcd7e7da_RangeKind>(_1dcd7e7da_RangeKind{._field_in_token=_36642_in_token, });;
	if ((_36614_expr_tokens.len() == 0LL)) {
		_1c43c8534_push_err(&(*_self_), _36717_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _36614_expr_tokens);
	if ((_36545_var_tokens.len() > 0LL)) {
		_1c43cb35b_setup_range_kind_keys(&(*_self_), _36717_rng,_36545_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1c43cbb64_build_common_iter_kind(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _38146_tokens, jule::Ptr<_1db7061a7_Token>& _38165_err_tok) {
	jule::I64 _38217_brace_n = 0LL;;
	{
		auto &expr = _38146_tokens;
		auto it = expr.begin();
		_iter_begin_1ab90007e:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab90103b:;
							{
								(_38217_brace_n)++;
								goto _iter_next_1ab90007e;
							}
						}
						else {
							_case_begin_1ab901316:;
							{
								(_38217_brace_n)--;
							}
						}
						_match_end_1ab901107:;
					};
				};
				if ((_38217_brace_n != 0LL)) {
					goto _iter_next_1ab90007e;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1ab900c2d:;
						{
							jule::Slice<jule::Ptr<_1db7061a7_Token>> _40025_decl_tokens = _38146_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1db7061a7_Token>> _40125_expr_tokens = _38146_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1c43cb7ac_build_range_iter_kind(&(*_self_), _40025_decl_tokens,_40125_expr_tokens,_38321_tok));
						}
					}
					_match_end_1ab9017cd:;
				};
			}
			_iter_next_1ab90007e:;
			++it;
			_38314_i++;
			goto _iter_begin_1ab90007e;
		}
		_iter_end_1ab90007e:;
	};
	return static_cast<jule::Any>(_1c43c9e2b_build_while_iter_kind(&(*_self_), _38146_tokens));
}



inline jule::Ptr<_1dcd7d674_Iter> _1c43cbe72_build_common_iter(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _40840_tokens) {
	jule::Ptr<_1dcd7d674_Iter> _40917_it = jule::new_ptr<_1dcd7d674_Iter>(_1dcd7d674_Iter{._field_token=_40840_tokens[0LL], });;
	_40840_tokens=_40840_tokens.slice(1LL);
	if ((_40840_tokens.len() == 0LL)) {
		_1c43c79c8_stop(&(*_self_));
		_1c43c8534_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _41917_expr_tokens = _1c43d37e7_get_block_expr(_40840_tokens);;
	if ((_41917_expr_tokens.len() > 0LL)) {
		_40917_it.get()._field_kind=_1c43cbb64_build_common_iter_kind(&(*_self_), _41917_expr_tokens,_40917_it.get()._field_token);
	};
	jule::I64 _42317_i = _41917_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _42417_scope_tokens = _1c43e1283_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40840_tokens);;
	if ((_42417_scope_tokens == nullptr)) {
		_1c43c79c8_stop(&(*_self_));
		_1c43c8534_push_err(&(*_self_), _40917_it.get()._field_token,jule::Str("body is not exist", 17));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40840_tokens.len())) {
		_1c43c8534_push_err(&(*_self_), _40840_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_scope=_1c43c91e4_build_scope(&(*_self_), _42417_scope_tokens,_40840_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1dcd7d674_Iter> _1c43cc280_build_iter_st(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1c43c6a1b_stmt>& _43837_st) {
	if (_43837_st.get()._field_terminated) {
		return _1c43c9b1d_build_while_next_iter(&(*_self_), _43837_st);
	};
	return _1c43cbe72_build_common_iter(&(*_self_), _43837_st.get()._field_tokens);
}



inline jule::Ptr<_1dcd7eb92_BreakSt> _1c43cc58d_build_break_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _44538_tokens) {
	jule::Ptr<_1dcd7eb92_BreakSt> _44617_brk = jule::new_ptr<_1dcd7eb92_BreakSt>(_1dcd7eb92_BreakSt{._field_token=_44538_tokens[0LL], });;
	if ((_44538_tokens.len() > 1LL)) {
		if ((_44538_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1c43c8534_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c43c8853_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_label=_44538_tokens[1LL];
			if ((_44538_tokens.len() > 2LL)) {
				_1c43c8534_push_err(&(*_self_), _44538_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1dcd80049_ContSt> _1c43cc89b_build_cont_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _46337_tokens) {
	jule::Ptr<_1dcd80049_ContSt> _46417_cont = jule::new_ptr<_1dcd80049_ContSt>(_1dcd80049_ContSt{._field_token=_46337_tokens[0LL], });;
	if ((_46337_tokens.len() > 1LL)) {
		if ((_46337_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1c43c8534_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c43c8853_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_label=_46337_tokens[1LL];
			if ((_46337_tokens.len() > 2LL)) {
				_1c43c8534_push_err(&(*_self_), _46337_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1dcd804bc_If> _1c43ccba9_build_if(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _48132_tokens) {
	jule::Ptr<_1dcd804bc_If> _48217_model = jule::new_ptr<_1dcd804bc_If>(_1dcd804bc_If{._field_token=_48132_tokens[0LL], });;
	_48132_tokens=_48132_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _48617_expr_tokens = _1c43d37e7_get_block_expr(_48132_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_expr_tokens.len() == 0LL)) {
		_1c43c8534_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _49317_scope_tokens = _1c43e1283_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48132_tokens);;
	if ((_49317_scope_tokens == nullptr)) {
		_1c43c79c8_stop(&(*_self_));
		_1c43c8534_push_err(&(*_self_), _48217_model.get()._field_token,jule::Str("body is not exist", 17));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1db7061a7_Token> _50017_end = _48132_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48132_tokens.len())) {
		if ((_48132_tokens[_48717_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_48132_tokens=_48132_tokens.slice(_48717_i);
		} else {
			_1c43c8534_push_err(&(*_self_), _48132_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48132_tokens=nullptr;
		};
	};
	_48217_model.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _48617_expr_tokens);
	_48217_model.get()._field_scope=_1c43c91e4_build_scope(&(*_self_), _49317_scope_tokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1dcd80874_Else> _1c43cceb7_build_else(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _51434_tokens) {
	jule::Ptr<_1dcd80874_Else> _51517_els = jule::new_ptr<_1dcd80874_Else>(_1dcd80874_Else{._field_token=_51434_tokens[0LL], });;
	_51434_tokens=_51434_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _52017_scope_tokens = _1c43e1283_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51434_tokens);;
	if ((_52017_scope_tokens == nullptr)) {
		if ((_51917_i < _51434_tokens.len())) {
			_1c43c8534_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1c43c79c8_stop(&(*_self_));
			_1c43c8534_push_err(&(*_self_), _51517_els.get()._field_token,jule::Str("body is not exist", 17));
			_1c43c8853_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51434_tokens.len())) {
		_1c43c8534_push_err(&(*_self_), _51434_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_scope=_1c43c91e4_build_scope(&(*_self_), _52017_scope_tokens,_51434_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1dcd80ce7_Conditional> _1c43cd2c5_build_if_else_chain(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _53842_tokens) {
	jule::Ptr<_1dcd80ce7_Conditional> _53917_chain = jule::new_ptr<_1dcd80ce7_Conditional>(_1dcd80ce7_Conditional{._field_head=_1c43ccba9_build_if(&(*_self_), _53842_tokens), });;
	if ((_53917_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53842_tokens.len() != 0LL)) {
		{
			if ((_53842_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1ab91c695;
			};
			if (((_53842_tokens.len() > 1LL) && (_53842_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53842_tokens=_53842_tokens.slice(1LL);
				jule::Ptr<_1dcd804bc_If> _55125_elif = _1c43ccba9_build_if(&(*_self_), _53842_tokens);;
				_53917_chain.get()._field_tail = jule::alloc_for_append(_53917_chain.get()._field_tail,1);_53917_chain.get()._field_tail.__push(_55125_elif);;
				goto _iter_next_1ab91c695;
			};
			_53917_chain.get()._field_default=_1c43cceb7_build_else(&(*_self_), _53842_tokens);
			goto _iter_end_1ab91c695;
		}
	_iter_next_1ab91c695:;
	}
	_iter_end_1ab91c695:;;
	return _53917_chain;
}



inline jule::Ptr<_1dcd70e80_CoExpr> _1c43cd5d3_build_co_call_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _56139_tokens) {
	jule::Ptr<_1dcd70e80_CoExpr> _56217_c = jule::new_ptr<_1dcd70e80_CoExpr>(_1dcd70e80_CoExpr{._field_token=_56139_tokens[0LL], });;
	_56139_tokens=_56139_tokens.slice(1LL);
	_56217_c.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _56139_tokens);
	return _56217_c;
}



inline jule::Ptr<_1dcd77bac_GotoSt> _1c43cd8e1_build_goto_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _57037_tokens) {
	jule::Ptr<_1dcd77bac_GotoSt> _57117_gt = jule::new_ptr<_1dcd77bac_GotoSt>(_1dcd77bac_GotoSt{._field_token=_57037_tokens[0LL], });;
	if ((_57037_tokens.len() == 1LL)) {
		_1c43c8534_push_err(&(*_self_), _57117_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57037_tokens.len() > 2LL)) {
		_1c43c8534_push_err(&(*_self_), _57037_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1db7061a7_Token> _58017_ident_token = _57037_tokens[1LL];;
	if ((_58017_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43c8534_push_err(&(*_self_), _58017_ident_token,jule::Str("invalid syntax", 14));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_label=_58017_ident_token;
	return _57117_gt;
}



inline jule::Ptr<_1dcd77e98_FallSt> _1c43cdbee_build_fall_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _59037_tokens) {
	jule::Ptr<_1dcd77e98_FallSt> _59117_fll = jule::new_ptr<_1dcd77e98_FallSt>(_1dcd77e98_FallSt{._field_token=_59037_tokens[0LL]});;
	if ((_59037_tokens.len() > 1LL)) {
		_1c43c8534_push_err(&(*_self_), _59037_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1dcd814bd_TypeAliasDecl> _1c43ce00c_build_type_alias_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _60043_tokens) {
	jule::Ptr<_1dcd814bd_TypeAliasDecl> _60117_tad = _1c43e5760_build_type_alias_decl((*_self_)._field_p, _60043_tokens);;
	_60117_tad.get()._field_scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1c43ce46e_push_case_expr(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _60637_tokens, jule::Ptr<_1db7061a7_Token> _60659_token, jule::Bool _6079_type_match, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>& _60732_exprs) {
	if ((_60637_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_type_match) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1dcd69d69_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1c43e5452_build_type((*_self_)._field_p, _60637_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(jule::new_ptr<_1dcd6e38a_Expr>(_1dcd6e38a_Expr{._field_token=_60637_tokens[0LL], ._field_end=_60637_tokens[(_60637_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60637_tokens.len())) {
				_1c43c8534_push_err(&(*_self_), _60637_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60732_exprs = jule::alloc_for_append(_60732_exprs,1);_60732_exprs.__push(_1c43e4165_build_expr((*_self_)._field_p, _60637_tokens));;
}



inline jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _1c43ce826_build_case_exprs(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _63040_tokens, jule::Bool _63058_type_match) {
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_brace_n = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63040_tokens;
		auto it = expr.begin();
		_iter_begin_1ab92cc38:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ab92dc8e:;
							{
								(_63317_brace_n)++;
							}
						}
						else {
							_case_begin_1ab92e069:;
							{
								(_63317_brace_n)--;
							}
						}
						_match_end_1ab92dd5a:;
					};
					goto _iter_next_1ab92cc38;
				} else if ((_63317_brace_n != 0LL)) {
					goto _iter_next_1ab92cc38;
				};
				{
					
					if (((_63521_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1ab92ec5c:;
						{
							jule::Slice<jule::Ptr<_1db7061a7_Token>> _65121_expr_tokens = _63040_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_expr_tokens.len() == 0LL)) {
								_1c43c8534_push_err(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1c43ce46e_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1ab92ecc3:;
						{
							_1c43ce46e_push_case_expr(&(*_self_), _63040_tokens.slice(_63417_j,_63514_i),_63521_tok,_63058_type_match,_63117_exprs);
							_63040_tokens=_63040_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1ab92e7ea:;
				};
			}
			_iter_next_1ab92cc38:;
			++it;
			_63514_i++;
			goto _iter_begin_1ab92cc38;
		}
		_iter_end_1ab92cc38:;
	};
	_1c43c8534_push_err(&(*_self_), _63040_tokens[0LL],jule::Str("invalid syntax", 14));
	_63040_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43ceb34_build_case_scope(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _66940_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1c43c671e_skip_st(_67221_i,_66940_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1ab933810;
			};
			jule::Ptr<_1db7061a7_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1ab933810;
			};
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _68221_scope_tokens = _66940_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1dcd7a187_ScopeTree> _68321_scope = _1c43c91e4_build_scope(&(*_self_), _68221_scope_tokens,_66940_tokens[_67017_n]);;
			_66940_tokens=_66940_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1ab933810:;
	}
	_iter_end_1ab933810:;;
	jule::Ptr<_1db7061a7_Token> _68717_end = jule::Ptr<_1db7061a7_Token>();;
	if ((_66940_tokens.len() > 0LL)) {
		_68717_end=_66940_tokens[(_66940_tokens.len() - 1LL)];
	};
	jule::Ptr<_1dcd7a187_ScopeTree> _69117_scope = _1c43c91e4_build_scope(&(*_self_), _66940_tokens,_68717_end);;
	_66940_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1dcd81941_Case>,jule::Bool> _1c43ceedb_build_case(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _69634_tokens, jule::Bool _69652_type_match) {
	jule::Ptr<_1dcd81941_Case> _69717_c = jule::new_ptr<_1dcd81941_Case>(_1dcd81941_Case{._field_token=_69634_tokens[0LL], });;
	_69634_tokens=_69634_tokens.slice(1LL);
	_69717_c.get()._field_exprs=_1c43ce826_build_case_exprs(&(*_self_), _69634_tokens,_69652_type_match);
	_69717_c.get()._field_scope=_1c43ceb34_build_case_scope(&(*_self_), _69634_tokens);
	jule::Bool _70313_is_default = (_69717_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1dcd81941_Case>>,jule::Ptr<_1dcd80874_Else>> _1c43d0393_build_cases(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _70734_tokens, jule::Bool _70752_type_match) {
	jule::Slice<jule::Ptr<_1dcd81941_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1dcd80874_Else> _70917_def = nullptr;;
	jule::Bool _71017_def_not_last = false;;
	while ((_70734_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1db7061a7_Token> _71221_tok = _70734_tokens[0LL];;
			if (((_71221_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1c43c8534_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1ab93b582;
			};
			jule::Ptr<_1dcd81941_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1c43ceedb_build_case(&(*_self_), _70734_tokens,_70752_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1dcd80874_Else>(_1dcd80874_Else{._field_token=_71722_c.get()._field_token, ._field_scope=_71722_c.get()._field_scope});
				} else {
					_1c43c8534_push_err(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_def_not_last=(_71017_def_not_last || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1ab93b582:;
	}
	_iter_end_1ab93b582:;;
	if (_71017_def_not_last) {
		_1c43c8534_push_err(&(*_self_), _70917_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1dcd82117_MatchCase> _1c43d06a1_build_match_case(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _74139_tokens) {
	jule::Ptr<_1dcd82117_MatchCase> _74217_m = jule::new_ptr<_1dcd82117_MatchCase>(_1dcd82117_MatchCase{._field_token=_74139_tokens[0LL], });;
	_74139_tokens=_74139_tokens.slice(1LL);
	if (((_74139_tokens.len() > 0LL) && (_74139_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_type_match=true;
		_74139_tokens=_74139_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _75217_expr_tokens = _1c43d37e7_get_block_expr(_74139_tokens);;
	if ((_75217_expr_tokens.len() > 0LL)) {
		_74217_m.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _75217_expr_tokens);
	} else if (_74217_m.get()._field_type_match) {
		_1c43c8534_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _76017_block_toks = _1c43e1283_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74139_tokens);;
	if ((_76017_block_toks == nullptr)) {
		_1c43c79c8_stop(&(*_self_));
		_1c43c8534_push_err(&(*_self_), _74217_m.get()._field_token,jule::Str("body is not exist", 17));
		_1c43c8853_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74139_tokens.len())) {
		_1c43c8534_push_err(&(*_self_), _74139_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_end=_74139_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_cases,_74217_m.get()._field_default) = _1c43d0393_build_cases(&(*_self_), _76017_block_toks,_74217_m.get()._field_type_match);
	return _74217_m;
}



inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43d09ae_build_scope_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _77437_tokens) {
	jule::Bool _77517_is_unsafe = false;;
	jule::Bool _77617_is_deferred = false;;
	jule::Ptr<_1db7061a7_Token> _77717_token = _77437_tokens[0LL];;
	if ((_77717_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77517_is_unsafe=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1c43c8534_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77437_tokens[0LL];
		if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77617_is_deferred=true;
			_77437_tokens=_77437_tokens.slice(1LL);
			if ((_77437_tokens.len() == 0LL)) {
				_1c43c8534_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77617_is_deferred=true;
		_77437_tokens=_77437_tokens.slice(1LL);
		if ((_77437_tokens.len() == 0LL)) {
			_1c43c8534_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _80417_scope_tokens = _1c43e1283_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77437_tokens);;
	if ((_80417_scope_tokens == nullptr)) {
		_1c43c8534_push_err(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77437_tokens.len())) {
		_1c43c8534_push_err(&(*_self_), _77437_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1dcd7a187_ScopeTree> _81117_scope = _1c43c91e4_build_scope(&(*_self_), _80417_scope_tokens,_77437_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_unsafety=_77517_is_unsafe;
	_81117_scope.get()._field_deferred=_77617_is_deferred;
	return _81117_scope;
}



inline jule::Ptr<_1dcd77805_LabelSt> _1c43d0cbc_build_label_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _81738_tokens) {
	jule::Ptr<_1dcd77805_LabelSt> _81817_lbl = jule::new_ptr<_1dcd77805_LabelSt>(_1dcd77805_LabelSt{._field_token=_81738_tokens[0LL], ._field_ident=_81738_tokens[0LL].get()._field_kind});;
	if ((_81738_tokens.len() > 2LL)) {
		_81738_tokens=_81738_tokens.slice(2LL);
		_1c43c8ac8_insert_as_next(&(*_self_), _81738_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1c43d10ca_build_id_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _83235_tokens) {
	jule::Bool _83265_ok = jule::Bool();
	if ((_83235_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83265_ok);
	};
	jule::Ptr<_1db7061a7_Token> _83717_token = _83235_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ab952235:;
			{
				_83265_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1c43d0cbc_build_label_st(&(*_self_), _83235_tokens)),_83265_ok);
			}
		}
		_match_end_1ab952de5:;
	};
	return std::make_tuple(jule::Any(),_83265_ok);
}



inline jule::Ptr<_1c43dea56_AssignInfo> _1c43d13d8_build_assign_info(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _84641_tokens) {
	jule::Ptr<_1c43dea56_AssignInfo> _84717_info = jule::new_ptr<_1c43dea56_AssignInfo>(_1c43dea56_AssignInfo{._field_ok=true});;
	jule::I64 _85017_brace_n = 0LL;;
	{
		auto &expr = _84641_tokens;
		auto it = expr.begin();
		_iter_begin_1ab954c3d:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab955c3e:;
							{
								(_85017_brace_n)++;
							}
						}
						else {
							_case_begin_1ab956019:;
							{
								(_85017_brace_n)--;
							}
						}
						_match_end_1ab955d0a:;
					};
				};
				{
					
					if ((_85017_brace_n > 0LL)) {
						_case_begin_1ab956701:;
						{
							goto _iter_next_1ab954c3d;
						}
					}
					else if ((_85121_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1ab956767:;
						{
							goto _iter_next_1ab954c3d;
						}
					}
					else if ((!(_1db70ac8e_is_assign_op(_85121_token.get()._field_kind)))) {
						_case_begin_1ab9567de:;
						{
							goto _iter_next_1ab954c3d;
						}
					}
					_match_end_1ab9564d1:;
				};
				_84717_info.get()._field_l=_84641_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84641_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1db70a9e7_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1ab954c3d;
				};
				_84717_info.get()._field_r=_84641_tokens.slice((_85114_i + 1LL));
				if (_1db70a9e7_is_postfix_op(_84717_info.get()._field_setter.get()._field_kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1c43c8534_push_err(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1ab954c3d;
			}
			_iter_next_1ab954c3d:;
			++it;
			_85114_i++;
			goto _iter_begin_1ab954c3d;
		}
		_iter_end_1ab954c3d:;
	};
	return _84717_info;
}



inline jule::Ptr<_1dcd785a3_AssignLeft> _1c43d16e6_build_assign_l(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _89438_tokens) {
	jule::Ptr<_1dcd785a3_AssignLeft> _89517_l = jule::new_ptr<_1dcd785a3_AssignLeft>(_1dcd785a3_AssignLeft{._field_token=_89438_tokens[0LL], });;
	if ((_89438_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_ident=_89517_l.get()._field_token.get()._field_kind;
	};
	_89517_l.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _89438_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1dcd785a3_AssignLeft>> _1c43d1a04_build_assign_ls(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>& _90739_parts) {
	jule::Slice<jule::Ptr<_1dcd785a3_AssignLeft>> _90817_lefts = nullptr;;
	{
		auto &expr = _90739_parts;
		auto it = expr.begin();
		_iter_begin_1ab95d42d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _90921_part = *it;
			{
				jule::Ptr<_1dcd785a3_AssignLeft> _91021_l = _1c43d16e6_build_assign_l(&(*_self_), _90921_part);;
				_90817_lefts = jule::alloc_for_append(_90817_lefts,1);_90817_lefts.__push(_91021_l);;
			}
			_iter_next_1ab95d42d:;
			++it;
			goto _iter_begin_1ab95d42d;
		}
		_iter_end_1ab95d42d:;
	};
	return _90817_lefts;
}



inline std::tuple<jule::Ptr<_1dcd78ae2_AssignSt>,jule::Bool> _1c43d1d12_build_plain_assign(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _91742_tokens) {
	jule::Ptr<_1c43dea56_AssignInfo> _91817_info = _1c43d13d8_build_assign_info(&(*_self_), _91742_tokens);;
	if ((!(_91817_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1dcd78ae2_AssignSt> _92317_assign = jule::new_ptr<_1dcd78ae2_AssignSt>(_1dcd78ae2_AssignSt{._field_setter=_91817_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _92718_parts;;
	jule::Slice<_207b80eb7_Log> _92725_errs;;
	std::tie(_92718_parts,_92725_errs) = _1c43e1d77_parts(_91817_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92725_errs);
		return std::make_tuple(nullptr,false);
	};
	_92317_assign.get()._field_left=_1c43d1a04_build_assign_ls(&(*_self_), _92718_parts);
	if ((_91817_info.get()._field_r != nullptr)) {
		_92317_assign.get()._field_right=_1c43e4165_build_expr((*_self_)._field_p, _91817_info.get()._field_r);
	};
	return std::make_tuple(_92317_assign,true);
}



inline std::tuple<jule::Ptr<_1dcd78ae2_AssignSt>,jule::Bool> _1c43d2120_build_decl_assign(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _94140_tokens) {
	if ((_94140_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_94140_tokens=_94140_tokens.slice(1LL);
	jule::Ptr<_1db7061a7_Token> _94717_token = _94140_tokens[0LL];;
	if (((_94717_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94717_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1dcd78ae2_AssignSt> _95217_assign = jule::new_ptr<_1dcd78ae2_AssignSt>(_1dcd78ae2_AssignSt{._field_declarative=true, });;
	jule::I64 _95617_i = 0LL;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _95717_rang = _1c43e1283_range(_95617_i,jule::Str("(", 1),jule::Str(")", 1),_94140_tokens);;
	if ((_95717_rang == nullptr)) {
		_1c43c8534_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95617_i + 1LL) < _94140_tokens.len())) {
		_95217_assign.get()._field_setter=_94140_tokens[_95617_i];
		(_95617_i)++;
		jule::Slice<jule::Ptr<_1db7061a7_Token>> _96421_expr_tokens = _94140_tokens.slice(_95617_i);;
		_95217_assign.get()._field_right=_1c43e4165_build_expr((*_self_)._field_p, _96421_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _96918_parts;;
	jule::Slice<_207b80eb7_Log> _96925_errs;;
	std::tie(_96918_parts,_96925_errs) = _1c43e1d77_parts(_95717_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96925_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96925_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96918_parts;
		auto it = expr.begin();
		_iter_begin_1ab9692e6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _97521_part = *it;
			{
				jule::Bool _97621_is_mut = false;;
				jule::Bool _97721_is_ref = false;;
				_94717_token=_97521_part[0LL];
				if ((_94717_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97621_is_mut=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1c43c8534_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ab9692e6;
					};
				};
				if (((_97521_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97521_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97721_is_ref=true;
					_97521_part=_97521_part.slice(1LL);
					if ((_97521_part.len() == 0LL)) {
						_1c43c8534_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ab9692e6;
					};
				};
				if ((((_97521_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97521_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97521_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1c43c8534_push_err(&(*_self_), _94717_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1ab9692e6;
				};
				jule::Ptr<_1dcd785a3_AssignLeft> _100521_l = _1c43d16e6_build_assign_l(&(*_self_), _97521_part);;
				_100521_l.get()._field_mutable=_97621_is_mut;
				_100521_l.get()._field_reference=_97721_is_ref;
				_95217_assign.get()._field_left = jule::alloc_for_append(_95217_assign.get()._field_left,1);_95217_assign.get()._field_left.__push(_100521_l);;
			}
			_iter_next_1ab9692e6:;
			++it;
			goto _iter_begin_1ab9692e6;
		}
		_iter_end_1ab9692e6:;
	};
	return std::make_tuple(_95217_assign,true);
}



inline std::tuple<jule::Ptr<_1dcd78ae2_AssignSt>,jule::Bool> _1c43d242d_build_assign_st(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _101439_tokens) {
	jule::Ptr<_1dcd78ae2_AssignSt> _101459_st = jule::Ptr<_1dcd78ae2_AssignSt>();
	jule::Bool _101474_ok = jule::Bool();
	if ((!(_1c43dedec_check_assign_tokens(_101439_tokens)))) {
		_101459_st = nullptr;
		_101474_ok = false;
		return std::make_tuple(_101459_st,_101474_ok);
	};
	{
		auto &_match_expr{ _101439_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ab9730d0:;
			{
				std::tie(_101459_st,_101474_ok) = _1c43d2120_build_decl_assign(&(*_self_), _101439_tokens);
			}
		}
		else {
			_case_begin_1ab972bc3:;
			{
				std::tie(_101459_st,_101474_ok) = _1c43d1d12_build_plain_assign(&(*_self_), _101439_tokens);
			}
		}
		_match_end_1ab972b6d:;
	};
	return std::make_tuple(_101459_st,_101474_ok);
}



inline jule::Ptr<_1dcd6ec2b_UseExpr> _1c43d273b_build_use_expr(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _102938_tokens) {
	if ((_102938_tokens.len() == 1LL)) {
		_1c43c8534_push_err(&(*_self_), _102938_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1dcd6ec2b_UseExpr> _103517_ue = jule::new_ptr<_1dcd6ec2b_UseExpr>(_1dcd6ec2b_UseExpr{._field_token=_102938_tokens[0LL], });;
	_102938_tokens=_102938_tokens.slice(1LL);
	_103517_ue.get()._field_expr=_1c43e4165_build_expr((*_self_)._field_p, _102938_tokens);
	return _103517_ue;
}



inline jule::Any _1c43d2a49_build_st(_1c43c7346_ScopeParser* _self_, jule::Ptr<_1c43c6a1b_stmt>& _104432_st) {
	jule::Ptr<_1db7061a7_Token> _104517_token = _104432_st.get()._field_tokens[0LL];;
	if ((_104517_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104722_s;;
		jule::Bool _104725_ok;;
		std::tie(_104722_s,_104725_ok) = _1c43d10ca_build_id_st(&(*_self_), _104432_st.get()._field_tokens);
		if (_104725_ok) {
			return _104722_s;
		};
	};
	jule::Ptr<_1dcd78ae2_AssignSt> _105318_s;;
	jule::Bool _105321_ok;;
	std::tie(_105318_s,_105321_ok) = _1c43d242d_build_assign_st(&(*_self_), _104432_st.get()._field_tokens);
	if (_105321_ok) {
		return static_cast<jule::Any>(_105318_s);
	};
	{
		auto &_match_expr{ _104517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ab978217:;
			{
				return static_cast<jule::Any>(_1c43d273b_build_use_expr(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ab977ed6:;
			{
				return static_cast<jule::Any>(_1c43c9502_build_var_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ab9785d0:;
			{
				return static_cast<jule::Any>(_1c43c9810_build_ret_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1ab978646:;
			{
				return static_cast<jule::Any>(_1c43cc280_build_iter_st(&(*_self_), _104432_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ab9786ac:;
			{
				return static_cast<jule::Any>(_1c43cc58d_build_break_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1ab978723:;
			{
				return static_cast<jule::Any>(_1c43cc89b_build_cont_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ab978789:;
			{
				return static_cast<jule::Any>(_1c43cd2c5_build_if_else_chain(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ab978800:;
			{
				return static_cast<jule::Any>(_1c43cd5d3_build_co_call_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ab978866:;
			{
				return static_cast<jule::Any>(_1c43cd8e1_build_goto_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ab9788cc:;
			{
				return static_cast<jule::Any>(_1c43cdbee_build_fall_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ab978943:;
			{
				return static_cast<jule::Any>(_1c43ce00c_build_type_alias_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ab9789a9:;
			{
				return static_cast<jule::Any>(_1c43d06a1_build_match_case(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ab978a20:;
			{
				return static_cast<jule::Any>(_1c43d09ae_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab978a86:;
			{
				if ((_104517_token.get()._field_kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1c43d09ae_build_scope_st(&(*_self_), _104432_st.get()._field_tokens));
				};
			}
		}
		_match_end_1ab978404:;
	};
	jule::Ptr<_1dcd6e38a_Expr> _109417_expr = _1c43e4165_build_expr((*_self_)._field_p, _104432_st.get()._field_tokens);;
	if ((_109417_expr != nullptr)) {
		return static_cast<jule::Any>(_109417_expr);
	};
	_1c43c8534_push_err(&(*_self_), _104517_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1c43d2d68_build(_1c43c7346_ScopeParser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _110229_tokens, jule::Ptr<_1dcd7a187_ScopeTree>& _110252_s) {
	if ((_110252_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1c43c6db2_split_stmts(_110229_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110252_s;
	while (((!(_1c43c8215_is_last_st(&(*_self_)))) && (!(_1c43c7ea1_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1c43c6a1b_stmt> _111121_st = _1c43c8d3c_next(&(*_self_));;
			jule::Any _111221_data = _1c43d2a49_build_st(&(*_self_), _111121_st);;
			if ((_111221_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1dcd79a7c_Stmt{._field_token=_111121_st.get()._field_tokens[0LL], ._field_data=_111221_data});;
			};
			if (_1c43c7c3c_stopped(&(*_self_))) {
				goto _iter_end_1ab98691d;
			};
		}
	_iter_next_1ab98691d:;
	}
	_iter_end_1ab98691d:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c43c7346_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1c43d4ee1_push_err(_1c43d46d8_ExprBuilder* _self_, jule::Ptr<_1db7061a7_Token> _19827_token, jule::Str _19842_fmt, jule::Slice<jule::Any> _19855_args) {
	_1c43e3a38_push_err((*_self_)._field_p.ptr(), _19827_token,_19842_fmt,jule::Any(_19855_args));
}



inline void _1c43d5310_push_suggestion(_1c43d46d8_ExprBuilder* _self_, jule::Str _20334_fmt, jule::Slice<jule::Any> _20347_args) {
	_1c43e3d57_push_suggestion((*_self_)._field_p.ptr(), _20334_fmt,jule::Any(_20347_args));
}



inline jule::Ptr<_1dcd70017_TupleExpr> _1c43d561d_build_tuple(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>& _20735_parts) {
	jule::Ptr<_1dcd70017_TupleExpr> _20817_tuple = jule::new_ptr<_1dcd70017_TupleExpr>(_1dcd70017_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>::alloc(0LL,_20735_parts.len())});;
	{
		auto &expr = _20735_parts;
		auto it = expr.begin();
		_iter_begin_1ab9a250a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _21121_part = *it;
			{
				_20817_tuple.get()._field_expr = jule::alloc_for_append(_20817_tuple.get()._field_expr,1);_20817_tuple.get()._field_expr.__push(_1c43de171_build_from_tokens(&(*_self_), _21121_part));;
			}
			_iter_next_1ab9a250a:;
			++it;
			goto _iter_begin_1ab9a250a;
		}
		_iter_end_1ab9a250a:;
	};
	return _20817_tuple;
}



inline jule::Ptr<_1dcd703be_LitExpr> _1c43d592b_build_lit(_1c43d46d8_ExprBuilder* _self_, jule::Ptr<_1db7061a7_Token> _21728_token) {
	return jule::new_ptr<_1dcd703be_LitExpr>(_1dcd703be_LitExpr{._field_token=_21728_token, ._field_value=_21728_token.get()._field_kind});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c43d5c39_build_primitive_type(_1c43d46d8_ExprBuilder* _self_, jule::Ptr<_1db7061a7_Token>& _22440_token) {
	return _1c4403b58_build_prim_type(_22440_token);
}



inline jule::Any _1c43d6047_build_single(_1c43d46d8_ExprBuilder* _self_, jule::Ptr<_1db7061a7_Token> _22835_token) {
	{
		auto &_match_expr{ _22835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ab9a4265:;
			{
				return static_cast<jule::Any>(_1c43d592b_build_lit(&(*_self_), _22835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab9a42cb:;
			{
				if ((_22835_token.get()._field_kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1dcd71eb4_VariadicExpr>(_1dcd71eb4_VariadicExpr{._field_token=_22835_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab9a4342:;
			{
				return static_cast<jule::Any>(_1c43d4210_build_ident_expr(_22835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ab9a43a8:;
			{
				return static_cast<jule::Any>(_1c43d5c39_build_primitive_type(&(*_self_), _22835_token));
			}
		}
		_match_end_1ab9a31dc:;
	};
	_1c43d4ee1_push_err(&(*_self_), _22835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1dcd71403_IdentExpr> _1c43d6355_build_cpp_linked_ident(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _24946_tokens) {
	if ((_24946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_24946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_1c43d4ee1_push_err(&(*_self_), _24946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1db7061a7_Token> _25717_token = _24946_tokens[2LL];;
	if ((_25717_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43d4ee1_push_err(&(*_self_), _24946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd71403_IdentExpr> _26317_expr = _1c43d4210_build_ident_expr(_25717_token);;
	_26317_expr.get()._field_cpp_linked=true;
	return _26317_expr;
}



inline jule::Ptr<_1dcd71b0c_UnaryExpr> _1c43d6663_build_unary(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _26834_tokens) {
	jule::Ptr<_1db7061a7_Token> _26917_op = _26834_tokens[0LL];;
	if ((_26834_tokens.len() == 1LL)) {
		_1c43d4ee1_push_err(&(*_self_), _26917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1db7068b1_is_unary_op(_26917_op.get()._field_kind)))) {
		_1c43d4ee1_push_err(&(*_self_), _26917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_26917_op.get()._field_kind)}));
		return nullptr;
	};
	_26834_tokens=_26834_tokens.slice(1LL);
	return jule::new_ptr<_1dcd71b0c_UnaryExpr>(_1dcd71b0c_UnaryExpr{._field_op=_26917_op, ._field_expr=_1c43de171_build_from_tokens(&(*_self_), _26834_tokens)});
}



inline jule::Ptr<_1dcd72b96_SubIdentExpr> _1c43d6971_build_obj_sub_ident(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _28942_tokens) {
	jule::I64 _29017_i = (_28942_tokens.len() - 1LL);;
	jule::Ptr<_1db7061a7_Token> _29117_ident_token = _28942_tokens[_29017_i];;
	(_29017_i)--;
	_28942_tokens=_28942_tokens.slice(0LL,_29017_i);
	if ((_28942_tokens.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _29117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1dcd72b96_SubIdentExpr>(_1dcd72b96_SubIdentExpr{._field_expr=_1c43de171_build_from_tokens(&(*_self_), _28942_tokens), ._field_ident=_29117_ident_token});
}



inline jule::Ptr<_1dcd72723_NsSelectionExpr> _1c43d6c7e_build_ns_sub_ident(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _30442_tokens) {
	jule::Ptr<_1dcd72723_NsSelectionExpr> _30517_ns = jule::new_ptr<_1dcd72723_NsSelectionExpr>(_1dcd72723_NsSelectionExpr{});;
	{
		auto &expr = _30442_tokens;
		auto it = expr.begin();
		_iter_begin_1ab9b02c6:;
		if (it != expr.end()) {
			jule::I64 _30614_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _30621_token = *it;
			{
				if (((_30614_i & 1LL) == 0LL)) {
					if ((_30621_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_1c43d4ee1_push_err(&(*_self_), _30621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c43d5310_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_30517_ns.get()._field_ns = jule::alloc_for_append(_30517_ns.get()._field_ns,1);_30517_ns.get()._field_ns.__push(_30621_token);;
				} else if ((_30621_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c43d4ee1_push_err(&(*_self_), _30621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c43d5310_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab9b02c6:;
			++it;
			_30614_i++;
			goto _iter_begin_1ab9b02c6;
		}
		_iter_end_1ab9b02c6:;
	};
	_30517_ns.get()._field_ident=_30517_ns.get()._field_ns[(_30517_ns.get()._field_ns.len() - 1LL)];
	_30517_ns.get()._field_ns=_30517_ns.get()._field_ns.slice(0LL,(_30517_ns.get()._field_ns.len() - 1LL));
	return _30517_ns;
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c43d708c_build_type(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _32334_tokens) {
	jule::I64 _32417_i = 0LL;;
	jule::Ptr<_1dcd69d69_TypeDecl> _32518_t;;
	jule::Bool _32521_ok;;
	std::tie(_32518_t,_32521_ok) = _1c43e5452_build_type((*_self_)._field_p, _32334_tokens,(&(_32417_i)),false);
	if ((!(_32521_ok))) {
		_1c43d4ee1_push_err(&(*_self_), _32334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_32417_i < _32334_tokens.len())) {
		_1c43d4ee1_push_err(&(*_self_), _32334_tokens[_32417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32518_t;
}



inline jule::Any _1c43d739a_build_sub_ident(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _33739_tokens) {
	jule::I64 _33813_i = (_33739_tokens.len() - 2LL);;
	jule::Ptr<_1db7061a7_Token> _33913_token = _33739_tokens[_33813_i];;
	{
		auto &_match_expr{ _33913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ab9b7e38:;
			{
				return static_cast<jule::Any>(_1c43d6971_build_obj_sub_ident(&(*_self_), _33739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ab9b8466:;
			{
				return static_cast<jule::Any>(_1c43d6c7e_build_ns_sub_ident(&(*_self_), _33739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab9b84cc:;
			{
				if ((_33913_token.get()._field_kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1c43d708c_build_type(&(*_self_), _33739_tokens));
				};
			}
		}
		_match_end_1ab9b82bd:;
	};
	_1c43d4ee1_push_err(&(*_self_), _33913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1dcd71eb4_VariadicExpr> _1c43d76a8_build_variadic(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _35537_tokens) {
	jule::Ptr<_1db7061a7_Token> _35617_token = _35537_tokens[(_35537_tokens.len() - 1LL)];;
	_35537_tokens=_35537_tokens.slice(0LL,(_35537_tokens.len() - 1LL));
	return jule::new_ptr<_1dcd71eb4_VariadicExpr>(_1dcd71eb4_VariadicExpr{._field_token=_35617_token, ._field_expr=_1c43de171_build_from_tokens(&(*_self_), _35537_tokens)});
}



inline jule::Any _1c43d79b6_build_op_right(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _36438_tokens) {
	jule::Ptr<_1db7061a7_Token> _36517_token = _36438_tokens[(_36438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _36517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ab9bc657:;
			{
				_36438_tokens=_36438_tokens.slice(0LL,(_36438_tokens.len() - 1LL));
				jule::Any _36921_d = _1c43dda55_build(&(*_self_), _36438_tokens);;
				if ((_36921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _36921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1dcd73658_FnCallExpr>>()) {
						_case_begin_1ab9bdaa9:;
						{
							_36921_d.operator jule::Ptr<_1dcd73658_FnCallExpr>().get()._field_exception=jule::new_ptr<_1dcd7a187_ScopeTree>(_1dcd7a187_ScopeTree{._field_deferred=true, });
							return _36921_d;
						}
					}
					_match_end_1ab9bda10:;
				};
			}
		}
		_match_end_1ab9bc5ad:;
	};
	_1c43d4ee1_push_err(&(*_self_), _36517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1dcd6e676_RangeExpr> _1c43d7ce6_build_between_parentheses(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _38548_tokens) {
	if ((_38548_tokens.len() == 2LL)) {
		_1c43d4ee1_push_err(&(*_self_), _38548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_38548_tokens=_38548_tokens.slice(1LL,(_38548_tokens.len() - 1LL));
	return jule::new_ptr<_1dcd6e676_RangeExpr>(_1dcd6e676_RangeExpr{._field_expr=_1c43de171_build_from_tokens(&(*_self_), _38548_tokens)});
}



inline jule::Ptr<_1dcd7236b_CastExpr> _1c43d8115_try_build_cast(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _39738_tokens) {
	jule::I64 _39817_range_n = 0LL;;
	{
		auto &expr = _39738_tokens;
		auto it = expr.begin();
		_iter_begin_1ab9c221c:;
		if (it != expr.end()) {
			jule::I64 _39913_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _39916_token = *it;
			{
				if ((_39916_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _39916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab9c3130:;
							{
								(_39817_range_n)++;
								goto _iter_next_1ab9c221c;
							}
						}
						else {
							_case_begin_1ab9c340a:;
							{
								(_39817_range_n)--;
							}
						}
						_match_end_1ab9c31eb:;
					};
				};
				if ((_39817_range_n > 0LL)) {
					goto _iter_next_1ab9c221c;
				} else if (((_39913_i + 1LL) == _39738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _41821_type_tokens = _39738_tokens.slice(0LL,(_39913_i + 1LL));;
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _41921_expr_tokens = _39738_tokens.slice((_39913_i + 1LL));;
				if ((_41921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1db7061a7_Token> _42617_tok = _41921_expr_tokens[0LL];;
				if (((_42617_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_42617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1dcd7236b_CastExpr> _43121_cast = jule::new_ptr<_1dcd7236b_CastExpr>(_1dcd7236b_CastExpr{});;
				if ((_41921_expr_tokens.len() == 2LL)) {
					_1c43d4ee1_push_err(&(*_self_), _41921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1c43d5310_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_41821_type_tokens.len() == 2LL)) {
					_1c43d4ee1_push_err(&(*_self_), _41821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1c43d5310_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_41821_type_tokens=_41821_type_tokens.slice(1LL,(_41821_type_tokens.len() - 1LL));
					jule::I64 _44525_type_index = 0LL;;
					jule::Ptr<_1dcd69d69_TypeDecl> _44626_t;;
					jule::Bool _44629_ok;;
					std::tie(_44626_t,_44629_ok) = _1c43e5452_build_type((*_self_)._field_p, _41821_type_tokens,(&(_44525_type_index)),true);
					if ((_44629_ok && (_44525_type_index < _41821_type_tokens.len()))) {
						_1c43d4ee1_push_err(&(*_self_), _41821_type_tokens[_44525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_44629_ok))) {
						return _43121_cast;
					};
					_43121_cast.get()._field_kind=_44626_t;
					if ((_41921_expr_tokens.len() > 2LL)) {
						jule::I64 _45629_j = 0LL;;
						_1c43e1283_range(_45629_j,jule::Str("(", 1),jule::Str(")", 1),_41921_expr_tokens);
						if ((_45629_j < _41921_expr_tokens.len())) {
							return nullptr;
						};
						_41921_expr_tokens=_41921_expr_tokens.slice(0LL,_45629_j);
						_43121_cast.get()._field_expr=_1c43de171_build_from_tokens(&(*_self_), _41921_expr_tokens);
					};
				};
				return _43121_cast;
			}
			_iter_next_1ab9c221c:;
			++it;
			_39913_i++;
			goto _iter_begin_1ab9c221c;
		}
		_iter_end_1ab9c221c:;
	};
	return nullptr;
}



inline void _1c43d84cd_push_arg(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>& _47132_args, jule::Slice<jule::Ptr<_1db7061a7_Token>> _47151_tokens, jule::Ptr<_1db7061a7_Token> _47169_err_token) {
	if ((_47151_tokens.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _47169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_47132_args = jule::alloc_for_append(_47132_args,1);_47132_args.__push(_1c43de171_build_from_tokens(&(*_self_), _47151_tokens));;
}



inline jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _1c43d87db_build_args(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _48033_tokens) {
	if ((_48033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _48617_args = nullptr;;
	jule::I64 _48717_last = 0LL;;
	jule::I64 _48817_range_n = 0LL;;
	_48033_tokens=_48033_tokens.slice(1LL,(_48033_tokens.len() - 1LL));
	{
		auto &expr = _48033_tokens;
		auto it = expr.begin();
		_iter_begin_1ab9d177b:;
		if (it != expr.end()) {
			jule::I64 _49013_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _49016_token = *it;
			{
				if ((_49016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _49016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab9d256d:;
							{
								(_48817_range_n)++;
							}
						}
						else {
							_case_begin_1ab9d2848:;
							{
								(_48817_range_n)--;
							}
						}
						_match_end_1ab9d2639:;
					};
				};
				if (((_48817_range_n > 0LL) || (_49016_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ab9d177b;
				};
				_1c43d84cd_push_arg(&(*_self_), _48617_args,_48033_tokens.slice(_48717_last,_49013_i),_49016_token);
				_48717_last=static_cast<jule::I64>((_49013_i + 1LL));
			}
			_iter_next_1ab9d177b:;
			++it;
			_49013_i++;
			goto _iter_begin_1ab9d177b;
		}
		_iter_end_1ab9d177b:;
	};
	if ((_48717_last < _48033_tokens.len())) {
		if ((_48717_last == 0LL)) {
			if ((_48033_tokens.len() > 0LL)) {
				_1c43d84cd_push_arg(&(*_self_), _48617_args,_48033_tokens.slice(_48717_last),_48033_tokens[_48717_last]);
			};
		} else {
			_1c43d84cd_push_arg(&(*_self_), _48617_args,_48033_tokens.slice(_48717_last),_48033_tokens[(_48717_last - 1LL)]);
		};
	};
	return _48617_args;
}



inline jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _1c43d8ae9_build_call_generics(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _52242_tokens) {
	if ((_52242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_52242_tokens=_52242_tokens.slice(1LL,(_52242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _52818_parts;;
	jule::Slice<_207b80eb7_Log> _52825_errs;;
	std::tie(_52818_parts,_52825_errs) = _1c43e1d77_parts(_52242_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _52917_generics = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>::alloc(0LL,_52818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_52825_errs);
	{
		auto &expr = _52818_parts;
		auto it = expr.begin();
		_iter_begin_1ab9d7bb1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _53121_part = *it;
			{
				if ((_53121_part.len() == 0LL)) {
					goto _iter_next_1ab9d7bb1;
				};
				jule::I64 _53521_j = 0LL;;
				jule::Ptr<_1dcd69d69_TypeDecl> _53622_generic;;
				std::tie(_53622_generic,std::ignore) = _1c43e5452_build_type((*_self_)._field_p, _53121_part,(&(_53521_j)),true);
				if ((_53521_j < _53121_part.len())) {
					_1c43d4ee1_push_err(&(*_self_), _53121_part[_53521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_52917_generics = jule::alloc_for_append(_52917_generics,1);_52917_generics.__push(_53622_generic);;
			}
			_iter_next_1ab9d7bb1:;
			++it;
			goto _iter_begin_1ab9d7bb1;
		}
		_iter_end_1ab9d7bb1:;
	};
	return _52917_generics;
}



inline jule::Ptr<_1dcd73658_FnCallExpr> _1c43d904a_build_fn_call(_1c43d46d8_ExprBuilder* _self_, jule::Ptr<_1db7061a7_Token>& _54637_token, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _54657_expr, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _54678_args) {
	return jule::new_ptr<_1dcd73658_FnCallExpr>(_1dcd73658_FnCallExpr{._field_token=_54637_token, ._field_expr=_1c43de171_build_from_tokens(&(*_self_), _54657_expr), ._field_args=_1c43d87db_build_args(&(*_self_), _54678_args), });
}



inline jule::Any _1c43d937a_build_parentheses_range(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _55447_tokens) {
	jule::Ptr<_1db7061a7_Token> _55517_token = _55447_tokens[0LL];;
	{
		auto &_match_expr{ _55517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab9dc07d:;
			{
				{
					auto &_match_expr{ _55517_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab9dc820:;
						{
							jule::Ptr<_1dcd7236b_CastExpr> _56025_expr = _1c43d8115_try_build_cast(&(*_self_), _55447_tokens);;
							if ((_56025_expr != nullptr)) {
								return static_cast<jule::Any>(_56025_expr);
							};
						}
					}
					_match_end_1ab9dc655:;
				};
			}
		}
		_match_end_1ab9dbed4:;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _56618_expr_tokens;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _56635_args_tokens;;
	std::tie(_56618_expr_tokens,_56635_args_tokens) = _1c43e152a_range_last(_55447_tokens);
	if ((_56618_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1c43d7ce6_build_between_parentheses(&(*_self_), _56635_args_tokens));
	};
	return static_cast<jule::Any>(_1c43d904a_build_fn_call(&(*_self_), _55517_token,_56618_expr_tokens,_56635_args_tokens));
}



inline jule::Ptr<_1dcd70ac8_UnsafeExpr> _1c43d9699_build_unsafe_expr(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _57540_tokens) {
	jule::Ptr<_1db7061a7_Token> _57617_token = _57540_tokens[0LL];;
	_57540_tokens=_57540_tokens.slice(1LL);
	jule::I64 _57817_i = 0LL;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _57917_range_tokens = _1c43e1283_range(_57817_i,jule::Str("{", 1),jule::Str("}", 1),_57540_tokens);;
	if ((_57917_range_tokens.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _57540_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1dcd70ac8_UnsafeExpr>(_1dcd70ac8_UnsafeExpr{._field_token=_57617_token, ._field_expr=_1c43de171_build_from_tokens(&(*_self_), _57917_range_tokens)});
}



inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43d99a7_build_anon_fn(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _59037_tokens) {
	jule::Ptr<_1dcd7bb7d_FnDecl> _59117_f = _1c43e9555_build_fn((*_self_)._field_p, _59037_tokens,false,false);;
	if ((!(_1dcd7bed0_is_anon(_59117_f.ptr())))) {
		_1c43d4ee1_push_err(&(*_self_), _59117_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _59117_f;
}



inline jule::Any _1c43d9cb5_build_unsafe(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _59936_tokens) {
	{
		auto &_match_expr{ _59936_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ab9e3cdd:;
			{
				return static_cast<jule::Any>(_1c43d99a7_build_anon_fn(&(*_self_), _59936_tokens));
			}
		}
		else {
			_case_begin_1ab9e42d8:;
			{
				return static_cast<jule::Any>(_1c43d9699_build_unsafe_expr(&(*_self_), _59936_tokens));
			}
		}
		_match_end_1ab9e422d:;
	};
}



inline void _1c43da17d_push_range_lit_part(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _60942_part, jule::Ptr<_1db7061a7_Token> _6109_error_token, jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>& _61035_parts) {
	if ((_60942_part.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _6109_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_61035_parts = jule::alloc_for_append(_61035_parts,1);_61035_parts.__push(_60942_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43da4ad_get_brace_range_lit_expr_parts(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _62053_tokens) {
	if ((_62053_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _62617_parts = nullptr;;
	jule::I64 _62817_last = 0LL;;
	jule::I64 _62917_range_n = 0LL;;
	_62053_tokens=_62053_tokens.slice(1LL,(_62053_tokens.len() - 1LL));
	{
		auto &expr = _62053_tokens;
		auto it = expr.begin();
		_iter_begin_1ab9e895d:;
		if (it != expr.end()) {
			jule::I64 _63113_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _63116_token = *it;
			{
				if ((_63116_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63116_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab9e9750:;
							{
								(_62917_range_n)++;
							}
						}
						else {
							_case_begin_1ab9e9a2a:;
							{
								(_62917_range_n)--;
							}
						}
						_match_end_1ab9e981b:;
					};
				};
				if (((_62917_range_n > 0LL) || (_63116_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ab9e895d;
				};
				_1c43da17d_push_range_lit_part(&(*_self_), _62053_tokens.slice(_62817_last,_63113_i),_63116_token,_62617_parts);
				_62817_last=static_cast<jule::I64>((_63113_i + 1LL));
			}
			_iter_next_1ab9e895d:;
			++it;
			_63113_i++;
			goto _iter_begin_1ab9e895d;
		}
		_iter_end_1ab9e895d:;
	};
	if ((_62817_last < _62053_tokens.len())) {
		if ((_62817_last == 0LL)) {
			if ((_62053_tokens.len() > 0LL)) {
				_1c43da17d_push_range_lit_part(&(*_self_), _62053_tokens.slice(_62817_last),_62053_tokens[_62817_last],_62617_parts);
			};
		} else {
			_1c43da17d_push_range_lit_part(&(*_self_), _62053_tokens.slice(_62817_last),_62053_tokens[(_62817_last - 1LL)],_62617_parts);
		};
	};
	return _62617_parts;
}



inline jule::Ptr<_1dcd740d7_FieldExprPair> _1c43da7cc_build_field_expr_pair(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _66244_tokens) {
	if (((_66244_tokens.len() - 2LL) == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _66244_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd740d7_FieldExprPair> _66717_pair = jule::new_ptr<_1dcd740d7_FieldExprPair>(_1dcd740d7_FieldExprPair{._field_field=_66244_tokens[0LL], });;
	_66244_tokens=_66244_tokens.slice(2LL);
	_66717_pair.get()._field_expr=_1c43de171_build_from_tokens(&(*_self_), _66244_tokens);
	return _66717_pair;
}



inline jule::Ptr<_1dcd6e38a_Expr> _1c43daada_build_struct_lit_expr(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _67545_tokens) {
	jule::Ptr<_1db7061a7_Token> _67617_token = _67545_tokens[0LL];;
	if (((_67617_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_67545_tokens.len() > 1LL))) {
		_67617_token=_67545_tokens[1LL];
		if ((_67617_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1dcd6e38a_Expr>(_1dcd6e38a_Expr{._field_token=_67617_token, ._field_end=_67545_tokens[(_67545_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(_1c43da7cc_build_field_expr_pair(&(*_self_), _67545_tokens))});
		};
	};
	return _1c43de171_build_from_tokens(&(*_self_), _67545_tokens);
}



inline jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _1c43dade8_build_struct_lit_exprs(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _69046_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _69117_parts = _1c43da4ad_get_brace_range_lit_expr_parts(&(*_self_), _69046_tokens);;
	if ((_69117_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dcd6e38a_Expr>> _69617_pairs = jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>::alloc(0LL,_69117_parts.len());;
	{
		auto &expr = _69117_parts;
		auto it = expr.begin();
		_iter_begin_1aba04271:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _69721_part = *it;
			{
				_69617_pairs = jule::alloc_for_append(_69617_pairs,1);_69617_pairs.__push(_1c43daada_build_struct_lit_expr(&(*_self_), _69721_part));;
			}
			_iter_next_1aba04271:;
			++it;
			goto _iter_begin_1aba04271;
		}
		_iter_end_1aba04271:;
	};
	return _69617_pairs;
}



inline jule::Ptr<_1dcd74835_StructLit> _1c43db228_build_typed_struct_literal(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _70349_tokens) {
	jule::I64 _70417_i = 0LL;;
	jule::Ptr<_1dcd69d69_TypeDecl> _70518_t;;
	jule::Bool _70521_ok;;
	std::tie(_70518_t,_70521_ok) = _1c43e5452_build_type((*_self_)._field_p, _70349_tokens,(&(_70417_i)),true);
	if ((!(_70521_ok))) {
		return nullptr;
	} else if ((_70417_i >= _70349_tokens.len())) {
		_1c43d4ee1_push_err(&(*_self_), _70349_tokens[_70417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70349_tokens=_70349_tokens.slice(_70417_i);
	jule::Ptr<_1db7061a7_Token> _71413_token = _70349_tokens[0LL];;
	if (((_71413_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_71413_token.get()._field_kind != jule::Str("{", 1)))) {
		_1c43d4ee1_push_err(&(*_self_), _71413_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1dcd74835_StructLit>(_1dcd74835_StructLit{._field_end=_70349_tokens[(_70349_tokens.len() - 1LL)], ._field_kind=_70518_t, ._field_exprs=_1c43dade8_build_struct_lit_exprs(&(*_self_), _70349_tokens)});
}



inline jule::Ptr<_1dcd6e38a_Expr> _1c43db547_build_brace_lit_part(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _72744_tokens) {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _72818_l;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _72825_r;;
	std::tie(_72818_l,_72825_r) = _1c43d3b49_split_delim(_72744_tokens,static_cast<jule::U64>(11LLU));
	if ((_72818_l != nullptr)) {
		return jule::new_ptr<_1dcd6e38a_Expr>(_1dcd6e38a_Expr{._field_token=_72744_tokens[0LL], ._field_end=_72744_tokens[(_72744_tokens.len() - 1LL)], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd757c0_KeyValPair>(_1dcd757c0_KeyValPair{._field_key=_1c43de171_build_from_tokens(&(*_self_), _72818_l), ._field_val=_1c43de171_build_from_tokens(&(*_self_), _72825_r), ._field_colon=_72744_tokens[_72818_l.len()]}))});
	};
	return _1c43de171_build_from_tokens(&(*_self_), _72744_tokens);
}



inline jule::Ptr<_1dcd74ca8_BraceLit> _1c43db855_build_brace_lit(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _74439_tokens) {
	jule::Ptr<_1dcd74ca8_BraceLit> _74517_lit = jule::new_ptr<_1dcd74ca8_BraceLit>(_1dcd74ca8_BraceLit{._field_token=_74439_tokens[0LL], ._field_end=_74439_tokens[(_74439_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _75017_parts = _1c43da4ad_get_brace_range_lit_expr_parts(&(*_self_), _74439_tokens);;
	if ((_75017_parts == nullptr)) {
		return _74517_lit;
	};
	_74517_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>::alloc(0LL,_75017_parts.len());
	{
		auto &expr = _75017_parts;
		auto it = expr.begin();
		_iter_begin_1aba0d302:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _75621_part = *it;
			{
				_74517_lit.get()._field_exprs = jule::alloc_for_append(_74517_lit.get()._field_exprs,1);_74517_lit.get()._field_exprs.__push(_1c43db547_build_brace_lit_part(&(*_self_), _75621_part));;
			}
			_iter_next_1aba0d302:;
			++it;
			goto _iter_begin_1aba0d302;
		}
		_iter_end_1aba0d302:;
	};
	return _74517_lit;
}



inline jule::Any _1c43dbb63_build_brace_range(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _76341_tokens) {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _76418_expr_tokens;;
	jule::I64 _76431_range_n;;
	std::tie(_76418_expr_tokens,_76431_range_n) = _1c43d44a7_get_range_expr_tokens(_76341_tokens);
	{
		
		if ((_76418_expr_tokens.len() == 0LL)) {
			_case_begin_1aba0eaa6:;
			{
				return static_cast<jule::Any>(_1c43db855_build_brace_lit(&(*_self_), _76341_tokens));
			}
		}
		else if ((_76431_range_n > 0LL)) {
			_case_begin_1aba0eb2d:;
			{
				_1c43d4ee1_push_err(&(*_self_), _76341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aba0ea1d:;
	};
	jule::Ptr<_1db7061a7_Token> _77513_else_token = _76418_expr_tokens[(_76418_expr_tokens.len() - 1LL)];;
	if ((_76418_expr_tokens[(_76418_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_76418_expr_tokens=_76418_expr_tokens.slice(0LL,(_76418_expr_tokens.len() - 1LL));
		jule::Any _77821_d = _1c43dda55_build(&(*_self_), _76418_expr_tokens);;
		if ((_77821_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _77821_d };
			
			if (_match_expr.type_is<jule::Ptr<_1dcd73658_FnCallExpr>>()) {
				_case_begin_1aba1311a:;
				{
					_76341_tokens=_76341_tokens.slice((_76418_expr_tokens.len() + 1LL));
					jule::I64 _78525_i = 0LL;;
					jule::Slice<jule::Ptr<_1db7061a7_Token>> _78625_range_tokens = _1c43e1283_range(_78525_i,jule::Str("{", 1),jule::Str("}", 1),_76341_tokens);;
					jule::Ptr<_1dcd73658_FnCallExpr> _78725_model = _77821_d.operator jule::Ptr<_1dcd73658_FnCallExpr>();;
					if (_1dcd73c30_ignored(_78725_model.ptr())) {
						_1c43d4ee1_push_err(&(*_self_), _77513_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c43d5310_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_78725_model.get()._field_exception=_1c43e4aa0_build_scope((*_self_)._field_p, _78625_range_tokens,_76341_tokens[(_78525_i - 1LL)]);
					return _77821_d;
				}
			}
			else {
				_case_begin_1aba1303d:;
				{
					_1c43d4ee1_push_err(&(*_self_), _76418_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1aba12ceb:;
		};
	};
	{
		auto &_match_expr{ _76418_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aba170a8:;
			{
				return _1c43d9cb5_build_unsafe(&(*_self_), _76341_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aba1711e:;
			{
				return static_cast<jule::Any>(_1c43d99a7_build_anon_fn(&(*_self_), _76341_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aba17185:;
			{
				return static_cast<jule::Any>(_1c43db228_build_typed_struct_literal(&(*_self_), _76341_tokens));
			}
		}
		else {
			_case_begin_1aba13181:;
			{
				_1c43d4ee1_push_err(&(*_self_), _76418_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aba11ab9:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43dbe71_get_enumerable_parts(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _81543_tokens) {
	_81543_tokens=_81543_tokens.slice(1LL,(_81543_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _81718_parts;;
	jule::Slice<_207b80eb7_Log> _81725_errors;;
	std::tie(_81718_parts,_81725_errors) = _1c43e1d77_parts(_81543_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_81725_errors);
	return _81718_parts;
}



inline jule::Ptr<_1dcd75c43_SliceExpr> _1c43dc27e_build_slice(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _82234_tokens) {
	jule::Ptr<_1dcd75c43_SliceExpr> _82317_slc = jule::new_ptr<_1dcd75c43_SliceExpr>(_1dcd75c43_SliceExpr{._field_token=_82234_tokens[0LL], ._field_end=_82234_tokens[(_82234_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _82817_parts = _1c43dbe71_get_enumerable_parts(&(*_self_), _82234_tokens);;
	if ((_82817_parts.len() == 0LL)) {
		return _82317_slc;
	};
	_82317_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1dcd6e38a_Expr>>::alloc(0LL,_82817_parts.len());
	{
		auto &expr = _82817_parts;
		auto it = expr.begin();
		_iter_begin_1aba1c872:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _83421_p = *it;
			{
				if ((_83421_p.len() == 0LL)) {
					goto _iter_next_1aba1c872;
				};
				_82317_slc.get()._field_exprs = jule::alloc_for_append(_82317_slc.get()._field_exprs,1);_82317_slc.get()._field_exprs.__push(_1c43de171_build_from_tokens(&(*_self_), _83421_p));;
			}
			_iter_next_1aba1c872:;
			++it;
			goto _iter_begin_1aba1c872;
		}
		_iter_end_1aba1c872:;
	};
	return _82317_slc;
}



inline jule::Ptr<_1dcd765d4_IndexingExpr> _1c43dc6d0_build_indexing(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _84437_expr_tokens, jule::Slice<jule::Ptr<_1db7061a7_Token>> _84513_tokens, jule::Ptr<_1db7061a7_Token> _84535_error_token) {
	jule::Ptr<_1db7061a7_Token> _84617_end = _84513_tokens[(_84513_tokens.len() - 1LL)];;
	_84513_tokens=_84513_tokens.slice(1LL,(_84513_tokens.len() - 1LL));
	if ((_84513_tokens.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _84535_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd6e38a_Expr> _85217_expr = _1c43de171_build_from_tokens(&(*_self_), _84437_expr_tokens);;
	if ((_85217_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1dcd6e38a_Expr> _85617_index = _1c43de171_build_from_tokens(&(*_self_), _84513_tokens);;
	if ((_85617_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1dcd765d4_IndexingExpr>(_1dcd765d4_IndexingExpr{._field_token=_84535_error_token, ._field_end=_84617_end, ._field_expr=_85217_expr, ._field_index=_85617_index});
}



inline jule::Ptr<_1dcd76bde_SlicingExpr> _1c43dcc74_build_slicing(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _86837_expr_tokens, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _86865_start, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _86914_to, jule::Ptr<_1db7061a7_Token>& _86933_error_token, jule::Ptr<_1db7061a7_Token> _86958_end) {
	jule::Ptr<_1dcd76bde_SlicingExpr> _87017_slc = jule::new_ptr<_1dcd76bde_SlicingExpr>(_1dcd76bde_SlicingExpr{._field_token=_86933_error_token, ._field_end=_86958_end, ._field_expr=_1c43de171_build_from_tokens(&(*_self_), _86837_expr_tokens), });;
	if ((_86865_start.len() > 0LL)) {
		_87017_slc.get()._field_start=_1c43de171_build_from_tokens(&(*_self_), _86865_start);
	};
	if ((_86914_to.len() > 0LL)) {
		_87017_slc.get()._field_to=_1c43de171_build_from_tokens(&(*_self_), _86914_to);
	};
	return _87017_slc;
}



inline jule::Any _1c43dd082_build_bracket_range(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _88442_tokens) {
	jule::Ptr<_1db7061a7_Token> _88517_error_token = _88442_tokens[0LL];;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _88618_expr_tokens;;
	jule::I64 _88631_range_n;;
	std::tie(_88618_expr_tokens,_88631_range_n) = _1c43d44a7_get_range_expr_tokens(_88442_tokens);
	if ((_88618_expr_tokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1c43dc27e_build_slice(&(*_self_), _88442_tokens));
	} else if ((_88631_range_n > 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _88517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_88442_tokens=_88442_tokens.slice(_88618_expr_tokens.len());
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _90117_split_tokens = _88442_tokens.slice(1LL,(_88442_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _90218_start;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _90229_to;;
	std::tie(_90218_start,_90229_to) = _1c43d3b49_split_delim(_90117_split_tokens,static_cast<jule::U64>(11LLU));
	if (((_90218_start != nullptr) || (_90229_to != nullptr))) {
		return static_cast<jule::Any>(_1c43dcc74_build_slicing(&(*_self_), _88618_expr_tokens,_90218_start,_90229_to,_88517_error_token,_88442_tokens[(_88442_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1c43dc6d0_build_indexing(&(*_self_), _88618_expr_tokens,_88442_tokens,_88517_error_token));
}



inline jule::Any _1c43dd390_build_data(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _90934_tokens) {
	{
		auto _match_expr{ _90934_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aba29780:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aba29807:;
			{
				return _1c43d6047_build_single(&(*_self_), _90934_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aba2987e:;
			{
				if ((_90934_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_1c43d6355_build_cpp_linked_ident(&(*_self_), _90934_tokens));
				};
			}
		}
		_match_end_1aba2951b:;
	};
	jule::Ptr<_1db7061a7_Token> _92117_token = _90934_tokens[(_90934_tokens.len() - 1LL)];;
	if (((_92117_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_92117_token.get()._field_kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1c43d76a8_build_variadic(&(*_self_), _90934_tokens));
	};
	_92117_token=_90934_tokens[0LL];
	{
		auto &_match_expr{ _92117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aba2cb5c:;
			{
				if (((_90934_tokens.len() > 1LL) && (_92117_token.get()._field_kind == jule::Str("*", 1)))) {
					_92117_token=_90934_tokens[1LL];
					if (((_92117_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_92117_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_1c43d708c_build_type(&(*_self_), _90934_tokens));
					};
				};
				return static_cast<jule::Any>(_1c43d6663_build_unary(&(*_self_), _90934_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aba2cbd4:;
			{
				if ((_90934_tokens.len() < 3LL)) {
					goto _match_end_1aba2ca80;
				};
				if ((_90934_tokens.len() > 3LL)) {
					jule::Ptr<_1db7061a7_Token> _94321_t = _90934_tokens[(_90934_tokens.len() - 1LL)];;
					if (((_94321_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_94321_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1aba2ca80;
					};
				};
				jule::Ptr<_1db7061a7_Token> _94917_next = _90934_tokens[1LL];;
				if (((_94917_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94917_next.get()._field_kind != jule::Str("]", 1)))) {
					jule::I64 _95225_delim = 0LL;;
					_95225_delim=static_cast<jule::I64>(_1c4403e99_map_colon(_90934_tokens,_95225_delim));
					if ((_95225_delim == -1LL)) {
						goto _match_end_1aba2ca80;
					};
				};
				return static_cast<jule::Any>(_1c43d708c_build_type(&(*_self_), _90934_tokens));
			}
		}
		_match_end_1aba2ca80:;
	};
	_92117_token=_90934_tokens[(_90934_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _92117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aba2d1ce:;
			{
				return _1c43d739a_build_sub_ident(&(*_self_), _90934_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aba3438e:;
			{
				return static_cast<jule::Any>(_1c43d708c_build_type(&(*_self_), _90934_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aba34405:;
			{
				return _1c43d79b6_build_op_right(&(*_self_), _90934_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aba3446b:;
			{
				{
					auto &_match_expr{ _92117_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aba35ca8:;
						{
							return _1c43d937a_build_parentheses_range(&(*_self_), _90934_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1aba35d1e:;
						{
							return _1c43dbb63_build_brace_range(&(*_self_), _90934_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1aba35d96:;
						{
							return _1c43dd082_build_bracket_range(&(*_self_), _90934_tokens);
						}
					}
					_match_end_1aba356e2:;
				};
			}
		}
		_match_end_1aba2d179:;
	};
	if ((_92117_token.get()._field_id == static_cast<jule::U64>(33LLU))) {
		return static_cast<jule::Any>(_1c43d708c_build_type(&(*_self_), _90934_tokens));
	};
	_1c43d4ee1_push_err(&(*_self_), _92117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1dcd73119_BinopExpr> _1c43dd747_build_binop(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _99035_tokens, jule::I64 _99053_i) {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _99117_left_tokens = _99035_tokens.slice(0LL,_99053_i);;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _99217_right_tokens = _99035_tokens.slice((_99053_i + 1LL));;
	if ((_99117_left_tokens.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _99035_tokens[_99053_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_99217_right_tokens.len() == 0LL)) {
		_1c43d4ee1_push_err(&(*_self_), _99035_tokens[_99053_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43d5310_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1dcd73119_BinopExpr>(_1dcd73119_BinopExpr{._field_left=_1c43de171_build_from_tokens(&(*_self_), _99117_left_tokens), ._field_right=_1c43de171_build_from_tokens(&(*_self_), _99217_right_tokens), ._field_op=_99035_tokens[_99053_i]});
}



inline jule::Any _1c43dda55_build(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _101029_tokens) {
	jule::I64 _101113_i = _1c43d3de1_find_lowest_prec_op(_101029_tokens);;
	if ((_101113_i == -1LL)) {
		return _1c43dd390_build_data(&(*_self_), _101029_tokens);
	};
	return static_cast<jule::Any>(_1c43dd747_build_binop(&(*_self_), _101029_tokens,_101113_i));
}



inline jule::Any _1c43ddd63_build_kind(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _101834_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _101918_parts;;
	jule::Slice<_207b80eb7_Log> _101925_errors;;
	std::tie(_101918_parts,_101925_errors) = _1c43e1d77_parts(_101834_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_101925_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_101925_errors);
		return nullptr;
	} else if ((_101918_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1c43d561d_build_tuple(&(*_self_), _101918_parts));
	};
	return _1c43dda55_build(&(*_self_), _101834_tokens);
}



inline jule::Ptr<_1dcd6e38a_Expr> _1c43de171_build_from_tokens(_1c43d46d8_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _102940_tokens) {
	if ((_102940_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1dcd6e38a_Expr>(_1dcd6e38a_Expr{._field_token=_102940_tokens[0LL], ._field_end=_102940_tokens[(_102940_tokens.len() - 1LL)], ._field_kind=_1c43ddd63_build_kind(&(*_self_), _102940_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1c43d46d8_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c43dea56_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c43e340b_stop(_1c43e30cb_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1c43e3670_stopped(_1c43e30cb_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1c43e3a38_push_err(_1c43e30cb_Parser* _self_, jule::Ptr<_1db7061a7_Token> _28727_token, jule::Str _28742_fmt, jule::Slice<jule::Any> _28755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c43e2509_compiler_err(_28727_token,_28742_fmt,jule::Any(_28755_args)));;
}



inline void _1c43e3d57_push_suggestion(_1c43e30cb_Parser* _self_, jule::Str _29234_fmt, jule::Slice<jule::Any> _29247_args) {
	{
		_1c43e296b_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29234_fmt,jule::Any(_29247_args));
	};
}



inline jule::Ptr<_1dcd6e38a_Expr> _1c43e4165_build_expr(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _29635_tokens) {
	jule::Ptr<_1c43d46d8_ExprBuilder> _29717_ep = jule::new_ptr<_1c43d46d8_ExprBuilder>(_1c43d46d8_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1dcd6e38a_Expr> _30017_expr = _1c43de171_build_from_tokens(_29717_ep.ptr(), _29635_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_1dcd36671_Directive> _1c43e4473_build_directive(_1c43e30cb_Parser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _30438_tokens) {
	if ((_30438_tokens.len() == 1LL)) {
		_1c43e3a38_push_err(&(*_self_), _30438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30438_tokens[1LL].get()._field_column != (_30438_tokens[0LL].get()._field_column + 1LL))) {
		_1c43e3a38_push_err(&(*_self_), _30438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1dcd36671_Directive>(_1dcd36671_Directive{._field_tag=_30438_tokens[1LL], ._field_args=_30438_tokens.slice(2LL)});
}



inline void _1c43e46e8_push_directive(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd36671_Directive> _32137_d) {
	if ((_32137_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1aba69b11:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _32716_pd = *it;
			{
				if ((_32137_d.get()._field_tag.get()._field_kind == _32716_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1aba69b11:;
			++it;
			goto _iter_begin_1aba69b11;
		}
		_iter_end_1aba69b11:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_32137_d);;
}



inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43e4aa0_build_scope(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _33536_tokens, jule::Ptr<_1db7061a7_Token> _33558_end) {
	jule::Ptr<_1dcd7a187_ScopeTree> _33617_s = _1c43c58b6_new_scope();;
	_33617_s.get()._field_end=_33558_end;
	_1c43c7346_ScopeParser _33817_sp = _1c43c7346_ScopeParser{._field_p=_self_, };;
	_1c43d2d68_build(&_33817_sp, _33536_tokens,_33617_s);
	return _33617_s;
}



inline std::tuple<jule::Ptr<_1dcd69d69_TypeDecl>,jule::Bool> _1c43e5001___build_type(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _34544_tokens, jule::I64* _34613_i, jule::Bool _34622_err) {
	_1c44044a5_TypeBuilder _34717_tb = _1c44044a5_TypeBuilder{._field_p=_self_, ._field_tokens=_34544_tokens, ._field_i=_34613_i, ._field_err=_34622_err};;
	jule::Ptr<_1dcd69d69_TypeDecl> _35318_decl;;
	jule::Bool _35324_ok;;
	std::tie(_35318_decl,_35324_ok) = _1c4407860_build(&_34717_tb);
	return std::make_tuple(_35318_decl,_35324_ok);
}



inline std::tuple<jule::Ptr<_1dcd69d69_TypeDecl>,jule::Bool> _1c43e5452_build_type(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _35842_tokens, jule::I64* _35913_i, jule::Bool _35922_err) {
	jule::Ptr<_1db7061a7_Token> _36013_token = _35842_tokens[(*(_35913_i))];;
	jule::Ptr<_1dcd69d69_TypeDecl> _36118_t;;
	jule::Bool _36121_ok;;
	std::tie(_36118_t,_36121_ok) = _1c43e5001___build_type(_self_, _35842_tokens,_35913_i,_35922_err);
	if ((_35922_err && (!(_36121_ok)))) {
		_1c43e3a38_push_err(_self_.ptr(), _36013_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_36118_t,_36121_ok);
}



inline jule::Ptr<_1dcd814bd_TypeAliasDecl> _1c43e5760_build_type_alias_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _36846_tokens) {
	jule::I64 _36917_i = 1LL;;
	if ((_36917_i >= _36846_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd814bd_TypeAliasDecl> _37417_tad = jule::new_ptr<_1dcd814bd_TypeAliasDecl>(_1dcd814bd_TypeAliasDecl{._field_token=_36846_tokens[1LL], ._field_ident=_36846_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_1db7061a7_Token> _37817_token = _36846_tokens[_36917_i];;
	if ((_37817_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _37817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36917_i)++;
	if ((_36917_i >= _36846_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	_37817_token=_36846_tokens[_36917_i];
	if ((_37817_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	(_36917_i)++;
	if ((_36917_i >= _36846_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _36846_tokens[(_36917_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37417_tad;
	};
	jule::Ptr<_1dcd69d69_TypeDecl> _39918_t;;
	jule::Bool _39921_ok;;
	std::tie(_39918_t,_39921_ok) = _1c43e5452_build_type(_self_, _36846_tokens,(&(_36917_i)),true);
	_37417_tad.get()._field_kind=_39918_t;
	if ((_39921_ok && (_36917_i < _36846_tokens.len()))) {
		_1c43e3a38_push_err(_self_.ptr(), _36846_tokens[_36917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _37417_tad;
}



inline void _1c43e5aa1_build_var_type_and_expr(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1dcd7cb5c_VarDecl>& _40748_v, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _40766_tokens) {
	jule::I64 _40817_i = 0LL;;
	jule::Ptr<_1db7061a7_Token> _40917_tok = _40766_tokens[_40817_i];;
	if ((_40917_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_40817_i)++;
		if (((_40817_i >= _40766_tokens.len()) || ((_40766_tokens[_40817_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_40766_tokens[_40817_i].get()._field_kind == jule::Str("=", 1))))) {
			_1c43e3a38_push_err(_self_.ptr(), _40917_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1dcd69d69_TypeDecl> _41722_t;;
		jule::Bool _41725_ok;;
		std::tie(_41722_t,_41725_ok) = _1c43e5452_build_type(_self_, _40766_tokens,(&(_40817_i)),true);
		if (_41725_ok) {
			_40748_v.get()._field_kind=_41722_t;
			if ((_40817_i >= _40766_tokens.len())) {
				return;;
			};
			_40917_tok=_40766_tokens[_40817_i];
		};
	};
	if ((_40917_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_40917_tok.get()._field_kind != jule::Str("=", 1))) {
			_1c43e3a38_push_err(_self_.ptr(), _40917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1db7061a7_Token>> _43221_expr_tokens = _40766_tokens.slice((_40817_i + 1LL));;
		if ((_43221_expr_tokens.len() == 0LL)) {
			_1c43e3a38_push_err(_self_.ptr(), _40917_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40748_v.get()._field_expr=_1c43e4165_build_expr(_self_, _43221_expr_tokens);
	} else {
		_1c43e3a38_push_err(_self_.ptr(), _40917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c43e5d59_build_var_common(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1dcd7cb5c_VarDecl>& _44341_v, jule::Slice<jule::Ptr<_1db7061a7_Token>> _44358_tokens) {
	_44341_v.get()._field_token=_44358_tokens[0LL];
	if ((_44341_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _44341_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44341_v.get()._field_ident=_44341_v.get()._field_token.get()._field_kind;
	_44341_v.get()._field_kind=nullptr;
	if ((_44358_tokens.len() > 1LL)) {
		_44358_tokens=_44358_tokens.slice(1LL);
		_1c43e5aa1_build_var_type_and_expr(_self_, _44341_v,_44358_tokens);
	};
}



inline void _1c43e6222_build_var_begin(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd7cb5c_VarDecl>& _45839_v, jule::I64& _45857_i, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _45866_tokens) {
	jule::Ptr<_1db7061a7_Token> _45913_tok = _45866_tokens[_45857_i];;
	{
		auto &_match_expr{ _45913_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1aba84675:;
			{
				_45839_v.get()._field_statically=true;
				goto _case_begin_1aba846db;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aba846db:;
			{
				(_45857_i)++;
				if ((_45857_i >= _45866_tokens.len())) {
					_1c43e3a38_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45866_tokens[_45857_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_45839_v.get()._field_mutable=true;
					(_45857_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aba83d6c:;
			{
				(_45857_i)++;
				_45839_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1aba83ca1:;
			{
				_1c43e3a38_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aba83b08:;
	};
	if ((_45857_i >= _45866_tokens.len())) {
		_1c43e3a38_push_err(&(*_self_), _45913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43e6530_build_var(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _48833_tokens) {
	jule::I64 _48917_i = 0LL;;
	jule::Ptr<_1dcd7cb5c_VarDecl> _49017_v = jule::new_ptr<_1dcd7cb5c_VarDecl>(_1dcd7cb5c_VarDecl{._field_token=_48833_tokens[0LL], });;
	_1c43e6222_build_var_begin(_self_.ptr(), _49017_v,_48917_i,_48833_tokens);
	if ((_48917_i >= _48833_tokens.len())) {
		return nullptr;
	};
	_48833_tokens=_48833_tokens.slice(_48917_i);
	if (((_48833_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_48833_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_49017_v.get()._field_reference=true;
		if ((_48833_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48833_tokens=_48833_tokens.slice(1LL);
	};
	_1c43e5d59_build_var_common(_self_, _49017_v,_48833_tokens);
	return _49017_v;
}



inline jule::Ptr<_1dcd7744d_GenericDecl> _1c43e683d_build_generic(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _51038_tokens) {
	jule::Ptr<_1dcd7744d_GenericDecl> _51117_g = jule::new_ptr<_1dcd7744d_GenericDecl>(_1dcd7744d_GenericDecl{._field_token=_51038_tokens[0LL], });;
	if ((_51117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _51117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51117_g.get()._field_ident=_51117_g.get()._field_token.get()._field_kind;
	if ((_51038_tokens.len() > 1LL)) {
		if ((_51038_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
			_1c43e3a38_push_err(_self_.ptr(), _51038_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_51038_tokens.len() == 2LL)) {
			_1c43e3a38_push_err(_self_.ptr(), _51038_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1db7061a7_Token>> _52821_constraint_tokens = _51038_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _52922_parts;;
		jule::Slice<_207b80eb7_Log> _52929_errors;;
		std::tie(_52922_parts,_52929_errors) = _1c43e198c_parts_kind(_52821_constraint_tokens,jule::Str("|", 1),true);
		if ((_52929_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52929_errors);
			return nullptr;
		};
		_51117_g.get()._field_constraint=jule::new_ptr<_1dcd76eca_Constraint>(_1dcd76eca_Constraint{._field_mask=jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>::alloc(0LL,_52922_parts.len())});
		{
			auto &expr = _52922_parts;
			auto it = expr.begin();
			_iter_begin_1aba90dac:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _53525_part = *it;
				{
					jule::I64 _53625_i = 0LL;;
					jule::Ptr<_1dcd69d69_TypeDecl> _53726_kind;;
					std::tie(_53726_kind,std::ignore) = _1c43e5452_build_type(_self_, _53525_part,(&(_53625_i)),true);
					_51117_g.get()._field_constraint.get()._field_mask = jule::alloc_for_append(_51117_g.get()._field_constraint.get()._field_mask,1);_51117_g.get()._field_constraint.get()._field_mask.__push(_53726_kind);;
					if ((_53625_i < _53525_part.len())) {
						_1c43e3a38_push_err(_self_.ptr(), _53525_part[_53625_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1aba90dac:;
				++it;
				goto _iter_begin_1aba90dac;
			}
			_iter_end_1aba90dac:;
		};
	};
	return _51117_g;
}



inline jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _1c43e6be5_build_generics(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _54739_tokens, jule::Ptr<_1db7061a7_Token>& _54758_error_token) {
	if ((_54739_tokens.len() == 0LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _54758_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _55318_parts;;
	jule::Slice<_207b80eb7_Log> _55325_errors;;
	std::tie(_55318_parts,_55325_errors) = _1c43e1d77_parts(_54739_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55325_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55325_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>> _55917_generics = jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>::alloc(0LL,_55318_parts.len());;
	{
		auto &expr = _55318_parts;
		auto it = expr.begin();
		_iter_begin_1aba964de:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _56021_part = *it;
			{
				_55917_generics = jule::alloc_for_append(_55917_generics,1);_55917_generics.__push(_1c43e683d_build_generic(_self_, _56021_part));;
			}
			_iter_next_1aba964de:;
			++it;
			goto _iter_begin_1aba964de;
		}
		_iter_end_1aba964de:;
	};
	return _55917_generics;
}



inline jule::Ptr<_1dcd7a85d_ParamDecl> _1c43e7003_build_self_param(_1c43e30cb_Parser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _56739_tokens) {
	if ((_56739_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1dcd7a85d_ParamDecl> _57217_param = jule::new_ptr<_1dcd7a85d_ParamDecl>();;
	jule::I64 _57517_i = 0LL;;
	if ((_56739_tokens[_57517_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_57217_param.get()._field_mutable=true;
		(_57517_i)++;
		if ((_57517_i >= _56739_tokens.len())) {
			_1c43e3a38_push_err(&(*_self_), _56739_tokens[(_57517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56739_tokens[_57517_i].get()._field_kind == jule::Str("&", 1))) {
		_57217_param.get()._field_ident=jule::Str("&", 1);
		(_57517_i)++;
		if ((_57517_i >= _56739_tokens.len())) {
			_1c43e3a38_push_err(&(*_self_), _56739_tokens[(_57517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56739_tokens[_57517_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_57217_param.get()._field_ident+=jule::Str("self", 4);
		_57217_param.get()._field_token=_56739_tokens[_57517_i];
		(_57517_i)++;
		if ((_57517_i < _56739_tokens.len())) {
			_1c43e3a38_push_err(&(*_self_), _56739_tokens[_57517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57217_param;
}



inline void _1c43e73bb_param_type_begin(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd7a85d_ParamDecl>& _60640_param, jule::I64& _60664_i, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _60673_tokens) {
	for (; (_60664_i < _60673_tokens.len()); (_60664_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _60817_token = _60673_tokens[_60664_i];;
			if ((_60817_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60817_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60640_param.get()._field_variadic) {
				_1c43e3a38_push_err(&(*_self_), _60817_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1aba9ceda;
			};
			_60640_param.get()._field_variadic=true;
		}
	_iter_next_1aba9ceda:;
	}
	_iter_end_1aba9ceda:;;
}



inline void _1c43e76da_build_param_type(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1dcd7a85d_ParamDecl>& _62341_param, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _62365_tokens) {
	jule::I64 _62417_i = 0LL;;
	_1c43e73bb_param_type_begin(_self_.ptr(), _62341_param,_62417_i,_62365_tokens);
	if ((_62417_i >= _62365_tokens.len())) {
		return;;
	};
	std::tie(_62341_param.get()._field_kind,std::ignore) = _1c43e5452_build_type(_self_, _62365_tokens,(&(_62417_i)),true);
	if ((_62417_i < _62365_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _62365_tokens[_62417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c43e7a09_build_param_body(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1dcd7a85d_ParamDecl>& _63641_param, jule::Slice<jule::Ptr<_1db7061a7_Token>> _63664_tokens) {
	jule::Ptr<_1db7061a7_Token> _63717_tok = _63664_tokens[0LL];;
	_63641_param.get()._field_ident=_63717_tok.get()._field_kind;
	if ((_63664_tokens.len() == 1LL)) {
		return;;
	} else if ((_63664_tokens.len() < 3LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _63717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63664_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1c43e76da_build_param_type(_self_, _63641_param,_63664_tokens);
		return;;
	};
	_63664_tokens=_63664_tokens.slice(2LL);
	_1c43e76da_build_param_type(_self_, _63641_param,_63664_tokens);
}



inline jule::Ptr<_1dcd7a85d_ParamDecl> _1c43e7d17_build_param(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _65435_tokens) {
	jule::Ptr<_1dcd7a85d_ParamDecl> _65517_param = jule::new_ptr<_1dcd7a85d_ParamDecl>(_1dcd7a85d_ParamDecl{._field_token=_65435_tokens[0LL], });;
	if ((_65517_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_65517_param.get()._field_mutable=true;
		if ((_65435_tokens.len() == 1LL)) {
			_1c43e3a38_push_err(_self_.ptr(), _65435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65435_tokens=_65435_tokens.slice(1LL);
		_65517_param.get()._field_token=_65435_tokens[0LL];
	};
	if ((_65435_tokens.len() >= 3LL)) {
		if (((_65517_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_65517_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_65435_tokens.len() == 1LL)) {
				_1c43e3a38_push_err(_self_.ptr(), _65435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65435_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_65435_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_65517_param.get()._field_reference=true;
				_65435_tokens=_65435_tokens.slice(1LL);
				_65517_param.get()._field_token=_65435_tokens[0LL];
			};
		};
	};
	if ((_65517_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_65517_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1c43e76da_build_param_type(_self_, _65517_param,_65435_tokens);
	} else {
		_1c43e7a09_build_param_body(_self_, _65517_param,_65435_tokens);
	};
	return _65517_param;
}



inline void _1c43e808c_check_params(_1c43e30cb_Parser* _self_, jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>>& _69736_params) {
	{
		auto &expr = _69736_params;
		auto it = expr.begin();
		_iter_begin_1abaac48e:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd7a85d_ParamDecl> _69821_param = *it;
			{
				if ((_1dcd7abc1_is_self(_69821_param.ptr()) || (_69821_param.get()._field_kind != nullptr))) {
					goto _iter_next_1abaac48e;
				};
				if ((_69821_param.get()._field_token == nullptr)) {
					_1c43e3a38_push_err(&(*_self_), _69821_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69821_param.get()._field_kind=jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_69821_param.get()._field_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_69821_param.get()._field_token, ._field_ident=_69821_param.get()._field_token.get()._field_kind, }))});
					_69821_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1abaac48e:;
			++it;
			goto _iter_begin_1abaac48e;
		}
		_iter_end_1abaac48e:;
	};
}



inline jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>> _1c43e8444_build_params(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _71737_tokens, jule::Bool _71755_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _71818_parts;;
	jule::Slice<_207b80eb7_Log> _71825_errs;;
	std::tie(_71818_parts,_71825_errs) = _1c43e1d77_parts(_71737_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71825_errs);
	if ((_71818_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>> _72417_params = nullptr;;
	if ((_71755_method && (_71818_parts.len() > 0LL))) {
		jule::Ptr<_1dcd7a85d_ParamDecl> _72621_param = _1c43e7003_build_self_param(_self_.ptr(), _71818_parts[0LL]);;
		if (((_72621_param != nullptr) && _1dcd7abc1_is_self(_72621_param.ptr()))) {
			_72417_params = jule::alloc_for_append(_72417_params,1);_72417_params.__push(_72621_param);;
			_71818_parts=_71818_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71818_parts;
		auto it = expr.begin();
		_iter_begin_1abab1c8a:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _73321_part = *it;
			{
				jule::Ptr<_1dcd7a85d_ParamDecl> _73421_param = _1c43e7d17_build_param(_self_, _73321_part);;
				if ((_73421_param != nullptr)) {
					_72417_params = jule::alloc_for_append(_72417_params,1);_72417_params.__push(_73421_param);;
				};
			}
			_iter_next_1abab1c8a:;
			++it;
			goto _iter_begin_1abab1c8a;
		}
		_iter_end_1abab1c8a:;
	};
	_1c43e808c_check_params(_self_.ptr(), _72417_params);
	return _72417_params;
}



inline std::tuple<jule::Ptr<_1dcd6ce7c_RetTypeDecl>,jule::Bool> _1c43e87eb_build_multi_ret_type(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _74445_tokens, jule::I64& _74468_i) {
	jule::Ptr<_1dcd6ce7c_RetTypeDecl> _74478_t = jule::Ptr<_1dcd6ce7c_RetTypeDecl>();
	jule::Bool _74495_ok = jule::Bool();
	_74478_t=jule::new_ptr<_1dcd6ce7c_RetTypeDecl>();
	(_74468_i)++;
	if ((_74468_i >= _74445_tokens.len())) {
		(_74468_i)--;
		std::tie(_74478_t.get()._field_kind,_74495_ok) = _1c43e5452_build_type(_self_, _74445_tokens,(&(_74468_i)),false);
		return std::make_tuple(_74478_t,_74495_ok);
	};
	(_74468_i)--;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _75417_range_tokens = _1c43e1283_range(_74468_i,jule::Str("(", 1),jule::Str(")", 1),_74445_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _75618_parts;;
	jule::Slice<_207b80eb7_Log> _75625_errs;;
	std::tie(_75618_parts,_75625_errs) = _1c43e1d77_parts(_75417_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75625_errs);
	if ((_75618_parts.len() == 0LL)) {
		return std::make_tuple(_74478_t,_74495_ok);
	};
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _76217_types = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>::alloc(0LL,_75618_parts.len());;
	_74478_t.get()._field_idents=jule::Slice<jule::Ptr<_1db7061a7_Token>>::alloc(0LL,_75618_parts.len());
	{
		auto &expr = _75618_parts;
		auto it = expr.begin();
		_iter_begin_1abab8412:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _76421_part = *it;
			{
				jule::Ptr<_1db7061a7_Token> _76521_token = _76421_part[0LL];;
				jule::I64 _76621_offset = 0LL;;
				if ((_76421_part.len() > 1LL)) {
					_76521_token=_76421_part[1LL];
					if ((_76521_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_76621_offset=2LL;
						if ((_76421_part.len() < 3LL)) {
							_1c43e3a38_push_err(_self_.ptr(), _76521_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1abab8412;
						};
					};
				};
				_76521_token=_76421_part[0LL];
				if ((_76621_offset != 2LL)) {
					jule::Ptr<_1db7061a7_Token> _78225_new_token = jule::new_ptr<_1db7061a7_Token>((*(_76521_token)));;
					_78225_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_74478_t.get()._field_idents = jule::alloc_for_append(_74478_t.get()._field_idents,1);_74478_t.get()._field_idents.__push(_78225_new_token);;
				} else {
					_74478_t.get()._field_idents = jule::alloc_for_append(_74478_t.get()._field_idents,1);_74478_t.get()._field_idents.__push(_76521_token);;
				};
				jule::Ptr<_1dcd69d69_TypeDecl> _78922_tk;;
				std::tie(_78922_tk,std::ignore) = _1c43e5452_build_type(_self_, _76421_part,(&(_76621_offset)),true);
				if ((_76621_offset < _76421_part.len())) {
					_1c43e3a38_push_err(_self_.ptr(), _76421_part[_76621_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76217_types = jule::alloc_for_append(_76217_types,1);_76217_types.__push(_78922_tk);;
			}
			_iter_next_1abab8412:;
			++it;
			goto _iter_begin_1abab8412;
		}
		_iter_end_1abab8412:;
	};
	if ((_76217_types.len() > 1LL)) {
		_74478_t.get()._field_kind=jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_74445_tokens[0LL], ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6b909_TupleTypeDecl>(_1dcd6b909_TupleTypeDecl{._field_types=_76217_types}))});
	} else {
		_74478_t.get()._field_kind=_76217_types[0LL];
	};
	_74495_ok=true;
	return std::make_tuple(_74478_t,_74495_ok);
}



inline std::tuple<jule::Ptr<_1dcd6ce7c_RetTypeDecl>,jule::Bool> _1c43e8ba3_build_ret_type(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _81239_tokens, jule::I64& _81262_i) {
	jule::Ptr<_1dcd6ce7c_RetTypeDecl> _81272_t = jule::Ptr<_1dcd6ce7c_RetTypeDecl>();
	jule::Bool _81289_ok = jule::Bool();
	_81272_t=jule::new_ptr<_1dcd6ce7c_RetTypeDecl>();
	if ((_81262_i >= _81239_tokens.len())) {
		return std::make_tuple(_81272_t,_81289_ok);
	};
	jule::Ptr<_1db7061a7_Token> _81817_token = _81239_tokens[_81262_i];;
	{
		auto &_match_expr{ _81817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1abac1e21:;
			{
				if ((_81817_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_81272_t,_81289_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1abac1e87:;
			{
				if ((_81817_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_81272_t,_81289_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1abac1eed:;
			{
				if (((_81262_i + 1LL) >= _81239_tokens.len())) {
					_1c43e3a38_push_err(_self_.ptr(), _81817_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81272_t,_81289_ok);
				};
				(_81262_i)++;
				_81817_token=_81239_tokens[_81262_i];
				if ((_81817_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81817_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1abac4a39:;
							{
								std::tie(_81272_t,_81289_ok) = _1c43e87eb_build_multi_ret_type(_self_, _81239_tokens,_81262_i);
								return std::make_tuple(_81272_t,_81289_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1abac4aa0:;
							{
								_1c43e3a38_push_err(_self_.ptr(), _81817_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81272_t,_81289_ok);
							}
						}
						_match_end_1abac497e:;
					};
				};
				std::tie(_81272_t.get()._field_kind,_81289_ok) = _1c43e5452_build_type(_self_, _81239_tokens,(&(_81262_i)),true);
				return std::make_tuple(_81272_t,_81289_ok);
			}
		}
		_match_end_1abac1d66:;
	};
	(_81262_i)++;
	_1c43e3a38_push_err(_self_.ptr(), _81817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81272_t,_81289_ok);
}



inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43e9104_build_fn_prototype(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _85743_tokens, jule::I64& _85766_i, jule::Bool _85774_method) {
	jule::Ptr<_1dcd7bb7d_FnDecl> _85817_f = jule::new_ptr<_1dcd7bb7d_FnDecl>(_1dcd7bb7d_FnDecl{._field_token=_85743_tokens[_85766_i], });;
	if ((_85817_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_85817_f.get()._field_statically=true;
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_token=_85743_tokens[_85766_i];
	};
	if ((_85817_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_85817_f.get()._field_unsafety=true;
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_token=_85743_tokens[_85766_i];
	};
	(_85766_i)++;
	if ((_85766_i >= _85743_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1db7061a7_Token> _89113_tok = _85743_tokens[_85766_i];;
	if ((_89113_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_85766_i)++;
		if ((_85766_i >= _85743_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _85817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85817_f.get()._field_ident=_89113_tok.get()._field_kind;
	} else {
		_85817_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1db7061a7_Token> _90313_error_token = _85743_tokens[_85766_i];;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _90417_generics_tokens = _1c43e1283_range(_85766_i,jule::Str("[", 1),jule::Str("]", 1),_85743_tokens);;
	if ((_90417_generics_tokens != nullptr)) {
		_85817_f.get()._field_generics=_1c43e6be5_build_generics(_self_, _90417_generics_tokens,_90313_error_token);
	};
	if ((_85743_tokens[_85766_i].get()._field_kind != jule::Str("(", 1))) {
		_1c43e3a38_push_err(_self_.ptr(), _85743_tokens[_85766_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _91417_params_toks = _1c43e1283_range(_85766_i,jule::Str("(", 1),jule::Str(")", 1),_85743_tokens);;
	if ((_91417_params_toks.len() > 0LL)) {
		_85817_f.get()._field_params=_1c43e8444_build_params(_self_, _91417_params_toks,_85774_method);
	};
	if ((_85766_i < _85743_tokens.len())) {
		jule::Ptr<_1db7061a7_Token> _92017_token = _85743_tokens[_85766_i];;
		if (((_92017_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_92017_token.get()._field_kind == jule::Str("!", 1)))) {
			_85817_f.get()._field_exceptional=true;
			(_85766_i)++;
		};
	};
	std::tie(_85817_f.get()._field_result,std::ignore) = _1c43e8ba3_build_ret_type(_self_, _85743_tokens,_85766_i);
	return _85817_f;
}



inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43e9555_build_fn(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _93333_tokens, jule::Bool _93351_method, jule::Bool _93365_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_1dcd7bb7d_FnDecl> _93517_f = _1c43e9104_build_fn_prototype(_self_, _93333_tokens,_93417_i,_93351_method);;
	if (_93365_prototype) {
		if ((_93417_i < _93333_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _93333_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93333_tokens.len())) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _93517_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _95117_block_tokens = _1c43e1283_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93333_tokens);;
	if ((_95117_block_tokens != nullptr)) {
		_93517_f.get()._field_scope=_1c43e4aa0_build_scope(_self_, _95117_block_tokens,_93333_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_scope.get()._field_unsafety=_93517_f.get()._field_unsafety;
		if ((_93417_i < _93333_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _93333_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _93517_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_1db7061a7_Token>> _1c43e9863_get_use_decl_selectors(_1c43e30cb_Parser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _96745_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96745_tokens=_1c43e1283_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96745_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _97018_parts;;
	jule::Slice<_207b80eb7_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _1c43e1d77_parts(_96745_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _97617_selectors = jule::Slice<jule::Ptr<_1db7061a7_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_1abae0c86:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_1c43e3a38_push_err(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1db7061a7_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_1c43e3a38_push_err(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c43e3d57_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1abae0c86;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_1abae0c86:;
			++it;
			goto _iter_begin_1abae0c86;
		}
		_iter_end_1abae0c86:;
	};
	return _97617_selectors;
}



inline void _1c43e9b82_build_cpp_use_decl(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _99242_decl, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _99259_tokens) {
	if ((_99259_tokens.len() > 1LL)) {
		_1c43e3a38_push_err(&(*_self_), _99259_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1db7061a7_Token> _99613_token = _99259_tokens[0LL];;
	if (((_99613_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_kind[0LL] != '`') && (_99613_token.get()._field_kind[0LL] != '\"')))) {
		_1c43e3a38_push_err(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99242_decl.get()._field_cpp_linked=true;
	_99242_decl.get()._field_link_path=_99613_token.get()._field_kind.slice(1LL,(_99613_token.get()._field_kind.len() - 1LL));
}



inline void _1c43e9ea1_build_std_use_decl(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _100542_decl, jule::Slice<jule::Ptr<_1db7061a7_Token>> _100562_tokens) {
	_100542_decl.get()._field_std=true;
	jule::Ptr<_1db7061a7_Token> _100817_token = _100562_tokens[0LL];;
	if ((_100562_tokens.len() < 3LL)) {
		_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100562_tokens=_100562_tokens.slice(2LL);
	_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1abae9a4d:;
			{
				_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1abae9ac5:;
			{
				if ((_100817_token.get()._field_kind != jule::Str("}", 1))) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _102521_selectors = nullptr;;
				std::tie(_100562_tokens,_102521_selectors) = _1c43e152a_range_last(_100562_tokens);
				_100542_decl.get()._field_selected=_1c43e9863_get_use_decl_selectors(&(*_self_), _102521_selectors);
				if ((_100562_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1abae9b4c:;
			{
				if ((_100817_token.get()._field_kind != jule::Str("*", 1))) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100562_tokens[(_100562_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100562_tokens=_100562_tokens.slice(0LL,(_100562_tokens.len() - 1LL));
				if ((_100562_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100542_decl.get()._field_full=true;
			}
		}
		_match_end_1abae99c6:;
	};
	_100542_decl.get()._field_link_path=(jule::Str("std::", 5) + _1c43e2c13_tokstoa(_100562_tokens));
}



inline void _1c43ea2c0_build_ident_use_decl(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _106744_decl, jule::Slice<jule::Ptr<_1db7061a7_Token>> _106764_tokens) {
	_106744_decl.get()._field_std=false;
	jule::Ptr<_1db7061a7_Token> _107017_token = _106764_tokens[(_106764_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1abb04ad0:;
			{
				_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1abb04cab:;
			{
				if ((_107017_token.get()._field_kind != jule::Str("}", 1))) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _108121_selectors = nullptr;;
				std::tie(_106764_tokens,_108121_selectors) = _1c43e152a_range_last(_106764_tokens);
				_106744_decl.get()._field_selected=_1c43e9863_get_use_decl_selectors(&(*_self_), _108121_selectors);
				if ((_106764_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106764_tokens[(_106764_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1abb04d22:;
			{
				if ((_107017_token.get()._field_kind != jule::Str("*", 1))) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106764_tokens[(_106764_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106764_tokens=_106764_tokens.slice(0LL,(_106764_tokens.len() - 1LL));
				if ((_106764_tokens.len() == 0LL)) {
					_1c43e3a38_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106744_decl.get()._field_full=true;
			}
		}
		_match_end_1abb04a7a:;
	};
	_106744_decl.get()._field_link_path=_1c43e2c13_tokstoa(_106764_tokens);
}



inline void _1c43ea5de_parse_use_decl(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd828a9_UseDecl>& _113038_decl, jule::Slice<jule::Ptr<_1db7061a7_Token>> _113058_tokens) {
	if (_113038_decl.get()._field_cpp_linked) {
		_1c43e9b82_build_cpp_use_decl(&(*_self_), _113038_decl,_113058_tokens);
		return;;
	};
	jule::Ptr<_1db7061a7_Token> _113617_token = _113058_tokens[0LL];;
	if ((_113617_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113058_tokens.len() > 2LL) && (_113058_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_113038_decl.get()._field_alias=_113617_token.get()._field_kind;
		if ((_113058_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_1c43e3a38_push_err(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1c43e3d57_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113058_tokens=_113058_tokens.slice(2LL);
		_113617_token=_113058_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1abb11427:;
			{
				_1c43e9ea1_build_std_use_decl(&(*_self_), _113038_decl,_113058_tokens);
			}
		}
		else {
			_case_begin_1abb134e5:;
			{
				_1c43ea2c0_build_ident_use_decl(&(*_self_), _113038_decl,_113058_tokens);
			}
		}
		_match_end_1abb1347e:;
	};
}



inline jule::Ptr<_1dcd828a9_UseDecl> _1c43ea996_build_use_decl(_1c43e30cb_Parser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _116437_tokens, jule::Bool _116455_cpp_linked) {
	jule::Ptr<_1dcd828a9_UseDecl> _116517_decl = jule::new_ptr<_1dcd828a9_UseDecl>(_1dcd828a9_UseDecl{._field_token=_116437_tokens[0LL], ._field_cpp_linked=_116455_cpp_linked, });;
	if ((_116437_tokens.len() < 2LL)) {
		_1c43e3a38_push_err(&(*_self_), _116517_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116437_tokens=_116437_tokens.slice(1LL);
	_1c43ea5de_parse_use_decl(&(*_self_), _116517_decl,_116437_tokens);
	return _116517_decl;
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c43ead70_build_type_enum_item_kind(jule::Ptr<_1c43e30cb_Parser> _self_, jule::I64& _117850_i, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _117863_tokens) {
	jule::I64 _117917_brace_n = 0LL;;
	jule::I64 _118013_expr_start = _117850_i;;
	for (; (_117850_i < _117863_tokens.len()); (_117850_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _118217_t = _117863_tokens[_117850_i];;
			if ((_118217_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1abb17a16:;
						{
							(_117917_brace_n)++;
							goto _iter_next_1abb17351;
						}
					}
					else {
						_case_begin_1abb183c9:;
						{
							(_117917_brace_n)--;
						}
					}
					_match_end_1abb181ba:;
				};
			};
			if ((_117917_brace_n > 0LL)) {
				goto _iter_next_1abb17351;
			};
			if (((_118217_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_117850_i + 1LL) >= _117863_tokens.len()))) {
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _119825_kind_tokens = nullptr;;
				if ((_118217_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_119825_kind_tokens=_117863_tokens.slice(_118013_expr_start,_117850_i);
				} else {
					_119825_kind_tokens=_117863_tokens.slice(_118013_expr_start);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_1dcd69d69_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _1c43e5452_build_type(_self_, _119825_kind_tokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kind_tokens.len())) {
					_1c43e3a38_push_err(_self_.ptr(), _119825_kind_tokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_1abb17351:;
	}
	_iter_end_1abb17351:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>> _1c43eb18e_build_type_enum_items(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _121546_tokens) {
	jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121546_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _121921_t = _121546_tokens[_121717_i];;
			jule::Ptr<_1dcd8435b_TypeEnumItemDecl> _122021_item = jule::new_ptr<_1dcd8435b_TypeEnumItemDecl>();;
			_122021_item.get()._field_token=_121921_t;
			if (((_122021_item.get()._field_token.get()._field_id == static_cast<jule::U64>(2LLU)) && ((_121546_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_ident=_122021_item.get()._field_token.get()._field_kind;
				_121921_t=_121546_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121546_tokens.len()) || (_121546_tokens[_121717_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
						_1c43e3a38_push_err(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1abb1d324;
					};
				};
			};
			_122021_item.get()._field_kind=_1c43ead70_build_type_enum_item_kind(_self_, _121717_i,_121546_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_1abb1d324:;
	}
	_iter_end_1abb1d324:;;
	return _121617_items;
}



inline jule::Ptr<_1dcd84559_TypeEnumDecl> _1c43eb49c_build_type_enum_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _123945_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_1dcd84559_TypeEnumDecl> _124117_e = jule::new_ptr<_1dcd84559_TypeEnumDecl>(_1dcd84559_TypeEnumDecl{._field_token=_123945_tokens[_124017_i], });;
	if ((_124117_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _124117_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_ident=_124117_e.get()._field_token.get()._field_kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _125017_item_tokens = _1c43e1283_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123945_tokens);;
	if ((_125017_item_tokens == nullptr)) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _124117_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123945_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _123945_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_end=_123945_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_items=_1c43eb18e_build_type_enum_items(_self_, _125017_item_tokens);
	return _124117_e;
}



inline jule::Ptr<_1dcd6e38a_Expr> _1c43eb854_build_enum_item_expr(jule::Ptr<_1c43e30cb_Parser> _self_, jule::I64& _126445_i, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _126458_tokens) {
	jule::I64 _126517_brace_n = 0LL;;
	jule::I64 _126613_expr_start = _126445_i;;
	for (; (_126445_i < _126458_tokens.len()); (_126445_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _126817_t = _126458_tokens[_126445_i];;
			if ((_126817_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126817_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1abb28bd1:;
						{
							(_126517_brace_n)++;
							goto _iter_next_1abb2851b;
						}
					}
					else {
						_case_begin_1abb29594:;
						{
							(_126517_brace_n)--;
						}
					}
					_match_end_1abb29385:;
				};
			};
			if ((_126517_brace_n > 0LL)) {
				goto _iter_next_1abb2851b;
			};
			if (((_126817_t.get()._field_id == static_cast<jule::U64>(8LLU)) || ((_126445_i + 1LL) >= _126458_tokens.len()))) {
				jule::Slice<jule::Ptr<_1db7061a7_Token>> _128425_expr_tokens = nullptr;;
				if ((_126817_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_128425_expr_tokens=_126458_tokens.slice(_126613_expr_start,_126445_i);
				} else {
					_128425_expr_tokens=_126458_tokens.slice(_126613_expr_start);
				};
				return _1c43e4165_build_expr(_self_, _128425_expr_tokens);
			};
		}
	_iter_next_1abb2851b:;
	}
	_iter_end_1abb2851b:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>> _1c43ebb62_build_enum_items(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _129641_tokens) {
	jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>> _129717_items = jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129817_i = 0LL;;
	for (; (_129817_i < _129641_tokens.len()); (_129817_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _130021_t = _129641_tokens[_129817_i];;
			jule::Ptr<_1dcd82d2c_EnumItemDecl> _130121_item = jule::new_ptr<_1dcd82d2c_EnumItemDecl>();;
			_130121_item.get()._field_token=_130021_t;
			if ((_130121_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_1c43e3a38_push_err(_self_.ptr(), _130121_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130121_item.get()._field_ident=_130121_item.get()._field_token.get()._field_kind;
			if ((((_129817_i + 1LL) >= _129641_tokens.len()) || (_129641_tokens[(_129817_i + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if (((_129817_i + 1LL) < _129641_tokens.len())) {
					(_129817_i)++;
				};
				_129717_items = jule::alloc_for_append(_129717_items,1);_129717_items.__push(_130121_item);;
				goto _iter_next_1abb2d048;
			};
			(_129817_i)++;
			_130021_t=_129641_tokens[_129817_i];
			(_129817_i)++;
			if ((_130021_t.get()._field_id != static_cast<jule::U64>(11LLU))) {
				_1c43e3a38_push_err(_self_.ptr(), _130021_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1abb2d048;
			};
			if (((_129817_i >= _129641_tokens.len()) || (_129641_tokens[_129817_i].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_1c43e3a38_push_err(_self_.ptr(), _130021_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1abb2d048;
			};
			_130121_item.get()._field_expr=_1c43eb854_build_enum_item_expr(_self_, _129817_i,_129641_tokens);
			_129717_items = jule::alloc_for_append(_129717_items,1);_129717_items.__push(_130121_item);;
		}
	_iter_next_1abb2d048:;
	}
	_iter_end_1abb2d048:;;
	return _129717_items;
}



inline jule::Ptr<_1dcd83855_EnumDecl> _1c43ebe70_build_enum_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _133340_tokens) {
	if ((_133340_tokens.len() < 3LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _133340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd83855_EnumDecl> _133817_e = jule::new_ptr<_1dcd83855_EnumDecl>(_1dcd83855_EnumDecl{._field_token=_133340_tokens[1LL], });;
	if ((_133817_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133817_e.get()._field_ident=_133817_e.get()._field_token.get()._field_kind;
	jule::I64 _134617_i = 2LL;;
	if ((_133340_tokens[_134617_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_134617_i)++;
		if ((_134617_i >= _133340_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _133340_tokens[(_134617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133817_e;
		};
		std::tie(_133817_e.get()._field_kind,std::ignore) = _1c43e5452_build_type(_self_, _133340_tokens,(&(_134617_i)),true);
		if ((_134617_i >= _133340_tokens.len())) {
			_1c43e340b_stop(_self_.ptr());
			_1c43e3a38_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133817_e;
		};
	} else {
		_133817_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _136317_item_tokens = _1c43e1283_range(_134617_i,jule::Str("{", 1),jule::Str("}", 1),_133340_tokens);;
	if ((_136317_item_tokens == nullptr)) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _133817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133817_e;
	} else if ((_134617_i < _133340_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _133340_tokens[_134617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133817_e.get()._field_end=_133340_tokens[(_134617_i - 1LL)];
	_133817_e.get()._field_items=_1c43ebb62_build_enum_items(_self_, _136317_item_tokens);
	return _133817_e;
}



inline jule::Any _1c43ec27d_build_node_enum_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _137745_tokens) {
	if (((_137745_tokens.len() > 3LL) && (_137745_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
		if ((_137745_tokens[3LL].get()._field_id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1c43eb49c_build_type_enum_decl(_self_, _137745_tokens));
		};
	};
	return static_cast<jule::Any>(_1c43ebe70_build_enum_decl(_self_, _137745_tokens));
}



inline jule::Ptr<_1dcd84aa9_FieldDecl> _1c43ec58b_build_field(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _138635_tokens) {
	jule::Ptr<_1dcd84aa9_FieldDecl> _138717_f = jule::new_ptr<_1dcd84aa9_FieldDecl>(_1dcd84aa9_FieldDecl{});;
	_138717_f.get()._field_public=(_138635_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_138717_f.get()._field_public) {
		if ((_138635_tokens.len() == 1LL)) {
			_1c43e3a38_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(1LL);
	};
	_138717_f.get()._field_mutable=(_138635_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_138717_f.get()._field_mutable) {
		if ((_138635_tokens.len() == 1LL)) {
			_1c43e3a38_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(1LL);
	};
	_138717_f.get()._field_token=_138635_tokens[0LL];
	if ((_138717_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _138717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138717_f.get()._field_ident=_138717_f.get()._field_token.get()._field_kind;
	if ((_138635_tokens.len() == 1LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _138635_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138635_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _138635_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138635_tokens=_138635_tokens.slice(2LL);
	jule::I64 _142417_i = 0LL;;
	std::tie(_138717_f.get()._field_kind,std::ignore) = _1c43e5452_build_type(_self_, _138635_tokens,(&(_142417_i)),true);
	if ((_142417_i < _138635_tokens.len())) {
		jule::Ptr<_1db7061a7_Token> _142717_token = _138635_tokens[_142417_i];;
		if (((_142717_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_142717_token.get()._field_kind != jule::Str("=", 1)))) {
			_1c43e3a38_push_err(_self_.ptr(), _138635_tokens[_142417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_142417_i)++;
		if ((_142417_i >= _138635_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _142717_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138635_tokens=_138635_tokens.slice(_142417_i);
		_138717_f.get()._field_default=_1c43e4165_build_expr(_self_, _138635_tokens);
	};
	return _138717_f;
}



inline jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>> _1c43ec8bb_build_struct_decl_fields(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _144448_tokens) {
	jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>> _144517_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _144617_stmts = _1c43c6db2_split_stmts(_144448_tokens);;
	{
		auto &expr = _144617_stmts;
		auto it = expr.begin();
		_iter_begin_1abb4b253:;
		if (it != expr.end()) {
			jule::Ptr<_1c43c6a1b_stmt> _144721_stmt = *it;
			{
				_144448_tokens=_144721_stmt.get()._field_tokens;
				jule::Ptr<_1dcd84aa9_FieldDecl> _144921_f = _1c43ec58b_build_field(_self_, _144448_tokens);;
				_144517_fields = jule::alloc_for_append(_144517_fields,1);_144517_fields.__push(_144921_f);;
			}
			_iter_next_1abb4b253:;
			++it;
			goto _iter_begin_1abb4b253;
		}
		_iter_end_1abb4b253:;
	};
	return _144517_fields;
}



inline jule::Ptr<_1dcd85417_StructDecl> _1c43ecbda_build_struct_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _145542_tokens) {
	if ((_145542_tokens.len() < 3LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _145542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _146117_i = 1LL;;
	jule::Ptr<_1dcd85417_StructDecl> _146217_s = jule::new_ptr<_1dcd85417_StructDecl>(_1dcd85417_StructDecl{._field_token=_145542_tokens[_146117_i], });;
	if ((_146217_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _146217_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_146117_i)++;
	if ((_146117_i >= _145542_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _145542_tokens[_146117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _146217_s;
	};
	_146217_s.get()._field_ident=_146217_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1db7061a7_Token> _147613_error_token = _145542_tokens[_146117_i];;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _147717_generics_tokens = _1c43e1283_range(_146117_i,jule::Str("[", 1),jule::Str("]", 1),_145542_tokens);;
	if ((_147717_generics_tokens != nullptr)) {
		_146217_s.get()._field_generics=_1c43e6be5_build_generics(_self_, _147717_generics_tokens,_147613_error_token);
	};
	if ((_146117_i >= _145542_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _145542_tokens[(_146117_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _146217_s;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _148717_body_tokens = _1c43e1283_range(_146117_i,jule::Str("{", 1),jule::Str("}", 1),_145542_tokens);;
	if ((_148717_body_tokens == nullptr)) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _146217_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _146217_s;
	};
	if ((_146117_i < _145542_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _145542_tokens[_146117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_146217_s.get()._field_fields=_1c43ec8bb_build_struct_decl_fields(_self_, _148717_body_tokens);
	_146217_s.get()._field_end=_145542_tokens[(_146117_i - 1LL)];
	return _146217_s;
}



inline void _1c43ece60_check_method_receiver(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd7bb7d_FnDecl>& _150241_f) {
	if (_150241_f.get()._field_statically) {
		if (((_150241_f.get()._field_params.len() > 0LL) && _1dcd7abc1_is_self(_150241_f.get()._field_params[0LL].ptr()))) {
			_1c43e3a38_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_150241_f.get()._field_params.len() == 0LL)) {
		_1c43e3a38_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd7a85d_ParamDecl> _151513_param = _150241_f.get()._field_params[0LL];;
	if ((!(_1dcd7abc1_is_self(_151513_param.ptr())))) {
		_1c43e3a38_push_err(&(*_self_), _150241_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>> _1c43ed26d_build_trait_methods(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _152243_tokens) {
	jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>> _152317_methods = nullptr;;
	jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _152417_stmts = _1c43c6db2_split_stmts(_152243_tokens);;
	{
		auto &expr = _152417_stmts;
		auto it = expr.begin();
		_iter_begin_1abb5a63b:;
		if (it != expr.end()) {
			jule::Ptr<_1c43c6a1b_stmt> _152521_stmt = *it;
			{
				_152243_tokens=_152521_stmt.get()._field_tokens;
				if ((_152243_tokens.len() == 0LL)) {
					goto _iter_next_1abb5a63b;
				};
				jule::Bool _153121_is_pub = false;;
				if ((_152243_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_153121_is_pub=true;
					if ((_152243_tokens.len() == 1LL)) {
						_1c43e3a38_push_err(_self_.ptr(), _152243_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1abb5a63b;
					};
					_152243_tokens=_152243_tokens.slice(1LL);
				};
				jule::Ptr<_1dcd7bb7d_FnDecl> _154121_f = _1c43e9555_build_fn(_self_, _152243_tokens,true,true);;
				if ((_154121_f != nullptr)) {
					if (_1dcd7bed0_is_anon(_154121_f.ptr())) {
						_1c43e3a38_push_err(_self_.ptr(), _154121_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1c43ece60_check_method_receiver(_self_.ptr(), _154121_f);
					if ((_154121_f.get()._field_generics.len() > 0LL)) {
						_1c43e3a38_push_err(_self_.ptr(), _154121_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_154121_f.get()._field_public=_153121_is_pub;
					_152317_methods = jule::alloc_for_append(_152317_methods,1);_152317_methods.__push(_154121_f);;
				};
			}
			_iter_next_1abb5a63b:;
			++it;
			goto _iter_begin_1abb5a63b;
		}
		_iter_end_1abb5a63b:;
	};
	return _152317_methods;
}



inline jule::Ptr<_1dcd85a22_TraitDecl> _1c43ed57b_build_trait_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _155741_tokens) {
	if ((_155741_tokens.len() < 3LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _155741_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd85a22_TraitDecl> _156217_t = jule::new_ptr<_1dcd85a22_TraitDecl>(_1dcd85a22_TraitDecl{._field_token=_155741_tokens[1LL], });;
	if ((_156217_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _156217_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_156217_t.get()._field_ident=_156217_t.get()._field_token.get()._field_kind;
	jule::I64 _157017_i = 2LL;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _157117_body_tokens = _1c43e1283_range(_157017_i,jule::Str("{", 1),jule::Str("}", 1),_155741_tokens);;
	if ((_157117_body_tokens == nullptr)) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _156217_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_157017_i < _155741_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _155741_tokens[_157017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_156217_t.get()._field_methods=_1c43ed26d_build_trait_methods(_self_, _157117_body_tokens);
	_156217_t.get()._field_end=_155741_tokens[(_157017_i - 1LL)];
	return _156217_t;
}



inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43ed889_build_cpp_link_fn(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _158641_tokens) {
	_158641_tokens=_158641_tokens.slice(1LL);
	jule::Ptr<_1dcd7bb7d_FnDecl> _158817_f = _1c43e9555_build_fn(_self_, _158641_tokens,false,true);;
	if ((_158817_f != nullptr)) {
		if (_1dcd7bed0_is_anon(_158817_f.ptr())) {
			_1c43e3a38_push_err(_self_.ptr(), _158817_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_158817_f.get()._field_cpp_linked=true;
	};
	return _158817_f;
}



inline jule::Ptr<_1dcd7cb5c_VarDecl> _1c43edb97_build_cpp_link_var(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _159842_tokens) {
	_159842_tokens=_159842_tokens.slice(1LL);
	jule::Ptr<_1dcd7cb5c_VarDecl> _160017_v = _1c43e6530_build_var(_self_, _159842_tokens);;
	if ((_160017_v != nullptr)) {
		_160017_v.get()._field_cpp_linked=true;
		if ((_160017_v.get()._field_expr != nullptr)) {
			_1c43e3a38_push_err(_self_.ptr(), _160017_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _160017_v;
}



inline jule::Ptr<_1dcd85417_StructDecl> _1c43edea5_build_cpp_link_struct(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _161045_tokens) {
	_161045_tokens=_161045_tokens.slice(1LL);
	jule::Ptr<_1dcd85417_StructDecl> _161217_s = _1c43ecbda_build_struct_decl(_self_, _161045_tokens);;
	if ((_161217_s != nullptr)) {
		_161217_s.get()._field_cpp_linked=true;
	};
	return _161217_s;
}



inline jule::Ptr<_1dcd814bd_TypeAliasDecl> _1c43ee2d5_build_cpp_link_type_alias(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _161949_tokens) {
	_161949_tokens=_161949_tokens.slice(1LL);
	jule::Ptr<_1dcd814bd_TypeAliasDecl> _162117_t = _1c43e5760_build_type_alias_decl(_self_, _161949_tokens);;
	if ((_162117_t != nullptr)) {
		_162117_t.get()._field_cpp_linked=true;
	};
	return _162117_t;
}



inline jule::Ptr<_1dcd828a9_UseDecl> _1c43ee604_build_cpp_link_use(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _162842_tokens) {
	if ((_162842_tokens.len() == 1LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _162842_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162842_tokens=_162842_tokens.slice(1LL);
	;
	return _1c43ea996_build_use_decl(_self_.ptr(), _162842_tokens,true);
}



inline jule::Any _1c43ee912_build_cpp_link(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _163939_tokens) {
	jule::Ptr<_1db7061a7_Token> _164017_token = _163939_tokens[0LL];;
	if ((_163939_tokens.len() == 1LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _164017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_164017_token=_163939_tokens[1LL];
	{
		auto &_match_expr{ _164017_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1abb70541:;
			{
				return static_cast<jule::Any>(_1c43ed889_build_cpp_link_fn(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1abb71256:;
			{
				return static_cast<jule::Any>(_1c43edb97_build_cpp_link_var(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1abb712bc:;
			{
				return static_cast<jule::Any>(_1c43edea5_build_cpp_link_struct(_self_, _163939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1abb71333:;
			{
				return static_cast<jule::Any>(_1c43ee2d5_build_cpp_link_type_alias(_self_, _163939_tokens));
			}
		}
		else {
			_case_begin_1abb71168:;
			{
				_1c43e3a38_push_err(_self_.ptr(), _164017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abb71102:;
	};
	return nullptr;
}



inline jule::Ptr<_1dcd7bb7d_FnDecl> _1c43eec20_get_method(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _166335_tokens) {
	jule::I64 _166417_i = 0LL;;
	jule::Ptr<_1db7061a7_Token> _166517_token = _166335_tokens[_166417_i];;
	if ((_166517_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_166417_i + 1LL) >= _166335_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166417_i)++;
		_166517_token=_166335_tokens[_166417_i];
	};
	if ((_166517_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_166417_i + 1LL) >= _166335_tokens.len())) {
			_1c43e3a38_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166417_i)++;
		_166517_token=_166335_tokens[_166417_i];
	};
	if ((_166517_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_1c43e3a38_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd7bb7d_FnDecl> _168917_f = _1c43e9555_build_fn(_self_, _166335_tokens,true,false);;
	if (((_168917_f != nullptr) && _1dcd7bed0_is_anon(_168917_f.ptr()))) {
		_1c43e3a38_push_err(_self_.ptr(), _168917_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168917_f;
}



inline void _1c440003e_parse_impl_body(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1dcd8612c_Impl>& _169640_ipl, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _169657_tokens) {
	jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _169717_stmts = _1c43c6db2_split_stmts(_169657_tokens);;
	{
		auto &expr = _169717_stmts;
		auto it = expr.begin();
		_iter_begin_1abb7965a:;
		if (it != expr.end()) {
			jule::Ptr<_1c43c6a1b_stmt> _169821_stmt = *it;
			{
				_169657_tokens=_169821_stmt.get()._field_tokens;
				jule::Ptr<_1db7061a7_Token> _170021_token = _169657_tokens[0LL];;
				jule::Bool _170121_is_pub = false;;
				{
					auto &_match_expr{ _170021_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1abb7adba:;
						{
							_1c43e46e8_push_directive(_self_.ptr(), _1c43e4473_build_directive(_self_.ptr(), _169657_tokens));
							goto _iter_next_1abb7965a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1abb7ae64:;
						{
							_170121_is_pub=true;
							if ((_169657_tokens.len() == 1LL)) {
								_1c43e3a38_push_err(_self_.ptr(), _169657_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1abb7965a;
							};
							_169657_tokens=_169657_tokens.slice(1LL);
							if ((_169657_tokens.len() > 0LL)) {
								_170021_token=_169657_tokens[0LL];
							};
						}
					}
					_match_end_1abb7ad54:;
				};
				{
					auto &_match_expr{ _170021_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1abb79e41:;
						{
							jule::Ptr<_1dcd7cb5c_VarDecl> _172025_v = _1c43e6530_build_var(_self_, _169657_tokens);;
							if ((_172025_v != nullptr)) {
								_172025_v.get()._field_public=_170121_is_pub;
								_169640_ipl.get()._field_statics = jule::alloc_for_append(_169640_ipl.get()._field_statics,1);_169640_ipl.get()._field_statics.__push(_172025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1abb7bbac:;
						{
							jule::Ptr<_1dcd7bb7d_FnDecl> _172825_f = _1c43eec20_get_method(_self_, _169657_tokens);;
							if ((_172825_f != nullptr)) {
								_1c43ece60_check_method_receiver(_self_.ptr(), _172825_f);
								_1c4400979_apply_fn_meta(_self_.ptr(), _172825_f,_170121_is_pub);
								_169640_ipl.get()._field_methods = jule::alloc_for_append(_169640_ipl.get()._field_methods,1);_169640_ipl.get()._field_methods.__push(_172825_f);;
							};
						}
					}
					else {
						_case_begin_1abb7b360:;
						{
							_1c43e3a38_push_err(_self_.ptr(), _170021_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1abb7965a;
						}
					}
					_match_end_1abb7d197:;
				};
			}
			_iter_next_1abb7965a:;
			++it;
			goto _iter_begin_1abb7965a;
		}
		_iter_end_1abb7965a:;
	};
}



inline jule::Ptr<_1dcd8612c_Impl> _1c440034c_build_impl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _174134_tokens) {
	jule::Ptr<_1db7061a7_Token> _174217_token = _174134_tokens[0LL];;
	if ((_174134_tokens.len() < 2LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _174217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _174817_i = 1LL;;
	jule::Ptr<_1dcd69d69_TypeDecl> _175018_base;;
	jule::Bool _175028_ok;;
	std::tie(_175018_base,_175028_ok) = _1c43e5452_build_type(_self_, _174134_tokens,(&(_174817_i)),true);
	if ((!(_175028_ok))) {
		return nullptr;
	};
	if ((_174817_i >= _174134_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _174217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dcd8612c_Impl> _175917_ipl = jule::new_ptr<_1dcd8612c_Impl>(_1dcd8612c_Impl{._field_base=_175018_base, });;
	_174217_token=_174134_tokens[_174817_i];
	if ((_174217_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_174217_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_174217_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_175917_ipl.get()._field_base,_175917_ipl.get()._field_dest) = std::make_tuple(_175917_ipl.get()._field_dest,_175917_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_174817_i)++;
	if ((_174817_i >= _174134_tokens.len())) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_175917_ipl.get()._field_dest,_175028_ok) = _1c43e5452_build_type(_self_, _174134_tokens,(&(_174817_i)),true);
	if ((!(_175028_ok))) {
		return nullptr;
	};
	if ((_174817_i >= _174134_tokens.len())) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _179917_body_tokens = _1c43e1283_range(_174817_i,jule::Str("{", 1),jule::Str("}", 1),_174134_tokens);;
	if ((_179917_body_tokens == nullptr)) {
		_1c43e340b_stop(_self_.ptr());
		_1c43e3a38_push_err(_self_.ptr(), _174217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_174817_i < _174134_tokens.len())) {
		_1c43e3a38_push_err(_self_.ptr(), _174134_tokens[_174817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_175917_ipl.get()._field_end=_174134_tokens[(_174817_i - 1LL)];
	_1c440003e_parse_impl_body(_self_, _175917_ipl,_179917_body_tokens);
	return _175917_ipl;
}



inline jule::Any _1c440065a_build_node_data(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _181440_tokens) {
	jule::Ptr<_1db7061a7_Token> _181517_token = _181440_tokens[0LL];;
	{
		auto &_match_expr{ _181517_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aa74ea5b:;
			{
				jule::Ptr<_1dcd7bb7d_FnDecl> _181921_f = _1c43e9555_build_fn(_self_, _181440_tokens,false,false);;
				if ((_181921_f != nullptr)) {
					_181921_f.get()._field_global=true;
					if (_1dcd7bed0_is_anon(_181921_f.ptr())) {
						_1c43e3a38_push_err(_self_.ptr(), _181921_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_181921_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1aa74eac2:;
			{
				return static_cast<jule::Any>(_1c43e6530_build_var(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aa7502cb:;
			{
				return static_cast<jule::Any>(_1c43e5760_build_type_alias_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1aa750342:;
			{
				return _1c43ec27d_build_node_enum_decl(_self_, _181440_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1aa7503a8:;
			{
				return static_cast<jule::Any>(_1c43ecbda_build_struct_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa75041e:;
			{
				return static_cast<jule::Any>(_1c43ed57b_build_trait_decl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aa750485:;
			{
				return static_cast<jule::Any>(_1c440034c_build_impl(_self_, _181440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa75050c:;
			{
				return _1c43ee912_build_cpp_link(_self_, _181440_tokens);
			}
		}
		else {
			_case_begin_1aa74e94b:;
			{
				_1c43e3a38_push_err(_self_.ptr(), _181517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa74e8a2:;
	};
}



inline void _1c4400979_apply_fn_meta(_1c43e30cb_Parser* _self_, jule::Ptr<_1dcd7bb7d_FnDecl>& _185037_f, jule::Bool _185049_is_pub) {
	_185037_f.get()._field_public=_185049_is_pub;
	_185037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1c4400c98_apply_meta(_1c43e30cb_Parser* _self_, _1dcd36275_Node& _185634_node, jule::Bool _185646_is_pub) {
	{
		auto &_match_expr{ _185634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd7cb5c_VarDecl>>()) {
			_case_begin_1aa75716d:;
			{
				jule::Ptr<_1dcd7cb5c_VarDecl> _185921_v = _185634_node._field_data.operator jule::Ptr<_1dcd7cb5c_VarDecl>();;
				if ((_185921_v == nullptr)) {
					return;;
				};
				_185921_v.get()._field_public=_185646_is_pub;
				_185921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd7bb7d_FnDecl>>()) {
			_case_begin_1aa7567bb:;
			{
				jule::Ptr<_1dcd7bb7d_FnDecl> _186721_f = _185634_node._field_data.operator jule::Ptr<_1dcd7bb7d_FnDecl>();;
				if ((_186721_f == nullptr)) {
					return;;
				};
				_1c4400979_apply_fn_meta(&(*_self_), _186721_f,_185646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd814bd_TypeAliasDecl>>()) {
			_case_begin_1aa756843:;
			{
				jule::Ptr<_1dcd814bd_TypeAliasDecl> _187321_tad = _185634_node._field_data.operator jule::Ptr<_1dcd814bd_TypeAliasDecl>();;
				if ((_187321_tad == nullptr)) {
					return;;
				};
				_187321_tad.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd83855_EnumDecl>>()) {
			_case_begin_1aa7568ba:;
			{
				jule::Ptr<_1dcd83855_EnumDecl> _187921_ed = _185634_node._field_data.operator jule::Ptr<_1dcd83855_EnumDecl>();;
				if ((_187921_ed == nullptr)) {
					return;;
				};
				_187921_ed.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd84559_TypeEnumDecl>>()) {
			_case_begin_1aa756bc8:;
			{
				jule::Ptr<_1dcd84559_TypeEnumDecl> _188521_ted = _185634_node._field_data.operator jule::Ptr<_1dcd84559_TypeEnumDecl>();;
				if ((_188521_ted == nullptr)) {
					return;;
				};
				_188521_ted.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd85417_StructDecl>>()) {
			_case_begin_1aa756c3e:;
			{
				jule::Ptr<_1dcd85417_StructDecl> _189121_sd = _185634_node._field_data.operator jule::Ptr<_1dcd85417_StructDecl>();;
				if ((_189121_sd == nullptr)) {
					return;;
				};
				_189121_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_189121_sd.get()._field_public=_185646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd85a22_TraitDecl>>()) {
			_case_begin_1aa756ca5:;
			{
				jule::Ptr<_1dcd85a22_TraitDecl> _189921_td = _185634_node._field_data.operator jule::Ptr<_1dcd85a22_TraitDecl>();;
				if ((_189921_td == nullptr)) {
					return;;
				};
				_189921_td.get()._field_public=_185646_is_pub;
			}
		}
		else {
			_case_begin_1aa756722:;
			{
				if (_185646_is_pub) {
					_1c43e3a38_push_err(&(*_self_), _185634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1aa756579:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _1c44010c8_build_general_scope_node_data(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _191153_st) {
	jule::Bool _191169_is_pub = jule::Bool();
	jule::Any _191183_data = jule::Any();
	if ((_191153_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_191169_is_pub=true;
		_191153_st=_191153_st.slice(1LL);
		if ((_191153_st.len() == 0LL)) {
			_1c43e3a38_push_err(_self_.ptr(), _191153_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_191169_is_pub,_191183_data);
		};
	};
	_191183_data=_1c440065a_build_node_data(_self_, _191153_st);
	return std::make_tuple(_191169_is_pub,_191183_data);
}



inline void _1c440135e_push_use_decl(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1dcd828a9_UseDecl>& _192638_decl) {
	_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_192638_decl);;
	if ((_self_.get()._field_ast.get()._field_nodes.len() > 0LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _192638_decl.get()._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1c43e3d57_push_suggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c440166c_push_meta_nodes(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _193440_tokens) {
	{
		auto &_match_expr{ _193440_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa7647c9:;
			{
				;
				jule::Ptr<_1dcd828a9_UseDecl> _193821_decl = _1c43ea996_build_use_decl(_self_.ptr(), _193440_tokens,false);;
				_1c440135e_push_use_decl(_self_, _193821_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa764840:;
			{
				if (((_193440_tokens.len() > 1LL) && (_193440_tokens[1LL].get()._field_id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1dcd828a9_UseDecl> _194325_decl = _1c43ee604_build_cpp_link_use(_self_, _193440_tokens);;
					_1c440135e_push_use_decl(_self_, _194325_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1aa7648b7:;
			{
				_1c43e46e8_push_directive(_self_.ptr(), _1c43e4473_build_directive(_self_.ptr(), _193440_tokens));
				return true;
			}
		}
		_match_end_1aa7646ca:;
	};
	return false;
}



inline _1dcd36275_Node _1c440197a_parse_node(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _195435_st) {
	_1dcd36275_Node _195517_node = _1dcd36275_Node{._field_token=_195435_st[0LL], };;
	if (_1c440166c_push_meta_nodes(_self_, _195435_st)) {
		return _195517_node;
	};
	jule::Bool _196314_is_pub;;
	jule::Any _196326_data;;
	std::tie(_196314_is_pub,_196326_data) = _1c44010c8_build_general_scope_node_data(_self_, _195435_st);
	if ((_196326_data == nullptr)) {
		return _195517_node;
	};
	_195517_node._field_data=_196326_data;
	_1c4400c98_apply_meta(_self_.ptr(), _195517_node,_196314_is_pub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _195517_node;
}



inline void _1c4401c00_append_node(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _197836_st) {
	if ((_197836_st.len() == 0LL)) {
		return;;
	};
	_1dcd36275_Node _198317_node = _1c440197a_parse_node(_self_, _197836_st);;
	if (((_198317_node._field_data == nullptr) || _1c43e3670_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_198317_node);;
}



inline void _1c4402162_remove_range(_1c43e30cb_Parser* _self_, jule::I64 _199031_i, jule::Str _199039_kind, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _199051_tokens, jule::Slice<jule::I64>& _199074_ranges) {
	jule::Str _199113_close = _1c43e2141_get_close_kind_of_brace(_199039_kind);;
	for (; (_199031_i >= 0LL); (_199031_i)--) {
		{
			jule::Ptr<_1db7061a7_Token> _199317_tok = _199051_tokens[_199074_ranges[_199031_i]];;
			if ((_199317_tok.get()._field_kind != _199113_close)) {
				goto _iter_next_1aa76e3e9;
			};
			_199074_ranges=jule::append(_199074_ranges.slice(0LL,_199031_i),_199074_ranges.slice((_199031_i + 1LL)));
			goto _iter_end_1aa76e3e9;
		}
	_iter_next_1aa76e3e9:;
	}
	_iter_end_1aa76e3e9:;;
}



inline void _1c440254c_push_wrong_order_close_err(_1c43e30cb_Parser* _self_, jule::Ptr<_1db7061a7_Token>& _200246_t, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _200258_tokens, jule::Slice<jule::I64>& _200277_ranges) {
	{
		auto &_match_expr{ _200258_tokens[_200277_ranges[(_200277_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1aa771550:;
			{
				_1c43e3a38_push_err(&(*_self_), _200246_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1aa7715c7:;
			{
				_1c43e3a38_push_err(&(*_self_), _200246_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1aa77164e:;
			{
				_1c43e3a38_push_err(&(*_self_), _200246_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa77141d:;
	};
}



inline void _1c44029c0_push_range_close(_1c43e30cb_Parser* _self_, jule::Ptr<_1db7061a7_Token> _201335_t, jule::Str _201346_left, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _201358_tokens, jule::Slice<jule::I64>& _201381_ranges) {
	jule::I64 _201413_n = _201381_ranges.len();;
	if ((_201413_n == 0LL)) {
		{
			auto &_match_expr{ _201335_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1aa7741e0:;
				{
					_1c43e3a38_push_err(&(*_self_), _201335_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1aa774256:;
				{
					_1c43e3a38_push_err(&(*_self_), _201335_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1aa7742cd:;
				{
					_1c43e3a38_push_err(&(*_self_), _201335_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1aa773e8c:;
		};
		return;;
	} else if ((_201358_tokens[_201381_ranges[(_201413_n - 1LL)]].get()._field_kind != _201346_left)) {
		_1c440254c_push_wrong_order_close_err(&(*_self_), _201335_t,_201358_tokens,_201381_ranges);
	};
	_1c4402162_remove_range(&(*_self_), static_cast<jule::I64>((_201413_n - 1LL)),_201335_t.get()._field_kind,_201358_tokens,_201381_ranges);
}



inline void _1c4402c45_check_ranges(_1c43e30cb_Parser* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _203132_tokens) {
	jule::Slice<jule::I64> _203217_ranges = nullptr;;
	{
		auto &expr = _203132_tokens;
		auto it = expr.begin();
		_iter_begin_1aa7774e0:;
		if (it != expr.end()) {
			jule::I64 _203413_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> &_203416_token = *it;
			{
				if ((_203416_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1aa7774e0;
				};
				{
					auto &_match_expr{ _203416_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1aa778777:;
						{
							_203217_ranges = jule::alloc_for_append(_203217_ranges,1);_203217_ranges.__push(_203413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aa778821:;
						{
							_1c44029c0_push_range_close(&(*_self_), _203416_token,jule::Str("(", 1),_203132_tokens,_203217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1aa778887:;
						{
							_1c44029c0_push_range_close(&(*_self_), _203416_token,jule::Str("{", 1),_203132_tokens,_203217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1aa7788ed:;
						{
							_1c44029c0_push_range_close(&(*_self_), _203416_token,jule::Str("[", 1),_203132_tokens,_203217_ranges);
						}
					}
					_match_end_1aa778304:;
				};
			}
			_iter_next_1aa7774e0:;
			++it;
			_203413_i++;
			goto _iter_begin_1aa7774e0;
		}
		_iter_end_1aa7774e0:;
	};
	{
		auto &expr = _203217_ranges;
		auto it = expr.begin();
		_iter_begin_1aa77a229:;
		if (it != expr.end()) {
			jule::I64 _205216_i = *it;
			{
				jule::Ptr<_1db7061a7_Token> _205317_token = _203132_tokens[_205216_i];;
				{
					auto &_match_expr{ _205317_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1aa77b093:;
						{
							_1c43e3a38_push_err(&(*_self_), _205317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1aa77b11a:;
						{
							_1c43e3a38_push_err(&(*_self_), _205317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1aa77b192:;
						{
							_1c43e3a38_push_err(&(*_self_), _205317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1aa77aec7:;
				};
			}
			_iter_next_1aa77a229:;
			++it;
			goto _iter_begin_1aa77a229;
		}
		_iter_end_1aa77a229:;
	};
}



inline void _1c4402eba_parse(jule::Ptr<_1c43e30cb_Parser> _self_, jule::Ptr<_1db70b542_File>& _206530_f) {
	_self_.get()._field_ast=jule::new_ptr<_1dcd355c6_Ast>(_1dcd355c6_Ast{._field_file=_206530_f, });
	_1c4402c45_check_ranges(_self_.ptr(), _206530_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _207517_stmts = _1c43c6db2_split_stmts(_206530_f.get()._field_tokens);;
	jule::I64 _207817_i = 0LL;;
	for (; (_207817_i < _207517_stmts.len()); (_207817_i)++) {
		{
			jule::Ptr<_1c43c6a1b_stmt> _208021_stmt = _207517_stmts[_207817_i];;
			if ((_208021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_208021_stmt.get()._field_tokens[0LL].get()._field_id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_1aa77e261;
			};
			if ((!(_207b82ddc_is_top_directive(_208021_stmt.get()._field_tokens[1LL].get()._field_kind)))) {
				goto _iter_end_1aa77e261;
			};
			_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_1c43e4473_build_directive(_self_.ptr(), _208021_stmt.get()._field_tokens));;
		}
	_iter_next_1aa77e261:;
	}
	_iter_end_1aa77e261:;;
	_self_.get()._field_errors=nullptr;
	for (; (_207817_i < _207517_stmts.len()); (_207817_i)++) {
		{
			jule::Ptr<_1c43c6a1b_stmt> _209721_stmt = _207517_stmts[_207817_i];;
			_1c4401c00_append_node(_self_, _209721_stmt.get()._field_tokens);
			if (_1c43e3670_stopped(_self_.ptr())) {
				goto _iter_end_1aa781d46;
			};
		}
	_iter_next_1aa781d46:;
	}
	_iter_end_1aa781d46:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c43e3a38_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c43e30cb_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1c4404a49_push_err(_1c44044a5_TypeBuilder* _self_, jule::Ptr<_1db7061a7_Token> _7327_token, jule::Str _7342_fmt) {
	if ((*_self_)._field_err) {
		_1c43e3a38_push_err((*_self_)._field_p.ptr(), _7327_token,_7342_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1c4404d68_push_suggestion(_1c44044a5_TypeBuilder* _self_, jule::Str _8034_fmt, jule::Slice<jule::Any> _8047_args) {
	if ((*_self_)._field_err) {
		_1c43e3d57_push_suggestion((*_self_)._field_p.ptr(), _8034_fmt,jule::Any(_8047_args));
	};
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44050cc_build_prim(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1dcd69d69_TypeDecl> _8717_t = _1c4403b58_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4405341_build_namespace(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1dcd69d69_TypeDecl> _9317_t = jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1dcd6ae36_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_1dcd6ae36_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1db7061a7_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_1c4404a49_push_err(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_1c4404d68_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_idents = jule::alloc_for_append(_9717_nst.get()._field_idents,1);_9717_nst.get()._field_idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1aa78bbec;
			};
			(_9817_n)++;
		}
	_iter_next_1aa78bbec:;
	}
	_iter_end_1aa78bbec:;;
	_9717_nst.get()._field_idents=_9717_nst.get()._field_idents.slice(0LL,(_9717_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_kind=_1c4405a7d_build_ident(&(*_self_));
	_9317_t.get()._field_kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _1c44055a5_build_generics(_1c44044a5_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1db7061a7_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _13117_parts = _1c4405819_ident_generics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_1c4404a49_push_err(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_1dcd69d69_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_1aa79483c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_1dcd69d69_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _1c43e5452_build_type((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_1c4404a49_push_err(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_1aa79483c:;
			++it;
			goto _iter_begin_1aa79483c;
		}
		_iter_end_1aa79483c:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c4405819_ident_generics(_1c44044a5_TypeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1db7061a7_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1aa798511:;
						{
							(_15117_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1aa798588:;
						{
							(_15117_range_n)--;
						}
					}
					_match_end_1aa7982d0:;
				};
			};
			if ((_15117_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1aa79717a;
			};
		}
	_iter_next_1aa79717a:;
	}
	_iter_end_1aa79717a:;;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _16818_parts;;
	jule::Slice<_207b80eb7_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _1c43e1d77_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4405a7d_build_ident(_1c44044a5_TypeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _1c4405341_build_namespace(&(*_self_));
	};
	jule::Ptr<_1db7061a7_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1dcd6a430_IdentTypeDecl> _18117_it = jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_18017_token, ._field_ident=_18017_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1dcd69d69_TypeDecl> _18717_itd = jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_18017_token, ._field_kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_generics=_1c44055a5_build_generics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1c4404a49_push_err(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U64>(2LLU))) {
		_1c4404a49_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_1dcd6aa7e_SubIdentTypeDecl>();;
	_20417_sit.get()._field_idents = jule::alloc_for_append(_20417_sit.get()._field_idents,1);_20417_sit.get()._field_idents.__push(_18117_it);;
	jule::Ptr<_1dcd69d69_TypeDecl> _20617_ident = _1c4405a7d_build_ident(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd6a430_IdentTypeDecl>>()) {
			_case_begin_1aa7a372a:;
			{
				_20417_sit.get()._field_idents = jule::alloc_for_append(_20417_sit.get()._field_idents,1);_20417_sit.get()._field_idents.__push(_20617_ident.get()._field_kind.operator jule::Ptr<_1dcd6a430_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>>()) {
			_case_begin_1aa7a37e6:;
			{
				_20417_sit.get()._field_idents=jule::append(_20417_sit.get()._field_idents,_20617_ident.get()._field_kind.operator jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>().get()._field_idents);
			}
		}
		_match_end_1aa7a36c5:;
	};
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_18017_token, ._field_kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4405ce2_build_cpp_link(_1c44044a5_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_1c4404a49_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1dcd69d69_TypeDecl> _22517_t = _1c4405a7d_build_ident(&(*_self_));;
	_22517_t.get()._field_kind.operator jule::Ptr<_1dcd6a430_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _22517_t;
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406056_build_fn(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1dcd7bb7d_FnDecl> _23217_f = _1c43e9104_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1dcd7bed0_is_anon(_23217_f.ptr())))) {
		_1c4404a49_push_err(&(*_self_), _23217_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_23117_token, ._field_kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44062ba_build_ptr(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c4404a49_push_err(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_24617_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6bbe5_PtrTypeDecl>(_1dcd6bbe5_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1dcd69d69_TypeDecl> _26317_elem = _1c44075eb_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_24617_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6bbe5_PtrTypeDecl>(_1dcd6bbe5_PtrTypeDecl{._field_elem=_26317_elem}))});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c440652e_build_sptr(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c4404a49_push_err(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1dcd69d69_TypeDecl> _28417_elem = _1c44075eb_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_27717_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6b222_SptrTypeDecl>(_1dcd6b222_SptrTypeDecl{._field_elem=_28417_elem}))});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406793_build_op(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aa7b1d98:;
			{
				return _1c44062ba_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aa7b1e0e:;
			{
				return _1c440652e_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aa7b1e75:;
			{
				return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6b222_SptrTypeDecl>(_1dcd6b222_SptrTypeDecl{._field_elem=_1c440652e_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1aa7b1cdd:;
			{
				_1c4404a49_push_err(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1aa7b1c44:;
	};
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406a07_build_slc(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1dcd69d69_TypeDecl> _31917_elem = _1c44075eb_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_31717_token, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6b61d_SlcTypeDecl>(_1dcd6b61d_SlcTypeDecl{._field_elem=_31917_elem}))});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4406c6b_build_arr(_1c44044a5_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1c4404a49_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1dcd69d69_TypeDecl> _34217_elem = _1c44075eb_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1dcd6c377_ArrTypeDecl> _34717_arrt = jule::new_ptr<_1dcd6c377_ArrTypeDecl>(_1dcd6c377_ArrTypeDecl{._field_elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _35117_expr_tokens = (*_self_)._field_tokens.slice(0LL,_34013_expr_delta);;
	std::tie(std::ignore,_35117_expr_tokens) = _1c43e152a_range_last(_35117_expr_tokens);
	_35117_expr_tokens=_35117_expr_tokens.slice(1LL,(_35117_expr_tokens.len() - 1LL));
	jule::Ptr<_1db7061a7_Token> _35417_token = _35117_expr_tokens[0LL];;
	if ((((_35117_expr_tokens.len() == 1LL) && (_35417_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_size=_1c43e4165_build_expr((*_self_)._field_p, _35117_expr_tokens);
	};
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_35417_token, ._field_kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4407123_build_map(_1c44044a5_TypeBuilder* _self_, jule::I64 _36735_start, jule::I64 _36747_delim) {
	jule::Ptr<_1db7061a7_Token> _36817_delim_token = (*_self_)._field_tokens[_36747_delim];;
	if (((_36747_delim == 0LL) || ((_36747_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_1c4404a49_push_err(&(*_self_), _36817_delim_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _37517_key_tokens = (*_self_)._field_tokens.slice((_36735_start + 1LL),(_36747_delim - 1LL));;
	if ((_37517_key_tokens.len() == 0LL)) {
		_1c4404a49_push_err(&(*_self_), _36817_delim_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1dcd6cac5_MapTypeDecl> _38117_mapt = jule::new_ptr<_1dcd6cac5_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_1dcd69d69_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _1c43e5452_build_type((*_self_)._field_p, _37517_key_tokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_key_tokens.len())) {
		_1c4404a49_push_err(&(*_self_), _37517_key_tokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1dcd69d69_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _1c43e5452_build_type((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_val=_39318_valt;
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_36817_delim_token, ._field_kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4407387_build_enumerable(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_kind != jule::Str("[", 1)))) {
		_1c4404a49_push_err(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1c4406a07_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _1c4403e99_map_colon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _1c4406c6b_build_arr(&(*_self_));
	};
	return _1c4407123_build_map(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44075eb_step(_1c44044a5_TypeBuilder* _self_) {
	jule::Ptr<_1db7061a7_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa7c8244:;
			{
				return _1c44050cc_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aa7c8134:;
			{
				return _1c4405a7d_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa7c819a:;
			{
				return _1c4405ce2_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aa7c7562:;
			{
				return _1c4406056_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa7c75c8:;
			{
				return _1c4406793_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1aa7c763e:;
			{
				return _1c4407387_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1aa7c74eb:;
			{
				((*((*_self_)._field_i)))++;
				_1c4404a49_push_err(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1aa7c7375:;
	};
}



inline std::tuple<jule::Ptr<_1dcd69d69_TypeDecl>,jule::Bool> _1c4407860_build(_1c44044a5_TypeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_1dcd69d69_TypeDecl> _45317_root = _1c44075eb_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_1c44038e4_build_void_type(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1c44044a5_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3b4d1a5_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1c3b4ea58_push_err(_1c3b4e508_DirectiveEval* _self_, jule::Ptr<_1db7061a7_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_207b80eb7_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_207b81407_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c3b4ee10_split_operans(_1c3b4e508_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1abc54081:;
						{
							(_3717_range_n)++;
							goto _iter_next_1abc52e81;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1abc540e7:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1abc53d72:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1abc52e81;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1abc52e81:;
	}
	_iter_end_1abc52e81:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1c3b4ea58_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1c3b5021d_eval_directive_ident(_1c3b4e508_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1abc57606:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1abc57606:;
			++it;
			goto _iter_begin_1abc57606;
		}
		_iter_end_1abc57606:;
	};
	return false;
}



inline jule::Bool _1c3b5052b_eval_directive_part(_1c3b4e508_DirectiveEval* _self_, jule::Slice<jule::Ptr<_1db7061a7_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1c3b4ea58_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1c3b5021d_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1c3b50790_eval(_1c3b4e508_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1c3b4ea58_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _11317_logical_or_parts = _1c3b4ee10_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1abc5d82c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _12021_logical_and_parts = _1c3b4ee10_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1abc5ec18:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1db7061a7_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_1db7061a7_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_1db7061a7_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1c3b4ea58_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1c3b5052b_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1abc5ec18:;
						++it;
						goto _iter_begin_1abc5ec18;
					}
					_iter_end_1abc5ec18:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1abc5d82c:;
			++it;
			goto _iter_begin_1abc5d82c;
		}
		_iter_end_1abc5d82c:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3b4e508_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4378d75_JuleImporter> static__1c41a807d_new(_1c3b4d1a5_CompileInfo _5823_info) {
	jule::Ptr<_1c4378d75_JuleImporter> _5917_imp = jule::new_ptr<_1c4378d75_JuleImporter>(_1c4378d75_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_207ba3825_PATH_STDLIB}), });;
	_1c3b4d9be_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>> _1c41b8225_all_packages(_1c4378d75_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1c41c36b4_set_mod_path(_1c4378d75_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1c41d4351_get_mod_path(_1c4378d75_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1c41d9d18_mod_by_id(_1c4378d75_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1c41eea75_get_import(_1c4378d75_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1abc671b5:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1abc671b5:;
			++it;
			goto _iter_begin_1abc671b5;
		}
		_iter_end_1abc671b5:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1dcd355c6_Ast>>,jule::Slice<_207b80eb7_Log>> _1c420ee1a_import_package(_1c4378d75_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_205146a35_DirEntry>> _9717_dirents = ({
		auto except = static__207b17019_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_207b80eb7_Log>::make({_1c41a0949_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_205146a35_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1c3b5e42a_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_207b80eb7_Log> _10525_errs = _1c3b5e6b1_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1dcd355c6_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1dcd355c6_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1abc6b40b:;
		if (it != expr.end()) {
			jule::Ptr<_205146a35_DirEntry> _11316_dirent = *it;
			{
				if ((_205134160_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_207a89c39_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1abc6b40b;
				};
				jule::Str _11917__path = _207b167cc_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_1db70b542_File> _12021_file = _1db70ca71_new_file_set(_11917__path);;
				_1db70bbc4_fill(_12021_file.ptr(), _1c4196720_read_buff(_12021_file.get()._field_path));
				jule::Slice<_207b80eb7_Log> _12221_errors = _1db7184d8_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1c437d286_FileInfo> _12721_finfo = _1c43c4981_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1c3b33d5b_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1abc6b40b;
				};
				jule::Bool _13718_r;;
				jule::Slice<_207b80eb7_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1c424e212_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1abc6b40b;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1abc6b40b:;
			++it;
			goto _iter_begin_1abc6b40b;
		}
		_iter_end_1abc6b40b:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1c4234c86_imported(_1c4378d75_JuleImporter* _self_, jule::Ptr<_1c2d01854_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1abc71e8e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1abc71e8e:;
			++it;
			goto _iter_begin_1abc71e8e;
		}
		_iter_end_1abc71e8e:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1abc73875:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1abc73875:;
				++it;
				_16217_i++;
				goto _iter_begin_1abc73875;
			}
			_iter_end_1abc73875:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_207b80eb7_Log>> _1c424e212_is_pass_build_directives(_1c4378d75_JuleImporter* _self_, jule::Ptr<_1dcd355c6_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1abc76aed:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1abc76aed;
				};
				_1c3b4e508_DirectiveEval _18421_de = _1c3b4e508_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1c3b50790_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1abc76aed:;
			++it;
			goto _iter_begin_1abc76aed;
		}
		_iter_end_1abc76aed:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c4378d75_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4407a4c_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abc98e83_is_common_ordered(jule::Slice<jule::Ptr<_1dcd5a596_Struct>>& _1837_s, jule::Ptr<_1dcd5a596_Struct> _1846_t) {
	jule::Ptr<_1dcd5a596_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1dcd5a596_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1abc9bdba:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1abc9bdba;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1abc9bdba:;
			++it;
			goto _iter_begin_1abc9bdba;
		}
		_iter_end_1abc9bdba:;
	};
	return false;
}

inline jule::Bool _1abca2343_is_common_ordered(jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _1837_s, jule::Ptr<_1c2d266ae_Var> _1846_t) {
	jule::Ptr<_1c2d266ae_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1c2d266ae_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1abca5236:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1abca5236;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1abca5236:;
			++it;
			goto _iter_begin_1abca5236;
		}
		_iter_end_1abca5236:;
	};
	return false;
}



inline void _1abc94ec3_order_common(jule::Slice<jule::Ptr<_1dcd5a596_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1abc96326:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1dcd5a596_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1abc96326:;
			++it;
			_4114_j++;
			goto _iter_begin_1abc96326;
		}
		_iter_end_1abc96326:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1abc98e83_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1abc9889a:;
			}
			_iter_end_1abc9889a:;;
		}
	_iter_next_1abc9629e:;
	}
	_iter_end_1abc9629e:;;
}

inline void _1abc9580e_order_common(jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1abc9e6d6:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1c2d266ae_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1abc9e6d6:;
			++it;
			_4114_j++;
			goto _iter_begin_1abc9e6d6;
		}
		_iter_end_1abc9e6d6:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1abca2343_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1abca1c5a:;
			}
			_iter_end_1abca1c5a:;;
		}
	_iter_next_1abc9e65e:;
	}
	_iter_end_1abc9e65e:;;
}



inline void static__1c4377b32_order_structures(jule::Slice<jule::Ptr<_1dcd5a596_Struct>>& _6141_structs) {
	_1abc94ec3_order_common(_6141_structs);
}



inline void static__1c437e2ed_order_vars(jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _6735_vars) {
	_1abc9580e_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1c4407c39_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a944ca8a_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a947eb99_optimize_child(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd2d1e_Scope>& _3939_s) {
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _4017_sdc = jule::new_ptr<_1a947e6c1_ScopeDeadCode>(_1a947e6c1_ScopeDeadCode{._field_parent=_self_, ._field_s=_3939_s, ._field_stmts=(&(_3939_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a94822d9_optimize_stmts(_4017_sdc);
	};
}



inline void _1a947ee41_optimize_body_child_exceptional(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd2d1e_Scope>& _5056_s) {
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _5117_sdc = jule::new_ptr<_1a947e6c1_ScopeDeadCode>(_1a947e6c1_ScopeDeadCode{._field_s=_5056_s, ._field_stmts=(&(_5056_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1a94822d9_optimize_stmts(_5117_sdc);
	};
}



inline void _1a94801c7_optimize_body_child(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd2d1e_Scope>& _6144_s) {
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _6217_sdc = jule::new_ptr<_1a947e6c1_ScopeDeadCode>(_1a947e6c1_ScopeDeadCode{._field_s=_6144_s, ._field_stmts=(&(_6144_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a94822d9_optimize_stmts(_6217_sdc);
	};
}



inline void _1a948044c_optimize_expr_model(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Any& _7144_model) {
	_1a948365e_ExprDeadCode _7213_edc = static__1a9483c58_new(_self_);;
	_1a9489203_optimize(&_7213_edc, _7144_model);
}



inline void _1a9480628_eliminate_followed(_1a947e6c1_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1abd253b6:;
	}
	_iter_end_1abd253b6:;;
}



inline void _1a948089d_push_goto(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd58c1_GotoSt> _9233_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9233_gt.get()._field_ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1abd27ce2:;
	}
	_iter_end_1abd27ce2:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c2cd58c1_GotoSt>>::make({_9233_gt}));
}



inline void _1a9480b23_push_label(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd55d5_Label> _10234_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10234_l.get()._field_ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1abd29a5d;
			};
			(_10317_i)++;
		}
	_iter_next_1abd29a5d:;
	}
	_iter_end_1abd29a5d:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c2cd55d5_Label>>::make({_10234_l}));
}



inline void _1a9480d98_optimize_range_iter(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd4a46_RangeIter> _11543_it) {
	_1a948044c_optimize_expr_model(_self_, _11543_it.get()._field_expr.get()._field_model);
	_1a94801c7_optimize_body_child(_self_, _11543_it.get()._field_scope);
}



inline void _1a948111d_optimize_while_iter(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd4161_WhileIter> _12043_it) {
	_1a948044c_optimize_expr_model(_self_, _12043_it.get()._field_expr);
	if ((_12043_it.get()._field_next != nullptr)) {
		_1a948210d_optimize_stmt(_self_, _12043_it.get()._field_next);
	};
	_1a94801c7_optimize_body_child(_self_, _12043_it.get()._field_scope);
}



inline void _1a9481393_optimize_inf_iter(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd3bdd_InfIter> _12841_it) {
	_1a94801c7_optimize_body_child(_self_, _12841_it.get()._field_scope);
}



inline void _1a9481618_optimize_conditional(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd3902_Conditional> _13244_c) {
	{
		auto &expr = _13244_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abd305ad:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd321a_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a948044c_optimize_expr_model(_self_, _13321_case.get()._field_expr);
					_1a94801c7_optimize_body_child(_self_, _13321_case.get()._field_scope);
				};
			}
			_iter_next_1abd305ad:;
			++it;
			goto _iter_begin_1abd305ad;
		}
		_iter_end_1abd305ad:;
	};
	if ((_13244_c.get()._field_default != nullptr)) {
		if ((_13244_c.get()._field_elifs.len() == 0LL)) {
			_1a947eb99_optimize_child(_self_, _13244_c.get()._field_default.get()._field_scope);
		} else {
			_1a94801c7_optimize_body_child(_self_, _13244_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1a948188d_optimize_match(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd6ae2_Match> _15038_m) {
	{
		auto &expr = _15038_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abd3321a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd763c_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1abd33a89:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d6d9e2_Data> _15225_expr = *it;
						{
							_1a948044c_optimize_expr_model(_self_, _15225_expr.get()._field_model);
						}
						_iter_next_1abd33a89:;
						++it;
						goto _iter_begin_1abd33a89;
					}
					_iter_end_1abd33a89:;
				};
				_1a94801c7_optimize_body_child(_self_, _15121_case.get()._field_scope);
			}
			_iter_next_1abd3321a:;
			++it;
			goto _iter_begin_1abd3321a;
		}
		_iter_end_1abd3321a:;
	};
	if ((_15038_m.get()._field_default != nullptr)) {
		if ((_15038_m.get()._field_cases.len() == 0LL)) {
			_1a947eb99_optimize_child(_self_, _15038_m.get()._field_default.get()._field_scope);
		} else {
			_1a94801c7_optimize_body_child(_self_, _15038_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1a9481b13_optimize_assign(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd61eb_Assign> _16839_assign) {
	_1a948044c_optimize_expr_model(_self_, _16839_assign.get()._field_l.get()._field_model);
	_1a948044c_optimize_expr_model(_self_, _16839_assign.get()._field_r.get()._field_model);
}



inline void _1a9481d88_optimize_multi_assign(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Ptr<_1c2cd65a3_MultiAssign> _17345_assign) {
	{
		auto &expr = _17345_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1abd37032:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a948044c_optimize_expr_model(_self_, _17421_l);
				};
			}
			_iter_next_1abd37032:;
			++it;
			goto _iter_begin_1abd37032;
		}
		_iter_end_1abd37032:;
	};
	_1a948044c_optimize_expr_model(_self_, _17345_assign.get()._field_r);
}



inline void _1a948210d_optimize_stmt(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_, jule::Any _18237_st) {
	{
		auto &_match_expr{ _18237_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd2d1e_Scope>>()) {
			_case_begin_1abd38671:;
			{
				jule::Ptr<_1c2cd2d1e_Scope> _18521_scope = _18237_st.operator jule::Ptr<_1c2cd2d1e_Scope>();;
				if (_18521_scope.get()._field_deferred) {
					_1a94825c5_eliminate_dead_code_of_scope(_18521_scope);
				} else {
					_1a947eb99_optimize_child(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4a46_RangeIter>>()) {
			_case_begin_1abd387e7:;
			{
				_1a9480d98_optimize_range_iter(_self_, _18237_st.operator jule::Ptr<_1c2cd4a46_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4161_WhileIter>>()) {
			_case_begin_1abd3885d:;
			{
				_1a948111d_optimize_while_iter(_self_, _18237_st.operator jule::Ptr<_1c2cd4161_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
			_case_begin_1abd388c4:;
			{
				_1a9481393_optimize_inf_iter(_self_, _18237_st.operator jule::Ptr<_1c2cd3bdd_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3902_Conditional>>()) {
			_case_begin_1abd3894b:;
			{
				_1a9481618_optimize_conditional(_self_, _18237_st.operator jule::Ptr<_1c2cd3902_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd6ae2_Match>>()) {
			_case_begin_1abd389c3:;
			{
				_1a948188d_optimize_match(_self_, _18237_st.operator jule::Ptr<_1c2cd6ae2_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd61eb_Assign>>()) {
			_case_begin_1abd38a4a:;
			{
				_1a9481b13_optimize_assign(_self_, _18237_st.operator jule::Ptr<_1c2cd61eb_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd65a3_MultiAssign>>()) {
			_case_begin_1abd38ac2:;
			{
				_1a9481d88_optimize_multi_assign(_self_, _18237_st.operator jule::Ptr<_1c2cd65a3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1abd38b49:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _20621_d = _18237_st.operator jule::Ptr<_1c2d6d9e2_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1abd38781;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>()) {
						_case_begin_1abd3dcd6:;
						{
							_1a9480628_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1abd3e325:;
						{
							_1a948044c_optimize_expr_model(_self_, _20621_d.get()._field_model);
						}
					}
					_match_end_1abd3e2c0:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd8165_RetSt>>()) {
			_case_begin_1abd38bc1:;
			{
				_1a9480628_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd58c1_GotoSt>>()) {
			_case_begin_1abd38c48:;
			{
				_1a948089d_push_goto(_self_, _18237_st.operator jule::Ptr<_1c2cd58c1_GotoSt>());
				_1a9480628_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd55d5_Label>>()) {
			_case_begin_1abd38cc0:;
			{
				_1a9480b23_push_label(_self_, _18237_st.operator jule::Ptr<_1c2cd55d5_Label>());
			}
		}
		_match_end_1abd38781:;
	};
}



inline void _1a94822d9_optimize_stmts(jule::Ptr<_1a947e6c1_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1a948210d_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1abd3d984:;
	}
	_iter_end_1abd3d984:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a947e6c1_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a948365e_ExprDeadCode static__1a9483c58_new(jule::Ptr<_1a947e6c1_ScopeDeadCode>& _4724_s) {
	return _1a948365e_ExprDeadCode{._field_s=_4724_s};
}



inline void _1a9483ecd_binary(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce31716_BinopExprModel> _5325_m) {
	_1a9489203_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1a9489203_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1a9484253_unary(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce31903_UnaryExprModel> _5824_m) {
	_1a9489203_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1a94844c8_structure_lit(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce31ccc_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1abd44902:;
		if (it != expr.end()) {
			jule::Ptr<_1dce31ae0_StructArgExprModel> _6321_arg = *it;
			{
				_1a9489203_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1abd44902:;
			++it;
			goto _iter_begin_1abd44902;
		}
		_iter_end_1abd44902:;
	};
}



inline void _1a948474d_alloc_structure(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce31eb9_AllocStructLitExprModel> _6834_m) {
	_1a94844c8_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1a94849c3_casting(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce321a6_CastingExprModel> _7226_m) {
	_1a9489203_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1a9484c48_args(_1a948365e_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1abd46b79:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1a9489203_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1abd46b79:;
			++it;
			goto _iter_begin_1abd46b79;
		}
		_iter_end_1abd46b79:;
	};
}



inline void _1a9484ebd_func_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce32393_FnCallExprModel> _8228_m) {
	_1a9489203_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1a9484c48_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1a947ee41_optimize_body_child_exceptional((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1a9485243_slice(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce32580_SliceExprModel> _9024_m) {
	_1a9484c48_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1a94854b8_array(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce33a04_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1a9489203_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1a9484c48_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1a948573d_indexing(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce3276c_IndexingExprModel> _10127_m) {
	_1a9489203_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1a9489203_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1a94859b3_anon_func(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce32959_AnonFnExprModel> _10628_m) {
	_1a94825c5_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1a9485c38_map(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce32d33_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1abd4cab4:;
		if (it != expr.end()) {
			jule::Ptr<_1dce32b46_KeyValPairExprModel> _11121_pair = *it;
			{
				_1a9489203_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1a9489203_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1abd4cab4:;
			++it;
			goto _iter_begin_1abd4cab4;
		}
		_iter_end_1abd4cab4:;
	};
}



inline void _1a9485ead_slicing(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce33020_SlicingExprModel> _11726_m) {
	_1a9489203_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1a9489203_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1a9489203_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1a9486233_trait_sub(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce3320c_TraitSubIdentExprModel> _12528_m) {
	_1a9489203_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1a94864a8_structure_sub(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce3362a_StructSubIdentExprModel> _12932_m) {
	_1a9489203_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1a948672d_common_sub(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce33dcd_CommonSubIdentExprModel> _13329_m) {
	_1a9489203_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1a94869a3_tuple(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce340ba_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1abd520a2:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d6d9e2_Data> _13821_d = *it;
			{
				_1a9489203_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1abd520a2:;
			++it;
			goto _iter_begin_1abd520a2;
		}
		_iter_end_1abd520a2:;
	};
}



inline void _1a9486c28_new_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce3486d_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1a9489203_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1a9486e9d_out_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce342a7_BuiltinOutCallExprModel> _14927_m) {
	_1a9489203_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1a9487223_outln_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel> _15329_m) {
	_1a9489203_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1a9487498_panic_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel> _15729_m) {
	_1a9489203_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1a948771d_assert_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel> _16130_m) {
	_1a9489203_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1a9487993_error_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel> _16529_m) {
	_1a9489203_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1a9487c18_make_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1a9489203_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1a9489203_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1a9487e8d_append_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce35121_BuiltinAppendCallExprModel> _17830_m) {
	_1a9489203_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1a9489203_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1a9488213_clone_call(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce34681_BuiltinCloneCallExprModel> _18329_m) {
	_1a9489203_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1a9488488_sizeof(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce333e9_SizeofExprModel> _18725_m) {
	_1a9489203_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1a948870d_alignof(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce35b5a_AlignofExprModel> _19126_m) {
	_1a9489203_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1a9488983_integrated_to_str(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce36034_IntegratedToStrExprModel> _19536_m) {
	_1a9489203_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1a9488c08_free(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce3640d_FreeExprModel> _19923_m) {
	_1a9489203_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1a9488e7d_backend_emit(_1a948365e_ExprDeadCode* _self_, jule::Ptr<_1dce36221_BackendEmitExprModel> _20331_m) {
	_1a9484c48_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1a9489203_optimize(_1a948365e_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce31716_BinopExprModel>>()) {
			_case_begin_1abd5c277:;
			{
				_1a9483ecd_binary(&(*_self_), _20728_model.operator jule::Ptr<_1dce31716_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31903_UnaryExprModel>>()) {
			_case_begin_1abd5c2ee:;
			{
				_1a9484253_unary(&(*_self_), _20728_model.operator jule::Ptr<_1dce31903_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31ccc_StructLitExprModel>>()) {
			_case_begin_1abd5c376:;
			{
				_1a94844c8_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1dce31ccc_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31eb9_AllocStructLitExprModel>>()) {
			_case_begin_1abd5c71c:;
			{
				_1a948474d_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1dce31eb9_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce321a6_CastingExprModel>>()) {
			_case_begin_1abd5c783:;
			{
				_1a94849c3_casting(&(*_self_), _20728_model.operator jule::Ptr<_1dce321a6_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1abd5c80a:;
			{
				_1a9484ebd_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce32393_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32580_SliceExprModel>>()) {
			_case_begin_1abd5c882:;
			{
				_1a9485243_slice(&(*_self_), _20728_model.operator jule::Ptr<_1dce32580_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33a04_ArrayExprModel>>()) {
			_case_begin_1abd5c909:;
			{
				_1a94854b8_array(&(*_self_), _20728_model.operator jule::Ptr<_1dce33a04_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3276c_IndexingExprModel>>()) {
			_case_begin_1abd5c981:;
			{
				_1a948573d_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1dce3276c_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32959_AnonFnExprModel>>()) {
			_case_begin_1abd5ca08:;
			{
				_1a94859b3_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1dce32959_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32d33_MapExprModel>>()) {
			_case_begin_1abd5ca80:;
			{
				_1a9485c38_map(&(*_self_), _20728_model.operator jule::Ptr<_1dce32d33_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33020_SlicingExprModel>>()) {
			_case_begin_1abd5cb07:;
			{
				_1a9485ead_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1dce33020_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3320c_TraitSubIdentExprModel>>()) {
			_case_begin_1abd5cb7e:;
			{
				_1a9486233_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1dce3320c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1abd5cc06:;
			{
				_1a94864a8_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>>()) {
			_case_begin_1abd5cc7d:;
			{
				_1a948672d_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce340ba_TupleExprModel>>()) {
			_case_begin_1abd5cd05:;
			{
				_1a94869a3_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1dce340ba_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>>()) {
			_case_begin_1abd5cd7c:;
			{
				_1a9486e9d_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1abd5ce04:;
			{
				_1a9487223_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>>()) {
			_case_begin_1abd5ce7b:;
			{
				_1a9486c28_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1abd5d003:;
			{
				_1a9487498_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>>()) {
			_case_begin_1abd5d07a:;
			{
				_1a948771d_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
			_case_begin_1abd5d102:;
			{
				_1a9487993_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>>()) {
			_case_begin_1abd5d179:;
			{
				_1a9487c18_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>>()) {
			_case_begin_1abd5d201:;
			{
				_1a9487e8d_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>>()) {
			_case_begin_1abd5d278:;
			{
				_1a9488213_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce333e9_SizeofExprModel>>()) {
			_case_begin_1abd5d300:;
			{
				_1a9488488_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1dce333e9_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35b5a_AlignofExprModel>>()) {
			_case_begin_1abd5d377:;
			{
				_1a948870d_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1dce35b5a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36034_IntegratedToStrExprModel>>()) {
			_case_begin_1abd5d3ee:;
			{
				_1a9488983_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1dce36034_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3640d_FreeExprModel>>()) {
			_case_begin_1abd5d476:;
			{
				_1a9488c08_free(&(*_self_), _20728_model.operator jule::Ptr<_1dce3640d_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36221_BackendEmitExprModel>>()) {
			_case_begin_1abd5d4ed:;
			{
				_1a9488e7d_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1dce36221_BackendEmitExprModel>());
			}
		}
		_match_end_1abd5c475:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a948365e_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e60b17_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e60e36_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e612ee_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e618b5_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e61c5b_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2e62dd3_ScopeOptimizer> static__1c2e63433_new(jule::Ptr<_1c2cd2d1e_Scope> _4527_scope) {
	return jule::new_ptr<_1c2e62dd3_ScopeOptimizer>(_1c2e62dd3_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1c2e636a8_set_current_stmt(_1c2e62dd3_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5139_stmt))))));
}



inline void _1c2e6392d_optimize_data(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2d6d9e2_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1abd97d40:;
			{
				jule::Ptr<_1dce32393_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1dce32393_FnCallExprModel>();;
				if (_204ed188c_PRODUCTION) {
					if (((!(_1dce3c9ca_is_builtin(_5821_m.get()._field_func.ptr()))) && _1c2e66788_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1c2e636a8_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1abd97b31:;
	};
	static__1c2e689dd_optimize(_5536_d.get()._field_model);
}



inline void _1c2e63ba3_optimize_var(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2d266ae_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1c2e689dd_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1c2e63e28_optimize_conditional(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd3902_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abd9ad87:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd321a_If> _7721_elif = *it;
			{
				static__1c2e689dd_optimize(_7721_elif.get()._field_expr);
				_1c2e661b1_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1abd9ad87:;
			++it;
			goto _iter_begin_1abd9ad87;
		}
		_iter_end_1abd9ad87:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1c2e661b1_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_1c2e7195d_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abd9cdbc:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1c2cd321a_If> _9221_elif = *it;
			{
				if ((!(_1c2e66aa7_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1abd9cdbc;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1c2cd3506_Else>(_1c2cd3506_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1abd9cdbc;
			}
			_iter_next_1abd9cdbc:;
			++it;
			_9214_i++;
			goto _iter_begin_1abd9cdbc;
		}
		_iter_end_1abd9cdbc:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c2cd321a_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1c2cd321a_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1c2e67437_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1abda1211:;
	}
	_iter_end_1abda1211:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abda77cd:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1c2cd321a_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1abda77cd:;
			++it;
			_12913_j++;
			goto _iter_begin_1abda77cd;
		}
		_iter_end_1abda77cd:;
	};
	if ((_12817_only != -1LL)) {
		_1c2e636a8_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1c2e64313_build_default_constat_true_case(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd763c_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1c2cd6ae2_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1abda9ec8;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1c2cd7be2_FallSt>>()) {
					_case_begin_1abdaa88b:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1abda9ec8;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=static_cast<jule::Any>(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1abdabdcb:;
					{
						goto _iter_end_1abda9ec8;
					}
				}
				_match_end_1abdabcdd:;
			};
		}
	_iter_next_1abda9ec8:;
	}
	_iter_end_1abda9ec8:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1c2e64522_optimize_match(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd6ae2_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abdade88:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd763c_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1abdae829:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d6d9e2_Data> _17325_expr = *it;
						{
							static__1c2e689dd_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1abdae829:;
						++it;
						goto _iter_begin_1abdae829;
					}
					_iter_end_1abdae829:;
				};
				_1c2e661b1_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1abdade88:;
			++it;
			goto _iter_begin_1abdade88;
		}
		_iter_end_1abdade88:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1c2e661b1_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_1c2e7195d_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abdb15a6:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1c2cd763c_Case> _18925_case = *it;
			{
				if ((!(_1c2e67190_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1abdb15a6;
				};
				_18617_const_case=true;
				_1c2e64313_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1abdb15a6;
			}
			_iter_next_1abdb15a6:;
			++it;
			_18918_i++;
			goto _iter_begin_1abdb15a6;
		}
		_iter_end_1abdb15a6:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c2cd763c_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1c2cd763c_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1c2e67712_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1abdb4455:;
	}
	_iter_end_1abdb4455:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abdb55ee:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1c2cd763c_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1abdb55ee:;
			++it;
			_21913_j++;
			goto _iter_begin_1abdb55ee;
		}
		_iter_end_1abdb55ee:;
	};
	if ((_21817_only != -1LL)) {
		_1c2e636a8_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1c2e64797_optimize_range_iter(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd4a46_RangeIter> _23542_it) {
	static__1c2e689dd_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1c2e661b1_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1c2e64a1c_optimize_while_iter(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd4161_WhileIter> _24042_it) {
	static__1c2e689dd_optimize(_24042_it.get()._field_expr);
	_1c2e65e3b_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_1c2e661b1_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1c2e64d2a_substr(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd61eb_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce33020_SlicingExprModel>>()) {
			_case_begin_1abdb9801:;
			{
				jule::Ptr<_1dce33020_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1dce33020_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1c2e636a8_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1c2e618b5_MutSlicingExprModel>(_1c2e618b5_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=_24921_sem.get()._field_expr, ._field_left=_24921_sem.get()._field_left, ._field_right=_24921_sem.get()._field_right})));
					return true;
				};
			}
		}
		_match_end_1abdb979b:;
	};
	return false;
}



inline jule::Bool _1c2e65138_str_insert(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd61eb_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce31716_BinopExprModel>>()) {
			_case_begin_1abdbbc10:;
			{
				jule::Ptr<_1dce31716_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1dce31716_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1c2e636a8_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1c2e61c5b_StrInsertBeginExprModel>(_1c2e61c5b_StrInsertBeginExprModel{._field_dest=_26333_a.get()._field_l.get()._field_model, ._field_expr=_26621_m.get()._field_left.get()._field_model})));
					return true;
				};
			}
		}
		_match_end_1abdbbbaa:;
	};
	return false;
}



inline jule::Bool _1c2e65446_str_assign(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd61eb_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1c2da42ec_Prim> _28213_lp = _1c2da1937_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1c2da7531_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1c2e64d2a_substr(&(*_self_), _27833_a) || _1c2e65138_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1abdc063c:;
			{
				return true;
			}
		}
		_match_end_1abdc05a4:;
	};
	return false;
}



inline void _1c2e656bb_optimize_assign(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd61eb_Assign> _29438_assign) {
	if ((_1c2e70154_COPY && _1c2e65446_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1c2e689dd_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1c2e689dd_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1abdc262d:;
			{
				if ((_1c2e70b16_MATH && (_1c2da2d89_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1dce31716_BinopExprModel>(_1dce31716_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1c2e689dd_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1dce31716_BinopExprModel>>()) {
							_case_begin_1abdc4c6d:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1dce31529_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=_30725_model;
								return;;
							}
						}
						_match_end_1abdc4ad6:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1abdc25c8:;
	};
	if (_1c2e707b4_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>>()) {
				_case_begin_1abdc6665:;
				{
					jule::Ptr<_1dce35121_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1dce32580_SliceExprModel>>()) {
							_case_begin_1abdc76cc:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>() || _match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
										_case_begin_1abdc7eb3:;
										{
											_1c2e636a8_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1c2e612ee_PushToSliceExprModel>(_1c2e612ee_PushToSliceExprModel{._field_dest=_32825_m.get()._field_dest, ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1dce32580_SliceExprModel>()})));
										}
									}
									_match_end_1abdc7e5d:;
								};
							}
						}
						_match_end_1abdc7523:;
					};
				}
			}
			_match_end_1abdc3189:;
		};
	};
}



inline void _1c2e65941_optimize_multi_assign(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd65a3_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1abdc2a5c:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1c2e689dd_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=_34521_l;
				};
			}
			_iter_next_1abdc2a5c:;
			++it;
			_34514_i++;
			goto _iter_begin_1abdc2a5c;
		}
		_iter_end_1abdc2a5c:;
	};
	static__1c2e689dd_optimize(_34444_assign.get()._field_r);
}



inline void _1c2e65bb6_optimize_ret(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd8165_RetSt> _35435_r) {
	static__1c2e689dd_optimize(_35435_r.get()._field_expr);
}



inline void _1c2e65e3b_optimize_stmt(_1c2e62dd3_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd2d1e_Scope>>()) {
			_case_begin_1abdcab86:;
			{
				_1c2e661b1_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd2d1e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1abdcabec:;
			{
				_1c2e6392d_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2d6d9e2_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1abdcac63:;
			{
				_1c2e63ba3_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2d266ae_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3902_Conditional>>()) {
			_case_begin_1abdcacc9:;
			{
				_1c2e63e28_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd3902_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4a46_RangeIter>>()) {
			_case_begin_1abdcad40:;
			{
				_1c2e64797_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd4a46_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4161_WhileIter>>()) {
			_case_begin_1abdcada6:;
			{
				_1c2e64a1c_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd4161_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
			_case_begin_1abdcae1c:;
			{
				_1c2e661b1_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd3bdd_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd61eb_Assign>>()) {
			_case_begin_1abdcae83:;
			{
				_1c2e656bb_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd61eb_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd65a3_MultiAssign>>()) {
			_case_begin_1abdcaee9:;
			{
				_1c2e65941_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd65a3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd6ae2_Match>>()) {
			_case_begin_1abdcb071:;
			{
				_1c2e64522_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd6ae2_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd8165_RetSt>>()) {
			_case_begin_1abdcb0e8:;
			{
				_1c2e65bb6_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1c2cd8165_RetSt>());
			}
		}
		_match_end_1abdcaa32:;
	};
}



inline void _1c2e661b1_optimize_child(_1c2e62dd3_ScopeOptimizer* _self_, jule::Ptr<_1c2cd2d1e_Scope> _38537_child) {
	jule::Ptr<_1c2e62dd3_ScopeOptimizer> _38617_so = static__1c2e63433_new(_38537_child);;
	_1c2e6638c_optimize(_38617_so.ptr());
}



inline void _1c2e6638c_optimize(_1c2e62dd3_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1abdd2154:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1c2e65e3b_optimize_stmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1abdd2154:;
			++it;
			_39214_i++;
			goto _iter_begin_1abdd2154;
		}
		_iter_end_1abdd2154:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e62dd3_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1c2e689dd_optimize(jule::Any& _5533_model) {
	if (_1c4427495_expr_enabled) {
		jule::Ptr<_1c2e68515_ExprOptimizer> _5821_exop = jule::new_ptr<_1c2e68515_ExprOptimizer>(_1c2e68515_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1c2e6e472_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1c2e68ceb_str_cond(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce31716_BinopExprModel> _6527_m) {
	jule::Ptr<_1c2da42ec_Prim> _6613_lp = _1c2da1937_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1c2da7531_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1abddb658:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1abddb603:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1abddc659:;
			{
				goto _match_end_1abddc56b;
			}
		}
		else {
			_case_begin_1abddc5d2:;
			{
				return true;
			}
		}
		_match_end_1abddc56b:;
	};
	_julec_label_opt:;
	jule::Ptr<_1dcdbd1a8_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1dcdbd1a8_Const>();;
	if ((!(_1dce298c9_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1abddde1e:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1abddde85:;
			{
				jule::Ptr<_1db7061a7_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1dce31903_UnaryExprModel>(_1dce31903_UnaryExprModel{._field_expr=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33dcd_CommonSubIdentExprModel>(_1dce33dcd_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=_6527_m.get()._field_left.get()._field_model, ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1abdddced:;
	};
	return true;
}



inline void _1c2e69071_binary(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce31716_BinopExprModel> _11325_m) {
	static__1c2e689dd_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1c2e689dd_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1abde2e23:;
			{
				goto _match_end_1abde28e5;
			}
		}
		else {
			_case_begin_1abde298e:;
			{
				return;;
			}
		}
		_match_end_1abde28e5:;
	};
	if ((_1c2e7195d_COND && _1c2e68ceb_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1c2e70b16_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1abde3ae4:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1c2e6e890_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1dcdbd1a8_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1dcdbd1a8_Const>();;
					_1dce2a875_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1abde3b5a:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1c2e6e890_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1dcdbd1a8_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1dcdbd1a8_Const>();;
					_1dce2a875_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1abde3bd2:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1dcdbd1a8_Const>();;
				jule::F64 _15017_d = _1dce2a37a_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1dce2a600_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1abde3a8e:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1c2e60b17_UnsafeBinopExprModel>(_1c2e60b17_UnsafeBinopExprModel{._field_node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1c2e692e6_unary(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce31903_UnaryExprModel> _16024_m) {
	static__1c2e689dd_optimize(_16024_m.get()._field_expr.get()._field_model);
	if ((_1c2e71540_PTR && (_16024_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1dce31903_UnaryExprModel>>()) {
				_case_begin_1abdeae92:;
				{
					jule::Ptr<_1dce31903_UnaryExprModel> _16525_um = _16024_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1dce31903_UnaryExprModel>();;
					if ((_16525_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_expr.get()._field_model;
					};
				}
			}
			_match_end_1abdeae3c:;
		};
	};
}



inline void _1c2e6956b_structure_lit(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce31ccc_StructLitExprModel> _17332_m) {
	{
		auto &expr = _17332_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1abdec9dd:;
		if (it != expr.end()) {
			jule::Ptr<_1dce31ae0_StructArgExprModel> _17421_arg = *it;
			{
				static__1c2e689dd_optimize(_17421_arg.get()._field_expr);
			}
			_iter_next_1abdec9dd:;
			++it;
			goto _iter_begin_1abdec9dd;
		}
		_iter_end_1abdec9dd:;
	};
}



inline void _1c2e697e1_alloc_structure(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce31eb9_AllocStructLitExprModel> _17934_m) {
	_1c2e6956b_structure_lit(&(*_self_), _17934_m.get()._field_lit);
}



inline void _1c2e69a66_casting(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce321a6_CastingExprModel> _18326_m) {
	static__1c2e689dd_optimize(_18326_m.get()._field_expr);
}



inline void _1c2e69cdb_args(_1c2e68515_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1abdee56c:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1c2e689dd_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1abdee56c:;
			++it;
			_18814_i++;
			goto _iter_begin_1abdee56c;
		}
		_iter_end_1abdee56c:;
	};
}



inline void _1c2e6a061_scope(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1c2cd2d1e_Scope>& _19425_s) {
	jule::Ptr<_1c2e62dd3_ScopeOptimizer> _19517_scopt = static__1c2e63433_new(_19425_s);;
	_1c2e6638c_optimize(_19517_scopt.ptr());
}



inline void _1c2e6a2d6_func_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce32393_FnCallExprModel> _19928_m) {
	static__1c2e689dd_optimize(_19928_m.get()._field_expr);
	_1c2e69cdb_args(&(*_self_), _19928_m.get()._field_args);
	if ((_19928_m.get()._field_except != nullptr)) {
		_1c2e6a061_scope(&(*_self_), _19928_m.get()._field_except);
	};
}



inline void _1c2e6a55b_slice(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce32580_SliceExprModel> _20724_m) {
	_1c2e69cdb_args(&(*_self_), _20724_m.get()._field_elems);
}



inline void _1c2e6a7d1_array(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce33a04_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_elems.len() == 2LL) && (_21124_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_elems[0LL];;
		static__1c2e689dd_optimize(_21321_elem);
		_21124_m.get()._field_elems[0LL]=_21321_elem;
	};
	_1c2e69cdb_args(&(*_self_), _21124_m.get()._field_elems);
}



inline void _1c2e6aa56_indexing(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce3276c_IndexingExprModel> _22027_m) {
	static__1c2e689dd_optimize(_22027_m.get()._field_expr.get()._field_model);
	static__1c2e689dd_optimize(_22027_m.get()._field_index.get()._field_model);
	if ((!(_1c2e70e24_ACCESS))) {
		return;;
	};
	jule::Bool _22613_array = (_1c2da264c_arr(_22027_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22613_array && _1c2d6e3a5_is_const(_22027_m.get()._field_index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1c2e60e36_UnsafeIndexingExprModel>(_1c2e60e36_UnsafeIndexingExprModel{._field_node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1abe08136:;
			{
				jule::Ptr<_1c2d266ae_Var> _23517_i = _22027_m.get()._field_index.get()._field_model.operator jule::Ptr<_1c2d266ae_Var>();;
				if ((_23517_i.get()._field_mutable || (_23517_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1abe07ed2;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
						_case_begin_1abe098eb:;
						{
							jule::Ptr<_1c2d266ae_Var> _24121_r = _22027_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1c2d266ae_Var>();;
							if ((_23517_i.get()._field_iter_relation.get()._field_range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1c2e60e36_UnsafeIndexingExprModel>(_1c2e60e36_UnsafeIndexingExprModel{._field_node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1abe09896:;
				};
			}
		}
		_match_end_1abe07ed2:;
	};
}



inline void _1c2e6accb_anon_func(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce32959_AnonFnExprModel> _25128_m) {
	_1c2e6a061_scope(&(*_self_), _25128_m.get()._field_func.get()._field_scope);
}



inline void _1c2e6b051_map(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce32d33_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1abe0c080:;
		if (it != expr.end()) {
			jule::Ptr<_1dce32b46_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1c2e689dd_optimize(_25621_pair.get()._field_key);
				static__1c2e689dd_optimize(_25621_pair.get()._field_val);
			}
			_iter_next_1abe0c080:;
			++it;
			goto _iter_begin_1abe0c080;
		}
		_iter_end_1abe0c080:;
	};
}



inline void _1c2e6b2c6_slicing(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce33020_SlicingExprModel> _26226_m) {
	static__1c2e689dd_optimize(_26226_m.get()._field_expr);
	static__1c2e689dd_optimize(_26226_m.get()._field_left);
	if ((_26226_m.get()._field_right != nullptr)) {
		static__1c2e689dd_optimize(_26226_m.get()._field_right);
	};
}



inline void _1c2e6b54b_trait_sub(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce3320c_TraitSubIdentExprModel> _27028_m) {
	static__1c2e689dd_optimize(_27028_m.get()._field_expr);
}



inline void _1c2e6b7c1_structure_sub(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce3362a_StructSubIdentExprModel> _27432_m) {
	static__1c2e689dd_optimize(_27432_m.get()._field_expr.get()._field_model);
}



inline void _1c2e6ba46_common_sub(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce33dcd_CommonSubIdentExprModel> _27829_m) {
	static__1c2e689dd_optimize(_27829_m.get()._field_expr);
}



inline void _1c2e6bcbb_tuple(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce340ba_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1abe10539:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d6d9e2_Data> _28321_d = *it;
			{
				static__1c2e689dd_optimize(_28321_d.get()._field_model);
			}
			_iter_next_1abe10539:;
			++it;
			goto _iter_begin_1abe10539;
		}
		_iter_end_1abe10539:;
	};
}



inline void _1c2e6c041_new_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce3486d_BuiltinNewCallExprModel> _28827_m) {
	if ((_28827_m.get()._field_init != nullptr)) {
		static__1c2e689dd_optimize(_28827_m.get()._field_init);
	};
}



inline void _1c2e6c2b6_out_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce342a7_BuiltinOutCallExprModel> _29427_m) {
	static__1c2e689dd_optimize(_29427_m.get()._field_expr);
}



inline void _1c2e6c53b_outln_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel> _29829_m) {
	static__1c2e689dd_optimize(_29829_m.get()._field_expr);
}



inline void _1c2e6c7b1_panic_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel> _30229_m) {
	static__1c2e689dd_optimize(_30229_m.get()._field_expr);
}



inline void _1c2e6ca36_assert_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel> _30630_m) {
	static__1c2e689dd_optimize(_30630_m.get()._field_expr);
}



inline void _1c2e6ccab_error_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel> _31029_m) {
	static__1c2e689dd_optimize(_31029_m.get()._field_err);
}



inline void _1c2e6d031_make_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel> _31428_m) {
	if ((_31428_m.get()._field_len != nullptr)) {
		static__1c2e689dd_optimize(_31428_m.get()._field_len);
	};
	if ((_31428_m.get()._field_cap != nullptr)) {
		static__1c2e689dd_optimize(_31428_m.get()._field_cap);
	};
}



inline void _1c2e6d2a6_append_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce35121_BuiltinAppendCallExprModel> _32330_m) {
	static__1c2e689dd_optimize(_32330_m.get()._field_dest);
	static__1c2e689dd_optimize(_32330_m.get()._field_elements);
}



inline void _1c2e6d52b_clone_call(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce34681_BuiltinCloneCallExprModel> _32829_m) {
	static__1c2e689dd_optimize(_32829_m.get()._field_expr);
}



inline void _1c2e6d7a1_sizeof(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce333e9_SizeofExprModel> _33225_m) {
	static__1c2e689dd_optimize(_33225_m.get()._field_expr);
}



inline void _1c2e6da26_alignof(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce35b5a_AlignofExprModel> _33626_m) {
	static__1c2e689dd_optimize(_33626_m.get()._field_expr);
}



inline void _1c2e6dc9b_integrated_to_str(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce36034_IntegratedToStrExprModel> _34036_m) {
	static__1c2e689dd_optimize(_34036_m.get()._field_expr);
}



inline void _1c2e6e021_free(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce3640d_FreeExprModel> _34423_m) {
	static__1c2e689dd_optimize(_34423_m.get()._field_expr);
}



inline void _1c2e6e296_backend_emit(_1c2e68515_ExprOptimizer* _self_, jule::Ptr<_1dce36221_BackendEmitExprModel> _34831_m) {
	_1c2e69cdb_args(&(*_self_), _34831_m.get()._field_exprs);
}



inline void _1c2e6e472_do(_1c2e68515_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1dce31716_BinopExprModel>>()) {
			_case_begin_1abe17ce4:;
			{
				_1c2e69071_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce31716_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31903_UnaryExprModel>>()) {
			_case_begin_1abe180ad:;
			{
				_1c2e692e6_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce31903_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31ccc_StructLitExprModel>>()) {
			_case_begin_1abe18124:;
			{
				_1c2e6956b_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce31ccc_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31eb9_AllocStructLitExprModel>>()) {
			_case_begin_1abe1818a:;
			{
				_1c2e697e1_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce31eb9_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce321a6_CastingExprModel>>()) {
			_case_begin_1abe18201:;
			{
				_1c2e69a66_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce321a6_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1abe18278:;
			{
				_1c2e6a2d6_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce32393_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32580_SliceExprModel>>()) {
			_case_begin_1abe18300:;
			{
				_1c2e6a55b_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce32580_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33a04_ArrayExprModel>>()) {
			_case_begin_1abe18377:;
			{
				_1c2e6a7d1_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce33a04_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3276c_IndexingExprModel>>()) {
			_case_begin_1abe183ee:;
			{
				_1c2e6aa56_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce3276c_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32959_AnonFnExprModel>>()) {
			_case_begin_1abe18476:;
			{
				_1c2e6accb_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce32959_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32d33_MapExprModel>>()) {
			_case_begin_1abe184ed:;
			{
				_1c2e6b051_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce32d33_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33020_SlicingExprModel>>()) {
			_case_begin_1abe18575:;
			{
				_1c2e6b2c6_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce33020_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3320c_TraitSubIdentExprModel>>()) {
			_case_begin_1abe185ec:;
			{
				_1c2e6b54b_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce3320c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1abe18674:;
			{
				_1c2e6b7c1_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>>()) {
			_case_begin_1abe186eb:;
			{
				_1c2e6ba46_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce340ba_TupleExprModel>>()) {
			_case_begin_1abe18773:;
			{
				_1c2e6bcbb_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce340ba_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>>()) {
			_case_begin_1abe187ea:;
			{
				_1c2e6c2b6_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1abe18872:;
			{
				_1c2e6c53b_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>>()) {
			_case_begin_1abe188e9:;
			{
				_1c2e6c041_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1abe18971:;
			{
				_1c2e6c7b1_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>>()) {
			_case_begin_1abe189e8:;
			{
				_1c2e6ca36_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
			_case_begin_1abe18a70:;
			{
				_1c2e6ccab_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>>()) {
			_case_begin_1abe18ae7:;
			{
				_1c2e6d031_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>>()) {
			_case_begin_1abe18b6e:;
			{
				_1c2e6d2a6_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>>()) {
			_case_begin_1abe18be6:;
			{
				_1c2e6d52b_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce333e9_SizeofExprModel>>()) {
			_case_begin_1abe18c6d:;
			{
				_1c2e6d7a1_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce333e9_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35b5a_AlignofExprModel>>()) {
			_case_begin_1abe18ce5:;
			{
				_1c2e6da26_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce35b5a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36034_IntegratedToStrExprModel>>()) {
			_case_begin_1abe18d6c:;
			{
				_1c2e6dc9b_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce36034_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3640d_FreeExprModel>>()) {
			_case_begin_1abe18de4:;
			{
				_1c2e6e021_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce3640d_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36221_BackendEmitExprModel>>()) {
			_case_begin_1abe18e6b:;
			{
				_1c2e6e296_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1dce36221_BackendEmitExprModel>());
			}
		}
		_match_end_1abe17c8e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c2e68515_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9457e80_Optimizer> static__1c4427b8d_new(jule::Ptr<_1c41b3132_IR>& _2528_ir) {
	return jule::new_ptr<_1a9457e80_Optimizer>(_1a9457e80_Optimizer{._field_ir=_2528_ir});
}



inline void _1a93bb5ca_optimize_global(_1a9457e80_Optimizer* _self_, jule::Ptr<_1c2d266ae_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1c2e689dd_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1a93ea263_optimize_function(_1a9457e80_Optimizer* _self_, jule::Ptr<_1dce38993_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1abe2ec1d:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3b644_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1c2e62dd3_ScopeOptimizer> _4221_so = static__1c2e63433_new(_4121_ins.get()._field_scope);;
				_1c2e6638c_optimize(_4221_so.ptr());
			}
			_iter_next_1abe2ec1d:;
			++it;
			goto _iter_begin_1abe2ec1d;
		}
		_iter_end_1abe2ec1d:;
	};
}



inline void _1a93ee5a8_optimize_struct(_1a9457e80_Optimizer* _self_, jule::Ptr<_1dcd5a596_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1abe31181:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1abe31824:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd62c0d_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1c2e689dd_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1abe31824:;
						++it;
						goto _iter_begin_1abe31824;
					}
					_iter_end_1abe31824:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1abe32737:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _5725_m = *it;
						{
							_1a93ea263_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1abe32737:;
						++it;
						goto _iter_begin_1abe32737;
					}
					_iter_end_1abe32737:;
				};
			}
			_iter_next_1abe31181:;
			++it;
			goto _iter_begin_1abe31181;
		}
		_iter_end_1abe31181:;
	};
}



inline void _1a9403205_optimize_globals(_1a9457e80_Optimizer* _self_, jule::Ptr<_1c2d047ad_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abe32ced:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1abe33a46:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d266ae_Var> _6525_v = *it;
						{
							_1a93bb5ca_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1abe33a46:;
						++it;
						goto _iter_begin_1abe33a46;
					}
					_iter_end_1abe33a46:;
				};
			}
			_iter_next_1abe32ced:;
			++it;
			goto _iter_begin_1abe32ced;
		}
		_iter_end_1abe32ced:;
	};
}



inline void _1a940955d_optimize_functions(_1a9457e80_Optimizer* _self_, jule::Ptr<_1c2d047ad_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abe34184:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1abe34dcc:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _7325_func = *it;
						{
							_1a93ea263_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1abe34dcc:;
						++it;
						goto _iter_begin_1abe34dcc;
					}
					_iter_end_1abe34dcc:;
				};
			}
			_iter_next_1abe34184:;
			++it;
			goto _iter_begin_1abe34184;
		}
		_iter_end_1abe34184:;
	};
}



inline void _1a94126ba_optimize_structs(_1a9457e80_Optimizer* _self_, jule::Ptr<_1c2d047ad_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abe3551a:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1abe36263:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd5a596_Struct> _8125_s = *it;
						{
							_1a93ee5a8_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1abe36263:;
						++it;
						goto _iter_begin_1abe36263;
					}
					_iter_end_1abe36263:;
				};
			}
			_iter_next_1abe3551a:;
			++it;
			goto _iter_begin_1abe3551a;
		}
		_iter_end_1abe3551a:;
	};
}



inline void _1a941ccbe_optimize_package(_1a9457e80_Optimizer* _self_, jule::Ptr<_1c2d047ad_Package>& _8740_p) {
	_1a9403205_optimize_globals(&(*_self_), _8740_p);
	_1a940955d_optimize_functions(&(*_self_), _8740_p);
	_1a94126ba_optimize_structs(&(*_self_), _8740_p);
}



inline void _1a9422400_optimize(_1a9457e80_Optimizer* _self_) {
	_1a9423b2c_detect_enabled();
	if (_1c2e704a6_DEADCODE) {
		_1a947d2a2_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1c44285ea_scope_enabled || _1c4427495_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1abe3685c:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d01854_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1a941ccbe_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1abe3685c:;
				++it;
				goto _iter_begin_1abe3685c;
			}
			_iter_end_1abe3685c:;
		};
		_1a941ccbe_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_1c2e704a6_DEADCODE) {
		_1a9483054_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9457e80_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a949bcb5_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a949d080_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1a949bcb5_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a949cd93_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a949e735_log_flat(_207b80eb7_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1a949e944_log_error(_207b80eb7_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1a949bcb5_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1c2c3c273_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1c2c3c273_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _207b15798_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_207b15798_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1c2c3c273_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_207a6542e_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_207a6542e_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_207a6542e_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a949d080_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a949eb53_log(_207b80eb7_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1abe48473:;
			{
				static__1a949e735_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1abe484d9:;
			{
				static__1a949e944_log_error(_6524_l);
			}
		}
		_match_end_1abe4831e:;
	};
}



inline void static__1a949ed62_print_logs(jule::Slice<_207b80eb7_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1abe3d29d:;
		if (it != expr.end()) {
			_207b80eb7_Log &_7616_l = *it;
			{
				static__1a949eb53_log(_7616_l);
			}
			_iter_next_1abe3d29d:;
			++it;
			goto _iter_begin_1abe3d29d;
		}
		_iter_end_1abe3d29d:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1c2c3c273_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a949e47c_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a9a72665_unix(_1a9a722ad_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a9a7777a_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1a9a77b10_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a722ad_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1a9a72951_Time static__1a9a72ce7_unix(jule::U64 _9124_sec) {
	return _1a9a72951_Time{._field_sec=_9124_sec};
}



inline _1a9a72951_Time static__1a9a72ee5_now(void) {
	return static__1a9a72ce7_unix(static_cast<jule::U64>(_1a9a77439_unix()));
}



inline jule::U64 _1a9a73446_unix(_1a9a72951_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1a9a736aa_day(_1a9a72951_Time* _self_) {
	return _1a9a74634_abs(&(*_self_))._field_day;
}



inline jule::U64 _1a9a7391e_month(_1a9a72951_Time* _self_) {
	return _1a9a74634_abs(&(*_self_))._field_month;
}



inline jule::U64 _1a9a73b83_year(_1a9a72951_Time* _self_) {
	return _1a9a74634_abs(&(*_self_))._field_year;
}



inline jule::U64 _1a9a73de7_second(_1a9a72951_Time* _self_) {
	return _1a9a74634_abs(&(*_self_))._field_second;
}



inline jule::U64 _1a9a7415b_minute(_1a9a72951_Time* _self_) {
	return _1a9a74634_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1a9a743c0_hour(_1a9a72951_Time* _self_) {
	return _1a9a74634_abs(&(*_self_))._field_hour;
}



inline _1a9a722ad_AbsTime _1a9a74634_abs(_1a9a72951_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a9a71851_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1a9a71851_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1abe75417:;
	}
	_iter_end_1abe75417:;;
	_1a9a722ad_AbsTime _17417_t = _1a9a722ad_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a72951_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a99eb4e0_ScopeCoder> static__1a99ebb0b_new(jule::Ptr<_1a9a7814e_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1a99eb4e0_ScopeCoder>(_1a99eb4e0_ScopeCoder{._field_oc=_5524_oc});
}



inline void _1a99ebd81_range_index_iter(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd4a46_RangeIter>& _6141_it) {
	jule::Str _6213_begin = static__1a9a17c8c_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	jule::Str _6313_next = static__1a9a182cb_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it)));;
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1c2e70154_COPY && _1a9a01a45_is_copy_optimizable(_6141_it.get()._field_expr))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a9a0e437_model(_self_.get()._field_oc.get()._field_ec, _6141_it.get()._field_expr.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, _6213_begin);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_1a9a79cdd_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9a5d486_indent(_self_.get()._field_oc);
	};
	if ((_6141_it.get()._field_key_b != nullptr)) {
		if (_1c2e70154_COPY) {
			_6141_it.get()._field_key_b.get()._field_reference=_1a9a01dec_is_iter_copy_optimizable(_6141_it.get()._field_expr,_6141_it.get()._field_key_b);
		};
		_1a9a79cdd_var_init_expr(_self_.get()._field_oc, _6141_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9a5d486_indent(_self_.get()._field_oc);
	};
	_1a9a0146d_scope(_self_, _6141_it.get()._field_scope);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, _6313_next);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a9a5d486_indent(_self_.get()._field_oc);
	if ((_6141_it.get()._field_key_a != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a179e5_var(_6141_it.get()._field_key_a));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a9a5d486_indent(_self_.get()._field_oc);
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9a5b4a6_write(_self_.get()._field_oc, _6213_begin);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18034_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6141_it))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a99ec106_range_hashmap_iter(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd4a46_RangeIter>& _12943_it) {
	jule::Str _13013_begin = static__1a9a17c8c_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	jule::Str _13113_next = static__1a9a182cb_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it)));;
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1c2e70154_COPY && _1a9a01a45_is_copy_optimizable(_12943_it.get()._field_expr))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a9a0e437_model(_self_.get()._field_oc.get()._field_ec, _12943_it.get()._field_expr.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, _13013_begin);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	if ((_12943_it.get()._field_key_a != nullptr)) {
		if (_1c2e70154_COPY) {
			_12943_it.get()._field_key_a.get()._field_reference=_1a9a01dec_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_a);
		};
		_1a9a79cdd_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9a5d486_indent(_self_.get()._field_oc);
	};
	if ((_12943_it.get()._field_key_b != nullptr)) {
		if (_1c2e70154_COPY) {
			_12943_it.get()._field_key_b.get()._field_reference=_1a9a01dec_is_iter_copy_optimizable(_12943_it.get()._field_expr,_12943_it.get()._field_key_b);
		};
		_1a9a79cdd_var_init_expr(_self_.get()._field_oc, _12943_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9a5d486_indent(_self_.get()._field_oc);
	};
	_1a9a0146d_scope(_self_, _12943_it.get()._field_scope);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, _13113_next);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9a5b4a6_write(_self_.get()._field_oc, _13013_begin);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18034_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12943_it))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a99ec37b_if_case(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd321a_If> _19531_i) {
	if ((_19531_i.get()._field_expr != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _19531_i.get()._field_expr);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a9a0146d_scope(_self_, _19531_i.get()._field_scope);
}



inline void _1a99ec601_conditional(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd3902_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac01e3c3:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd321a_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1ac01e3c3;
				};
				if (_20517_writed) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1a99ec37b_if_case(_self_, _20621_elif);
			}
			_iter_next_1ac01e3c3:;
			++it;
			goto _iter_begin_1ac01e3c3;
		}
		_iter_end_1ac01e3c3:;
	};
	if ((_20435_c.get()._field_default != nullptr)) {
		if (_20517_writed) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a9a0146d_scope(_self_, _20435_c.get()._field_default.get()._field_scope);
	};
}



inline void _1a99ec876_inf_iter(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd3bdd_InfIter> _22432_it) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a0146d_scope(_self_, _22432_it.get()._field_scope);
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a182cb_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18034_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22432_it))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a99ecaeb_while_iter(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd4161_WhileIter> _24134_it) {
	if (((_24134_it.get()._field_expr != nullptr) && (_24134_it.get()._field_next == nullptr))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24134_it.get()._field_expr != nullptr)) {
			_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _24134_it.get()._field_expr);
		};
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24134_it.get()._field_next != nullptr)) {
			_1a9a00e73_st(_self_, _24134_it.get()._field_next);
		};
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a0146d_scope(_self_, _24134_it.get()._field_scope);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a182cb_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18034_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24134_it))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a99ecd71_range_iter(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd4a46_RangeIter> _27434_it) {
	{
		
		if ((_1c2da28b1_slc(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac02e889:;
			{
				_1a99ebd81_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_1c2da264c_arr(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac02e559:;
			{
				_1a99ebd81_range_index_iter(_self_, _27434_it);
			}
		}
		else if ((_1c2da3362_map(_27434_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac02e5c0:;
			{
				_1a99ec106_range_hashmap_iter(_self_, _27434_it);
			}
		}
		else {
			_case_begin_1ac02e4e3:;
			{
				_1a99ebd81_range_index_iter(_self_, _27434_it);
			}
		}
		_match_end_1ac02e416:;
	};
}



inline void _1a99ed0e6_cont(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd4e42_ContSt> _28724_c) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a182cb_iter_next(_28724_c.get()._field_it));
}



inline void _1a99ed36b_label(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd55d5_Label> _29225_l) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18573_label(_29225_l.get()._field_ident));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a99ed5e1_goto_st(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd58c1_GotoSt> _29727_gt) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18573_label(_29727_gt.get()._field_ident));
}



inline void _1a99ed866_postfix(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd5c78_Postfix> _30231_p) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a9a5b4a6_write(_self_.get()._field_oc, _30231_p.get()._field_op);
}



inline void _1a99edadb_assign(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd61eb_Assign> _30930_a) {
	_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_l.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, _30930_a.get()._field_op.get()._field_kind);
	_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_r.get()._field_model);
}



inline void _1a99edd61_multi_assign(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd65a3_MultiAssign> _31536_a) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31536_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1ac038a91:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31536_a.get()._field_l.len() - _31714_i) > 1LL)) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ac038a91:;
			++it;
			_31714_i++;
			goto _iter_begin_1ac038a91;
		}
		_iter_end_1ac038a91:;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _31536_a.get()._field_r);
}



inline jule::Fn<void(void)> _1a99ee16e_match_expr(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd6ae2_Match> _33134_m) {
	if ((!(_1c2d6e3a5_is_const(_33134_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1dce2ba0d_is_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1dce29665_read_bool(_33134_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9a0e437_model(_self_.get()._field_oc.get()._field_ec, _33134_m.get()._field_expr.get()._field_model);
		});
	};
	return nullptr;
}



inline void _1a99ee48d_case(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd6ae2_Match> _34128_m, jule::Ptr<_1c2cd763c_Case> _34143_c) {
	if (((_34143_c.get()._field_exprs.len() != 0LL) && (!(_1c2cd70ed_is_generic_type_match(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_cases.len() > 0LL) && (_34128_m.get()._field_cases[0LL] == _34143_c))) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1ac041b32:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1c2d6d9e2_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_type_match))) {
							_case_begin_1ac043edb:;
							{
								jule::Fn<void(void)> _35125_case_expr = _1a99ee16e_match_expr(_self_, _34128_m);;
								if (_1c2d6e6b3_good_operand(_34128_m.get()._field_expr.ptr(), _34825_expr)) {
									if ((_35125_case_expr != nullptr)) {
										_35125_case_expr();
										_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								} else {
									_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
									if ((_35125_case_expr != nullptr)) {
										_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1ac042946:;
							{
								_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_model);
								_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1ac042869:;
					};
					if (((_34143_c.get()._field_exprs.len() - _34818_i) > 1LL)) {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1ac041b32:;
				++it;
				_34818_i++;
				goto _iter_begin_1ac041b32;
			}
			_iter_end_1ac041b32:;
		};
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_default == _34143_c) && (_34128_m.get()._field_cases.len() != 0LL))) {
		_1a9a5d486_indent(_self_.get()._field_oc);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18ab2_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1a9a5d486_indent(_self_.get()._field_oc);
		_1a9a0146d_scope(_self_, _34143_c.get()._field_scope);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a99ee713_match_st(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd6ae2_Match> _40032_m) {
	if (((_40032_m.get()._field_cases.len() == 0LL) && (_40032_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _40513_generic_type_match = _1c2cd70ed_is_generic_type_match(_40032_m.ptr());;
	if ((_40513_generic_type_match && ((_40032_m.get()._field_default == nullptr) || (_40032_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	if (((!(_40513_generic_type_match)) && (!(_1c2d6e3a5_is_const(_40032_m.get()._field_expr.ptr()))))) {
		if ((_1c2e70154_COPY && _1a9a01a45_is_copy_optimizable(_40032_m.get()._field_expr))) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _40032_m.get()._field_expr.get()._field_model);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a9a5d486_indent(_self_.get()._field_oc);
	};
	if ((_40032_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _40032_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1ac053924:;
			if (it != expr.end()) {
				jule::Ptr<_1c2cd763c_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1ac053924;
					};
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a9a5d486_indent(_self_.get()._field_oc);
					_1a99ee48d_case(_self_, _40032_m,_42925_c);
				}
				_iter_next_1ac053924:;
				++it;
				goto _iter_begin_1ac053924;
			}
			_iter_end_1ac053924:;
		};
	};
	if ((_40032_m.get()._field_default != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a99ee48d_case(_self_, _40032_m,_40032_m.get()._field_default);
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a1881a_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40032_m))));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a99ee988_fall_st(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd7be2_FallSt> _45627_f) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18ab2_case_begin(_45627_f.get()._field_dest_case));
}



inline void _1a99eec0d_break_st(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd52e9_BreakSt> _46128_b) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46128_b.get()._field_it != 0LLU)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a18034_iter_end(_46128_b.get()._field_it));
	} else {
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a1881a_match_end(_46128_b.get()._field_mtch));
	};
}



inline void _1a99eee83_ret_with_vars(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd8165_RetSt> _47037_r) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_47037_r.get()._field_func.get()._field_result));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47037_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac05e06c:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1c2d266ae_Var> _48021_v = *it;
			{
				if (_1db70894b_is_ignore_ident(_48021_v.get()._field_ident)) {
					_1a9a0eba7_init_expr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_kind.get()._field_kind);
				} else {
					_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a179e5_var(_48021_v));
				};
				if (((_47037_r.get()._field_vars.len() - _48014_i) > 1LL)) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ac05e06c:;
			++it;
			_48014_i++;
			goto _iter_begin_1ac05e06c;
		}
		_iter_end_1ac05e06c:;
	};
	if ((_47037_r.get()._field_vars.len() > 1LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47037_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a9a00208_ret_tuple(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd8165_RetSt> _50033_r) {
	jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _50117_datas = _50033_r.get()._field_expr.operator jule::Ptr<_1dce340ba_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _50033_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac063549:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1c2d266ae_Var> _50221_v = *it;
			{
				if (_1db70894b_is_ignore_ident(_50221_v.get()._field_ident)) {
					goto _iter_next_1ac063549;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1ac063549;
				};
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a179e5_var(_50221_v));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a9a5d486_indent(_self_.get()._field_oc);
			}
			_iter_next_1ac063549:;
			++it;
			_50214_i++;
			goto _iter_begin_1ac063549;
		}
		_iter_end_1ac063549:;
	};
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_50033_r.get()._field_func.get()._field_result));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1ac0685c6:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1c2d6d9e2_Data> _52721_d = *it;
			{
				jule::Ptr<_1c2d266ae_Var> _52821_v = _50033_r.get()._field_vars[_52714_i];;
				if (_1db70894b_is_ignore_ident(_52821_v.get()._field_ident)) {
					_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_model);
				} else {
					_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a179e5_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ac0685c6:;
			++it;
			_52714_i++;
			goto _iter_begin_1ac0685c6;
		}
		_iter_end_1ac0685c6:;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50033_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a9a0047d_ret_with_exprs(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd8165_RetSt> _54538_r) {
	if ((_54538_r.get()._field_vars.len() > 1LL)) {
		_1a9a00208_ret_tuple(_self_, _54538_r);
		return;;
	};
	if ((_54538_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1c2d266ae_Var> _55321_v = _54538_r.get()._field_vars[0LL];;
		if (((!(_1db70894b_is_ignore_ident(_55321_v.get()._field_ident))) && (_54538_r.get()._field_expr != _55321_v))) {
			jule::Str _55521_ident = static__1a9a179e5_var(_55321_v);;
			_1a9a5b4a6_write(_self_.get()._field_oc, _55521_ident);
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1a9a5d486_indent(_self_.get()._field_oc);
			if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_54538_r.get()._field_func.get()._field_result));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1a9a5b4a6_write(_self_.get()._field_oc, _55521_ident);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1a9a5b4a6_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54538_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_54538_r.get()._field_func.get()._field_result));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _54538_r.get()._field_expr);
	return;;
}



inline void _1a9a00703_ret_st(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd8165_RetSt> _58930_r) {
	if (((_58930_r.get()._field_expr == nullptr) && (_58930_r.get()._field_vars.len() == 0LL))) {
		if (_58930_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58930_r.get()._field_expr == nullptr)) {
		_1a99eee83_ret_with_vars(_self_, _58930_r);
		return;;
	};
	_1a9a0047d_ret_with_exprs(_self_, _58930_r);
}



inline void _1a9a00bed_var(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2d266ae_Var> _62427_v) {
	if ((!(_62427_v.get()._field_constant))) {
		_1a9a7a063_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1a9a00e73_st(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd2d1e_Scope>>()) {
			_case_begin_1ac07e972:;
			{
				_1a9a0146d_scope(_self_, _63126_st.operator jule::Ptr<_1c2cd2d1e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1ac07e631:;
			{
				_1a9a00bed_var(_self_, _63126_st.operator jule::Ptr<_1c2d266ae_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1ac08008d:;
			{
				_1a9a0e6ac_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1c2d6d9e2_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3902_Conditional>>()) {
			_case_begin_1ac080104:;
			{
				_1a99ec601_conditional(_self_, _63126_st.operator jule::Ptr<_1c2cd3902_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
			_case_begin_1ac08016a:;
			{
				_1a99ec876_inf_iter(_self_, _63126_st.operator jule::Ptr<_1c2cd3bdd_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4161_WhileIter>>()) {
			_case_begin_1ac0801d1:;
			{
				_1a99ecaeb_while_iter(_self_, _63126_st.operator jule::Ptr<_1c2cd4161_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4a46_RangeIter>>()) {
			_case_begin_1ac080247:;
			{
				_1a99ecd71_range_iter(_self_, _63126_st.operator jule::Ptr<_1c2cd4a46_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4e42_ContSt>>()) {
			_case_begin_1ac0802ad:;
			{
				_1a99ed0e6_cont(_self_, _63126_st.operator jule::Ptr<_1c2cd4e42_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd55d5_Label>>()) {
			_case_begin_1ac080324:;
			{
				_1a99ed36b_label(_self_, _63126_st.operator jule::Ptr<_1c2cd55d5_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd58c1_GotoSt>>()) {
			_case_begin_1ac08038a:;
			{
				_1a99ed5e1_goto_st(_self_, _63126_st.operator jule::Ptr<_1c2cd58c1_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd5c78_Postfix>>()) {
			_case_begin_1ac080401:;
			{
				_1a99ed866_postfix(_self_, _63126_st.operator jule::Ptr<_1c2cd5c78_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd61eb_Assign>>()) {
			_case_begin_1ac080467:;
			{
				_1a99edadb_assign(_self_, _63126_st.operator jule::Ptr<_1c2cd61eb_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd65a3_MultiAssign>>()) {
			_case_begin_1ac0804de:;
			{
				_1a99edd61_multi_assign(_self_, _63126_st.operator jule::Ptr<_1c2cd65a3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd6ae2_Match>>()) {
			_case_begin_1ac080566:;
			{
				_1a99ee713_match_st(_self_, _63126_st.operator jule::Ptr<_1c2cd6ae2_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd7be2_FallSt>>()) {
			_case_begin_1ac0805dd:;
			{
				_1a99ee988_fall_st(_self_, _63126_st.operator jule::Ptr<_1c2cd7be2_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd52e9_BreakSt>>()) {
			_case_begin_1ac080665:;
			{
				_1a99eec0d_break_st(_self_, _63126_st.operator jule::Ptr<_1c2cd52e9_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd8165_RetSt>>()) {
			_case_begin_1ac0806dc:;
			{
				_1a9a00703_ret_st(_self_, _63126_st.operator jule::Ptr<_1c2cd8165_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e612ee_PushToSliceExprModel>>()) {
			_case_begin_1ac080764:;
			{
				_1a9a0c3be_push_to_slice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1c2e612ee_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e618b5_MutSlicingExprModel>>()) {
			_case_begin_1ac0807db:;
			{
				_1a9a0de3c_mut_slicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1c2e618b5_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e61c5b_StrInsertBeginExprModel>>()) {
			_case_begin_1ac080863:;
			{
				_1a9a0e1b2_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1c2e61c5b_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1ac07e378:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ac07e323:;
	};
}



inline void _1a9a011e8_scope_stmts(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd2d1e_Scope>& _68136_s) {
	{
		auto &expr = _68136_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ac08a7b3:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1a9a5d486_indent(_self_.get()._field_oc);
				_1a9a00e73_st(_self_, _68221_st);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1ac08a7b3:;
			++it;
			goto _iter_begin_1ac08a7b3;
		}
		_iter_end_1ac08a7b3:;
	};
}



inline void _1a9a0146d_scope(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1c2cd2d1e_Scope> _69029_s) {
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	if (_69029_s.get()._field_deferred) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9a011e8_scope_stmts(_self_, _69029_s);
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_deferred) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a9a016e3_func_scope(jule::Ptr<_1a99eb4e0_ScopeCoder> _self_, jule::Ptr<_1dce3b644_FnIns> _70634_f) {
	if ((_70634_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	if ((!(_1dce38e05_is_void(_70634_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _71321_types = _1dce3c766_types(_70634_f.ptr());;
		{
			auto &expr = _70634_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1ac091577:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1db7061a7_Token> _71420_ident = *it;
				{
					if ((_1db70894b_is_ignore_ident(_71420_ident.get()._field_kind) || _1db708be3_is_anon_ident(_71420_ident.get()._field_kind))) {
						goto _iter_next_1ac091577;
					};
					_1a9a5d486_indent(_self_.get()._field_oc);
					_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_71321_types[_71417_i]));
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a163d9_to_local(_71420_ident.get()._field_row,_71420_ident.get()._field_column,_71420_ident.get()._field_kind));
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1a9a0eba7_init_expr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1ac091577:;
				++it;
				_71417_i++;
				goto _iter_begin_1ac091577;
			}
			_iter_end_1ac091577:;
		};
	};
	_1a9a011e8_scope_stmts(_self_, _70634_f.get()._field_scope);
	if ((_70634_f.get()._field_decl.get()._field_exceptional && _1dce38e05_is_void(_70634_f.get()._field_decl.ptr()))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a99eb4e0_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a04064_ExprCoder> static__1a9a04460_new(jule::Ptr<_1a9a7814e_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1a9a04064_ExprCoder>(_1a9a04064_ExprCoder{._field_oc=_9724_oc});
}



inline void _1a9a046d5_string(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dcdbd1a8_Const>& _10327_c) {
	jule::Str _10413_content = _1dce298c9_read_str(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1c2c3becb_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1a9a108ab_cstr_lit(_10913_bytes);;
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a5b4a6_write(_self_.get()._field_oc, _11113_lit);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a9a5b4a6_write(_self_.get()._field_oc, _11013_len);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0495a_boolean(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dcdbd1a8_Const>& _12028_c) {
	if (_1dce29665_read_bool(_12028_c.ptr())) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1a9a04b36_nil_lit(jule::Ptr<_1a9a04064_ExprCoder> _self_) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a9a04e44_ftoa_special_cases(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::F64& _13239_x) {
	{
		
		if (_1dd94d3ec_is_nan(_13239_x)) {
			_case_begin_1ac0b0ec0:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1dd955701_is_inf(_13239_x,1LL)) {
			_case_begin_1ac0b0783:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1dd955701_is_inf(_13239_x,-1LL)) {
			_case_begin_1ac0b07e9:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ac0b071c:;
			{
				return false;
			}
		}
		_match_end_1ac0b0640:;
	};
	return true;
}



inline void _1a9a051b9_float32(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dcdbd1a8_Const>& _14628_c) {
	jule::F64 _14713_x = _1dce2a37a_as_f64(_14628_c.ptr());;
	if (_1a9a04e44_ftoa_special_cases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ac0b3995:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ac0b3698:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ac0b3016:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a10bb9_ftoa(_14713_x,32LL));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1ac0b33ce:;
	};
}



inline void _1a9a0543e_float64(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dcdbd1a8_Const>& _16528_c) {
	jule::F64 _16613_x = _1dce2a37a_as_f64(_16528_c.ptr());;
	if (_1a9a04e44_ftoa_special_cases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1ac0b69dc:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1ac0b714c:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ac0b605d:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a10bb9_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1ac0b6426:;
	};
}



inline void _1a9a0575d_constant(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dcdbd1a8_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1dce2bc72_is_str(_18432_c.ptr())) {
			_case_begin_1ac0b8956:;
			{
				_1a9a046d5_string(_self_, _18432_c);
			}
		}
		else if (_1dce2ba0d_is_bool(_18432_c.ptr())) {
			_case_begin_1ac0b89bc:;
			{
				_1a9a0495a_boolean(_self_, _18432_c);
			}
		}
		else if (_1dce2bed6_is_f64(_18432_c.ptr())) {
			_case_begin_1ac0b8a33:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1ac0bac22:;
						{
							_1a9a051b9_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1ac0ba87b:;
						{
							_1a9a0543e_float64(_self_, _18432_c);
						}
					}
					_match_end_1ac0ba79e:;
				};
			}
		}
		else if (_1dce2b535_is_i64(_18432_c.ptr())) {
			_case_begin_1ac0b8a99:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a10e61_itoa(static_cast<jule::I64>(_1dce2918c_read_i64(_18432_c.ptr()))));
			}
		}
		else if (_1dce2b799_is_u64(_18432_c.ptr())) {
			_case_begin_1ac0b93e6:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a11208_utoa(static_cast<jule::U64>(_1dce29401_read_u64(_18432_c.ptr()))));
			}
		}
		else if (_1dce2c24a_is_nil(_18432_c.ptr())) {
			_case_begin_1ac0b945c:;
			{
				_1a9a04b36_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1ac0b88e0:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ac0b8813:;
	};
}



inline void _1a9a05b26_div_by_zero_binary(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1db7061a7_Token>& _20839_op, jule::Ptr<_1dce31529_OperandExprModel>& _20856_l, jule::Ptr<_1dce31529_OperandExprModel>& _20883_r) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20839_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1ac0bdd24:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ac0bdd8a:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1ac0bdc25:;
	};
	if ((!(_204ed188c_PRODUCTION))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a9a5e872_loc_info(_self_.get()._field_oc, _20839_op);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a9a0e6ac_expr(_self_, _20856_l.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a9a0e6ac_expr(_self_, _20883_r.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a05d9b_unsafe_binary(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce31716_BinopExprModel> _23037_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a0e437_model(_self_, _23037_m.get()._field_left.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a9a5b4a6_write(_self_.get()._field_oc, _23037_m.get()._field_op.get()._field_kind);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a9a0e437_model(_self_, _23037_m.get()._field_right.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a06121_binary(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce31716_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1ac0c5468:;
			{
				if ((_1c2da2d89_strct(_24030_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1a9a05b26_div_by_zero_binary(_self_, _24030_m.get()._field_op,_24030_m.get()._field_left,_24030_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1ac0c53ad:;
	};
	_1a9a05d9b_unsafe_binary(_self_, _24030_m);
}



inline void _1a9a06396_var(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2d266ae_Var> _25227_m) {
	if (_25227_m.get()._field_cpp_linked) {
		jule::Ptr<_1dcd36671_Directive> _25417_d = _1a9a8b23e_find_directive(_25227_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a7ceab_concat_all_parts(_25417_d.get()._field_args));
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a179e5_var(_25227_m));
}



inline void _1a9a0661b_structure_ins(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dcd868e1_StructIns> _26337_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a872c3_structure_ins(_26337_m));
}



inline void _1a9a06891_unary(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce31903_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ac0c9eea:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a9a0e6ac_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac0ca061:;
			{
				if ((_204ed188c_PRODUCTION || (_1c2da1b9b_sptr(_26729_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1ac0c9e40;
				};
				_1a9a0e6ac_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a9a5e872_loc_info(_self_.get()._field_oc, _26729_m.get()._field_op);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1ac0c9e40:;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a5b4a6_write(_self_.get()._field_oc, _26729_m.get()._field_op.get()._field_kind);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a0e6ac_expr(_self_, _26729_m.get()._field_expr.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a9a06b16_structure_lit(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce31ccc_StructLitExprModel> _29137_m) {
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a174a6_structure_ins(_29137_m.get()._field_strct));
	if (_29137_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29137_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29137_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ac0d2651:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1dcd62c0d_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29137_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1ac0d3223:;
						if (it != expr.end()) {
							jule::Ptr<_1dce31ae0_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_field == _30420_f)) {
									_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a1774d_field(_30529_arg.get()._field_field.get()._field_decl));
									_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a9a0e6ac_expr(_self_, _30529_arg.get()._field_expr);
									if (((_29137_m.get()._field_strct.get()._field_fields.len() - _30417_i) > 1LL)) {
										_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1ac0d2651;
								};
							}
							_iter_next_1ac0d3223:;
							++it;
							goto _iter_begin_1ac0d3223;
						}
						_iter_end_1ac0d3223:;
					};
				}
				_iter_next_1ac0d2651:;
				++it;
				_30417_i++;
				goto _iter_begin_1ac0d2651;
			}
			_iter_end_1ac0d2651:;
		};
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a9a06d8b_alloc_structure(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce31eb9_AllocStructLitExprModel> _32239_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a174a6_structure_ins(_32239_m.get()._field_lit.get()._field_strct));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a9a06b16_structure_lit(_self_, _32239_m.get()._field_lit);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a07111_casting(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce321a6_CastingExprModel> _33031_m) {
	{
		
		if (((_1c2da1937_prim(_33031_m.get()._field_kind.ptr()) != nullptr) && _1c2da7795_is_any(_1c2da1937_prim(_33031_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ac0d90c5:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_33031_m.get()._field_kind));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a9a0e437_model(_self_, _33031_m.get()._field_expr);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1c2da1e10_ptr(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || (_1c2da1e10_ptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0d8c95:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_33031_m.get()._field_kind));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a9a0e6ac_expr(_self_, _33031_m.get()._field_expr);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1c2da30ed_trt(_33031_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1c2da1937_prim(_33031_m.get()._field_expr_kind.ptr()) != nullptr) && _1c2da7795_is_any(_1c2da1937_prim(_33031_m.get()._field_expr_kind.ptr()).ptr())) || (_1c2da23d8_tenm(_33031_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1ac0d8d0b:;
			{
				_1a9a0e437_model(_self_, _33031_m.get()._field_expr);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_204ed188c_PRODUCTION) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_33031_m.get()._field_kind));
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1c2da1b9b_sptr(_33031_m.get()._field_kind.ptr()) != nullptr)) {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_1c2da1b9b_sptr(_33031_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_33031_m.get()._field_kind));
					};
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1a9a5e872_loc_info(_self_.get()._field_oc, _33031_m.get()._field_token);
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1c2da30ed_trt(_33031_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac0d8d72:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_33031_m.get()._field_kind));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a9a0e6ac_expr(_self_, _33031_m.get()._field_expr);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a9a5b4a6_write(_self_.get()._field_oc, _1c2c3c273_itoa(static_cast<jule::I64>(_1a9a4c80a_find_type_offset(_self_.get()._field_oc.ptr(), _1c2da30ed_trt(_33031_m.get()._field_kind.ptr()),_33031_m.get()._field_expr_kind))));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1ac0d8c2e:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_33031_m.get()._field_kind));
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1a9a0e6ac_expr(_self_, _33031_m.get()._field_expr);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ac0d8b52:;
	};
}



inline void _1a9a07386_args(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1ac0e969b:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1a9a0e6ac_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ac0e969b:;
			++it;
			_38514_i++;
			goto _iter_begin_1ac0e969b;
		}
		_iter_end_1ac0e969b:;
	};
}



inline void _1a9a0760b_model_for_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Any _39338_expr) {
	{
		auto &_match_expr{ _39338_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dce3b644_FnIns>>()) {
			_case_begin_1ac0eb66a:;
			{
				_1a9a0a3de_func_ins(_self_, _39338_expr.operator jule::Ptr<_1dce3b644_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1ac0eb6e2:;
			{
				jule::Ptr<_1dce3362a_StructSubIdentExprModel> _39921_ssie = _39338_expr.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_method != nullptr)) {
					_1a9a0a3de_func_ins(_self_, _39921_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1ac0eb55a:;
	};
	_1a9a0e437_model(_self_, _39338_expr);
}



inline void _1a9a07881_push_call_inf(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32393_FnCallExprModel>& _40834_m) {
	if ((_204ed188c_PRODUCTION || ((!(_40834_m.get()._field_func.get()._field_anon)) && (!(_1a9a11879_is_builtin_call_has_debuginf(_40834_m)))))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40834_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40834_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
				_case_begin_1ac0eea47:;
				{
					if (_40834_m.get()._field_expr.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1ac0eec23;
				}
			}
			else {
				_case_begin_1ac0eec23:;
				{
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1ac0eeb02:;
		};
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a9a5e872_loc_info(_self_.get()._field_oc, _40834_m.get()._field_token);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40834_m.get()._field_args.len() != 0LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1a9a07b8e_is_wrapped(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32393_FnCallExprModel>& _43335_m) {
	if ((((!(_1dce3c9ca_is_builtin(_43335_m.get()._field_func.ptr()))) && (_43335_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1dce37783_is_self(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43335_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
				_case_begin_1ac103782:;
				{
					jule::Ptr<_1dce3362a_StructSubIdentExprModel> _43725_ssie = _43335_m.get()._field_expr.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>();;
					{
						
						if (_1dce379e7_is_ref(_43335_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1c2da1b9b_sptr(_43725_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1ac1040ac:;
							{
								goto _match_end_1ac104640;
							}
						}
						else {
							_case_begin_1ac1046a6:;
							{
								if ((_1c2da2d89_strct(_43725_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_expr.get()._field_lvalue))) {
										_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a9a0e437_model(_self_, _43725_ssie.get()._field_expr.get()._field_model);
										_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1ac104640:;
					};
				}
			}
			_match_end_1ac103573:;
		};
	};
	return false;
}



inline void _1a9a07e14_pure_func_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32393_FnCallExprModel>& _45739_m) {
	jule::Bool _45813_wrapped = _1a9a07b8e_is_wrapped(_self_, _45739_m);;
	if (_45739_m.get()._field_is_co) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1a9a0760b_model_for_call(_self_, _45739_m.get()._field_expr);
	if ((!(_1dce3c9ca_is_builtin(_45739_m.get()._field_func.ptr())))) {
		if ((_45739_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45739_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1a9a8b5c4_has_directive(_45739_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45739_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ac10a9cb:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1c2d9d0e8_InsGeneric> _46733_g = *it;
						{
							_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_46733_g.get()._field_kind));
							if (((_45739_m.get()._field_func.get()._field_generics.len() - _46726_i) > 1LL)) {
								_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1ac10a9cb:;
						++it;
						_46726_i++;
						goto _iter_begin_1ac10a9cb;
					}
					_iter_end_1ac10a9cb:;
				};
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a9a07881_push_call_inf(_self_, _45739_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1dce3c9ca_is_builtin(_45739_m.get()._field_func.ptr()))) && (_45739_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1dce37783_is_self(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45739_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
				_case_begin_1ac1096de:;
				{
					jule::Ptr<_1dce3362a_StructSubIdentExprModel> _48225_ssie = _45739_m.get()._field_expr.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>();;
					{
						
						if (_1dce379e7_is_ref(_45739_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1ac1116a2:;
							{
								_1a9a0e437_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
							}
						}
						else if ((_1c2da1b9b_sptr(_48225_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1ac111c13:;
							{
								_1a9a0e437_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_204ed188c_PRODUCTION))) {
									_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a9a5e872_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
									_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1ac11030a:;
							{
								if ((_1c2da2d89_strct(_48225_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a9a0e437_model(_self_, _48225_ssie.get()._field_expr.get()._field_model);
								};
							}
						}
						_match_end_1ac110294:;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1dce3320c_TraitSubIdentExprModel>>()) {
				_case_begin_1ac10e381:;
				{
					_1a9a0e437_model(_self_, _45739_m.get()._field_expr.operator jule::Ptr<_1dce3320c_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_204ed188c_PRODUCTION))) {
						_47817_locinfo=true;
					};
					if ((_45739_m.get()._field_args.len() > 0LL)) {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1ac10e21b:;
		};
	};
	_1a9a07386_args(_self_, _45739_m.get()._field_args);
	if (_47817_locinfo) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a9a5e872_loc_info(_self_.get()._field_oc, _45739_m.get()._field_token);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45739_m.get()._field_is_co) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a9a08189_func_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32393_FnCallExprModel> _53633_m) {
	if (((_1dce3c9ca_is_builtin(_53633_m.get()._field_func.ptr()) || (!(_53633_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53633_m.get()._field_except != nullptr) && (_53633_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1a9a07e14_pure_func_call(_self_, _53633_m);
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a9a07e14_pure_func_call(_self_, _53633_m);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	if ((_53633_m.get()._field_except != nullptr)) {
		if (((_53633_m.get()._field_func.get()._field_result == nullptr) || (!(_53633_m.get()._field_assigned)))) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a9a0146d_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1a9a115b0_is_forwarded(_53633_m.get()._field_except);;
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1a9a0146d_scope(_self_.get()._field_oc.get()._field_sc, _53633_m.get()._field_except);
			if (_55821_forwarded) {
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a9a0eba7_init_expr(_self_, _53633_m.get()._field_func.get()._field_result);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a9a5cc38_done_indent(_self_.get()._field_oc);
	} else {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a9a5e872_loc_info(_self_.get()._field_oc, _53633_m.get()._field_token);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1dce38e05_is_void(_53633_m.get()._field_func.get()._field_decl.ptr())))) {
			_1a9a5d486_indent(_self_.get()._field_oc);
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a9a5cc38_done_indent(_self_.get()._field_oc);
	};
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9a0840e_slice(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32580_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_elems.len() == 0LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a86206_as_slice(_58729_m.get()._field_elem_kind));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a86206_as_slice(_58729_m.get()._field_elem_kind));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a9a07386_args(_self_, _58729_m.get()._field_elems);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9a08684_indexing(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3276c_IndexingExprModel> _59932_m) {
	_1a9a0e437_model(_self_, _59932_m.get()._field_expr.get()._field_model);
	{
		
		if (_204ed188c_PRODUCTION || (_1c2da1e10_ptr(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1c2da3362_map(_59932_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac129ec3:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a9a0e6ac_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ac12a765:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a9a5e872_loc_info(_self_.get()._field_oc, _59932_m.get()._field_token);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1a9a0e6ac_expr(_self_, _59932_m.get()._field_index.get()._field_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ac12a6ee:;
	};
}



inline void _1a9a08909_unsafe_indexing(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2e60e36_UnsafeIndexingExprModel> _61839_m) {
	_1a9a0e437_model(_self_, _61839_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_204ed188c_PRODUCTION || (_1c2da1e10_ptr(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1c2da3362_map(_61839_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac12d36c:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a9a0e6ac_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ac12ec53:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a9a0e6ac_expr(_self_, _61839_m.get()._field_node.get()._field_index.get()._field_model);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ac12ebdc:;
	};
}



inline void _1a9a08b7e_anon_func(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32959_AnonFnExprModel> _63533_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a88637_func(_63533_m.get()._field_func));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a9a799be_params_ins(_self_.get()._field_oc, _63533_m.get()._field_func.get()._field_params);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a880e8_func_ins_result(_63533_m.get()._field_func));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a9a016e3_func_scope(_self_.get()._field_oc.get()._field_sc, _63533_m.get()._field_func);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a08e04_map(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce32d33_MapExprModel> _64627_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_64627_m.get()._field_key_kind));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_64627_m.get()._field_val_kind));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1ac13871d:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1dce32b46_KeyValPairExprModel> _65325_pair = *it;
				{
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a9a0e6ac_expr(_self_, _65325_pair.get()._field_key);
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a9a0e6ac_expr(_self_, _65325_pair.get()._field_val);
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_entries.len() - _65318_i) > 1LL)) {
						_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1ac13871d:;
				++it;
				_65318_i++;
				goto _iter_begin_1ac13871d;
			}
			_iter_end_1ac13871d:;
		};
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9a09179_slicing(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce33020_SlicingExprModel> _66731_m) {
	_1a9a0e437_model(_self_, _66731_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_204ed188c_PRODUCTION))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a9a5e872_loc_info(_self_.get()._field_oc, _66731_m.get()._field_token);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a9a0e6ac_expr(_self_, _66731_m.get()._field_left);
	if ((_66731_m.get()._field_right != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a9a0e6ac_expr(_self_, _66731_m.get()._field_right);
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a093ee_trait_sub(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3320c_TraitSubIdentExprModel> _68333_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16bc0_trait_decl(_68333_m.get()._field_trt));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a9a0e437_model(_self_, _68333_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16681_func(_68333_m.get()._field_method));
}



inline void _1a9a09674_structure_sub(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3362a_StructSubIdentExprModel> _69237_m) {
	_1a9a0e437_model(_self_, _69237_m.get()._field_expr.get()._field_model);
	if ((_69237_m.get()._field_field != nullptr)) {
		if ((_1c2da1e10_ptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1c2da1b9b_sptr(_69237_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_204ed188c_PRODUCTION))) {
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1a9a5e872_loc_info(_self_.get()._field_oc, _69237_m.get()._field_token);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a1774d_field(_69237_m.get()._field_field.get()._field_decl));
	};
}



inline void _1a9a098e9_common_ident(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce33be1_CommonIdentExprModel> _71232_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, _71232_m.get()._field_ident);
}



inline void _1a9a09b6e_common_sub(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce33dcd_CommonSubIdentExprModel> _71634_m) {
	_1a9a0e437_model(_self_, _71634_m.get()._field_expr);
	{
		
		if ((_1c2da1e10_ptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1ac147ac3:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1c2da1b9b_sptr(_71634_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1ac1482ee:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_204ed188c_PRODUCTION))) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a9a5e872_loc_info(_self_.get()._field_oc, _71634_m.get()._field_token);
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1ac148288:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1ac148222:;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, _71634_m.get()._field_ident);
}



inline void _1a9a09de4_array(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce33a04_ArrayExprModel> _73529_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a8756a_array(_73529_m.get()._field_kind));
	if ((_73529_m.get()._field_elems.len() == 0LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_elems.len() == 2LL) && (_73529_m.get()._field_elems[1LL] == nullptr))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a9a0e6ac_expr(_self_, _73529_m.get()._field_elems[0LL]);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a9a07386_args(_self_, _73529_m.get()._field_elems);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a9a0a169_func_ins_common(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3b644_FnIns> _75839_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a88637_func(_75839_m));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a0a3de_func_ins(_self_, _75839_m);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0a3de_func_ins(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3b644_FnIns> _76532_m) {
	if (((_76532_m.get()._field_decl != nullptr) && _76532_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1dcd36671_Directive> _76717_d = _1a9a8b23e_find_directive(_76532_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a7ceab_concat_all_parts(_76717_d.get()._field_args));
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16928_func_ins(_76532_m));
}



inline void _1a9a0a664_tuple(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce340ba_TupleExprModel> _77629_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1ac155949:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1c2d6d9e2_Data> _77821_d = *it;
			{
				_1a9a0e6ac_expr(_self_, _77821_d.get()._field_model);
				if (((_77629_m.get()._field_datas.len() - _77814_i) > 1LL)) {
					_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ac155949:;
			++it;
			_77814_i++;
			goto _iter_begin_1ac155949;
		}
		_iter_end_1ac155949:;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0a8d9_new_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3486d_BuiltinNewCallExprModel> _78732_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_78732_m.get()._field_kind));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78732_m.get()._field_init != nullptr)) {
		_1a9a0e6ac_expr(_self_, _78732_m.get()._field_init);
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0ab5e_out_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce342a7_BuiltinOutCallExprModel> _79732_m) {
	if ((_79732_m.get()._field_debug && _204ed188c_PRODUCTION)) {
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a9a0e6ac_expr(_self_, _79732_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0add4_outln_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel> _80634_m) {
	if ((_80634_m.get()._field_debug && _204ed188c_PRODUCTION)) {
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a9a0e6ac_expr(_self_, _80634_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0b159_panic_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel> _81534_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a9a0e6ac_expr(_self_, _81534_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a9a5e872_loc_info(_self_.get()._field_oc, _81534_m.get()._field_token);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a9a0b3ce_assert_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel> _82335_m) {
	if (_204ed188c_PRODUCTION) {
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a9a0e6ac_expr(_self_, _82335_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a108ab_cstr_lit(static_cast<jule::Slice<jule::U8>>(_82335_m.get()._field_log)));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a9a5e872_loc_info(_self_.get()._field_oc, _82335_m.get()._field_token);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a9a0b654_error_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel> _83634_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1dce38e05_is_void(_83634_m.get()._field_func.get()._field_decl.ptr())) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_83634_m.get()._field_func.get()._field_result));
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1a9a0e6ac_expr(_self_, _83634_m.get()._field_err);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0b8c9_copy_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3530d_BuiltinCopyCallExprModel> _84933_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a9a0e437_model(_self_, _84933_m.get()._field_dest.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c2da1937_prim(_84933_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a9a0e437_model(_self_, _84933_m.get()._field_src.get()._field_model);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c2da1937_prim(_84933_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0bb4e_make_call_slice(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>& _86540_m) {
	jule::Ptr<_1c2da84dd_Slc> _86617_slice = _1c2da28b1_slc(_86540_m.get()._field_kind.ptr());;
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_86540_m.get()._field_kind));
	if ((_1c2da2174_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86540_m.get()._field_cap != nullptr)) {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1a9a0e6ac_expr(_self_, _86540_m.get()._field_len);
	if ((_86540_m.get()._field_cap != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a9a0e6ac_expr(_self_, _86540_m.get()._field_cap);
	};
	if ((_1c2da2174_enm(_86617_slice.get()._field_elem.ptr()) != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a9a0eba7_init_expr(_self_, _86617_slice.get()._field_elem);
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0bdc4_make_call_str(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>& _89138_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a9a0e6ac_expr(_self_, _89138_m.get()._field_len);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0c149_make_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel> _89833_m) {
	if ((_1c2da28b1_slc(_89833_m.get()._field_kind.ptr()) != nullptr)) {
		_1a9a0bb4e_make_call_slice(_self_, _89833_m);
		return;;
	};
	_1a9a0bdc4_make_call_str(_self_, _89833_m);
}



inline void _1a9a0c3be_push_to_slice(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2e612ee_PushToSliceExprModel> _90637_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1a9a0e437_model(_self_, _90637_m.get()._field_dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_obj.slice(_90713_n);;
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1a9a5b4a6_write(_self_.get()._field_oc, _90913_dest);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a9a5b4a6_write(_self_.get()._field_oc, _1c2c3c273_itoa(static_cast<jule::I64>(_90637_m.get()._field_elems.get()._field_elems.len())));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90637_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1ac17a70a:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, _90913_dest);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1a9a0e437_model(_self_, _91621_e);
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1ac17a70a:;
			++it;
			goto _iter_begin_1ac17a70a;
		}
		_iter_end_1ac17a70a:;
	};
}



inline void _1a9a0c644_append_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce35121_BuiltinAppendCallExprModel> _92535_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a9a0e437_model(_self_, _92535_m.get()._field_dest);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a9a0e437_model(_self_, _92535_m.get()._field_elements);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0c8b9_clone_call(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce34681_BuiltinCloneCallExprModel> _93334_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a9a0e437_model(_self_, _93334_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0cb3e_sizeof(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce333e9_SizeofExprModel> _93930_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a9a0e437_model(_self_, _93930_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0cdb4_alignof(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce35b5a_AlignofExprModel> _94531_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a9a0e437_model(_self_, _94531_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a9a0d1c2_rune_lit(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce35d47_RuneExprModel> _95128_m) {
	if ((_95128_m.get()._field_code <= 127LL)) {
		jule::Str _95321_b = _1a9a102e5_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95128_m.get()._field_code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1a9a10e61_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95128_m.get()._field_code)));
}



inline void _1a9a0d447_structure_static(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce33817_StructStaticIdentExprModel> _96240_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16928_func_ins(_96240_m.get()._field_method));
}



inline void _1a9a0d6bc_integrated_to_str(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce36034_IntegratedToStrExprModel> _96641_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a9a0e437_model(_self_, _96641_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9a0d942_backend_emit(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce36221_BackendEmitExprModel> _97236_m) {
	if ((_97236_m.get()._field_exprs.len() == 0LL)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, _97236_m.get()._field_code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97236_m.get()._field_exprs.len());;
	{
		auto &expr = _97236_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac188196:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1a9a0e6ac_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97713_n);
			}
			_iter_next_1ac188196:;
			++it;
			_97914_i++;
			goto _iter_begin_1ac188196;
		}
		_iter_end_1ac188196:;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, _1c2e51685_format(_97236_m.get()._field_code,jule::Any(_97817_args)));
}



inline void _1a9a0dbb7_free(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1dce3640d_FreeExprModel> _98728_m) {
	_1a9a0e6ac_expr(_self_, _98728_m.get()._field_expr);
	if (_204ed1161_RC) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a9a0de3c_mut_slicing(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2e618b5_MutSlicingExprModel> _99635_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a0e437_model(_self_, _99635_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_204ed188c_PRODUCTION))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a9a5e872_loc_info(_self_.get()._field_oc, _99635_m.get()._field_token);
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a9a0e6ac_expr(_self_, _99635_m.get()._field_left);
	if ((_99635_m.get()._field_right != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a9a0e6ac_expr(_self_, _99635_m.get()._field_right);
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a9a0e1b2_str_insert_begin(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2e61c5b_StrInsertBeginExprModel> _101340_m) {
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9a0e437_model(_self_, _101340_m.get()._field_dest);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a9a0e437_model(_self_, _101340_m.get()._field_expr);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a9a0e437_model(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d9e825_TypeKind>>()) {
			_case_begin_1ac192238:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_102129_m.operator jule::Ptr<_1c2d9e825_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1ac192513:;
			{
				_1a9a0575d_constant(_self_, _102129_m.operator jule::Ptr<_1dcdbd1a8_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1ac192579:;
			{
				_1a9a06396_var(_self_, _102129_m.operator jule::Ptr<_1c2d266ae_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd868e1_StructIns>>()) {
			_case_begin_1ac1925e0:;
			{
				_1a9a0661b_structure_ins(_self_, _102129_m.operator jule::Ptr<_1dcd868e1_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3b644_FnIns>>()) {
			_case_begin_1ac192656:;
			{
				_1a9a0a169_func_ins_common(_self_, _102129_m.operator jule::Ptr<_1dce3b644_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e60b17_UnsafeBinopExprModel>>()) {
			_case_begin_1ac19316d:;
			{
				_1a9a05d9b_unsafe_binary(_self_, _102129_m.operator jule::Ptr<_1c2e60b17_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31716_BinopExprModel>>()) {
			_case_begin_1ac1931d4:;
			{
				_1a9a06121_binary(_self_, _102129_m.operator jule::Ptr<_1dce31716_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31903_UnaryExprModel>>()) {
			_case_begin_1ac19324a:;
			{
				_1a9a06891_unary(_self_, _102129_m.operator jule::Ptr<_1dce31903_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31ccc_StructLitExprModel>>()) {
			_case_begin_1ac1932b1:;
			{
				_1a9a06b16_structure_lit(_self_, _102129_m.operator jule::Ptr<_1dce31ccc_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31eb9_AllocStructLitExprModel>>()) {
			_case_begin_1ac193327:;
			{
				_1a9a06d8b_alloc_structure(_self_, _102129_m.operator jule::Ptr<_1dce31eb9_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce321a6_CastingExprModel>>()) {
			_case_begin_1ac19338d:;
			{
				_1a9a07111_casting(_self_, _102129_m.operator jule::Ptr<_1dce321a6_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1ac193404:;
			{
				_1a9a08189_func_call(_self_, _102129_m.operator jule::Ptr<_1dce32393_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32580_SliceExprModel>>()) {
			_case_begin_1ac19346a:;
			{
				_1a9a0840e_slice(_self_, _102129_m.operator jule::Ptr<_1dce32580_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33a04_ArrayExprModel>>()) {
			_case_begin_1ac1934d1:;
			{
				_1a9a09de4_array(_self_, _102129_m.operator jule::Ptr<_1dce33a04_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e60e36_UnsafeIndexingExprModel>>()) {
			_case_begin_1ac193547:;
			{
				_1a9a08909_unsafe_indexing(_self_, _102129_m.operator jule::Ptr<_1c2e60e36_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3276c_IndexingExprModel>>()) {
			_case_begin_1ac1935ad:;
			{
				_1a9a08684_indexing(_self_, _102129_m.operator jule::Ptr<_1dce3276c_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32959_AnonFnExprModel>>()) {
			_case_begin_1ac193624:;
			{
				_1a9a08b7e_anon_func(_self_, _102129_m.operator jule::Ptr<_1dce32959_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce32d33_MapExprModel>>()) {
			_case_begin_1ac19368a:;
			{
				_1a9a08e04_map(_self_, _102129_m.operator jule::Ptr<_1dce32d33_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33020_SlicingExprModel>>()) {
			_case_begin_1ac193701:;
			{
				_1a9a09179_slicing(_self_, _102129_m.operator jule::Ptr<_1dce33020_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3320c_TraitSubIdentExprModel>>()) {
			_case_begin_1ac193767:;
			{
				_1a9a093ee_trait_sub(_self_, _102129_m.operator jule::Ptr<_1dce3320c_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1ac1937de:;
			{
				_1a9a09674_structure_sub(_self_, _102129_m.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33be1_CommonIdentExprModel>>()) {
			_case_begin_1ac193866:;
			{
				_1a9a098e9_common_ident(_self_, _102129_m.operator jule::Ptr<_1dce33be1_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>>()) {
			_case_begin_1ac1938dd:;
			{
				_1a9a09b6e_common_sub(_self_, _102129_m.operator jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce340ba_TupleExprModel>>()) {
			_case_begin_1ac193965:;
			{
				_1a9a0a664_tuple(_self_, _102129_m.operator jule::Ptr<_1dce340ba_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>>()) {
			_case_begin_1ac1939dc:;
			{
				_1a9a0ab5e_out_call(_self_, _102129_m.operator jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1ac193a64:;
			{
				_1a9a0add4_outln_call(_self_, _102129_m.operator jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>>()) {
			_case_begin_1ac193adb:;
			{
				_1a9a0a8d9_new_call(_self_, _102129_m.operator jule::Ptr<_1dce3486d_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1ac193b63:;
			{
				_1a9a0b159_panic_call(_self_, _102129_m.operator jule::Ptr<_1dce34a5a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>>()) {
			_case_begin_1ac193bda:;
			{
				_1a9a0b3ce_assert_call(_self_, _102129_m.operator jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ac193c62:;
			{
				_1a9a0b654_error_call(_self_, _102129_m.operator jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>>()) {
			_case_begin_1ac193cd9:;
			{
				_1a9a0c149_make_call(_self_, _102129_m.operator jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>>()) {
			_case_begin_1ac193d61:;
			{
				_1a9a0c644_append_call(_self_, _102129_m.operator jule::Ptr<_1dce35121_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>>()) {
			_case_begin_1ac193dd8:;
			{
				_1a9a0c8b9_clone_call(_self_, _102129_m.operator jule::Ptr<_1dce34681_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3530d_BuiltinCopyCallExprModel>>()) {
			_case_begin_1ac193e60:;
			{
				_1a9a0b8c9_copy_call(_self_, _102129_m.operator jule::Ptr<_1dce3530d_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce333e9_SizeofExprModel>>()) {
			_case_begin_1ac193ed7:;
			{
				_1a9a0cb3e_sizeof(_self_, _102129_m.operator jule::Ptr<_1dce333e9_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35b5a_AlignofExprModel>>()) {
			_case_begin_1ac19405e:;
			{
				_1a9a0cdb4_alignof(_self_, _102129_m.operator jule::Ptr<_1dce35b5a_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce35d47_RuneExprModel>>()) {
			_case_begin_1ac1940d6:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a0d1c2_rune_lit(_self_, _102129_m.operator jule::Ptr<_1dce35d47_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33817_StructStaticIdentExprModel>>()) {
			_case_begin_1ac19415d:;
			{
				_1a9a0d447_structure_static(_self_, _102129_m.operator jule::Ptr<_1dce33817_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36034_IntegratedToStrExprModel>>()) {
			_case_begin_1ac1941d5:;
			{
				_1a9a0d6bc_integrated_to_str(_self_, _102129_m.operator jule::Ptr<_1dce36034_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce36221_BackendEmitExprModel>>()) {
			_case_begin_1ac19425c:;
			{
				_1a9a0d942_backend_emit(_self_, _102129_m.operator jule::Ptr<_1dce36221_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3640d_FreeExprModel>>()) {
			_case_begin_1ac1942d4:;
			{
				_1a9a0dbb7_free(_self_, _102129_m.operator jule::Ptr<_1dce3640d_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e618b5_MutSlicingExprModel>>()) {
			_case_begin_1ac19435b:;
			{
				_1a9a0de3c_mut_slicing(_self_, _102129_m.operator jule::Ptr<_1c2e618b5_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2e61c5b_StrInsertBeginExprModel>>()) {
			_case_begin_1ac1943d3:;
			{
				_1a9a0e1b2_str_insert_begin(_self_, _102129_m.operator jule::Ptr<_1c2e61c5b_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1ac1923ae:;
			{
				_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ac1922d2:;
	};
}



inline void _1a9a0e6ac_expr(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Any _111428_e) {
	_1a9a0e437_model(_self_, _111428_e);
}



inline void _1a9a0e932_val(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2d6ea6a_Value> _111827_v) {
	if (_1c2d6e3a5_is_const(_111827_v.get()._field_data.ptr())) {
		_1a9a0575d_constant(_self_, _111827_v.get()._field_data.get()._field_constant,((_111827_v.get()._field_data.get()._field_kind != nullptr) && _1c2da65a7_is_f32(_1c2da1937_prim(_111827_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1a9a0e6ac_expr(_self_, _111827_v.get()._field_data.get()._field_model);
}



inline void _1a9a0eba7_init_expr(jule::Ptr<_1a9a04064_ExprCoder> _self_, jule::Ptr<_1c2d9e825_TypeKind> _112633_t) {
	if ((_1c2da1e10_ptr(_112633_t.ptr()) != nullptr)) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1c2c4070a_Enum> _113117_enm = _1c2da2174_enm(_112633_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1a9a0e932_val(_self_, _113117_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a888ce_kind(_112633_t));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a04064_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a9a1221a_clone_func_decl(jule::Ptr<_1dcd5a596_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1a9a8702b_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1a9a124b2_clone_func_def(jule::Ptr<_1dcd5a596_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1a9a8702b_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a11e62_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a13392_TestCoder> static__1a9a13815_new(jule::Ptr<_1a9a7814e_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1a9a13392_TestCoder>(_1a9a13392_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1c2d01854_ImportInfo> _1a9a13a79_find_testing_package(jule::Ptr<_1a9a13392_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac1b1642:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1ac1b1642:;
			++it;
			goto _iter_begin_1ac1b1642;
		}
		_iter_end_1ac1b1642:;
	};
	return nullptr;
}



inline void _1a9a13cee_append_test(jule::Ptr<_1a9a13392_TestCoder> _self_, jule::Ptr<_1dce3b644_FnIns> _4335_f) {
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a144b4_call_tm_reset(_self_);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a9a5b4a6_write(_self_.get()._field_oc, _1a9a108ab_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16928_func_ins(_4335_f));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a9a14074_append_package_tests(jule::Ptr<_1a9a13392_TestCoder> _self_, jule::Ptr<_1c2d047ad_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac1b73d4:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ac1b7c75:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _6225_f = *it;
						{
							if (_1a9a8b5c4_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1a9a13cee_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1ac1b7c75:;
						++it;
						goto _iter_begin_1ac1b7c75;
					}
					_iter_end_1ac1b7c75:;
				};
			}
			_iter_next_1ac1b73d4:;
			++it;
			goto _iter_begin_1ac1b73d4;
		}
		_iter_end_1ac1b73d4:;
	};
}



inline jule::Bool _1a9a142d8_ready_testing_package(jule::Ptr<_1a9a13392_TestCoder> _self_) {
	jule::Ptr<_1c2d01854_ImportInfo> _7117_p = _1a9a13a79_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1c2d02c95_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1dcd61a64_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1dcd61a64_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1dcd61a64_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1a9a144b4_call_tm_reset(jule::Ptr<_1a9a13392_TestCoder> _self_) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16681_func(_self_.get()._field_tm_reset));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9a14690_call_tm_failed(jule::Ptr<_1a9a13392_TestCoder> _self_) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16681_func(_self_.get()._field_tm_failed));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9a1486b_call_tm_skipped(jule::Ptr<_1a9a13392_TestCoder> _self_) {
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a16681_func(_self_.get()._field_tm_skipped));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9a14a47_serialize(jule::Ptr<_1a9a13392_TestCoder> _self_) {
	_1a9a7c472_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a9a7c296_end(_self_.get()._field_oc);
	});;
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	if ((!(_1a9a142d8_ready_testing_package(_self_)))) {
		_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a9a5cc38_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a85139_as_sptr(static__1a9a872c3_structure_ins(_self_.get()._field_t)));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a9a5b4a6_write(_self_.get()._field_oc, static__1a9a872c3_structure_ins(_self_.get()._field_t));
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a9a5bc48_add_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a9a14690_call_tm_failed(_self_);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a9a1486b_call_tm_skipped(_self_);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a9a14074_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a9a5cc38_done_indent(_self_.get()._field_oc);
	_1a9a5d486_indent(_self_.get()._field_oc);
	_1a9a5b4a6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a13392_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a9a15eee_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1a9a163d9_to_local(jule::I64 _5424_row, jule::I64 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1c2c3c273_itoa(_5424_row);
	_5517_obj+=_1c2c3c273_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1a9a16681_func(jule::Ptr<_1dce38993_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1ac1d0551:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1ac1d05b7:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1dce39169_is_method(_6521_f.ptr())) {
			_case_begin_1ac1ce929:;
			{
				jule::Str _7221_obj = static__1a9a15eee_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1ac1ce85d:;
			{
				return static__1a9a15eee_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1ac1ce781:;
	};
}



inline jule::Str static__1a9a16928_func_ins(jule::Ptr<_1dce3b644_FnIns>& _8425_f) {
	if (_1dce3c9ca_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1a9a16681_func(_8425_f.get()._field_decl);
	};
	return static__1a9a15eee_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__1a9a16bc0_trait_decl(jule::Ptr<_1c2c3d54e_Trait> _9526_t) {
	if (_1c2c3e088_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1a9a15eee_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__1a9a16e67_param(jule::Ptr<_1dce37156_Param>& _10322_p) {
	if ((_1db708be3_is_anon_ident(_10322_p.get()._field_ident) || _1db70894b_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1dce37783_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1a9a163d9_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1a9a163d9_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1a9a1720e_structure(jule::Ptr<_1dcd5a596_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1a9a8b5c4_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1a9a15eee_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1a9a174a6_structure_ins(jule::Ptr<_1dcd868e1_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1a9a1720e_structure(_12830_s.get()._field_decl);
	};
	return static__1a9a15eee_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__1a9a1774d_field(jule::Ptr<_1dcd4ca61_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1a9a179e5_var(jule::Ptr<_1c2d266ae_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1ac1da836:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1ac1da89c:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1ac1d9bba:;
			{
				if ((_1c2da1b9b_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1ac1d9c31:;
			{
				return static__1a9a163d9_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1ac1d9b54:;
			{
				return static__1a9a15eee_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1ac1d9a99:;
	};
}



inline jule::Str static__1a9a17c8c_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1a9a18034_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1a9a182cb_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1a9a18573_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1a9a1881a_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1a9a18ab2_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a159e3_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a77c75_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a77e62_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9a7de8a_to_str(_1a9a7dbc1_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a9a7e298_equals(jule::Ptr<_1a9a7dbc1_CustomType> _self_, jule::Ptr<_1c2d9e825_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a7dbc1_CustomType _Src) {
	_Stream << _1a9a7de8a_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1a9a7e9e6_to_type(jule::Str _6027_id) {
	if ((_6027_id != jule::Str("uintptr", 7))) {
		_6027_id=_1c2cc53e9_real_kind_of(_6027_id);
	};
	if (((97LL <= _6027_id[0LL]) && (_6027_id[0LL] <= 122LLU))) {
		_6027_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6027_id);
}



inline jule::Str static__1a9a7ec8d_prim(jule::Ptr<_1c2da42ec_Prim> _7120_p) {
	return static__1a9a7e9e6_to_type(_1c2da4660_to_str(_7120_p.ptr()));
}



inline jule::Str static__1a9a80035_tuple(jule::Ptr<_1c2da906b_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1ac2b7418:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d9e825_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1a9a888ce_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1ac2b7418:;
			++it;
			goto _iter_begin_1ac2b7418;
		}
		_iter_end_1ac2b7418:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1a9a85139_as_sptr(jule::Str _8823_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8823_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1a9a853d1_as_ptr(jule::Str _9622_elem) {
	return (_9622_elem + jule::Str("*", 1));
}



inline jule::Str static__1a9a85678_sptr(jule::Ptr<_1c2da7a81_Sptr> _10124_sptr) {
	return static__1a9a85139_as_sptr(static__1a9a888ce_kind(_10124_sptr.get()._field_elem));
}



inline jule::Str static__1a9a85920_ptr(jule::Ptr<_1c2dab0e5_Ptr> _10623_p) {
	;
	if (_1c2dabab8_is_unsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1a9a888ce_kind(_10623_p.get()._field_elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1a9a85bb7_enum_decl(jule::Ptr<_1c2c4070a_Enum> _11729_e) {
	return static__1a9a888ce_kind(_11729_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1a9a85e5e_type_enum_decl(jule::Ptr<_1c2c41d05_TypeEnum> _12234_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1a9a86206_as_slice(jule::Ptr<_1c2d9e825_TypeKind> _12628_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1a9a888ce_kind(_12628_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1a9a8649d_slice(jule::Ptr<_1c2da84dd_Slc> _13425_s) {
	return static__1a9a86206_as_slice(_13425_s.get()._field_elem);
}



inline jule::Str static__1a9a86745_map(jule::Ptr<_1c2da9a94_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1a9a888ce_kind(_13923_m.get()._field_key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1a9a888ce_kind(_13923_m.get()._field_val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1a9a869dc_trait_ident(jule::Str _14827_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14827_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1a9a86c84_trait_decl(jule::Ptr<_1c2c3d54e_Trait> _15626_t) {
	return static__1a9a869dc_trait_ident(static__1a9a16bc0_trait_decl(_15626_t));
}



inline jule::Str static__1a9a8702b_structure(jule::Ptr<_1dcd5a596_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_cpp_linked && (!(_1a9a8b5c4_has_directive(_16125_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1a9a1720e_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1a9a872c3_structure_ins(jule::Ptr<_1dcd868e1_StructIns> _17133_s) {
	if (_17133_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17321_ident = static__1a9a174a6_structure_ins(_17133_s);;
		if ((_17133_s.get()._field_generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17133_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1ac2c2786:;
				if (it != expr.end()) {
					jule::Ptr<_1c2d9d0e8_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1a9a888ce_kind(_17629_g.get()._field_kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1ac2c2786:;
					++it;
					goto _iter_begin_1ac2c2786;
				}
				_iter_end_1ac2c2786:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1dcd36671_Directive> _18317_d = _1a9a8b23e_find_directive(_17133_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1a9a7ceab_concat_all_parts(_18317_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1a9a174a6_structure_ins(_17133_s);
}



inline jule::Str static__1a9a8756a_array(jule::Ptr<_1c2daa688_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1a9a888ce_kind(_19325_a.get()._field_elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1c2c3c273_itoa(_19325_a.get()._field_n);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1a9a87aa9_param_ins(jule::Ptr<_1dce3a775_ParamIns>& _21930_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21930_p.get()._field_decl.get()._field_variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1a9a888ce_kind(_21930_p.get()._field_kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1a9a888ce_kind(_21930_p.get()._field_kind);
	};
	if (_21930_p.get()._field_decl.get()._field_reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1a9a880e8_func_ins_result(jule::Ptr<_1dce3b644_FnIns>& _24936_f) {
	if (_1dce38e05_is_void(_24936_f.get()._field_decl.ptr())) {
		if (_24936_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24936_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a9a888ce_kind(_24936_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1a9a888ce_kind(_24936_f.get()._field_result);
}



inline jule::Str static__1a9a88390_anon_func(jule::Ptr<_1dce3b644_FnIns> _26229_f) {
	jule::Str _26317_decl = static__1a9a880e8_func_ins_result(_26229_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26229_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26229_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1ac2d3e4b:;
			if (it != expr.end()) {
				jule::Ptr<_1dce3a775_ParamIns> _26625_param = *it;
				{
					if (_1dce37783_is_self(_26625_param.get()._field_decl.ptr())) {
						goto _iter_next_1ac2d3e4b;
					};
					_26317_decl+=static__1a9a87aa9_param_ins(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1ac2d3e4b:;
				++it;
				goto _iter_begin_1ac2d3e4b;
			}
			_iter_end_1ac2d3e4b:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1a9a88637_func(jule::Ptr<_1dce3b644_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1a9a88390_anon_func(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1a9a888ce_kind(jule::Ptr<_1c2d9e825_TypeKind> _29024_k) {
	{
		
		if (_1c2da04d5_cpp_linked(_29024_k.ptr())) {
			_case_begin_1ac2d6976:;
			{
				return _29024_k.get()._field_cpp_ident;
			}
		}
		else if ((_1c2da1937_prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6b0d:;
			{
				return static__1a9a7ec8d_prim(_1c2da1937_prim(_29024_k.ptr()));
			}
		}
		else if ((_1c2da35c6_tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6b74:;
			{
				return static__1a9a80035_tuple(_1c2da35c6_tup(_29024_k.ptr()));
			}
		}
		else if ((_1c2da1b9b_sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6beb:;
			{
				return static__1a9a85678_sptr(_1c2da1b9b_sptr(_29024_k.ptr()));
			}
		}
		else if ((_1c2da1e10_ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6c73:;
			{
				return static__1a9a85920_ptr(_1c2da1e10_ptr(_29024_k.ptr()));
			}
		}
		else if ((_1c2da2174_enm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6cea:;
			{
				return static__1a9a85bb7_enum_decl(_1c2da2174_enm(_29024_k.ptr()));
			}
		}
		else if ((_1c2da23d8_tenm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6d72:;
			{
				return static__1a9a85e5e_type_enum_decl(_1c2da23d8_tenm(_29024_k.ptr()));
			}
		}
		else if ((_1c2da28b1_slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6de9:;
			{
				return static__1a9a8649d_slice(_1c2da28b1_slc(_29024_k.ptr()));
			}
		}
		else if ((_1c2da3362_map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6e71:;
			{
				return static__1a9a86745_map(_1c2da3362_map(_29024_k.ptr()));
			}
		}
		else if ((_1c2da30ed_trt(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d6ee8:;
			{
				return static__1a9a86c84_trait_decl(_1c2da30ed_trt(_29024_k.ptr()));
			}
		}
		else if ((_1c2da2d89_strct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d7070:;
			{
				return static__1a9a872c3_structure_ins(_1c2da2d89_strct(_29024_k.ptr()));
			}
		}
		else if ((_1c2da264c_arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d70e7:;
			{
				return static__1a9a8756a_array(_1c2da264c_arr(_29024_k.ptr()));
			}
		}
		else if ((_1c2da2b25_fnc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1ac2d716e:;
			{
				return static__1a9a88637_func(_1c2da2b25_fnc(_29024_k.ptr()));
			}
		}
		_match_end_1ac2d6888:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9a7dbc1_CustomType>>()) {
			_case_begin_1ac2d724b:;
			{
				return _29024_k.get()._field_kind.operator jule::Ptr<_1a9a7dbc1_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1ac2dd681:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1ac2dd62b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a7e4b8_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac0d63ad_name(_1ac2e0694_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ac0d64e0_what(_1ac2e0694_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1ac2e0a7e_reset(_1ac2e0694_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ac2e0bb1_short(_1ac2e0694_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac2e0694_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac2e3da1_name(_1ac2e4357_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ac2e4621_what(_1ac2e4357_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1ac2e4753_reset(_1ac2e4357_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ac2e4885_short(_1ac2e4357_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac2e4357_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac2e7888_name(_1ac2e7d3e_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ac2e8108_what(_1ac2e7d3e_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1ac2e823a_reset(_1ac2e7d3e_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ac2e836c_short(_1ac2e7d3e_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac2e7d3e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac2eb3b4_name(_1ac2eb86a_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ac2ebb34_what(_1ac2eb86a_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1ac2ebc66_reset(_1ac2eb86a_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ac2ebd98_short(_1ac2eb86a_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac2eb86a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac2eed9b_name(_1ac300352_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ac30061b_what(_1ac300352_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1ac30074d_reset(_1ac300352_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ac300880_short(_1ac300352_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac300352_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9ab9b1e_FlagSet> static__1a9ab9e0a_new(void) {
	return jule::new_ptr<_1a9ab9b1e_FlagSet>(_1a9ab9b1e_FlagSet{._field__flags=jule::Slice<jule::Trait<_1a96a4dd0_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1a96a4dd0_CommonFlag> _1a9aba38e_find_flag(_1a9ab9b1e_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1ac30aeea:;
		if (it != expr.end()) {
			jule::Trait<_1a96a4dd0_CommonFlag> _7221_flag = *it;
			{
				if ((_1a96a4dd0_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a96a4c9d_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1ac30aeea:;
			++it;
			goto _iter_begin_1ac30aeea;
		}
		_iter_end_1ac30aeea:;
	};
	return nullptr;
}



inline jule::Trait<_1a96a4dd0_CommonFlag> _1a9aba69c_find_flag_short(_1a9ab9b1e_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1ac30b45c:;
		if (it != expr.end()) {
			jule::Trait<_1a96a4dd0_CommonFlag> _8221_flag = *it;
			{
				if ((_1a96a4dd0_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a9a9bbcd_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1ac30b45c:;
			++it;
			goto _iter_begin_1ac30b45c;
		}
		_iter_end_1ac30b45c:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1a96a4dd0_CommonFlag>> _1a9aba911_flags(_1a9ab9b1e_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a9abac1e_parse(_1a9ab9b1e_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1a9abc2e7_ArgParser _11617_ap = _1a9abc2e7_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1a9abd6d3_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1a9abadea_reset(_1a9ab9b1e_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1ac30e806:;
		if (it != expr.end()) {
			jule::Trait<_1a96a4dd0_CommonFlag> _12616_f = *it;
			{
				_1a96a4dd0_CommonFlag_mptr_data[(_12616_f).type_offset]._1a9ab82c1_reset(_12616_f);
			}
			_iter_next_1ac30e806:;
			++it;
			goto _iter_begin_1ac30e806;
		}
		_iter_end_1ac30e806:;
	};
}



inline jule::Ptr<_1ac300352_Flag> _1ac37654e_add_flag_common(_1a9ab9b1e_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1ac377bc1:;
			{
				goto _match_end_1ac377b5a;
			}
		}
		_match_end_1ac377b5a:;
	};
	if ((_1a9aba38e_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1a9aba69c_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1ac300352_Flag> _14817_flag = jule::new_ptr<_1ac300352_Flag>(_1ac300352_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a96a4dd0_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1ac2eb86a_Flag> _1ac38016d_add_flag_common(_1a9ab9b1e_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1ac381757:;
			{
				goto _match_end_1ac3816d0;
			}
		}
		_match_end_1ac3816d0:;
	};
	if ((_1a9aba38e_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1a9aba69c_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1ac2eb86a_Flag> _14817_flag = jule::new_ptr<_1ac2eb86a_Flag>(_1ac2eb86a_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a96a4dd0_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1ac374519_add_var(_1a9ab9b1e_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1ac300352_Flag> _17617_flag = _1ac37654e_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1ac37d149_add_var(_1a9ab9b1e_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1ac2eb86a_Flag> _17617_flag = _1ac38016d_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9ab9b1e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1c41b3132_IR>,jule::Slice<_207b80eb7_Log>> static__1c427e64e_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1c4378d75_JuleImporter> _2917_importer = static__1c41a807d_new(_1c4315592_build_compile_info());;
	jule::Slice<jule::Ptr<_1dcd355c6_Ast>> _3018_files;;
	jule::Slice<_207b80eb7_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1c420ee1a_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1c2d047ad_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1c2dbb743_analyze_package(_3018_files,jule::Trait<_1c2cee05a_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1c41b3132_IR> _4517_ir = jule::new_ptr<_1c41b3132_IR>(_1c41b3132_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1c41b8225_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1c4309773_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1c42a7985_append_structs(_1c41b3132_IR* _self_, jule::Ptr<_1c2d047ad_Package>& _5734_p, jule::Slice<jule::Ptr<_1dcd5a596_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abc8c20c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1abc8ca9d:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd5a596_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1abc8ca9d:;
						++it;
						goto _iter_begin_1abc8ca9d;
					}
					_iter_end_1abc8ca9d:;
				};
			}
			_iter_next_1abc8c20c:;
			++it;
			goto _iter_begin_1abc8c20c;
		}
		_iter_end_1abc8c20c:;
	};
}



inline jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _1c42ac4a1_get_all_structures(_1c41b3132_IR* _self_) {
	jule::Slice<jule::Ptr<_1dcd5a596_Struct>> _7017_buffer = nullptr;;
	_1c42a7985_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1abc8d51b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1c42a7985_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1abc8d51b:;
			++it;
			goto _iter_begin_1abc8d51b;
		}
		_iter_end_1abc8d51b:;
	};
	return _7017_buffer;
}



inline void _1c42b95bd_append_globals(_1c41b3132_IR* _self_, jule::Ptr<_1c2d047ad_Package>& _8034_p, jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abc90397:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1abc90be4:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d266ae_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1abc90be4:;
						++it;
						goto _iter_begin_1abc90be4;
					}
					_iter_end_1abc90be4:;
				};
			}
			_iter_next_1abc90397:;
			++it;
			goto _iter_begin_1abc90397;
		}
		_iter_end_1abc90397:;
	};
}



inline jule::Slice<jule::Ptr<_1c2d266ae_Var>> _1c42bd506_get_all_globals(_1c41b3132_IR* _self_) {
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _9317_buffer = nullptr;;
	_1c42b95bd_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1abc926da:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1c42b95bd_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1abc926da:;
			++it;
			goto _iter_begin_1abc926da;
		}
		_iter_end_1abc926da:;
	};
	return _9317_buffer;
}



inline void _1c42d550c_order(_1c41b3132_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1c42ac4a1_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1c42bd506_get_all_globals(&(*_self_));
	static__1c4377b32_order_structures((*_self_)._field_ordered._field_structs);
	static__1c437e2ed_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1c41b3132_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dcd5c279_to_str(_1dcd868e1_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1aac869aa:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d9d0e8_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1c2d9ec21_to_str(_24720_g.get()._field_kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1aac869aa:;
				++it;
				goto _iter_begin_1aac869aa;
			}
			_iter_end_1aac869aa:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1dcd5d3e0_equals(jule::Ptr<_1dcd868e1_StructIns> _self_, jule::Ptr<_1c2d9e825_TypeKind> _25826_other) {
	jule::Ptr<_1dcd868e1_StructIns> _25913_s = _1c2da2d89_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1c2da002e_equals(_self_.get()._field_generics[_27217_i].get()._field_kind, _25913_s.get()._field_generics[_27217_i].get()._field_kind)))) {
				return false;
			};
		}
	_iter_next_1aac8a1d9:;
	}
	_iter_end_1aac8a1d9:;;
	return true;
}



inline jule::Bool _1dcd60744_same(_1dcd868e1_StructIns* _self_, jule::Ptr<_1dcd868e1_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1aac8c65e:;
		if (it != expr.end()) {
			jule::I64 _29113_i = it - expr.begin();
			jule::Ptr<_1c2d9d0e8_InsGeneric> &_29116_g = *it;
			{
				if ((!(_1c2da002e_equals(_29116_g.get()._field_kind, _28623_s.get()._field_generics[_29113_i].get()._field_kind)))) {
					return false;
				};
			}
			_iter_next_1aac8c65e:;
			++it;
			_29113_i++;
			goto _iter_begin_1aac8c65e;
		}
		_iter_end_1aac8c65e:;
	};
	return true;
}



inline jule::Ptr<_1dce38993_Fn> _1dcd61a64_find_method(_1dcd868e1_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1aac8e144:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1aac8e144:;
			++it;
			goto _iter_begin_1aac8e144;
		}
		_iter_end_1aac8e144:;
	};
	return nullptr;
}



inline jule::Ptr<_1dcd62c0d_FieldIns> _1dcd6457d_find_field(_1dcd868e1_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1aac903ba:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd62c0d_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1aac903ba:;
			++it;
			goto _iter_begin_1aac903ba;
		}
		_iter_end_1aac903ba:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd868e1_StructIns _Src) {
	_Stream << _1dcd5c279_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a944cd54_ObjectDeadCode> static__1a944d31b_new(jule::Ptr<_1c41b3132_IR>& _3424_ir) {
	return jule::new_ptr<_1a944cd54_ObjectDeadCode>(_1a944cd54_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1abccc868_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2c3d54e_Trait>& _4031_t) {
	jule::Slice<jule::Ptr<_1c2c3d54e_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1abcce8e2:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1abcce606:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1abcd00b8:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1abcd00b8:;
			++it;
			_5213_i++;
			goto _iter_begin_1abcd00b8;
		}
		_iter_end_1abcd00b8:;
	};
	return false;
}

inline jule::Bool _1abcd363d_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1dce3b644_FnIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1dce3b644_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1abcd4e69:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1abcd4dae:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1abcd551e:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1abcd551e:;
			++it;
			_5213_i++;
			goto _iter_begin_1abcd551e;
		}
		_iter_end_1abcd551e:;
	};
	return false;
}

inline jule::Bool _1abcd97ba_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1dcd868e1_StructIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1dcd868e1_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1abcddd0d:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1abcdda88:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1abcdddda:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1abcdddda:;
			++it;
			_5213_i++;
			goto _iter_begin_1abcdddda;
		}
		_iter_end_1abcdddda:;
	};
	return false;
}

inline jule::Bool _1abce16d4_is_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2d266ae_Var>& _4031_t) {
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1abce354e:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1abce342d:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1abce3e56:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1abce3e56:;
			++it;
			_5213_i++;
			goto _iter_begin_1abce3e56;
		}
		_iter_end_1abce3e56:;
	};
	return false;
}



inline void _1abccce0c_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2c3d54e_Trait> _6036_t) {
	{
		
{
			_case_begin_1abcd1b03:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6036_t);;
			}
		}
		_match_end_1abcd17a1:;
	};
}

inline void _1abcd6c6d_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1dce3b644_FnIns> _6036_t) {
	{
		
{
			_case_begin_1abcd78ea:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6036_t);;
			}
		}
		_match_end_1abcd7675:;
	};
}

inline void _1abcd9d4d_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1dcd868e1_StructIns> _6036_t) {
	{
		
{
			_case_begin_1abcdb613:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6036_t);;
			}
		}
		_match_end_1abcdb327:;
	};
}

inline void _1abce50bc_push_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2d266ae_Var> _6036_t) {
	{
		
{
			_case_begin_1abce5aa1:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6036_t);;
			}
		}
		_match_end_1abce59c4:;
	};
}



inline void _1a947b46a_set_references_as_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1dce3e548_ReferenceStack>& _7347_rs) {
	if ((_7347_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1dce3ebb9_len(_7347_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1dce3eec7_at(_7347_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1c2c3d54e_Trait>>()) {
					_case_begin_1abccb8cd:;
					{
						jule::Ptr<_1c2c3d54e_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1c2c3d54e_Trait>();;
						if (_1abccc868_is_live(_self_, _8225_t)) {
							goto _iter_next_1abccabb8;
						};
						_1abccce0c_push_live(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1abcd1394:;
							if (it != expr.end()) {
								jule::Ptr<_1dce38993_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1abcd15b4:;
										if (it != expr.end()) {
											jule::Ptr<_1dce3b644_FnIns> _8833_mins = *it;
											{
												if (_1abcd363d_is_live(_self_, _8833_mins)) {
													goto _iter_next_1abcd15b4;
												};
												_1abcd6c6d_push_live(_self_, _8833_mins);
												_1a947b46a_set_references_as_live(_self_, _8833_mins.get()._field_refers);
											}
											_iter_next_1abcd15b4:;
											++it;
											goto _iter_begin_1abcd15b4;
										}
										_iter_end_1abcd15b4:;
									};
								}
								_iter_next_1abcd1394:;
								++it;
								goto _iter_begin_1abcd1394;
							}
							_iter_end_1abcd1394:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1dce3b644_FnIns>>()) {
					_case_begin_1abccb944:;
					{
						jule::Ptr<_1dce3b644_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1dce3b644_FnIns>();;
						if (_1abcd363d_is_live(_self_, _9725_f)) {
							goto _match_end_1abccb559;
						};
						if (((_9725_f.get()._field_owner != nullptr) && (!(_9725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1abcd97ba_is_live(_self_, _9725_f.get()._field_owner)))) {
								_1abcd9d4d_push_live(_self_, _9725_f.get()._field_owner);
								_1a947b46a_set_references_as_live(_self_, _9725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1abcd6c6d_push_live(_self_, _9725_f);
						_1a947b46a_set_references_as_live(_self_, _9725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
					_case_begin_1abccba32:;
					{
						jule::Ptr<_1c2d266ae_Var> _11025_v = _7921_ref.operator jule::Ptr<_1c2d266ae_Var>();;
						if (_1abce16d4_is_live(_self_, _11025_v)) {
							goto _match_end_1abccb559;
						};
						_1abce50bc_push_live(_self_, _11025_v);
						_1a947b46a_set_references_as_live(_self_, _11025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1dcd868e1_StructIns>>()) {
					_case_begin_1abccba98:;
					{
						jule::Ptr<_1dcd868e1_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1dcd868e1_StructIns>();;
						if (_1abcd97ba_is_live(_self_, _11725_s)) {
							goto _match_end_1abccb559;
						};
						_1abcd9d4d_push_live(_self_, _11725_s);
						_1a947b46a_set_references_as_live(_self_, _11725_s.get()._field_refers);
						{
							auto &expr = _11725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1abce9038:;
							if (it != expr.end()) {
								jule::Ptr<_1dce38993_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1abce5430:;
										if (it != expr.end()) {
											jule::Ptr<_1dce3b644_FnIns> _12433_mins = *it;
											{
												if (_1abcd363d_is_live(_self_, _12433_mins)) {
													goto _iter_next_1abce5430;
												};
												_1abcd6c6d_push_live(_self_, _12433_mins);
												_1a947b46a_set_references_as_live(_self_, _12433_mins.get()._field_refers);
											}
											_iter_next_1abce5430:;
											++it;
											goto _iter_begin_1abce5430;
										}
										_iter_end_1abce5430:;
									};
								}
								_iter_next_1abce9038:;
								++it;
								goto _iter_begin_1abce9038;
							}
							_iter_end_1abce9038:;
						};
					}
				}
				_match_end_1abccb559:;
			};
		}
	_iter_next_1abccabb8:;
	}
	_iter_end_1abccabb8:;;
}



inline void _1a947b6e0_inits(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2d047ad_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abccb081:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1abcec019:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1dce3b644_FnIns> _14029_ins = _13825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1a947b46a_set_references_as_live(_self_, _14029_ins.get()._field_refers);
							};
						}
						_iter_next_1abcec019:;
						++it;
						goto _iter_begin_1abcec019;
					}
					_iter_end_1abcec019:;
				};
			}
			_iter_next_1abccb081:;
			++it;
			goto _iter_begin_1abccb081;
		}
		_iter_end_1abccb081:;
	};
}



inline void _1a947b965_collect_live_package(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2d047ad_Package>& _14845_pkg) {
	_1a947b6e0_inits(_self_, _14845_pkg);
	if (_204ed0d53_TEST) {
		{
			auto &expr = _14845_pkg.get()._field_files;
			auto it = expr.begin();
			_iter_begin_1abcee4d3:;
			if (it != expr.end()) {
				jule::Ptr<_1c2d68c84_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_funcs;
						auto it = expr.begin();
						_iter_begin_1abceed74:;
						if (it != expr.end()) {
							jule::Ptr<_1dce38993_Fn> _15529_f = *it;
							{
								if (_1a947d978_has_directive(_15529_f.get()._field_directives,jule::Str("test", 4))) {
									jule::Ptr<_1dce3b644_FnIns> _15733_ins = _15529_f.get()._field_instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1a947b46a_set_references_as_live(_self_, _15733_ins.get()._field_refers);
								};
							}
							_iter_next_1abceed74:;
							++it;
							goto _iter_begin_1abceed74;
						}
						_iter_end_1abceed74:;
					};
				}
				_iter_next_1abcee4d3:;
				++it;
				goto _iter_begin_1abcee4d3;
			}
			_iter_end_1abcee4d3:;
		};
	};
}



inline void _1a947bb41_collect_live(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1abd007d1:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_cpp_linked))) {
					_1a947b965_collect_live_package(_self_, _16721_used.get()._field_package);
				};
			}
			_iter_next_1abd007d1:;
			++it;
			goto _iter_begin_1abd007d1;
		}
		_iter_end_1abd007d1:;
	};
	_1a947b965_collect_live_package(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1dce38993_Fn> _17517_main = _1c2d06062_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1dce3b644_FnIns> _17617_ins = _17517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1a947b46a_set_references_as_live(_self_, _17617_ins.get()._field_refers);
}



inline void _1a947bdb6_remove_dead_globals(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _18144_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18144_vars.len())) {
		{
			jule::Ptr<_1c2d266ae_Var> _18417_v = _18144_vars[_18217_i];;
			if (_1abce16d4_is_live(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1abd04bd1;
			};
			_18144_vars=jule::append(_18144_vars.slice(0LL,_18217_i),_18144_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1abd04bd1:;
	}
	_iter_end_1abd04bd1:;;
}



inline void _1a947c13b_remove_dead_fns(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dce38993_Fn>>& _19340_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19340_funcs.len())) {
		{
			jule::Ptr<_1dce38993_Fn> _19621_f = _19340_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1dce3b644_FnIns> _19921_ins = _19621_f.get()._field_instances[_19721_j];;
					if (_1abcd363d_is_live(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1abd08311;
					};
					_19621_f.get()._field_instances=jule::append(_19621_f.get()._field_instances.slice(0LL,_19721_j),_19621_f.get()._field_instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1abd08311:;
			}
			_iter_end_1abd08311:;;
			if ((_19621_f.get()._field_instances.len() == 0LL)) {
				_19340_funcs=jule::append(_19340_funcs.slice(0LL,_19417_i),_19340_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1abd051cb;
			};
			(_19417_i)++;
		}
	_iter_next_1abd051cb:;
	}
	_iter_end_1abd051cb:;;
}



inline void _1a947c3b1_remove_dead_structs(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dcd5a596_Struct>>& _21444_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21444_structs.len())) {
		{
			jule::Ptr<_1dcd5a596_Struct> _21721_s = _21444_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1dcd868e1_StructIns> _22025_ins = _21721_s.get()._field_instances[_21821_j];;
					_1a947c13b_remove_dead_fns(_self_, _22025_ins.get()._field_methods);
					if (((_22025_ins.get()._field_methods.len() != 0LL) || _1abcd97ba_is_live(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1abd0c535;
					};
					_21721_s.get()._field_instances=jule::append(_21721_s.get()._field_instances.slice(0LL,_21821_j),_21721_s.get()._field_instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1abd0c535:;
			}
			_iter_end_1abd0c535:;;
			if ((_21721_s.get()._field_instances.len() == 0LL)) {
				_21444_structs=jule::append(_21444_structs.slice(0LL,_21517_i),_21444_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1abd0b37a;
			};
			(_21517_i)++;
		}
	_iter_next_1abd0b37a:;
	}
	_iter_end_1abd0b37a:;;
}



inline void _1a947c636_remove_dead_traits(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c2c3d54e_Trait>>& _23643_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23643_traits.len())) {
		{
			jule::Ptr<_1c2c3d54e_Trait> _23921_t = _23643_traits[_23717_i];;
			if ((!(_1abccc868_is_live(_self_, _23921_t)))) {
				_23643_traits=jule::append(_23643_traits.slice(0LL,_23717_i),_23643_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1abd10ea6;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_implemented.len())) {
				{
					jule::Ptr<_1dcd5a596_Struct> _24621_s = _23921_t.get()._field_implemented[_24421_j];;
					if ((_24621_s.get()._field_instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1abd11b44;
					};
					_23921_t.get()._field_implemented=jule::append(_23921_t.get()._field_implemented.slice(0LL,_24421_j),_23921_t.get()._field_implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1abd11b44:;
			}
			_iter_end_1abd11b44:;;
			(_23717_i)++;
		}
	_iter_next_1abd10ea6:;
	}
	_iter_end_1abd10ea6:;;
}



inline void _1a947c8ab_remove_deads_file(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2d68c84_SymbolTable>& _25742_file) {
	_1a947c13b_remove_dead_fns(_self_, _25742_file.get()._field_funcs);
	_1a947c3b1_remove_dead_structs(_self_, _25742_file.get()._field_structs);
	_1a947c636_remove_dead_traits(_self_, _25742_file.get()._field_traits);
	_1a947bdb6_remove_dead_globals(_self_, _25742_file.get()._field_vars);
}



inline void _1a947cb31_remove_deads_package(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_, jule::Ptr<_1c2d047ad_Package>& _26445_pkg) {
	{
		auto &expr = _26445_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abd166a4:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _26521_file = *it;
			{
				_1a947c8ab_remove_deads_file(_self_, _26521_file);
			}
			_iter_next_1abd166a4:;
			++it;
			goto _iter_begin_1abd166a4;
		}
		_iter_end_1abd166a4:;
	};
}



inline void _1a947cd0c_remove_deads(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1abd175c8:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_cpp_linked))) {
					_1a947cb31_remove_deads_package(_self_, _27121_used.get()._field_package);
				};
			}
			_iter_next_1abd175c8:;
			++it;
			goto _iter_begin_1abd175c8;
		}
		_iter_end_1abd175c8:;
	};
	_1a947cb31_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1a947ced8_elimanate(jule::Ptr<_1a944cd54_ObjectDeadCode> _self_) {
	_1a947bb41_collect_live(_self_);
	_1a947cd0c_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a944cd54_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a7814e_ObjectCoder> static__1a9a5b176_new(jule::Ptr<_1c41b3132_IR>& _7228_ir, _1a9a77c75_SerializationInfo _7237_info) {
	jule::Ptr<_1a9a7814e_ObjectCoder> _7317_oc = jule::new_ptr<_1a9a7814e_ObjectCoder>(_1a9a7814e_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1a9a04460_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1a99ebb0b_new(_7317_oc);
	return _7317_oc;
}



inline void _1a9a5b4a6_write(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1a9a5bc48_add_indent(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1a9a5cc38_done_indent(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1a9a5d486_indent(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1a9a4c80a_find_type_offset(_1a9a7814e_ObjectCoder* _self_, jule::Ptr<_1c2c3d54e_Trait> _10231_t, jule::Ptr<_1c2d9e825_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1dcd868e1_StructIns> _10617_s = nullptr;;
	if ((_1c2da1b9b_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1c2da1b9b_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1c2da2d89_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1c2da2d89_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1ac2002eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a77e62_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1ac2002eb:;
			++it;
			goto _iter_begin_1ac2002eb;
		}
		_iter_end_1ac2002eb:;
	};
	return -1LL;
}



inline void _1a9a5e872_loc_info(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1db7061a7_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_204ed188c_PRODUCTION) {
		{
			
			if (_207a6eee9_has_prefix(_12414_loc,_207ba3825_PATH_STDLIB)) {
				_case_begin_1ac20274e:;
				{
					_1a9a5b4a6_write(_self_, _1a9a1058c_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_207b16ca5_dir(_207ba3825_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_207a6eee9_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1ac20241e:;
				{
					_1a9a5b4a6_write(_self_, _1a9a1058c_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_207b16ca5_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1ac2023a8:;
				{
					_1a9a5b4a6_write(_self_, _1a9a1058c_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1ac2022cb:;
		};
	} else {
		_1a9a5b4a6_write(_self_, _1a9a1058c_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1a9a5b4a6_write(_self_, jule::Str(":", 1));
	_1a9a5b4a6_write(_self_, _1c2c3c273_itoa(_12329_t.get()._field_row));
	_1a9a5b4a6_write(_self_, jule::Str(":", 1));
	_1a9a5b4a6_write(_self_, _1c2c3c273_itoa(_12329_t.get()._field_column));
}



inline void _1a9a3dea0_head(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a72951_Time _15013_time = static__1a9a72ee5_now();;
	_1a9a722ad_AbsTime _15113_abs = _1a9a74634_abs(&_15013_time);;
	_1a9a5b4a6_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a9a5b4a6_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a9a5b4a6_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
	_1a9a5b4a6_write(_self_, jule::Str("// Date: ", 9));
	_1a9a5b4a6_write(_self_, _1c2c3bb46_fmt_uint(_15113_abs._field_day,10LL));
	_1a9a5b4a6_write(_self_, jule::Str("/", 1));
	_1a9a5b4a6_write(_self_, _1c2c3bb46_fmt_uint(_15113_abs._field_month,10LL));
	_1a9a5b4a6_write(_self_, jule::Str("/", 1));
	_1a9a5b4a6_write(_self_, _1c2c3bb46_fmt_uint(_15113_abs._field_year,10LL));
	_1a9a5b4a6_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a9a5b4a6_write(_self_, _self_.get()._field_info._field_compiler);
	_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
	_1a9a5b4a6_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	if (_204ed188c_PRODUCTION) {
		_1a9a5b4a6_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_204ed1161_RC))) {
		_1a9a5b4a6_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_204ed157e_SAFETY))) {
		_1a9a5b4a6_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a9a5b4a6_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a9a5b4a6_write(_self_, _207bbe005_PATH_API);
	_1a9a5b4a6_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a9a5c496_links(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac20d68e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1ac210152:;
						{
							goto _iter_next_1ac20d68e;
						}
					}
					else if (_207b74461_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1ac20e55d:;
						{
							_1a9a5b4a6_write(_self_, jule::Str("#include ", 9));
							_1a9a5b4a6_write(_self_, _18316_used.get()._field_path);
							_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1ac20e1b7:;
						{
							_1a9a5b4a6_write(_self_, jule::Str("#include \"", 10));
							_1a9a5b4a6_write(_self_, _18316_used.get()._field_path);
							_1a9a5b4a6_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1ac20e0da:;
				};
			}
			_iter_next_1ac20d68e:;
			++it;
			goto _iter_begin_1ac20d68e;
		}
		_iter_end_1ac20d68e:;
	};
}



inline void _1a9a427cd_prepare_structures(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac20dda9:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1a9a7cc14_prepare_structure(_20021_s);
				};
			}
			_iter_next_1ac20dda9:;
			++it;
			goto _iter_begin_1ac20dda9;
		}
		_iter_end_1ac20dda9:;
	};
}



inline void _1a9a4961a_iter_packages(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac211d57:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1ac211d57:;
			++it;
			goto _iter_begin_1ac211d57;
		}
		_iter_end_1ac211d57:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1a9a49b9d_build_trait_map(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a4961a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>([=](jule::Ptr<_1c2d047ad_Package>& _21736_pkg) mutable -> void {
		_1a9a7c9b1_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>([=](jule::Ptr<_1c2d68c84_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1ac215bb3:;
				if (it != expr.end()) {
					jule::Ptr<_1c2c3d54e_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a9a77e62_TraitHash>(_1a9a77e62_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1ac215bb3;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1ac216ea0:;
							if (it != expr.end()) {
								jule::Ptr<_1dcd5a596_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1ac216774:;
										if (it != expr.end()) {
											jule::Ptr<_1dcd868e1_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a9a77e62_TraitHash>(_1a9a77e62_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1ac216774:;
											++it;
											goto _iter_begin_1ac216774;
										}
										_iter_end_1ac216774:;
									};
								}
								_iter_next_1ac216ea0:;
								++it;
								goto _iter_begin_1ac216ea0;
							}
							_iter_end_1ac216ea0:;
						};
					}
					_iter_next_1ac215bb3:;
					++it;
					goto _iter_begin_1ac215bb3;
				}
				_iter_end_1ac215bb3:;
			};
		}));
	}));
}



inline void _1a9a4aa6c_trait_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a4961a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>([=](jule::Ptr<_1c2d047ad_Package>& _24836_pkg) mutable -> void {
		_1a9a7c9b1_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>([=](jule::Ptr<_1c2d68c84_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1ac21a778:;
				if (it != expr.end()) {
					jule::Ptr<_1c2c3d54e_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1a9a5d486_indent(_self_);
						_1a9a5b4a6_write(_self_, jule::Str("struct ", 7));
						_1a9a5b4a6_write(_self_, static__1a9a16bc0_trait_decl(_25029_t));
						_1a9a5b4a6_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1ac21a778:;
					++it;
					goto _iter_begin_1ac21a778;
				}
				_iter_end_1ac21a778:;
			};
		}));
	}));
}



inline void _1a9a4b232_structure_plain_decl(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd5a596_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac21a36b:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _26421_ins = *it;
			{
				_1a9a5b4a6_write(_self_, jule::Str("struct ", 7));
				_1a9a5b4a6_write(_self_, static__1a9a174a6_structure_ins(_26421_ins));
				_1a9a5b4a6_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ac21a36b:;
			++it;
			goto _iter_begin_1ac21a36b;
		}
		_iter_end_1ac21a36b:;
	};
}



inline void _1a9a4b8e7_structure_plain_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac21ca11:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1a9a4b232_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1ac21ca11:;
			++it;
			goto _iter_begin_1ac21ca11;
		}
		_iter_end_1ac21ca11:;
	};
}



inline void _1a9a4c0ac_field_decl(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd62c0d_FieldIns>& _27935_f) {
	_1a9a5b4a6_write(_self_, static__1a9a888ce_kind(_27935_f.get()._field_kind));
	_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
	_1a9a5b4a6_write(_self_, static__1a9a1774d_field(_27935_f.get()._field_decl));
	_1a9a5b4a6_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1a9a0eba7_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1a9a0e6ac_expr(_self_.get()._field_ec, _27935_f.get()._field_default.get()._field_model);
	};
	_1a9a5b4a6_write(_self_, jule::Str(";", 1));
}



inline void _1a9a43b97_structure_destructor(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _29445_s) {
	;
	jule::Ptr<_1dce38993_Fn> _29613_dispose_method = _1dcd61a64_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1c2d27858_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1a9a5b4a6_write(_self_, jule::Str("~", 1));
	_1a9a5b4a6_write(_self_, static__1a9a174a6_structure_ins(_29445_s));
	_1a9a5b4a6_write(_self_, jule::Str("(void) { ", 9));
	_1a9a5b4a6_write(_self_, static__1a9a16681_func(_29613_dispose_method));
	_1a9a5b4a6_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a9a786e3_structure_derive_defs_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _30948_s) {
	if (_1dcd4b5ed_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, static__1a9a1221a_clone_func_decl(_30948_s.get()._field_decl));
		_1a9a5b4a6_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a9a78825_structure_operator_eq(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1dcd868e1_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1a9a78a89_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1a9a5d486_indent(_self_);
	if (_1c2e71232_INLINE) {
		_1a9a5b4a6_write(_self_, jule::Str("inline ", 7));
	};
	_1a9a5b4a6_write(_self_, jule::Str("bool operator==(", 16));
	_1a9a5b4a6_write(_self_, _31742_ident);
	_1a9a5b4a6_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1a9a5bc48_add_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("return ", 7));
		_1a9a5bc48_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ac22ae92:;
			if (it != expr.end()) {
				jule::Ptr<_1dcd62c0d_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1dcd868e1_StructIns> _34021_strct = _1c2da2d89_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1ac22ae92;
					};
					if (_33721_writed) {
						_1a9a5b4a6_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
					_1a9a5d486_indent(_self_);
					_1a9a5b4a6_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1a9a1774d_field(_33825_f.get()._field_decl);;
					_1a9a5b4a6_write(_self_, _35221_f_ident);
					_1a9a5b4a6_write(_self_, jule::Str(" == _other.", 11));
					_1a9a5b4a6_write(_self_, _35221_f_ident);
				}
				_iter_next_1ac22ae92:;
				++it;
				goto _iter_begin_1ac22ae92;
			}
			_iter_end_1ac22ae92:;
		};
		_1a9a5cc38_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1a9a5b4a6_write(_self_, jule::Str("true", 4));
		};
		_1a9a5b4a6_write(_self_, jule::Str(";\n", 2));
		_1a9a5cc38_done_indent(_self_);
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("}", 1));
	} else {
		_1a9a5b4a6_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a9a78957_structure_operator_not_eq(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1dcd868e1_StructIns>& _37163_s) {
	_1a9a5d486_indent(_self_);
	if (_1c2e71232_INLINE) {
		_1a9a5b4a6_write(_self_, jule::Str("inline ", 7));
	};
	_1a9a5b4a6_write(_self_, jule::Str("bool operator!=(", 16));
	_1a9a5b4a6_write(_self_, _37146_ident);
	_1a9a5b4a6_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a9a78a89_structure_operator(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1dce3b644_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1dce38e05_is_void(_38256_f.get()._field_decl.ptr());;
	_1a9a5d486_indent(_self_);
	if (_1c2e71232_INLINE) {
		_1a9a5b4a6_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1a9a5b4a6_write(_self_, _38239_ident);
		_1a9a5b4a6_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1c2da1937_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1a9a5b4a6_write(_self_, _38239_ident);
		} else {
			_1a9a5b4a6_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a9a5b4a6_write(_self_, jule::Str(" operator", 9));
	_1a9a5b4a6_write(_self_, _38267_op);
	_1a9a5b4a6_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1dce3a775_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1a9a5b4a6_write(_self_, static__1a9a87aa9_param_ins(_41021_p));
		_1a9a5b4a6_write(_self_, jule::Str(" _other", 7));
	};
	_1a9a5b4a6_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1a9a5b4a6_write(_self_, jule::Str("return ", 7));
	};
	_1a9a5b4a6_write(_self_, static__1a9a16928_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1a9a5b4a6_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1a9a5b4a6_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a9a5b4a6_write(_self_, jule::Str("}", 1));
	} else {
		_1a9a5b4a6_write(_self_, jule::Str("(this); }", 9));
	};
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a9a78bbb_structure_operators(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1a9a174a6_structure_ins(_43144_s);;
	_1a9a78825_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1a9a78957_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1a9a78a89_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1a9a78ced_structure_ins_decl(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1ac248d7d:;
			if (it != expr.end()) {
				jule::Ptr<_1dce38993_Fn> _47225_m = *it;
				{
					_1a9a79408_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1ac248d7d:;
				++it;
				goto _iter_begin_1ac248d7d;
			}
			_iter_end_1ac248d7d:;
		};
	};
	_1a9a5b4a6_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1a9a174a6_structure_ins(_47043_s);;
	_1a9a5b4a6_write(_self_, _47813_out_ident);
	_1a9a5b4a6_write(_self_, jule::Str(" {\n", 3));
	_1a9a5bc48_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ac24ad80:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd62c0d_FieldIns> _48421_f = *it;
			{
				_1a9a5d486_indent(_self_);
				_1a9a4c0ac_field_decl(_self_, _48421_f);
				_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1ac24ad80:;
			++it;
			goto _iter_begin_1ac24ad80;
		}
		_iter_end_1ac24ad80:;
	};
	_1a9a5d486_indent(_self_);
	_1a9a43b97_structure_destructor(_self_, _47043_s);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a5d486_indent(_self_);
	_1a9a5b4a6_write(_self_, _47813_out_ident);
	_1a9a5b4a6_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1a9a786e3_structure_derive_defs_decls(_self_, _47043_s);
	_1a9a78bbb_structure_operators(_self_, _47043_s);
	_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
	_1a9a5cc38_done_indent(_self_);
	_1a9a5d486_indent(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("};", 2));
}



inline void _1a9a78e30_structure_decl(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd5a596_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac24ee0b:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _51021_ins = *it;
			{
				_1a9a78ced_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1ac24ee0b:;
			++it;
			goto _iter_begin_1ac24ee0b;
		}
		_iter_end_1ac24ee0b:;
	};
}



inline void _1a9a79062_structure_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac250d30:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1a9a78e30_structure_decl(_self_, _51621_s);
					_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1ac250d30:;
			++it;
			goto _iter_begin_1ac250d30;
		}
		_iter_end_1ac250d30:;
	};
}



inline void _1a9a79194_params_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1a9a5b4a6_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a9a5b4a6_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1ac252ded:;
		if (it != expr.end()) {
			jule::I64 _53114_i = it - expr.begin();
			jule::Ptr<_1dce3a775_ParamIns> _53121_p = *it;
			{
				_1a9a5b4a6_write(_self_, static__1a9a87aa9_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1a9a5b4a6_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1ac252ded:;
			++it;
			_53114_i++;
			goto _iter_begin_1ac252ded;
		}
		_iter_end_1ac252ded:;
	};
	_1a9a5b4a6_write(_self_, jule::Str(")", 1));
}



inline void _1a9a792c6_func_head(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dce3b644_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _1c2e71232_INLINE) && (!(_1dce393cd_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1a9a5b4a6_write(_self_, jule::Str("inline ", 7));
	};
	_1a9a5b4a6_write(_self_, static__1a9a880e8_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1a9a5b4a6_write(_self_, jule::Str("(*", 2));
		_1a9a5b4a6_write(_self_, static__1a9a16928_func_ins(_54134_f));
		_1a9a5b4a6_write(_self_, jule::Str(")", 1));
	} else {
		_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
		_1a9a5b4a6_write(_self_, static__1a9a16928_func_ins(_54134_f));
	};
}



inline void _1a9a79408_func_decl(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dce38993_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac258365:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3b644_FnIns> _55721_c = *it;
			{
				_1a9a5d486_indent(_self_);
				_1a9a792c6_func_head(_self_, _55721_c,_55642_ptr);
				_1a9a79194_params_decls(_self_, _55721_c.get()._field_params);
				_1a9a5b4a6_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ac258365:;
			++it;
			goto _iter_begin_1ac258365;
		}
		_iter_end_1ac258365:;
	};
}



inline void _1a9a7953a_func_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a4961a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>([=](jule::Ptr<_1c2d047ad_Package>& _56636_pkg) mutable -> void {
		_1a9a7c9b1_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>([=](jule::Ptr<_1c2d68c84_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1ac25b940:;
				if (it != expr.end()) {
					jule::Ptr<_1dce38993_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1a9a79408_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1ac25b940:;
					++it;
					goto _iter_begin_1ac25b940;
				}
				_iter_end_1ac25b940:;
			};
		}));
	}));
}



inline void _1a9a7966c_trait_data_types(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a4961a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>([=](jule::Ptr<_1c2d047ad_Package>& _57836_pkg) mutable -> void {
		_1a9a7c9b1_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>([=](jule::Ptr<_1c2d68c84_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1ac25e723:;
				if (it != expr.end()) {
					jule::Ptr<_1c2c3d54e_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1a9a5b4a6_write(_self_, jule::Str("struct ", 7));
						_1a9a5b4a6_write(_self_, static__1a9a16bc0_trait_decl(_58029_t));
						_1a9a5b4a6_write(_self_, jule::Str("MptrData", 8));
						_1a9a5b4a6_write(_self_, jule::Str(" {\n", 3));
						_1a9a5bc48_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1ac2614d3:;
							if (it != expr.end()) {
								jule::Ptr<_1dce38993_Fn> _58933_m = *it;
								{
									jule::Ptr<_1dce3b644_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1dce3a775_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1ac263947:;
										if (it != expr.end()) {
											jule::I64 _59530_i = it - expr.begin();
											jule::Ptr<_1dce3a775_ParamIns> _59537_ip = *it;
											{
												if (_1db708be3_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1c2c3c273_itoa(_59530_i));
												};
											}
											_iter_next_1ac263947:;
											++it;
											_59530_i++;
											goto _iter_begin_1ac263947;
										}
										_iter_end_1ac263947:;
									};
									if ((!(_204ed188c_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1a9a7dbc1_CustomType>(_1a9a7dbc1_CustomType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1a9a79408_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1ac2614d3:;
								++it;
								goto _iter_begin_1ac2614d3;
							}
							_iter_end_1ac2614d3:;
						};
						_1a9a5cc38_done_indent(_self_);
						_1a9a5d486_indent(_self_);
						_1a9a5b4a6_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1ac25e723:;
					++it;
					goto _iter_begin_1ac25e723;
				}
				_iter_end_1ac25e723:;
			};
		}));
	}));
}



inline void _1a9a7979e_param_ins(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dce3a775_ParamIns>& _62234_p) {
	_1a9a5b4a6_write(_self_, static__1a9a87aa9_param_ins(_62234_p));
	_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
	_1a9a5b4a6_write(_self_, static__1a9a16e67_param(_62234_p.get()._field_decl));
}



inline void _1a9a799be_params_ins(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1a9a5b4a6_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a9a5b4a6_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1ac268155:;
		if (it != expr.end()) {
			jule::I64 _63414_i = it - expr.begin();
			jule::Ptr<_1dce3a775_ParamIns> _63421_p = *it;
			{
				_1a9a7979e_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1a9a5b4a6_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1ac268155:;
			++it;
			_63414_i++;
			goto _iter_begin_1ac268155;
		}
		_iter_end_1ac268155:;
	};
	_1a9a5b4a6_write(_self_, jule::Str(")", 1));
}



inline void _1a9a79cdd_var_init_expr(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1c2d266ae_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1a9a5b4a6_write(_self_, jule::Str("static ", 7));
	};
	_1a9a5b4a6_write(_self_, static__1a9a888ce_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1a9a5b4a6_write(_self_, jule::Str("&", 1));
	};
	_1a9a5b4a6_write(_self_, static__1a9a179e5_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1a9a5b4a6_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1a9a5b4a6_write(_self_, jule::Str(";", 1));
}



inline void _1a9a7a063_var(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1c2d266ae_Var> _66127_v) {
	if (_1db70894b_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1a9a79cdd_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1a9a0e932_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1a9a79cdd_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1a9a79cdd_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1a9a0eba7_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1a9a7a2d8_func(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dce38993_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac2720d7:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3b644_FnIns> _67721_ins = *it;
			{
				_1a9a792c6_func_head(_self_, _67721_ins,false);
				_1a9a799be_params_ins(_self_, _67721_ins.get()._field_params);
				_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
				_1a9a016e3_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1ac2720d7:;
			++it;
			goto _iter_begin_1ac2720d7;
		}
		_iter_end_1ac2720d7:;
	};
}



inline void _1a9a7a4b4_trait_wrappers(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1ac272824:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a77e62_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ac274b78:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1c2c3c273_itoa(_68921_hash.get()._field_i));
							_1a9a7a2d8_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_204ed188c_PRODUCTION) {
									_1a9a5b4a6_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1a9a5b4a6_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1ac274b78;
							};
							jule::Bool _70721_ptr = (!(_1dce379e7_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1dce38993_Fn> _70925_sm = _1dcd61a64_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1ac274b78;
							};
							_1a9a5bc48_add_indent(_self_);
							_1a9a5b4a6_write(_self_, jule::Str("{\n", 2));
							_1a9a5d486_indent(_self_);
							if ((!(_1dce38e05_is_void(_70925_sm.ptr())))) {
								_1a9a5b4a6_write(_self_, jule::Str("return ", 7));
							};
							_1a9a5b4a6_write(_self_, static__1a9a16681_func(_70925_sm));
							_1a9a5b4a6_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1a9a5b4a6_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1a9a5b4a6_write(_self_, static__1a9a872c3_structure_ins(_68921_hash.get()._field_s));
								_1a9a5b4a6_write(_self_, jule::Str(">(", 2));
								if ((!(_204ed188c_PRODUCTION))) {
									_1a9a5b4a6_write(_self_, jule::Str("_00___file", 10));
								};
								_1a9a5b4a6_write(_self_, jule::Str(")", 1));
							} else {
								_1a9a5b4a6_write(_self_, jule::Str("_self_.data.as<", 15));
								_1a9a5b4a6_write(_self_, static__1a9a8702b_structure(_70925_sm.get()._field_owner));
								_1a9a5b4a6_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1ac27dec3:;
								if (it != expr.end()) {
									jule::Ptr<_1dce37156_Param> _73524_mp = *it;
									{
										_1a9a5b4a6_write(_self_, jule::Str(", ", 2));
										_1a9a5b4a6_write(_self_, static__1a9a16e67_param(_73524_mp));
									}
									_iter_next_1ac27dec3:;
									++it;
									goto _iter_begin_1ac27dec3;
								}
								_iter_end_1ac27dec3:;
							};
							_1a9a5b4a6_write(_self_, jule::Str(");\n}\n", 5));
							_1a9a5cc38_done_indent(_self_);
						}
						_iter_next_1ac274b78:;
						++it;
						goto _iter_begin_1ac274b78;
					}
					_iter_end_1ac274b78:;
				};
			}
			_iter_next_1ac272824:;
			++it;
			goto _iter_begin_1ac272824;
		}
		_iter_end_1ac272824:;
	};
}



inline void _1a9a7a690_trait_datas(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	jule::Ptr<_1c2c3d54e_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1ac280799:;
		if (it != expr.end()) {
			jule::Ptr<_1a9a77e62_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1a9a16bc0_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1a9a5cc38_done_indent(_self_);
						_1a9a5d486_indent(_self_);
						_1a9a5b4a6_write(_self_, jule::Str("};\n", 3));
					};
					_1a9a5b4a6_write(_self_, jule::Str("static ", 7));
					_1a9a5b4a6_write(_self_, _74817_ident);
					_1a9a5b4a6_write(_self_, jule::Str("MptrData ", 9));
					_1a9a5b4a6_write(_self_, _74817_ident);
					_1a9a5b4a6_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1a9a5bc48_add_indent(_self_);
				};
				_1a9a5d486_indent(_self_);
				_1a9a5b4a6_write(_self_, jule::Str("{\n", 2));
				_1a9a5bc48_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ac2845d3:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1a9a16681_func(_76625_m);;
							_1a9a5d486_indent(_self_);
							_1a9a5b4a6_write(_self_, jule::Str(".", 1));
							_1a9a5b4a6_write(_self_, _76721_m_ident);
							_1a9a5b4a6_write(_self_, jule::Str("=", 1));
							_1a9a5b4a6_write(_self_, _76721_m_ident);
							_1a9a5b4a6_write(_self_, jule::Str("_", 1));
							_1a9a5b4a6_write(_self_, _1c2c3c273_itoa(_74721_hash.get()._field_i));
							_1a9a5b4a6_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1ac2845d3:;
						++it;
						goto _iter_begin_1ac2845d3;
					}
					_iter_end_1ac2845d3:;
				};
				_1a9a5cc38_done_indent(_self_);
				_1a9a5d486_indent(_self_);
				_1a9a5b4a6_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1ac280799:;
			++it;
			goto _iter_begin_1ac280799;
		}
		_iter_end_1ac280799:;
	};
	if ((_74617_old != nullptr)) {
		_1a9a5cc38_done_indent(_self_);
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a9a7a86b_globals(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1ac2882da:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d266ae_Var> _78921_v = *it;
			{
				_1a9a5b4a6_write(_self_, static__1a9a888ce_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1a9a5b4a6_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1a9a5b4a6_write(_self_, jule::Str("&", 1));
				};
				_1a9a5b4a6_write(_self_, static__1a9a179e5_var(_78921_v));
				_1a9a5b4a6_write(_self_, jule::Str(" = ", 3));
				_1a9a0e932_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1a9a5b4a6_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ac2882da:;
			++it;
			goto _iter_begin_1ac2882da;
		}
		_iter_end_1ac2882da:;
	};
}



inline void _1a9a7aa47_decls(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a4aa6c_trait_decls(_self_);
	_1a9a4b8e7_structure_plain_decls(_self_);
	_1a9a79062_structure_decls(_self_);
	_1a9a7953a_func_decls(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a7966c_trait_data_types(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a7a4b4_trait_wrappers(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a7a690_trait_datas(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a7a86b_globals(_self_);
}



inline void _1a9a7acbc_structure_methods(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ac28e962:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _81821_f = *it;
			{
				_1a9a7a2d8_func(_self_, _81821_f);
				_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1ac28e962:;
			++it;
			goto _iter_begin_1ac28e962;
		}
		_iter_end_1ac28e962:;
	};
}



inline void _1a9a7b042_structure_derive_defs(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _82446_s) {
	if (_1dcd4b5ed_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1a9a5b4a6_write(_self_, static__1a9a124b2_clone_func_def(_82446_s.get()._field_decl));
		_1a9a5b4a6_write(_self_, jule::Str("{\n", 2));
		_1a9a5bc48_add_indent(_self_);
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, static__1a9a872c3_structure_ins(_82446_s));
		_1a9a5b4a6_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ac2926ac:;
			if (it != expr.end()) {
				jule::Ptr<_1dcd62c0d_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1a9a1774d_field(_83220_f.get()._field_decl);;
					_1a9a5d486_indent(_self_);
					_1a9a5b4a6_write(_self_, jule::Str("clone.", 6));
					_1a9a5b4a6_write(_self_, _83321_ident);
					_1a9a5b4a6_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a9a5b4a6_write(_self_, _83321_ident);
					_1a9a5b4a6_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1ac2926ac:;
				++it;
				goto _iter_begin_1ac2926ac;
			}
			_iter_end_1ac2926ac:;
		};
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("return clone;\n", 14));
		_1a9a5cc38_done_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a9a7b2b7_structure_ostream(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _84842_s) {
	_1a9a5d486_indent(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a9a5b4a6_write(_self_, static__1a9a174a6_structure_ins(_84842_s));
	_1a9a5b4a6_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a9a5bc48_add_indent(_self_);
	_1a9a5d486_indent(_self_);
	jule::Ptr<_1dce38993_Fn> _85617_fts = _1dcd61a64_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1c2d27b00_to_str(_85617_fts)) {
		_1a9a5b4a6_write(_self_, jule::Str("_Stream << ", 11));
		_1a9a5b4a6_write(_self_, static__1a9a16681_func(_85617_fts));
		_1a9a5b4a6_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a9a5b4a6_write(_self_, jule::Str("_Stream << \"", 12));
		_1a9a5b4a6_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1a9a5b4a6_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ac29a099:;
			if (it != expr.end()) {
				jule::I64 _86618_i = it - expr.begin();
				jule::Ptr<_1dcd62c0d_FieldIns> _86625_f = *it;
				{
					_1a9a5d486_indent(_self_);
					_1a9a5b4a6_write(_self_, jule::Str("_Stream << \"", 12));
					_1a9a5b4a6_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1a9a5b4a6_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1dcd868e1_StructIns> _87321_strct = _1c2da2d89_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1a9a5b4a6_write(_self_, jule::Str(" cpp.", 5));
						_1a9a5b4a6_write(_self_, static__1a9a1774d_field(_86625_f.get()._field_decl));
						_1a9a5b4a6_write(_self_, jule::Str("\"", 1));
					} else {
						_1a9a5b4a6_write(_self_, jule::Str("\" << _Src.", 10));
						_1a9a5b4a6_write(_self_, static__1a9a1774d_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1a9a5b4a6_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a9a5b4a6_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1ac29a099:;
				++it;
				_86618_i++;
				goto _iter_begin_1ac29a099;
			}
			_iter_end_1ac29a099:;
		};
		_1a9a5d486_indent(_self_);
		_1a9a5b4a6_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a9a5d486_indent(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a9a5cc38_done_indent(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("}", 1));
}



inline void _1a9a7b53c_structure_ins(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd868e1_StructIns>& _89938_s) {
	_1a9a7acbc_structure_methods(_self_, _89938_s);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a7b042_structure_derive_defs(_self_, _89938_s);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
	_1a9a7b2b7_structure_ostream(_self_, _89938_s);
}



inline void _1a9a7b7b2_structure(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1dcd5a596_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac2a3091:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _90821_ins = *it;
			{
				_1a9a7b53c_structure_ins(_self_, _90821_ins);
				_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1ac2a3091:;
			++it;
			goto _iter_begin_1ac2a3091;
		}
		_iter_end_1ac2a3091:;
	};
}



inline void _1a9a7b98d_structures(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac2a3822:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd5a596_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1a9a7b7b2_structure(_self_, _91521_s);
					_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1ac2a3822:;
			++it;
			goto _iter_begin_1ac2a3822;
		}
		_iter_end_1ac2a3822:;
	};
}



inline void _1a9a7bb69_funcs(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a4961a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>([=](jule::Ptr<_1c2d047ad_Package>& _92436_pkg) mutable -> void {
		_1a9a7c9b1_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>([=](jule::Ptr<_1c2d68c84_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1ac2a75b2:;
				if (it != expr.end()) {
					jule::Ptr<_1dce38993_Fn> _92629_f = *it;
					{
						if (((!(_204ed0d53_TEST)) && _1a9a8b5c4_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1ac2a75b2;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1a9a7a2d8_func(_self_, _92629_f);
							_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1ac2a75b2:;
					++it;
					goto _iter_begin_1ac2a75b2;
				}
				_iter_end_1ac2a75b2:;
			};
		}));
	}));
}



inline void _1a9a7bdde_push_init(jule::Ptr<_1a9a7814e_ObjectCoder> _self_, jule::Ptr<_1c2d047ad_Package>& _93934_pkg) {
	_1a9a7c9b1_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)>([=](jule::Ptr<_1c2d68c84_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1ac2a9e66:;
			if (it != expr.end()) {
				jule::Ptr<_1dce38993_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1a9a5d486_indent(_self_);
						_1a9a5b4a6_write(_self_, static__1a9a16681_func(_94120_f));
						_1a9a5b4a6_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1ac2a9e66:;
				++it;
				goto _iter_begin_1ac2a9e66;
			}
			_iter_end_1ac2a9e66:;
		};
	}));
}



inline void _1a9a7c0ba_init_caller(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a5b4a6_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a9a5bc48_add_indent(_self_);
	_1a9a4961a_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1c2d047ad_Package>&)>([=](jule::Ptr<_1c2d047ad_Package>& _95436_pkg) mutable -> void {
		_1a9a7bdde_push_init(_self_, _95436_pkg);
	}));
	_1a9a5cc38_done_indent(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n}", 2));
}



inline void _1a9a7c296_end(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a5b4a6_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_204ed0d53_TEST) {
		_1a9a5b4a6_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a9a5b4a6_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a9a5b4a6_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a9a7c472_serialize_head(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a427cd_prepare_structures(_self_);
	_1a9a49b9d_build_trait_map(_self_);
	_1a9a3dea0_head(_self_);
	_1a9a5c496_links(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
	_1a9a7aa47_decls(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n", 1));
	_1a9a7b98d_structures(_self_);
	_1a9a7bb69_funcs(_self_);
	_1a9a7c0ba_init_caller(_self_);
	_1a9a5b4a6_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a9a7c64d_serialize(jule::Ptr<_1a9a7814e_ObjectCoder> _self_) {
	_1a9a7c472_serialize_head(_self_);
	_1a9a7c296_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a7814e_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1ac3144ba_parse_integer(_1a9abc2e7_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1ac31704a:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_207a6eee9_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1ac317523:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_207a6eee9_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1ac3173ad:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_207a6eee9_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1ac317611:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1ac317677:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1ac316ba4:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1ac316ac7:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1ac31c35d_parse_integer(_1a9abc2e7_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1ac3200b9:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_207a6eee9_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1ac320592:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_207a6eee9_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1ac32042c:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_207a6eee9_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1ac320680:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1ac3206e6:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1ac31ec23:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1ac31eb46:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1a9abcade_get_data(_1a9abc2e7_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1a9abcd31_process_flag(_1a9abc2e7_ArgParser* _self_, jule::Trait<_1a96a4dd0_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1ac2eb86a_Flag>>()) {
			_case_begin_1ac3114b7:;
			{
				jule::Ptr<_1ac2eb86a_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1ac2eb86a_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1ac311451:;
	};
	jule::Str _22513_data = _1a9abcade_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1a96a4dd0_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a96a4c9d_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1ac2e0694_Flag>>()) {
			_case_begin_1ac312b6c:;
			{
				jule::Ptr<_1ac2e0694_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1ac2e0694_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1ac3144ba_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1c2c2b141_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a96a4dd0_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a96a4c9d_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac2e4357_Flag>>()) {
			_case_begin_1ac3135a7:;
			{
				jule::Ptr<_1ac2e4357_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1ac2e4357_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1ac31c35d_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1c2c2abce_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a96a4dd0_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a96a4c9d_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac2e7d3e_Flag>>()) {
			_case_begin_1ac31361d:;
			{
				jule::Ptr<_1ac2e7d3e_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1ac2e7d3e_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1c2c328b7_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a96a4dd0_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a96a4c9d_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac300352_Flag>>()) {
			_case_begin_1ac313684:;
			{
				(*(_21736_flag.operator jule::Ptr<_1ac300352_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1ac313541:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9abd0a6_single_dash(_1a9abc2e7_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1ac327478:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1a96a4dd0_CommonFlag> _26321_flag = _1a9aba69c_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1a9abcd31_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1ac327478:;
			++it;
			goto _iter_begin_1ac327478;
		}
		_iter_end_1ac327478:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9abd32b_double_dash(_1a9abc2e7_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1a96a4dd0_CommonFlag> _27617_flag = _1a9aba38e_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1a9abcd31_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9abd507_try_arg(_1a9abc2e7_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1a9abd32b_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a9abd0a6_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9abd6d3_parse(_1a9abc2e7_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a9abd507_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1ac33054c:;
	}
	_iter_end_1ac33054c:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a9abc2e7_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _205d1a5b5_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _205d1a85c_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _205d1ae23_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1a9acd57d:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1a9ace0ea:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_205d1a5b5_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1a9acda67:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1a9acda01:;
			};
			(_12113_n)++;
		}
	_iter_next_1a9acc5b0:;
	}
	_iter_end_1a9acc5b0:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _205d1b231_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1a9ad2131:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1a9ad21a8:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _205d1a85c_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1a9ad110d:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _205d05d42_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1a9addc53:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1a9addc53;
				};
				_2113_buff=_205d1b231_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1a9addc53:;
			++it;
			goto _iter_begin_1a9addc53;
		}
		_iter_end_1a9addc53:;
	};
	return _205d1b231_append_rune(_2113_buff,0LL);
}



inline jule::Str _205d0697a_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1a9ae0419:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1a9ae0419;
				};
			}
			_iter_next_1a9ae0419:;
			++it;
			_399_i++;
			goto _iter_begin_1a9ae0419;
		}
		_iter_end_1a9ae0419:;
	};
	return static_cast<jule::Str>(_205d1ae23_decode(_3813_code_page));
}



inline jule::Str _205d06aac_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_205d1ae23_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1a9ae177d:;
	}
	_iter_end_1a9ae177d:;;
	return jule::Str();
}



inline jule::I64 _205065228_get_last_errno(void) {
	return errno;
}



inline jule::Uintptr _205d1c84d_get_std_handle(jule::Uintptr _5423_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _205d1cc9e_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _205d1d189__wopen(jule::U16* _6322_path, jule::I64 _6334_flag, jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _205d1d387_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _205d1d6c8_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _205d1dc17_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _205d1deae_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _205d1e256_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _205d1e4ed__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _205d1e795__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _205d1ea3c__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _205d20213_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _205d20554_get_console_mode(jule::Uintptr _11325_handle, jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _205d20895_set_console_mode(jule::Uintptr _11825_handle, jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _205d20dc3_write_console(jule::Uintptr _12329_handle, jule::U16* _12345_buffer, jule::I64 _12359_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _205d21401_read_console(jule::Uintptr _13028_handle, jule::U16* _13048_buffer, jule::I64 _13062_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _205d23788_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _205d23b73_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _205d23ee7_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _205d243d2_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _205d245e1_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _205e02801_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _205e0169b_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_205e01c1d_accept_range _1969_accept = _205e02081_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _205e02db7_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_205e0478c_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1a9b651e7;
			};
		}
	_iter_next_1a9b651e7:;
	}
	_iter_end_1a9b651e7:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _205e02801_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _205e03406_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1a9b6c3b9:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1a9b6bb05:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1a9b6bb7c:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1a9b6bc04:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1a9b6bc7b:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1a9b6c023:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1a9b6ba8e:;
			{
				return -1LL;
			}
		}
		_match_end_1a9b6b9d4:;
	};
}



inline jule::I64 _205e03824_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1a9b72732:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1a9b72798:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1a9b724e0:;
			{
				_37439_r=65533LL;
				goto _case_begin_1a9b72556;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1a9b72556:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1a9b6ec4b:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1a9b6ebe6:;
	};
}



inline jule::Slice<jule::U8> _205e03b65_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _205e03ea6_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _205e03ea6_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a9b7a916:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a9b790a7:;
			{
				_41245_r=65533LL;
				goto _case_begin_1a9b7911d;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a9b7911d:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1a9b78590:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1a9b7853a:;
	};
}



inline jule::I64 _205e044e5_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a9b82d5d;
			};
			jule::U8 _48213_x = _205e0169b_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a9b82d5d;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a9b82d5d;
			};
			_205e01c1d_accept_range _49213_accept = _205e02081_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a9b82d5d:;
	}
	_iter_end_1a9b82d5d:;;
	return _47333_n;
}



inline jule::Bool _205e0478c_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _205ea1ce0_get_last_os_error_windows(void) {
	jule::U32 _169_err = _205d1d387_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a9ba8933:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a9baa979:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a9baa9e0:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a9baaa56:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1a9ba8c41:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a9baa913:;
	};
}



inline jule::Slice<jule::Str> _205ea2c7a_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _205ea31ed_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _205ea3ab1___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _205ea3ab1___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _205d1d6c8_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_205ea1ce0_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_205d06aac_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _20603b033_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _207a8eb95_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_207b091e8__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _207b12ba2_is_excluding_latin(_207a99b17_LETTER,_7618_r);
}



inline jule::Bool _207b120be_is16(jule::Slice<_207b1050c_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1aa06cbd7:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_207b1050c_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1aa06cbd7:;
				++it;
				_19313_i++;
				goto _iter_begin_1aa06cbd7;
			}
			_iter_end_1aa06cbd7:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_207b1050c_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1aa06b565:;
	}
	_iter_end_1aa06b565:;;
	return false;
}



inline jule::Bool _207b12410_is32(jule::Slice<_207b10980_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1aa074370:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_207b10980_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1aa074370:;
				++it;
				_23013_i++;
				goto _iter_begin_1aa074370;
			}
			_iter_end_1aa074370:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_207b10980_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1aa071009:;
	}
	_iter_end_1aa071009:;;
	return false;
}



inline jule::Bool _207b12ba2_is_excluding_latin(jule::Ptr<_207b10e03_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_207b1050c_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _207b120be_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_207b10980_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _207b12410_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _207a6542e_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(jule::MAX_I64,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1aa096c99:;
	}
	_iter_end_1aa096c99:;;
	return _2213_ss;
}



inline jule::Bool _207a6d7cd__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I64 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I64 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I64>((_3413_i + 1LL)),static_cast<jule::I64>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1aa099d68:;
	}
	_iter_end_1aa099d68:;;
	return true;
}



inline jule::Bool _207a6eee9_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _207a6d7cd__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _207a81659__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I64 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I64>((_4817_s.len() - _4840_start));
	jule::I64 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1aa09bd7b:;
	}
	_iter_end_1aa09bd7b:;;
	return true;
}



inline jule::Bool _207a89c39_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _207a81659__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I64 _20794497e_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I64 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_207a6d7cd__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1aa0a081e:;
	}
	_iter_end_1aa0a081e:;;
	return -1LL;
}



inline jule::I64 _207a65e68_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I64 _9539_i) {
	jule::I64 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I64 _10217_k = _9613_j;;
			jule::I64 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I64>((_10217_k + 1LL)),static_cast<jule::I64>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1aa0a2ed6;
					};
				}
			_iter_next_1aa0a4eb6:;
			}
			_iter_end_1aa0a4eb6:;;
			return _9613_j;
		}
	_iter_next_1aa0a2ed6:;
	}
	_iter_end_1aa0a2ed6:;;
	return -1LL;
}



inline jule::I64 _207b13323_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I64>(_207a65e68_find_last_at(_11718_s,_11726_sub,static_cast<jule::I64>((_11718_s.len() - 1LL))));
}



inline jule::I64 _207b1392d__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I64 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I64 _17618_n;;
			std::tie(_17614_br,_17618_n) = _205e02801_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1aa0ac980:;
	}
	_iter_end_1aa0ac980:;;
	return -1LL;
}



inline jule::I64 _207b13dc3_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I64 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1aa0b09d8:;
	}
	_iter_end_1aa0b09d8:;;
	return -1LL;
}



inline jule::I64 _207b1439b_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _20603b033_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _20603b033_stobs(_24125_runes);;
	jule::I64 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I64 _24617_n;;
			std::tie(_24614_r,_24617_n) = _205e02801_decode_rune(_2429_sb.slice(_24413_i));
			if ((_207b1392d__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1aa0b53e4:;
	}
	_iter_end_1aa0b53e4:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _207b14610_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I64 _27536_n) {
	jule::I64 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I64>(_27514_s.len());
	};
	jule::I64 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I64 _28913_j = _20794497e_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1aa0bc0bb;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I64>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1aa0bc0bb:;
	}
	_iter_end_1aa0bc0bb:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _207b14742_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_20794497e_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _207b14ad8_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_207b1439b_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::I64 _207b14c1a_count(jule::Str _32514_s, jule::Str _32522_sub) {
	if ((_32522_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32913_n = 0LL;;
	jule::I64 _33013_i = 0LL;;
	for (;;) {
		{
			jule::I64 _33213_j = _20794497e_find_at(_32514_s,_32522_sub,_33013_i);;
			if ((_33213_j == -1LL)) {
				goto _iter_end_1aa0c29d9;
			};
			(_32913_n)++;
			_33013_i=static_cast<jule::I64>((_33213_j + _32522_sub.len()));
		}
	_iter_next_1aa0c29d9:;
	}
	_iter_end_1aa0c29d9:;;
	return _32913_n;
}



inline jule::Str _207b14d4c_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I64 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	jule::I64 _3509_m = _207b14c1a_count(_34516_s,_34524_sub);;
	if ((_3509_m == 0LL)) {
		return _34516_s;
	};
	if (((_34548_n < 0LL) || (_3509_m < _34548_n))) {
		_34548_n=_3509_m;
	};
	jule::Str _35813_ss = jule::Str::alloc((_34516_s.len() + (_34548_n * (_34534_new.len() - _34524_sub.len()))));;
	jule::I64 _35913_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I64 _36113_j = _20794497e_find_at(_34516_s,_34524_sub,_35913_i);;
			if ((_36113_j == -1LL)) {
				goto _iter_end_1aa0c69dd;
			};
			_35813_ss+=_34516_s.slice(_35913_i,_36113_j);
			_35813_ss+=_34534_new;
			_35913_i=static_cast<jule::I64>((_36113_j + _34524_sub.len()));
		}
	_iter_next_1aa0c69dd:;
	}
	_iter_end_1aa0c69dd:;;
	_35813_ss+=_34516_s.slice(_35913_i);
	return _35813_ss;
}



inline void _207b13b92__trim_left(jule::Slice<jule::U8>& _40120_s, jule::Slice<jule::U8>& _40132_cutset) {
	jule::I64 _40213_i = 0LL;;
	while ((_40213_i < _40120_s.len())) {
		{
			jule::I32 _40414_r;;
			jule::I64 _40417_n;;
			std::tie(_40414_r,_40417_n) = _205e02801_decode_rune(_40120_s.slice(_40213_i));
			if ((_207b1392d__find_rune(_40132_cutset,_40414_r) == -1LL)) {
				_40120_s=_40120_s.slice(_40213_i);
				return;;
			};
			_40213_i+=_40417_n;
		}
	_iter_next_1aa0cb8a0:;
	}
	_iter_end_1aa0cb8a0:;;
	_40120_s=nullptr;
}



inline jule::Str _207b15798_trim_left(jule::Str _41618_s, jule::Str _41626_cutset) {
	jule::Slice<jule::U8> _41713_bytes = _20603b033_stobs(_41618_s);;
	jule::Slice<jule::U8> _4189_bcutset = _20603b033_stobs(_41626_cutset);;
	_207b13b92__trim_left(_41713_bytes,_4189_bcutset);
	return static_cast<jule::Str>(_41713_bytes);
}



inline void _207b158ca__trim_right(jule::Slice<jule::U8>& _42321_s, jule::Slice<jule::U8>& _42333_cutset) {
	jule::I64 _42413_i = _42321_s.len();;
	while ((_42413_i > 0LL)) {
		{
			jule::I32 _42614_r;;
			jule::I64 _42617_n;;
			std::tie(_42614_r,_42617_n) = _205e02db7_decode_last_rune(_42321_s.slice(0LL,_42413_i));
			if ((_207b1392d__find_rune(_42333_cutset,_42614_r) == -1LL)) {
				_42321_s=_42321_s.slice(0LL,_42413_i);
				return;;
			};
			_42413_i-=_42617_n;
		}
	_iter_next_1aa0ced04:;
	}
	_iter_end_1aa0ced04:;;
	_42321_s=nullptr;
}



inline jule::Str _207b15b3e_trim(jule::Str _44713_s, jule::Str _44721_cutset) {
	jule::Slice<jule::U8> _44813_bytes = _20603b033_stobs(_44713_s);;
	jule::Slice<jule::U8> _4499_bcutset = _20603b033_stobs(_44721_cutset);;
	_207b13b92__trim_left(_44813_bytes,_4499_bcutset);
	_207b158ca__trim_right(_44813_bytes,_4499_bcutset);
	return static_cast<jule::Str>(_44813_bytes);
}



inline jule::Bool _205e7a8bd_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _205e7aa00_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _205e7abba_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I64 _205e7b281_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_205e7aa00_is_slash(_8220_path[0LL]))) || (!(_205e7aa00_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _205e7b528_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _205e7b528_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_205e7abba_to_upper(_9613_p2[0LL]) == 'U')) && (_205e7abba_to_upper(_9613_p2[1LL]) == 'N')) && (_205e7abba_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _205e7b528_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _205e7b528_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		};
	};
	return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _205e7b528_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1aa0ec519:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_205e7aa00_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1aa0ec519:;
			++it;
			_1209_i++;
			goto _iter_begin_1aa0ec519;
		}
		_iter_end_1aa0ec519:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _205e7b7c0_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _205d05d42_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_205d20213_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _205d0697a_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1aa0ee3ea:;
	}
	_iter_end_1aa0ee3ea:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _205e7bb44___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _205e7b7c0_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_207b16436_clean(_14514_path),_14532_ok);
}



inline jule::Str _205e7bddb___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1aa104b70:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1aa106611:;
					}
					else if (_205e7aa00_is_slash(_16113_last_char)) {
						_case_begin_1aa1067a9:;
						{
							while (((_16217_e.len() > 0LL) && _205e7aa00_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1aa106e80:;
							}
							_iter_end_1aa106e80:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1aa106820:;
					}
					else {
						_case_begin_1aa106259:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1aa10617c:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1aa104b70:;
			++it;
			goto _iter_begin_1aa104b70;
		}
		_iter_end_1aa104b70:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _207b16436_clean(_16013_s);
}



inline jule::Str _207b16436_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _205e7b281_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _205e7a8bd_is_path_sep(_1099_original_path[0LL])) && _205e7a8bd_is_path_sep(_1099_original_path[1LL]))) {
			return _207b1669a_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _205e7a8bd_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_207b15da3_LazyBuff _12713_out = _207b15da3_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_207b161c2_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_205e7a8bd_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1c410157b:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _205e7a8bd_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1c4104271:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _205e7a8bd_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1c41042d7:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1c4107230:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_205e7a8bd_is_path_sep(static_cast<jule::U8>(_207b16090_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1c410752c:;
									}
									_iter_end_1c410752c:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1c4107296:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_207b161c2_append(&_12713_out, 92LLU);
									};
									_207b161c2_append(&_12713_out, '.');
									_207b161c2_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1c4106d67:;
						};
					}
				}
				else {
					_case_begin_1c40ee8ed:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_207b161c2_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_205e7a8bd_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_207b161c2_append(&_12713_out, '.');
										_207b161c2_append(&_12713_out, 92LLU);
										goto _iter_end_1c4101625;
									};
								}
							_iter_next_1c4101625:;
							}
							_iter_end_1c4101625:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_205e7a8bd_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_207b161c2_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1c410103c:;
						}
						_iter_end_1c410103c:;;
					}
				}
				_match_end_1c40ee821:;
			};
		}
	_iter_next_1c40ede80:;
	}
	_iter_end_1c40ede80:;;
	if ((_12713_out._field_w == 0LL)) {
		_207b161c2_append(&_12713_out, '.');
	};
	return _207b1669a_from_slash(_207b16304_string(&_12713_out));
}



inline jule::Str _207b1669a_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _207b14d4c_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _207b167cc_join(jule::Slice<jule::Str> _22513_elem) {
	return _205e7bddb___join(_22513_elem);
}



inline jule::Str _207b1690e_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_205e7a8bd_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1c410c521:;
	}
	_iter_end_1c410c521:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _207b16a41_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _205e7bb44___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _207b16b73_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _205e7a8bd_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1c410e336:;
	}
	_iter_end_1c410e336:;;
	(_25417_path).mut_slice(_207b16dd7_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_205e7a8bd_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1c41112c2:;
	}
	_iter_end_1c41112c2:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _207b16ca5_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _207b16dd7_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_205e7a8bd_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1c4113747:;
	}
	_iter_end_1c4113747:;;
	jule::Str _2919_dir = _207b16436_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _207b16dd7_volume_name(jule::Str _30320_path) {
	return _207b1669a_from_slash(_30320_path.slice(0LL,_205e7b281_volume_name_len(_30320_path)));
}



inline jule::I64 _20512ab18_get_last_fs_error(void) {
	jule::I64 _729_err = _205065228_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c4127926:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c4126e0e:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c4127382:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c41273e8:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c412745e:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c41274c5:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1c4127b35:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c4127b9b:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c4127c12:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c4127c78:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c4127cde:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c4127d55:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c4127dbb:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c4127e43:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c4127eba:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1c4128042:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c41280b9:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c4128141:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c41281b8:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c4128240:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c41282b7:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c412833e:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c41283b6:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c412843d:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c41284b5:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1c412853c:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1c41285b4:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1c412863b:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1c41271ea:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1c4127195:;
	};
}



inline jule::Bool _205dc554e_is_console_handle(jule::Uintptr _11622_handle) {
	return (((_11622_handle == _205d06dba_STDIN) || (_11622_handle == _205d0a907_STDOUT)) || (_11622_handle == _205d0532a_STDERR));
}



inline jule::I64 _207bc0424_get_last_process_error(void) {
	jule::I64 _429_err = _205065228_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c41576ae:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c4157b32:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c4157b98:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c4157c0e:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c4157c75:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c4157eb7:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c415802d:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c4158094:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c415810a:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1c4158171:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c41581d7:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1c415799a:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1c4157945:;
	};
}



inline jule::Slice<wchar_t*> _207bd009e_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1c4160c6c:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1c4160c6c:;
			++it;
			_199_i++;
			goto _iter_begin_1c4160c6c;
		}
		_iter_end_1c4160c6c:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _207bd0346_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1c4162a3d:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_205d05d42_utf16_from_str(_2812_p));;
			}
			_iter_next_1c4162a3d:;
			++it;
			goto _iter_begin_1c4162a3d;
		}
		_iter_end_1c4162a3d:;
	};
	return _2713_us;
}



inline jule::I64 _207bd0698_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _205d05d42_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _207bd0346_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _207bd009e_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _207bd0a83_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _207bd0346_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _207bd009e_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _207bd0346_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _207bd009e_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _205d05d42_utf16_from_str(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _207bd17a9_exit(jule::I64 _1213_code) {
	_205d245e1_exit(_1213_code);
}



inline jule::Str _207bd19a7_executable(void) {
	return jule::executable();
}



inline jule::Bool _207b74461_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _207b74593_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _207b17a0e_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1aa13d967:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1aa13d967:;
			++it;
			goto _iter_begin_1aa13d967;
		}
		_iter_end_1aa13d967:;
	};
	return false;
}



inline jule::Bool _207b747e6_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _207b72d44_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1aa140958:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1aa140958:;
			++it;
			goto _iter_begin_1aa140958;
		}
		_iter_end_1aa140958:;
	};
	{
		auto &expr = _207b74373_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1aa1416a1:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1aa1416a1:;
			++it;
			goto _iter_begin_1aa1416a1;
		}
		_iter_end_1aa1416a1:;
	};
	return false;
}



inline jule::Str _207b81407_logf(jule::Str _29413_fmt, jule::Slice<jule::Any> _29426_args) {
	return _207b81d20_apply_fmt(_29413_fmt,jule::Any(_29426_args));
}



inline jule::Str _207b816e3_arg_to_str(jule::Any _29815_arg) {
	{
		auto &_match_expr{ _29815_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aa14287d:;
			{
				return _29815_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1aa1428e4:;
			{
				return static_cast<jule::Str>(_29815_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1aa14295a:;
			{
				return static_cast<jule::Str>(_29815_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1aa141a25:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1aa142471:;
	};
}



inline jule::I64 _207b8198a_find_next_fmt(jule::Str _31118_fmt) {
	{
		auto &expr = _31118_fmt;
		auto it = expr.begin();
		_iter_begin_1aa143bae:;
		if (it != expr.end()) {
			jule::I64 _3129_i = it - expr.begin();
			jule::U8 &_31212_b = *it;
			{
				if ((_31212_b == '@')) {
					return _3129_i;
				};
			}
			_iter_next_1aa143bae:;
			++it;
			_3129_i++;
			goto _iter_begin_1aa143bae;
		}
		_iter_end_1aa143bae:;
	};
	return -1LL;
}



inline jule::Str _207b81d20_apply_fmt(jule::Str _32018_fmt, jule::Slice<jule::Any> _32028_args) {
	jule::Str _32113_s = jule::Str();;
	{
		auto &expr = _32028_args;
		auto it = expr.begin();
		_iter_begin_1aa1454da:;
		if (it != expr.end()) {
			jule::Any &_32312_arg = *it;
			{
				jule::I64 _32413_i = _207b8198a_find_next_fmt(_32018_fmt);;
				if ((_32413_i == -1LL)) {
					goto _iter_end_1aa1454da;
				};
				_32113_s+=_32018_fmt.slice(0LL,_32413_i);
				_32113_s+=_207b816e3_arg_to_str(jule::Any(_32312_arg));
				(_32018_fmt).mut_slice((_32413_i + 1LL));;
			}
			_iter_next_1aa1454da:;
			++it;
			goto _iter_begin_1aa1454da;
		}
		_iter_end_1aa1454da:;
	};
	_32113_s+=_32018_fmt;
	return _32113_s;
}



inline jule::Bool _207b82ddc_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _207b849b0_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _207b84c9b_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _207b85043_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _207b85362_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _207b85609_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _207b858a1_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _207b85b48_is_unix(jule::Str _6916_os) {
	return (_207b84c9b_is_darwin(_6916_os) || _207b85043_is_linux(_6916_os));
}



inline jule::Bool _207b85ebc_is_32bit(jule::Str _7217_arch) {
	return _207b85362_is_i386(_7217_arch);
}



inline jule::Bool _207b86264_is_64bit(jule::Str _7517_arch) {
	return (_207b85609_is_amd64(_7517_arch) || _207b858a1_is_arm64(_7517_arch));
}



inline void _207b93628_init(void) {
	jule::Str _2513_path = _207bd19a7_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_207ba53b5_PATH_WD=({
			auto except = _205ea31ed_working_dir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_207ba4480_PATH_EXEC=_207b16ca5_dir(_2513_path);
		_207ba3825_PATH_STDLIB=_207b167cc_join(jule::Slice<jule::Str>::make({_207ba4480_PATH_EXEC,jule::Str("..", 2),jule::Str("std", 3)}));
		_207bbe005_PATH_API=_207b167cc_join(jule::Slice<jule::Str>::make({_207ba4480_PATH_EXEC,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1db7068b1_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1db656d61_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1aa18e523:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1aa18e523:;
			++it;
			goto _iter_begin_1aa18e523;
		}
		_iter_end_1aa18e523:;
	};
	return false;
}



inline jule::Bool _1db706b9c_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1db6571a2_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1aa18ee2a:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1aa18ee2a:;
			++it;
			goto _iter_begin_1aa18ee2a;
		}
		_iter_end_1aa18ee2a:;
	};
	return false;
}



inline jule::Bool _1db707263_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1db70750a_is_raw_str(_34615_k)));
}



inline jule::Bool _1db70750a_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _1db7077a2_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _1db707dbd_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _1db708165_is_float(jule::Str _36217_k) {
	if (_207a6eee9_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _207b14ad8_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _207b14ad8_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1db70840c_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _1db70894b_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1db708be3_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1db709232_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1db656aec_SPACES;
		auto it = expr.begin();
		_iter_begin_1aa198d02:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1aa198d02:;
			++it;
			goto _iter_begin_1aa198d02;
		}
		_iter_end_1aa198d02:;
	};
	return false;
}



inline jule::Bool _1db709683_is_letter(jule::I32 _41318_r) {
	return _207a8eb95_is_letter(_41318_r);
}



inline jule::Bool _1db709bc2_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _1db709e69_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _1db70a211_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _1db70a4a8_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1aa19db5e:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1aa19d444:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1aa19d4aa:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa19d3cd:;
			{
				return false;
			}
		}
		_match_end_1aa19d323:;
	};
}



inline jule::Bool _1db70a750_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1db70a9e7_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1db6ea81c_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1aa1a05ab:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1aa1a05ab:;
			++it;
			goto _iter_begin_1aa1a05ab;
		}
		_iter_end_1aa1a05ab:;
	};
	return false;
}



inline jule::Bool _1db70ac8e_is_assign_op(jule::Str _48121_kind) {
	if (_1db70a9e7_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _1db6eab5d_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1aa1a30b4:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1aa1a30b4:;
			++it;
			goto _iter_begin_1aa1a30b4;
		}
		_iter_end_1aa1a30b4:;
	};
	return false;
}



inline jule::Ptr<_1db70b542_File> _1db70ca71_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1db70b542_File>(_1db70b542_File{._field_path=_6321_path, });
}



inline _207b80eb7_Log _1db70e39c_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_1db70b542_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _207b80eb7_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_207b81407_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _1db70e732_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1aa1ad6c9:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1aa1ad6c9:;
			++it;
			_1259_i++;
			goto _iter_begin_1aa1ad6c9;
		}
		_iter_end_1aa1ad6c9:;
	};
	return true;
}



inline jule::Str _1db70ea73_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_1db709bc2_is_decimal(_13913_b))))) {
				goto _iter_end_1aa1b1e3b;
			};
		}
	_iter_next_1aa1b1e3b:;
	}
	_iter_end_1aa1b1e3b:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1db70ee08_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _1db70ea73_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1db710249_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _1db709bc2_is_decimal(_17913_b)) {
					_case_begin_1aa1b5208:;
					{
						goto _iter_next_1aa1b3921;
					}
				}
				else if (_1db7119ed_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1aa1b526e:;
					{
						return _1db70ee08_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1aa1b5192:;
					{
						goto _iter_end_1aa1b3921;
					}
				}
				_match_end_1aa1b512b:;
			};
		}
	_iter_next_1aa1b3921:;
	}
	_iter_end_1aa1b3921:;;
	return jule::Str();
}



inline jule::Str _1db71058a_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _1db70ea73_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1db7108cb_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _1db70ea73_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1db710d2c_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _1db70ea73_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_1db709bc2_is_decimal(_21213_b))))) {
				goto _iter_end_1aa1b7a24;
			};
		}
	_iter_next_1aa1b7a24:;
	}
	_iter_end_1aa1b7a24:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1db7110c4_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1aa1bc265:;
					{
						_22731_lit = _1db710d2c_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1aa1bc2dc:;
					{
						goto _iter_next_1aa1bb4ea;
					}
				}
				else if (_1db7116ac_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1aa1bc364:;
					{
						_22731_lit = _1db70ea73_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1db709bc2_is_decimal(_23113_b)))) {
					_case_begin_1aa1bc3db:;
					{
						goto _iter_end_1aa1bb4ea;
					}
				}
				_match_end_1aa1bc188:;
			};
		}
	_iter_next_1aa1bb4ea:;
	}
	_iter_end_1aa1bb4ea:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1db71136b_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1db70e732_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_1db709e69_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1aa1c0a0a;
			};
		}
	_iter_next_1aa1c0a0a:;
	}
	_iter_end_1aa1c0a0a:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1db7116ac_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _1db7119ed_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _1db711d3e_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _1db709bc2_is_decimal(_28713_b)) {
					_case_begin_1aa1c53c2:;
					{
						goto _iter_next_1aa1c33e2;
					}
				}
				else if (_1db7119ed_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1aa1c5438:;
					{
						return true;
					}
				}
				else {
					_case_begin_1aa1c535b:;
					{
						goto _iter_end_1aa1c33e2;
					}
				}
				_match_end_1aa1c52e5:;
			};
		}
	_iter_next_1aa1c33e2:;
	}
	_iter_end_1aa1c33e2:;;
	return false;
}



inline jule::Bool _1db712180_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1aa1c71c6:;
			{
				goto _case_begin_1aa1c6989;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1aa1c6989:;
			{
				goto _case_begin_1aa1c6a00;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1aa1c6a00:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aa1c6923:;
			{
				return true;
			}
		}
		_match_end_1aa1c6846:;
	};
}



inline jule::Bool _1db7124c1_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1aa1c94d6:;
			{
				goto _case_begin_1aa1c8d21;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1aa1c8d21:;
			{
				goto _case_begin_1aa1c8d87;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1aa1c8d87:;
			{
				goto _case_begin_1aa1c8ded;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1aa1c8ded:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aa1c87d2:;
			{
				return true;
			}
		}
		_match_end_1aa1c8705:;
	};
}



inline jule::Str _1db712922_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _1db710d2c_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_1db7116ac_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1db70ea73_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_1db70a211_is_octal(_35013_b))))) {
				goto _iter_end_1aa1ce310;
			};
		}
	_iter_next_1aa1ce310:;
	}
	_iter_end_1aa1ce310:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1db712bb9_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_1db712180_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1aa1d4e5e:;
					{
						_37128_lit = _1db7108cb_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1db7124c1_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1aa1d4ed6:;
					{
						_37128_lit = _1db71058a_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1db7119ed_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1aa1d505d:;
					{
						_37128_lit = _1db70ee08_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1db711d3e_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1aa1d50d5:;
					{
						_37128_lit = _1db710249_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1db70a4a8_is_hex(_38313_b))))) {
					_case_begin_1aa1d515c:;
					{
						goto _iter_end_1aa1d4304;
					}
				}
				_match_end_1aa1d4d71:;
			};
		}
	_iter_next_1aa1d4304:;
	}
	_iter_end_1aa1d4304:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1db71300a_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_1db70a4a8_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1aa1d7c75:;
	}
	_iter_end_1aa1d7c75:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1db7132c4_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1db71300a_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1db71348e_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1db71300a_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1db713747_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1db71300a_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1db7139de_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_1db70a211_is_octal(_43717_txt[1LL]))) || (!(_1db70a211_is_octal(_43717_txt[2LL])))) || (!(_1db70a211_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_207b80eb7_Log> _1db7184d8_lex(jule::Ptr<_1db70b542_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_1db7141c6_Lex _83713_lex = _1db7141c6_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1db716c67_new_line(&_83713_lex);
	_1db714c65_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline void _1dce310b7_lshift_unsig(_1dcdbd1a8_Const& _58722_c, _1dcdbd1a8_Const& _58733_x) {
	jule::U64 _5889_l = _1dce2a116_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1dce2a116_as_u64(&_58733_x);;
	_1dce2a875_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1dce313b4_rshift_unsig(_1dcdbd1a8_Const& _59322_c, _1dcdbd1a8_Const& _59333_x) {
	jule::U64 _5949_l = _1dce2a116_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1dce2a116_as_u64(&_59333_x);;
	_1dce2a875_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1dd9b098c_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1dd9b819d_len64(_6124_x)));
}



inline jule::I64 _1dd9b19e3_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1dd9b2681_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1dd9b23d9_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dd9b1141_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1dd9b2681_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dd9b1790_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1dd9b7e06_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1dd9b819d_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1dd9b8d5d_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1dd9ba4e1_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1dd8da90b_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1dd8dabe7_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1dd8dae8e_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1dd8db2ad_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1dd8dd8ba_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1aa46384c:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1dd955701_is_inf(_4718_f,0LL) || _1dd94d3ec_is_nan(_4718_f)) {
			_case_begin_1aa4638c4:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1aa46375e:;
	};
	std::tie(_4718_f,_4739_exp) = _1dd956d0c_normalize(_4718_f);
	jule::U64 _5613_x = _1dd8dae8e_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1dd94c4b7_nan(void) {
	return static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1dd94d3ec_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1dd94ed8d_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1dd955701_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1dd956d0c_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1dd96d94a_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1dd966ec6_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dd94d3ec_is_nan(_11112_x) || _1dd955701_is_inf(_11112_x,1LL)) {
			_case_begin_1aa4a6a9e:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1aa4a6b26:;
			{
				return static_cast<jule::F64>(_1dd94c4b7_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1aa4a6b9d:;
			{
				return static_cast<jule::F64>(_1dd94ed8d_inf(-1LL));
			}
		}
		_match_end_1aa4a69d3:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1dd8dd8ba_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1dd96d94a_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(static_cast<jule::U64>((_1dd8dae8e_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1dd9c3d8a_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1dd96d94a_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1aa523e6d:;
		}
		_iter_end_1aa523e6d:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1dd9c464e_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1dd8dd8ba_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1dd966ec6_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1c2c26108_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1c2c2667a_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1c2c29716_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1c2c2667a_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1c2c24e09_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa73c2eb:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1dd8da90b_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1c2c24e09_FloatInfo>)((&(_1c2c25327_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa73c4d8:;
			{
				_8313_bits=static_cast<jule::U64>(_1dd8dae8e_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1c2c24e09_FloatInfo>)((&(_1c2c25679_F64_INFO))));
			}
		}
		else {
			_case_begin_1aa73bbbe:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1aa73a87c:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1aa740b7e:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1aa109b53:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1aa10b270:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1aa742169:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1aa74208c:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa7416c9:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1aa73c0cb:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1aa740b29:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1c2c28913_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1c2c29084_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1c2c25ab9_DecimalSlice _13213_digs = _1c2c25ab9_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1c2c34325_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa7eee3b:;
				{
					_8259_prec=static_cast<jule::I64>(_1c2c29716_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa7eeeb3:;
				{
					_8259_prec=static_cast<jule::I64>(_1c2c29716_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa80003a:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1aa7eddd5:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa8025c0:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa801a86:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1aa802092:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1aa80203c:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1c2c33137_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1c2c33577_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1c2c26ceb_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1c2c2744a_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1c2c26ceb_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1c2c24e09_FloatInfo& _18327_flt) {
	_1c2c37dea_Decimal _18413_d = _1c2c37dea_Decimal{};;
	_1c2c382c4_assign(&_18413_d, _1835_mant);
	_1c2c38549_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1c2c25ab9_DecimalSlice _18713_digs = _1c2c25ab9_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1c2c27846_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1c2c25ab9_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa8077c3:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa80a133:;
				{
					_18234_prec=static_cast<jule::I64>(_1c2c29716_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa80a199:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1aa809d14:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa8091cb:;
				{
					_1c2c38cb9_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa809242:;
				{
					_1c2c38cb9_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa8092b9:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1c2c38cb9_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1aa809121:;
		};
		_18713_digs=_1c2c25ab9_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1c2c2744a_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1c2c2744a_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1c2c25ab9_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa8101c1:;
			{
				return _1c2c27d74_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa810237:;
			{
				return _1c2c28308_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa81029d:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1c2c27d74_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1c2c28308_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1c2c29716_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1aa81007d:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1c2c27846_round_shortest(_1c2c37dea_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1c2c24e09_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1c2c37dea_Decimal _28713_upper = _1c2c37dea_Decimal{};;
	_1c2c382c4_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1c2c38549_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1c2c37dea_Decimal _30613_lower = _1c2c37dea_Decimal{};;
	_1c2c382c4_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1c2c38549_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1aa81d29a;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1aa8235e1:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1aa823668:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1aa8236e0:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1aa823525:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1aa82688b:;
					{
						_1c2c38cb9_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1aa826902:;
					{
						_1c2c387be_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1aa826979:;
					{
						_1c2c38a44_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1aa8267e2:;
			};
		}
	_iter_next_1aa81d29a:;
	}
	_iter_end_1aa81d29a:;;
}



inline jule::Slice<jule::U8> _1c2c27d74_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1c2c25ab9_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1c2c293c5_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1aa82b781:;
		}
		_iter_end_1aa82b781:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1aa82e355:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1aa830620:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1aa82d992:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1aa82be02:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1c2c28308_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1c2c25ab9_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1c2c293c5_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1aa83326b:;
		}
		_iter_end_1aa83326b:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1aa8349cb:;
		}
		_iter_end_1aa8349cb:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1c2c28913_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1c2c24e09_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1c2c3cd67_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1c2c3cd67_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1c2c29084_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1c2c24e09_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1aa839c78:;
	}
	_iter_end_1aa839c78:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1aa83eb5c:;
		}
		_iter_end_1aa83eb5c:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1aa842478:;
		}
		_iter_end_1aa842478:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1c2c2a3b5_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1aa8448ba:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1aa847082:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1aa844b2e:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1aa842aa5:;
	};
	return _50614_dst;
}



inline jule::I64 _1c2c293c5_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1c2c29716_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1c2c2a3b5_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1c2c2a7e4___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1aa84bd67:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1aa84bc13:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1c2c2a3b5_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1aa84dad3:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1c2c2a3b5_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1aa84d8e6:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1c2c2a3b5_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1aa84d96d:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aa84d550:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1aa84d473:;
					};
				};
			}
		}
		else {
			_case_begin_1aa84ae65:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1aa84ae10:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aa8537a8:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa852de5:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aa8531ae:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1aa853038:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa85329c:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa854952:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1aa8548ec:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1aa855964:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1aa8570b4:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1c2c2a3b5_lower(_10912_c)) && (_1c2c2a3b5_lower(_10912_c) <= 'z'))) {
						_case_begin_1aa856e82:;
						{
							_11017_d=static_cast<jule::U8>(((_1c2c2a3b5_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1aa856ee8:;
						{
							goto _iter_next_1aa855964;
						}
					}
					else {
						_case_begin_1aa8569ed:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1aa856987:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1aa855964:;
			++it;
			goto _iter_begin_1aa855964;
		}
		_iter_end_1aa855964:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1c2c2abce_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1c2c2a7e4___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1c2c2b141_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1c2c2a7e4___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1c2c2bc57_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1dd9b098c_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1dd9ba4e1_mul64(_4123_man,_1c2c2cbae_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1dd9ba4e1_mul64(_4123_man,_1c2c2cbae_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1c2c2c153_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1dd8dabe7_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1dd9b098c_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1dd9ba4e1_mul64(_11023_man,_1c2c2cbae_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1dd9ba4e1_mul64(_11023_man,_1c2c2cbae_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1dd8dabe7_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1c2c2e023_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1aa87e53c:;
	}
	_iter_end_1aa87e53c:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1c2c2e320_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aa883e48:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1aa883ec0;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aa883ec0:;
			{
				jule::I64 _8317_case_n = _1c2c2e023_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1dd94ed8d_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aa884047:;
			{
				if ((_1c2c2e023_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1dd94c4b7_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1aa883d7c:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1c2c2e5b7_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1aa88a191:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1aa88a207:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1aa889eb5:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1c2c2a3b5_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1aa89161a:;
					{
						goto _iter_next_1aa890a15;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1aa891692:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1aa890a15;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1aa891719:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1aa890a15;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1aa890a15;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1c2c2a3b5_lower(_13313_c))) && (_1c2c2a3b5_lower(_13313_c) <= 'f'))) {
					_case_begin_1aa891791:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1c2c2a3b5_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1aa890a15;
					}
				}
				_match_end_1aa89153d:;
			};
			goto _iter_end_1aa890a15;
		}
	_iter_next_1aa890a15:;
	}
	_iter_end_1aa890a15:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1c2c2a3b5_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1aa89b23a;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1aa89b23a:;
		}
		_iter_end_1aa89b23a:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1c2c31124_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1c2c25679_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1aa8a68c7:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1aa8a694e:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1c2c3050d_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1c2c3050d_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1aa8a69c6:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1c2c3050d_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1aa8a681c:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1c2c3150e_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1c2c25327_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1aa8ab9ed:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1aa8aba75:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1c2c30893_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1c2c30893_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1aa8abaec:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1c2c30893_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1aa8ab943:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1c2c31ad6_atof_hex(jule::Str _55113_s, _1c2c24e09_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1aa8b254d:;
	}
	_iter_end_1aa8b254d:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1aa8b2a15:;
	}
	_iter_end_1aa8b2a15:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1aa8b464e:;
	}
	_iter_end_1aa8b464e:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1c2c25327_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1dd8dabe7_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1c2c31e8d_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1c2c2e320_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1c2c2e5b7_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1c2c31ad6_atof_hex(_61611_s.slice(0LL,_61629_n),_1c2c25327_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1c2c3150e_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1c2c2c153_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1c2c2c153_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1c2c37dea_Decimal _66213_d = _1c2c37dea_Decimal{};;
	if ((!(_1c2c2ecb0_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1c2c300bd_float_bits(&_66213_d, _1c2c25327_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1dd8dabe7_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2c32235_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1c2c2e320_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1c2c2e5b7_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1c2c31ad6_atof_hex(_67411_s.slice(0LL,_67429_n),_1c2c25679_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1c2c31124_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1c2c2bc57_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1c2c2bc57_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1c2c37dea_Decimal _71913_d = _1c2c37dea_Decimal{};;
	if ((!(_1c2c2ecb0_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1c2c300bd_float_bits(&_71913_d, _1c2c25679_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1dd8db2ad_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1c2c32576_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1c2c31e8d_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1c2c32235_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1c2c328b7_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1c2c32576_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1c2c33137_ryu_ftoa_fixed32(_1c2c25ab9_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1dd9b7e06_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1c2c345bc_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1c2c35cb6_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1c2c364e2_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1c2c33da2_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1c2c33577_ryu_ftoa_fixed64(_1c2c25ab9_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1dd9b819d_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1c2c345bc_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1c2c361a1_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1c2c364e2_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1c2c33da2_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1c2c33da2_format_decimal(_1c2c25ab9_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1c2c3390c_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1aa8ec566:;
	}
	_iter_end_1aa8ec566:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1aa90105e:;
	}
	_iter_end_1aa90105e:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1aa9066a2:;
	}
	_iter_end_1aa9066a2:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1c2c34325_ryu_ftoa_shortest(_1c2c25ab9_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1c2c24e09_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1dd9b2681_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1c2c352e3_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1c2c34c4e_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1c2c352e3_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1c2c345bc_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1c2c25327_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1c2c35cb6_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1c2c35cb6_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1c2c35cb6_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1c2c361a1_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1c2c361a1_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1c2c361a1_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1c2c364e2_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1c2c364e2_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1c2c364e2_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1c2c352e3_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1c2c345bc_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1c2c34864_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1c2c34c4e_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1c2c24e09_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1c2c352e3_ryu_digits(_1c2c25ab9_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1c2c36789_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1c2c36789_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1c2c36789_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1c2c358cb_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1c2c358cb_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1aa926e42:;
		}
		_iter_end_1aa926e42:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1c2c358cb_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1aa929230:;
	}
	_iter_end_1aa929230:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1aa926bbc:;
	}
	_iter_end_1aa926bbc:;;
}



inline void _1c2c358cb_ryu_digits32(_1c2c25ab9_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1aa92cb07;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1aa92cb07:;
	}
	_iter_end_1aa92cb07:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1aa934735:;
	}
	_iter_end_1aa934735:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1c2c35cb6_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1c2c2cbae_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1dd9ba4e1_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1c2c34864_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1c2c361a1_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1c2c2cbae_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1c2c34864_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1dd9ba4e1_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1dd9ba4e1_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1dd9b8d5d_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1c2c364e2_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1aa9441c3:;
	}
	_iter_end_1aa9441c3:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1c2c36789_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1c2c395d3_trim(_1c2c37dea_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1aa948716:;
	}
	_iter_end_1aa948716:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1c2c3988b_right_shift(_1c2c37dea_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1aa94bab0:;
				}
				_iter_end_1aa94bab0:;;
				goto _iter_end_1aa94a53c;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1aa94a53c:;
	}
	_iter_end_1aa94a53c:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1aa94e387:;
	}
	_iter_end_1aa94e387:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1aa94eee2:;
	}
	_iter_end_1aa94eee2:;;
	_34321_a._field_nd=_34513_w;
	_1c2c395d3_trim(_34321_a);
}



inline jule::Bool _1c2c39ced_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1aa958b77:;
	}
	_iter_end_1aa958b77:;;
	return false;
}



inline void _1c2c3a073_left_shift(_1c2c37dea_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1c2c37867_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1c2c39ced_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1c2c37867_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1aa95c52c:;
	}
	_iter_end_1aa95c52c:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1aa95eb4a:;
	}
	_iter_end_1aa95eb4a:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1c2c395d3_trim(_41120_a);
}



inline jule::Bool _1c2c3a3b4_should_round_up(_1c2c37dea_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1c2c3bb46_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1c2c3c592_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1c2c3cd67_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1c2c3becb_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1c2c3c592_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1c2c3cd67_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1c2c3c273_itoa(jule::I64 _8013_i) {
	return _1c2c3becb_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1c2c3c592_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1c2c3c839_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1c2c3cd67_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1aa99e030:;
		}
		_iter_end_1aa99e030:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1c2c3c839_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1dd9b19e3_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1aa9a7b4e:;
		}
		_iter_end_1aa9a7b4e:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1aa9aa8dd:;
		}
		_iter_end_1aa9aa8dd:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline jule::Str _1c2cc53e9_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa9c62dd:;
			{
				return _1c2cc496a_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa9c6354:;
			{
				return _1c2cc4c23_SYS_UINT;
			}
		}
		else {
			_case_begin_1aa9c61bc:;
			{
				return _4521_kind;
			}
		}
		_match_end_1aa9c6112:;
	};
}



inline jule::I64 _1c2cc5691_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa9c7a70:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa9c7ad6:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa9c73cc:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa9c7443:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1aa9c74a9:;
			{
				return _1c2cbc0d3_BIT_SIZE;
			}
		}
		else {
			_case_begin_1aa9c7366:;
			{
				return -1LL;
			}
		}
		_match_end_1aa9c70be:;
	};
}



inline jule::Str _1c2cc59b0_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1aa9c9687:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa9c96ed:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aa9c9764:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa9c9874:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1aa9c8a1b:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa9c9566:;
	};
}



inline jule::Str _1c2cc5c57_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1aa9caa0c:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa9caa73:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aa9caad9:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa9cadd6:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1aa9ca07d:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa9c9e3a:;
	};
}



inline jule::Str _1c2cc5eee_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa9cbee7:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa9cc05d:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1aa9cb5bd:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa9cb47a:;
	};
}



inline jule::Bool _1c2cc6a9e_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1c2c328b7_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1c2cc6d46_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aa9d0acd:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1aa9d19d0:;
			{
				return 64LL;
			}
		}
		_match_end_1aa9d1d32:;
	};
}



inline jule::I64 _1c2cc70dd_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1aa9d2edc:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1aa9d3053:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1aa9d30ca:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1aa9d2cab:;
			{
				return 64LL;
			}
		}
		_match_end_1aa9d2bce:;
	};
}



inline jule::I64 _1c2cc7385_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1aa9d4d57:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1aa9d4dbd:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1aa9d4e45:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1aa9d4c9c:;
			{
				return 64LL;
			}
		}
		_match_end_1aa9d53c9:;
	};
}



inline void _1c2cc74ea_update_target(void) {
	{
		{
			auto &_match_expr{ _207ba2c31_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1aa9d5cc0:;
				{
					_1c2cbc0d3_BIT_SIZE=64LL;
					_1c2cc496a_SYS_INT=jule::Str("i64", 3);
					_1c2cc4c23_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1aa9d65d9:;
				{
					_1c2cbc0d3_BIT_SIZE=32LL;
					_1c2cc496a_SYS_INT=jule::Str("i32", 3);
					_1c2cc4c23_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1aa9d5be3:;
		};
	};
}



inline void _1c2cc7660_init(void) {
	_1c2cc74ea_update_target();
}



inline jule::F64 _1c2ccb91c_min(jule::Str _6116_k) {
	_6116_k=_1c2cc53e9_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa9d9433:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa9d9499:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa9d8dd3:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa9d8e5a:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa9d8ed2:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa9d9059:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1aa9d6e36:;
			{
				return 0LL;
			}
		}
		_match_end_1aa9d6c49:;
	};
}



inline jule::F64 _1c2ccbc08_max(jule::Str _8316_k) {
	_8316_k=_1c2cc53e9_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa9d91d0:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa9dab2c:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa9dab93:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa9dac09:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa9dac70:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa9daed4:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa9db04a:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa9db0b1:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa9db138:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa9db1b0:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1aa9da995:;
			{
				return 0LL;
			}
		}
		_match_end_1aa9d98ea:;
	};
}



inline jule::Bool _1c2ccc07c_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1c2ccc368_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1c2ccc610_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1c2ccc92e_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1c2cccbc6_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1c2ccce6d_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1c2ccd215_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1c2ccd589_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1c2ccd831_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1c2ccdac8_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1c2ccde19_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aa9e46a2:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa9e4916:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa9e497c:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa9e49e3:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa9e4a59:;
			{
				return _1c2ccc07c_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa9e4ac0:;
			{
				return _1c2ccc368_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa9e4b36:;
			{
				return _1c2ccc610_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa9e4b9c:;
			{
				return _1c2ccc92e_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa9e4c24:;
			{
				return _1c2cccbc6_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa9e4c8a:;
			{
				return _1c2ccce6d_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa9e4d12:;
			{
				return _1c2ccd215_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa9e4d89:;
			{
				return _1c2ccd589_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa9e4e11:;
			{
				return _1c2ccd831_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa9e4e88:;
			{
				return _1c2ccdac8_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1aa9e5010:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1aa9e5087:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1aa9e4460:;
			{
				return false;
			}
		}
		_match_end_1aa9e4394:;
	};
}



inline jule::Bool _1c2cce1b1_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1c2cce458_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1c2cce700_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1c2cce997_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1c2ccede8_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1c2cd0190_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1c2cd0437_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1c2cd06ce_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1c2cd0a20_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa9ecea2:;
			{
				return _1c2cd1a54_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa9ed018:;
			{
				return _1c2cd1d40_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa9ed216:;
			{
				return _1c2cd1d40_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa9ed27c:;
			{
				return _1c2cce1b1_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa9ed2e3:;
			{
				return _1c2cce458_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa9ed36a:;
			{
				return _1c2cce700_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa9ed3e2:;
			{
				return _1c2cce997_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa9ed469:;
			{
				return _1c2ccede8_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa9ed546:;
			{
				return _1c2cd0190_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa9ed5ac:;
			{
				return _1c2cd0437_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa9ed623:;
			{
				return _1c2cd06ce_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aa9ed689:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa9ecc60:;
			{
				return false;
			}
		}
		_match_end_1aa9ec644:;
	};
}



inline jule::Bool _1c2cd1a54_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1c2cd1d40_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1c2cd20d7_is_int(jule::Str _4615_k) {
	return (_1c2cd1a54_is_sig_int(_4615_k) || _1c2cd1d40_is_unsig_int(_4615_k));
}



inline jule::Bool _1c2cd2406_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1c2cd269d_is_num(jule::Str _5615_k) {
	return (_1c2cd20d7_is_int(_5615_k) || _1c2cd2406_is_float(_5615_k));
}



inline jule::Bool _1c2cd2945_is_sig_num(jule::Str _6119_k) {
	return (_1c2cd1a54_is_sig_int(_6119_k) || _1c2cd2406_is_float(_6119_k));
}



inline jule::Bool _1c2d3e8c5_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1c2d3ea07_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1c2d5717e_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _205e02801_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1c2d56821_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1c2d56ac9_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1c2d574c0_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _205e02801_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_205e03b65_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1aaa0b1be:;
	}
	_iter_end_1aaa0b1be:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1c2d56d71_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aaa10cd9:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aaa10d50:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aaa10db6:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aaa10e2c:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aaa10ea4:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aaa1102b:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aaa110a3:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aaa1112a:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aaa111a2:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aaa11229:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1aaa10bb8:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1c2d5717e_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1c2d56d71_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1aaa168b1:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1c2c2abce_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aaa156c3:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1c2c2abce_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aaa17197:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1c2c2abce_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1aaa1588d:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1c2c2abce_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1aaa15838:;
	};
}



inline jule::Slice<jule::U8> _1c2d574c0_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1c2d5717e_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1c2e32710_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _205e02801_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1aaa57b11:;
	}
	_iter_end_1aaa57b11:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1c2e32ec4_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _205e02801_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1aaa5a938:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aaa5a9b0:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1aaa5a52b:;
			};
		}
	_iter_next_1aaa59a7a:;
	}
	_iter_end_1aaa59a7a:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1c2e18a26_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1aaa5c97e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c26108_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aaa5c62c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c26108_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1aaa5ad45:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3becb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1aaa5adab:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3becb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1aaa5c31e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3becb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aaa5c385:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3becb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1aaa5c3eb:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3bb46_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1aaa5c462:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3bb46_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1aaa5c4c8:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3bb46_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aaa5ca06:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c2c3bb46_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aaa5ca6c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1aaa5cad3:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1aaa59c34:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1aaa59bce:;
	};
}



inline jule::Slice<jule::U8> _1c2e1830b_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1c2e18a26_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1c2e1bad4_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1c2e1830b_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1c2e2963b_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1c2e32710_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1c2e32710_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1c2e32ec4_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1aaa67747;
			};
			_11213_bytes=jule::append(_11213_bytes,_1c2e1bad4_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_1aaa67747;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1aaa67747:;
	}
	_iter_end_1aaa67747:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1c2e51685_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1c2e2963b_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1dce3d778_parameter_uses_generics(jule::Ptr<_1dce37156_Param>& _37729_p, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>& _37741_generics) {
	if (_1dce37783_is_self(_37729_p.ptr())) {
		return false;
	};
	return _1c2db6122_kind_uses_generics(_37729_p.get()._field_kind.get()._field_decl.get()._field_kind,_37741_generics);
}



inline jule::Ptr<_1c2da397d_TypeSymbol> _1dce40c64_build_type(jule::Ptr<_1dcd69d69_TypeDecl> _9419_t) {
	if ((_9419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_decl=_9419_t, });
}



inline jule::Ptr<_1c2d6ea6a_Value> _1dce41050_build_expr(jule::Ptr<_1dcd6e38a_Expr> _10319_expr) {
	if ((_10319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_expr=_10319_expr, });
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1dce412e7_build_type_alias(jule::Ptr<_1dcd814bd_TypeAliasDecl> _11225_decl) {
	return jule::new_ptr<_1c2d9db32_TypeAlias>(_1c2d9db32_TypeAlias{._field_scope=_11225_decl.get()._field_scope, ._field_public=_11225_decl.get()._field_public, ._field_cpp_linked=_11225_decl.get()._field_cpp_linked, ._field_token=_11225_decl.get()._field_token, ._field_ident=_11225_decl.get()._field_ident, ._field_kind=_1dce40c64_build_type(_11225_decl.get()._field_kind), });
}



inline jule::Ptr<_1dcd4ca61_Field> _1dce41616_build_field(jule::Ptr<_1dcd84aa9_FieldDecl> _12320_decl) {
	return jule::new_ptr<_1dcd4ca61_Field>(_1dcd4ca61_Field{._field_token=_12320_decl.get()._field_token, ._field_public=_12320_decl.get()._field_public, ._field_mutable=_12320_decl.get()._field_mutable, ._field_ident=_12320_decl.get()._field_ident, ._field_kind=_1dce40c64_build_type(_12320_decl.get()._field_kind), ._field_default=_12320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1dcd4ca61_Field>> _1dce418ad_build_fields(jule::Slice<jule::Ptr<_1dcd84aa9_FieldDecl>>& _13422_decls) {
	jule::Slice<jule::Ptr<_1dcd4ca61_Field>> _13513_fields = jule::Slice<jule::Ptr<_1dcd4ca61_Field>>::alloc(0LL,_13422_decls.len());;
	{
		auto &expr = _13422_decls;
		auto it = expr.begin();
		_iter_begin_1aacbb3a2:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd84aa9_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1dce41616_build_field(_13617_decl));;
			}
			_iter_next_1aacbb3a2:;
			++it;
			goto _iter_begin_1aacbb3a2;
		}
		_iter_end_1aacbb3a2:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1dcd5a596_Struct> _1dce41b55_build_struct(jule::Ptr<_1dcd85417_StructDecl> _14221_decl) {
	return jule::new_ptr<_1dcd5a596_Struct>(_1dcd5a596_Struct{._field_token=_14221_decl.get()._field_token, ._field_ident=_14221_decl.get()._field_ident, ._field_fields=_1dce418ad_build_fields(_14221_decl.get()._field_fields), ._field_public=_14221_decl.get()._field_public, ._field_cpp_linked=_14221_decl.get()._field_cpp_linked, ._field_directives=_14221_decl.get()._field_directives, ._field_generics=_14221_decl.get()._field_generics, });
}



inline jule::Ptr<_1dce37156_Param> _1dce41dec_build_param(jule::Ptr<_1dcd7a85d_ParamDecl> _15420_decl) {
	return jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_token=_15420_decl.get()._field_token, ._field_mutable=_15420_decl.get()._field_mutable, ._field_variadic=_15420_decl.get()._field_variadic, ._field_reference=_15420_decl.get()._field_reference, ._field_kind=_1dce40c64_build_type(_15420_decl.get()._field_kind), ._field_ident=_15420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1dce37156_Param>> _1dce42271_build_params(jule::Slice<jule::Ptr<_1dcd7a85d_ParamDecl>>& _16522_decls) {
	jule::Slice<jule::Ptr<_1dce37156_Param>> _16613_params = jule::Slice<jule::Ptr<_1dce37156_Param>>::alloc(0LL,_16522_decls.len());;
	{
		auto &expr = _16522_decls;
		auto it = expr.begin();
		_iter_begin_1aacbe240:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd7a85d_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1dce41dec_build_param(_16717_decl));;
			}
			_iter_next_1aacbe240:;
			++it;
			goto _iter_begin_1aacbe240;
		}
		_iter_end_1aacbe240:;
	};
	return _16613_params;
}



inline jule::Ptr<_1dce36991_RetType> _1dce42518_build_ret_type(jule::Ptr<_1dcd6ce7c_RetTypeDecl> _17323_decl) {
	if (((_17323_decl.get()._field_idents == nullptr) && (_17323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1dce36991_RetType>(_1dce36991_RetType{._field_kind=_1dce40c64_build_type(_17323_decl.get()._field_kind), ._field_idents=_17323_decl.get()._field_idents});
}



inline jule::Ptr<_1dce38993_Fn> _1dce427b0_build_fn(jule::Ptr<_1dcd7bb7d_FnDecl> _18317_decl) {
	return jule::new_ptr<_1dce38993_Fn>(_1dce38993_Fn{._field_token=_18317_decl.get()._field_token, ._field_global=_18317_decl.get()._field_global, ._field_unsafety=_18317_decl.get()._field_unsafety, ._field_public=_18317_decl.get()._field_public, ._field_cpp_linked=_18317_decl.get()._field_cpp_linked, ._field_statically=_18317_decl.get()._field_statically, ._field_exceptional=_18317_decl.get()._field_exceptional, ._field_ident=_18317_decl.get()._field_ident, ._field_directives=_18317_decl.get()._field_directives, ._field_scope=_18317_decl.get()._field_scope, ._field_generics=_18317_decl.get()._field_generics, ._field_result=_1dce42518_build_ret_type(_18317_decl.get()._field_result), ._field_params=_1dce42271_build_params(_18317_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1dce38993_Fn>> _1dce42a57_build_methods(jule::Slice<jule::Ptr<_1dcd7bb7d_FnDecl>>& _20123_decls) {
	jule::Slice<jule::Ptr<_1dce38993_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1dce38993_Fn>>::alloc(0LL,_20123_decls.len());;
	{
		auto &expr = _20123_decls;
		auto it = expr.begin();
		_iter_begin_1aacc2bd3:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd7bb7d_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1dce427b0_build_fn(_20317_decl));;
			}
			_iter_next_1aacc2bd3:;
			++it;
			goto _iter_begin_1aacc2bd3;
		}
		_iter_end_1aacc2bd3:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1c2c3d54e_Trait> _1dce42cee_build_trait(jule::Ptr<_1dcd85a22_TraitDecl> _20920_decl) {
	return jule::new_ptr<_1c2c3d54e_Trait>(_1c2c3d54e_Trait{._field_token=_20920_decl.get()._field_token, ._field_ident=_20920_decl.get()._field_ident, ._field_public=_20920_decl.get()._field_public, ._field_methods=_1dce42a57_build_methods(_20920_decl.get()._field_methods), });
}



inline jule::Ptr<_1c2c3ec15_EnumItem> _1dce43096_build_enum_item(jule::Ptr<_1dcd82d2c_EnumItemDecl> _21824_decl) {
	return jule::new_ptr<_1c2c3ec15_EnumItem>(_1c2c3ec15_EnumItem{._field_token=_21824_decl.get()._field_token, ._field_ident=_21824_decl.get()._field_ident, ._field_value=_1dce41050_build_expr(_21824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>> _1dce4333d_build_enum_items(jule::Slice<jule::Ptr<_1dcd82d2c_EnumItemDecl>>& _22626_decls) {
	jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1c2c3ec15_EnumItem>>::alloc(0LL,_22626_decls.len());;
	{
		auto &expr = _22626_decls;
		auto it = expr.begin();
		_iter_begin_1aacc5268:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd82d2c_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1dce43096_build_enum_item(_22817_decl));;
			}
			_iter_next_1aacc5268:;
			++it;
			goto _iter_begin_1aacc5268;
		}
		_iter_end_1aacc5268:;
	};
	return _22713_items;
}



inline jule::Ptr<_1c2c4070a_Enum> _1dce435d5_build_enum(jule::Ptr<_1dcd83855_EnumDecl> _23419_decl) {
	return jule::new_ptr<_1c2c4070a_Enum>(_1c2c4070a_Enum{._field_token=_23419_decl.get()._field_token, ._field_public=_23419_decl.get()._field_public, ._field_ident=_23419_decl.get()._field_ident, ._field_kind=_1dce40c64_build_type(_23419_decl.get()._field_kind), ._field_items=_1dce4333d_build_enum_items(_23419_decl.get()._field_items)});
}



inline jule::Ptr<_1c2c4173e_TypeEnumItem> _1dce43a36_build_type_enum_item(jule::Ptr<_1dcd8435b_TypeEnumItemDecl> _24429_decl) {
	return jule::new_ptr<_1c2c4173e_TypeEnumItem>(_1c2c4173e_TypeEnumItem{._field_token=_24429_decl.get()._field_token, ._field_ident=_24429_decl.get()._field_ident, ._field_kind=_1dce40c64_build_type(_24429_decl.get()._field_kind)});
}



inline jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>> _1dce43ccd_build_type_enum_items(jule::Slice<jule::Ptr<_1dcd8435b_TypeEnumItemDecl>>& _25231_decls) {
	jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1c2c4173e_TypeEnumItem>>::alloc(0LL,_25231_decls.len());;
	{
		auto &expr = _25231_decls;
		auto it = expr.begin();
		_iter_begin_1aacc7a40:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd8435b_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1dce43a36_build_type_enum_item(_25417_decl));;
			}
			_iter_next_1aacc7a40:;
			++it;
			goto _iter_begin_1aacc7a40;
		}
		_iter_end_1aacc7a40:;
	};
	return _25313_items;
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1dce44075_build_type_enum(jule::Ptr<_1dcd84559_TypeEnumDecl> _26024_decl) {
	return jule::new_ptr<_1c2c41d05_TypeEnum>(_1c2c41d05_TypeEnum{._field_token=_26024_decl.get()._field_token, ._field_public=_26024_decl.get()._field_public, ._field_ident=_26024_decl.get()._field_ident, ._field_items=_1dce43ccd_build_type_enum_items(_26024_decl.get()._field_items)});
}



inline jule::Ptr<_1c2d266ae_Var> _1dce4431c_build_var(jule::Ptr<_1dcd7cb5c_VarDecl> _26918_decl) {
	return jule::new_ptr<_1c2d266ae_Var>(_1c2d266ae_Var{._field_token=_26918_decl.get()._field_token, ._field_ident=_26918_decl.get()._field_ident, ._field_cpp_linked=_26918_decl.get()._field_cpp_linked, ._field_constant=_26918_decl.get()._field_constant, ._field_mutable=_26918_decl.get()._field_mutable, ._field_public=_26918_decl.get()._field_public, ._field_statically=_26918_decl.get()._field_statically, ._field_reference=_26918_decl.get()._field_reference, ._field_kind=_1dce40c64_build_type(_26918_decl.get()._field_kind), ._field_value=_1dce41050_build_expr(_26918_decl.get()._field_expr), ._field_refers=static__1dce3e834_new(), ._field_directives=_26918_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1c2d266ae_Var>> _1dce445b4_build_vars(jule::Slice<jule::Ptr<_1dcd7cb5c_VarDecl>> _28619_decls) {
	jule::Slice<jule::Ptr<_1c2d266ae_Var>> _28713_vars = jule::Slice<jule::Ptr<_1c2d266ae_Var>>::alloc(0LL,_28619_decls.len());;
	{
		auto &expr = _28619_decls;
		auto it = expr.begin();
		_iter_begin_1aaccaceb:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd7cb5c_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1dce4431c_build_var(_28817_decl));;
			}
			_iter_next_1aaccaceb:;
			++it;
			goto _iter_begin_1aaccaceb;
		}
		_iter_end_1aaccaceb:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1c2cc44d6_Impl> _1dce4485b_build_impl(jule::Ptr<_1dcd8612c_Impl> _29419_decl) {
	return jule::new_ptr<_1c2cc44d6_Impl>(_1c2cc44d6_Impl{._field_base=_29419_decl.get()._field_base, ._field_dest=_29419_decl.get()._field_dest, ._field_methods=_1dce42a57_build_methods(_29419_decl.get()._field_methods), ._field_statics=_1dce445b4_build_vars(_29419_decl.get()._field_statics)});
}



inline jule::Bool _1c2ca1419_match_constraint(jule::Str& _13522_c, jule::Ptr<_1c2d9e825_TypeKind>& _13535_g) {
	{
		auto &_match_expr{ _13522_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1aad36e23:;
			{
				jule::Ptr<_1c2da42ec_Prim> _13813_prim = _1c2da1937_prim(_13535_g.ptr());;
				if ((_13813_prim == nullptr)) {
					return false;
				};
				return _1c2cd2945_is_sig_num(_13813_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1aad36e89:;
			{
				jule::Ptr<_1c2da42ec_Prim> _14413_prim = _1c2da1937_prim(_13535_g.ptr());;
				if ((_14413_prim == nullptr)) {
					return false;
				};
				return _1c2cd1d40_is_unsig_int(_14413_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1aad370bb:;
			{
				jule::Ptr<_1c2da42ec_Prim> _15013_prim = _1c2da1937_prim(_13535_g.ptr());;
				if ((_15013_prim == nullptr)) {
					return false;
				};
				return _1c2cd2406_is_float(_15013_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1aad37132:;
			{
				jule::Ptr<_1c2da42ec_Prim> _15613_prim = _1c2da1937_prim(_13535_g.ptr());;
				if ((_15613_prim == nullptr)) {
					return false;
				};
				return _1c2cd269d_is_num(_15613_prim.get()._field_kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1aad37198:;
			{
				return _1c2da0c22_mutable(_13535_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1aad3720e:;
			{
				return (!(_1c2da0c22_mutable(_13535_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1aad37275:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1aad372db:;
			{
				jule::Ptr<_1c2da42ec_Prim> _16813_prim = _1c2da1937_prim(_13535_g.ptr());;
				if ((_16813_prim != nullptr)) {
					return (_1c2cd269d_is_num(_16813_prim.get()._field_kind) || _1c2da7531_is_str(_16813_prim.ptr()));
				};
				if ((_1c2da1e10_ptr(_13535_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1dcd868e1_StructIns> _17513_s = _1c2da2d89_strct(_13535_g.ptr());;
				if ((_17513_s != nullptr)) {
					return ((((_17513_s.get()._field_operators._field_gt != nullptr) && (_17513_s.get()._field_operators._field_gt_eq != nullptr)) && (_17513_s.get()._field_operators._field_lt != nullptr)) && (_17513_s.get()._field_operators._field_lt_eq != nullptr));
				};
				jule::Ptr<_1c2c4070a_Enum> _18213_enm = _1c2da2174_enm(_13535_g.ptr());;
				if ((_18213_enm != nullptr)) {
					return _1c2cd269d_is_num(_1c2d9ec21_to_str(_18213_enm.get()._field_kind.get()._field_kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1aad36b48:;
			{
				return false;
			}
		}
		_match_end_1aad36a8d:;
	};
}



inline jule::Bool _1c2ca300e_is_builtin_constraint(jule::Str& _19227_ident) {
	{
		auto &expr = _1c2c5a7e1_BUILTIN_CONSTRAINTS;
		auto it = expr.begin();
		_iter_begin_1aad3cda2:;
		if (it != expr.end()) {
			jule::Str &_19312_bc = *it;
			{
				if ((_19227_ident == _19312_bc)) {
					return true;
				};
			}
			_iter_next_1aad3cda2:;
			++it;
			goto _iter_begin_1aad3cda2;
		}
		_iter_end_1aad3cda2:;
	};
	return false;
}



inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cac2d2_new_scope_checker_base(jule::Ptr<_1c2d099a0_Sema>& _5932_s, jule::Ptr<_1dce3b644_FnIns> _5946_owner) {
	return jule::new_ptr<_1c2cd9a07_ScopeChecker>(_1c2cd9a07_ScopeChecker{._field_s=_5932_s, ._field_owner=_5946_owner, ._field_table=jule::new_ptr<_1c2d68c84_SymbolTable>(), });
}



inline jule::Ptr<_1c2cd9a07_ScopeChecker> _1c2cacd60_new_scope_checker(jule::Ptr<_1c2d099a0_Sema>& _6727_s, jule::Ptr<_1dce3b644_FnIns> _6741_owner) {
	jule::Ptr<_1c2cd9a07_ScopeChecker> _6813_base = _1c2cac2d2_new_scope_checker_base(_6727_s,_6741_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c2cd8770_ScopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c2cd8be3_ScopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1c2cd8770_ScopeLabel> _1c2cadc1d_find_label_parent(jule::Str _7722_ident, jule::Ptr<_1c2cd9a07_ScopeChecker> _7738_scope) {
	jule::Ptr<_1c2cd8770_ScopeLabel> _7813_label = _1c2cdd49a_find_label_scope(_7738_scope, _7722_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7738_scope.get()._field_parent == nullptr) || (_7738_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7738_scope=_7738_scope.get()._field_parent;
			_7813_label=_1c2cdd49a_find_label_scope(_7738_scope, _7722_ident);
		}
	_iter_next_1aad5652a:;
	}
	_iter_end_1aad5652a:;;
	return _7813_label;
}



inline jule::Bool _1c2ca2d66_model_is_goto_scope(jule::Any _9124_model, jule::Ptr<_1c2cd2d1e_Scope>& _9137_sc) {
	{
		auto &_match_expr{ _9124_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
			_case_begin_1aad5841c:;
			{
				jule::Ptr<_1dce32393_FnCallExprModel> _9413_fcem = _9124_model.operator jule::Ptr<_1dce32393_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_except == _9137_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1aad58494:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _9913_d = _9124_model.operator jule::Ptr<_1c2d6d9e2_Data>();;
				return _1c2ca2d66_model_is_goto_scope(jule::Any(_9913_d.get()._field_model),_9137_sc);
			}
		}
		_match_end_1aad5830c:;
	};
	return false;
}



inline jule::Bool _1c2caebdb_stmt_is_goto_scope(jule::Any& _10524_stmt, jule::Ptr<_1c2cd2d1e_Scope>& _10537_sc) {
	{
		auto &_match_expr{ _10524_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd2d1e_Scope>>()) {
			_case_begin_1aad5a5d9:;
			{
				return (_10524_stmt.operator jule::Ptr<_1c2cd2d1e_Scope>() == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3bdd_InfIter>>()) {
			_case_begin_1aad5a650:;
			{
				return (_10524_stmt.operator jule::Ptr<_1c2cd3bdd_InfIter>().get()._field_scope == _10537_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4a46_RangeIter>>()) {
			_case_begin_1aad5a6b6:;
			{
				jule::Ptr<_1c2cd4a46_RangeIter> _11213_it = _10524_stmt.operator jule::Ptr<_1c2cd4a46_RangeIter>();;
				return ((_11213_it.get()._field_scope == _10537_sc) || _1c2ca2d66_model_is_goto_scope(jule::Any(_11213_it.get()._field_expr.get()._field_model),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd4161_WhileIter>>()) {
			_case_begin_1aad5a7a4:;
			{
				jule::Ptr<_1c2cd4161_WhileIter> _11513_it = _10524_stmt.operator jule::Ptr<_1c2cd4161_WhileIter>();;
				return (((_11513_it.get()._field_scope == _10537_sc) || _1c2ca2d66_model_is_goto_scope(jule::Any(_11513_it.get()._field_expr),_10537_sc)) || _1c2ca2d66_model_is_goto_scope(jule::Any(_11513_it.get()._field_next),_10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd6ae2_Match>>()) {
			_case_begin_1aad5a82b:;
			{
				jule::Ptr<_1c2cd6ae2_Match> _12013_m = _10524_stmt.operator jule::Ptr<_1c2cd6ae2_Match>();;
				{
					auto &expr = _12013_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1aad5e401:;
					if (it != expr.end()) {
						jule::Ptr<_1c2cd763c_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_scope == _10537_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1aad603be:;
								if (it != expr.end()) {
									jule::Ptr<_1c2d6d9e2_Data> &_12520_expr = *it;
									{
										if (_1c2ca2d66_model_is_goto_scope(jule::Any(_12520_expr.get()._field_model),_10537_sc)) {
											return true;
										};
									}
									_iter_next_1aad603be:;
									++it;
									goto _iter_begin_1aad603be;
								}
								_iter_end_1aad603be:;
							};
						}
						_iter_next_1aad5e401:;
						++it;
						goto _iter_begin_1aad5e401;
					}
					_iter_end_1aad5e401:;
				};
				return ((_12013_m.get()._field_default != nullptr) && (_12013_m.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2cd3902_Conditional>>()) {
			_case_begin_1aad5a8a3:;
			{
				jule::Ptr<_1c2cd3902_Conditional> _13313_c = _10524_stmt.operator jule::Ptr<_1c2cd3902_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1aad619a8:;
					if (it != expr.end()) {
						jule::Ptr<_1c2cd321a_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_scope == _10537_sc) || _1c2ca2d66_model_is_goto_scope(jule::Any(_13416_elif.get()._field_expr),_10537_sc))) {
								return true;
							};
						}
						_iter_next_1aad619a8:;
						++it;
						goto _iter_begin_1aad619a8;
					}
					_iter_end_1aad619a8:;
				};
				return ((_13313_c.get()._field_default != nullptr) && (_13313_c.get()._field_default.get()._field_scope == _10537_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1aad5a92a:;
			{
				jule::Ptr<_1c2d6d9e2_Data> _14113_d = _10524_stmt.operator jule::Ptr<_1c2d6d9e2_Data>();;
				return _1c2ca2d66_model_is_goto_scope(jule::Any(_14113_d.get()._field_model),_10537_sc);
			}
		}
		else {
			_case_begin_1aad588c3:;
			{
				return false;
			}
		}
		_match_end_1aad5886d:;
	};
}



inline jule::I64 _1c2cb0a99_count_match_type(jule::Ptr<_1c2cd6ae2_Match>& _14822_m, jule::Ptr<_1c2d9e825_TypeKind>& _14834_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1c2d9ec21_to_str(_14834_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14822_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aad649cd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2cd763c_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1aad649cd;
				};
				{
					auto &expr = _15212_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aad6536e:;
					if (it != expr.end()) {
						jule::Ptr<_1c2d6d9e2_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1aad649cd;
							};
							if ((_1509_kind == _1c2d9ec21_to_str(_15716_expr.get()._field_model.operator jule::Ptr<_1c2d9e825_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1aad6536e:;
						++it;
						goto _iter_begin_1aad6536e;
					}
					_iter_end_1aad6536e:;
				};
			}
			_iter_next_1aad649cd:;
			++it;
			goto _iter_begin_1aad649cd;
		}
		_iter_end_1aad649cd:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _1c2cbdac9_get_datas_from_tuple_data(jule::Ptr<_1c2d6d9e2_Data>& _17235_d) {
	if ((_1c2da35c6_tup(_17235_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17235_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1dce340ba_TupleExprModel>>()) {
				_case_begin_1aad695b5:;
				{
					return _17235_d.get()._field_model.operator jule::Ptr<_1dce340ba_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1aad66eb9:;
				{
					jule::Ptr<_1c2da906b_Tuple> _17821_t = _1c2da35c6_tup(_17235_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1c2d6d9e2_Data>> _17921_r = jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>::alloc(0LL,_17821_t.get()._field_types.len());;
					{
						auto &expr = _17821_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1aad684d7:;
						if (it != expr.end()) {
							jule::Ptr<_1c2d9e825_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=_18025_kind, ._field_mutable=true, }));;
							}
							_iter_next_1aad684d7:;
							++it;
							goto _iter_begin_1aad684d7;
						}
						_iter_end_1aad684d7:;
					};
					return _17921_r;
				}
			}
			_match_end_1aad66d43:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c2d6d9e2_Data>>::make({_17235_d});
	};
}



inline jule::Slice<jule::Any> _1c2cc1a22_get_expr_models(jule::Any& _19325_m) {
	{
		auto &_match_expr{ _19325_m };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd70017_TupleExpr>>()) {
			_case_begin_1aad699e4:;
			{
				jule::Ptr<_1dcd70017_TupleExpr> _19617_tup = _19325_m.operator jule::Ptr<_1dcd70017_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_expr.len());;
				{
					auto &expr = _19617_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1aad6b078:;
					if (it != expr.end()) {
						jule::Ptr<_1dcd6e38a_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_kind);;
						}
						_iter_next_1aad6b078:;
						++it;
						goto _iter_begin_1aad6b078;
					}
					_iter_end_1aad6b078:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1aad670b8:;
			{
				return jule::Slice<jule::Any>::make({_19325_m});
			}
		}
		_match_end_1aad6987e:;
	};
}



inline jule::Bool _1c2cc255b_check_mut(jule::Ptr<_1c2d099a0_Sema>& _20719_s, jule::Ptr<_1c2d6d9e2_Data>& _20730_left, jule::Ptr<_1c2d6d9e2_Data> _20747_right, jule::Ptr<_1db7061a7_Token> _20761_op) {
	jule::Bool _20775_ok = jule::Bool();
	{
		
		if ((!(_20730_left.get()._field_mutable))) {
			_case_begin_1aad6c80a:;
			{
				_1c2d0c662_push_err(_20719_s.ptr(), _20761_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else if ((((_20747_right != nullptr) && (!(_20747_right.get()._field_mutable))) && _1c2da0c22_mutable(_20747_right.get()._field_kind.ptr()))) {
			_case_begin_1aad6c91a:;
			{
				if (((_20761_op.get()._field_kind != jule::Str("=", 1)) && (_1c2da2d89_strct(_20747_right.get()._field_kind.ptr()) != nullptr))) {
					_20775_ok = true;
					return _20775_ok;
				};
				_1c2d0c662_push_err(_20719_s.ptr(), _20761_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_20747_right.get()._field_kind.ptr()))}));
				_20775_ok = false;
				return _20775_ok;
			}
		}
		else {
			_case_begin_1aad6c1cd:;
			{
				_20775_ok = true;
				return _20775_ok;
			}
		}
		_match_end_1aad6b793:;
	};
}



inline jule::Bool _1c2cc30d9_check_assign(jule::Ptr<_1c2d099a0_Sema>& _22622_s, jule::Ptr<_1c2d6d9e2_Data>& _22637_left, jule::Ptr<_1c2d6d9e2_Data> _22654_right, jule::Ptr<_1db7061a7_Token> _22668_op) {
	jule::Bool _22682_ok = jule::Bool();
	jule::Ptr<_1dce3b644_FnIns> _2279_f = _1c2da2b25_fnc(_22637_left.get()._field_kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_decl != nullptr)) && _2279_f.get()._field_decl.get()._field_global)) {
		_1c2d0c662_push_err(_22622_s.ptr(), _22668_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22682_ok = false;
		return _22682_ok;
	};
	{
		
		if (_1c2d6e3a5_is_const(_22637_left.ptr())) {
			_case_begin_1aad72821:;
			{
				_1c2d0c662_push_err(_22622_s.ptr(), _22668_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1c2d0c981_push_suggestion(_22622_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_22637_left.get()._field_lvalue))) {
			_case_begin_1aad728ed:;
			{
				_1c2d0c662_push_err(_22622_s.ptr(), _22668_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else if ((!(_1c2cc255b_check_mut(_22622_s,_22637_left,_22654_right,_22668_op)))) {
			_case_begin_1aad72975:;
			{
				_22682_ok = false;
				return _22682_ok;
			}
		}
		else {
			_case_begin_1aad721c2:;
			{
				_22682_ok = true;
				return _22682_ok;
			}
		}
		_match_end_1aad7206d:;
	};
}



inline jule::Bool _1c2cbd755_is_valid_ast_st_for_next_st(jule::Any& _24837_n) {
	{
		auto &_match_expr{ _24837_n };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd78ae2_AssignSt>>()) {
			_case_begin_1aad72a30:;
			{
				return (!(_24837_n.operator jule::Ptr<_1dcd78ae2_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd6e38a_Expr>>()) {
			_case_begin_1aad72a96:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aad79174:;
			{
				return false;
			}
		}
		_match_end_1aad79460:;
	};
}



inline jule::Bool _1c2c6e3a4_is_valid_st_for_next_st(jule::Any& _25929_st) {
	{
		auto &_match_expr{ _25929_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2cd5c78_Postfix>>() || _match_expr.type_is<jule::Ptr<_1c2cd61eb_Assign>>() || _match_expr.type_is<jule::Ptr<_1c2cd65a3_MultiAssign>>()) {
			_case_begin_1aad7a2c9:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1aad7a340:;
			{
				{
					auto &_match_expr{ _25929_st.operator jule::Ptr<_1c2d6d9e2_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1dce32393_FnCallExprModel>>()) {
						_case_begin_1aad7b72b:;
						{
							return true;
						}
					}
					else {
						_case_begin_1aad7b6b5:;
						{
							return false;
						}
					}
					_match_end_1aad7b451:;
				};
			}
		}
		else {
			_case_begin_1aad79be1:;
			{
				return false;
			}
		}
		_match_end_1aad79b03:;
	};
}



inline jule::Bool _1c2caba95_stmt_is_def(jule::Any& _27717_st) {
	{
		auto &_match_expr{ _27717_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1aad7c3b9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aad7b352:;
			{
				return false;
			}
		}
		_match_end_1aad7b2ec:;
	};
}



inline jule::Ptr<_1c2d266ae_Var> _1c2cee3e0_find_var_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1aaedc55c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c2d266ae_Var> _4817_v = _1c2d69966_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1aaedc55c:;
			++it;
			goto _iter_begin_1aaedc55c;
		}
		_iter_end_1aaedc55c:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2cee841_find_type_alias_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1aaeddb13:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c2d9db32_TypeAlias> _6017_ta = _1c2d69d1d_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1aaeddb13:;
			++it;
			goto _iter_begin_1aaeddb13;
		}
		_iter_end_1aaeddb13:;
	};
	return nullptr;
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2ceec3c_find_struct_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1aaee01a8:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1dcd5a596_Struct> _7217_s = _1c2d6a1c5_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1aaee01a8:;
			++it;
			goto _iter_begin_1aaee01a8;
		}
		_iter_end_1aaee01a8:;
	};
	return nullptr;
}



inline jule::Ptr<_1dce38993_Fn> _1c2d0019e_find_fn_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1aaee174d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1dce38993_Fn> _8417_f = _1c2d6a57c_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1aaee174d:;
			++it;
			goto _iter_begin_1aaee174d;
		}
		_iter_end_1aaee174d:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2d004ac_find_trait_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1aaee1d47:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1c2c3d54e_Trait> _9617_t = _1c2d6a88a_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1aaee1d47:;
			++it;
			goto _iter_begin_1aaee1d47;
		}
		_iter_end_1aaee1d47:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c4070a_Enum> _1c2d007ed_find_enum_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1aaee3200:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1c2c4070a_Enum> _10817_e = _1c2d6ab98_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1aaee3200:;
			++it;
			goto _iter_begin_1aaee3200;
		}
		_iter_end_1aaee3200:;
	};
	return nullptr;
}



inline jule::Ptr<_1c2c41d05_TypeEnum> _1c2d00b61_find_type_enum_in_package(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _11835_files, jule::Str _11858_ident) {
	{
		auto &expr = _11835_files;
		auto it = expr.begin();
		_iter_begin_1aaee45b9:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1c2c41d05_TypeEnum> _12017_e = _1c2d6aea6_find_type_enum(_11917_f.ptr(), _11858_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1aaee45b9:;
			++it;
			goto _iter_begin_1aaee45b9;
		}
		_iter_end_1aaee45b9:;
	};
	return nullptr;
}



inline jule::Bool _1c2d06d87_is_std_package(jule::Str _35019_f, jule::Str _35027_p) {
	return _207a6eee9_has_prefix(_35019_f,_207b167cc_join(jule::Slice<jule::Str>::make({_207ba3825_PATH_STDLIB,_35027_p})));
}



inline jule::Bool _1c2d07ae1_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d266ae_Var>>()) {
			_case_begin_1ab0067c9:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1ab006840:;
			{
				jule::Ptr<_1dce3362a_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>();;
				return _1c2d07ae1_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3320c_TraitSubIdentExprModel>>()) {
			_case_begin_1ab0068a6:;
			{
				jule::Ptr<_1dce3320c_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1dce3320c_TraitSubIdentExprModel>();;
				return _1c2d07ae1_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31903_UnaryExprModel>>()) {
			_case_begin_1ab006a60:;
			{
				jule::Ptr<_1dce31903_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1dce31903_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1c2da1e10_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1c2da1b9b_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1c2d07ae1_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1ab006114:;
			{
				return false;
			}
		}
		_match_end_1ab00609d:;
	};
}



inline _207b80eb7_Log _1c2d08086_compiler_err(jule::Ptr<_1db7061a7_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_207b80eb7_Log _4213_log = _207b80eb7_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_207b81407_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_1db70c71e_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1c2d083c7_imp_is_lookupable(jule::Ptr<_1c2d01854_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1c2d0422a_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1c2d086c4_append_ret_vars(jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _6825_dest, jule::Ptr<_1dce3b644_FnIns>& _6844_f) {
	if ((_1dce38e05_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c2d9e825_TypeKind>> _7313_types = _1dce3c766_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ab0101ea:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _7417_ident = *it;
			{
				if ((_1db70894b_is_ignore_ident(_7417_ident.get()._field_kind) || _1db708be3_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1ab0101ea;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1c2d266ae_Var>(_1c2d266ae_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_data=jule::new_ptr<_1c2d6d9e2_Data>()}), }));;
			}
			_iter_next_1ab0101ea:;
			++it;
			_7410_i++;
			goto _iter_begin_1ab0101ea;
		}
		_iter_end_1ab0101ea:;
	};
}



inline void _1c2d0897c_append_param_vars(jule::Slice<jule::Ptr<_1c2d266ae_Var>>& _9427_dest, jule::Ptr<_1dce3b644_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab01187d:;
		if (it != expr.end()) {
			jule::Ptr<_1dce3a775_ParamIns> _9917_p = *it;
			{
				if ((_1db70894b_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _1db708be3_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1ab01187d;
				};
				jule::Ptr<_1c2d266ae_Var> _10417_v = jule::new_ptr<_1c2d266ae_Var>(_1c2d266ae_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(), ._field_value=jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_data=jule::new_ptr<_1c2d6d9e2_Data>()}), });;
				{
					
					if (_1dce37783_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1ab015651:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1dce379e7_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1dce379e7_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da7a81_Sptr>(_1c2da7a81_Sptr{._field_elem=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 7);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1ab015343:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da84dd_Slc>(_1c2da84dd_Slc{._field_elem=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 8)});
						}
					}
					else {
						_case_begin_1ab013eac:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1ab0151de:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1ab01187d:;
			++it;
			goto _iter_begin_1ab01187d;
		}
		_iter_end_1ab01187d:;
	};
}



inline void _1c2d08c57_append_generic_type_aliases(jule::Slice<jule::Ptr<_1c2d9db32_TypeAlias>>& _15437_dest, jule::Ptr<_1dce3b644_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab01a821:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1c2d9d0e8_InsGeneric> _16417_g = *it;
			{
				jule::Ptr<_1dcd7744d_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1c2d9db32_TypeAlias>(_1c2d9db32_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_16417_g.get()._field_kind}), }));;
			}
			_iter_next_1ab01a821:;
			++it;
			_16410_i++;
			goto _iter_begin_1ab01a821;
		}
		_iter_end_1ab01a821:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1dcd868e1_StructIns> _17717_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17717_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab01c191:;
			if (it != expr.end()) {
				jule::I64 _17814_i = it - expr.begin();
				jule::Ptr<_1c2d9d0e8_InsGeneric> _17821_g = *it;
				{
					jule::Ptr<_1dcd7744d_GenericDecl> _17921_decl = _17717_owner.get()._field_decl.get()._field_generics[_17814_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1c2d9db32_TypeAlias>(_1c2d9db32_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_17921_decl.get()._field_token, ._field_ident=_17921_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=_17821_g.get()._field_kind}), }));;
				}
				_iter_next_1ab01c191:;
				++it;
				_17814_i++;
				goto _iter_begin_1ab01c191;
			}
			_iter_end_1ab01c191:;
		};
	};
}



inline jule::Ptr<_1c2d68c84_SymbolTable> _1c2d090a9_find_file(jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>& _19219_files, jule::Ptr<_1db70b542_File>& _19243_handler) {
	{
		auto &expr = _19219_files;
		auto it = expr.begin();
		_iter_begin_1ab01b17e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _19317_fl = *it;
			{
				if ((_19317_fl.get()._field_file == _19243_handler)) {
					return _19317_fl;
				};
			}
			_iter_next_1ab01b17e:;
			++it;
			goto _iter_begin_1ab01b17e;
		}
		_iter_end_1ab01b17e:;
	};
	return nullptr;
}



inline void _1c2d0951b_push_suggestion(_207b80eb7_Log* _20131_log, jule::Str _20142_fmt, jule::Slice<jule::Any> _20155_args) {
	_20131_log->_field_suggestion=_207b81407_logf(_20142_fmt,jule::Any(_20155_args));
}



inline jule::Bool _1c2d47cb8_trait_has_reference_receiver(jule::Ptr<_1c2c3d54e_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab211e46:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1ab211e46;
				};
				jule::Ptr<_1dce37156_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1dce379e7_is_ref(_3313_p.ptr()) && _1dce37783_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1ab211e46:;
			++it;
			goto _iter_begin_1ab211e46;
		}
		_iter_end_1ab211e46:;
	};
	return false;
}



inline jule::Bool _1c2d3ece3_float_assignable(jule::Str _4121_kind, jule::Ptr<_1c2d6d9e2_Data>& _4133_d) {
	jule::Str _429_value = _1c2c26108_fmt_float(static_cast<jule::F64>(_1dce2a37a_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1c2cc6a9e_check_bit_float(_429_value,static_cast<jule::I64>(_1c2cc5691_bitsize_of(_4121_kind)));
}



inline jule::Bool _1c2d3ee25_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1c2d6d9e2_Data>& _4631_d) {
	jule::F64 _479_min = _1c2ccb91c_min(_4619_kind);;
	jule::F64 _489_max = _1c2ccbc08_max(_4619_kind);;
	{
		
		if (_1dce2bed6_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ab218b62:;
			{
				jule::F64 _5113_x = _1dce29b3d_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1dd9c3d8a_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1dce2b799_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ab218bc8:;
			{
				jule::F64 _5813_x = _1dce2a37a_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1dce2b535_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ab218c3e:;
			{
				jule::F64 _6313_x = _1dce2a37a_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1ab218a1e:;
	};
	return false;
}



inline jule::Bool _1c2d56513_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1c2d6d9e2_Data>& _6933_d) {
	jule::F64 _709_max = _1c2ccbc08_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1c2d3e8c5_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1dce2918c_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1dce2bed6_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ab21d32b:;
			{
				jule::F64 _7713_x = _1dce29b3d_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1dd9c3d8a_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1dce2b799_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ab21ddba:;
			{
				jule::F64 _8713_x = _1dce2a37a_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1dce2b535_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ab21de42:;
			{
				jule::F64 _9213_x = _1dce2a37a_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1ab21d282:;
	};
	return false;
}



inline jule::Bool _1c2d56645_int_assignable(jule::Str _9819_kind, jule::Ptr<_1c2d6d9e2_Data>& _9831_d) {
	{
		
		if (_1c2cd1a54_is_sig_int(_9819_kind)) {
			_case_begin_1ab2238e7:;
			{
				return _1c2d3ee25_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1c2cd1d40_is_unsig_int(_9819_kind)) {
			_case_begin_1ab223265:;
			{
				return _1c2d56513_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1ab21e5a2:;
			{
				return false;
			}
		}
		_match_end_1ab21e4c5:;
	};
}



inline jule::Ptr<_1dcd36671_Directive> _1c2d99006_find_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _424824_directives, jule::Str _424855_d) {
	{
		auto &expr = _424824_directives;
		auto it = expr.begin();
		_iter_begin_1ab33badc:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _424917_dr = *it;
			{
				if ((_424917_dr.get()._field_tag.get()._field_kind == _424855_d)) {
					return _424917_dr;
				};
			}
			_iter_next_1ab33badc:;
			++it;
			goto _iter_begin_1ab33badc;
		}
		_iter_end_1ab33badc:;
	};
	return nullptr;
}



inline jule::Any _1c2d9938b_find_builtins_import(jule::Str _425725_ident, jule::Ptr<_1c2d01854_ImportInfo> _425737_imp) {
	return jule::Any(_1c2e29042_find_package_builtin_def(_425737_imp.get()._field_link_path,_425725_ident));
}



inline void _1c2d9959a_fit_bitsize(jule::Ptr<_1c2d6d9e2_Data>& _426421_d) {
	jule::Ptr<_1c2da42ec_Prim> _426513_prim = _1c2da1937_prim(_426421_d.get()._field_kind.ptr());;
	jule::I64 _42669_z = _1c2cc5691_bitsize_of(_1c2da4660_to_str(_426513_prim.ptr()));;
	if ((_42669_z == 64LL)) {
		return;;
	};
	jule::I64 _427113_k = 0LL;;
	{
		
		if (_1dce2b535_is_i64(_426421_d.get()._field_constant.ptr())) {
			_case_begin_1ab33e99c:;
			{
				_427113_k=static_cast<jule::I64>(_1c2cc70dd_bitsize_of_int(static_cast<jule::I64>(_1dce2918c_read_i64(_426421_d.get()._field_constant.ptr()))));
				if ((_427113_k > _42669_z)) {
					_426513_prim.get()._field_kind=_1c2cc59b0_int_from_bits(_427113_k);
				};
			}
		}
		else if (_1dce2b799_is_u64(_426421_d.get()._field_constant.ptr())) {
			_case_begin_1ab33ea24:;
			{
				_427113_k=static_cast<jule::I64>(_1c2cc7385_bitsize_of_uint(static_cast<jule::U64>(_1dce29401_read_u64(_426421_d.get()._field_constant.ptr()))));
				if ((_427113_k > _42669_z)) {
					_426513_prim.get()._field_kind=_1c2cc5c57_uint_from_bits(_427113_k);
				};
			}
		}
		else if (_1dce2bed6_is_f64(_426421_d.get()._field_constant.ptr())) {
			_case_begin_1ab33ea9b:;
			{
				_427113_k=static_cast<jule::I64>(_1c2cc6d46_bitsize_of_float(static_cast<jule::F64>(_1dce29b3d_read_f64(_426421_d.get()._field_constant.ptr()))));
				if ((_427113_k > _42669_z)) {
					_426513_prim.get()._field_kind=_1c2cc5eee_float_from_bits(_427113_k);
				};
			}
		}
		_match_end_1ab33e8d1:;
	};
}



inline void _1c2d99897_make_struct_lit_alloc(jule::Ptr<_1c2d6d9e2_Data>& _429131_d, jule::Ptr<_1dce31ccc_StructLitExprModel>& _429146_lit) {
	_429131_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da7a81_Sptr>(_1c2da7a81_Sptr{._field_elem=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_429146_lit.get()._field_strct, 0)})}), 7)});
	_429131_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce31eb9_AllocStructLitExprModel>(_1dce31eb9_AllocStructLitExprModel{._field_lit=_429146_lit}));
}



inline jule::Ptr<_1c2d266ae_Var> _1c2d99bd8_build_error_var(jule::Ptr<_1c2cd2d1e_Scope>& _430225_s, jule::Ptr<_1dcd73658_FnCallExpr>& _430241_fc) {
	return jule::new_ptr<_1c2d266ae_Var>(_1c2d266ae_Var{._field_scope=_430225_s, ._field_token=_430241_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("any", 3)), 6)})}), ._field_value=jule::new_ptr<_1c2d6ea6a_Value>(_1c2d6ea6a_Value{._field_data=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{})}), });
}



inline jule::Any _1c2d9a029_find_builtins_sema(jule::Str _432123_ident, jule::Ptr<_1c2d099a0_Sema> _432139_s) {
	{
		auto &expr = _432139_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ab3452ee:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _432217_imp = *it;
			{
				if ((_432217_imp.get()._field_import_all || _1c2d0422a_exist_ident(_432217_imp.ptr(), _432123_ident))) {
					jule::Any _432421_def = _1c2d9938b_find_builtins_import(_432123_ident,_432217_imp);;
					if ((_432421_def != nullptr)) {
						return jule::Any(_432421_def);
					};
				};
			}
			_iter_next_1ab3452ee:;
			++it;
			goto _iter_begin_1ab3452ee;
		}
		_iter_end_1ab3452ee:;
	};
	jule::Str _433213_ppath = _1db70be38_dir(_432139_s.get()._field_file.get()._field_file.ptr());;
	if (_207a6eee9_has_prefix(_433213_ppath,_207ba3825_PATH_STDLIB)) {
		(_433213_ppath).mut_slice(_207ba3825_PATH_STDLIB.len());;
		_433213_ppath=(jule::Str("std", 3) + _207b14d4c_replace(_433213_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1c2e29042_find_package_builtin_def(_433213_ppath,_432123_ident));
	};
	return nullptr;
}



inline jule::Bool _1c2d9a2c1_is_ok_for_shifting(jule::Ptr<_1c2d6d9e2_Data>& _434628_d) {
	if (_1c2d6e3a5_is_const(_434628_d.ptr())) {
		{
			
			if (_1dce2b535_is_i64(_434628_d.get()._field_constant.ptr())) {
				_case_begin_1ab34915a:;
				{
					return (_1dce2918c_read_i64(_434628_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1dce2b799_is_u64(_434628_d.get()._field_constant.ptr())) {
				_case_begin_1ab34891d:;
				{
					return true;
				}
			}
			else if (_1dce2bed6_is_f64(_434628_d.get()._field_constant.ptr())) {
				_case_begin_1ab348984:;
				{
					return (_1dce29b3d_read_f64(_434628_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1ab3488a7:;
				{
					return false;
				}
			}
			_match_end_1ab3487ca:;
		};
	};
	jule::Ptr<_1c2da42ec_Prim> _43599_prim = _1c2da1937_prim(_434628_d.get()._field_kind.ptr());;
	return ((_43599_prim != nullptr) && _1c2cd20d7_is_int(_1c2da4660_to_str(_43599_prim.ptr())));
}



inline jule::Bool _1c2d9a678_is_instanced_struct(jule::Ptr<_1dcd868e1_StructIns> _436324_s) {
	return (_436324_s.get()._field_decl.get()._field_generics.len() == _436324_s.get()._field_generics.len());
}



inline jule::Bool _1c2d9a953_is_ptr_arithmetic_compatible_int(jule::Ptr<_1c2d6d9e2_Data>& _436742_d) {
	if (_1c2d6e3a5_is_const(_436742_d.ptr())) {
		return _1c2d56645_int_assignable(jule::Str("int", 3),_436742_d);
	};
	_1c2d57877_TypeCompatibilityChecker _437113_tcc = _1c2d57877_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)}), ._field_src=_436742_d.get()._field_kind, };;
	return _1c2d58e61_check(&_437113_tcc);
}



inline void _1c2d9ab84_apply_cast_kind_model(jule::Ptr<_1c2d6d9e2_Data>& _438031_d, jule::Ptr<_1c2d9e825_TypeKind>& _438046_t) {
	_438031_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce321a6_CastingExprModel>(_1dce321a6_CastingExprModel{._field_expr=_438031_d.get()._field_model, ._field_kind=_438046_t, ._field_expr_kind=_438031_d.get()._field_kind}));
}



inline void _1c2d9ae3c_apply_cast_kind(jule::Ptr<_1c2d6d9e2_Data>& _438825_d, jule::Ptr<_1c2d9e825_TypeKind>& _438840_t) {
	_1c2d9ab84_apply_cast_kind_model(_438825_d,_438840_t);
	_438825_d.get()._field_kind=_438840_t;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2d9b13a_build_void_data(void) {
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("void", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1c2d9b404_check_data_for_integer_indexing(jule::Ptr<_1c2d6d9e2_Data>& _440441_d) {
	jule::Str _440453_err_fmt = jule::Str();
	if ((_440441_d == nullptr)) {
		_440453_err_fmt = jule::Str();
		return _440453_err_fmt;
	};
	{
		
		if ((_1c2da1937_prim(_440441_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1ab34eeda:;
			{
				_440453_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _440453_err_fmt;
			}
		}
		else if ((!(_1c2cd20d7_is_int(_1c2da4660_to_str(_1c2da1937_prim(_440441_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1ab350051:;
			{
				_440453_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _440453_err_fmt;
			}
		}
		else if (_1c2d6e3a5_is_const(_440441_d.ptr())) {
			_case_begin_1ab3500b7:;
			{
				if ((_1dce2a37a_as_f64(_440441_d.get()._field_constant.ptr()) < 0LL)) {
					_440453_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _440453_err_fmt;
				};
			}
		}
		else if ((_1c2da1937_prim(_440441_d.get()._field_kind.ptr()) == nullptr) || _1c2d6e3a5_is_const(_440441_d.ptr()) || (_1c2cc53e9_real_kind_of(_1c2da4660_to_str(_1c2da1937_prim(_440441_d.get()._field_kind.ptr()).ptr())) != _1c2cc53e9_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1ab35012d:;
			{
				jule::Ptr<_1c2d9e825_TypeKind> _442117_t = jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)});;
				_1c2d9ae3c_apply_cast_kind(_440441_d,_442117_t);
			}
		}
		_match_end_1ab350370:;
	};
	_440453_err_fmt = jule::Str();
	return _440453_err_fmt;
}



inline void _1c2d9b6e0_apply_cast_model_by_enum(jule::Ptr<_1c2d6d9e2_Data>& _443034_d, jule::Ptr<_1c2c4070a_Enum> _443048_e) {
	if ((_443048_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c2da42ec_Prim> _44349_p = _1c2da1937_prim(_443048_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1c2da7531_is_str(_44349_p.ptr())) {
		return;;
	};
	_1c2d9ab84_apply_cast_kind_model(_443034_d,_443048_e.get()._field_kind.get()._field_kind);
}



inline void _1c2d9b9a9_cast_const_by_type(jule::Str& _444124_t, jule::Ptr<_1c2d6d9e2_Data>& _444137_d) {
	{
		
		if (_1c2cd1a54_is_sig_int(_444124_t)) {
			_case_begin_1ab355d9d:;
			{
				{
					auto _match_expr{ _1c2cc5691_bitsize_of(_1c2cc53e9_real_kind_of(_444124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ab356aa2:;
						{
							_1dce2a600_set_i64(_444137_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1dce29da2_as_i64(_444137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ab356b18:;
						{
							_1dce2a600_set_i64(_444137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1dce29da2_as_i64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ab356b7e:;
						{
							_1dce2a600_set_i64(_444137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1dce29da2_as_i64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ab356be5:;
						{
							_1dce2a600_set_i64(_444137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1dce29da2_as_i64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ab356a4c:;
				};
			}
		}
		else if (_1c2cd1d40_is_unsig_int(_444124_t)) {
			_case_begin_1ab355e25:;
			{
				{
					auto _match_expr{ _1c2cc5691_bitsize_of(_1c2cc53e9_real_kind_of(_444124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ab35a1c1:;
						{
							_1dce2a875_set_u64(_444137_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1dce2a116_as_u64(_444137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ab35a237:;
						{
							_1dce2a875_set_u64(_444137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1dce2a116_as_u64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ab35a29d:;
						{
							_1dce2a875_set_u64(_444137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1dce2a116_as_u64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ab35a314:;
						{
							_1dce2a875_set_u64(_444137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1dce2a116_as_u64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ab359742:;
				};
			}
		}
		else if (_1c2cd2406_is_float(_444124_t)) {
			_case_begin_1ab355e9c:;
			{
				{
					auto _match_expr{ _1c2cc5691_bitsize_of(_1c2cc53e9_real_kind_of(_444124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ab35d5d1:;
						{
							_1dce2b0e5_set_f64(_444137_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1dce2a37a_as_f64(_444137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ab35d834:;
						{
							_1dce2b0e5_set_f64(_444137_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1dce2a37a_as_f64(_444137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ab35cd72:;
				};
			}
		}
		_match_end_1ab355c6b:;
	};
}



inline void _1c2d9beb5_update_model_to_generic_ins(jule::Any& _447537_m, jule::Ptr<_1dce3b644_FnIns>& _447556_f) {
	{
		auto &_match_expr{ _447537_m };
		
		if (_match_expr.type_is<jule::Ptr<_1dce3b644_FnIns>>()) {
			_case_begin_1ab35e89b:;
			{
				_447537_m=static_cast<jule::Any>(_447556_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce3362a_StructSubIdentExprModel>>()) {
			_case_begin_1ab35dc74:;
			{
				_447537_m.operator jule::Ptr<_1dce3362a_StructSubIdentExprModel>().get()._field_method=_447556_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce33817_StructStaticIdentExprModel>>()) {
			_case_begin_1ab35dcda:;
			{
				_447537_m.operator jule::Ptr<_1dce33817_StructStaticIdentExprModel>().get()._field_method=_447556_f;
			}
		}
		_match_end_1ab357c07:;
	};
}



inline jule::Bool _1c2d9c229_push_sub_ident_from_expr(jule::Any _448633_expr, jule::Ptr<_1dcd6aa7e_SubIdentTypeDecl>& _448654_t) {
	{
		auto &_match_expr{ _448633_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dcd71403_IdentExpr>>()) {
			_case_begin_1ab361a13:;
			{
				jule::Ptr<_1dcd71403_IdentExpr> _448917_e = _448633_expr.operator jule::Ptr<_1dcd71403_IdentExpr>();;
				_448654_t.get()._field_idents = jule::alloc_for_append(_448654_t.get()._field_idents,1);_448654_t.get()._field_idents.__push(jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_448917_e.get()._field_token, ._field_ident=_448917_e.get()._field_ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dcd72b96_SubIdentExpr>>()) {
			_case_begin_1ab361a79:;
			{
				jule::Ptr<_1dcd72b96_SubIdentExpr> _449517_e = _448633_expr.operator jule::Ptr<_1dcd72b96_SubIdentExpr>();;
				if ((!(_1c2d9c229_push_sub_ident_from_expr(_449517_e.get()._field_expr.get()._field_kind,_448654_t)))) {
					return false;
				};
				_448654_t.get()._field_idents = jule::alloc_for_append(_448654_t.get()._field_idents,1);_448654_t.get()._field_idents.__push(jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_449517_e.get()._field_ident, ._field_ident=_449517_e.get()._field_ident.get()._field_kind, }));;
			}
		}
		else {
			_case_begin_1ab361947:;
			{
				return false;
			}
		}
		_match_end_1ab3618e2:;
	};
	return true;
}



inline jule::Bool _1c2db6122_kind_uses_generics(jule::Any& _157424_k, jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>& _157442_generics) {
	{
		auto &expr = _157442_generics;
		auto it = expr.begin();
		_iter_begin_1ab677b09:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd7744d_GenericDecl> &_157512_g = *it;
			{
				if (static__1c2db5c26_exist(_157512_g.get()._field_ident,_157424_k)) {
					return true;
				};
			}
			_iter_next_1ab677b09:;
			++it;
			goto _iter_begin_1ab677b09;
		}
		_iter_end_1ab677b09:;
	};
	return false;
}



inline jule::Bool _1c2db64a7_has_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _158423_directives, jule::Str _158454_tag) {
	{
		auto &expr = _158423_directives;
		auto it = expr.begin();
		_iter_begin_1ab678c4d:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _158517_dr = *it;
			{
				if ((_158517_dr.get()._field_tag.get()._field_kind == _158454_tag)) {
					return true;
				};
			}
			_iter_next_1ab678c4d:;
			++it;
			goto _iter_begin_1ab678c4d;
		}
		_iter_end_1ab678c4d:;
	};
	return false;
}



inline jule::Bool _1c2db674e_can_get_ptr(jule::Ptr<_1c2d6d9e2_Data>& _159321_d) {
	if (((!(_159321_d.get()._field_lvalue)) || _1c2d6e3a5_is_const(_159321_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1c2da2b25_fnc(_159321_d.get()._field_kind.ptr()) != nullptr) || (_1c2da2174_enm(_159321_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1ab67a8a9:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ab67a16c:;
			{
				return true;
			}
		}
		_match_end_1ab67a05c:;
	};
}



inline jule::Bool _1c2db6a6d_is_valid_for_sptr_type(jule::Ptr<_1c2d9e825_TypeKind>& _160732_t) {
	jule::Ptr<_1dcd868e1_StructIns> _160813_s = _1c2da2d89_strct(_160732_t.ptr());;
	if ((((_160813_s != nullptr) && (_160813_s.get()._field_decl != nullptr)) && _160813_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1c2db6d15_is_valid_for_ref(jule::Ptr<_1c2d9e825_TypeKind>& _161626_t) {
	return (_1c2da2b25_fnc(_161626_t.ptr()) == nullptr);
}



inline jule::Bool _1c2db70ce_is_builtin_str_convertable(jule::Ptr<_1c2d9e825_TypeKind>& _161936_t) {
	return (((!(_1c2da09ad_void(_161936_t.ptr()))) && (_1c2da2b25_fnc(_161936_t.ptr()) == nullptr)) && (_1c2da35c6_tup(_161936_t.ptr()) == nullptr));
}



inline jule::Str _1c2db7376_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _162331_tokens) {
	jule::Str _162413_s = _162331_tokens[0LL].get()._field_kind;;
	{
		auto expr = _162331_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ab67e616:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_162512_token = *it;
			{
				_162413_s+=jule::Str("::", 2);
				_162413_s+=_162512_token.get()._field_kind;
			}
			_iter_next_1ab67e616:;
			++it;
			goto _iter_begin_1ab67e616;
		}
		_iter_end_1ab67e616:;
	};
	return _162413_s;
}



inline jule::Ptr<_1c2da42ec_Prim> _1c2db773e_build_prim_type(jule::Str _163220_kind) {
	return jule::new_ptr<_1c2da42ec_Prim>(_1c2da42ec_Prim{._field_kind=_163220_kind});
}



inline jule::Ptr<_1dcd5a596_Struct> _1c2db79d6_get_struct_from_kind(jule::Ptr<_1c2d9e825_TypeKind> _163829_k) {
	{
		
		if ((_163829_k == nullptr)) {
			_case_begin_1ab680903:;
			{
				return nullptr;
			}
		}
		else if ((_1c2da2d89_strct(_163829_k.ptr()) != nullptr)) {
			_case_begin_1ab680969:;
			{
				return _1c2da2d89_strct(_163829_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1c2da1b9b_sptr(_163829_k.ptr()) != nullptr)) {
			_case_begin_1ab6809d0:;
			{
				return _1c2db79d6_get_struct_from_kind(_1c2da1b9b_sptr(_163829_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c2da28b1_slc(_163829_k.ptr()) != nullptr)) {
			_case_begin_1ab680a46:;
			{
				return _1c2db79d6_get_struct_from_kind(_1c2da28b1_slc(_163829_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c2da264c_arr(_163829_k.ptr()) != nullptr)) {
			_case_begin_1ab680cee:;
			{
				return _1c2db79d6_get_struct_from_kind(_1c2da264c_arr(_163829_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1c2da1e10_ptr(_163829_k.ptr()) != nullptr)) {
			_case_begin_1ab680d65:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1ab68088c:;
			{
				return nullptr;
			}
		}
		_match_end_1ab61dcd1:;
	};
}



inline jule::Bool _1c2db7c7d_is_prim(jule::Str _166112_kind) {
	return ((((((((((((((((_166112_kind == jule::Str("i8", 2)) || (_166112_kind == jule::Str("i16", 3))) || (_166112_kind == jule::Str("i32", 3))) || (_166112_kind == jule::Str("i64", 3))) || (_166112_kind == jule::Str("u8", 2))) || (_166112_kind == jule::Str("u16", 3))) || (_166112_kind == jule::Str("u32", 3))) || (_166112_kind == jule::Str("u64", 3))) || (_166112_kind == jule::Str("f32", 3))) || (_166112_kind == jule::Str("f64", 3))) || (_166112_kind == jule::Str("int", 3))) || (_166112_kind == jule::Str("uint", 4))) || (_166112_kind == jule::Str("uintptr", 7))) || (_166112_kind == jule::Str("bool", 4))) || (_166112_kind == jule::Str("str", 3))) || (_166112_kind == jule::Str("any", 3)));
}



inline void _1c2db8036_apply_implicit_cast(jule::Ptr<_1c2d9e825_TypeKind>& _168029_dest, jule::Ptr<_1c2d6d9e2_Data>& _168051_d) {
	if (_1c2da0749_is_nil(_168051_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c2da42ec_Prim> _16859_dest_prim = _1c2da1937_prim(_168029_dest.ptr());;
	jule::Ptr<_1c2da42ec_Prim> _16869_prim = _1c2da1937_prim(_168051_d.get()._field_kind.ptr());;
	if ((_16859_dest_prim != nullptr)) {
		if (_1c2da7795_is_any(_16859_dest_prim.ptr())) {
			_1c2d9ae3c_apply_cast_kind(_168051_d,_168029_dest);
			return;;
		};
		if (((((((!(_1c2da04d5_cpp_linked(_168051_d.get()._field_kind.ptr()))) && (!(_168051_d.get()._field_kind.get()._field_variadic))) && (!(_168051_d.get()._field_lvalue))) && (!(_1c2d6e3a5_is_const(_168051_d.ptr())))) && (_16869_prim != nullptr)) && _1c2cd269d_is_num(_16869_prim.get()._field_kind))) {
			_1c2d9ae3c_apply_cast_kind(_168051_d,_168029_dest);
		};
		return;;
	};
	if (((_1c2da30ed_trt(_168029_dest.ptr()) != nullptr) && (_1c2da30ed_trt(_168051_d.get()._field_kind.ptr()) == nullptr))) {
		_1c2d9ab84_apply_cast_kind_model(_168051_d,_168029_dest);
		return;;
	};
	if (((_1c2da23d8_tenm(_168029_dest.ptr()) != nullptr) && (_1c2da23d8_tenm(_168051_d.get()._field_kind.ptr()) == nullptr))) {
		_1c2d9ab84_apply_cast_kind_model(_168051_d,_168029_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1c2d68c84_SymbolTable>,jule::Slice<_207b80eb7_Log>> _1c2dbae29_build_symbols(jule::Ptr<_1dcd355c6_Ast>& _1523_ast, jule::Trait<_1c2cee05a_Importer>& _1539_importer, jule::Ptr<_1dce44dab_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1dce44dab_SymbolBuilder> _1613_sb = jule::new_ptr<_1dce44dab_SymbolBuilder>(_1dce44dab_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1dce49e05_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1c2d047ad_Package>,jule::Slice<_207b80eb7_Log>> _1c2dbb358___analyze_package(jule::Slice<jule::Ptr<_1dcd355c6_Ast>>& _2927_files, jule::Trait<_1c2cee05a_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1c2d68c84_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1ab786b3b:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd355c6_Ast> _3217_f = *it;
			{
				jule::Ptr<_1c2d68c84_SymbolTable> _3318_table;;
				jule::Slice<_207b80eb7_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1c2dbae29_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1ab786b3b:;
			++it;
			goto _iter_begin_1ab786b3b;
		}
		_iter_end_1ab786b3b:;
	};
	jule::Ptr<_1c2d099a0_Sema> _4013_sema = jule::new_ptr<_1c2d099a0_Sema>(_1c2d099a0_Sema{._field_flags=_2968_flags});;
	_1c2d236cd_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1c2d047ad_Package> _4813_pkg = jule::new_ptr<_1c2d047ad_Package>(_1c2d047ad_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1c2d047ad_Package>,jule::Slice<_207b80eb7_Log>> _1c2dbb743_analyze_package(jule::Slice<jule::Ptr<_1dcd355c6_Ast>> _7228_files, jule::Trait<_1c2cee05a_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1c2d047ad_Package> _7714_package;;
	jule::Slice<_207b80eb7_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1c2dbb358___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1dce3b644_FnIns> _1c2dc57d5_find_builtin_fn(jule::Str _2220_ident) {
	{
		auto &_match_expr{ _2220_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ab78e759:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _2520_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e4e331_builtin_caller_out), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ab78e7c0:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _2820_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2dc660a_builtin_caller_outln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ab78e9ce:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _3120_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e17d33_builtin_caller_new), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ab78ea45:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _3420_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e31d4c_builtin_caller_panic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ab78eaab:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _3720_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e2a010_builtin_caller_make), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ab78eb22:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _4020_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e4b0db_builtin_caller_append), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ab78eb88:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _4320_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e2899d_builtin_caller_copy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ab78ebee:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _4620_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2de0547_builtin_caller_clone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ab78ecba:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _4920_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e0b71c_builtin_caller_assert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_1ab78e54a:;
			{
				return nullptr;
			}
		}
		_match_end_1ab78dea6:;
	};
}



inline jule::Ptr<_1c2d9db32_TypeAlias> _1c2dc76d8_find_builtin_type_alias(jule::Str _5628_ident) {
	{
		auto &_match_expr{ _5628_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ab79552e:;
			{
				static jule::Ptr<_1c2d9db32_TypeAlias> _5920_t = jule::new_ptr<_1c2d9db32_TypeAlias>(_1c2d9db32_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ab795595:;
			{
				static jule::Ptr<_1c2d9db32_TypeAlias> _6920_t = jule::new_ptr<_1c2d9db32_TypeAlias>(_1c2d9db32_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1c2da397d_TypeSymbol>(_1c2da397d_TypeSymbol{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_1ab794bc1:;
			{
				return nullptr;
			}
		}
		_match_end_1ab790161:;
	};
}



inline jule::Ptr<_1c2c3d54e_Trait> _1c2dc82bb_find_builtin_trait(jule::Str _8323_ident) {
	return nullptr;
}



inline jule::Any _1c2dc8cd3_find_builtin_def(jule::Str _8721_ident) {
	jule::Ptr<_1dce3b644_FnIns> _8813_f = _1c2dc57d5_find_builtin_fn(_8721_ident);;
	if ((_8813_f != nullptr)) {
		return jule::Any(_8813_f);
	};
	jule::Ptr<_1c2d9db32_TypeAlias> _9313_ta = _1c2dc76d8_find_builtin_type_alias(_8721_ident);;
	if ((_9313_ta != nullptr)) {
		return jule::Any(_9313_ta);
	};
	jule::Ptr<_1c2c3d54e_Trait> _9813_t = _1c2dc82bb_find_builtin_trait(_8721_ident);;
	if ((_9813_t != nullptr)) {
		return jule::Any(_9813_t);
	};
	return nullptr;
}



inline jule::Any _1c2e02b31_find_builtin_def_std_debug(jule::Str _10631_ident) {
	{
		auto &_match_expr{ _10631_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ab799c09:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _10920_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e600bc_builtin_caller_std_debug_out), });;
				return jule::Any(_10920_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ab799c70:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _11220_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e604a7_builtin_caller_std_debug_outln), });;
				return jule::Any(_11220_f);
			}
		}
		else {
			_case_begin_1ab79929c:;
			{
				return nullptr;
			}
		}
		_match_end_1ab7996a9:;
	};
}



inline jule::Any _1c2e50497_find_builtin_def_std_mem(jule::Str _11929_ident) {
	{
		auto &_match_expr{ _11929_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1ab79a04a:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _12220_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e5db04_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12220_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1ab79a0b1:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _12520_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e5de12_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12520_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1ab79a127:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _12820_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e5e330_builtin_caller_std_mem_free), });;
				return jule::Any(_12820_f);
			}
		}
		else {
			_case_begin_1ab79aaea:;
			{
				return nullptr;
			}
		}
		_match_end_1ab79b667:;
	};
}



inline jule::Any _1c2e4e540_find_builtin_def_std_jule_integrated(jule::Str _13541_ident) {
	{
		auto &_match_expr{ _13541_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1ab79ba41:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _13820_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e5e75e_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13820_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1ab79baa7:;
			{
				static jule::Ptr<_1dce3b644_FnIns> _14120_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_decl=jule::new_ptr<_1dce38993_Fn>(_1dce38993_Fn{._field_generics=jule::Slice<jule::Ptr<_1dcd7744d_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e5eb7c_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14120_f);
			}
		}
		else {
			_case_begin_1ab79dc30:;
			{
				return nullptr;
			}
		}
		_match_end_1ab79dadc:;
	};
}



inline jule::Any _1c2e29042_find_package_builtin_def(jule::Str _15329_link_path, jule::Str _15345_ident) {
	{
		auto &_match_expr{ _15329_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ab7a0c32:;
			{
				return jule::Any(_1c2e02b31_find_builtin_def_std_debug(_15345_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ab7a0c98:;
			{
				return jule::Any(_1c2e50497_find_builtin_def_std_mem(_15345_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ab7a0d0e:;
			{
				return jule::Any(_1c2e4e540_find_builtin_def_std_jule_integrated(_15345_ident));
			}
		}
		else {
			_case_begin_1ab79de2d:;
			{
				return nullptr;
			}
		}
		_match_end_1ab79ea33:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e33975_builtin_caller_common_plain(jule::Ptr<_1c2d70560_Eval>& _16637_e, jule::Ptr<_1dcd73658_FnCallExpr>& _16652_fc, jule::Ptr<_1c2d6d9e2_Data>& _16674_d) {
	jule::Ptr<_1dce3b644_FnIns> _16713_f = _1c2da2b25_fnc(_16674_d.get()._field_kind.ptr());;
	_1c2d6075e_FnCallArgChecker _16913_fcac = _1c2d6075e_FnCallArgChecker{._field_e=_16637_e, ._field_args=_16652_fc.get()._field_args, ._field_error_token=_16652_fc.get()._field_token, ._field_f=_16713_f, ._field_dynamic_annotation=false, };;
	if ((!(_1c2d62b29_check(&_16913_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1dce32393_FnCallExprModel> _18013_model = jule::new_ptr<_1dce32393_FnCallExprModel>(_1dce32393_FnCallExprModel{._field_token=_16652_fc.get()._field_token, ._field_func=_16713_f, ._field_expr=_16674_d.get()._field_model, ._field_args=_16913_fcac._field_arg_models, });;
	if ((_16713_f.get()._field_result == nullptr)) {
		_16674_d=_1c2d9b13a_build_void_data();
	} else {
		_16674_d=jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=_16713_f.get()._field_result, });
	};
	_16674_d.get()._field_model=static_cast<jule::Any>(_18013_model);
	return _16674_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4ee58_builtin_caller_common(jule::Ptr<_1c2d70560_Eval>& _19931_e, jule::Ptr<_1dcd73658_FnCallExpr>& _19946_fc, jule::Ptr<_1c2d6d9e2_Data>& _19968_d) {
	return _1c2e33975_builtin_caller_common_plain(_19931_e,_19946_fc,_19968_d);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e29be1_builtin_caller_common_mut(jule::Ptr<_1c2d70560_Eval>& _20335_e, jule::Ptr<_1dcd73658_FnCallExpr>& _20350_fc, jule::Ptr<_1c2d6d9e2_Data>& _20372_d) {
	if ((!(_20372_d.get()._field_mutable))) {
		_1c2d70a6b_push_err(_20335_e.ptr(), _20350_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1c2e4ee58_builtin_caller_common(_20335_e,_20350_fc,_20372_d);
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4b938_builtin_caller_error(jule::Ptr<_1c2d70560_Eval>& _21030_e, jule::Ptr<_1dcd73658_FnCallExpr>& _21045_fc) {
	if ((_21045_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_21030_e.ptr(), _21045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_21045_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_21030_e.ptr(), _21045_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _21813_expr = _1c2d90edc_eval_expr(_21030_e, _21045_fc.get()._field_args[0LL]);;
	if ((_21813_expr == nullptr)) {
		return nullptr;
	};
	if (_1c2d6ddcc_is_nil(_21813_expr.ptr())) {
		_1c2d70a6b_push_err(_21030_e.ptr(), _21045_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _22713_d = _1c2d9b13a_build_void_data();;
	_22713_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce354ea_BuiltinErrorCallExprModel>(_1dce354ea_BuiltinErrorCallExprModel{._field_err=_21813_expr.get()._field_model}));
	return _22713_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4e331_builtin_caller_out(jule::Ptr<_1c2d70560_Eval>& _23528_e, jule::Ptr<_1dcd73658_FnCallExpr>& _23543_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	if ((_23543_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_23528_e.ptr(), _23543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23543_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_23528_e.ptr(), _23543_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _24413_expr = _1c2d90edc_eval_expr(_23528_e, _23543_fc.get()._field_args[0LL]);;
	if ((_24413_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2db70ce_is_builtin_str_convertable(_24413_expr.get()._field_kind)))) {
		_1c2d70a6b_push_err(_23528_e.ptr(), _23543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _25413_d = _1c2d9b13a_build_void_data();;
	_25413_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce342a7_BuiltinOutCallExprModel>(_1dce342a7_BuiltinOutCallExprModel{._field_expr=_24413_expr.get()._field_model, }));
	return _25413_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2dc660a_builtin_caller_outln(jule::Ptr<_1c2d70560_Eval>& _25930_e, jule::Ptr<_1dcd73658_FnCallExpr>& _25945_fc, jule::Ptr<_1c2d6d9e2_Data>& _25967_d) {
	_25967_d=_1c2e4e331_builtin_caller_out(_25930_e,_25945_fc,_25967_d);
	if ((_25967_d == nullptr)) {
		return nullptr;
	};
	_25967_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce34494_BuiltinOutlnCallExprModel>(_1dce34494_BuiltinOutlnCallExprModel{._field_expr=_25967_d.get()._field_model.operator jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>().get()._field_expr, }));
	return _25967_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e17d33_builtin_caller_new(jule::Ptr<_1c2d70560_Eval>& _27128_e, jule::Ptr<_1dcd73658_FnCallExpr>& _27143_fc, jule::Ptr<_1c2d6d9e2_Data>& _27165_d) {
	if ((_27143_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_27128_e.ptr(), _27143_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27143_fc.get()._field_args.len() > 2LL)) {
		_1c2d70a6b_push_err(_27128_e.ptr(), _27143_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _28013_t = _1c2d908c1_eval_expr_kind(_27128_e, _27143_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_28013_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28013_t.get()._field_decl))) {
		_1c2d70a6b_push_err(_27128_e.ptr(), _27143_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1c2db6a6d_is_valid_for_sptr_type(_28013_t.get()._field_kind)))) {
		jule::Ptr<_1dcd868e1_StructIns> _29117_s = _1c2da2d89_strct(_28013_t.get()._field_kind.ptr());;
		if ((((_29117_s != nullptr) && (_29117_s.get()._field_decl != nullptr)) && _29117_s.get()._field_decl.get()._field_cpp_linked)) {
			_1c2d70a6b_push_err(_27128_e.ptr(), _27143_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27165_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1c2da7a81_Sptr>(_1c2da7a81_Sptr{._field_elem=_28013_t.get()._field_kind}), 7)});
	if ((_27143_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1c2d9e825_TypeKind> _30517_old = _27128_e.get()._field_prefix;;
		_27128_e.get()._field_prefix=_28013_t.get()._field_kind;
		jule::Ptr<_1c2d6d9e2_Data> _30817_init = _1c2d90edc_eval_expr(_27128_e, _27143_fc.get()._field_args[1LL]);;
		_27128_e.get()._field_prefix=_30517_old;
		if ((_30817_init != nullptr)) {
			jule::Ptr<_1db7061a7_Token> _31321_token = _27143_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1c2d16083_check_validity_for_init_expr(_27128_e.get()._field_s, (!(_27128_e.get()._field_immutable)),false,_28013_t.get()._field_kind,_30817_init,_31321_token);
			_1c2d1326c_check_assign_type(_27128_e.get()._field_s, false,_28013_t.get()._field_kind,_30817_init,_31321_token);
			_27165_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3486d_BuiltinNewCallExprModel>(_1dce3486d_BuiltinNewCallExprModel{._field_kind=_28013_t.get()._field_kind, ._field_init=_30817_init.get()._field_model}));
		};
	} else {
		_27165_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3486d_BuiltinNewCallExprModel>(_1dce3486d_BuiltinNewCallExprModel{._field_kind=_28013_t.get()._field_kind, }));
	};
	return _27165_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e31d4c_builtin_caller_panic(jule::Ptr<_1c2d70560_Eval>& _33330_e, jule::Ptr<_1dcd73658_FnCallExpr>& _33345_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	if ((_33345_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_33330_e.ptr(), _33345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_33345_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_33330_e.ptr(), _33345_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _34213_expr = _1c2d90edc_eval_expr(_33330_e, _33345_fc.get()._field_args[0LL]);;
	if ((_34213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c2da1937_prim(_34213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1c2da7531_is_str(_1c2da1937_prim(_34213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1c2d70a6b_push_err(_33330_e.ptr(), _33345_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _35113_d = _1c2d9b13a_build_void_data();;
	_35113_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce34a5a_BuiltinPanicCallExprModel>(_1dce34a5a_BuiltinPanicCallExprModel{._field_token=_33345_fc.get()._field_token, ._field_expr=_34213_expr.get()._field_model}));
	return _35113_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e2a010_builtin_caller_make(jule::Ptr<_1c2d70560_Eval>& _35929_e, jule::Ptr<_1dcd73658_FnCallExpr>& _35944_fc, jule::Ptr<_1c2d6d9e2_Data>& _35966_d) {
	if ((_35944_fc.get()._field_args.len() < 2LL)) {
		if ((_35944_fc.get()._field_args.len() == 1LL)) {
			_1c2d70a6b_push_err(_35929_e.ptr(), _35944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1c2d70a6b_push_err(_35929_e.ptr(), _35944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _36913_t = _1c2d908c1_eval_expr_kind(_35929_e, _35944_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_36913_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_36913_t.get()._field_decl))) {
			_case_begin_1ab7c585b:;
			{
				goto _match_end_1ab7c5b47;
			}
		}
		else if ((_1c2da28b1_slc(_36913_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab7c58c2:;
			{
				if ((_35944_fc.get()._field_args.len() > 3LL)) {
					_1c2d70a6b_push_err(_35929_e.ptr(), _35944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1c2da1937_prim(_36913_t.get()._field_kind.ptr()) != nullptr) && _1c2da7531_is_str(_1c2da1937_prim(_36913_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ab7c5938:;
			{
				if ((_35944_fc.get()._field_args.len() > 2LL)) {
					_1c2d70a6b_push_err(_35929_e.ptr(), _35944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1ab7c5b47:;
	};
	_1c2d70a6b_push_err(_35929_e.ptr(), _35944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_35966_d.get()._field_kind=_36913_t.get()._field_kind;
	jule::Ptr<_1c2d6d9e2_Data> _39313_len = _1c2d90edc_eval_expr(_1c2d12964_evalp(_35929_e.get()._field_s, _35929_e.get()._field_lookup,_36913_t.get()._field_kind), _35944_fc.get()._field_args[1LL]);;
	if ((_39313_len == nullptr)) {
		return nullptr;
	};
	_1c2d7deec_check_integer_indexing_by_data(_35929_e.ptr(), _39313_len,_35944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1dce34e34_BuiltinMakeCallExprModel> _40013_model = jule::new_ptr<_1dce34e34_BuiltinMakeCallExprModel>(_1dce34e34_BuiltinMakeCallExprModel{._field_kind=_36913_t.get()._field_kind, ._field_len=_39313_len.get()._field_model, });;
	_35966_d.get()._field_model=static_cast<jule::Any>(_40013_model);
	if ((_35944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1c2d6d9e2_Data> _40617_cap = _1c2d90edc_eval_expr(_1c2d12964_evalp(_35929_e.get()._field_s, _35929_e.get()._field_lookup,_36913_t.get()._field_kind), _35944_fc.get()._field_args[2LL]);;
		if ((_40617_cap == nullptr)) {
			return _35966_d;
		};
		_1c2d7deec_check_integer_indexing_by_data(_35929_e.ptr(), _40617_cap,_35944_fc.get()._field_args[2LL].get()._field_token);
		_40013_model.get()._field_cap=_40617_cap.get()._field_model;
	};
	return _35966_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e4b0db_builtin_caller_append(jule::Ptr<_1c2d70560_Eval>& _41631_e, jule::Ptr<_1dcd73658_FnCallExpr>& _41646_fc, jule::Ptr<_1c2d6d9e2_Data>& _41668_d) {
	if ((_41646_fc.get()._field_args.len() < 2LL)) {
		if ((_41646_fc.get()._field_args.len() == 1LL)) {
			_1c2d70a6b_push_err(_41631_e.ptr(), _41646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c2d70a6b_push_err(_41631_e.ptr(), _41646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _42613_t = _1c2d90edc_eval_expr(_41631_e, _41646_fc.get()._field_args[0LL]);;
	if ((_42613_t == nullptr)) {
		return nullptr;
	};
	if ((_1c2da28b1_slc(_42613_t.get()._field_kind.ptr()) == nullptr)) {
		_1c2d70a6b_push_err(_41631_e.ptr(), _41646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dce3b644_FnIns> _43613_f = jule::new_ptr<_1dce3b644_FnIns>(_1dce3b644_FnIns{._field_params=jule::Slice<jule::Ptr<_1dce3a775_ParamIns>>::make({jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_mutable=true, }), ._field_kind=_42613_t.get()._field_kind}),jule::new_ptr<_1dce3a775_ParamIns>(_1dce3a775_ParamIns{._field_decl=jule::new_ptr<_1dce37156_Param>(_1dce37156_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1c2da28b1_slc(_42613_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_42613_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1c2d6d9e2_Data>(jule::Ptr<_1c2d70560_Eval>&,jule::Ptr<_1dcd73658_FnCallExpr>&,jule::Ptr<_1c2d6d9e2_Data>&)>(_1c2e33975_builtin_caller_common_plain), });;
	_41668_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_43613_f, 1)});
	_41668_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce33be1_CommonIdentExprModel>(_1dce33be1_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_41668_d=_1c2e33975_builtin_caller_common_plain(_41631_e,_41646_fc,_41668_d);
	if ((_41668_d != nullptr)) {
		jule::Ptr<_1dce32393_FnCallExprModel> _46417_model = _41668_d.get()._field_model.operator jule::Ptr<_1dce32393_FnCallExprModel>();;
		_41668_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce35121_BuiltinAppendCallExprModel>(_1dce35121_BuiltinAppendCallExprModel{._field_dest=_46417_model.get()._field_args[0LL], ._field_elements=_46417_model.get()._field_args[1LL]}));
	};
	return _41668_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2dc3e21_caller_copy_slice(jule::Ptr<_1c2d6d9e2_Data>& _47327_dest, jule::Ptr<_1c2d70560_Eval>& _47345_e, jule::Ptr<_1dcd73658_FnCallExpr>& _47360_fc, jule::Ptr<_1c2d6d9e2_Data>& _47382_d) {
	if ((!(_47327_dest.get()._field_mutable))) {
		_1c2d70a6b_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _47813_src = _1c2d90edc_eval_expr(_47345_e, _47360_fc.get()._field_args[1LL]);;
	if ((_47813_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c2da84dd_Slc> _48213_slc = _1c2da28b1_slc(_47813_src.get()._field_kind.ptr());;
	if ((_48213_slc != nullptr)) {
		if (((!(_47813_src.get()._field_mutable)) && _1c2da0c22_mutable(_48213_slc.get()._field_elem.ptr()))) {
			_1c2d70a6b_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1c2da002e_equals(_47327_dest.get()._field_kind, _47813_src.get()._field_kind)))) {
			_1c2d70a6b_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_47327_dest.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_47813_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1c2da42ec_Prim> _49213_dest_prim = _1c2da1937_prim(_1c2da28b1_slc(_47327_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1c2da42ec_Prim> _49313_prim = _1c2da1937_prim(_47813_src.get()._field_kind.ptr());;
		if (((((_49213_dest_prim == nullptr) || (_49313_prim == nullptr)) || (!(_1c2da7531_is_str(_49313_prim.ptr())))) || (!(_1c2da5b06_is_u8(_49213_dest_prim.ptr()))))) {
			_1c2d70a6b_push_err(_47345_e.ptr(), _47360_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_47327_dest.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_47813_src.get()._field_kind.ptr()))}));
		};
	};
	_47382_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)});
	_47382_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3530d_BuiltinCopyCallExprModel>(_1dce3530d_BuiltinCopyCallExprModel{._field_dest=_47327_dest, ._field_src=_47813_src}));
	return _47382_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e3e046_caller_copy_str(jule::Ptr<_1c2d6d9e2_Data>& _50725_dest, jule::Ptr<_1c2d70560_Eval>& _50743_e, jule::Ptr<_1dcd73658_FnCallExpr>& _50758_fc, jule::Ptr<_1c2d6d9e2_Data>& _50780_d) {
	if ((!(_50725_dest.get()._field_mutable))) {
		_1c2d70a6b_push_err(_50743_e.ptr(), _50758_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _51213_src = _1c2d90edc_eval_expr(_50743_e, _50758_fc.get()._field_args[1LL]);;
	if ((_51213_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1c2da1937_prim(_51213_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab7e3a33:;
			{
				if (_1c2da7531_is_str(_1c2da1937_prim(_51213_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1c2da28b1_slc(_51213_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab7e3a99:;
			{
				jule::Ptr<_1c2da84dd_Slc> _52217_slc = _1c2da28b1_slc(_51213_src.get()._field_kind.ptr());;
				if (((_1c2da1937_prim(_52217_slc.get()._field_elem.ptr()) != nullptr) && _1c2da5b06_is_u8(_1c2da1937_prim(_52217_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ab7e3eb7:;
	};
	_1c2d70a6b_push_err(_50743_e.ptr(), _50758_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_50725_dest.get()._field_kind.ptr())),jule::Any(_1c2d9ec21_to_str(_51213_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_50780_d.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("int", 3)), 6)});
	_50780_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3530d_BuiltinCopyCallExprModel>(_1dce3530d_BuiltinCopyCallExprModel{._field_dest=_50725_dest, ._field_src=_51213_src}));
	return _50780_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e2899d_builtin_caller_copy(jule::Ptr<_1c2d70560_Eval>& _53729_e, jule::Ptr<_1dcd73658_FnCallExpr>& _53744_fc, jule::Ptr<_1c2d6d9e2_Data>& _53766_d) {
	if ((_53744_fc.get()._field_args.len() < 2LL)) {
		if ((_53744_fc.get()._field_args.len() == 1LL)) {
			_1c2d70a6b_push_err(_53729_e.ptr(), _53744_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c2d70a6b_push_err(_53729_e.ptr(), _53744_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_53744_fc.get()._field_args.len() > 2LL)) {
		_1c2d70a6b_push_err(_53729_e.ptr(), _53744_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _55013_dest = _1c2d90edc_eval_expr(_53729_e, _53744_fc.get()._field_args[0LL]);;
	{
		
		if ((_55013_dest == nullptr)) {
			_case_begin_1ab7ed213:;
			{
				return nullptr;
			}
		}
		else if ((_1c2da28b1_slc(_55013_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab7ed279:;
			{
				return _1c2dc3e21_caller_copy_slice(_55013_dest,_53729_e,_53744_fc,_53766_d);
			}
		}
		else if (((_1c2da1937_prim(_55013_dest.get()._field_kind.ptr()) != nullptr) && _1c2da7531_is_str(_1c2da1937_prim(_55013_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ab7ed2e0:;
			{
				return _1c2e3e046_caller_copy_str(_55013_dest,_53729_e,_53744_fc,_53766_d);
			}
		}
		else {
			_case_begin_1ab7ed19c:;
			{
				_1c2d70a6b_push_err(_53729_e.ptr(), _53744_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ab7ed147:;
	};
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2de0547_builtin_caller_clone(jule::Ptr<_1c2d70560_Eval>& _56430_e, jule::Ptr<_1dcd73658_FnCallExpr>& _56445_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	if ((_56445_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_56430_e.ptr(), _56445_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_56445_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _57313_d = _1c2d908c1_eval_expr_kind(_56430_e, _56445_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_57313_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2da145e_supports_cloning(_57313_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1c2da28b1_slc(_57313_d.get()._field_kind.ptr()) != nullptr) || (_1c2da3362_map(_57313_d.get()._field_kind.ptr()) != nullptr) || (_1c2da264c_arr(_57313_d.get()._field_kind.ptr()) != nullptr) || (_1c2da1b9b_sptr(_57313_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ab803e72:;
				{
					{
						_1c2d70a6b_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_57313_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1c2da2d89_strct(_57313_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ab803ed8:;
				{
					{
						_1c2d70a6b_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_57313_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1ab803e0b:;
				{
					{
						_1c2d70a6b_push_err(_56430_e.ptr(), _56445_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1c2d9ec21_to_str(_57313_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1ab803a43:;
		};
	};
	_57313_d.get()._field_mutable=true;
	_57313_d.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce34681_BuiltinCloneCallExprModel>(_1dce34681_BuiltinCloneCallExprModel{._field_expr=_57313_d.get()._field_model}));
	return _57313_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e0b71c_builtin_caller_assert(jule::Ptr<_1c2d70560_Eval>& _60631_e, jule::Ptr<_1dcd73658_FnCallExpr>& _60646_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	if ((_60646_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_60631_e.ptr(), _60646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_60646_fc.get()._field_args.len() > 2LL)) {
		_1c2d70a6b_push_err(_60631_e.ptr(), _60646_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _61513_expr = _1c2d90edc_eval_expr(_60631_e, _60646_fc.get()._field_args[0LL]);;
	if ((_61513_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c2da1937_prim(_61513_expr.get()._field_kind.ptr()) == nullptr) || (!(_1c2da72bc_is_bool(_1c2da1937_prim(_61513_expr.get()._field_kind.ptr()).ptr()))))) {
		_1c2d70a6b_push_err(_60631_e.ptr(), _60646_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dce34c47_BuiltinAssertCallExprModel> _62413_model = jule::new_ptr<_1dce34c47_BuiltinAssertCallExprModel>(_1dce34c47_BuiltinAssertCallExprModel{._field_token=_60646_fc.get()._field_token, ._field_expr=_61513_expr.get()._field_model, ._field_log=jule::Str("assertion failed", 16)});;
	if ((_60646_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1c2d6d9e2_Data> _63217_log = _1c2d90edc_eval_expr(_60631_e, _60646_fc.get()._field_args[1LL]);;
		if ((_63217_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1c2d6e3a5_is_const(_63217_log.ptr()))) || (_1c2da1937_prim(_63217_log.get()._field_kind.ptr()) == nullptr)) || (!(_1c2da7531_is_str(_1c2da1937_prim(_63217_log.get()._field_kind.ptr()).ptr()))))) {
			_1c2d70a6b_push_err(_60631_e.ptr(), _60646_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1c2d9ec21_to_str(_63217_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_62413_model.get()._field_log=_1dce298c9_read_str(_63217_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1c2d6d9e2_Data> _64513_d = _1c2d9b13a_build_void_data();;
	_64513_d.get()._field_model=static_cast<jule::Any>(_62413_model);
	return _64513_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5db04_builtin_caller_std_mem_size_of(jule::Ptr<_1c2d70560_Eval>& _65040_e, jule::Ptr<_1dcd73658_FnCallExpr>& _65055_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	jule::Ptr<_1c2d6d9e2_Data> _65113_result = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_65055_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_65040_e.ptr(), _65055_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _65113_result;
	};
	if ((_65055_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_65040_e.ptr(), _65055_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _66313_d = _1c2d908c1_eval_expr_kind(_65040_e, _65055_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_66313_d == nullptr)) {
		return _65113_result;
	};
	_65113_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce333e9_SizeofExprModel>(_1dce333e9_SizeofExprModel{._field_expr=_66313_d.get()._field_model}));
	return _65113_result;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5de12_builtin_caller_std_mem_align_of(jule::Ptr<_1c2d70560_Eval>& _67241_e, jule::Ptr<_1dcd73658_FnCallExpr>& _67256_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	jule::Ptr<_1c2d6d9e2_Data> _67313_result = jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_67256_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_67241_e.ptr(), _67256_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _67313_result;
	};
	if ((_67256_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_67241_e.ptr(), _67256_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _68513_d = _1c2d908c1_eval_expr_kind(_67241_e, _67256_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_68513_d == nullptr)) {
		return _67313_result;
	};
	_67313_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce35b5a_AlignofExprModel>(_1dce35b5a_AlignofExprModel{._field_expr=_68513_d.get()._field_model}));
	return _67313_result;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5e330_builtin_caller_std_mem_free(jule::Ptr<_1c2d70560_Eval>& _69437_e, jule::Ptr<_1dcd73658_FnCallExpr>& _69452_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	if ((_69452_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_69437_e.ptr(), _69452_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_69452_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_69437_e.ptr(), _69452_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _70313_d = _1c2d908c1_eval_expr_kind(_69437_e, _69452_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_70313_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2da11ea_performs_rc(_70313_d.get()._field_kind.ptr())))) {
		_1c2d70a6b_push_err(_69437_e.ptr(), _69452_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _71213_result = _1c2d9b13a_build_void_data();;
	_71213_result.get()._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce3640d_FreeExprModel>(_1dce3640d_FreeExprModel{._field_expr=_70313_d.get()._field_model}));
	return _71213_result;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5e75e_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1c2d70560_Eval>& _71751_e, jule::Ptr<_1dcd73658_FnCallExpr>& _71766_fc, jule::Ptr<_1c2d6d9e2_Data>& ) {
	if ((_71766_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_71751_e.ptr(), _71766_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_71766_fc.get()._field_args.len() > 1LL)) {
		_1c2d70a6b_push_err(_71751_e.ptr(), _71766_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c2d6d9e2_Data> _72613_d = _1c2d908c1_eval_expr_kind(_71751_e, _71766_fc.get()._field_args[0LL].get()._field_kind);;
	if ((_72613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c2db70ce_is_builtin_str_convertable(_72613_d.get()._field_kind)))) {
		_1c2d70a6b_push_err(_71751_e.ptr(), _71766_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c2d6d9e2_Data>(_1c2d6d9e2_Data{._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(_1c2db773e_build_prim_type(jule::Str("str", 3)), 6)}), ._field_model=static_cast<jule::Any>(jule::new_ptr<_1dce36034_IntegratedToStrExprModel>(_1dce36034_IntegratedToStrExprModel{._field_expr=_72613_d.get()._field_model})), });
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e5eb7c_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1c2d70560_Eval>& _74449_e, jule::Ptr<_1dcd73658_FnCallExpr>& _74464_fc, jule::Ptr<_1c2d6d9e2_Data>& _74486_d) {
	if ((!(_1c2d714a6_is_unsafe(_74449_e.ptr())))) {
		_1c2d70a6b_push_err(_74449_e.ptr(), _74464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_74464_fc.get()._field_args.len() < 1LL)) {
		_1c2d70a6b_push_err(_74449_e.ptr(), _74464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _75413_argd = _1c2d90edc_eval_expr(_74449_e, _74464_fc.get()._field_args[0LL]);;
	if ((_75413_argd == nullptr)) {
		return nullptr;
	};
	if (((_1c2da1937_prim(_75413_argd.get()._field_kind.ptr()) == nullptr) || (!(_1c2da7531_is_str(_1c2da1937_prim(_75413_argd.get()._field_kind.ptr()).ptr()))))) {
		_1c2d70a6b_push_err(_74449_e.ptr(), _74464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c2d9ec21_to_str(_75413_argd.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1c2d6e3a5_is_const(_75413_argd.ptr()))) || (!(_1dce2bc72_is_str(_75413_argd.get()._field_constant.ptr()))))) {
		_1c2d70a6b_push_err(_74449_e.ptr(), _74464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c2d6d9e2_Data> _76913_r = _1c2d9b13a_build_void_data();;
	jule::Ptr<_1dce3b644_FnIns> _77113_f = _1c2da2b25_fnc(_74486_d.get()._field_kind.ptr());;
	if ((_77113_f.get()._field_generics.len() > 0LL)) {
		_76913_r.get()._field_kind=_77113_f.get()._field_generics[0LL].get()._field_kind;
	};
	jule::Ptr<_1dce36221_BackendEmitExprModel> _77613_model = jule::new_ptr<_1dce36221_BackendEmitExprModel>(_1dce36221_BackendEmitExprModel{._field_code=_1dce298c9_read_str(_75413_argd.get()._field_constant.ptr()), });;
	if ((_74464_fc.get()._field_args.len() > 1LL)) {
		_77613_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_74464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _74464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1ab8332d1:;
			if (it != expr.end()) {
				jule::Ptr<_1dcd6e38a_Expr> _78221_arg = *it;
				{
					_75413_argd=_1c2d908c1_eval_expr_kind(_74449_e, _78221_arg.get()._field_kind);
					if ((_75413_argd == nullptr)) {
						return nullptr;
					};
					_77613_model.get()._field_exprs = jule::alloc_for_append(_77613_model.get()._field_exprs,1);_77613_model.get()._field_exprs.__push(_75413_argd.get()._field_model);;
				}
				_iter_next_1ab8332d1:;
				++it;
				goto _iter_begin_1ab8332d1;
			}
			_iter_end_1ab8332d1:;
		};
	};
	_76913_r.get()._field_model=static_cast<jule::Any>(_77613_model);
	return _76913_r;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e600bc_builtin_caller_std_debug_out(jule::Ptr<_1c2d70560_Eval>& _79538_e, jule::Ptr<_1dcd73658_FnCallExpr>& _79553_fc, jule::Ptr<_1c2d6d9e2_Data>& _79575_d) {
	_79575_d=_1c2e4e331_builtin_caller_out(_79538_e,_79553_fc,_79575_d);
	if ((_79575_d == nullptr)) {
		return nullptr;
	};
	_79575_d.get()._field_model.operator jule::Ptr<_1dce342a7_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _79575_d;
}



inline jule::Ptr<_1c2d6d9e2_Data> _1c2e604a7_builtin_caller_std_debug_outln(jule::Ptr<_1c2d70560_Eval>& _80540_e, jule::Ptr<_1dcd73658_FnCallExpr>& _80555_fc, jule::Ptr<_1c2d6d9e2_Data>& _80577_d) {
	_80577_d=_1c2dc660a_builtin_caller_outln(_80540_e,_80555_fc,_80577_d);
	if ((_80577_d == nullptr)) {
		return nullptr;
	};
	_80577_d.get()._field_model.operator jule::Ptr<_1dce34494_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _80577_d;
}



inline jule::Bool _1c3b5e2e8_find_module_file(jule::Slice<jule::Ptr<_205146a35_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1ab8386d2:;
		if (it != expr.end()) {
			jule::Ptr<_205146a35_DirEntry> &_1312_d = *it;
			{
				if (((!(_205134160_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1ab8386d2:;
			++it;
			goto _iter_begin_1ab8386d2;
		}
		_iter_end_1ab8386d2:;
	};
	return false;
}



inline jule::Str _1c3b5e42a_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_205146a35_DirEntry>> _2617_dirents = ({
				auto except = static__207b17019_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ab83898a;
				} jule::Slice<jule::Ptr<_205146a35_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1c3b5e2e8_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_207b16ca5_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1ab83898a;
			};
		}
	_iter_next_1ab83898a:;
	}
	_iter_end_1ab83898a:;;
	return jule::Str();
}



inline jule::Slice<_207b80eb7_Log> _1c3b5e6b1_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__20512e545_read(_207b167cc_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_207b80eb7_Log>::make({_207b80eb7_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _207b15b3e_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_207b80eb7_Log>::make({_207b80eb7_Log{._field_kind=static_cast<jule::I64>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1c437d286_FileInfo> _1c43c4981_parse_file(jule::Ptr<_1db70b542_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c437d286_FileInfo> _2813_finf = jule::new_ptr<_1c437d286_FileInfo>(_1c437d286_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1c43c4eae_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1dcd355c6_Ast>,jule::Slice<_207b80eb7_Log>> _1c43c4eae_parse_fileset(jule::Ptr<_1db70b542_File> _6022_f) {
	jule::Ptr<_1c43e30cb_Parser> _6113_p = jule::new_ptr<_1c43e30cb_Parser>(_1c43e30cb_Parser{});;
	_1c4402eba_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1dcd7a187_ScopeTree> _1c43c58b6_new_scope(void) {
	return jule::new_ptr<_1dcd7a187_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1c43c5bc4_is_st(jule::Ptr<_1db7061a7_Token> _5010_current, jule::Ptr<_1db7061a7_Token> _5027_prev) {
	jule::Bool _5043_ok = jule::Bool();
	jule::Bool _5053_terminated = jule::Bool();
	_5043_ok=((_5010_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_5027_prev.get()._field_row < _5010_current.get()._field_row));
	_5053_terminated=(_5010_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5043_ok,_5053_terminated);
}



inline jule::Bool _1c43c6037_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _5629_tokens, jule::I64& _5648_i) {
	if (((_5648_i > 1LL) && (_5629_tokens[(_5648_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1db7061a7_Token> _6213_prev = _5629_tokens[(_5648_i - 1LL)];;
		return ((_6213_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _1db706b9c_is_bin_op(_6213_prev.get()._field_kind)) && (_6213_prev.get()._field_row < _5629_tokens[_5648_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1c43c63cd_next_st_pos(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _7117_tokens, jule::I64 _7135_start) {
	jule::I64 _7213_brace_n = 0LL;;
	jule::I64 _7313_i = _7135_start;;
	for (; (_7313_i < _7117_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1db7061a7_Token> _7713_tok = _7117_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1ab8be23a:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ab8c0dda:;
								{
									if (((_7213_brace_n == 0LL) && (_7313_i > _7135_start))) {
										if ((!(_1c43c6037_prev_is_incomplete_expr(_7117_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1c43c5bc4_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_brace_n)++;
								}
							}
							else {
								_case_begin_1ab8bea65:;
								{
									(_7213_brace_n)--;
									if (((_7213_brace_n == 0LL) && ((_7313_i + 1LL) < _7117_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1c43c5bc4_is_st(_7117_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1ab8be89a:;
						};
						goto _iter_next_1ab8bc876;
					}
				}
				_match_end_1ab8be1d5:;
			};
			if ((_7213_brace_n != 0LL)) {
				goto _iter_next_1ab8bc876;
			};
			if ((_7313_i > _7135_start)) {
				if (_1c43c6037_prev_is_incomplete_expr(_7117_tokens,_7313_i)) {
					goto _iter_next_1ab8bc876;
				};
				std::tie(_7517_ok,_7617_terminated) = _1c43c5bc4_is_st(_7713_tok,_7117_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1c43c5bc4_is_st(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1ab8bc876;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1ab8bc876:;
	}
	_iter_end_1ab8bc876:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::Bool> _1c43c671e_skip_st(jule::I64& _13317_i, jule::Slice<jule::Ptr<_1db7061a7_Token>> _13329_tokens) {
	jule::I64 _1349_start = _13317_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13317_i,_13513_terminated) = _1c43c63cd_next_st_pos(_13329_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _13713_st_tokens = _13329_tokens.slice(_1349_start,_13317_i);;
	if (_13513_terminated) {
		if ((_13713_st_tokens.len() == 1LL)) {
			std::tie(_13713_st_tokens,_13513_terminated) = _1c43c671e_skip_st(_13317_i,_13329_tokens);
			return std::make_tuple(_13713_st_tokens,_13513_terminated);
		};
		_13713_st_tokens=_13713_st_tokens.slice(0LL,(_13713_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13713_st_tokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _1c43c6db2_split_stmts(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _15521_tokens) {
	jule::Slice<jule::Ptr<_1c43c6a1b_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1c43c6a1b_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15521_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1db7061a7_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1c43c671e_skip_st(_15713_pos,_15521_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1c43c6a1b_stmt>(_1c43c6a1b_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1ab8c8981:;
	}
	_iter_end_1ab8c8981:;;
	return _15613_stmts;
}



inline jule::Slice<jule::Ptr<_1db7061a7_Token>> _1c43d37e7_get_block_expr(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _4024_tokens) {
	jule::I64 _4113_brace_n = 0LL;;
	jule::I64 _4213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _4024_tokens;
		auto it = expr.begin();
		_iter_begin_1ab98a779:;
		if (it != expr.end()) {
			jule::I64 _439_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _4312_tok = *it;
			{
				{
					auto &_match_expr{ _4312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ab98b615:;
						{
							(_4213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ab98b68c:;
						{
							{
								auto &_match_expr{ _4312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ab98c3e6:;
									{
										if (((_4113_brace_n > 0LL) || (_4213_skip_to_next_brace_close > 0LL))) {
											if ((_4213_skip_to_next_brace_close > 0LL)) {
												(_4213_skip_to_next_brace_close)--;
											};
											(_4113_brace_n)++;
											goto _match_end_1ab98c528;
										};
										return _4024_tokens.slice(0LL,_439_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ab98ca9a:;
									{
										(_4113_brace_n)++;
									}
								}
								else {
									_case_begin_1ab98c638:;
									{
										(_4113_brace_n)--;
									}
								}
								_match_end_1ab98c528:;
							};
						}
					}
					_match_end_1ab98b439:;
				};
			}
			_iter_next_1ab98a779:;
			++it;
			_439_i++;
			goto _iter_begin_1ab98a779;
		}
		_iter_end_1ab98a779:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43d3b49_split_delim(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _7121_tokens, jule::U64 _7139_delim) {
	jule::I64 _7213_range_n = 0LL;;
	{
		auto &expr = _7121_tokens;
		auto it = expr.begin();
		_iter_begin_1ab98e2e9:;
		if (it != expr.end()) {
			jule::I64 _739_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _7312_token = *it;
			{
				{
					auto &_match_expr{ _7312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ab98eddd:;
						{
							{
								auto &_match_expr{ _7312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ab99053c:;
									{
										(_7213_range_n)++;
										goto _iter_next_1ab98e2e9;
									}
								}
								else {
									_case_begin_1ab9907c3:;
									{
										(_7213_range_n)--;
									}
								}
								_match_end_1ab990608:;
							};
						}
					}
					else if (_match_expr == _7139_delim) {
						_case_begin_1ab98ee65:;
						{
							if ((_7213_range_n == 0LL)) {
								jule::Slice<jule::Ptr<_1db7061a7_Token>> _8725_l = _7121_tokens.slice(0LL,_739_i);;
								jule::Slice<jule::Ptr<_1db7061a7_Token>> _8825_r = _7121_tokens.slice((_739_i + 1LL));;
								return std::make_tuple(_8725_l,_8825_r);
							};
						}
					}
					_match_end_1ab98ebac:;
				};
			}
			_iter_next_1ab98e2e9:;
			++it;
			_739_i++;
			goto _iter_begin_1ab98e2e9;
		}
		_iter_end_1ab98e2e9:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1c43d3de1_find_lowest_prec_op(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _9825_tokens) {
	jule::U8 _10313_prec = 255LLU;;
	jule::I64 _10413_prec_pos = -1LL;;
	jule::I64 _10613_brace_n = 0LL;;
	jule::Bool _10713_skip_to_next_brace_open = false;;
	{
		auto &expr = _9825_tokens;
		auto it = expr.begin();
		_iter_begin_1ab9936b6:;
		if (it != expr.end()) {
			jule::I64 _1089_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> &_10812_token = *it;
			{
				{
					
					if ((_10812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1ab99451e:;
						{
							{
								auto &_match_expr{ _10812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ab995157:;
									{
										_10713_skip_to_next_brace_open=false;
										goto _case_begin_1ab995894;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ab995894:;
									{
										(_10613_brace_n)++;
									}
								}
								else {
									_case_begin_1ab9953dd:;
									{
										(_10613_brace_n)--;
									}
								}
								_match_end_1ab995223:;
							};
							goto _iter_next_1ab9936b6;
						}
					}
					else if (_10713_skip_to_next_brace_open) {
						_case_begin_1ab994596:;
						{
							goto _iter_next_1ab9936b6;
						}
					}
					else if ((_10812_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1ab99461d:;
						{
							_10713_skip_to_next_brace_open=true;
							goto _iter_next_1ab9936b6;
						}
					}
					else if ((_1089_i == 0LL)) {
						_case_begin_1ab994695:;
						{
							goto _iter_next_1ab9936b6;
						}
					}
					else if ((_10812_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1ab99471c:;
						{
							goto _iter_next_1ab9936b6;
						}
					}
					else if ((_10613_brace_n > 0LL)) {
						_case_begin_1ab994794:;
						{
							goto _iter_next_1ab9936b6;
						}
					}
					_match_end_1ab9943a9:;
				};
				jule::Ptr<_1db7061a7_Token> _13513_left = _9825_tokens[(_1089_i - 1LL)];;
				if (((_13513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_13513_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1ab9936b6;
				};
				if ((((_1089_i > 1LL) && (_13513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_13513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_1db7061a7_Token> _14317_lleft = _9825_tokens[(_1089_i - 2LL)];;
					if (((_14317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_14317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_10812_token.get()._field_kind == jule::Str("&", 1)) || (_10812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1ab9936b6;
						};
					};
				};
				jule::U8 _15213_p = _1db70655e_prec(_10812_token.ptr());;
				if (((_15213_p != 0LLU) && (_15213_p <= _10313_prec))) {
					_10313_prec=_15213_p;
					_10413_prec_pos=_1089_i;
				};
			}
			_iter_next_1ab9936b6:;
			++it;
			_1089_i++;
			goto _iter_begin_1ab9936b6;
		}
		_iter_end_1ab9936b6:;
	};
	return _10413_prec_pos;
}



inline jule::Ptr<_1dcd71403_IdentExpr> _1c43d4210_build_ident_expr(jule::Ptr<_1db7061a7_Token>& _16226_token) {
	return jule::new_ptr<_1dcd71403_IdentExpr>(_1dcd71403_IdentExpr{._field_token=_16226_token, ._field_ident=_16226_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::I64> _1c43d44a7_get_range_expr_tokens(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _17031_tokens) {
	jule::I64 _17113_range_n = 0LL;;
	jule::I64 _17213_i = (_17031_tokens.len() - 1LL);;
	for (; (_17213_i >= 0LL); (_17213_i)--) {
		{
			jule::Ptr<_1db7061a7_Token> _17413_tok = _17031_tokens[_17213_i];;
			if ((_17413_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _17413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ab99d160:;
						{
							(_17113_range_n)++;
						}
					}
					else {
						_case_begin_1ab99da23:;
						{
							(_17113_range_n)--;
						}
					}
					_match_end_1ab99d814:;
				};
			};
			if ((_17113_range_n == 0LL)) {
				return std::make_tuple(_17031_tokens.slice(0LL,_17213_i),_17113_range_n);
			};
		}
	_iter_next_1ab99c967:;
	}
	_iter_end_1ab99c967:;;
	return std::make_tuple(nullptr,_17113_range_n);
}



inline jule::Bool _1c43dedec_check_assign_tokens(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_1db70a750_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1aba4206c:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aba42b94:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1aba42e6e:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1aba42c60:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1aba4206c;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _1db70ac8e_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1aba4206c:;
			++it;
			goto _iter_begin_1aba4206c;
		}
		_iter_end_1aba4206c:;
	};
	return false;
}



inline _207b80eb7_Log _1c43e0cdd_make_err(jule::I64 _5213_row, jule::I64 _5223_col, jule::Ptr<_1db70b542_File>& _5234_f, jule::Str _5244_fmt, jule::Slice<jule::Any> _5257_args) {
	return _207b80eb7_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_5213_row, ._field_column=_5223_col, ._field_path=_5234_f.get()._field_path, ._field_text=_207b81407_logf(_5244_fmt,jule::Any(_5257_args)), };
}



inline jule::Slice<jule::Ptr<_1db7061a7_Token>> _1c43e1283_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1db7061a7_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1db7061a7_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_range_n = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_range_n != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1aba48e97:;
						{
							(_8213_range_n)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1aba4901e:;
						{
							(_8213_range_n)--;
						}
					}
					_match_end_1aba48c66:;
				};
			};
		}
	_iter_next_1aba47759:;
	}
	_iter_end_1aba47759:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1db7061a7_Token>>,jule::Slice<jule::Ptr<_1db7061a7_Token>>> _1c43e152a_range_last(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _10620_tokens) {
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _10640_cutted = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	jule::Slice<jule::Ptr<_1db7061a7_Token>> _10658_cut = jule::Slice<jule::Ptr<_1db7061a7_Token>>();
	if ((_10620_tokens.len() == 0LL)) {
		_10640_cutted = _10620_tokens;
		_10658_cut = nullptr;
		return std::make_tuple(_10640_cutted,_10658_cut);
	} else if ((_10620_tokens[(_10620_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10640_cutted = _10620_tokens;
		_10658_cut = nullptr;
		return std::make_tuple(_10640_cutted,_10658_cut);
	};
	jule::I64 _11313_brace_n = 0LL;;
	jule::I64 _11413_i = (_10620_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_1db7061a7_Token> _11613_token = _10620_tokens[_11413_i];;
			if ((_11613_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1aba4c64e:;
						{
							(_11313_brace_n)++;
							goto _iter_next_1aba49eed;
						}
					}
					else {
						_case_begin_1aba4d056:;
						{
							(_11313_brace_n)--;
						}
					}
					_match_end_1aba4cd47:;
				};
			};
			if ((_11313_brace_n == 0LL)) {
				_10640_cutted = _10620_tokens.slice(0LL,_11413_i);
				_10658_cut = _10620_tokens.slice(_11413_i);
				return std::make_tuple(_10640_cutted,_10658_cut);
			};
		}
	_iter_next_1aba49eed:;
	}
	_iter_end_1aba49eed:;;
	_10640_cutted = _10620_tokens;
	_10658_cut = nullptr;
	return std::make_tuple(_10640_cutted,_10658_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>,jule::Slice<_207b80eb7_Log>> _1c43e198c_parts_kind(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _13820_tokens, jule::Str _13838_kind, jule::Bool _13855_expr_must) {
	if ((_13820_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _14313_parts = nullptr;;
	jule::Slice<_207b80eb7_Log> _14413_errors = nullptr;;
	jule::I64 _14613_range_n = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13820_tokens;
		auto it = expr.begin();
		_iter_begin_1aba51741:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aba52786:;
							{
								(_14613_range_n)++;
								goto _iter_next_1aba51741;
							}
						}
						else {
							_case_begin_1aba52a61:;
							{
								(_14613_range_n)--;
							}
						}
						_match_end_1aba52852:;
					};
				};
				if ((_14613_range_n > 0LL)) {
					goto _iter_next_1aba51741;
				};
				if ((_14812_token.get()._field_kind == _13838_kind)) {
					if ((_13855_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_207b80eb7_Log _16721_err = _1c43e0cdd_make_err(_14812_token.get()._field_row,_14812_token.get()._field_column,_14812_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13820_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_1aba51741:;
			++it;
			_1489_i++;
			goto _iter_begin_1aba51741;
		}
		_iter_end_1aba51741:;
	};
	if ((_14713_last < _13820_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13820_tokens.slice(_14713_last));;
	} else if ((!(_13855_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_1db7061a7_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>>,jule::Slice<_207b80eb7_Log>> _1c43e1d77_parts(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1db7061a7_Token>>> _19513_parts = nullptr;;
	jule::Slice<_207b80eb7_Log> _19613_errors = nullptr;;
	jule::I64 _19813_range_n = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_1aba5825e:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_1db7061a7_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aba592a4:;
							{
								(_19813_range_n)++;
								goto _iter_next_1aba5825e;
							}
						}
						else {
							_case_begin_1aba5957e:;
							{
								(_19813_range_n)--;
							}
						}
						_match_end_1aba59370:;
					};
				};
				if ((_19813_range_n > 0LL)) {
					goto _iter_next_1aba5825e;
				};
				if ((_20012_token.get()._field_id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_207b80eb7_Log _21921_err = _1c43e0cdd_make_err(_20012_token.get()._field_row,_20012_token.get()._field_column,_20012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_1aba5825e:;
			++it;
			_2009_i++;
			goto _iter_begin_1aba5825e;
		}
		_iter_end_1aba5825e:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_1db7061a7_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _1c43e2141_get_close_kind_of_brace(jule::Str _23628_left) {
	{
		auto &_match_expr{ _23628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1aba5ccbe:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1aba5cd35:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1aba5cd9b:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1aba5c780:;
			{
				return jule::Str();
			}
		}
		_match_end_1aba5c6c5:;
	};
}



inline _207b80eb7_Log _1c43e2509_compiler_err(jule::Ptr<_1db7061a7_Token>& _24918_token, jule::Str& _24934_fmt, jule::Slice<jule::Any> _24947_args) {
	return _207b80eb7_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_row=_24918_token.get()._field_row, ._field_column=_24918_token.get()._field_column, ._field_path=_24918_token.get()._field_file.get()._field_path, ._field_text=_207b81407_logf(_24934_fmt,jule::Any(_24947_args)), ._field_line=_1db70c71e_get_row(_24918_token.get()._field_file.ptr(), _24918_token.get()._field_row), };
}



inline void _1c43e296b_push_suggestion(_207b80eb7_Log* _26031_log, jule::Str _26042_fmt, jule::Slice<jule::Any> _26055_args) {
	_26031_log->_field_suggestion=_207b81407_logf(_26042_fmt,jule::Any(_26055_args));
}



inline jule::Str _1c43e2c13_tokstoa(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1aba61047:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_kind.len();
			}
			_iter_next_1aba61047:;
			++it;
			goto _iter_begin_1aba61047;
		}
		_iter_end_1aba61047:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1aba61c18:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_kind;
			}
			_iter_next_1aba61c18:;
			++it;
			goto _iter_begin_1aba61c18;
		}
		_iter_end_1aba61c18:;
	};
	return _26913_s;
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c44038e4_build_void_type(void) {
	return jule::new_ptr<_1dcd69d69_TypeDecl>();
}



inline jule::Ptr<_1dcd69d69_TypeDecl> _1c4403b58_build_prim_type(jule::Ptr<_1db7061a7_Token> _2324_t) {
	return jule::new_ptr<_1dcd69d69_TypeDecl>(_1dcd69d69_TypeDecl{._field_token=_2324_t, ._field_kind=static_cast<jule::Any>(jule::new_ptr<_1dcd6a430_IdentTypeDecl>(_1dcd6a430_IdentTypeDecl{._field_token=_2324_t, ._field_ident=_2324_t.get()._field_kind, }))});
}



inline jule::I64 _1c4403e99_map_colon(jule::Slice<jule::Ptr<_1db7061a7_Token>>& _3619_tokens, jule::I64& _3642_i) {
	jule::I64 _3652_delim = jule::I64();
	_3652_delim=-1LL;
	jule::I64 _3813_range_n = 0LL;;
	for (; (_3642_i < _3619_tokens.len()); (_3642_i)++) {
		{
			jule::Ptr<_1db7061a7_Token> _4013_token = _3619_tokens[_3642_i];;
			if ((_4013_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1aa785c4b:;
						{
							(_3813_range_n)++;
							goto _iter_next_1aa785542;
						}
					}
					else {
						_case_begin_1aa78660e:;
						{
							(_3813_range_n)--;
						}
					}
					_match_end_1aa786400:;
				};
			};
			if ((_3813_range_n == 0LL)) {
				if (((_3619_tokens.len() - _3642_i) == 1LL)) {
					return _3652_delim;
				};
				if ((_3619_tokens[(_3642_i + 1LL)].get()._field_id == static_cast<jule::U64>(11LLU))) {
					_3652_delim = static_cast<jule::I64>((_3642_i + 1LL));
					return _3652_delim;
				};
				goto _iter_end_1aa785542;
			};
		}
	_iter_next_1aa785542:;
	}
	_iter_end_1aa785542:;;
	return _3652_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _1c3b38c0c_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1aa7d9a3b:;
			{
				_925_ok=_207b849b0_is_windows(_207bbe7db_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1aa7d9640:;
			{
				_925_ok=_207b84c9b_is_darwin(_207bbe7db_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1aa7d9420:;
			{
				_925_ok=_207b85043_is_linux(_207bbe7db_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1aa7d9486:;
			{
				_925_ok=_207b85b48_is_unix(_207bbe7db_OS);
			}
		}
		else {
			_case_begin_1aa7d8be4:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1aa7d9101:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1c3b33c29_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1aa7dbbb4:;
			{
				_3027_ok=_207b85362_is_i386(_207ba2c31_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1aa7db994:;
			{
				_3027_ok=_207b85609_is_amd64(_207ba2c31_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1aa7dba0a:;
			{
				_3027_ok=_207b858a1_is_arm64(_207ba2c31_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1aa7dba71:;
			{
				_3027_ok=_207b86264_is_64bit(_207ba2c31_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1aa7dbad7:;
			{
				_3027_ok=_207b85ebc_is_32bit(_207ba2c31_ARCH);
			}
		}
		else {
			_case_begin_1aa7db268:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1aa7db675:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1c3b33d5b_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_207b16b73_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _207b1690e_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _207b13dc3_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1c3b38c0c_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1c3b33c29_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_207b13dc3_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1c3b38c0c_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1c3b33c29_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1c3b33c29_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1c3b38c0c_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1c3b38c0c_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1c3b4d4b3_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_207bbe7db_OS);;
	if (_207b85b48_is_unix(_207bbe7db_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1c3b4d716_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_207ba2c31_ARCH);;
	if (_207b86264_is_64bit(_207ba2c31_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_207b85ebc_is_32bit(_207ba2c31_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1c3b4d9be_init_vars(jule::Slice<jule::Str>& _5519_vars, _1c3b4d1a5_CompileInfo& _5533_info) {
	_1c3b4d4b3_set_os_vars(_5519_vars);
	_1c3b4d716_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1abc4c3dc:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1abc4c464:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1abc4d025:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1abc4de5a:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1abc4dba2:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1abc4dc18:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1abc4de05:;
	};
}



inline jule::Slice<jule::U8> _1c4196720_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__20512e545_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_207bd17a9_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _207b80eb7_Log _1c41a0949_flat_compiler_err(jule::Str _4122_text) {
	return _207b80eb7_Log{._field_kind=static_cast<jule::I64>(1LL), ._field_text=_4122_text, };
}



inline void _1c42d92d0_push_passes(jule::Ptr<_1c2d047ad_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abc81432:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1abc81e16:;
					if (it != expr.end()) {
						_1dce40912_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1abc81e16;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1abc82c5d:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1abc81e16;
										};
									}
									_iter_next_1abc82c5d:;
									++it;
									goto _iter_begin_1abc82c5d;
								}
								_iter_end_1abc82c5d:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1abc81e16:;
						++it;
						goto _iter_begin_1abc81e16;
					}
					_iter_end_1abc81e16:;
				};
			}
			_iter_next_1abc81432:;
			++it;
			goto _iter_begin_1abc81432;
		}
		_iter_end_1abc81432:;
	};
}



inline jule::Slice<jule::Str> _1c4309773_get_all_unique_passes(jule::Ptr<_1c2d047ad_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1c2d01854_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1c42d92d0_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1abc841b0:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1c42d92d0_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1abc841b0:;
			++it;
			goto _iter_begin_1abc841b0;
		}
		_iter_end_1abc841b0:;
	};
	return _13013_passes;
}



inline _1c3b4d1a5_CompileInfo _1c4315592_build_compile_info(void) {
	_1c3b4d1a5_CompileInfo _14313_info = _1c3b4d1a5_CompileInfo{._field_prod=_204ed188c_PRODUCTION, ._field_test=_204ed0d53_TEST, };;
	{
		auto &_match_expr{ _204e247ad_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1abc859b9:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1abc85a41:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1abc85942:;
	};
	{
		auto &_match_expr{ _204ed0506_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1abc843ad:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1abc85e1a:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1abc85e81:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1abc85cd8:;
	};
	return _14313_info;
}



inline void _1a947d2a2_eliminate_defines(jule::Ptr<_1c41b3132_IR>& _28531_ir) {
	jule::Ptr<_1a944cd54_ObjectDeadCode> _28613_ocd = static__1a944d31b_new(_28531_ir);;
	_1a947ced8_elimanate(_28613_ocd);
}



inline jule::Ptr<_1dcd36671_Directive> _1a947d637_find_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _29124_directives, jule::Str _29155_tag) {
	{
		auto &expr = _29124_directives;
		auto it = expr.begin();
		_iter_begin_1abcc86ee:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_tag.get()._field_kind == _29155_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1abcc86ee:;
			++it;
			goto _iter_begin_1abcc86ee;
		}
		_iter_end_1abcc86ee:;
	};
	return nullptr;
}



inline jule::Bool _1a947d978_has_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _30119_directives, jule::Str _30150_tag) {
	return (_1a947d637_find_directive(_30119_directives,_30150_tag) != nullptr);
}



inline void _1a94825c5_eliminate_dead_code_of_scope(jule::Ptr<_1c2cd2d1e_Scope> _24137_s) {
	jule::Slice<jule::Ptr<_1c2cd55d5_Label>> _2429_labels = jule::Slice<jule::Ptr<_1c2cd55d5_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1c2cd58c1_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1c2cd58c1_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1a947e6c1_ScopeDeadCode> _24413_sdc = jule::new_ptr<_1a947e6c1_ScopeDeadCode>(_1a947e6c1_ScopeDeadCode{._field_s=_24137_s, ._field_stmts=(&(_24137_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c2cd55d5_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c2cd58c1_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1a94822d9_optimize_stmts(_24413_sdc);
	};
}



inline void _1a948285b_eliminate_scope_functions(jule::Slice<jule::Ptr<_1dce38993_Fn>>& _25435_funcs) {
	{
		auto &expr = _25435_funcs;
		auto it = expr.begin();
		_iter_begin_1abd1b9a6:;
		if (it != expr.end()) {
			jule::Ptr<_1dce38993_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1abd1c0b1:;
					if (it != expr.end()) {
						jule::Ptr<_1dce3b644_FnIns> _25621_ins = *it;
						{
							_1a94825c5_eliminate_dead_code_of_scope(_25621_ins.get()._field_scope);
						}
						_iter_next_1abd1c0b1:;
						++it;
						goto _iter_begin_1abd1c0b1;
					}
					_iter_end_1abd1c0b1:;
				};
			}
			_iter_next_1abd1b9a6:;
			++it;
			goto _iter_begin_1abd1b9a6;
		}
		_iter_end_1abd1b9a6:;
	};
}



inline void _1a9482aae_eliminate_functions_scope_package(jule::Ptr<_1c2d047ad_Package>& _26243_pkg) {
	{
		auto &expr = _26243_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abd1c578:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _26317_f = *it;
			{
				_1a948285b_eliminate_scope_functions(_26317_f.get()._field_funcs);
			}
			_iter_next_1abd1c578:;
			++it;
			goto _iter_begin_1abd1c578;
		}
		_iter_end_1abd1c578:;
	};
}



inline void _1a9482d67_eliminate_scope_package(jule::Ptr<_1c2d047ad_Package>& _26833_pkg) {
	_1a9482aae_eliminate_functions_scope_package(_26833_pkg);
}



inline void _1a9483054_eliminate_scopes(jule::Ptr<_1c41b3132_IR>& _27330_ir) {
	jule::I64 _27413_i = (_27330_ir.get()._field_used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1c2d01854_ImportInfo> _27617_u = _27330_ir.get()._field_used[_27413_i];;
			if ((!(_27617_u.get()._field_cpp_linked))) {
				_1a9482d67_eliminate_scope_package(_27617_u.get()._field_package);
			};
		}
	_iter_next_1abd1e14b:;
	}
	_iter_end_1abd1e14b:;;
	_1a9482d67_eliminate_scope_package(_27330_ir.get()._field_main);
}



inline jule::Bool _1c2e66788_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _207a6eee9_has_prefix(_39919_f,_207b167cc_join(jule::Slice<jule::Str>::make({_207ba3825_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1c2e66aa7_is_constant_valid_conditional_case(jule::Ptr<_1c2cd321a_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1abd90024:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1dcdbd1a8_Const>();;
				return (_1dce2ba0d_is_bool(_40613_c.ptr()) && _1dce29665_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1abd8ed6a:;
	};
	return false;
}



inline jule::Bool _1c2e66d82_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1abd9095e:;
			{
				jule::Ptr<_1dcdbd1a8_Const> _41513_c = _41225_expr.operator jule::Ptr<_1dcdbd1a8_Const>();;
				return (_1dce2ba0d_is_bool(_41513_c.ptr()) && (!(_1dce29665_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dce31716_BinopExprModel>>()) {
			_case_begin_1abd909c5:;
			{
				jule::Ptr<_1dce31716_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1dce31716_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1c2e66d82_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1c2e66d82_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1abd90e59:;
	};
	return false;
}



inline jule::Bool _1c2e67190_is_constant_valid_match_case(jule::Ptr<_1c2cd763c_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1abd939a6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d6d9e2_Data> &_42712_expr = *it;
			{
				if (((_1c2d6e3a5_is_const(_42712_expr.ptr()) && _1dce2ba0d_is_bool(_42712_expr.get()._field_constant.ptr())) && _1dce29665_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1abd939a6:;
			++it;
			goto _iter_begin_1abd939a6;
		}
		_iter_end_1abd939a6:;
	};
	return false;
}



inline jule::Bool _1c2e67437_is_unreachable_conditional_case(jule::Ptr<_1c2cd321a_If>& _43537_i) {
	return _1c2e66d82_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1c2e67712_is_unreachable_match_case(jule::Ptr<_1c2cd763c_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1abd956ab:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d6d9e2_Data> &_44012_expr = *it;
			{
				if ((!(_1c2e66d82_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1abd956ab:;
			++it;
			goto _iter_begin_1abd956ab;
		}
		_iter_end_1abd956ab:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1c2e6e890_check_for_bit_shift_opt(jule::Ptr<_1dce31529_OperandExprModel>& _42729_l, jule::Ptr<_1dce31529_OperandExprModel>& _42752_r) {
	jule::Bool _42776_ok = jule::Bool();
	jule::U64 _42786_x = jule::U64();
	if (((!(_1c2cd20d7_is_int(_1c2d9ec21_to_str(_42729_l.get()._field_kind.ptr())))) || (!(_1c2cd20d7_is_int(_1c2d9ec21_to_str(_42752_r.get()._field_kind.ptr())))))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	{
		auto &_match_expr{ _42752_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dcdbd1a8_Const>>()) {
			_case_begin_1abdd41ab:;
			{
				goto _match_end_1abdd4b7e;
			}
		}
		else {
			_case_begin_1abdd4cc2:;
			{
				_42776_ok = false;
				_42786_x = 0LLU;
				return std::make_tuple(_42776_ok,_42786_x);
			}
		}
		_match_end_1abdd4b7e:;
	};
	_42786_x=static_cast<jule::U64>(_1dce2a116_as_u64(_42752_r.get()._field_model.operator jule::Ptr<_1dcdbd1a8_Const>().ptr()));
	if (((_42786_x == 0LLU) || ((_42786_x & 1LL) != 0LLU))) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	jule::F64 _4419_j = _1dd9c464e_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42786_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42776_ok = false;
		_42786_x = 0LLU;
		return std::make_tuple(_42776_ok,_42786_x);
	};
	_42776_ok = true;
	_42786_x = _4429_z;
	return std::make_tuple(_42776_ok,_42786_x);
}



inline void _1c2e71b28_push_opt_level(jule::I64 _3223_level) {
	_1c2e70154_COPY=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e704a6_DEADCODE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e707b4_APPEND=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e70b16_MATH=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e70e24_ACCESS=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e71232_INLINE=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e71540_PTR=(_3223_level >= static_cast<jule::I64>(1LL));
	_1c2e7195d_COND=(_3223_level >= static_cast<jule::I64>(1LL));
}



inline void _1a9423b2c_detect_enabled(void) {
	_1c4427495_expr_enabled=(((_1c2e71540_PTR || _1c2e70b16_MATH) || _1c2e70e24_ACCESS) || _1c2e7195d_COND);
	_1c44285ea_scope_enabled=((_1c2e7195d_COND || _1c2e707b4_APPEND) || _1c2e70154_COPY);
}



inline void _1a94a07d0_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_207bd17a9_exit(1LL);
}



inline jule::U64 _1a9a77439_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1a9a7777a_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1a9a77b10_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1abe61920:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1abe61a74:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1abe61ada:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1abe61b51:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1abe61bb7:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1abe61c2d:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1abe61c94:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1abe61d0a:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1abe61d71:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1abe61dd7:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1abe61e5e:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1abe618ba:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1a9a01a45_is_copy_optimizable(jule::Ptr<_1c2d6d9e2_Data>& _74125_expr) {
	if ((!(_74125_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74125_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1dce33020_SlicingExprModel>>()) {
			_case_begin_1abee17d5:;
			{
				return false;
			}
		}
		_match_end_1abee1d02:;
	};
	return true;
}



inline jule::Bool _1a9a01dec_is_iter_copy_optimizable(jule::Ptr<_1c2d6d9e2_Data>& _75230_expr, jule::Ptr<_1c2d266ae_Var>& _75244_v) {
	if (((!(_75230_expr.get()._field_lvalue)) && (!(_1c2da0c22_mutable(_75230_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_75244_v.get()._field_mutable)) && (!(_75230_expr.get()._field_mutable)));
}



inline jule::Str _1a9a10009_decompose_common_esq(jule::U8 _114125_b) {
	{
		auto &_match_expr{ _114125_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ac097638:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ac09769e:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ac097902:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ac097968:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ac0979ce:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ac097a45:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ac097abc:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ac097b44:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ac097bbb:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ac097c43:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1ac0974c3:;
			{
				return jule::Str();
			}
		}
		_match_end_1ac097418:;
	};
}



inline jule::Str _1a9a102e5_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1a9a10009_decompose_common_esq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1c2c3bb46_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1a9a1058c_cstr_bytes(jule::Slice<jule::U8> _118815_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118815_bytes.len());;
	{
		auto &expr = _118815_bytes;
		auto it = expr.begin();
		_iter_begin_1ac09d2cb:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1a9a102e5_sbtoa(_119012_b);
			}
			_iter_next_1ac09d2cb:;
			++it;
			goto _iter_begin_1ac09d2cb;
		}
		_iter_end_1ac09d2cb:;
	};
	return _118913_lit;
}



inline jule::Str _1a9a108ab_cstr_lit(jule::Slice<jule::U8> _119613_bytes) {
	return ((jule::Str("\"", 1) + _1a9a1058c_cstr_bytes(_119613_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1a9a10bb9_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1a9a10e61_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1a9a11208_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1c2c26108_fmt_float(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_207b14742_contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1a9a10e61_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1ac0a2445:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1ac0a24cd:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1ac0a2324:;
	};
	jule::Str _12249_fmt = _1c2c3becb_fmt_int(_12169_x,10LL);;
	if (_207b86264_is_64bit(jule::Str("arm64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1a9a11208_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1ac0a426b:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1ac0a415b:;
	};
	jule::Str _12379_fmt = _1c2c3bb46_fmt_uint(_12319_x,10LL);;
	if (_207b86264_is_64bit(jule::Str("arm64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1a9a115b0_is_forwarded(jule::Ptr<_1c2cd2d1e_Scope>& _124418_s) {
	jule::Any _12459_last = _124418_s.get()._field_stmts[(_124418_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1c2d6d9e2_Data>>()) {
			_case_begin_1ac0a6548:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1c2d6d9e2_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1dce354ea_BuiltinErrorCallExprModel>>()) {
						_case_begin_1ac0a715e:;
						{
							return true;
						}
					}
					else {
						_case_begin_1ac0a70e8:;
						{
							return false;
						}
					}
					_match_end_1ac0a6d2e:;
				};
			}
		}
		else {
			_case_begin_1ac0a648d:;
			{
				return true;
			}
		}
		_match_end_1ac0a6438:;
	};
}



inline jule::Bool _1a9a11879_is_builtin_call_has_debuginf(jule::Ptr<_1dce32393_FnCallExprModel>& _125934_m) {
	if ((!(_1dce3c9ca_is_builtin(_125934_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125934_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>>()) {
			_case_begin_1ac0a7deb:;
			{
				jule::Ptr<_1dce33dcd_CommonSubIdentExprModel> _126513_csie = _125934_m.get()._field_expr.operator jule::Ptr<_1dce33dcd_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1ac0a6acb:;
			{
				return false;
			}
		}
		_match_end_1ac0a6a76:;
	};
}



inline void _1a9a7c9b1_iter_files(jule::Ptr<_1c2d047ad_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1c2d68c84_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac1e3498:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d68c84_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1ac1e3498:;
			++it;
			goto _iter_begin_1ac1e3498;
		}
		_iter_end_1ac1e3498:;
	};
}



inline void _1a9a7cc14_prepare_structure(jule::Ptr<_1dcd5a596_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac1e40ae:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd868e1_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ac1e47c9:;
					if (it != expr.end()) {
						jule::Ptr<_1dce38993_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1ac1e47c9;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1ac1e55aa:;
								if (it != expr.end()) {
									jule::Ptr<_1dce3b644_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1dce3a775_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1dce379e7_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1a9a7dbc1_CustomType>(_1a9a7dbc1_CustomType{._field_kind=static__1a9a853d1_as_ptr(static__1a9a888ce_kind(_101425_p.get()._field_kind))}), 13)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1c2d9e825_TypeKind>(_1c2d9e825_TypeKind{._field_kind=jule::Trait<_1c2d9e3e6_Kind>(jule::new_ptr<_1a9a7dbc1_CustomType>(_1a9a7dbc1_CustomType{._field_kind=static__1a9a888ce_kind(_101425_p.get()._field_kind)}), 13)});
										};
									}
									_iter_next_1ac1e55aa:;
									++it;
									goto _iter_begin_1ac1e55aa;
								}
								_iter_end_1ac1e55aa:;
							};
						}
						_iter_next_1ac1e47c9:;
						++it;
						goto _iter_begin_1ac1e47c9;
					}
					_iter_end_1ac1e47c9:;
				};
			}
			_iter_next_1ac1e40ae:;
			++it;
			goto _iter_begin_1ac1e40ae;
		}
		_iter_end_1ac1e40ae:;
	};
}



inline jule::Str _1a9a7ceab_concat_all_parts(jule::Slice<jule::Ptr<_1db7061a7_Token>> _103421_parts) {
	jule::I64 _103513_n = 0LL;;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1ac1e45cb:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_103612_part = *it;
			{
				_103513_n+=_103612_part.get()._field_kind.len();
			}
			_iter_next_1ac1e45cb:;
			++it;
			goto _iter_begin_1ac1e45cb;
		}
		_iter_end_1ac1e45cb:;
	};
	if ((_103513_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104213_s = jule::Str::alloc(_103513_n);;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1ac1e9070:;
		if (it != expr.end()) {
			jule::Ptr<_1db7061a7_Token> &_104312_p = *it;
			{
				_104213_s+=_104312_p.get()._field_kind;
			}
			_iter_next_1ac1e9070:;
			++it;
			goto _iter_begin_1ac1e9070;
		}
		_iter_end_1ac1e9070:;
	};
	return _104213_s;
}



inline jule::Ptr<_1dcd36671_Directive> _1a9a8b23e_find_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _32924_directives, jule::Str _32955_tag) {
	{
		auto &expr = _32924_directives;
		auto it = expr.begin();
		_iter_begin_1ac2b2d92:;
		if (it != expr.end()) {
			jule::Ptr<_1dcd36671_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_tag.get()._field_kind == _32955_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1ac2b2d92:;
			++it;
			goto _iter_begin_1ac2b2d92;
		}
		_iter_end_1ac2b2d92:;
	};
	return nullptr;
}



inline jule::Bool _1a9a8b5c4_has_directive(jule::Slice<jule::Ptr<_1dcd36671_Directive>>& _33919_directives, jule::Str _33950_tag) {
	return (_1a9a8b23e_find_directive(_33919_directives,_33950_tag) != nullptr);
}



inline void _207b4c9de_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _207b63043_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_207b4c9de_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _207b56b19_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _207b56b19_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1ac3403b4:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1ac3403b4:;
			++it;
			goto _iter_begin_1ac3403b4;
		}
		_iter_end_1ac3403b4:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _207b56b19_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1ac342031:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_207a6542e_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1ac342031:;
			++it;
			_519_i++;
			goto _iter_begin_1ac342031;
		}
		_iter_end_1ac342031:;
	};
	jule::outln(_4913_s);
}



inline void _207b64907_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_207b4c9de_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _207b65155_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _207b843c7_DISTOS;
		auto it = expr.begin();
		_iter_begin_1ac3454a7:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1ac3454a7:;
			++it;
			goto _iter_begin_1ac3454a7;
		}
		_iter_end_1ac3454a7:;
	};
	jule::outln(jule::Str());
}



inline void _207b658a3_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _207b8475c_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1ac345be4:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1ac345be4:;
			++it;
			goto _iter_begin_1ac345be4;
		}
		_iter_end_1ac345be4:;
	};
	jule::outln(jule::Str());
}



inline void _207b66101_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_207b4c9de_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1ac348dd4:;
			{
				_207b65155_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1ac348ac6:;
			{
				_207b658a3_tool_distarch();
			}
		}
		else {
			_case_begin_1ac347399:;
			{
				_207b4c9de_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1ac34890b:;
	};
}



inline void _207b6684e_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_207b4c9de_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _204e247ad_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _204ed0506_CPP_STD));
}



inline void _207b4d8e1_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_207b4c9de_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1ac34d449:;
			{
				({
					auto except = static__205130029_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_207b4c9de_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1ac34bc72:;
			{
				_207b4c9de_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1ac34ced7:;
	};
}



inline jule::Bool _207b7332d_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1ac34e69d:;
			{
				_207b63043_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1ac34e714:;
			{
				_207b64907_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1ac34e77a:;
			{
				_207b66101_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1ac34ee62:;
			{
				_207b6684e_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1ac34eec8:;
			{
				_207b4d8e1_mod(_15121_args);
			}
		}
		else {
			_case_begin_1ac34e5c1:;
			{
				return false;
			}
		}
		_match_end_1ac34e505:;
	};
	return true;
}



inline void _207b6ba1e_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _205ea2c7a_args();;
	if ((_18713_args.len() < 2LL)) {
		_207b6ba1e_show_info();
		return;;
	};
	if (_207b7332d_process_command(_18713_args)) {
		return;;
	};
	_1a9abe4a3_compile_command(_18713_args);
}



inline void _207b54a29_enable_vtp(void) {
	jule::Uintptr _199_h_out = _205d1c84d_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dw_mode = 0LL;;
	if ((!(_205d20554_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_205d20895_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _207b67388_init(void) {
	_207b54a29_enable_vtp();
}



inline void _1a952ebd3_init(void) {
	_204e247ad_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_205d30ac5_File> _1a98c350a_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _207b16ca5_dir(_4817_path);;
	({
		auto except = static__207b1758b_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__207b1714b_create(_499_dir);
				if (!except.ok()) {
					_1a94a07d0_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20512d9b7_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1a94a07d0_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1a9a90210_clear_objects(void) {
	({
		auto except = static__205d8a316_remove(_1a98c286c_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__207b1727d_remove(_1a9a8ca04_OUT_DIR);
}



inline void _1a9a91cb1_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_207bc0ba5_Cmd> _7813_cmd = static__207bc10d4_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_207b14610_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _819_status = ({
		auto except = _207bc1348_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1ac3593bc:;
					{
						static__1a949d080_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1ac358b91:;
					{
						static__1a949d080_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1ac358e05:;
					{
						static__1a949d080_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1ac358e6b:;
					{
						static__1a949d080_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1ac358cd4:;
					{
						static__1a949d080_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1ac358c29:;
			};
			_1a94a07d0_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _204e247ad_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a949d080_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1a94a07d0_throw(jule::Str());
	};
	_1a9a90210_clear_objects();
}



inline jule::Bool _1a9a9ce98_is_cpp_source_file(jule::Str _10923_path) {
	jule::I64 _1109_offset = _207b13dc3_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _207b747e6_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1a9a8d571_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _204ed0506_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac35dcc8:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac35dd3e:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac35de93:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1ac35db85:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_204ed188c_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1a9a8b816_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _204ed0506_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac361517:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac36157d:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac3616d2:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1ac3613c4:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_204ed188c_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1a982d1ce_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1c41b3132_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _204ed0292_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _204e247ad_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac363e21:;
			{
				_1a9a8b816_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac364471:;
			{
				_1a9a8d571_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1ac36420c:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1ac3647b2:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1ac3647b2:;
			++it;
			goto _iter_begin_1ac3647b2;
		}
		_iter_end_1ac3647b2:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac365b8c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2d01854_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1a9a9ce98_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1ac365b8c:;
			++it;
			goto _iter_begin_1ac365b8c;
		}
		_iter_end_1ac365b8c:;
	};
	if ((!(_1a9a93e6c_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1a9a93e6c_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1a98c286c_get_compile_path(void) {
	return _207b167cc_join(jule::Slice<jule::Str>::make({_1a9a8ca04_OUT_DIR,_1a9a92476_OUT_NAME}));
}



inline void _1a96a21a7_apply_target_independent_optimizations(jule::Ptr<_1c41b3132_IR>& _21048_ir) {
	jule::Ptr<_1a9457e80_Optimizer> _21213_opt = static__1c4427b8d_new(_21048_ir);;
	_1a9422400_optimize(_21213_opt.ptr());
}



inline void _1a98c57a4_check_compiler_flag(void) {
	{
		auto &_match_expr{ _204e247ad_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ac367b5b:;
			{
				_1a94a07d0_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac368398:;
			{
				if (_204ed0292_COMPILER_PATH.empty()) {
					_204ed0292_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac36840e:;
			{
				if (_204ed0292_COMPILER_PATH.empty()) {
					_204ed0292_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1ac368332:;
			{
				_1a94a07d0_throw((jule::Str("invalid option value for --compiler: ", 37) + _204e247ad_COMPILER));
			}
		}
		_match_end_1ac368068:;
	};
}



inline void _1a9a98c52_check_target_arch(jule::Str _23322_arch) {
	{
		auto &expr = _207b8475c_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1ac36a114:;
		if (it != expr.end()) {
			jule::Str &_23412_distarch = *it;
			{
				if ((_23322_arch == _23412_distarch)) {
					return;;
				};
			}
			_iter_next_1ac36a114:;
			++it;
			goto _iter_begin_1ac36a114;
		}
		_iter_end_1ac36a114:;
	};
	_1a94a07d0_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23322_arch));
}



inline void _1a9abd903_check_target_os(jule::Str _24220_os) {
	{
		auto &expr = _207b843c7_DISTOS;
		auto it = expr.begin();
		_iter_begin_1ac36b368:;
		if (it != expr.end()) {
			jule::Str &_24312_distos = *it;
			{
				if ((_24220_os == _24312_distos)) {
					return;;
				};
			}
			_iter_next_1ac36b368:;
			++it;
			goto _iter_begin_1ac36b368;
		}
		_iter_end_1ac36b368:;
	};
	_1a94a07d0_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24220_os));
}



inline void _1a9abda35_check_target_flag(jule::Str& _25123_target) {
	if (_25123_target.empty()) {
		_1a94a07d0_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2569_parts = _207b14610_split(_25123_target,jule::Str("-", 1),-1LL);;
	if ((_2569_parts.len() != 2LL)) {
		_1a94a07d0_throw((jule::Str("--target: undefined platform target format: ", 44) + _25123_target));
	};
	jule::Str _26110_os = _2569_parts[0LL];;
	jule::Str _26114_arch = _2569_parts[1LL];;
	std::tie(_26110_os,_26114_arch) = std::make_tuple(_2569_parts[0LL],_2569_parts[1LL]);
	if ((_26110_os != jule::Str("native", 6))) {
		_1a9abd903_check_target_os(_26110_os);
		_207bbe7db_OS=_26110_os;
	};
	if ((_26114_arch != jule::Str("native", 6))) {
		_1a9a98c52_check_target_arch(_26114_arch);
		_207ba2c31_ARCH=_26114_arch;
	};
	_1c2cc74ea_update_target();
}



inline void _1a9abdb67_check_opt_flag(jule::Str& _27420_opt) {
	if (_27420_opt.empty()) {
		_1a94a07d0_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27420_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1ac370a76:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1ac3710c6:;
			{
				_1c2e71b28_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1ac370856:;
			{
				_1a94a07d0_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27420_opt));
			}
		}
		_match_end_1ac370801:;
	};
}



inline void _1a9abdeca_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _204ed0506_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac37113c:;
			{
				goto _match_end_1ac371e40;
			}
		}
		else {
			_case_begin_1ac371a55:;
			{
				_1a94a07d0_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _204ed0506_CPP_STD));
			}
		}
		_match_end_1ac371e40:;
	};
}



inline jule::Slice<jule::Str> _1a9abe10c_check_flags(jule::Slice<jule::Str>& _29917_args) {
	jule::Str _30013_opt = jule::Str("L0", 2);;
	jule::Str _30113_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a9ab9b1e_FlagSet> _30313_fs = static__1a9ab9e0a_new();;
	_1ac374519_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30013_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1ac374519_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30113_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1ac374519_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a9a93e6c_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_204ed076a_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_204ed0a45_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1ac374519_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_204e247ad_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1ac374519_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_204ed0292_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_204ed188c_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_204ed1161_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_204ed157e_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1ac374519_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_204ed0506_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e70154_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e704a6_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e707b4_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e70b16_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e70e24_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e71232_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e71540_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1ac37d149_add_var(_30313_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c2e7195d_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32513_content = ({
		auto except = _1a9abac1e_parse(_30313_fs.ptr(), _29917_args);
		(except.ok()) ? (except.result) : ({
			_1a94a07d0_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1a98c57a4_check_compiler_flag();
	_1a9abdeca_check_cpp_std_flag();
	_1a9abda35_check_target_flag(_30113_target);
	_1a9abdb67_check_opt_flag(_30013_opt);
	return _32513_content;
}



inline void _1a9abe23e_setup_sema_flags(jule::I64& _33826_flags) {
	if (_204ed076a_SHADOWING) {
		_33826_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c41b3132_IR> _1a9abe371_build_ir(jule::Slice<jule::Str>& _34414_args) {
	jule::Slice<jule::Str> _3459_content = _1a9abe10c_check_flags(_34414_args);;
	jule::I64 _34713_sema_flags = static_cast<jule::I64>(0LL);;
	_1a9abe23e_setup_sema_flags(_34713_sema_flags);
	if ((_3459_content.len() == 0LL)) {
		_1a94a07d0_throw(_207b81407_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3459_content.len() > 1LL)) {
		_1a94a07d0_throw((jule::Str("undefined content: ", 19) + _3459_content[1LL]));
	};
	jule::Str _35514_path;;
	jule::Bool _35520_ok;;
	std::tie(_35514_path,_35520_ok) = _207b16a41_abs(_3459_content[0LL]);
	if ((!(_35520_ok))) {
		_1a94a07d0_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_205d30e8d_Status> _3619_inf = ({
		auto except = static__207b1758b_of(_207ba3825_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1a94a07d0_throw(_207b81407_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_205d30e8d_Status>();});
	});;
	if ((!(_205134160_is_dir(_3619_inf.ptr())))) {
		_1a94a07d0_throw(_207b81407_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c41b3132_IR> _36914_ir;;
	jule::Slice<_207b80eb7_Log> _36918_logs;;
	std::tie(_36914_ir,_36918_logs) = static__1c427e64e_build(_35514_path,_34713_sema_flags);
	if (((_36914_ir == nullptr) && (_36918_logs == nullptr))) {
		_1a94a07d0_throw(_207b81407_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35514_path)})));
	};
	if ((_36918_logs != nullptr)) {
		static__1a949ed62_print_logs(_36918_logs);
		_1a94a07d0_throw(jule::Str());
	};
	return _36914_ir;
}



inline void _1a9abe4a3_compile_command(jule::Slice<jule::Str>& _38425_args) {
	_38425_args=_38425_args.slice(1LL);
	if ((_38425_args[0LL] == jule::Str("test", 4))) {
		_204ed0d53_TEST=true;
		_38425_args=_38425_args.slice(1LL);
	};
	jule::Ptr<_1c41b3132_IR> _39013_ir = _1a9abe371_build_ir(_38425_args);;
	;
	if ((!(_204ed0d53_TEST))) {
		jule::Ptr<_1dce38993_Fn> _39517_main = _1c2d06062_find_fn(_39013_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39517_main == nullptr)) {
			_1a94a07d0_throw(_207b81407_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1a96a21a7_apply_target_independent_optimizations(_39013_ir);
	_1c42d550c_order(_39013_ir.ptr());
	jule::Str _40610_compiler;;
	jule::Str _40620_compiler_cmd;;
	std::tie(_40610_compiler,_40620_compiler_cmd) = _1a982d1ce_gen_compile_cmd(_1a98c286c_get_compile_path(),_39013_ir);
	jule::Ptr<_1a9a7814e_ObjectCoder> _40813_oc = static__1a9a5b176_new(_39013_ir,_1a9a77c75_SerializationInfo{._field_compiler=_40610_compiler, ._field_compiler_command=_40620_compiler_cmd});;
	if (_204ed0d53_TEST) {
		jule::Ptr<_1a9a13392_TestCoder> _41317_tc = static__1a9a13815_new(_40813_oc);;
		_1a9a14a47_serialize(_41317_tc);
	} else {
		_1a9a7c64d_serialize(_40813_oc);
	};
	jule::Str _4199_path = _1a98c286c_get_compile_path();;
	jule::Ptr<_205d30ac5_File> _42013_file = _1a98c350a_open_output(_4199_path);;
	({
		auto except = _205db4a7c_write(_42013_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40813_oc.get()._field_obj));
		if (!except.ok()) {
			_1a94a07d0_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2051320d6_close(_42013_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:424:5"));
	});
	if ((!(_204ed0a45_TRANSPILATION))) {
		_1a9a91cb1_compile_ir(_40610_compiler,_40620_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_207b93628_init();
	_1c2cc7660_init();
	_207b67388_init();
	_1a952ebd3_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}